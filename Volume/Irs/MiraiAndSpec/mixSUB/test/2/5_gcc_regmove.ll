; ModuleID = 'host/ir_bcf/gcc_regmove.ll'
source_filename = "regmove.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.recog_data = type { [30 x %struct.rtx_def*], [30 x %struct.rtx_def**], [30 x i8*], [30 x i32], [30 x i32], [4 x %struct.rtx_def**], [4 x i8], i8, i8, i8, %struct.rtx_def* }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.match = type { [30 x i32], [30 x i32], [30 x i32], [30 x i32] }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.reg_info_def = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.csa_memlist = type { i64, %struct.rtx_def*, %struct.rtx_def**, %struct.csa_memlist* }
%struct.record_stack_memrefs_data = type { %struct.rtx_def*, %struct.csa_memlist* }

@flag_non_call_exceptions = external global i32, align 4
@regno_src_regno = internal global i32* null, align 8
@regmove_bb_head = internal global i32* null, align 8
@n_basic_blocks = external global i32, align 4
@basic_block_info = external global %struct.varray_head_tag*, align 8
@flag_regmove = external global i32, align 4
@flag_expensive_optimizations = external global i32, align 4
@.str = private unnamed_addr constant [21 x i8] c"Starting %s pass...\0A\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"backward\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"forward\00", align 1
@rtx_class = external constant [153 x i8], align 16
@recog_data = external global %struct.recog_data, align 8
@mode_size = external constant [59 x i8], align 16
@reg_n_info = external global %struct.varray_head_tag*, align 8
@.str.3 = private unnamed_addr constant [27 x i8] c"Starting backward pass...\0A\00", align 1
@.str.4 = private unnamed_addr constant [54 x i8] c"Could fix operand %d of insn %d matching operand %d.\0A\00", align 1
@.str.5 = private unnamed_addr constant [50 x i8] c"Fixed operand %d of insn %d matching operand %d.\0A\00", align 1
@global_rtl = external global [11 x %struct.rtx_def*], align 16
@mode_class = external constant [59 x i32], align 16
@target_flags = external global i32, align 4
@flags_set_1_rtx = internal global %struct.rtx_def* null, align 8
@flags_set_1_set = internal global i32 0, align 4
@word_mode = external global i32, align 4
@mode_bitsize = external constant [59 x i16], align 16
@.str.6 = private unnamed_addr constant [27 x i8] c"Fixed operand of insn %d.\0A\00", align 1
@call_used_regs = external global [53 x i8], align 16
@cfun = external global %struct.function*, align 8
@which_alternative = external global i32, align 4
@rtx_format = external constant [153 x i8*], align 16
@rtx_length = external constant [153 x i8], align 16
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0

; Function Attrs: noinline nounwind uwtable
define void @regmove_optimize(%struct.rtx_def*, i32, %struct._IO_FILE*) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.rtx_def*, align 8
  %9 = alloca %struct.match, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %struct.rtx_def*, align 8
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %struct.rtx_def*, align 8
  %19 = alloca %struct.rtx_def*, align 8
  %20 = alloca %struct.rtx_def*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %struct.rtx_def*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %struct.rtx_def*, align 8
  %28 = alloca %struct.rtx_def*, align 8
  %29 = alloca %struct.rtx_def*, align 8
  %30 = alloca %struct.rtx_def*, align 8
  %31 = alloca %struct.rtx_def*, align 8
  %32 = alloca %struct.rtx_def*, align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca %struct.rtx_def*, align 8
  %38 = alloca %struct.rtx_def*, align 8
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca %struct.rtx_def*, align 8
  %42 = alloca %struct.rtx_def*, align 8
  %43 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %4, align 8
  store i32 %1, i32* %5, align 4
  store %struct._IO_FILE* %2, %struct._IO_FILE** %6, align 8
  %44 = call i32 @get_max_uid()
  store i32 %44, i32* %7, align 4
  %45 = load i32, i32* @flag_non_call_exceptions, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %64

; <label>:47:                                     ; preds = %3
  %48 = load i32, i32* @x
  %49 = load i32, i32* @y
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %47
  %56 = load i32, i32* @x
  %57 = load i32, i32* @y
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %2578

; <label>:64:                                     ; preds = %3
  %65 = call %struct.rtx_def* @discover_flags_reg()
  call void @mark_flags_life_zones(%struct.rtx_def* %65)
  %66 = load i32, i32* %5, align 4
  %67 = sext i32 %66 to i64
  %68 = mul i64 4, %67
  %69 = call noalias i8* @xmalloc(i64 %68)
  %70 = bitcast i8* %69 to i32*
  store i32* %70, i32** @regno_src_regno, align 8
  %71 = load i32, i32* %5, align 4
  store i32 %71, i32* %11, align 4
  br label %72

; <label>:72:                                     ; preds = %originalBBpart210, %64
  %73 = load i32, i32* @x
  %74 = load i32, i32* @y
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %72
  %81 = load i32, i32* %11, align 4
  %82 = add nsw i32 %81, -1
  store i32 %82, i32* %11, align 4
  %83 = icmp sge i32 %82, 0
  %84 = load i32, i32* @x
  %85 = load i32, i32* @y
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart26, label %originalBB1alteredBB

originalBBpart26:                                 ; preds = %originalBB1
  br i1 %83, label %92, label %113

; <label>:92:                                     ; preds = %originalBBpart26
  %93 = load i32, i32* @x
  %94 = load i32, i32* @y
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB8, label %originalBB8alteredBB

originalBB8:                                      ; preds = %originalBB8alteredBB, %92
  %101 = load i32*, i32** @regno_src_regno, align 8
  %102 = load i32, i32* %11, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %101, i64 %103
  store i32 -1, i32* %104, align 4
  %105 = load i32, i32* @x
  %106 = load i32, i32* @y
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart210, label %originalBB8alteredBB

originalBBpart210:                                ; preds = %originalBB8
  br label %72

; <label>:113:                                    ; preds = %originalBBpart26
  %114 = load i32, i32* %7, align 4
  %115 = add nsw i32 %114, 1
  %116 = sext i32 %115 to i64
  %117 = mul i64 4, %116
  %118 = call noalias i8* @xmalloc(i64 %117)
  %119 = bitcast i8* %118 to i32*
  store i32* %119, i32** @regmove_bb_head, align 8
  %120 = load i32, i32* %7, align 4
  store i32 %120, i32* %11, align 4
  br label %121

; <label>:121:                                    ; preds = %originalBBpart215, %113
  %122 = load i32, i32* %11, align 4
  %123 = icmp sge i32 %122, 0
  br i1 %123, label %124, label %148

; <label>:124:                                    ; preds = %121
  %125 = load i32*, i32** @regmove_bb_head, align 8
  %126 = load i32, i32* %11, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i32, i32* %125, i64 %127
  store i32 -1, i32* %128, align 4
  br label %129

; <label>:129:                                    ; preds = %124
  %130 = load i32, i32* @x
  %131 = load i32, i32* @y
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %originalBB12alteredBB, %129
  %138 = load i32, i32* %11, align 4
  %139 = add nsw i32 %138, -1
  store i32 %139, i32* %11, align 4
  %140 = load i32, i32* @x
  %141 = load i32, i32* @y
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart215, label %originalBB12alteredBB

originalBBpart215:                                ; preds = %originalBB12
  br label %121

; <label>:148:                                    ; preds = %121
  store i32 0, i32* %11, align 4
  br label %149

; <label>:149:                                    ; preds = %171, %148
  %150 = load i32, i32* %11, align 4
  %151 = load i32, i32* @n_basic_blocks, align 4
  %152 = icmp slt i32 %150, %151
  br i1 %152, label %153, label %174

; <label>:153:                                    ; preds = %149
  %154 = load i32, i32* %11, align 4
  %155 = load i32*, i32** @regmove_bb_head, align 8
  %156 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %157 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %156, i32 0, i32 4
  %158 = bitcast %union.varray_data_tag* %157 to [1 x %struct.basic_block_def*]*
  %159 = load i32, i32* %11, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %158, i64 0, i64 %160
  %162 = load %struct.basic_block_def*, %struct.basic_block_def** %161, align 8
  %163 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %162, i32 0, i32 0
  %164 = load %struct.rtx_def*, %struct.rtx_def** %163, align 8
  %165 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1
  %166 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %165, i64 0, i64 0
  %167 = bitcast %union.rtunion_def* %166 to i32*
  %168 = load i32, i32* %167, align 8
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i32, i32* %155, i64 %169
  store i32 %154, i32* %170, align 4
  br label %171

; <label>:171:                                    ; preds = %153
  %172 = load i32, i32* %11, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %11, align 4
  br label %149

; <label>:174:                                    ; preds = %149
  store i32 0, i32* %10, align 4
  br label %175

; <label>:175:                                    ; preds = %1156, %174
  %176 = load i32, i32* %10, align 4
  %177 = icmp sle i32 %176, 2
  br i1 %177, label %178, label %1159

; <label>:178:                                    ; preds = %175
  %179 = load i32, i32* @flag_regmove, align 4
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %186, label %181

; <label>:181:                                    ; preds = %178
  %182 = load i32, i32* %10, align 4
  %183 = load i32, i32* @flag_expensive_optimizations, align 4
  %184 = icmp sge i32 %182, %183
  br i1 %184, label %185, label %186

; <label>:185:                                    ; preds = %181
  br label %2573

; <label>:186:                                    ; preds = %181, %178
  %187 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %188 = icmp ne %struct._IO_FILE* %187, null
  br i1 %188, label %189, label %211

; <label>:189:                                    ; preds = %186
  %190 = load i32, i32* @x
  %191 = load i32, i32* @y
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %189
  %198 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %199 = load i32, i32* %10, align 4
  %200 = icmp ne i32 %199, 0
  %201 = select i1 %200, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0)
  %202 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %198, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0), i8* %201)
  %203 = load i32, i32* @x
  %204 = load i32, i32* @y
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %211

; <label>:211:                                    ; preds = %originalBBpart219, %186
  %212 = load i32, i32* @x
  %213 = load i32, i32* @y
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %originalBB21alteredBB, %211
  %220 = load i32, i32* %10, align 4
  %221 = icmp ne i32 %220, 0
  %222 = load i32, i32* @x
  %223 = load i32, i32* @y
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br i1 %221, label %230, label %232

; <label>:230:                                    ; preds = %originalBBpart223
  %231 = call %struct.rtx_def* @get_last_insn()
  br label %250

; <label>:232:                                    ; preds = %originalBBpart223
  %233 = load i32, i32* @x
  %234 = load i32, i32* @y
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %originalBB25alteredBB, %232
  %241 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %242 = load i32, i32* @x
  %243 = load i32, i32* @y
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br label %250

; <label>:250:                                    ; preds = %originalBBpart227, %230
  %251 = phi %struct.rtx_def* [ %231, %230 ], [ %241, %originalBBpart227 ]
  store %struct.rtx_def* %251, %struct.rtx_def** %8, align 8
  br label %252

; <label>:252:                                    ; preds = %1153, %250
  %253 = load i32, i32* @x
  %254 = load i32, i32* @y
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %252
  %261 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %262 = icmp ne %struct.rtx_def* %261, null
  %263 = load i32, i32* @x
  %264 = load i32, i32* @y
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %262, label %271, label %1155

; <label>:271:                                    ; preds = %originalBBpart231
  %272 = load i32, i32* @x
  %273 = load i32, i32* @y
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %271
  %280 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %281 = bitcast %struct.rtx_def* %280 to i32*
  %282 = load i32, i32* %281, align 8
  %283 = and i32 %282, 65535
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %284
  %286 = load i8, i8* %285, align 1
  %287 = sext i8 %286 to i32
  %288 = icmp eq i32 %287, 105
  %289 = load i32, i32* @x
  %290 = load i32, i32* @y
  %291 = sub i32 %289, 1
  %292 = mul i32 %289, %291
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %294, %295
  br i1 %296, label %originalBBpart238, label %originalBB33alteredBB

originalBBpart238:                                ; preds = %originalBB33
  br i1 %288, label %297, label %323

; <label>:297:                                    ; preds = %originalBBpart238
  %298 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %299 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %298, i32 0, i32 1
  %300 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %299, i64 0, i64 3
  %301 = bitcast %union.rtunion_def* %300 to %struct.rtx_def**
  %302 = load %struct.rtx_def*, %struct.rtx_def** %301, align 8
  %303 = bitcast %struct.rtx_def* %302 to i32*
  %304 = load i32, i32* %303, align 8
  %305 = and i32 %304, 65535
  %306 = icmp eq i32 %305, 47
  br i1 %306, label %307, label %313

; <label>:307:                                    ; preds = %297
  %308 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %308, i32 0, i32 1
  %310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %309, i64 0, i64 3
  %311 = bitcast %union.rtunion_def* %310 to %struct.rtx_def**
  %312 = load %struct.rtx_def*, %struct.rtx_def** %311, align 8
  br label %321

; <label>:313:                                    ; preds = %297
  %314 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %315 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %316 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %315, i32 0, i32 1
  %317 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %316, i64 0, i64 3
  %318 = bitcast %union.rtunion_def* %317 to %struct.rtx_def**
  %319 = load %struct.rtx_def*, %struct.rtx_def** %318, align 8
  %320 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %314, %struct.rtx_def* %319)
  br label %321

; <label>:321:                                    ; preds = %313, %307
  %322 = phi %struct.rtx_def* [ %312, %307 ], [ %320, %313 ]
  br label %324

; <label>:323:                                    ; preds = %originalBBpart238
  br label %324

; <label>:324:                                    ; preds = %323, %321
  %325 = phi %struct.rtx_def* [ %322, %321 ], [ null, %323 ]
  store %struct.rtx_def* %325, %struct.rtx_def** %14, align 8
  %326 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %327 = icmp ne %struct.rtx_def* %326, null
  br i1 %327, label %329, label %328

; <label>:328:                                    ; preds = %324
  br label %1122

; <label>:329:                                    ; preds = %324
  %330 = load i32, i32* @x
  %331 = load i32, i32* @y
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %originalBB40alteredBB, %329
  %338 = load i32, i32* @flag_expensive_optimizations, align 4
  %339 = icmp ne i32 %338, 0
  %340 = load i32, i32* @x
  %341 = load i32, i32* @y
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBBpart242, label %originalBB40alteredBB

originalBBpart242:                                ; preds = %originalBB40
  br i1 %339, label %348, label %455

; <label>:348:                                    ; preds = %originalBBpart242
  %349 = load i32, i32* %10, align 4
  %350 = icmp ne i32 %349, 0
  br i1 %350, label %455, label %351

; <label>:351:                                    ; preds = %348
  %352 = load i32, i32* @x
  %353 = load i32, i32* @y
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %originalBB44alteredBB, %351
  %360 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %361 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %360, i32 0, i32 1
  %362 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %361, i64 0, i64 1
  %363 = bitcast %union.rtunion_def* %362 to %struct.rtx_def**
  %364 = load %struct.rtx_def*, %struct.rtx_def** %363, align 8
  %365 = bitcast %struct.rtx_def* %364 to i32*
  %366 = load i32, i32* %365, align 8
  %367 = and i32 %366, 65535
  %368 = icmp eq i32 %367, 120
  %369 = load i32, i32* @x
  %370 = load i32, i32* @y
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBBpart259, label %originalBB44alteredBB

originalBBpart259:                                ; preds = %originalBB44
  br i1 %368, label %403, label %377

; <label>:377:                                    ; preds = %originalBBpart259
  %378 = load i32, i32* @x
  %379 = load i32, i32* @y
  %380 = sub i32 %378, 1
  %381 = mul i32 %378, %380
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %383, %384
  br i1 %385, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %originalBB61alteredBB, %377
  %386 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %387 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %386, i32 0, i32 1
  %388 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %387, i64 0, i64 1
  %389 = bitcast %union.rtunion_def* %388 to %struct.rtx_def**
  %390 = load %struct.rtx_def*, %struct.rtx_def** %389, align 8
  %391 = bitcast %struct.rtx_def* %390 to i32*
  %392 = load i32, i32* %391, align 8
  %393 = and i32 %392, 65535
  %394 = icmp eq i32 %393, 121
  %395 = load i32, i32* @x
  %396 = load i32, i32* @y
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBBpart266, label %originalBB61alteredBB

originalBBpart266:                                ; preds = %originalBB61
  br i1 %394, label %403, label %455

; <label>:403:                                    ; preds = %originalBBpart266, %originalBBpart259
  %404 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %405 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %404, i32 0, i32 1
  %406 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %405, i64 0, i64 1
  %407 = bitcast %union.rtunion_def* %406 to %struct.rtx_def**
  %408 = load %struct.rtx_def*, %struct.rtx_def** %407, align 8
  %409 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %408, i32 0, i32 1
  %410 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %409, i64 0, i64 0
  %411 = bitcast %union.rtunion_def* %410 to %struct.rtx_def**
  %412 = load %struct.rtx_def*, %struct.rtx_def** %411, align 8
  %413 = bitcast %struct.rtx_def* %412 to i32*
  %414 = load i32, i32* %413, align 8
  %415 = and i32 %414, 65535
  %416 = icmp eq i32 %415, 61
  br i1 %416, label %417, label %455

; <label>:417:                                    ; preds = %403
  %418 = load i32, i32* @x
  %419 = load i32, i32* @y
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %originalBB68alteredBB, %417
  %426 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %427 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %426, i32 0, i32 1
  %428 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %427, i64 0, i64 0
  %429 = bitcast %union.rtunion_def* %428 to %struct.rtx_def**
  %430 = load %struct.rtx_def*, %struct.rtx_def** %429, align 8
  %431 = bitcast %struct.rtx_def* %430 to i32*
  %432 = load i32, i32* %431, align 8
  %433 = and i32 %432, 65535
  %434 = icmp eq i32 %433, 61
  %435 = load i32, i32* @x
  %436 = load i32, i32* @y
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBBpart274, label %originalBB68alteredBB

originalBBpart274:                                ; preds = %originalBB68
  br i1 %434, label %443, label %455

; <label>:443:                                    ; preds = %originalBBpart274
  %444 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %445 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %446 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %445, i32 0, i32 1
  %447 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %446, i64 0, i64 0
  %448 = bitcast %union.rtunion_def* %447 to %struct.rtx_def**
  %449 = load %struct.rtx_def*, %struct.rtx_def** %448, align 8
  %450 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %451 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %450, i32 0, i32 1
  %452 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %451, i64 0, i64 1
  %453 = bitcast %union.rtunion_def* %452 to %struct.rtx_def**
  %454 = load %struct.rtx_def*, %struct.rtx_def** %453, align 8
  call void @optimize_reg_copy_3(%struct.rtx_def* %444, %struct.rtx_def* %449, %struct.rtx_def* %454)
  br label %455

; <label>:455:                                    ; preds = %443, %originalBBpart274, %403, %originalBBpart266, %348, %originalBBpart242
  %456 = load i32, i32* @x
  %457 = load i32, i32* @y
  %458 = sub i32 %456, 1
  %459 = mul i32 %456, %458
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %461, %462
  br i1 %463, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %originalBB76alteredBB, %455
  %464 = load i32, i32* @flag_expensive_optimizations, align 4
  %465 = icmp ne i32 %464, 0
  %466 = load i32, i32* @x
  %467 = load i32, i32* @y
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br i1 %465, label %474, label %667

; <label>:474:                                    ; preds = %originalBBpart278
  %475 = load i32, i32* %10, align 4
  %476 = icmp ne i32 %475, 0
  br i1 %476, label %667, label %477

; <label>:477:                                    ; preds = %474
  %478 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %479 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %478, i32 0, i32 1
  %480 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %479, i64 0, i64 1
  %481 = bitcast %union.rtunion_def* %480 to %struct.rtx_def**
  %482 = load %struct.rtx_def*, %struct.rtx_def** %481, align 8
  %483 = bitcast %struct.rtx_def* %482 to i32*
  %484 = load i32, i32* %483, align 8
  %485 = and i32 %484, 65535
  %486 = icmp eq i32 %485, 61
  br i1 %486, label %487, label %667

; <label>:487:                                    ; preds = %477
  %488 = load i32, i32* @x
  %489 = load i32, i32* @y
  %490 = sub i32 %488, 1
  %491 = mul i32 %488, %490
  %492 = urem i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %489, 10
  %495 = or i1 %493, %494
  br i1 %495, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %originalBB80alteredBB, %487
  %496 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %497 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %496, i32 0, i32 1
  %498 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %497, i64 0, i64 0
  %499 = bitcast %union.rtunion_def* %498 to %struct.rtx_def**
  %500 = load %struct.rtx_def*, %struct.rtx_def** %499, align 8
  %501 = bitcast %struct.rtx_def* %500 to i32*
  %502 = load i32, i32* %501, align 8
  %503 = and i32 %502, 65535
  %504 = icmp eq i32 %503, 61
  %505 = load i32, i32* @x
  %506 = load i32, i32* @y
  %507 = sub i32 %505, 1
  %508 = mul i32 %505, %507
  %509 = urem i32 %508, 2
  %510 = icmp eq i32 %509, 0
  %511 = icmp slt i32 %506, 10
  %512 = or i1 %510, %511
  br i1 %512, label %originalBBpart286, label %originalBB80alteredBB

originalBBpart286:                                ; preds = %originalBB80
  br i1 %504, label %513, label %667

; <label>:513:                                    ; preds = %originalBBpart286
  %514 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %515 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %516 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %515, i32 0, i32 1
  %517 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %516, i64 0, i64 1
  %518 = bitcast %union.rtunion_def* %517 to %struct.rtx_def**
  %519 = load %struct.rtx_def*, %struct.rtx_def** %518, align 8
  %520 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %514, i32 1, %struct.rtx_def* %519)
  %521 = icmp ne %struct.rtx_def* %520, null
  br i1 %521, label %536, label %522

; <label>:522:                                    ; preds = %513
  %523 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %524 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %525 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %524, i32 0, i32 1
  %526 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %525, i64 0, i64 0
  %527 = bitcast %union.rtunion_def* %526 to %struct.rtx_def**
  %528 = load %struct.rtx_def*, %struct.rtx_def** %527, align 8
  %529 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %530 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %529, i32 0, i32 1
  %531 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %530, i64 0, i64 1
  %532 = bitcast %union.rtunion_def* %531 to %struct.rtx_def**
  %533 = load %struct.rtx_def*, %struct.rtx_def** %532, align 8
  %534 = call i32 @optimize_reg_copy_1(%struct.rtx_def* %523, %struct.rtx_def* %528, %struct.rtx_def* %533)
  %535 = icmp ne i32 %534, 0
  br i1 %535, label %536, label %666

; <label>:536:                                    ; preds = %522, %513
  %537 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %538 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %537, i32 0, i32 1
  %539 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %538, i64 0, i64 0
  %540 = bitcast %union.rtunion_def* %539 to %struct.rtx_def**
  %541 = load %struct.rtx_def*, %struct.rtx_def** %540, align 8
  %542 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %541, i32 0, i32 1
  %543 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %542, i64 0, i64 0
  %544 = bitcast %union.rtunion_def* %543 to i32*
  %545 = load i32, i32* %544, align 8
  %546 = icmp uge i32 %545, 53
  br i1 %546, label %547, label %666

; <label>:547:                                    ; preds = %536
  %548 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %549 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %548, i32 0, i32 1
  %550 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %549, i64 0, i64 1
  %551 = bitcast %union.rtunion_def* %550 to %struct.rtx_def**
  %552 = load %struct.rtx_def*, %struct.rtx_def** %551, align 8
  %553 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %552, i32 0, i32 1
  %554 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %553, i64 0, i64 0
  %555 = bitcast %union.rtunion_def* %554 to i32*
  %556 = load i32, i32* %555, align 8
  %557 = icmp uge i32 %556, 53
  br i1 %557, label %558, label %570

; <label>:558:                                    ; preds = %547
  %559 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %560 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %561 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %560, i32 0, i32 1
  %562 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %561, i64 0, i64 0
  %563 = bitcast %union.rtunion_def* %562 to %struct.rtx_def**
  %564 = load %struct.rtx_def*, %struct.rtx_def** %563, align 8
  %565 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %566 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %565, i32 0, i32 1
  %567 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %566, i64 0, i64 1
  %568 = bitcast %union.rtunion_def* %567 to %struct.rtx_def**
  %569 = load %struct.rtx_def*, %struct.rtx_def** %568, align 8
  call void @optimize_reg_copy_2(%struct.rtx_def* %559, %struct.rtx_def* %564, %struct.rtx_def* %569)
  br label %570

; <label>:570:                                    ; preds = %558, %547
  %571 = load i32*, i32** @regno_src_regno, align 8
  %572 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %573 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %572, i32 0, i32 1
  %574 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %573, i64 0, i64 0
  %575 = bitcast %union.rtunion_def* %574 to %struct.rtx_def**
  %576 = load %struct.rtx_def*, %struct.rtx_def** %575, align 8
  %577 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %576, i32 0, i32 1
  %578 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %577, i64 0, i64 0
  %579 = bitcast %union.rtunion_def* %578 to i32*
  %580 = load i32, i32* %579, align 8
  %581 = zext i32 %580 to i64
  %582 = getelementptr inbounds i32, i32* %571, i64 %581
  %583 = load i32, i32* %582, align 4
  %584 = icmp slt i32 %583, 0
  br i1 %584, label %585, label %665

; <label>:585:                                    ; preds = %570
  %586 = load i32, i32* @x
  %587 = load i32, i32* @y
  %588 = sub i32 %586, 1
  %589 = mul i32 %586, %588
  %590 = urem i32 %589, 2
  %591 = icmp eq i32 %590, 0
  %592 = icmp slt i32 %587, 10
  %593 = or i1 %591, %592
  br i1 %593, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %originalBB88alteredBB, %585
  %594 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %595 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %594, i32 0, i32 1
  %596 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %595, i64 0, i64 1
  %597 = bitcast %union.rtunion_def* %596 to %struct.rtx_def**
  %598 = load %struct.rtx_def*, %struct.rtx_def** %597, align 8
  %599 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %600 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %599, i32 0, i32 1
  %601 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %600, i64 0, i64 0
  %602 = bitcast %union.rtunion_def* %601 to %struct.rtx_def**
  %603 = load %struct.rtx_def*, %struct.rtx_def** %602, align 8
  %604 = icmp ne %struct.rtx_def* %598, %603
  %605 = load i32, i32* @x
  %606 = load i32, i32* @y
  %607 = sub i32 %605, 1
  %608 = mul i32 %605, %607
  %609 = urem i32 %608, 2
  %610 = icmp eq i32 %609, 0
  %611 = icmp slt i32 %606, 10
  %612 = or i1 %610, %611
  br i1 %612, label %originalBBpart290, label %originalBB88alteredBB

originalBBpart290:                                ; preds = %originalBB88
  br i1 %604, label %613, label %665

; <label>:613:                                    ; preds = %originalBBpart290
  %614 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %615 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %614, i32 0, i32 1
  %616 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %615, i64 0, i64 1
  %617 = bitcast %union.rtunion_def* %616 to %struct.rtx_def**
  %618 = load %struct.rtx_def*, %struct.rtx_def** %617, align 8
  %619 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %618, i32 0, i32 1
  %620 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %619, i64 0, i64 0
  %621 = bitcast %union.rtunion_def* %620 to i32*
  %622 = load i32, i32* %621, align 8
  store i32 %622, i32* %17, align 4
  %623 = load i32*, i32** @regno_src_regno, align 8
  %624 = load i32, i32* %17, align 4
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds i32, i32* %623, i64 %625
  %627 = load i32, i32* %626, align 4
  %628 = icmp sge i32 %627, 0
  br i1 %628, label %629, label %651

; <label>:629:                                    ; preds = %613
  %630 = load i32, i32* @x
  %631 = load i32, i32* @y
  %632 = sub i32 %630, 1
  %633 = mul i32 %630, %632
  %634 = urem i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = icmp slt i32 %631, 10
  %637 = or i1 %635, %636
  br i1 %637, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %originalBB92alteredBB, %629
  %638 = load i32*, i32** @regno_src_regno, align 8
  %639 = load i32, i32* %17, align 4
  %640 = sext i32 %639 to i64
  %641 = getelementptr inbounds i32, i32* %638, i64 %640
  %642 = load i32, i32* %641, align 4
  store i32 %642, i32* %17, align 4
  %643 = load i32, i32* @x
  %644 = load i32, i32* @y
  %645 = sub i32 %643, 1
  %646 = mul i32 %643, %645
  %647 = urem i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = icmp slt i32 %644, 10
  %650 = or i1 %648, %649
  br i1 %650, label %originalBBpart294, label %originalBB92alteredBB

originalBBpart294:                                ; preds = %originalBB92
  br label %651

; <label>:651:                                    ; preds = %originalBBpart294, %613
  %652 = load i32, i32* %17, align 4
  %653 = load i32*, i32** @regno_src_regno, align 8
  %654 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %655 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %654, i32 0, i32 1
  %656 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %655, i64 0, i64 0
  %657 = bitcast %union.rtunion_def* %656 to %struct.rtx_def**
  %658 = load %struct.rtx_def*, %struct.rtx_def** %657, align 8
  %659 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %658, i32 0, i32 1
  %660 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %659, i64 0, i64 0
  %661 = bitcast %union.rtunion_def* %660 to i32*
  %662 = load i32, i32* %661, align 8
  %663 = zext i32 %662 to i64
  %664 = getelementptr inbounds i32, i32* %653, i64 %663
  store i32 %652, i32* %664, align 4
  br label %665

; <label>:665:                                    ; preds = %651, %originalBBpart290, %570
  br label %666

; <label>:666:                                    ; preds = %665, %536, %522
  br label %667

; <label>:667:                                    ; preds = %666, %originalBBpart286, %477, %474, %originalBBpart278
  %668 = load i32, i32* @x
  %669 = load i32, i32* @y
  %670 = sub i32 %668, 1
  %671 = mul i32 %668, %670
  %672 = urem i32 %671, 2
  %673 = icmp eq i32 %672, 0
  %674 = icmp slt i32 %669, 10
  %675 = or i1 %673, %674
  br i1 %675, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %originalBB96alteredBB, %667
  %676 = load i32, i32* @flag_regmove, align 4
  %677 = icmp ne i32 %676, 0
  %678 = load i32, i32* @x
  %679 = load i32, i32* @y
  %680 = sub i32 %678, 1
  %681 = mul i32 %678, %680
  %682 = urem i32 %681, 2
  %683 = icmp eq i32 %682, 0
  %684 = icmp slt i32 %679, 10
  %685 = or i1 %683, %684
  br i1 %685, label %originalBBpart298, label %originalBB96alteredBB

originalBBpart298:                                ; preds = %originalBB96
  br i1 %677, label %687, label %686

; <label>:686:                                    ; preds = %originalBBpart298
  br label %1122

; <label>:687:                                    ; preds = %originalBBpart298
  %688 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %689 = call i32 @find_matches(%struct.rtx_def* %688, %struct.match* %9)
  %690 = icmp ne i32 %689, 0
  br i1 %690, label %708, label %691

; <label>:691:                                    ; preds = %687
  %692 = load i32, i32* @x
  %693 = load i32, i32* @y
  %694 = sub i32 %692, 1
  %695 = mul i32 %692, %694
  %696 = urem i32 %695, 2
  %697 = icmp eq i32 %696, 0
  %698 = icmp slt i32 %693, 10
  %699 = or i1 %697, %698
  br i1 %699, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %originalBB100alteredBB, %691
  %700 = load i32, i32* @x
  %701 = load i32, i32* @y
  %702 = sub i32 %700, 1
  %703 = mul i32 %700, %702
  %704 = urem i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = icmp slt i32 %701, 10
  %707 = or i1 %705, %706
  br i1 %707, label %originalBBpart2102, label %originalBB100alteredBB

originalBBpart2102:                               ; preds = %originalBB100
  br label %1122

; <label>:708:                                    ; preds = %687
  store i32 0, i32* %15, align 4
  br label %709

; <label>:709:                                    ; preds = %1118, %708
  %710 = load i32, i32* %15, align 4
  %711 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 4
  %712 = sext i8 %711 to i32
  %713 = icmp slt i32 %710, %712
  br i1 %713, label %714, label %1121

; <label>:714:                                    ; preds = %709
  %715 = load i32, i32* @x
  %716 = load i32, i32* @y
  %717 = sub i32 %715, 1
  %718 = mul i32 %715, %717
  %719 = urem i32 %718, 2
  %720 = icmp eq i32 %719, 0
  %721 = icmp slt i32 %716, 10
  %722 = or i1 %720, %721
  br i1 %722, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %originalBB104alteredBB, %714
  %723 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 0
  %724 = load i32, i32* %15, align 4
  %725 = sext i32 %724 to i64
  %726 = getelementptr inbounds [30 x i32], [30 x i32]* %723, i64 0, i64 %725
  %727 = load i32, i32* %726, align 4
  store i32 %727, i32* %16, align 4
  %728 = load i32, i32* %16, align 4
  %729 = icmp slt i32 %728, 0
  %730 = load i32, i32* @x
  %731 = load i32, i32* @y
  %732 = sub i32 %730, 1
  %733 = mul i32 %730, %732
  %734 = urem i32 %733, 2
  %735 = icmp eq i32 %734, 0
  %736 = icmp slt i32 %731, 10
  %737 = or i1 %735, %736
  br i1 %737, label %originalBBpart2106, label %originalBB104alteredBB

originalBBpart2106:                               ; preds = %originalBB104
  br i1 %729, label %738, label %739

; <label>:738:                                    ; preds = %originalBBpart2106
  br label %1118

; <label>:739:                                    ; preds = %originalBBpart2106
  %740 = load i32, i32* @x
  %741 = load i32, i32* @y
  %742 = sub i32 %740, 1
  %743 = mul i32 %740, %742
  %744 = urem i32 %743, 2
  %745 = icmp eq i32 %744, 0
  %746 = icmp slt i32 %741, 10
  %747 = or i1 %745, %746
  br i1 %747, label %originalBB108, label %originalBB108alteredBB

originalBB108:                                    ; preds = %originalBB108alteredBB, %739
  %748 = load i32, i32* %15, align 4
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %749
  %751 = load %struct.rtx_def*, %struct.rtx_def** %750, align 8
  store %struct.rtx_def* %751, %struct.rtx_def** %18, align 8
  %752 = load i32, i32* %16, align 4
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %753
  %755 = load %struct.rtx_def*, %struct.rtx_def** %754, align 8
  store %struct.rtx_def* %755, %struct.rtx_def** %19, align 8
  %756 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %757 = bitcast %struct.rtx_def* %756 to i32*
  %758 = load i32, i32* %757, align 8
  %759 = and i32 %758, 65535
  %760 = icmp ne i32 %759, 61
  %761 = load i32, i32* @x
  %762 = load i32, i32* @y
  %763 = sub i32 %761, 1
  %764 = mul i32 %761, %763
  %765 = urem i32 %764, 2
  %766 = icmp eq i32 %765, 0
  %767 = icmp slt i32 %762, 10
  %768 = or i1 %766, %767
  br i1 %768, label %originalBBpart2124, label %originalBB108alteredBB

originalBBpart2124:                               ; preds = %originalBB108
  br i1 %760, label %769, label %770

; <label>:769:                                    ; preds = %originalBBpart2124
  br label %1118

; <label>:770:                                    ; preds = %originalBBpart2124
  %771 = load i32, i32* @x
  %772 = load i32, i32* @y
  %773 = sub i32 %771, 1
  %774 = mul i32 %771, %773
  %775 = urem i32 %774, 2
  %776 = icmp eq i32 %775, 0
  %777 = icmp slt i32 %772, 10
  %778 = or i1 %776, %777
  br i1 %778, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %770
  %779 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  store %struct.rtx_def* %779, %struct.rtx_def** %20, align 8
  %780 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %781 = bitcast %struct.rtx_def* %780 to i32*
  %782 = load i32, i32* %781, align 8
  %783 = and i32 %782, 65535
  %784 = icmp eq i32 %783, 63
  %785 = load i32, i32* @x
  %786 = load i32, i32* @y
  %787 = sub i32 %785, 1
  %788 = mul i32 %785, %787
  %789 = urem i32 %788, 2
  %790 = icmp eq i32 %789, 0
  %791 = icmp slt i32 %786, 10
  %792 = or i1 %790, %791
  br i1 %792, label %originalBBpart2139, label %originalBB126alteredBB

originalBBpart2139:                               ; preds = %originalBB126
  br i1 %784, label %793, label %855

; <label>:793:                                    ; preds = %originalBBpart2139
  %794 = load i32, i32* @x
  %795 = load i32, i32* @y
  %796 = sub i32 %794, 1
  %797 = mul i32 %794, %796
  %798 = urem i32 %797, 2
  %799 = icmp eq i32 %798, 0
  %800 = icmp slt i32 %795, 10
  %801 = or i1 %799, %800
  br i1 %801, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %originalBB141alteredBB, %793
  %802 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %803 = bitcast %struct.rtx_def* %802 to i32*
  %804 = load i32, i32* %803, align 8
  %805 = lshr i32 %804, 16
  %806 = and i32 %805, 255
  %807 = sext i32 %806 to i64
  %808 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %807
  %809 = load i8, i8* %808, align 1
  %810 = zext i8 %809 to i32
  %811 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %812 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %811, i32 0, i32 1
  %813 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %812, i64 0, i64 0
  %814 = bitcast %union.rtunion_def* %813 to %struct.rtx_def**
  %815 = load %struct.rtx_def*, %struct.rtx_def** %814, align 8
  %816 = bitcast %struct.rtx_def* %815 to i32*
  %817 = load i32, i32* %816, align 8
  %818 = lshr i32 %817, 16
  %819 = and i32 %818, 255
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %820
  %822 = load i8, i8* %821, align 1
  %823 = zext i8 %822 to i32
  %824 = icmp sge i32 %810, %823
  %825 = load i32, i32* @x
  %826 = load i32, i32* @y
  %827 = sub i32 %825, 1
  %828 = mul i32 %825, %827
  %829 = urem i32 %828, 2
  %830 = icmp eq i32 %829, 0
  %831 = icmp slt i32 %826, 10
  %832 = or i1 %830, %831
  br i1 %832, label %originalBBpart2165, label %originalBB141alteredBB

originalBBpart2165:                               ; preds = %originalBB141
  br i1 %824, label %833, label %855

; <label>:833:                                    ; preds = %originalBBpart2165
  %834 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %835 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %834, i32 0, i32 1
  %836 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %835, i64 0, i64 0
  %837 = bitcast %union.rtunion_def* %836 to %struct.rtx_def**
  %838 = load %struct.rtx_def*, %struct.rtx_def** %837, align 8
  %839 = bitcast %struct.rtx_def* %838 to i32*
  %840 = load i32, i32* %839, align 8
  %841 = lshr i32 %840, 16
  %842 = and i32 %841, 255
  %843 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %844 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %845 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %844, i32 0, i32 1
  %846 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %845, i64 0, i64 1
  %847 = bitcast %union.rtunion_def* %846 to i32*
  %848 = load i32, i32* %847, align 8
  %849 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %842, %struct.rtx_def* %843, i32 %848)
  store %struct.rtx_def* %849, %struct.rtx_def** %20, align 8
  %850 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %851 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %850, i32 0, i32 1
  %852 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %851, i64 0, i64 0
  %853 = bitcast %union.rtunion_def* %852 to %struct.rtx_def**
  %854 = load %struct.rtx_def*, %struct.rtx_def** %853, align 8
  store %struct.rtx_def* %854, %struct.rtx_def** %19, align 8
  br label %855

; <label>:855:                                    ; preds = %833, %originalBBpart2165, %originalBBpart2139
  %856 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %857 = bitcast %struct.rtx_def* %856 to i32*
  %858 = load i32, i32* %857, align 8
  %859 = and i32 %858, 65535
  %860 = icmp ne i32 %859, 61
  br i1 %860, label %868, label %861

; <label>:861:                                    ; preds = %855
  %862 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %863 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %862, i32 0, i32 1
  %864 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %863, i64 0, i64 0
  %865 = bitcast %union.rtunion_def* %864 to i32*
  %866 = load i32, i32* %865, align 8
  %867 = icmp ult i32 %866, 53
  br i1 %867, label %868, label %869

; <label>:868:                                    ; preds = %861, %855
  br label %1118

; <label>:869:                                    ; preds = %861
  %870 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %871 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %870, i32 0, i32 1
  %872 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %871, i64 0, i64 0
  %873 = bitcast %union.rtunion_def* %872 to i32*
  %874 = load i32, i32* %873, align 8
  %875 = icmp ult i32 %874, 53
  br i1 %875, label %876, label %915

; <label>:876:                                    ; preds = %869
  %877 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 2
  %878 = load i32, i32* %15, align 4
  %879 = sext i32 %878 to i64
  %880 = getelementptr inbounds [30 x i32], [30 x i32]* %877, i64 0, i64 %879
  %881 = load i32, i32* %880, align 4
  %882 = load i32, i32* %15, align 4
  %883 = icmp slt i32 %881, %882
  br i1 %883, label %884, label %898

; <label>:884:                                    ; preds = %876
  %885 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %886 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %885, i32 0, i32 1
  %887 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %886, i64 0, i64 0
  %888 = bitcast %union.rtunion_def* %887 to i32*
  %889 = load i32, i32* %888, align 8
  %890 = load i32*, i32** @regno_src_regno, align 8
  %891 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %892 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %891, i32 0, i32 1
  %893 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %892, i64 0, i64 0
  %894 = bitcast %union.rtunion_def* %893 to i32*
  %895 = load i32, i32* %894, align 8
  %896 = zext i32 %895 to i64
  %897 = getelementptr inbounds i32, i32* %890, i64 %896
  store i32 %889, i32* %897, align 4
  br label %898

; <label>:898:                                    ; preds = %884, %876
  %899 = load i32, i32* @x
  %900 = load i32, i32* @y
  %901 = sub i32 %899, 1
  %902 = mul i32 %899, %901
  %903 = urem i32 %902, 2
  %904 = icmp eq i32 %903, 0
  %905 = icmp slt i32 %900, 10
  %906 = or i1 %904, %905
  br i1 %906, label %originalBB167, label %originalBB167alteredBB

originalBB167:                                    ; preds = %originalBB167alteredBB, %898
  %907 = load i32, i32* @x
  %908 = load i32, i32* @y
  %909 = sub i32 %907, 1
  %910 = mul i32 %907, %909
  %911 = urem i32 %910, 2
  %912 = icmp eq i32 %911, 0
  %913 = icmp slt i32 %908, 10
  %914 = or i1 %912, %913
  br i1 %914, label %originalBBpart2169, label %originalBB167alteredBB

originalBBpart2169:                               ; preds = %originalBB167
  br label %1118

; <label>:915:                                    ; preds = %869
  %916 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %917 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %916, i32 0, i32 4
  %918 = bitcast %union.varray_data_tag* %917 to [1 x %struct.reg_info_def*]*
  %919 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %920 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %919, i32 0, i32 1
  %921 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %920, i64 0, i64 0
  %922 = bitcast %union.rtunion_def* %921 to i32*
  %923 = load i32, i32* %922, align 8
  %924 = zext i32 %923 to i64
  %925 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %918, i64 0, i64 %924
  %926 = load %struct.reg_info_def*, %struct.reg_info_def** %925, align 8
  %927 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %926, i32 0, i32 7
  %928 = load i32, i32* %927, align 4
  %929 = icmp slt i32 %928, 0
  br i1 %929, label %930, label %947

; <label>:930:                                    ; preds = %915
  %931 = load i32, i32* @x
  %932 = load i32, i32* @y
  %933 = sub i32 %931, 1
  %934 = mul i32 %931, %933
  %935 = urem i32 %934, 2
  %936 = icmp eq i32 %935, 0
  %937 = icmp slt i32 %932, 10
  %938 = or i1 %936, %937
  br i1 %938, label %originalBB171, label %originalBB171alteredBB

originalBB171:                                    ; preds = %originalBB171alteredBB, %930
  %939 = load i32, i32* @x
  %940 = load i32, i32* @y
  %941 = sub i32 %939, 1
  %942 = mul i32 %939, %941
  %943 = urem i32 %942, 2
  %944 = icmp eq i32 %943, 0
  %945 = icmp slt i32 %940, 10
  %946 = or i1 %944, %945
  br i1 %946, label %originalBBpart2173, label %originalBB171alteredBB

originalBBpart2173:                               ; preds = %originalBB171
  br label %1118

; <label>:947:                                    ; preds = %915
  %948 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 1
  %949 = load i32, i32* %15, align 4
  %950 = sext i32 %949 to i64
  %951 = getelementptr inbounds [30 x i32], [30 x i32]* %948, i64 0, i64 %950
  %952 = load i32, i32* %951, align 4
  %953 = icmp ne i32 %952, 0
  br i1 %953, label %961, label %954

; <label>:954:                                    ; preds = %947
  %955 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 1
  %956 = load i32, i32* %16, align 4
  %957 = sext i32 %956 to i64
  %958 = getelementptr inbounds [30 x i32], [30 x i32]* %955, i64 0, i64 %957
  %959 = load i32, i32* %958, align 4
  %960 = icmp ne i32 %959, 1
  br i1 %960, label %961, label %962

; <label>:961:                                    ; preds = %954, %947
  br label %1118

; <label>:962:                                    ; preds = %954
  %963 = load i32, i32* @x
  %964 = load i32, i32* @y
  %965 = sub i32 %963, 1
  %966 = mul i32 %963, %965
  %967 = urem i32 %966, 2
  %968 = icmp eq i32 %967, 0
  %969 = icmp slt i32 %964, 10
  %970 = or i1 %968, %969
  br i1 %970, label %originalBB175, label %originalBB175alteredBB

originalBB175:                                    ; preds = %originalBB175alteredBB, %962
  %971 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 3
  %972 = load i32, i32* %16, align 4
  %973 = sext i32 %972 to i64
  %974 = getelementptr inbounds [30 x i32], [30 x i32]* %971, i64 0, i64 %973
  %975 = load i32, i32* %974, align 4
  %976 = icmp ne i32 %975, 0
  %977 = load i32, i32* @x
  %978 = load i32, i32* @y
  %979 = sub i32 %977, 1
  %980 = mul i32 %977, %979
  %981 = urem i32 %980, 2
  %982 = icmp eq i32 %981, 0
  %983 = icmp slt i32 %978, 10
  %984 = or i1 %982, %983
  br i1 %984, label %originalBBpart2177, label %originalBB175alteredBB

originalBBpart2177:                               ; preds = %originalBB175
  br i1 %976, label %985, label %995

; <label>:985:                                    ; preds = %originalBBpart2177
  %986 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %987 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %986, i32 0, i32 1
  %988 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %987, i64 0, i64 3
  %989 = bitcast %union.rtunion_def* %988 to %struct.rtx_def**
  %990 = load %struct.rtx_def*, %struct.rtx_def** %989, align 8
  %991 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %992 = call i32 @count_occurrences(%struct.rtx_def* %990, %struct.rtx_def* %991, i32 0)
  %993 = icmp sgt i32 %992, 1
  br i1 %993, label %994, label %995

; <label>:994:                                    ; preds = %985
  br label %1118

; <label>:995:                                    ; preds = %985, %originalBBpart2177
  %996 = load i32, i32* %16, align 4
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %997
  %999 = load %struct.rtx_def*, %struct.rtx_def** %998, align 8
  %1000 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %1001 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1000, i32 0, i32 1
  %1002 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1001, i64 0, i64 0
  %1003 = bitcast %union.rtunion_def* %1002 to %struct.rtx_def**
  %1004 = load %struct.rtx_def*, %struct.rtx_def** %1003, align 8
  %1005 = icmp ne %struct.rtx_def* %999, %1004
  br i1 %1005, label %1006, label %1007

; <label>:1006:                                   ; preds = %995
  br label %1118

; <label>:1007:                                   ; preds = %995
  %1008 = load i32, i32* @x
  %1009 = load i32, i32* @y
  %1010 = sub i32 %1008, 1
  %1011 = mul i32 %1008, %1010
  %1012 = urem i32 %1011, 2
  %1013 = icmp eq i32 %1012, 0
  %1014 = icmp slt i32 %1009, 10
  %1015 = or i1 %1013, %1014
  br i1 %1015, label %originalBB179, label %originalBB179alteredBB

originalBB179:                                    ; preds = %originalBB179alteredBB, %1007
  %1016 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %1017 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %1018 = call i32 @operands_match_p(%struct.rtx_def* %1016, %struct.rtx_def* %1017)
  %1019 = icmp ne i32 %1018, 0
  %1020 = load i32, i32* @x
  %1021 = load i32, i32* @y
  %1022 = sub i32 %1020, 1
  %1023 = mul i32 %1020, %1022
  %1024 = urem i32 %1023, 2
  %1025 = icmp eq i32 %1024, 0
  %1026 = icmp slt i32 %1021, 10
  %1027 = or i1 %1025, %1026
  br i1 %1027, label %originalBBpart2181, label %originalBB179alteredBB

originalBBpart2181:                               ; preds = %originalBB179
  br i1 %1019, label %1028, label %1029

; <label>:1028:                                   ; preds = %originalBBpart2181
  br label %1118

; <label>:1029:                                   ; preds = %originalBBpart2181
  %1030 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 2
  %1031 = load i32, i32* %15, align 4
  %1032 = sext i32 %1031 to i64
  %1033 = getelementptr inbounds [30 x i32], [30 x i32]* %1030, i64 0, i64 %1032
  %1034 = load i32, i32* %1033, align 4
  %1035 = icmp sge i32 %1034, 0
  br i1 %1035, label %1036, label %1057

; <label>:1036:                                   ; preds = %1029
  %1037 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 2
  %1038 = load i32, i32* %15, align 4
  %1039 = sext i32 %1038 to i64
  %1040 = getelementptr inbounds [30 x i32], [30 x i32]* %1037, i64 0, i64 %1039
  %1041 = load i32, i32* %1040, align 4
  %1042 = sext i32 %1041 to i64
  %1043 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %1042
  %1044 = load %struct.rtx_def*, %struct.rtx_def** %1043, align 8
  store %struct.rtx_def* %1044, %struct.rtx_def** %23, align 8
  %1045 = load %struct.rtx_def*, %struct.rtx_def** %23, align 8
  %1046 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %1047 = call i32 @operands_match_p(%struct.rtx_def* %1045, %struct.rtx_def* %1046)
  %1048 = icmp ne i32 %1047, 0
  br i1 %1048, label %1049, label %1056

; <label>:1049:                                   ; preds = %1036
  %1050 = load %struct.rtx_def*, %struct.rtx_def** %23, align 8
  %1051 = call i32 @replacement_quality(%struct.rtx_def* %1050)
  %1052 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %1053 = call i32 @replacement_quality(%struct.rtx_def* %1052)
  %1054 = icmp sge i32 %1051, %1053
  br i1 %1054, label %1055, label %1056

; <label>:1055:                                   ; preds = %1049
  br label %1118

; <label>:1056:                                   ; preds = %1049, %1036
  br label %1057

; <label>:1057:                                   ; preds = %1056, %1029
  %1058 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %1059 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1058, i32 0, i32 1
  %1060 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1059, i64 0, i64 0
  %1061 = bitcast %union.rtunion_def* %1060 to i32*
  %1062 = load i32, i32* %1061, align 8
  %1063 = call i32 @reg_preferred_class(i32 %1062)
  store i32 %1063, i32* %21, align 4
  %1064 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %1065 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1064, i32 0, i32 1
  %1066 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1065, i64 0, i64 0
  %1067 = bitcast %union.rtunion_def* %1066 to i32*
  %1068 = load i32, i32* %1067, align 8
  %1069 = call i32 @reg_preferred_class(i32 %1068)
  store i32 %1069, i32* %22, align 4
  %1070 = load i32, i32* %21, align 4
  %1071 = load i32, i32* %22, align 4
  %1072 = call i32 @regclass_compatible_p(i32 %1070, i32 %1071)
  %1073 = icmp ne i32 %1072, 0
  br i1 %1073, label %1075, label %1074

; <label>:1074:                                   ; preds = %1057
  br label %1118

; <label>:1075:                                   ; preds = %1057
  %1076 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %1077 = bitcast %struct.rtx_def* %1076 to i32*
  %1078 = load i32, i32* %1077, align 8
  %1079 = lshr i32 %1078, 16
  %1080 = and i32 %1079, 255
  %1081 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %1082 = bitcast %struct.rtx_def* %1081 to i32*
  %1083 = load i32, i32* %1082, align 8
  %1084 = lshr i32 %1083, 16
  %1085 = and i32 %1084, 255
  %1086 = icmp ne i32 %1080, %1085
  br i1 %1086, label %1087, label %1088

; <label>:1087:                                   ; preds = %1075
  br label %1118

; <label>:1088:                                   ; preds = %1075
  %1089 = load i32, i32* @x
  %1090 = load i32, i32* @y
  %1091 = sub i32 %1089, 1
  %1092 = mul i32 %1089, %1091
  %1093 = urem i32 %1092, 2
  %1094 = icmp eq i32 %1093, 0
  %1095 = icmp slt i32 %1090, 10
  %1096 = or i1 %1094, %1095
  br i1 %1096, label %originalBB183, label %originalBB183alteredBB

originalBB183:                                    ; preds = %originalBB183alteredBB, %1088
  %1097 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1098 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %1099 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %1100 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %1101 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %1102 = load i32, i32* %10, align 4
  %1103 = load i32, i32* %15, align 4
  %1104 = load i32, i32* %16, align 4
  %1105 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %1106 = call i32 @fixup_match_1(%struct.rtx_def* %1097, %struct.rtx_def* %1098, %struct.rtx_def* %1099, %struct.rtx_def* %1100, %struct.rtx_def* %1101, i32 %1102, i32 %1103, i32 %1104, %struct._IO_FILE* %1105)
  %1107 = icmp ne i32 %1106, 0
  %1108 = load i32, i32* @x
  %1109 = load i32, i32* @y
  %1110 = sub i32 %1108, 1
  %1111 = mul i32 %1108, %1110
  %1112 = urem i32 %1111, 2
  %1113 = icmp eq i32 %1112, 0
  %1114 = icmp slt i32 %1109, 10
  %1115 = or i1 %1113, %1114
  br i1 %1115, label %originalBBpart2185, label %originalBB183alteredBB

originalBBpart2185:                               ; preds = %originalBB183
  br i1 %1107, label %1116, label %1117

; <label>:1116:                                   ; preds = %originalBBpart2185
  br label %1121

; <label>:1117:                                   ; preds = %originalBBpart2185
  br label %1118

; <label>:1118:                                   ; preds = %1117, %1087, %1074, %1055, %1028, %1006, %994, %961, %originalBBpart2173, %originalBBpart2169, %868, %769, %738
  %1119 = load i32, i32* %15, align 4
  %1120 = add nsw i32 %1119, 1
  store i32 %1120, i32* %15, align 4
  br label %709

; <label>:1121:                                   ; preds = %1116, %709
  br label %1122

; <label>:1122:                                   ; preds = %1121, %originalBBpart2102, %686, %328
  %1123 = load i32, i32* %10, align 4
  %1124 = icmp ne i32 %1123, 0
  br i1 %1124, label %1125, label %1131

; <label>:1125:                                   ; preds = %1122
  %1126 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1126, i32 0, i32 1
  %1128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1127, i64 0, i64 1
  %1129 = bitcast %union.rtunion_def* %1128 to %struct.rtx_def**
  %1130 = load %struct.rtx_def*, %struct.rtx_def** %1129, align 8
  br label %1153

; <label>:1131:                                   ; preds = %1122
  %1132 = load i32, i32* @x
  %1133 = load i32, i32* @y
  %1134 = sub i32 %1132, 1
  %1135 = mul i32 %1132, %1134
  %1136 = urem i32 %1135, 2
  %1137 = icmp eq i32 %1136, 0
  %1138 = icmp slt i32 %1133, 10
  %1139 = or i1 %1137, %1138
  br i1 %1139, label %originalBB187, label %originalBB187alteredBB

originalBB187:                                    ; preds = %originalBB187alteredBB, %1131
  %1140 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1140, i32 0, i32 1
  %1142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1141, i64 0, i64 2
  %1143 = bitcast %union.rtunion_def* %1142 to %struct.rtx_def**
  %1144 = load %struct.rtx_def*, %struct.rtx_def** %1143, align 8
  %1145 = load i32, i32* @x
  %1146 = load i32, i32* @y
  %1147 = sub i32 %1145, 1
  %1148 = mul i32 %1145, %1147
  %1149 = urem i32 %1148, 2
  %1150 = icmp eq i32 %1149, 0
  %1151 = icmp slt i32 %1146, 10
  %1152 = or i1 %1150, %1151
  br i1 %1152, label %originalBBpart2189, label %originalBB187alteredBB

originalBBpart2189:                               ; preds = %originalBB187
  br label %1153

; <label>:1153:                                   ; preds = %originalBBpart2189, %1125
  %1154 = phi %struct.rtx_def* [ %1130, %1125 ], [ %1144, %originalBBpart2189 ]
  store %struct.rtx_def* %1154, %struct.rtx_def** %8, align 8
  br label %252

; <label>:1155:                                   ; preds = %originalBBpart231
  br label %1156

; <label>:1156:                                   ; preds = %1155
  %1157 = load i32, i32* %10, align 4
  %1158 = add nsw i32 %1157, 1
  store i32 %1158, i32* %10, align 4
  br label %175

; <label>:1159:                                   ; preds = %175
  %1160 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %1161 = icmp ne %struct._IO_FILE* %1160, null
  br i1 %1161, label %1162, label %1181

; <label>:1162:                                   ; preds = %1159
  %1163 = load i32, i32* @x
  %1164 = load i32, i32* @y
  %1165 = sub i32 %1163, 1
  %1166 = mul i32 %1163, %1165
  %1167 = urem i32 %1166, 2
  %1168 = icmp eq i32 %1167, 0
  %1169 = icmp slt i32 %1164, 10
  %1170 = or i1 %1168, %1169
  br i1 %1170, label %originalBB191, label %originalBB191alteredBB

originalBB191:                                    ; preds = %originalBB191alteredBB, %1162
  %1171 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %1172 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1171, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i32 0, i32 0))
  %1173 = load i32, i32* @x
  %1174 = load i32, i32* @y
  %1175 = sub i32 %1173, 1
  %1176 = mul i32 %1173, %1175
  %1177 = urem i32 %1176, 2
  %1178 = icmp eq i32 %1177, 0
  %1179 = icmp slt i32 %1174, 10
  %1180 = or i1 %1178, %1179
  br i1 %1180, label %originalBBpart2193, label %originalBB191alteredBB

originalBBpart2193:                               ; preds = %originalBB191
  br label %1181

; <label>:1181:                                   ; preds = %originalBBpart2193, %1159
  %1182 = load i32, i32* @x
  %1183 = load i32, i32* @y
  %1184 = sub i32 %1182, 1
  %1185 = mul i32 %1182, %1184
  %1186 = urem i32 %1185, 2
  %1187 = icmp eq i32 %1186, 0
  %1188 = icmp slt i32 %1183, 10
  %1189 = or i1 %1187, %1188
  br i1 %1189, label %originalBB195, label %originalBB195alteredBB

originalBB195:                                    ; preds = %originalBB195alteredBB, %1181
  %1190 = call %struct.rtx_def* @get_last_insn()
  store %struct.rtx_def* %1190, %struct.rtx_def** %8, align 8
  %1191 = load i32, i32* @x
  %1192 = load i32, i32* @y
  %1193 = sub i32 %1191, 1
  %1194 = mul i32 %1191, %1193
  %1195 = urem i32 %1194, 2
  %1196 = icmp eq i32 %1195, 0
  %1197 = icmp slt i32 %1192, 10
  %1198 = or i1 %1196, %1197
  br i1 %1198, label %originalBBpart2197, label %originalBB195alteredBB

originalBBpart2197:                               ; preds = %originalBB195
  br label %1199

; <label>:1199:                                   ; preds = %2412, %originalBBpart2197
  %1200 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1201 = icmp ne %struct.rtx_def* %1200, null
  br i1 %1201, label %1202, label %2418

; <label>:1202:                                   ; preds = %1199
  %1203 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1204 = bitcast %struct.rtx_def* %1203 to i32*
  %1205 = load i32, i32* %1204, align 8
  %1206 = and i32 %1205, 65535
  %1207 = sext i32 %1206 to i64
  %1208 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %1207
  %1209 = load i8, i8* %1208, align 1
  %1210 = sext i8 %1209 to i32
  %1211 = icmp eq i32 %1210, 105
  br i1 %1211, label %1212, label %2411

; <label>:1212:                                   ; preds = %1202
  store i32 0, i32* %26, align 4
  %1213 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1214 = call i32 @find_matches(%struct.rtx_def* %1213, %struct.match* %9)
  %1215 = icmp ne i32 %1214, 0
  br i1 %1215, label %1233, label %1216

; <label>:1216:                                   ; preds = %1212
  %1217 = load i32, i32* @x
  %1218 = load i32, i32* @y
  %1219 = sub i32 %1217, 1
  %1220 = mul i32 %1217, %1219
  %1221 = urem i32 %1220, 2
  %1222 = icmp eq i32 %1221, 0
  %1223 = icmp slt i32 %1218, 10
  %1224 = or i1 %1222, %1223
  br i1 %1224, label %originalBB199, label %originalBB199alteredBB

originalBB199:                                    ; preds = %originalBB199alteredBB, %1216
  %1225 = load i32, i32* @x
  %1226 = load i32, i32* @y
  %1227 = sub i32 %1225, 1
  %1228 = mul i32 %1225, %1227
  %1229 = urem i32 %1228, 2
  %1230 = icmp eq i32 %1229, 0
  %1231 = icmp slt i32 %1226, 10
  %1232 = or i1 %1230, %1231
  br i1 %1232, label %originalBBpart2201, label %originalBB199alteredBB

originalBBpart2201:                               ; preds = %originalBB199
  br label %2412

; <label>:1233:                                   ; preds = %1212
  %1234 = load i32, i32* @x
  %1235 = load i32, i32* @y
  %1236 = sub i32 %1234, 1
  %1237 = mul i32 %1234, %1236
  %1238 = urem i32 %1237, 2
  %1239 = icmp eq i32 %1238, 0
  %1240 = icmp slt i32 %1235, 10
  %1241 = or i1 %1239, %1240
  br i1 %1241, label %originalBB203, label %originalBB203alteredBB

originalBB203:                                    ; preds = %originalBB203alteredBB, %1233
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %13, align 8
  store i32 0, i32* %24, align 4
  %1242 = load i32, i32* @x
  %1243 = load i32, i32* @y
  %1244 = sub i32 %1242, 1
  %1245 = mul i32 %1242, %1244
  %1246 = urem i32 %1245, 2
  %1247 = icmp eq i32 %1246, 0
  %1248 = icmp slt i32 %1243, 10
  %1249 = or i1 %1247, %1248
  br i1 %1249, label %originalBBpart2205, label %originalBB203alteredBB

originalBBpart2205:                               ; preds = %originalBB203
  br label %1250

; <label>:1250:                                   ; preds = %2380, %originalBBpart2205
  %1251 = load i32, i32* %24, align 4
  %1252 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 4
  %1253 = sext i8 %1252 to i32
  %1254 = icmp slt i32 %1251, %1253
  br i1 %1254, label %1255, label %2383

; <label>:1255:                                   ; preds = %1250
  store i32 0, i32* %33, align 4
  %1256 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 0
  %1257 = load i32, i32* %24, align 4
  %1258 = sext i32 %1257 to i64
  %1259 = getelementptr inbounds [30 x i32], [30 x i32]* %1256, i64 0, i64 %1258
  %1260 = load i32, i32* %1259, align 4
  store i32 %1260, i32* %25, align 4
  %1261 = load i32, i32* %25, align 4
  %1262 = icmp slt i32 %1261, 0
  br i1 %1262, label %1263, label %1280

; <label>:1263:                                   ; preds = %1255
  %1264 = load i32, i32* @x
  %1265 = load i32, i32* @y
  %1266 = sub i32 %1264, 1
  %1267 = mul i32 %1264, %1266
  %1268 = urem i32 %1267, 2
  %1269 = icmp eq i32 %1268, 0
  %1270 = icmp slt i32 %1265, 10
  %1271 = or i1 %1269, %1270
  br i1 %1271, label %originalBB207, label %originalBB207alteredBB

originalBB207:                                    ; preds = %originalBB207alteredBB, %1263
  %1272 = load i32, i32* @x
  %1273 = load i32, i32* @y
  %1274 = sub i32 %1272, 1
  %1275 = mul i32 %1272, %1274
  %1276 = urem i32 %1275, 2
  %1277 = icmp eq i32 %1276, 0
  %1278 = icmp slt i32 %1273, 10
  %1279 = or i1 %1277, %1278
  br i1 %1279, label %originalBBpart2209, label %originalBB207alteredBB

originalBBpart2209:                               ; preds = %originalBB207
  br label %2380

; <label>:1280:                                   ; preds = %1255
  %1281 = load i32, i32* @x
  %1282 = load i32, i32* @y
  %1283 = sub i32 %1281, 1
  %1284 = mul i32 %1281, %1283
  %1285 = urem i32 %1284, 2
  %1286 = icmp eq i32 %1285, 0
  %1287 = icmp slt i32 %1282, 10
  %1288 = or i1 %1286, %1287
  br i1 %1288, label %originalBB211, label %originalBB211alteredBB

originalBB211:                                    ; preds = %originalBB211alteredBB, %1280
  %1289 = load i32, i32* %25, align 4
  %1290 = sext i32 %1289 to i64
  %1291 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %1290
  %1292 = load %struct.rtx_def*, %struct.rtx_def** %1291, align 8
  store %struct.rtx_def* %1292, %struct.rtx_def** %30, align 8
  %1293 = load i32, i32* %24, align 4
  %1294 = sext i32 %1293 to i64
  %1295 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %1294
  %1296 = load %struct.rtx_def*, %struct.rtx_def** %1295, align 8
  store %struct.rtx_def* %1296, %struct.rtx_def** %29, align 8
  %1297 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %1298 = bitcast %struct.rtx_def* %1297 to i32*
  %1299 = load i32, i32* %1298, align 8
  %1300 = and i32 %1299, 65535
  %1301 = icmp ne i32 %1300, 61
  %1302 = load i32, i32* @x
  %1303 = load i32, i32* @y
  %1304 = sub i32 %1302, 1
  %1305 = mul i32 %1302, %1304
  %1306 = urem i32 %1305, 2
  %1307 = icmp eq i32 %1306, 0
  %1308 = icmp slt i32 %1303, 10
  %1309 = or i1 %1307, %1308
  br i1 %1309, label %originalBBpart2222, label %originalBB211alteredBB

originalBBpart2222:                               ; preds = %originalBB211
  br i1 %1301, label %1310, label %1311

; <label>:1310:                                   ; preds = %originalBBpart2222
  br label %2380

; <label>:1311:                                   ; preds = %originalBBpart2222
  %1312 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %1313 = bitcast %struct.rtx_def* %1312 to i32*
  %1314 = load i32, i32* %1313, align 8
  %1315 = and i32 %1314, 65535
  %1316 = icmp ne i32 %1315, 61
  br i1 %1316, label %1346, label %1317

; <label>:1317:                                   ; preds = %1311
  %1318 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %1319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1318, i32 0, i32 1
  %1320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1319, i64 0, i64 0
  %1321 = bitcast %union.rtunion_def* %1320 to i32*
  %1322 = load i32, i32* %1321, align 8
  %1323 = icmp ult i32 %1322, 53
  br i1 %1323, label %1346, label %1324

; <label>:1324:                                   ; preds = %1317
  %1325 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %1326 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1325, i32 0, i32 4
  %1327 = bitcast %union.varray_data_tag* %1326 to [1 x %struct.reg_info_def*]*
  %1328 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %1329 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1328, i32 0, i32 1
  %1330 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1329, i64 0, i64 0
  %1331 = bitcast %union.rtunion_def* %1330 to i32*
  %1332 = load i32, i32* %1331, align 8
  %1333 = zext i32 %1332 to i64
  %1334 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %1327, i64 0, i64 %1333
  %1335 = load %struct.reg_info_def*, %struct.reg_info_def** %1334, align 8
  %1336 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %1335, i32 0, i32 7
  %1337 = load i32, i32* %1336, align 4
  %1338 = icmp slt i32 %1337, 0
  br i1 %1338, label %1346, label %1339

; <label>:1339:                                   ; preds = %1324
  %1340 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %1341 = bitcast %struct.rtx_def* %1340 to i32*
  %1342 = load i32, i32* %1341, align 8
  %1343 = lshr i32 %1342, 26
  %1344 = and i32 %1343, 1
  %1345 = icmp ne i32 %1344, 0
  br i1 %1345, label %1346, label %1347

; <label>:1346:                                   ; preds = %1339, %1324, %1317, %1311
  br label %2380

; <label>:1347:                                   ; preds = %1339
  %1348 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %1349 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %1350 = call i32 @operands_match_p(%struct.rtx_def* %1348, %struct.rtx_def* %1349)
  %1351 = icmp ne i32 %1350, 0
  br i1 %1351, label %1352, label %1353

; <label>:1352:                                   ; preds = %1347
  br label %2380

; <label>:1353:                                   ; preds = %1347
  %1354 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 2
  %1355 = load i32, i32* %24, align 4
  %1356 = sext i32 %1355 to i64
  %1357 = getelementptr inbounds [30 x i32], [30 x i32]* %1354, i64 0, i64 %1356
  %1358 = load i32, i32* %1357, align 4
  %1359 = icmp sge i32 %1358, 0
  br i1 %1359, label %1360, label %1391

; <label>:1360:                                   ; preds = %1353
  %1361 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 2
  %1362 = load i32, i32* %24, align 4
  %1363 = sext i32 %1362 to i64
  %1364 = getelementptr inbounds [30 x i32], [30 x i32]* %1361, i64 0, i64 %1363
  %1365 = load i32, i32* %1364, align 4
  %1366 = sext i32 %1365 to i64
  %1367 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %1366
  %1368 = load %struct.rtx_def*, %struct.rtx_def** %1367, align 8
  store %struct.rtx_def* %1368, %struct.rtx_def** %37, align 8
  %1369 = load %struct.rtx_def*, %struct.rtx_def** %37, align 8
  %1370 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %1371 = call i32 @operands_match_p(%struct.rtx_def* %1369, %struct.rtx_def* %1370)
  %1372 = icmp ne i32 %1371, 0
  br i1 %1372, label %1373, label %1374

; <label>:1373:                                   ; preds = %1360
  br label %2380

; <label>:1374:                                   ; preds = %1360
  %1375 = load i32, i32* @x
  %1376 = load i32, i32* @y
  %1377 = sub i32 %1375, 1
  %1378 = mul i32 %1375, %1377
  %1379 = urem i32 %1378, 2
  %1380 = icmp eq i32 %1379, 0
  %1381 = icmp slt i32 %1376, 10
  %1382 = or i1 %1380, %1381
  br i1 %1382, label %originalBB224, label %originalBB224alteredBB

originalBB224:                                    ; preds = %originalBB224alteredBB, %1374
  %1383 = load i32, i32* @x
  %1384 = load i32, i32* @y
  %1385 = sub i32 %1383, 1
  %1386 = mul i32 %1383, %1385
  %1387 = urem i32 %1386, 2
  %1388 = icmp eq i32 %1387, 0
  %1389 = icmp slt i32 %1384, 10
  %1390 = or i1 %1388, %1389
  br i1 %1390, label %originalBBpart2226, label %originalBB224alteredBB

originalBBpart2226:                               ; preds = %originalBB224
  br label %1391

; <label>:1391:                                   ; preds = %originalBBpart2226, %1353
  %1392 = load i32, i32* @x
  %1393 = load i32, i32* @y
  %1394 = sub i32 %1392, 1
  %1395 = mul i32 %1392, %1394
  %1396 = urem i32 %1395, 2
  %1397 = icmp eq i32 %1396, 0
  %1398 = icmp slt i32 %1393, 10
  %1399 = or i1 %1397, %1398
  br i1 %1399, label %originalBB228, label %originalBB228alteredBB

originalBB228:                                    ; preds = %originalBB228alteredBB, %1391
  %1400 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1401 = bitcast %struct.rtx_def* %1400 to i32*
  %1402 = load i32, i32* %1401, align 8
  %1403 = and i32 %1402, 65535
  %1404 = sext i32 %1403 to i64
  %1405 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %1404
  %1406 = load i8, i8* %1405, align 1
  %1407 = sext i8 %1406 to i32
  %1408 = icmp eq i32 %1407, 105
  %1409 = load i32, i32* @x
  %1410 = load i32, i32* @y
  %1411 = sub i32 %1409, 1
  %1412 = mul i32 %1409, %1411
  %1413 = urem i32 %1412, 2
  %1414 = icmp eq i32 %1413, 0
  %1415 = icmp slt i32 %1410, 10
  %1416 = or i1 %1414, %1415
  br i1 %1416, label %originalBBpart2236, label %originalBB228alteredBB

originalBBpart2236:                               ; preds = %originalBB228
  br i1 %1408, label %1417, label %1459

; <label>:1417:                                   ; preds = %originalBBpart2236
  %1418 = load i32, i32* @x
  %1419 = load i32, i32* @y
  %1420 = sub i32 %1418, 1
  %1421 = mul i32 %1418, %1420
  %1422 = urem i32 %1421, 2
  %1423 = icmp eq i32 %1422, 0
  %1424 = icmp slt i32 %1419, 10
  %1425 = or i1 %1423, %1424
  br i1 %1425, label %originalBB238, label %originalBB238alteredBB

originalBB238:                                    ; preds = %originalBB238alteredBB, %1417
  %1426 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1427 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1426, i32 0, i32 1
  %1428 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1427, i64 0, i64 3
  %1429 = bitcast %union.rtunion_def* %1428 to %struct.rtx_def**
  %1430 = load %struct.rtx_def*, %struct.rtx_def** %1429, align 8
  %1431 = bitcast %struct.rtx_def* %1430 to i32*
  %1432 = load i32, i32* %1431, align 8
  %1433 = and i32 %1432, 65535
  %1434 = icmp eq i32 %1433, 47
  %1435 = load i32, i32* @x
  %1436 = load i32, i32* @y
  %1437 = sub i32 %1435, 1
  %1438 = mul i32 %1435, %1437
  %1439 = urem i32 %1438, 2
  %1440 = icmp eq i32 %1439, 0
  %1441 = icmp slt i32 %1436, 10
  %1442 = or i1 %1440, %1441
  br i1 %1442, label %originalBBpart2248, label %originalBB238alteredBB

originalBBpart2248:                               ; preds = %originalBB238
  br i1 %1434, label %1443, label %1449

; <label>:1443:                                   ; preds = %originalBBpart2248
  %1444 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1445 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1444, i32 0, i32 1
  %1446 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1445, i64 0, i64 3
  %1447 = bitcast %union.rtunion_def* %1446 to %struct.rtx_def**
  %1448 = load %struct.rtx_def*, %struct.rtx_def** %1447, align 8
  br label %1457

; <label>:1449:                                   ; preds = %originalBBpart2248
  %1450 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1451 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1452 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1451, i32 0, i32 1
  %1453 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1452, i64 0, i64 3
  %1454 = bitcast %union.rtunion_def* %1453 to %struct.rtx_def**
  %1455 = load %struct.rtx_def*, %struct.rtx_def** %1454, align 8
  %1456 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %1450, %struct.rtx_def* %1455)
  br label %1457

; <label>:1457:                                   ; preds = %1449, %1443
  %1458 = phi %struct.rtx_def* [ %1448, %1443 ], [ %1456, %1449 ]
  br label %1460

; <label>:1459:                                   ; preds = %originalBBpart2236
  br label %1460

; <label>:1460:                                   ; preds = %1459, %1457
  %1461 = phi %struct.rtx_def* [ %1458, %1457 ], [ null, %1459 ]
  store %struct.rtx_def* %1461, %struct.rtx_def** %27, align 8
  %1462 = load %struct.rtx_def*, %struct.rtx_def** %27, align 8
  %1463 = icmp ne %struct.rtx_def* %1462, null
  br i1 %1463, label %1465, label %1464

; <label>:1464:                                   ; preds = %1460
  br label %2380

; <label>:1465:                                   ; preds = %1460
  %1466 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %1467 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1468 = call i32 @reg_set_p(%struct.rtx_def* %1466, %struct.rtx_def* %1467)
  %1469 = icmp ne i32 %1468, 0
  br i1 %1469, label %1470, label %1487

; <label>:1470:                                   ; preds = %1465
  %1471 = load i32, i32* @x
  %1472 = load i32, i32* @y
  %1473 = sub i32 %1471, 1
  %1474 = mul i32 %1471, %1473
  %1475 = urem i32 %1474, 2
  %1476 = icmp eq i32 %1475, 0
  %1477 = icmp slt i32 %1472, 10
  %1478 = or i1 %1476, %1477
  br i1 %1478, label %originalBB250, label %originalBB250alteredBB

originalBB250:                                    ; preds = %originalBB250alteredBB, %1470
  %1479 = load i32, i32* @x
  %1480 = load i32, i32* @y
  %1481 = sub i32 %1479, 1
  %1482 = mul i32 %1479, %1481
  %1483 = urem i32 %1482, 2
  %1484 = icmp eq i32 %1483, 0
  %1485 = icmp slt i32 %1480, 10
  %1486 = or i1 %1484, %1485
  br i1 %1486, label %originalBBpart2252, label %originalBB250alteredBB

originalBBpart2252:                               ; preds = %originalBB250
  br label %2380

; <label>:1487:                                   ; preds = %1465
  %1488 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 1
  %1489 = load i32, i32* %24, align 4
  %1490 = sext i32 %1489 to i64
  %1491 = getelementptr inbounds [30 x i32], [30 x i32]* %1488, i64 0, i64 %1490
  %1492 = load i32, i32* %1491, align 4
  %1493 = icmp ne i32 %1492, 0
  br i1 %1493, label %1517, label %1494

; <label>:1494:                                   ; preds = %1487
  %1495 = load i32, i32* @x
  %1496 = load i32, i32* @y
  %1497 = sub i32 %1495, 1
  %1498 = mul i32 %1495, %1497
  %1499 = urem i32 %1498, 2
  %1500 = icmp eq i32 %1499, 0
  %1501 = icmp slt i32 %1496, 10
  %1502 = or i1 %1500, %1501
  br i1 %1502, label %originalBB254, label %originalBB254alteredBB

originalBB254:                                    ; preds = %originalBB254alteredBB, %1494
  %1503 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 1
  %1504 = load i32, i32* %25, align 4
  %1505 = sext i32 %1504 to i64
  %1506 = getelementptr inbounds [30 x i32], [30 x i32]* %1503, i64 0, i64 %1505
  %1507 = load i32, i32* %1506, align 4
  %1508 = icmp ne i32 %1507, 1
  %1509 = load i32, i32* @x
  %1510 = load i32, i32* @y
  %1511 = sub i32 %1509, 1
  %1512 = mul i32 %1509, %1511
  %1513 = urem i32 %1512, 2
  %1514 = icmp eq i32 %1513, 0
  %1515 = icmp slt i32 %1510, 10
  %1516 = or i1 %1514, %1515
  br i1 %1516, label %originalBBpart2256, label %originalBB254alteredBB

originalBBpart2256:                               ; preds = %originalBB254
  br i1 %1508, label %1517, label %1518

; <label>:1517:                                   ; preds = %originalBBpart2256, %1487
  br label %2380

; <label>:1518:                                   ; preds = %originalBBpart2256
  %1519 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 3
  %1520 = load i32, i32* %25, align 4
  %1521 = sext i32 %1520 to i64
  %1522 = getelementptr inbounds [30 x i32], [30 x i32]* %1519, i64 0, i64 %1521
  %1523 = load i32, i32* %1522, align 4
  %1524 = icmp ne i32 %1523, 0
  br i1 %1524, label %1525, label %1567

; <label>:1525:                                   ; preds = %1518
  %1526 = load i32, i32* @x
  %1527 = load i32, i32* @y
  %1528 = sub i32 %1526, 1
  %1529 = mul i32 %1526, %1528
  %1530 = urem i32 %1529, 2
  %1531 = icmp eq i32 %1530, 0
  %1532 = icmp slt i32 %1527, 10
  %1533 = or i1 %1531, %1532
  br i1 %1533, label %originalBB258, label %originalBB258alteredBB

originalBB258:                                    ; preds = %originalBB258alteredBB, %1525
  %1534 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1535 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1534, i32 0, i32 1
  %1536 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1535, i64 0, i64 3
  %1537 = bitcast %union.rtunion_def* %1536 to %struct.rtx_def**
  %1538 = load %struct.rtx_def*, %struct.rtx_def** %1537, align 8
  %1539 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %1540 = call i32 @count_occurrences(%struct.rtx_def* %1538, %struct.rtx_def* %1539, i32 0)
  %1541 = icmp sgt i32 %1540, 1
  %1542 = load i32, i32* @x
  %1543 = load i32, i32* @y
  %1544 = sub i32 %1542, 1
  %1545 = mul i32 %1542, %1544
  %1546 = urem i32 %1545, 2
  %1547 = icmp eq i32 %1546, 0
  %1548 = icmp slt i32 %1543, 10
  %1549 = or i1 %1547, %1548
  br i1 %1549, label %originalBBpart2260, label %originalBB258alteredBB

originalBBpart2260:                               ; preds = %originalBB258
  br i1 %1541, label %1550, label %1567

; <label>:1550:                                   ; preds = %originalBBpart2260
  %1551 = load i32, i32* @x
  %1552 = load i32, i32* @y
  %1553 = sub i32 %1551, 1
  %1554 = mul i32 %1551, %1553
  %1555 = urem i32 %1554, 2
  %1556 = icmp eq i32 %1555, 0
  %1557 = icmp slt i32 %1552, 10
  %1558 = or i1 %1556, %1557
  br i1 %1558, label %originalBB262, label %originalBB262alteredBB

originalBB262:                                    ; preds = %originalBB262alteredBB, %1550
  %1559 = load i32, i32* @x
  %1560 = load i32, i32* @y
  %1561 = sub i32 %1559, 1
  %1562 = mul i32 %1559, %1561
  %1563 = urem i32 %1562, 2
  %1564 = icmp eq i32 %1563, 0
  %1565 = icmp slt i32 %1560, 10
  %1566 = or i1 %1564, %1565
  br i1 %1566, label %originalBBpart2264, label %originalBB262alteredBB

originalBBpart2264:                               ; preds = %originalBB262
  br label %2380

; <label>:1567:                                   ; preds = %originalBBpart2260, %1518
  %1568 = load i32, i32* %25, align 4
  %1569 = sext i32 %1568 to i64
  %1570 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %1569
  %1571 = load %struct.rtx_def*, %struct.rtx_def** %1570, align 8
  %1572 = load %struct.rtx_def*, %struct.rtx_def** %27, align 8
  %1573 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1572, i32 0, i32 1
  %1574 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1573, i64 0, i64 0
  %1575 = bitcast %union.rtunion_def* %1574 to %struct.rtx_def**
  %1576 = load %struct.rtx_def*, %struct.rtx_def** %1575, align 8
  %1577 = icmp ne %struct.rtx_def* %1571, %1576
  br i1 %1577, label %1578, label %1595

; <label>:1578:                                   ; preds = %1567
  %1579 = load i32, i32* @x
  %1580 = load i32, i32* @y
  %1581 = sub i32 %1579, 1
  %1582 = mul i32 %1579, %1581
  %1583 = urem i32 %1582, 2
  %1584 = icmp eq i32 %1583, 0
  %1585 = icmp slt i32 %1580, 10
  %1586 = or i1 %1584, %1585
  br i1 %1586, label %originalBB266, label %originalBB266alteredBB

originalBB266:                                    ; preds = %originalBB266alteredBB, %1578
  %1587 = load i32, i32* @x
  %1588 = load i32, i32* @y
  %1589 = sub i32 %1587, 1
  %1590 = mul i32 %1587, %1589
  %1591 = urem i32 %1590, 2
  %1592 = icmp eq i32 %1591, 0
  %1593 = icmp slt i32 %1588, 10
  %1594 = or i1 %1592, %1593
  br i1 %1594, label %originalBBpart2269, label %originalBB266alteredBB

originalBBpart2269:                               ; preds = %originalBB266
  br label %2380

; <label>:1595:                                   ; preds = %1567
  %1596 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %1597 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1596, i32 0, i32 1
  %1598 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1597, i64 0, i64 0
  %1599 = bitcast %union.rtunion_def* %1598 to i32*
  %1600 = load i32, i32* %1599, align 8
  %1601 = icmp ult i32 %1600, 53
  br i1 %1601, label %1602, label %1704

; <label>:1602:                                   ; preds = %1595
  %1603 = load i32, i32* @x
  %1604 = load i32, i32* @y
  %1605 = sub i32 %1603, 1
  %1606 = mul i32 %1603, %1605
  %1607 = urem i32 %1606, 2
  %1608 = icmp eq i32 %1607, 0
  %1609 = icmp slt i32 %1604, 10
  %1610 = or i1 %1608, %1609
  br i1 %1610, label %originalBB271, label %originalBB271alteredBB

originalBB271:                                    ; preds = %originalBB271alteredBB, %1602
  %1611 = load %struct.rtx_def*, %struct.rtx_def** %27, align 8
  %1612 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1611, i32 0, i32 1
  %1613 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1612, i64 0, i64 1
  %1614 = bitcast %union.rtunion_def* %1613 to %struct.rtx_def**
  %1615 = load %struct.rtx_def*, %struct.rtx_def** %1614, align 8
  %1616 = bitcast %struct.rtx_def* %1615 to i32*
  %1617 = load i32, i32* %1616, align 8
  %1618 = and i32 %1617, 65535
  %1619 = icmp eq i32 %1618, 75
  %1620 = load i32, i32* @x
  %1621 = load i32, i32* @y
  %1622 = sub i32 %1620, 1
  %1623 = mul i32 %1620, %1622
  %1624 = urem i32 %1623, 2
  %1625 = icmp eq i32 %1624, 0
  %1626 = icmp slt i32 %1621, 10
  %1627 = or i1 %1625, %1626
  br i1 %1627, label %originalBBpart2281, label %originalBB271alteredBB

originalBBpart2281:                               ; preds = %originalBB271
  br i1 %1619, label %1628, label %1703

; <label>:1628:                                   ; preds = %originalBBpart2281
  %1629 = load %struct.rtx_def*, %struct.rtx_def** %27, align 8
  %1630 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1629, i32 0, i32 1
  %1631 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1630, i64 0, i64 1
  %1632 = bitcast %union.rtunion_def* %1631 to %struct.rtx_def**
  %1633 = load %struct.rtx_def*, %struct.rtx_def** %1632, align 8
  %1634 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1633, i32 0, i32 1
  %1635 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1634, i64 0, i64 1
  %1636 = bitcast %union.rtunion_def* %1635 to %struct.rtx_def**
  %1637 = load %struct.rtx_def*, %struct.rtx_def** %1636, align 8
  %1638 = bitcast %struct.rtx_def* %1637 to i32*
  %1639 = load i32, i32* %1638, align 8
  %1640 = and i32 %1639, 65535
  %1641 = icmp eq i32 %1640, 54
  br i1 %1641, label %1642, label %1703

; <label>:1642:                                   ; preds = %1628
  %1643 = load i32, i32* @x
  %1644 = load i32, i32* @y
  %1645 = sub i32 %1643, 1
  %1646 = mul i32 %1643, %1645
  %1647 = urem i32 %1646, 2
  %1648 = icmp eq i32 %1647, 0
  %1649 = icmp slt i32 %1644, 10
  %1650 = or i1 %1648, %1649
  br i1 %1650, label %originalBB283, label %originalBB283alteredBB

originalBB283:                                    ; preds = %originalBB283alteredBB, %1642
  %1651 = load %struct.rtx_def*, %struct.rtx_def** %27, align 8
  %1652 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1651, i32 0, i32 1
  %1653 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1652, i64 0, i64 1
  %1654 = bitcast %union.rtunion_def* %1653 to %struct.rtx_def**
  %1655 = load %struct.rtx_def*, %struct.rtx_def** %1654, align 8
  %1656 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1655, i32 0, i32 1
  %1657 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1656, i64 0, i64 0
  %1658 = bitcast %union.rtunion_def* %1657 to %struct.rtx_def**
  %1659 = load %struct.rtx_def*, %struct.rtx_def** %1658, align 8
  %1660 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %1661 = icmp eq %struct.rtx_def* %1659, %1660
  %1662 = load i32, i32* @x
  %1663 = load i32, i32* @y
  %1664 = sub i32 %1662, 1
  %1665 = mul i32 %1662, %1664
  %1666 = urem i32 %1665, 2
  %1667 = icmp eq i32 %1666, 0
  %1668 = icmp slt i32 %1663, 10
  %1669 = or i1 %1667, %1668
  br i1 %1669, label %originalBBpart2285, label %originalBB283alteredBB

originalBBpart2285:                               ; preds = %originalBB283
  br i1 %1661, label %1670, label %1703

; <label>:1670:                                   ; preds = %originalBBpart2285
  %1671 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1672 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %1673 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %1674 = load %struct.rtx_def*, %struct.rtx_def** %27, align 8
  %1675 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1674, i32 0, i32 1
  %1676 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1675, i64 0, i64 1
  %1677 = bitcast %union.rtunion_def* %1676 to %struct.rtx_def**
  %1678 = load %struct.rtx_def*, %struct.rtx_def** %1677, align 8
  %1679 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1678, i32 0, i32 1
  %1680 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1679, i64 0, i64 1
  %1681 = bitcast %union.rtunion_def* %1680 to %struct.rtx_def**
  %1682 = load %struct.rtx_def*, %struct.rtx_def** %1681, align 8
  %1683 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %1684 = call i32 @fixup_match_2(%struct.rtx_def* %1671, %struct.rtx_def* %1672, %struct.rtx_def* %1673, %struct.rtx_def* %1682, %struct._IO_FILE* %1683)
  %1685 = icmp ne i32 %1684, 0
  br i1 %1685, label %1686, label %1703

; <label>:1686:                                   ; preds = %1670
  %1687 = load i32, i32* @x
  %1688 = load i32, i32* @y
  %1689 = sub i32 %1687, 1
  %1690 = mul i32 %1687, %1689
  %1691 = urem i32 %1690, 2
  %1692 = icmp eq i32 %1691, 0
  %1693 = icmp slt i32 %1688, 10
  %1694 = or i1 %1692, %1693
  br i1 %1694, label %originalBB287, label %originalBB287alteredBB

originalBB287:                                    ; preds = %originalBB287alteredBB, %1686
  %1695 = load i32, i32* @x
  %1696 = load i32, i32* @y
  %1697 = sub i32 %1695, 1
  %1698 = mul i32 %1695, %1697
  %1699 = urem i32 %1698, 2
  %1700 = icmp eq i32 %1699, 0
  %1701 = icmp slt i32 %1696, 10
  %1702 = or i1 %1700, %1701
  br i1 %1702, label %originalBBpart2289, label %originalBB287alteredBB

originalBBpart2289:                               ; preds = %originalBB287
  br label %2383

; <label>:1703:                                   ; preds = %1670, %originalBBpart2285, %1628, %originalBBpart2281
  br label %2380

; <label>:1704:                                   ; preds = %1595
  %1705 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %1706 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1705, i32 0, i32 1
  %1707 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1706, i64 0, i64 0
  %1708 = bitcast %union.rtunion_def* %1707 to i32*
  %1709 = load i32, i32* %1708, align 8
  %1710 = call i32 @reg_preferred_class(i32 %1709)
  store i32 %1710, i32* %34, align 4
  %1711 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %1712 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1711, i32 0, i32 1
  %1713 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1712, i64 0, i64 0
  %1714 = bitcast %union.rtunion_def* %1713 to i32*
  %1715 = load i32, i32* %1714, align 8
  %1716 = call i32 @reg_preferred_class(i32 %1715)
  store i32 %1716, i32* %35, align 4
  %1717 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1718 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %1719 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1717, i32 1, %struct.rtx_def* %1718)
  store %struct.rtx_def* %1719, %struct.rtx_def** %31, align 8
  %1720 = icmp ne %struct.rtx_def* %1719, null
  br i1 %1720, label %1738, label %1721

; <label>:1721:                                   ; preds = %1704
  %1722 = load i32, i32* @x
  %1723 = load i32, i32* @y
  %1724 = sub i32 %1722, 1
  %1725 = mul i32 %1722, %1724
  %1726 = urem i32 %1725, 2
  %1727 = icmp eq i32 %1726, 0
  %1728 = icmp slt i32 %1723, 10
  %1729 = or i1 %1727, %1728
  br i1 %1729, label %originalBB291, label %originalBB291alteredBB

originalBB291:                                    ; preds = %originalBB291alteredBB, %1721
  %1730 = load i32, i32* @x
  %1731 = load i32, i32* @y
  %1732 = sub i32 %1730, 1
  %1733 = mul i32 %1730, %1732
  %1734 = urem i32 %1733, 2
  %1735 = icmp eq i32 %1734, 0
  %1736 = icmp slt i32 %1731, 10
  %1737 = or i1 %1735, %1736
  br i1 %1737, label %originalBBpart2293, label %originalBB291alteredBB

originalBBpart2293:                               ; preds = %originalBB291
  br label %2380

; <label>:1738:                                   ; preds = %1704
  %1739 = load i32, i32* %34, align 4
  %1740 = load i32, i32* %35, align 4
  %1741 = call i32 @regclass_compatible_p(i32 %1739, i32 %1740)
  %1742 = icmp ne i32 %1741, 0
  br i1 %1742, label %1766, label %1743

; <label>:1743:                                   ; preds = %1738
  %1744 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %1745 = icmp ne %struct.rtx_def* %1744, null
  br i1 %1745, label %1765, label %1746

; <label>:1746:                                   ; preds = %1743
  %1747 = load i32, i32* @x
  %1748 = load i32, i32* @y
  %1749 = sub i32 %1747, 1
  %1750 = mul i32 %1747, %1749
  %1751 = urem i32 %1750, 2
  %1752 = icmp eq i32 %1751, 0
  %1753 = icmp slt i32 %1748, 10
  %1754 = or i1 %1752, %1753
  br i1 %1754, label %originalBB295, label %originalBB295alteredBB

originalBB295:                                    ; preds = %originalBB295alteredBB, %1746
  %1755 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  store %struct.rtx_def* %1755, %struct.rtx_def** %12, align 8
  %1756 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  store %struct.rtx_def* %1756, %struct.rtx_def** %13, align 8
  %1757 = load i32, i32* @x
  %1758 = load i32, i32* @y
  %1759 = sub i32 %1757, 1
  %1760 = mul i32 %1757, %1759
  %1761 = urem i32 %1760, 2
  %1762 = icmp eq i32 %1761, 0
  %1763 = icmp slt i32 %1758, 10
  %1764 = or i1 %1762, %1763
  br i1 %1764, label %originalBBpart2297, label %originalBB295alteredBB

originalBBpart2297:                               ; preds = %originalBB295
  br label %1765

; <label>:1765:                                   ; preds = %originalBBpart2297, %1743
  br label %2380

; <label>:1766:                                   ; preds = %1738
  %1767 = load i32, i32* @x
  %1768 = load i32, i32* @y
  %1769 = sub i32 %1767, 1
  %1770 = mul i32 %1767, %1769
  %1771 = urem i32 %1770, 2
  %1772 = icmp eq i32 %1771, 0
  %1773 = icmp slt i32 %1768, 10
  %1774 = or i1 %1772, %1773
  br i1 %1774, label %originalBB299, label %originalBB299alteredBB

originalBB299:                                    ; preds = %originalBB299alteredBB, %1766
  %1775 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %1776 = load %struct.rtx_def*, %struct.rtx_def** %27, align 8
  %1777 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1776, i32 0, i32 1
  %1778 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1777, i64 0, i64 1
  %1779 = bitcast %union.rtunion_def* %1778 to %struct.rtx_def**
  %1780 = load %struct.rtx_def*, %struct.rtx_def** %1779, align 8
  %1781 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %1775, %struct.rtx_def* %1780)
  %1782 = icmp ne i32 %1781, 0
  %1783 = load i32, i32* @x
  %1784 = load i32, i32* @y
  %1785 = sub i32 %1783, 1
  %1786 = mul i32 %1783, %1785
  %1787 = urem i32 %1786, 2
  %1788 = icmp eq i32 %1787, 0
  %1789 = icmp slt i32 %1784, 10
  %1790 = or i1 %1788, %1789
  br i1 %1790, label %originalBBpart2301, label %originalBB299alteredBB

originalBBpart2301:                               ; preds = %originalBB299
  br i1 %1782, label %1791, label %1798

; <label>:1791:                                   ; preds = %originalBBpart2301
  %1792 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %1793 = icmp ne %struct.rtx_def* %1792, null
  br i1 %1793, label %1797, label %1794

; <label>:1794:                                   ; preds = %1791
  %1795 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  store %struct.rtx_def* %1795, %struct.rtx_def** %12, align 8
  %1796 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  store %struct.rtx_def* %1796, %struct.rtx_def** %13, align 8
  br label %1797

; <label>:1797:                                   ; preds = %1794, %1791
  br label %2380

; <label>:1798:                                   ; preds = %originalBBpart2301
  %1799 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %1800 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1801 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %1802 = call i32 @reg_is_remote_constant_p(%struct.rtx_def* %1799, %struct.rtx_def* %1800, %struct.rtx_def* %1801)
  %1803 = icmp ne i32 %1802, 0
  br i1 %1803, label %1804, label %1827

; <label>:1804:                                   ; preds = %1798
  %1805 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %1806 = icmp ne %struct.rtx_def* %1805, null
  br i1 %1806, label %1810, label %1807

; <label>:1807:                                   ; preds = %1804
  %1808 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  store %struct.rtx_def* %1808, %struct.rtx_def** %12, align 8
  %1809 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  store %struct.rtx_def* %1809, %struct.rtx_def** %13, align 8
  br label %1810

; <label>:1810:                                   ; preds = %1807, %1804
  %1811 = load i32, i32* @x
  %1812 = load i32, i32* @y
  %1813 = sub i32 %1811, 1
  %1814 = mul i32 %1811, %1813
  %1815 = urem i32 %1814, 2
  %1816 = icmp eq i32 %1815, 0
  %1817 = icmp slt i32 %1812, 10
  %1818 = or i1 %1816, %1817
  br i1 %1818, label %originalBB303, label %originalBB303alteredBB

originalBB303:                                    ; preds = %originalBB303alteredBB, %1810
  %1819 = load i32, i32* @x
  %1820 = load i32, i32* @y
  %1821 = sub i32 %1819, 1
  %1822 = mul i32 %1819, %1821
  %1823 = urem i32 %1822, 2
  %1824 = icmp eq i32 %1823, 0
  %1825 = icmp slt i32 %1820, 10
  %1826 = or i1 %1824, %1825
  br i1 %1826, label %originalBBpart2305, label %originalBB303alteredBB

originalBBpart2305:                               ; preds = %originalBB303
  br label %2380

; <label>:1827:                                   ; preds = %1798
  %1828 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %1829 = icmp ne %struct._IO_FILE* %1828, null
  br i1 %1829, label %1830, label %1840

; <label>:1830:                                   ; preds = %1827
  %1831 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %1832 = load i32, i32* %24, align 4
  %1833 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1834 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1833, i32 0, i32 1
  %1835 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1834, i64 0, i64 0
  %1836 = bitcast %union.rtunion_def* %1835 to i32*
  %1837 = load i32, i32* %1836, align 8
  %1838 = load i32, i32* %25, align 4
  %1839 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1831, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i32 0, i32 0), i32 %1832, i32 %1837, i32 %1838)
  br label %1840

; <label>:1840:                                   ; preds = %1830, %1827
  store i32 0, i32* %36, align 4
  %1841 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1842 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1841, i32 0, i32 1
  %1843 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1842, i64 0, i64 1
  %1844 = bitcast %union.rtunion_def* %1843 to %struct.rtx_def**
  %1845 = load %struct.rtx_def*, %struct.rtx_def** %1844, align 8
  store %struct.rtx_def* %1845, %struct.rtx_def** %28, align 8
  br label %1846

; <label>:1846:                                   ; preds = %2152, %1840
  %1847 = load i32, i32* @x
  %1848 = load i32, i32* @y
  %1849 = sub i32 %1847, 1
  %1850 = mul i32 %1847, %1849
  %1851 = urem i32 %1850, 2
  %1852 = icmp eq i32 %1851, 0
  %1853 = icmp slt i32 %1848, 10
  %1854 = or i1 %1852, %1853
  br i1 %1854, label %originalBB307, label %originalBB307alteredBB

originalBB307:                                    ; preds = %originalBB307alteredBB, %1846
  %1855 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %1856 = icmp ne %struct.rtx_def* %1855, null
  %1857 = load i32, i32* @x
  %1858 = load i32, i32* @y
  %1859 = sub i32 %1857, 1
  %1860 = mul i32 %1857, %1859
  %1861 = urem i32 %1860, 2
  %1862 = icmp eq i32 %1861, 0
  %1863 = icmp slt i32 %1858, 10
  %1864 = or i1 %1862, %1863
  br i1 %1864, label %originalBBpart2309, label %originalBB307alteredBB

originalBBpart2309:                               ; preds = %originalBB307
  br i1 %1856, label %1865, label %2158

; <label>:1865:                                   ; preds = %originalBBpart2309
  %1866 = load i32, i32* @x
  %1867 = load i32, i32* @y
  %1868 = sub i32 %1866, 1
  %1869 = mul i32 %1866, %1868
  %1870 = urem i32 %1869, 2
  %1871 = icmp eq i32 %1870, 0
  %1872 = icmp slt i32 %1867, 10
  %1873 = or i1 %1871, %1872
  br i1 %1873, label %originalBB311, label %originalBB311alteredBB

originalBB311:                                    ; preds = %originalBB311alteredBB, %1865
  %1874 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %1875 = call i32 @perhaps_ends_bb_p(%struct.rtx_def* %1874)
  %1876 = icmp ne i32 %1875, 0
  %1877 = load i32, i32* @x
  %1878 = load i32, i32* @y
  %1879 = sub i32 %1877, 1
  %1880 = mul i32 %1877, %1879
  %1881 = urem i32 %1880, 2
  %1882 = icmp eq i32 %1881, 0
  %1883 = icmp slt i32 %1878, 10
  %1884 = or i1 %1882, %1883
  br i1 %1884, label %originalBBpart2313, label %originalBB311alteredBB

originalBBpart2313:                               ; preds = %originalBB311
  br i1 %1876, label %1885, label %1902

; <label>:1885:                                   ; preds = %originalBBpart2313
  %1886 = load i32, i32* @x
  %1887 = load i32, i32* @y
  %1888 = sub i32 %1886, 1
  %1889 = mul i32 %1886, %1888
  %1890 = urem i32 %1889, 2
  %1891 = icmp eq i32 %1890, 0
  %1892 = icmp slt i32 %1887, 10
  %1893 = or i1 %1891, %1892
  br i1 %1893, label %originalBB315, label %originalBB315alteredBB

originalBB315:                                    ; preds = %originalBB315alteredBB, %1885
  %1894 = load i32, i32* @x
  %1895 = load i32, i32* @y
  %1896 = sub i32 %1894, 1
  %1897 = mul i32 %1894, %1896
  %1898 = urem i32 %1897, 2
  %1899 = icmp eq i32 %1898, 0
  %1900 = icmp slt i32 %1895, 10
  %1901 = or i1 %1899, %1900
  br i1 %1901, label %originalBBpart2317, label %originalBB315alteredBB

originalBBpart2317:                               ; preds = %originalBB315
  br label %2158

; <label>:1902:                                   ; preds = %originalBBpart2313
  %1903 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %1904 = bitcast %struct.rtx_def* %1903 to i32*
  %1905 = load i32, i32* %1904, align 8
  %1906 = and i32 %1905, 65535
  %1907 = sext i32 %1906 to i64
  %1908 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %1907
  %1909 = load i8, i8* %1908, align 1
  %1910 = sext i8 %1909 to i32
  %1911 = icmp eq i32 %1910, 105
  br i1 %1911, label %1913, label %1912

; <label>:1912:                                   ; preds = %1902
  br label %2152

; <label>:1913:                                   ; preds = %1902
  %1914 = load i32, i32* @x
  %1915 = load i32, i32* @y
  %1916 = sub i32 %1914, 1
  %1917 = mul i32 %1914, %1916
  %1918 = urem i32 %1917, 2
  %1919 = icmp eq i32 %1918, 0
  %1920 = icmp slt i32 %1915, 10
  %1921 = or i1 %1919, %1920
  br i1 %1921, label %originalBB319, label %originalBB319alteredBB

originalBB319:                                    ; preds = %originalBB319alteredBB, %1913
  %1922 = load i32, i32* @x
  %1923 = load i32, i32* @y
  %1924 = sub i32 %1922, 1
  %1925 = mul i32 %1922, %1924
  %1926 = urem i32 %1925, 2
  %1927 = icmp eq i32 %1926, 0
  %1928 = icmp slt i32 %1923, 10
  %1929 = or i1 %1927, %1928
  br i1 %1929, label %originalBBpart2321, label %originalBB319alteredBB

originalBBpart2321:                               ; preds = %originalBB319
  br label %1930

; <label>:1930:                                   ; preds = %originalBBpart2321
  %1931 = load i32, i32* @x
  %1932 = load i32, i32* @y
  %1933 = sub i32 %1931, 1
  %1934 = mul i32 %1931, %1933
  %1935 = urem i32 %1934, 2
  %1936 = icmp eq i32 %1935, 0
  %1937 = icmp slt i32 %1932, 10
  %1938 = or i1 %1936, %1937
  br i1 %1938, label %originalBB323, label %originalBB323alteredBB

originalBB323:                                    ; preds = %originalBB323alteredBB, %1930
  %1939 = load i32, i32* %36, align 4
  %1940 = add nsw i32 %1939, 1
  store i32 %1940, i32* %36, align 4
  %1941 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %1942 = bitcast %struct.rtx_def* %1941 to i32*
  %1943 = load i32, i32* %1942, align 8
  %1944 = and i32 %1943, 65535
  %1945 = sext i32 %1944 to i64
  %1946 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %1945
  %1947 = load i8, i8* %1946, align 1
  %1948 = sext i8 %1947 to i32
  %1949 = icmp eq i32 %1948, 105
  %1950 = load i32, i32* @x
  %1951 = load i32, i32* @y
  %1952 = sub i32 %1950, 1
  %1953 = mul i32 %1950, %1952
  %1954 = urem i32 %1953, 2
  %1955 = icmp eq i32 %1954, 0
  %1956 = icmp slt i32 %1951, 10
  %1957 = or i1 %1955, %1956
  br i1 %1957, label %originalBBpart2337, label %originalBB323alteredBB

originalBBpart2337:                               ; preds = %originalBB323
  br i1 %1949, label %1958, label %2032

; <label>:1958:                                   ; preds = %originalBBpart2337
  %1959 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %1960 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1959, i32 0, i32 1
  %1961 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1960, i64 0, i64 3
  %1962 = bitcast %union.rtunion_def* %1961 to %struct.rtx_def**
  %1963 = load %struct.rtx_def*, %struct.rtx_def** %1962, align 8
  %1964 = bitcast %struct.rtx_def* %1963 to i32*
  %1965 = load i32, i32* %1964, align 8
  %1966 = and i32 %1965, 65535
  %1967 = icmp eq i32 %1966, 47
  br i1 %1967, label %1968, label %1990

; <label>:1968:                                   ; preds = %1958
  %1969 = load i32, i32* @x
  %1970 = load i32, i32* @y
  %1971 = sub i32 %1969, 1
  %1972 = mul i32 %1969, %1971
  %1973 = urem i32 %1972, 2
  %1974 = icmp eq i32 %1973, 0
  %1975 = icmp slt i32 %1970, 10
  %1976 = or i1 %1974, %1975
  br i1 %1976, label %originalBB339, label %originalBB339alteredBB

originalBB339:                                    ; preds = %originalBB339alteredBB, %1968
  %1977 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %1978 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1977, i32 0, i32 1
  %1979 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1978, i64 0, i64 3
  %1980 = bitcast %union.rtunion_def* %1979 to %struct.rtx_def**
  %1981 = load %struct.rtx_def*, %struct.rtx_def** %1980, align 8
  %1982 = load i32, i32* @x
  %1983 = load i32, i32* @y
  %1984 = sub i32 %1982, 1
  %1985 = mul i32 %1982, %1984
  %1986 = urem i32 %1985, 2
  %1987 = icmp eq i32 %1986, 0
  %1988 = icmp slt i32 %1983, 10
  %1989 = or i1 %1987, %1988
  br i1 %1989, label %originalBBpart2341, label %originalBB339alteredBB

originalBBpart2341:                               ; preds = %originalBB339
  br label %2014

; <label>:1990:                                   ; preds = %1958
  %1991 = load i32, i32* @x
  %1992 = load i32, i32* @y
  %1993 = sub i32 %1991, 1
  %1994 = mul i32 %1991, %1993
  %1995 = urem i32 %1994, 2
  %1996 = icmp eq i32 %1995, 0
  %1997 = icmp slt i32 %1992, 10
  %1998 = or i1 %1996, %1997
  br i1 %1998, label %originalBB343, label %originalBB343alteredBB

originalBB343:                                    ; preds = %originalBB343alteredBB, %1990
  %1999 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2000 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2001 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2000, i32 0, i32 1
  %2002 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2001, i64 0, i64 3
  %2003 = bitcast %union.rtunion_def* %2002 to %struct.rtx_def**
  %2004 = load %struct.rtx_def*, %struct.rtx_def** %2003, align 8
  %2005 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %1999, %struct.rtx_def* %2004)
  %2006 = load i32, i32* @x
  %2007 = load i32, i32* @y
  %2008 = sub i32 %2006, 1
  %2009 = mul i32 %2006, %2008
  %2010 = urem i32 %2009, 2
  %2011 = icmp eq i32 %2010, 0
  %2012 = icmp slt i32 %2007, 10
  %2013 = or i1 %2011, %2012
  br i1 %2013, label %originalBBpart2345, label %originalBB343alteredBB

originalBBpart2345:                               ; preds = %originalBB343
  br label %2014

; <label>:2014:                                   ; preds = %originalBBpart2345, %originalBBpart2341
  %2015 = phi %struct.rtx_def* [ %1981, %originalBBpart2341 ], [ %2005, %originalBBpart2345 ]
  %2016 = load i32, i32* @x
  %2017 = load i32, i32* @y
  %2018 = sub i32 %2016, 1
  %2019 = mul i32 %2016, %2018
  %2020 = urem i32 %2019, 2
  %2021 = icmp eq i32 %2020, 0
  %2022 = icmp slt i32 %2017, 10
  %2023 = or i1 %2021, %2022
  br i1 %2023, label %originalBB347, label %originalBB347alteredBB

originalBB347:                                    ; preds = %originalBB347alteredBB, %2014
  %2024 = load i32, i32* @x
  %2025 = load i32, i32* @y
  %2026 = sub i32 %2024, 1
  %2027 = mul i32 %2024, %2026
  %2028 = urem i32 %2027, 2
  %2029 = icmp eq i32 %2028, 0
  %2030 = icmp slt i32 %2025, 10
  %2031 = or i1 %2029, %2030
  br i1 %2031, label %originalBBpart2349, label %originalBB347alteredBB

originalBBpart2349:                               ; preds = %originalBB347
  br label %2033

; <label>:2032:                                   ; preds = %originalBBpart2337
  br label %2033

; <label>:2033:                                   ; preds = %2032, %originalBBpart2349
  %2034 = phi %struct.rtx_def* [ %2015, %originalBBpart2349 ], [ null, %2032 ]
  store %struct.rtx_def* %2034, %struct.rtx_def** %38, align 8
  %2035 = load %struct.rtx_def*, %struct.rtx_def** %38, align 8
  %2036 = icmp ne %struct.rtx_def* %2035, null
  br i1 %2036, label %2037, label %2091

; <label>:2037:                                   ; preds = %2033
  %2038 = load i32, i32* @x
  %2039 = load i32, i32* @y
  %2040 = sub i32 %2038, 1
  %2041 = mul i32 %2038, %2040
  %2042 = urem i32 %2041, 2
  %2043 = icmp eq i32 %2042, 0
  %2044 = icmp slt i32 %2039, 10
  %2045 = or i1 %2043, %2044
  br i1 %2045, label %originalBB351, label %originalBB351alteredBB

originalBB351:                                    ; preds = %originalBB351alteredBB, %2037
  %2046 = load %struct.rtx_def*, %struct.rtx_def** %38, align 8
  %2047 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2046, i32 0, i32 1
  %2048 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2047, i64 0, i64 0
  %2049 = bitcast %union.rtunion_def* %2048 to %struct.rtx_def**
  %2050 = load %struct.rtx_def*, %struct.rtx_def** %2049, align 8
  %2051 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %2052 = icmp eq %struct.rtx_def* %2050, %2051
  %2053 = load i32, i32* @x
  %2054 = load i32, i32* @y
  %2055 = sub i32 %2053, 1
  %2056 = mul i32 %2053, %2055
  %2057 = urem i32 %2056, 2
  %2058 = icmp eq i32 %2057, 0
  %2059 = icmp slt i32 %2054, 10
  %2060 = or i1 %2058, %2059
  br i1 %2060, label %originalBBpart2353, label %originalBB351alteredBB

originalBBpart2353:                               ; preds = %originalBB351
  br i1 %2052, label %2061, label %2091

; <label>:2061:                                   ; preds = %originalBBpart2353
  %2062 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %2063 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %2064 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2065 = call i32 @validate_replace_rtx(%struct.rtx_def* %2062, %struct.rtx_def* %2063, %struct.rtx_def* %2064)
  %2066 = icmp ne i32 %2065, 0
  br i1 %2066, label %2067, label %2090

; <label>:2067:                                   ; preds = %2061
  %2068 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2069 = load %struct.rtx_def*, %struct.rtx_def** %38, align 8
  %2070 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2069, i32 0, i32 1
  %2071 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2070, i64 0, i64 0
  %2072 = bitcast %union.rtunion_def* %2071 to %struct.rtx_def**
  %2073 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %2074 = call i32 @validate_change(%struct.rtx_def* %2068, %struct.rtx_def** %2072, %struct.rtx_def* %2073, i32 0)
  %2075 = icmp ne i32 %2074, 0
  br i1 %2075, label %2076, label %2077

; <label>:2076:                                   ; preds = %2067
  store i32 1, i32* %26, align 4
  br label %2089

; <label>:2077:                                   ; preds = %2067
  %2078 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %2079 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %2080 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2081 = call i32 @validate_replace_rtx(%struct.rtx_def* %2078, %struct.rtx_def* %2079, %struct.rtx_def* %2080)
  %2082 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2083 = load i32, i32* %25, align 4
  %2084 = sext i32 %2083 to i64
  %2085 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i64 0, i64 %2084
  %2086 = load %struct.rtx_def**, %struct.rtx_def*** %2085, align 8
  %2087 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %2088 = call i32 @validate_change(%struct.rtx_def* %2082, %struct.rtx_def** %2086, %struct.rtx_def* %2087, i32 0)
  br label %2089

; <label>:2089:                                   ; preds = %2077, %2076
  br label %2090

; <label>:2090:                                   ; preds = %2089, %2061
  br label %2158

; <label>:2091:                                   ; preds = %originalBBpart2353, %2033
  %2092 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %2093 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2094 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2093, i32 0, i32 1
  %2095 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2094, i64 0, i64 3
  %2096 = bitcast %union.rtunion_def* %2095 to %struct.rtx_def**
  %2097 = load %struct.rtx_def*, %struct.rtx_def** %2096, align 8
  %2098 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %2092, %struct.rtx_def* %2097)
  %2099 = icmp ne i32 %2098, 0
  br i1 %2099, label %2109, label %2100

; <label>:2100:                                   ; preds = %2091
  %2101 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %2102 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2102, i32 0, i32 1
  %2104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2103, i64 0, i64 3
  %2105 = bitcast %union.rtunion_def* %2104 to %struct.rtx_def**
  %2106 = load %struct.rtx_def*, %struct.rtx_def** %2105, align 8
  %2107 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %2101, %struct.rtx_def* %2106)
  %2108 = icmp ne i32 %2107, 0
  br i1 %2108, label %2109, label %2126

; <label>:2109:                                   ; preds = %2100, %2091
  %2110 = load i32, i32* @x
  %2111 = load i32, i32* @y
  %2112 = sub i32 %2110, 1
  %2113 = mul i32 %2110, %2112
  %2114 = urem i32 %2113, 2
  %2115 = icmp eq i32 %2114, 0
  %2116 = icmp slt i32 %2111, 10
  %2117 = or i1 %2115, %2116
  br i1 %2117, label %originalBB355, label %originalBB355alteredBB

originalBB355:                                    ; preds = %originalBB355alteredBB, %2109
  %2118 = load i32, i32* @x
  %2119 = load i32, i32* @y
  %2120 = sub i32 %2118, 1
  %2121 = mul i32 %2118, %2120
  %2122 = urem i32 %2121, 2
  %2123 = icmp eq i32 %2122, 0
  %2124 = icmp slt i32 %2119, 10
  %2125 = or i1 %2123, %2124
  br i1 %2125, label %originalBBpart2357, label %originalBB355alteredBB

originalBBpart2357:                               ; preds = %originalBB355
  br label %2158

; <label>:2126:                                   ; preds = %2100
  %2127 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2128 = bitcast %struct.rtx_def* %2127 to i32*
  %2129 = load i32, i32* %2128, align 8
  %2130 = and i32 %2129, 65535
  %2131 = icmp eq i32 %2130, 34
  br i1 %2131, label %2132, label %2151

; <label>:2132:                                   ; preds = %2126
  %2133 = load i32, i32* %33, align 4
  %2134 = add nsw i32 %2133, 1
  store i32 %2134, i32* %33, align 4
  %2135 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2136 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2135, i32 0, i32 4
  %2137 = bitcast %union.varray_data_tag* %2136 to [1 x %struct.reg_info_def*]*
  %2138 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %2139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2138, i32 0, i32 1
  %2140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2139, i64 0, i64 0
  %2141 = bitcast %union.rtunion_def* %2140 to i32*
  %2142 = load i32, i32* %2141, align 8
  %2143 = zext i32 %2142 to i64
  %2144 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2137, i64 0, i64 %2143
  %2145 = load %struct.reg_info_def*, %struct.reg_info_def** %2144, align 8
  %2146 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2145, i32 0, i32 8
  %2147 = load i32, i32* %2146, align 4
  %2148 = icmp eq i32 %2147, 0
  br i1 %2148, label %2149, label %2150

; <label>:2149:                                   ; preds = %2132
  br label %2158

; <label>:2150:                                   ; preds = %2132
  br label %2151

; <label>:2151:                                   ; preds = %2150, %2126
  br label %2152

; <label>:2152:                                   ; preds = %2151, %1912
  %2153 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2153, i32 0, i32 1
  %2155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2154, i64 0, i64 1
  %2156 = bitcast %union.rtunion_def* %2155 to %struct.rtx_def**
  %2157 = load %struct.rtx_def*, %struct.rtx_def** %2156, align 8
  store %struct.rtx_def* %2157, %struct.rtx_def** %28, align 8
  br label %1846

; <label>:2158:                                   ; preds = %2149, %originalBBpart2357, %2090, %originalBBpart2317, %originalBBpart2309
  %2159 = load i32, i32* %26, align 4
  %2160 = icmp ne i32 %2159, 0
  br i1 %2160, label %2161, label %2379

; <label>:2161:                                   ; preds = %2158
  %2162 = load i32, i32* @x
  %2163 = load i32, i32* @y
  %2164 = sub i32 %2162, 1
  %2165 = mul i32 %2162, %2164
  %2166 = urem i32 %2165, 2
  %2167 = icmp eq i32 %2166, 0
  %2168 = icmp slt i32 %2163, 10
  %2169 = or i1 %2167, %2168
  br i1 %2169, label %originalBB359, label %originalBB359alteredBB

originalBB359:                                    ; preds = %originalBB359alteredBB, %2161
  %2170 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2171 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  call void @remove_note(%struct.rtx_def* %2170, %struct.rtx_def* %2171)
  %2172 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %2173 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2173, i32 0, i32 1
  %2175 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2174, i64 0, i64 3
  %2176 = bitcast %union.rtunion_def* %2175 to %struct.rtx_def**
  %2177 = load %struct.rtx_def*, %struct.rtx_def** %2176, align 8
  %2178 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %2172, %struct.rtx_def* %2177)
  %2179 = icmp ne i32 %2178, 0
  %2180 = load i32, i32* @x
  %2181 = load i32, i32* @y
  %2182 = sub i32 %2180, 1
  %2183 = mul i32 %2180, %2182
  %2184 = urem i32 %2183, 2
  %2185 = icmp eq i32 %2184, 0
  %2186 = icmp slt i32 %2181, 10
  %2187 = or i1 %2185, %2186
  br i1 %2187, label %originalBBpart2361, label %originalBB359alteredBB

originalBBpart2361:                               ; preds = %originalBB359
  br i1 %2179, label %2188, label %2203

; <label>:2188:                                   ; preds = %originalBBpart2361
  %2189 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2189, i32 0, i32 1
  %2191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2190, i64 0, i64 6
  %2192 = bitcast %union.rtunion_def* %2191 to %struct.rtx_def**
  %2193 = load %struct.rtx_def*, %struct.rtx_def** %2192, align 8
  %2194 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %2195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2194, i32 0, i32 1
  %2196 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2195, i64 0, i64 1
  %2197 = bitcast %union.rtunion_def* %2196 to %struct.rtx_def**
  store %struct.rtx_def* %2193, %struct.rtx_def** %2197, align 8
  %2198 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %2199 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2200 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2199, i32 0, i32 1
  %2201 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2200, i64 0, i64 6
  %2202 = bitcast %union.rtunion_def* %2201 to %struct.rtx_def**
  store %struct.rtx_def* %2198, %struct.rtx_def** %2202, align 8
  br label %2203

; <label>:2203:                                   ; preds = %2188, %originalBBpart2361
  %2204 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2205 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %2206 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %2204, i32 1, %struct.rtx_def* %2205)
  store %struct.rtx_def* %2206, %struct.rtx_def** %32, align 8
  %2207 = icmp ne %struct.rtx_def* %2206, null
  br i1 %2207, label %2208, label %2227

; <label>:2208:                                   ; preds = %2203
  %2209 = load i32, i32* @x
  %2210 = load i32, i32* @y
  %2211 = sub i32 %2209, 1
  %2212 = mul i32 %2209, %2211
  %2213 = urem i32 %2212, 2
  %2214 = icmp eq i32 %2213, 0
  %2215 = icmp slt i32 %2210, 10
  %2216 = or i1 %2214, %2215
  br i1 %2216, label %originalBB363, label %originalBB363alteredBB

originalBB363:                                    ; preds = %originalBB363alteredBB, %2208
  %2217 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2218 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  call void @remove_note(%struct.rtx_def* %2217, %struct.rtx_def* %2218)
  %2219 = load i32, i32* @x
  %2220 = load i32, i32* @y
  %2221 = sub i32 %2219, 1
  %2222 = mul i32 %2219, %2221
  %2223 = urem i32 %2222, 2
  %2224 = icmp eq i32 %2223, 0
  %2225 = icmp slt i32 %2220, 10
  %2226 = or i1 %2224, %2225
  br i1 %2226, label %originalBBpart2365, label %originalBB363alteredBB

originalBBpart2365:                               ; preds = %originalBB363
  br label %2227

; <label>:2227:                                   ; preds = %originalBBpart2365, %2203
  %2228 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %2229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2228, i32 0, i32 1
  %2230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2229, i64 0, i64 0
  %2231 = bitcast %union.rtunion_def* %2230 to i32*
  %2232 = load i32, i32* %2231, align 8
  store i32 %2232, i32* %39, align 4
  %2233 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %2234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2233, i32 0, i32 1
  %2235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2234, i64 0, i64 0
  %2236 = bitcast %union.rtunion_def* %2235 to i32*
  %2237 = load i32, i32* %2236, align 8
  store i32 %2237, i32* %40, align 4
  %2238 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2239 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2238, i32 0, i32 4
  %2240 = bitcast %union.varray_data_tag* %2239 to [1 x %struct.reg_info_def*]*
  %2241 = load i32, i32* %39, align 4
  %2242 = sext i32 %2241 to i64
  %2243 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2240, i64 0, i64 %2242
  %2244 = load %struct.reg_info_def*, %struct.reg_info_def** %2243, align 8
  %2245 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2244, i32 0, i32 3
  %2246 = load i32, i32* %2245, align 4
  %2247 = add nsw i32 %2246, 1
  store i32 %2247, i32* %2245, align 4
  %2248 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2249 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2248, i32 0, i32 4
  %2250 = bitcast %union.varray_data_tag* %2249 to [1 x %struct.reg_info_def*]*
  %2251 = load i32, i32* %40, align 4
  %2252 = sext i32 %2251 to i64
  %2253 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2250, i64 0, i64 %2252
  %2254 = load %struct.reg_info_def*, %struct.reg_info_def** %2253, align 8
  %2255 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2254, i32 0, i32 3
  %2256 = load i32, i32* %2255, align 4
  %2257 = add nsw i32 %2256, -1
  store i32 %2257, i32* %2255, align 4
  %2258 = load i32, i32* %33, align 4
  %2259 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2260 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2259, i32 0, i32 4
  %2261 = bitcast %union.varray_data_tag* %2260 to [1 x %struct.reg_info_def*]*
  %2262 = load i32, i32* %39, align 4
  %2263 = sext i32 %2262 to i64
  %2264 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2261, i64 0, i64 %2263
  %2265 = load %struct.reg_info_def*, %struct.reg_info_def** %2264, align 8
  %2266 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2265, i32 0, i32 8
  %2267 = load i32, i32* %2266, align 4
  %2268 = add nsw i32 %2267, %2258
  store i32 %2268, i32* %2266, align 4
  %2269 = load i32, i32* %33, align 4
  %2270 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2271 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2270, i32 0, i32 4
  %2272 = bitcast %union.varray_data_tag* %2271 to [1 x %struct.reg_info_def*]*
  %2273 = load i32, i32* %40, align 4
  %2274 = sext i32 %2273 to i64
  %2275 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2272, i64 0, i64 %2274
  %2276 = load %struct.reg_info_def*, %struct.reg_info_def** %2275, align 8
  %2277 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2276, i32 0, i32 8
  %2278 = load i32, i32* %2277, align 4
  %2279 = sub nsw i32 %2278, %2269
  store i32 %2279, i32* %2277, align 4
  %2280 = load i32, i32* %36, align 4
  %2281 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2282 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2281, i32 0, i32 4
  %2283 = bitcast %union.varray_data_tag* %2282 to [1 x %struct.reg_info_def*]*
  %2284 = load i32, i32* %39, align 4
  %2285 = sext i32 %2284 to i64
  %2286 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2283, i64 0, i64 %2285
  %2287 = load %struct.reg_info_def*, %struct.reg_info_def** %2286, align 8
  %2288 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2287, i32 0, i32 7
  %2289 = load i32, i32* %2288, align 4
  %2290 = add nsw i32 %2289, %2280
  store i32 %2290, i32* %2288, align 4
  %2291 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2292 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2291, i32 0, i32 4
  %2293 = bitcast %union.varray_data_tag* %2292 to [1 x %struct.reg_info_def*]*
  %2294 = load i32, i32* %40, align 4
  %2295 = sext i32 %2294 to i64
  %2296 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2293, i64 0, i64 %2295
  %2297 = load %struct.reg_info_def*, %struct.reg_info_def** %2296, align 8
  %2298 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2297, i32 0, i32 7
  %2299 = load i32, i32* %2298, align 4
  %2300 = icmp sge i32 %2299, 0
  br i1 %2300, label %2301, label %2365

; <label>:2301:                                   ; preds = %2227
  %2302 = load i32, i32* @x
  %2303 = load i32, i32* @y
  %2304 = sub i32 %2302, 1
  %2305 = mul i32 %2302, %2304
  %2306 = urem i32 %2305, 2
  %2307 = icmp eq i32 %2306, 0
  %2308 = icmp slt i32 %2303, 10
  %2309 = or i1 %2307, %2308
  br i1 %2309, label %originalBB367, label %originalBB367alteredBB

originalBB367:                                    ; preds = %originalBB367alteredBB, %2301
  %2310 = load i32, i32* %36, align 4
  %2311 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2312 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2311, i32 0, i32 4
  %2313 = bitcast %union.varray_data_tag* %2312 to [1 x %struct.reg_info_def*]*
  %2314 = load i32, i32* %40, align 4
  %2315 = sext i32 %2314 to i64
  %2316 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2313, i64 0, i64 %2315
  %2317 = load %struct.reg_info_def*, %struct.reg_info_def** %2316, align 8
  %2318 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2317, i32 0, i32 7
  %2319 = load i32, i32* %2318, align 4
  %2320 = sub nsw i32 %2319, %2310
  store i32 %2320, i32* %2318, align 4
  %2321 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2322 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2321, i32 0, i32 4
  %2323 = bitcast %union.varray_data_tag* %2322 to [1 x %struct.reg_info_def*]*
  %2324 = load i32, i32* %40, align 4
  %2325 = sext i32 %2324 to i64
  %2326 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2323, i64 0, i64 %2325
  %2327 = load %struct.reg_info_def*, %struct.reg_info_def** %2326, align 8
  %2328 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2327, i32 0, i32 7
  %2329 = load i32, i32* %2328, align 4
  %2330 = icmp slt i32 %2329, 2
  %2331 = load i32, i32* @x
  %2332 = load i32, i32* @y
  %2333 = sub i32 %2331, 1
  %2334 = mul i32 %2331, %2333
  %2335 = urem i32 %2334, 2
  %2336 = icmp eq i32 %2335, 0
  %2337 = icmp slt i32 %2332, 10
  %2338 = or i1 %2336, %2337
  br i1 %2338, label %originalBBpart2388, label %originalBB367alteredBB

originalBBpart2388:                               ; preds = %originalBB367
  br i1 %2330, label %2339, label %2348

; <label>:2339:                                   ; preds = %originalBBpart2388
  %2340 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2341 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2340, i32 0, i32 4
  %2342 = bitcast %union.varray_data_tag* %2341 to [1 x %struct.reg_info_def*]*
  %2343 = load i32, i32* %40, align 4
  %2344 = sext i32 %2343 to i64
  %2345 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2342, i64 0, i64 %2344
  %2346 = load %struct.reg_info_def*, %struct.reg_info_def** %2345, align 8
  %2347 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2346, i32 0, i32 7
  store i32 2, i32* %2347, align 4
  br label %2348

; <label>:2348:                                   ; preds = %2339, %originalBBpart2388
  %2349 = load i32, i32* @x
  %2350 = load i32, i32* @y
  %2351 = sub i32 %2349, 1
  %2352 = mul i32 %2349, %2351
  %2353 = urem i32 %2352, 2
  %2354 = icmp eq i32 %2353, 0
  %2355 = icmp slt i32 %2350, 10
  %2356 = or i1 %2354, %2355
  br i1 %2356, label %originalBB390, label %originalBB390alteredBB

originalBB390:                                    ; preds = %originalBB390alteredBB, %2348
  %2357 = load i32, i32* @x
  %2358 = load i32, i32* @y
  %2359 = sub i32 %2357, 1
  %2360 = mul i32 %2357, %2359
  %2361 = urem i32 %2360, 2
  %2362 = icmp eq i32 %2361, 0
  %2363 = icmp slt i32 %2358, 10
  %2364 = or i1 %2362, %2363
  br i1 %2364, label %originalBBpart2392, label %originalBB390alteredBB

originalBBpart2392:                               ; preds = %originalBB390
  br label %2365

; <label>:2365:                                   ; preds = %originalBBpart2392, %2227
  %2366 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %2367 = icmp ne %struct._IO_FILE* %2366, null
  br i1 %2367, label %2368, label %2378

; <label>:2368:                                   ; preds = %2365
  %2369 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %2370 = load i32, i32* %24, align 4
  %2371 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2372 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2371, i32 0, i32 1
  %2373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2372, i64 0, i64 0
  %2374 = bitcast %union.rtunion_def* %2373 to i32*
  %2375 = load i32, i32* %2374, align 8
  %2376 = load i32, i32* %25, align 4
  %2377 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2369, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i32 0, i32 0), i32 %2370, i32 %2375, i32 %2376)
  br label %2378

; <label>:2378:                                   ; preds = %2368, %2365
  br label %2383

; <label>:2379:                                   ; preds = %2158
  br label %2380

; <label>:2380:                                   ; preds = %2379, %originalBBpart2305, %1797, %1765, %originalBBpart2293, %1703, %originalBBpart2269, %originalBBpart2264, %1517, %originalBBpart2252, %1464, %1373, %1352, %1346, %1310, %originalBBpart2209
  %2381 = load i32, i32* %24, align 4
  %2382 = add nsw i32 %2381, 1
  store i32 %2382, i32* %24, align 4
  br label %1250

; <label>:2383:                                   ; preds = %2378, %originalBBpart2289, %1250
  %2384 = load i32, i32* @x
  %2385 = load i32, i32* @y
  %2386 = sub i32 %2384, 1
  %2387 = mul i32 %2384, %2386
  %2388 = urem i32 %2387, 2
  %2389 = icmp eq i32 %2388, 0
  %2390 = icmp slt i32 %2385, 10
  %2391 = or i1 %2389, %2390
  br i1 %2391, label %originalBB394, label %originalBB394alteredBB

originalBB394:                                    ; preds = %originalBB394alteredBB, %2383
  %2392 = load i32, i32* %26, align 4
  %2393 = icmp ne i32 %2392, 0
  %2394 = load i32, i32* @x
  %2395 = load i32, i32* @y
  %2396 = sub i32 %2394, 1
  %2397 = mul i32 %2394, %2396
  %2398 = urem i32 %2397, 2
  %2399 = icmp eq i32 %2398, 0
  %2400 = icmp slt i32 %2395, 10
  %2401 = or i1 %2399, %2400
  br i1 %2401, label %originalBBpart2396, label %originalBB394alteredBB

originalBBpart2396:                               ; preds = %originalBB394
  br i1 %2393, label %2410, label %2402

; <label>:2402:                                   ; preds = %originalBBpart2396
  %2403 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %2404 = icmp ne %struct.rtx_def* %2403, null
  br i1 %2404, label %2405, label %2410

; <label>:2405:                                   ; preds = %2402
  %2406 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2407 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %2408 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2409 = load i32, i32* %7, align 4
  call void @copy_src_to_dest(%struct.rtx_def* %2406, %struct.rtx_def* %2407, %struct.rtx_def* %2408, i32 %2409)
  br label %2410

; <label>:2410:                                   ; preds = %2405, %2402, %originalBBpart2396
  br label %2411

; <label>:2411:                                   ; preds = %2410, %1202
  br label %2412

; <label>:2412:                                   ; preds = %2411, %originalBBpart2201
  %2413 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2414 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2413, i32 0, i32 1
  %2415 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2414, i64 0, i64 1
  %2416 = bitcast %union.rtunion_def* %2415 to %struct.rtx_def**
  %2417 = load %struct.rtx_def*, %struct.rtx_def** %2416, align 8
  store %struct.rtx_def* %2417, %struct.rtx_def** %8, align 8
  br label %1199

; <label>:2418:                                   ; preds = %1199
  store i32 0, i32* %11, align 4
  br label %2419

; <label>:2419:                                   ; preds = %2569, %2418
  %2420 = load i32, i32* %11, align 4
  %2421 = load i32, i32* @n_basic_blocks, align 4
  %2422 = icmp slt i32 %2420, %2421
  br i1 %2422, label %2423, label %2572

; <label>:2423:                                   ; preds = %2419
  %2424 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %2425 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2424, i32 0, i32 4
  %2426 = bitcast %union.varray_data_tag* %2425 to [1 x %struct.basic_block_def*]*
  %2427 = load i32, i32* %11, align 4
  %2428 = sext i32 %2427 to i64
  %2429 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %2426, i64 0, i64 %2428
  %2430 = load %struct.basic_block_def*, %struct.basic_block_def** %2429, align 8
  %2431 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2430, i32 0, i32 1
  %2432 = load %struct.rtx_def*, %struct.rtx_def** %2431, align 8
  store %struct.rtx_def* %2432, %struct.rtx_def** %41, align 8
  %2433 = load %struct.rtx_def*, %struct.rtx_def** %41, align 8
  store %struct.rtx_def* %2433, %struct.rtx_def** %42, align 8
  %2434 = load %struct.rtx_def*, %struct.rtx_def** %42, align 8
  %2435 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2434, i32 0, i32 1
  %2436 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2435, i64 0, i64 2
  %2437 = bitcast %union.rtunion_def* %2436 to %struct.rtx_def**
  %2438 = load %struct.rtx_def*, %struct.rtx_def** %2437, align 8
  store %struct.rtx_def* %2438, %struct.rtx_def** %43, align 8
  br label %2439

; <label>:2439:                                   ; preds = %originalBBpart2412, %2423
  %2440 = load %struct.rtx_def*, %struct.rtx_def** %43, align 8
  %2441 = icmp ne %struct.rtx_def* %2440, null
  br i1 %2441, label %2442, label %2502

; <label>:2442:                                   ; preds = %2439
  %2443 = load i32, i32* @x
  %2444 = load i32, i32* @y
  %2445 = sub i32 %2443, 1
  %2446 = mul i32 %2443, %2445
  %2447 = urem i32 %2446, 2
  %2448 = icmp eq i32 %2447, 0
  %2449 = icmp slt i32 %2444, 10
  %2450 = or i1 %2448, %2449
  br i1 %2450, label %originalBB398, label %originalBB398alteredBB

originalBB398:                                    ; preds = %originalBB398alteredBB, %2442
  %2451 = load %struct.rtx_def*, %struct.rtx_def** %43, align 8
  %2452 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2451, i32 0, i32 1
  %2453 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2452, i64 0, i64 0
  %2454 = bitcast %union.rtunion_def* %2453 to i32*
  %2455 = load i32, i32* %2454, align 8
  %2456 = load i32, i32* %7, align 4
  %2457 = icmp sge i32 %2455, %2456
  %2458 = load i32, i32* @x
  %2459 = load i32, i32* @y
  %2460 = sub i32 %2458, 1
  %2461 = mul i32 %2458, %2460
  %2462 = urem i32 %2461, 2
  %2463 = icmp eq i32 %2462, 0
  %2464 = icmp slt i32 %2459, 10
  %2465 = or i1 %2463, %2464
  br i1 %2465, label %originalBBpart2400, label %originalBB398alteredBB

originalBBpart2400:                               ; preds = %originalBB398
  br i1 %2457, label %2466, label %2502

; <label>:2466:                                   ; preds = %originalBBpart2400
  %2467 = load i32, i32* %11, align 4
  %2468 = load i32, i32* @n_basic_blocks, align 4
  %2469 = sub nsw i32 %2468, 1
  %2470 = icmp eq i32 %2467, %2469
  br i1 %2470, label %2484, label %2471

; <label>:2471:                                   ; preds = %2466
  %2472 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %2473 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2472, i32 0, i32 4
  %2474 = bitcast %union.varray_data_tag* %2473 to [1 x %struct.basic_block_def*]*
  %2475 = load i32, i32* %11, align 4
  %2476 = add nsw i32 %2475, 1
  %2477 = sext i32 %2476 to i64
  %2478 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %2474, i64 0, i64 %2477
  %2479 = load %struct.basic_block_def*, %struct.basic_block_def** %2478, align 8
  %2480 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2479, i32 0, i32 0
  %2481 = load %struct.rtx_def*, %struct.rtx_def** %2480, align 8
  %2482 = load %struct.rtx_def*, %struct.rtx_def** %43, align 8
  %2483 = icmp ne %struct.rtx_def* %2481, %2482
  br label %2484

; <label>:2484:                                   ; preds = %2471, %2466
  %2485 = phi i1 [ true, %2466 ], [ %2483, %2471 ]
  %2486 = load i32, i32* @x
  %2487 = load i32, i32* @y
  %2488 = sub i32 %2486, 1
  %2489 = mul i32 %2486, %2488
  %2490 = urem i32 %2489, 2
  %2491 = icmp eq i32 %2490, 0
  %2492 = icmp slt i32 %2487, 10
  %2493 = or i1 %2491, %2492
  br i1 %2493, label %originalBB402, label %originalBB402alteredBB

originalBB402:                                    ; preds = %originalBB402alteredBB, %2484
  %2494 = load i32, i32* @x
  %2495 = load i32, i32* @y
  %2496 = sub i32 %2494, 1
  %2497 = mul i32 %2494, %2496
  %2498 = urem i32 %2497, 2
  %2499 = icmp eq i32 %2498, 0
  %2500 = icmp slt i32 %2495, 10
  %2501 = or i1 %2499, %2500
  br i1 %2501, label %originalBBpart2404, label %originalBB402alteredBB

originalBBpart2404:                               ; preds = %originalBB402
  br label %2502

; <label>:2502:                                   ; preds = %originalBBpart2404, %originalBBpart2400, %2439
  %2503 = phi i1 [ false, %originalBBpart2400 ], [ false, %2439 ], [ %2485, %originalBBpart2404 ]
  %2504 = load i32, i32* @x
  %2505 = load i32, i32* @y
  %2506 = sub i32 %2504, 1
  %2507 = mul i32 %2504, %2506
  %2508 = urem i32 %2507, 2
  %2509 = icmp eq i32 %2508, 0
  %2510 = icmp slt i32 %2505, 10
  %2511 = or i1 %2509, %2510
  br i1 %2511, label %originalBB406, label %originalBB406alteredBB

originalBB406:                                    ; preds = %originalBB406alteredBB, %2502
  %2512 = load i32, i32* @x
  %2513 = load i32, i32* @y
  %2514 = sub i32 %2512, 1
  %2515 = mul i32 %2512, %2514
  %2516 = urem i32 %2515, 2
  %2517 = icmp eq i32 %2516, 0
  %2518 = icmp slt i32 %2513, 10
  %2519 = or i1 %2517, %2518
  br i1 %2519, label %originalBBpart2408, label %originalBB406alteredBB

originalBBpart2408:                               ; preds = %originalBB406
  br i1 %2503, label %2520, label %2543

; <label>:2520:                                   ; preds = %originalBBpart2408
  %2521 = load i32, i32* @x
  %2522 = load i32, i32* @y
  %2523 = sub i32 %2521, 1
  %2524 = mul i32 %2521, %2523
  %2525 = urem i32 %2524, 2
  %2526 = icmp eq i32 %2525, 0
  %2527 = icmp slt i32 %2522, 10
  %2528 = or i1 %2526, %2527
  br i1 %2528, label %originalBB410, label %originalBB410alteredBB

originalBB410:                                    ; preds = %originalBB410alteredBB, %2520
  %2529 = load %struct.rtx_def*, %struct.rtx_def** %43, align 8
  store %struct.rtx_def* %2529, %struct.rtx_def** %42, align 8
  %2530 = load %struct.rtx_def*, %struct.rtx_def** %42, align 8
  %2531 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2530, i32 0, i32 1
  %2532 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2531, i64 0, i64 2
  %2533 = bitcast %union.rtunion_def* %2532 to %struct.rtx_def**
  %2534 = load %struct.rtx_def*, %struct.rtx_def** %2533, align 8
  store %struct.rtx_def* %2534, %struct.rtx_def** %43, align 8
  %2535 = load i32, i32* @x
  %2536 = load i32, i32* @y
  %2537 = sub i32 %2535, 1
  %2538 = mul i32 %2535, %2537
  %2539 = urem i32 %2538, 2
  %2540 = icmp eq i32 %2539, 0
  %2541 = icmp slt i32 %2536, 10
  %2542 = or i1 %2540, %2541
  br i1 %2542, label %originalBBpart2412, label %originalBB410alteredBB

originalBBpart2412:                               ; preds = %originalBB410
  br label %2439

; <label>:2543:                                   ; preds = %originalBBpart2408
  %2544 = load i32, i32* @x
  %2545 = load i32, i32* @y
  %2546 = sub i32 %2544, 1
  %2547 = mul i32 %2544, %2546
  %2548 = urem i32 %2547, 2
  %2549 = icmp eq i32 %2548, 0
  %2550 = icmp slt i32 %2545, 10
  %2551 = or i1 %2549, %2550
  br i1 %2551, label %originalBB414, label %originalBB414alteredBB

originalBB414:                                    ; preds = %originalBB414alteredBB, %2543
  %2552 = load %struct.rtx_def*, %struct.rtx_def** %42, align 8
  %2553 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %2554 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2553, i32 0, i32 4
  %2555 = bitcast %union.varray_data_tag* %2554 to [1 x %struct.basic_block_def*]*
  %2556 = load i32, i32* %11, align 4
  %2557 = sext i32 %2556 to i64
  %2558 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %2555, i64 0, i64 %2557
  %2559 = load %struct.basic_block_def*, %struct.basic_block_def** %2558, align 8
  %2560 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2559, i32 0, i32 1
  store %struct.rtx_def* %2552, %struct.rtx_def** %2560, align 8
  %2561 = load i32, i32* @x
  %2562 = load i32, i32* @y
  %2563 = sub i32 %2561, 1
  %2564 = mul i32 %2561, %2563
  %2565 = urem i32 %2564, 2
  %2566 = icmp eq i32 %2565, 0
  %2567 = icmp slt i32 %2562, 10
  %2568 = or i1 %2566, %2567
  br i1 %2568, label %originalBBpart2416, label %originalBB414alteredBB

originalBBpart2416:                               ; preds = %originalBB414
  br label %2569

; <label>:2569:                                   ; preds = %originalBBpart2416
  %2570 = load i32, i32* %11, align 4
  %2571 = add nsw i32 %2570, 1
  store i32 %2571, i32* %11, align 4
  br label %2419

; <label>:2572:                                   ; preds = %2419
  br label %2573

; <label>:2573:                                   ; preds = %2572, %185
  %2574 = load i32*, i32** @regno_src_regno, align 8
  %2575 = bitcast i32* %2574 to i8*
  call void @free(i8* %2575) #3
  %2576 = load i32*, i32** @regmove_bb_head, align 8
  %2577 = bitcast i32* %2576 to i8*
  call void @free(i8* %2577) #3
  br label %2578

; <label>:2578:                                   ; preds = %2573, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %47
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %72
  %2579 = load i32, i32* %11, align 4
  %_ = shl i32 %2579, -1
  %_2 = shl i32 %2579, -1
  %_3 = shl i32 %2579, -1
  %_4 = shl i32 %2579, -1
  %2580 = add nsw i32 %2579, -1
  store i32 %2580, i32* %11, align 4
  %2581 = icmp sge i32 %2580, 0
  br label %originalBB1

originalBB8alteredBB:                             ; preds = %originalBB8, %92
  %2582 = load i32*, i32** @regno_src_regno, align 8
  %2583 = load i32, i32* %11, align 4
  %2584 = sext i32 %2583 to i64
  %2585 = getelementptr inbounds i32, i32* %2582, i64 %2584
  store i32 -1, i32* %2585, align 4
  br label %originalBB8

originalBB12alteredBB:                            ; preds = %originalBB12, %129
  %2586 = load i32, i32* %11, align 4
  %_13 = sub i32 0, %2586
  %gen = add i32 %_13, -1
  %2587 = add nsw i32 %2586, -1
  store i32 %2587, i32* %11, align 4
  br label %originalBB12

originalBB17alteredBB:                            ; preds = %originalBB17, %189
  %2588 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %2589 = load i32, i32* %10, align 4
  %2590 = icmp ne i32 %2589, 0
  %2591 = select i1 %2590, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0)
  %2592 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2588, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0), i8* %2591)
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %211
  %2593 = load i32, i32* %10, align 4
  %2594 = icmp ne i32 %2593, 0
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %232
  %2595 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %252
  %2596 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2597 = icmp ne %struct.rtx_def* %2596, null
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %271
  %2598 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2599 = bitcast %struct.rtx_def* %2598 to i32*
  %2600 = load i32, i32* %2599, align 8
  %_34 = sub i32 %2600, 65535
  %gen35 = mul i32 %_34, 65535
  %_36 = shl i32 %2600, 65535
  %2601 = and i32 %2600, 65535
  %2602 = sext i32 %2601 to i64
  %2603 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %2602
  %2604 = load i8, i8* %2603, align 1
  %2605 = sext i8 %2604 to i32
  %2606 = icmp eq i32 %2605, 105
  br label %originalBB33

originalBB40alteredBB:                            ; preds = %originalBB40, %329
  %2607 = load i32, i32* @flag_expensive_optimizations, align 4
  %2608 = icmp ne i32 %2607, 0
  br label %originalBB40

originalBB44alteredBB:                            ; preds = %originalBB44, %351
  %2609 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %2610 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2609, i32 0, i32 1
  %2611 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2610, i64 0, i64 1
  %2612 = bitcast %union.rtunion_def* %2611 to %struct.rtx_def**
  %2613 = load %struct.rtx_def*, %struct.rtx_def** %2612, align 8
  %2614 = bitcast %struct.rtx_def* %2613 to i32*
  %2615 = load i32, i32* %2614, align 8
  %_45 = shl i32 %2615, 65535
  %_46 = sub i32 %2615, 65535
  %gen47 = mul i32 %_46, 65535
  %_48 = sub i32 %2615, 65535
  %gen49 = mul i32 %_48, 65535
  %_50 = sub i32 %2615, 65535
  %gen51 = mul i32 %_50, 65535
  %_52 = sub i32 %2615, 65535
  %gen53 = mul i32 %_52, 65535
  %_54 = sub i32 0, %2615
  %gen55 = add i32 %_54, 65535
  %_56 = sub i32 %2615, 65535
  %gen57 = mul i32 %_56, 65535
  %2616 = and i32 %2615, 65535
  %2617 = icmp eq i32 %2616, 120
  br label %originalBB44

originalBB61alteredBB:                            ; preds = %originalBB61, %377
  %2618 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %2619 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2618, i32 0, i32 1
  %2620 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2619, i64 0, i64 1
  %2621 = bitcast %union.rtunion_def* %2620 to %struct.rtx_def**
  %2622 = load %struct.rtx_def*, %struct.rtx_def** %2621, align 8
  %2623 = bitcast %struct.rtx_def* %2622 to i32*
  %2624 = load i32, i32* %2623, align 8
  %_62 = shl i32 %2624, 65535
  %_63 = sub i32 0, %2624
  %gen64 = add i32 %_63, 65535
  %2625 = and i32 %2624, 65535
  %2626 = icmp eq i32 %2625, 121
  br label %originalBB61

originalBB68alteredBB:                            ; preds = %originalBB68, %417
  %2627 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %2628 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2627, i32 0, i32 1
  %2629 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2628, i64 0, i64 0
  %2630 = bitcast %union.rtunion_def* %2629 to %struct.rtx_def**
  %2631 = load %struct.rtx_def*, %struct.rtx_def** %2630, align 8
  %2632 = bitcast %struct.rtx_def* %2631 to i32*
  %2633 = load i32, i32* %2632, align 8
  %_69 = sub i32 0, %2633
  %gen70 = add i32 %_69, 65535
  %_71 = sub i32 %2633, 65535
  %gen72 = mul i32 %_71, 65535
  %2634 = and i32 %2633, 65535
  %2635 = icmp eq i32 %2634, 61
  br label %originalBB68

originalBB76alteredBB:                            ; preds = %originalBB76, %455
  %2636 = load i32, i32* @flag_expensive_optimizations, align 4
  %2637 = icmp ne i32 %2636, 0
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %487
  %2638 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %2639 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2638, i32 0, i32 1
  %2640 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2639, i64 0, i64 0
  %2641 = bitcast %union.rtunion_def* %2640 to %struct.rtx_def**
  %2642 = load %struct.rtx_def*, %struct.rtx_def** %2641, align 8
  %2643 = bitcast %struct.rtx_def* %2642 to i32*
  %2644 = load i32, i32* %2643, align 8
  %_81 = sub i32 0, %2644
  %gen82 = add i32 %_81, 65535
  %_83 = sub i32 0, %2644
  %gen84 = add i32 %_83, 65535
  %2645 = and i32 %2644, 65535
  %2646 = icmp eq i32 %2645, 61
  br label %originalBB80

originalBB88alteredBB:                            ; preds = %originalBB88, %585
  %2647 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %2648 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2647, i32 0, i32 1
  %2649 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2648, i64 0, i64 1
  %2650 = bitcast %union.rtunion_def* %2649 to %struct.rtx_def**
  %2651 = load %struct.rtx_def*, %struct.rtx_def** %2650, align 8
  %2652 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %2653 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2652, i32 0, i32 1
  %2654 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2653, i64 0, i64 0
  %2655 = bitcast %union.rtunion_def* %2654 to %struct.rtx_def**
  %2656 = load %struct.rtx_def*, %struct.rtx_def** %2655, align 8
  %2657 = icmp ne %struct.rtx_def* %2651, %2656
  br label %originalBB88

originalBB92alteredBB:                            ; preds = %originalBB92, %629
  %2658 = load i32*, i32** @regno_src_regno, align 8
  %2659 = load i32, i32* %17, align 4
  %2660 = sext i32 %2659 to i64
  %2661 = getelementptr inbounds i32, i32* %2658, i64 %2660
  %2662 = load i32, i32* %2661, align 4
  store i32 %2662, i32* %17, align 4
  br label %originalBB92

originalBB96alteredBB:                            ; preds = %originalBB96, %667
  %2663 = load i32, i32* @flag_regmove, align 4
  %2664 = icmp ne i32 %2663, 0
  br label %originalBB96

originalBB100alteredBB:                           ; preds = %originalBB100, %691
  br label %originalBB100

originalBB104alteredBB:                           ; preds = %originalBB104, %714
  %2665 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 0
  %2666 = load i32, i32* %15, align 4
  %2667 = sext i32 %2666 to i64
  %2668 = getelementptr inbounds [30 x i32], [30 x i32]* %2665, i64 0, i64 %2667
  %2669 = load i32, i32* %2668, align 4
  store i32 %2669, i32* %16, align 4
  %2670 = load i32, i32* %16, align 4
  %2671 = icmp slt i32 %2670, 0
  br label %originalBB104

originalBB108alteredBB:                           ; preds = %originalBB108, %739
  %2672 = load i32, i32* %15, align 4
  %2673 = sext i32 %2672 to i64
  %2674 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %2673
  %2675 = load %struct.rtx_def*, %struct.rtx_def** %2674, align 8
  store %struct.rtx_def* %2675, %struct.rtx_def** %18, align 8
  %2676 = load i32, i32* %16, align 4
  %2677 = sext i32 %2676 to i64
  %2678 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %2677
  %2679 = load %struct.rtx_def*, %struct.rtx_def** %2678, align 8
  store %struct.rtx_def* %2679, %struct.rtx_def** %19, align 8
  %2680 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %2681 = bitcast %struct.rtx_def* %2680 to i32*
  %2682 = load i32, i32* %2681, align 8
  %_109 = sub i32 0, %2682
  %gen110 = add i32 %_109, 65535
  %_111 = sub i32 %2682, 65535
  %gen112 = mul i32 %_111, 65535
  %_113 = sub i32 0, %2682
  %gen114 = add i32 %_113, 65535
  %_115 = shl i32 %2682, 65535
  %_116 = shl i32 %2682, 65535
  %_117 = sub i32 0, %2682
  %gen118 = add i32 %_117, 65535
  %_119 = sub i32 %2682, 65535
  %gen120 = mul i32 %_119, 65535
  %_121 = sub i32 0, %2682
  %gen122 = add i32 %_121, 65535
  %2683 = and i32 %2682, 65535
  %2684 = icmp ne i32 %2683, 61
  br label %originalBB108

originalBB126alteredBB:                           ; preds = %originalBB126, %770
  %2685 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  store %struct.rtx_def* %2685, %struct.rtx_def** %20, align 8
  %2686 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %2687 = bitcast %struct.rtx_def* %2686 to i32*
  %2688 = load i32, i32* %2687, align 8
  %_127 = shl i32 %2688, 65535
  %_128 = sub i32 %2688, 65535
  %gen129 = mul i32 %_128, 65535
  %_130 = sub i32 %2688, 65535
  %gen131 = mul i32 %_130, 65535
  %_132 = sub i32 %2688, 65535
  %gen133 = mul i32 %_132, 65535
  %_134 = sub i32 0, %2688
  %gen135 = add i32 %_134, 65535
  %_136 = sub i32 0, %2688
  %gen137 = add i32 %_136, 65535
  %2689 = and i32 %2688, 65535
  %2690 = icmp eq i32 %2689, 63
  br label %originalBB126

originalBB141alteredBB:                           ; preds = %originalBB141, %793
  %2691 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %2692 = bitcast %struct.rtx_def* %2691 to i32*
  %2693 = load i32, i32* %2692, align 8
  %_142 = sub i32 %2693, 16
  %gen143 = mul i32 %_142, 16
  %_144 = sub i32 %2693, 16
  %gen145 = mul i32 %_144, 16
  %_146 = shl i32 %2693, 16
  %2694 = lshr i32 %2693, 16
  %2695 = and i32 %2694, 255
  %2696 = sext i32 %2695 to i64
  %2697 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %2696
  %2698 = load i8, i8* %2697, align 1
  %2699 = zext i8 %2698 to i32
  %2700 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %2701 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2700, i32 0, i32 1
  %2702 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2701, i64 0, i64 0
  %2703 = bitcast %union.rtunion_def* %2702 to %struct.rtx_def**
  %2704 = load %struct.rtx_def*, %struct.rtx_def** %2703, align 8
  %2705 = bitcast %struct.rtx_def* %2704 to i32*
  %2706 = load i32, i32* %2705, align 8
  %_147 = sub i32 0, %2706
  %gen148 = add i32 %_147, 16
  %_149 = sub i32 0, %2706
  %gen150 = add i32 %_149, 16
  %_151 = sub i32 %2706, 16
  %gen152 = mul i32 %_151, 16
  %2707 = lshr i32 %2706, 16
  %_153 = sub i32 %2707, 255
  %gen154 = mul i32 %_153, 255
  %_155 = shl i32 %2707, 255
  %_156 = sub i32 %2707, 255
  %gen157 = mul i32 %_156, 255
  %_158 = sub i32 0, %2707
  %gen159 = add i32 %_158, 255
  %_160 = shl i32 %2707, 255
  %_161 = shl i32 %2707, 255
  %_162 = sub i32 0, %2707
  %gen163 = add i32 %_162, 255
  %2708 = and i32 %2707, 255
  %2709 = sext i32 %2708 to i64
  %2710 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %2709
  %2711 = load i8, i8* %2710, align 1
  %2712 = zext i8 %2711 to i32
  %2713 = icmp sge i32 %2699, %2712
  br label %originalBB141

originalBB167alteredBB:                           ; preds = %originalBB167, %898
  br label %originalBB167

originalBB171alteredBB:                           ; preds = %originalBB171, %930
  br label %originalBB171

originalBB175alteredBB:                           ; preds = %originalBB175, %962
  %2714 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 3
  %2715 = load i32, i32* %16, align 4
  %2716 = sext i32 %2715 to i64
  %2717 = getelementptr inbounds [30 x i32], [30 x i32]* %2714, i64 0, i64 %2716
  %2718 = load i32, i32* %2717, align 4
  %2719 = icmp ne i32 %2718, 0
  br label %originalBB175

originalBB179alteredBB:                           ; preds = %originalBB179, %1007
  %2720 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %2721 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %2722 = call i32 @operands_match_p(%struct.rtx_def* %2720, %struct.rtx_def* %2721)
  %2723 = icmp ne i32 %2722, 0
  br label %originalBB179

originalBB183alteredBB:                           ; preds = %originalBB183, %1088
  %2724 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2725 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %2726 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %2727 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2728 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %2729 = load i32, i32* %10, align 4
  %2730 = load i32, i32* %15, align 4
  %2731 = load i32, i32* %16, align 4
  %2732 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %2733 = call i32 @fixup_match_1(%struct.rtx_def* %2724, %struct.rtx_def* %2725, %struct.rtx_def* %2726, %struct.rtx_def* %2727, %struct.rtx_def* %2728, i32 %2729, i32 %2730, i32 %2731, %struct._IO_FILE* %2732)
  %2734 = icmp ne i32 %2733, 0
  br label %originalBB183

originalBB187alteredBB:                           ; preds = %originalBB187, %1131
  %2735 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2736 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2735, i32 0, i32 1
  %2737 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2736, i64 0, i64 2
  %2738 = bitcast %union.rtunion_def* %2737 to %struct.rtx_def**
  %2739 = load %struct.rtx_def*, %struct.rtx_def** %2738, align 8
  br label %originalBB187

originalBB191alteredBB:                           ; preds = %originalBB191, %1162
  %2740 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %2741 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2740, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i32 0, i32 0))
  br label %originalBB191

originalBB195alteredBB:                           ; preds = %originalBB195, %1181
  %2742 = call %struct.rtx_def* @get_last_insn()
  store %struct.rtx_def* %2742, %struct.rtx_def** %8, align 8
  br label %originalBB195

originalBB199alteredBB:                           ; preds = %originalBB199, %1216
  br label %originalBB199

originalBB203alteredBB:                           ; preds = %originalBB203, %1233
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %13, align 8
  store i32 0, i32* %24, align 4
  br label %originalBB203

originalBB207alteredBB:                           ; preds = %originalBB207, %1263
  br label %originalBB207

originalBB211alteredBB:                           ; preds = %originalBB211, %1280
  %2743 = load i32, i32* %25, align 4
  %2744 = sext i32 %2743 to i64
  %2745 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %2744
  %2746 = load %struct.rtx_def*, %struct.rtx_def** %2745, align 8
  store %struct.rtx_def* %2746, %struct.rtx_def** %30, align 8
  %2747 = load i32, i32* %24, align 4
  %2748 = sext i32 %2747 to i64
  %2749 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %2748
  %2750 = load %struct.rtx_def*, %struct.rtx_def** %2749, align 8
  store %struct.rtx_def* %2750, %struct.rtx_def** %29, align 8
  %2751 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %2752 = bitcast %struct.rtx_def* %2751 to i32*
  %2753 = load i32, i32* %2752, align 8
  %_212 = sub i32 %2753, 65535
  %gen213 = mul i32 %_212, 65535
  %_214 = sub i32 %2753, 65535
  %gen215 = mul i32 %_214, 65535
  %_216 = sub i32 %2753, 65535
  %gen217 = mul i32 %_216, 65535
  %_218 = shl i32 %2753, 65535
  %_219 = shl i32 %2753, 65535
  %2754 = and i32 %2753, 65535
  %2755 = icmp ne i32 %2754, 61
  br label %originalBB211

originalBB224alteredBB:                           ; preds = %originalBB224, %1374
  br label %originalBB224

originalBB228alteredBB:                           ; preds = %originalBB228, %1391
  %2756 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2757 = bitcast %struct.rtx_def* %2756 to i32*
  %2758 = load i32, i32* %2757, align 8
  %_229 = sub i32 %2758, 65535
  %gen230 = mul i32 %_229, 65535
  %_231 = sub i32 %2758, 65535
  %gen232 = mul i32 %_231, 65535
  %_233 = sub i32 0, %2758
  %gen234 = add i32 %_233, 65535
  %2759 = and i32 %2758, 65535
  %2760 = sext i32 %2759 to i64
  %2761 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %2760
  %2762 = load i8, i8* %2761, align 1
  %2763 = sext i8 %2762 to i32
  %2764 = icmp eq i32 %2763, 105
  br label %originalBB228

originalBB238alteredBB:                           ; preds = %originalBB238, %1417
  %2765 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2766 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2765, i32 0, i32 1
  %2767 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2766, i64 0, i64 3
  %2768 = bitcast %union.rtunion_def* %2767 to %struct.rtx_def**
  %2769 = load %struct.rtx_def*, %struct.rtx_def** %2768, align 8
  %2770 = bitcast %struct.rtx_def* %2769 to i32*
  %2771 = load i32, i32* %2770, align 8
  %_239 = shl i32 %2771, 65535
  %_240 = shl i32 %2771, 65535
  %_241 = sub i32 0, %2771
  %gen242 = add i32 %_241, 65535
  %_243 = sub i32 0, %2771
  %gen244 = add i32 %_243, 65535
  %_245 = sub i32 0, %2771
  %gen246 = add i32 %_245, 65535
  %2772 = and i32 %2771, 65535
  %2773 = icmp eq i32 %2772, 47
  br label %originalBB238

originalBB250alteredBB:                           ; preds = %originalBB250, %1470
  br label %originalBB250

originalBB254alteredBB:                           ; preds = %originalBB254, %1494
  %2774 = getelementptr inbounds %struct.match, %struct.match* %9, i32 0, i32 1
  %2775 = load i32, i32* %25, align 4
  %2776 = sext i32 %2775 to i64
  %2777 = getelementptr inbounds [30 x i32], [30 x i32]* %2774, i64 0, i64 %2776
  %2778 = load i32, i32* %2777, align 4
  %2779 = icmp ne i32 %2778, 1
  br label %originalBB254

originalBB258alteredBB:                           ; preds = %originalBB258, %1525
  %2780 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2781 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2780, i32 0, i32 1
  %2782 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2781, i64 0, i64 3
  %2783 = bitcast %union.rtunion_def* %2782 to %struct.rtx_def**
  %2784 = load %struct.rtx_def*, %struct.rtx_def** %2783, align 8
  %2785 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %2786 = call i32 @count_occurrences(%struct.rtx_def* %2784, %struct.rtx_def* %2785, i32 0)
  %2787 = icmp sgt i32 %2786, 1
  br label %originalBB258

originalBB262alteredBB:                           ; preds = %originalBB262, %1550
  br label %originalBB262

originalBB266alteredBB:                           ; preds = %originalBB266, %1578
  br label %originalBB266

originalBB271alteredBB:                           ; preds = %originalBB271, %1602
  %2788 = load %struct.rtx_def*, %struct.rtx_def** %27, align 8
  %2789 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2788, i32 0, i32 1
  %2790 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2789, i64 0, i64 1
  %2791 = bitcast %union.rtunion_def* %2790 to %struct.rtx_def**
  %2792 = load %struct.rtx_def*, %struct.rtx_def** %2791, align 8
  %2793 = bitcast %struct.rtx_def* %2792 to i32*
  %2794 = load i32, i32* %2793, align 8
  %_272 = sub i32 %2794, 65535
  %gen273 = mul i32 %_272, 65535
  %_274 = sub i32 %2794, 65535
  %gen275 = mul i32 %_274, 65535
  %_276 = shl i32 %2794, 65535
  %_277 = shl i32 %2794, 65535
  %_278 = shl i32 %2794, 65535
  %2795 = and i32 %2794, 65535
  %2796 = icmp eq i32 %2795, 75
  br label %originalBB271

originalBB283alteredBB:                           ; preds = %originalBB283, %1642
  %2797 = load %struct.rtx_def*, %struct.rtx_def** %27, align 8
  %2798 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2797, i32 0, i32 1
  %2799 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2798, i64 0, i64 1
  %2800 = bitcast %union.rtunion_def* %2799 to %struct.rtx_def**
  %2801 = load %struct.rtx_def*, %struct.rtx_def** %2800, align 8
  %2802 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2801, i32 0, i32 1
  %2803 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2802, i64 0, i64 0
  %2804 = bitcast %union.rtunion_def* %2803 to %struct.rtx_def**
  %2805 = load %struct.rtx_def*, %struct.rtx_def** %2804, align 8
  %2806 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %2807 = icmp eq %struct.rtx_def* %2805, %2806
  br label %originalBB283

originalBB287alteredBB:                           ; preds = %originalBB287, %1686
  br label %originalBB287

originalBB291alteredBB:                           ; preds = %originalBB291, %1721
  br label %originalBB291

originalBB295alteredBB:                           ; preds = %originalBB295, %1746
  %2808 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  store %struct.rtx_def* %2808, %struct.rtx_def** %12, align 8
  %2809 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  store %struct.rtx_def* %2809, %struct.rtx_def** %13, align 8
  br label %originalBB295

originalBB299alteredBB:                           ; preds = %originalBB299, %1766
  %2810 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %2811 = load %struct.rtx_def*, %struct.rtx_def** %27, align 8
  %2812 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2811, i32 0, i32 1
  %2813 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2812, i64 0, i64 1
  %2814 = bitcast %union.rtunion_def* %2813 to %struct.rtx_def**
  %2815 = load %struct.rtx_def*, %struct.rtx_def** %2814, align 8
  %2816 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %2810, %struct.rtx_def* %2815)
  %2817 = icmp ne i32 %2816, 0
  br label %originalBB299

originalBB303alteredBB:                           ; preds = %originalBB303, %1810
  br label %originalBB303

originalBB307alteredBB:                           ; preds = %originalBB307, %1846
  %2818 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2819 = icmp ne %struct.rtx_def* %2818, null
  br label %originalBB307

originalBB311alteredBB:                           ; preds = %originalBB311, %1865
  %2820 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2821 = call i32 @perhaps_ends_bb_p(%struct.rtx_def* %2820)
  %2822 = icmp ne i32 %2821, 0
  br label %originalBB311

originalBB315alteredBB:                           ; preds = %originalBB315, %1885
  br label %originalBB315

originalBB319alteredBB:                           ; preds = %originalBB319, %1913
  br label %originalBB319

originalBB323alteredBB:                           ; preds = %originalBB323, %1930
  %2823 = load i32, i32* %36, align 4
  %_324 = sub i32 0, %2823
  %gen325 = add i32 %_324, 1
  %2824 = add nsw i32 %2823, 1
  store i32 %2824, i32* %36, align 4
  %2825 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2826 = bitcast %struct.rtx_def* %2825 to i32*
  %2827 = load i32, i32* %2826, align 8
  %_326 = sub i32 %2827, 65535
  %gen327 = mul i32 %_326, 65535
  %_328 = shl i32 %2827, 65535
  %_329 = sub i32 0, %2827
  %gen330 = add i32 %_329, 65535
  %_331 = sub i32 %2827, 65535
  %gen332 = mul i32 %_331, 65535
  %_333 = sub i32 0, %2827
  %gen334 = add i32 %_333, 65535
  %_335 = shl i32 %2827, 65535
  %2828 = and i32 %2827, 65535
  %2829 = sext i32 %2828 to i64
  %2830 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %2829
  %2831 = load i8, i8* %2830, align 1
  %2832 = sext i8 %2831 to i32
  %2833 = icmp eq i32 %2832, 105
  br label %originalBB323

originalBB339alteredBB:                           ; preds = %originalBB339, %1968
  %2834 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2835 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2834, i32 0, i32 1
  %2836 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2835, i64 0, i64 3
  %2837 = bitcast %union.rtunion_def* %2836 to %struct.rtx_def**
  %2838 = load %struct.rtx_def*, %struct.rtx_def** %2837, align 8
  br label %originalBB339

originalBB343alteredBB:                           ; preds = %originalBB343, %1990
  %2839 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2840 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2841 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2840, i32 0, i32 1
  %2842 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2841, i64 0, i64 3
  %2843 = bitcast %union.rtunion_def* %2842 to %struct.rtx_def**
  %2844 = load %struct.rtx_def*, %struct.rtx_def** %2843, align 8
  %2845 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %2839, %struct.rtx_def* %2844)
  br label %originalBB343

originalBB347alteredBB:                           ; preds = %originalBB347, %2014
  br label %originalBB347

originalBB351alteredBB:                           ; preds = %originalBB351, %2037
  %2846 = load %struct.rtx_def*, %struct.rtx_def** %38, align 8
  %2847 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2846, i32 0, i32 1
  %2848 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2847, i64 0, i64 0
  %2849 = bitcast %union.rtunion_def* %2848 to %struct.rtx_def**
  %2850 = load %struct.rtx_def*, %struct.rtx_def** %2849, align 8
  %2851 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %2852 = icmp eq %struct.rtx_def* %2850, %2851
  br label %originalBB351

originalBB355alteredBB:                           ; preds = %originalBB355, %2109
  br label %originalBB355

originalBB359alteredBB:                           ; preds = %originalBB359, %2161
  %2853 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %2854 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  call void @remove_note(%struct.rtx_def* %2853, %struct.rtx_def* %2854)
  %2855 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %2856 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2857 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2856, i32 0, i32 1
  %2858 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2857, i64 0, i64 3
  %2859 = bitcast %union.rtunion_def* %2858 to %struct.rtx_def**
  %2860 = load %struct.rtx_def*, %struct.rtx_def** %2859, align 8
  %2861 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %2855, %struct.rtx_def* %2860)
  %2862 = icmp ne i32 %2861, 0
  br label %originalBB359

originalBB363alteredBB:                           ; preds = %originalBB363, %2208
  %2863 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %2864 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  call void @remove_note(%struct.rtx_def* %2863, %struct.rtx_def* %2864)
  br label %originalBB363

originalBB367alteredBB:                           ; preds = %originalBB367, %2301
  %2865 = load i32, i32* %36, align 4
  %2866 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2867 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2866, i32 0, i32 4
  %2868 = bitcast %union.varray_data_tag* %2867 to [1 x %struct.reg_info_def*]*
  %2869 = load i32, i32* %40, align 4
  %2870 = sext i32 %2869 to i64
  %2871 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2868, i64 0, i64 %2870
  %2872 = load %struct.reg_info_def*, %struct.reg_info_def** %2871, align 8
  %2873 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2872, i32 0, i32 7
  %2874 = load i32, i32* %2873, align 4
  %_368 = sub i32 0, %2874
  %gen369 = add i32 %_368, %2865
  %_370 = sub i32 0, %2874
  %gen371 = add i32 %_370, %2865
  %_372 = sub i32 0, %2874
  %gen373 = add i32 %_372, %2865
  %_374 = sub i32 %2874, %2865
  %gen375 = mul i32 %_374, %2865
  %_376 = sub i32 0, %2874
  %gen377 = add i32 %_376, %2865
  %_378 = shl i32 %2874, %2865
  %_379 = sub i32 0, %2874
  %gen380 = add i32 %_379, %2865
  %_381 = sub i32 0, %2874
  %gen382 = add i32 %_381, %2865
  %_383 = sub i32 0, %2874
  %gen384 = add i32 %_383, %2865
  %_385 = sub i32 0, %2874
  %gen386 = add i32 %_385, %2865
  %2875 = sub nsw i32 %2874, %2865
  store i32 %2875, i32* %2873, align 4
  %2876 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2877 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2876, i32 0, i32 4
  %2878 = bitcast %union.varray_data_tag* %2877 to [1 x %struct.reg_info_def*]*
  %2879 = load i32, i32* %40, align 4
  %2880 = sext i32 %2879 to i64
  %2881 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2878, i64 0, i64 %2880
  %2882 = load %struct.reg_info_def*, %struct.reg_info_def** %2881, align 8
  %2883 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2882, i32 0, i32 7
  %2884 = load i32, i32* %2883, align 4
  %2885 = icmp slt i32 %2884, 2
  br label %originalBB367

originalBB390alteredBB:                           ; preds = %originalBB390, %2348
  br label %originalBB390

originalBB394alteredBB:                           ; preds = %originalBB394, %2383
  %2886 = load i32, i32* %26, align 4
  %2887 = icmp ne i32 %2886, 0
  br label %originalBB394

originalBB398alteredBB:                           ; preds = %originalBB398, %2442
  %2888 = load %struct.rtx_def*, %struct.rtx_def** %43, align 8
  %2889 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2888, i32 0, i32 1
  %2890 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2889, i64 0, i64 0
  %2891 = bitcast %union.rtunion_def* %2890 to i32*
  %2892 = load i32, i32* %2891, align 8
  %2893 = load i32, i32* %7, align 4
  %2894 = icmp sge i32 %2892, %2893
  br label %originalBB398

originalBB402alteredBB:                           ; preds = %originalBB402, %2484
  br label %originalBB402

originalBB406alteredBB:                           ; preds = %originalBB406, %2502
  br label %originalBB406

originalBB410alteredBB:                           ; preds = %originalBB410, %2520
  %2895 = load %struct.rtx_def*, %struct.rtx_def** %43, align 8
  store %struct.rtx_def* %2895, %struct.rtx_def** %42, align 8
  %2896 = load %struct.rtx_def*, %struct.rtx_def** %42, align 8
  %2897 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2896, i32 0, i32 1
  %2898 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2897, i64 0, i64 2
  %2899 = bitcast %union.rtunion_def* %2898 to %struct.rtx_def**
  %2900 = load %struct.rtx_def*, %struct.rtx_def** %2899, align 8
  store %struct.rtx_def* %2900, %struct.rtx_def** %43, align 8
  br label %originalBB410

originalBB414alteredBB:                           ; preds = %originalBB414, %2543
  %2901 = load %struct.rtx_def*, %struct.rtx_def** %42, align 8
  %2902 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %2903 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2902, i32 0, i32 4
  %2904 = bitcast %union.varray_data_tag* %2903 to [1 x %struct.basic_block_def*]*
  %2905 = load i32, i32* %11, align 4
  %2906 = sext i32 %2905 to i64
  %2907 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %2904, i64 0, i64 %2906
  %2908 = load %struct.basic_block_def*, %struct.basic_block_def** %2907, align 8
  %2909 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2908, i32 0, i32 1
  store %struct.rtx_def* %2901, %struct.rtx_def** %2909, align 8
  br label %originalBB414
}

declare i32 @get_max_uid() #1

; Function Attrs: noinline nounwind uwtable
define internal void @mark_flags_life_zones(%struct.rtx_def*) #0 {
  %2 = alloca %struct.rtx_def*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  %9 = alloca %struct.rtx_def*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.rtx_def* %0, %struct.rtx_def** %2, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %13 = icmp eq %struct.rtx_def* %12, null
  br i1 %13, label %18, label %14

; <label>:14:                                     ; preds = %1
  %15 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %16 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16
  %17 = icmp eq %struct.rtx_def* %15, %16
  br i1 %17, label %18, label %106

; <label>:18:                                     ; preds = %14, %1
  %19 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %20 = icmp ne %struct.rtx_def* %19, null
  %21 = select i1 %20, i32 3, i32 0
  store i32 %21, i32* %6, align 4
  %22 = call %struct.rtx_def* @get_insns()
  store %struct.rtx_def* %22, %struct.rtx_def** %7, align 8
  br label %23

; <label>:23:                                     ; preds = %originalBBpart239, %18
  %24 = load i32, i32* @x.1
  %25 = load i32, i32* @y.2
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %23
  %32 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %33 = icmp ne %struct.rtx_def* %32, null
  %34 = load i32, i32* @x.1
  %35 = load i32, i32* @y.2
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %33, label %42, label %89

; <label>:42:                                     ; preds = %originalBBpart2
  %43 = load i32, i32* @x.1
  %44 = load i32, i32* @y.2
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %42
  %51 = load i32, i32* %6, align 4
  %52 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %53 = bitcast %struct.rtx_def* %52 to i32*
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %51, 255
  %56 = shl i32 %55, 16
  %57 = and i32 %54, -16711681
  %58 = or i32 %57, %56
  store i32 %58, i32* %53, align 8
  %59 = load i32, i32* @x.1
  %60 = load i32, i32* @y.2
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart235, label %originalBB1alteredBB

originalBBpart235:                                ; preds = %originalBB1
  br label %67

; <label>:67:                                     ; preds = %originalBBpart235
  %68 = load i32, i32* @x.1
  %69 = load i32, i32* @y.2
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %67
  %76 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %77, i64 0, i64 2
  %79 = bitcast %union.rtunion_def* %78 to %struct.rtx_def**
  %80 = load %struct.rtx_def*, %struct.rtx_def** %79, align 8
  store %struct.rtx_def* %80, %struct.rtx_def** %7, align 8
  %81 = load i32, i32* @x.1
  %82 = load i32, i32* @y.2
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %23

; <label>:89:                                     ; preds = %originalBBpart2
  %90 = load i32, i32* @x.1
  %91 = load i32, i32* @y.2
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %89
  %98 = load i32, i32* @x.1
  %99 = load i32, i32* @y.2
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %520

; <label>:106:                                    ; preds = %14
  %107 = load i32, i32* @x.1
  %108 = load i32, i32* @y.2
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %106
  %115 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %116, i64 0, i64 0
  %118 = bitcast %union.rtunion_def* %117 to i32*
  %119 = load i32, i32* %118, align 8
  store i32 %119, i32* %3, align 4
  %120 = load i32, i32* %3, align 4
  %121 = icmp sge i32 %120, 8
  %122 = load i32, i32* @x.1
  %123 = load i32, i32* @y.2
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br i1 %121, label %130, label %133

; <label>:130:                                    ; preds = %originalBBpart247
  %131 = load i32, i32* %3, align 4
  %132 = icmp sle i32 %131, 15
  br i1 %132, label %167, label %133

; <label>:133:                                    ; preds = %130, %originalBBpart247
  %134 = load i32, i32* @x.1
  %135 = load i32, i32* @y.2
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %originalBB49alteredBB, %133
  %142 = load i32, i32* %3, align 4
  %143 = icmp sge i32 %142, 21
  %144 = load i32, i32* @x.1
  %145 = load i32, i32* @y.2
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br i1 %143, label %152, label %155

; <label>:152:                                    ; preds = %originalBBpart251
  %153 = load i32, i32* %3, align 4
  %154 = icmp sle i32 %153, 28
  br i1 %154, label %167, label %155

; <label>:155:                                    ; preds = %152, %originalBBpart251
  %156 = load i32, i32* %3, align 4
  %157 = icmp sge i32 %156, 45
  br i1 %157, label %158, label %161

; <label>:158:                                    ; preds = %155
  %159 = load i32, i32* %3, align 4
  %160 = icmp sle i32 %159, 52
  br i1 %160, label %167, label %161

; <label>:161:                                    ; preds = %158, %155
  %162 = load i32, i32* %3, align 4
  %163 = icmp sge i32 %162, 29
  br i1 %163, label %164, label %238

; <label>:164:                                    ; preds = %161
  %165 = load i32, i32* %3, align 4
  %166 = icmp sle i32 %165, 36
  br i1 %166, label %167, label %238

; <label>:167:                                    ; preds = %164, %158, %152, %130
  %168 = load i32, i32* @x.1
  %169 = load i32, i32* @y.2
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %originalBB53alteredBB, %167
  %176 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %177 = bitcast %struct.rtx_def* %176 to i32*
  %178 = load i32, i32* %177, align 8
  %179 = lshr i32 %178, 16
  %180 = and i32 %179, 255
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i64 0, i64 %181
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, 5
  %185 = load i32, i32* @x.1
  %186 = load i32, i32* @y.2
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBBpart278, label %originalBB53alteredBB

originalBBpart278:                                ; preds = %originalBB53
  br i1 %184, label %219, label %193

; <label>:193:                                    ; preds = %originalBBpart278
  %194 = load i32, i32* @x.1
  %195 = load i32, i32* @y.2
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %originalBB80alteredBB, %193
  %202 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %203 = bitcast %struct.rtx_def* %202 to i32*
  %204 = load i32, i32* %203, align 8
  %205 = lshr i32 %204, 16
  %206 = and i32 %205, 255
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i64 0, i64 %207
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %209, 6
  %211 = load i32, i32* @x.1
  %212 = load i32, i32* @y.2
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart299, label %originalBB80alteredBB

originalBBpart299:                                ; preds = %originalBB80
  br label %219

; <label>:219:                                    ; preds = %originalBBpart299, %originalBBpart278
  %220 = phi i1 [ true, %originalBBpart278 ], [ %210, %originalBBpart299 ]
  %221 = load i32, i32* @x.1
  %222 = load i32, i32* @y.2
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %originalBB101alteredBB, %219
  %229 = select i1 %220, i32 2, i32 1
  %230 = load i32, i32* @x.1
  %231 = load i32, i32* @y.2
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %303

; <label>:238:                                    ; preds = %164, %161
  %239 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %240 = bitcast %struct.rtx_def* %239 to i32*
  %241 = load i32, i32* %240, align 8
  %242 = lshr i32 %241, 16
  %243 = and i32 %242, 255
  %244 = icmp eq i32 %243, 18
  br i1 %244, label %245, label %250

; <label>:245:                                    ; preds = %238
  %246 = load i32, i32* @target_flags, align 4
  %247 = and i32 %246, 33554432
  %248 = icmp ne i32 %247, 0
  %249 = select i1 %248, i32 2, i32 3
  br label %285

; <label>:250:                                    ; preds = %238
  %251 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %252 = bitcast %struct.rtx_def* %251 to i32*
  %253 = load i32, i32* %252, align 8
  %254 = lshr i32 %253, 16
  %255 = and i32 %254, 255
  %256 = icmp eq i32 %255, 24
  br i1 %256, label %257, label %262

; <label>:257:                                    ; preds = %250
  %258 = load i32, i32* @target_flags, align 4
  %259 = and i32 %258, 33554432
  %260 = icmp ne i32 %259, 0
  %261 = select i1 %260, i32 4, i32 6
  br label %283

; <label>:262:                                    ; preds = %250
  %263 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %264 = bitcast %struct.rtx_def* %263 to i32*
  %265 = load i32, i32* %264, align 8
  %266 = lshr i32 %265, 16
  %267 = and i32 %266, 255
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i32
  %272 = load i32, i32* @target_flags, align 4
  %273 = and i32 %272, 33554432
  %274 = icmp ne i32 %273, 0
  %275 = select i1 %274, i32 8, i32 4
  %276 = add nsw i32 %271, %275
  %277 = sub nsw i32 %276, 1
  %278 = load i32, i32* @target_flags, align 4
  %279 = and i32 %278, 33554432
  %280 = icmp ne i32 %279, 0
  %281 = select i1 %280, i32 8, i32 4
  %282 = sdiv i32 %277, %281
  br label %283

; <label>:283:                                    ; preds = %262, %257
  %284 = phi i32 [ %261, %257 ], [ %282, %262 ]
  br label %285

; <label>:285:                                    ; preds = %283, %245
  %286 = phi i32 [ %249, %245 ], [ %284, %283 ]
  %287 = load i32, i32* @x.1
  %288 = load i32, i32* @y.2
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %originalBB105alteredBB, %285
  %295 = load i32, i32* @x.1
  %296 = load i32, i32* @y.2
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br label %303

; <label>:303:                                    ; preds = %originalBBpart2107, %originalBBpart2103
  %304 = phi i32 [ %229, %originalBBpart2103 ], [ %286, %originalBBpart2107 ]
  store i32 %304, i32* %4, align 4
  %305 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  store %struct.rtx_def* %305, %struct.rtx_def** @flags_set_1_rtx, align 8
  %306 = load i32, i32* @n_basic_blocks, align 4
  %307 = sub nsw i32 %306, 1
  store i32 %307, i32* %5, align 4
  br label %308

; <label>:308:                                    ; preds = %517, %303
  %309 = load i32, i32* @x.1
  %310 = load i32, i32* @y.2
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %originalBB109alteredBB, %308
  %317 = load i32, i32* %5, align 4
  %318 = icmp sge i32 %317, 0
  %319 = load i32, i32* @x.1
  %320 = load i32, i32* @y.2
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br i1 %318, label %327, label %520

; <label>:327:                                    ; preds = %originalBBpart2111
  %328 = load i32, i32* @x.1
  %329 = load i32, i32* @y.2
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %originalBB113alteredBB, %327
  %336 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %337 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %336, i32 0, i32 4
  %338 = bitcast %union.varray_data_tag* %337 to [1 x %struct.basic_block_def*]*
  %339 = load i32, i32* %5, align 4
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %338, i64 0, i64 %340
  %342 = load %struct.basic_block_def*, %struct.basic_block_def** %341, align 8
  %343 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %342, i32 0, i32 0
  %344 = load %struct.rtx_def*, %struct.rtx_def** %343, align 8
  store %struct.rtx_def* %344, %struct.rtx_def** %8, align 8
  %345 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %346 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %345, i32 0, i32 4
  %347 = bitcast %union.varray_data_tag* %346 to [1 x %struct.basic_block_def*]*
  %348 = load i32, i32* %5, align 4
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %347, i64 0, i64 %349
  %351 = load %struct.basic_block_def*, %struct.basic_block_def** %350, align 8
  %352 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %351, i32 0, i32 1
  %353 = load %struct.rtx_def*, %struct.rtx_def** %352, align 8
  store %struct.rtx_def* %353, %struct.rtx_def** %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %354 = load i32, i32* @x.1
  %355 = load i32, i32* @y.2
  %356 = sub i32 %354, 1
  %357 = mul i32 %354, %356
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %359, %360
  br i1 %361, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br label %362

; <label>:362:                                    ; preds = %398, %originalBBpart2115
  %363 = load i32, i32* @x.1
  %364 = load i32, i32* @y.2
  %365 = sub i32 %363, 1
  %366 = mul i32 %363, %365
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %368, %369
  br i1 %370, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %originalBB117alteredBB, %362
  %371 = load i32, i32* %11, align 4
  %372 = load i32, i32* %4, align 4
  %373 = icmp slt i32 %371, %372
  %374 = load i32, i32* @x.1
  %375 = load i32, i32* @y.2
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br i1 %373, label %382, label %401

; <label>:382:                                    ; preds = %originalBBpart2119
  %383 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %384 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %383, i32 0, i32 4
  %385 = bitcast %union.varray_data_tag* %384 to [1 x %struct.basic_block_def*]*
  %386 = load i32, i32* %5, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %385, i64 0, i64 %387
  %389 = load %struct.basic_block_def*, %struct.basic_block_def** %388, align 8
  %390 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %389, i32 0, i32 8
  %391 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %390, align 8
  %392 = load i32, i32* %3, align 4
  %393 = load i32, i32* %11, align 4
  %394 = add nsw i32 %392, %393
  %395 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %391, i32 %394)
  %396 = load i32, i32* %10, align 4
  %397 = or i32 %396, %395
  store i32 %397, i32* %10, align 4
  br label %398

; <label>:398:                                    ; preds = %382
  %399 = load i32, i32* %11, align 4
  %400 = add nsw i32 %399, 1
  store i32 %400, i32* %11, align 4
  br label %362

; <label>:401:                                    ; preds = %originalBBpart2119
  %402 = load i32, i32* @x.1
  %403 = load i32, i32* @y.2
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %originalBB121alteredBB, %401
  %410 = load i32, i32* @x.1
  %411 = load i32, i32* @y.2
  %412 = sub i32 %410, 1
  %413 = mul i32 %410, %412
  %414 = urem i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %415, %416
  br i1 %417, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br label %418

; <label>:418:                                    ; preds = %510, %originalBBpart2123
  %419 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %420 = bitcast %struct.rtx_def* %419 to i32*
  %421 = load i32, i32* %420, align 8
  %422 = and i32 %421, 65535
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %423
  %425 = load i8, i8* %424, align 1
  %426 = sext i8 %425 to i32
  %427 = icmp eq i32 %426, 105
  br i1 %427, label %428, label %462

; <label>:428:                                    ; preds = %418
  %429 = load i32, i32* %10, align 4
  %430 = icmp ne i32 %429, 0
  br i1 %430, label %431, label %437

; <label>:431:                                    ; preds = %428
  %432 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %433 = load i32, i32* %3, align 4
  %434 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %432, i32 1, i32 %433)
  %435 = icmp ne %struct.rtx_def* %434, null
  br i1 %435, label %436, label %437

; <label>:436:                                    ; preds = %431
  store i32 0, i32* %10, align 4
  br label %437

; <label>:437:                                    ; preds = %436, %431, %428
  %438 = load i32, i32* %10, align 4
  %439 = icmp ne i32 %438, 0
  %440 = select i1 %439, i32 3, i32 0
  %441 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %442 = bitcast %struct.rtx_def* %441 to i32*
  %443 = load i32, i32* %442, align 8
  %444 = and i32 %440, 255
  %445 = shl i32 %444, 16
  %446 = and i32 %443, -16711681
  %447 = or i32 %446, %445
  store i32 %447, i32* %442, align 8
  store i32 0, i32* @flags_set_1_set, align 4
  %448 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %449 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %448, i32 0, i32 1
  %450 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %449, i64 0, i64 3
  %451 = bitcast %union.rtunion_def* %450 to %struct.rtx_def**
  %452 = load %struct.rtx_def*, %struct.rtx_def** %451, align 8
  call void @note_stores(%struct.rtx_def* %452, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @flags_set_1, i8* null)
  %453 = load i32, i32* @flags_set_1_set, align 4
  %454 = icmp ne i32 %453, 0
  br i1 %454, label %455, label %461

; <label>:455:                                    ; preds = %437
  store i32 1, i32* %10, align 4
  %456 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %457 = bitcast %struct.rtx_def* %456 to i32*
  %458 = load i32, i32* %457, align 8
  %459 = and i32 %458, -16711681
  %460 = or i32 %459, 131072
  store i32 %460, i32* %457, align 8
  br label %461

; <label>:461:                                    ; preds = %455, %437
  br label %489

; <label>:462:                                    ; preds = %418
  %463 = load i32, i32* @x.1
  %464 = load i32, i32* @y.2
  %465 = sub i32 %463, 1
  %466 = mul i32 %463, %465
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %468, %469
  br i1 %470, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %originalBB125alteredBB, %462
  %471 = load i32, i32* %10, align 4
  %472 = icmp ne i32 %471, 0
  %473 = select i1 %472, i32 3, i32 0
  %474 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %475 = bitcast %struct.rtx_def* %474 to i32*
  %476 = load i32, i32* %475, align 8
  %477 = and i32 %473, 255
  %478 = shl i32 %477, 16
  %479 = and i32 %476, -16711681
  %480 = or i32 %479, %478
  store i32 %480, i32* %475, align 8
  %481 = load i32, i32* @x.1
  %482 = load i32, i32* @y.2
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBBpart2147, label %originalBB125alteredBB

originalBBpart2147:                               ; preds = %originalBB125
  br label %489

; <label>:489:                                    ; preds = %originalBBpart2147, %461
  %490 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %491 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %492 = icmp eq %struct.rtx_def* %490, %491
  br i1 %492, label %493, label %510

; <label>:493:                                    ; preds = %489
  %494 = load i32, i32* @x.1
  %495 = load i32, i32* @y.2
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %originalBB149alteredBB, %493
  %502 = load i32, i32* @x.1
  %503 = load i32, i32* @y.2
  %504 = sub i32 %502, 1
  %505 = mul i32 %502, %504
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %507, %508
  br i1 %509, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br label %516

; <label>:510:                                    ; preds = %489
  %511 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %512 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %511, i32 0, i32 1
  %513 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %512, i64 0, i64 2
  %514 = bitcast %union.rtunion_def* %513 to %struct.rtx_def**
  %515 = load %struct.rtx_def*, %struct.rtx_def** %514, align 8
  store %struct.rtx_def* %515, %struct.rtx_def** %8, align 8
  br label %418

; <label>:516:                                    ; preds = %originalBBpart2151
  br label %517

; <label>:517:                                    ; preds = %516
  %518 = load i32, i32* %5, align 4
  %519 = add nsw i32 %518, -1
  store i32 %519, i32* %5, align 4
  br label %308

; <label>:520:                                    ; preds = %originalBBpart2111, %originalBBpart243
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %23
  %521 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %522 = icmp ne %struct.rtx_def* %521, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %523 = load i32, i32* %6, align 4
  %524 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %525 = bitcast %struct.rtx_def* %524 to i32*
  %526 = load i32, i32* %525, align 8
  %_ = sub i32 %523, 255
  %gen = mul i32 %_, 255
  %_2 = sub i32 0, %523
  %gen3 = add i32 %_2, 255
  %_4 = sub i32 %523, 255
  %gen5 = mul i32 %_4, 255
  %_6 = sub i32 %523, 255
  %gen7 = mul i32 %_6, 255
  %527 = and i32 %523, 255
  %_8 = sub i32 %527, 16
  %gen9 = mul i32 %_8, 16
  %_10 = sub i32 %527, 16
  %gen11 = mul i32 %_10, 16
  %_12 = sub i32 %527, 16
  %gen13 = mul i32 %_12, 16
  %_14 = shl i32 %527, 16
  %_15 = sub i32 0, %527
  %gen16 = add i32 %_15, 16
  %528 = shl i32 %527, 16
  %_17 = sub i32 0, %526
  %gen18 = add i32 %_17, -16711681
  %_19 = sub i32 0, %526
  %gen20 = add i32 %_19, -16711681
  %_21 = shl i32 %526, -16711681
  %_22 = sub i32 %526, -16711681
  %gen23 = mul i32 %_22, -16711681
  %529 = and i32 %526, -16711681
  %_24 = sub i32 0, %529
  %gen25 = add i32 %_24, %528
  %_26 = shl i32 %529, %528
  %_27 = sub i32 %529, %528
  %gen28 = mul i32 %_27, %528
  %_29 = sub i32 %529, %528
  %gen30 = mul i32 %_29, %528
  %_31 = sub i32 0, %529
  %gen32 = add i32 %_31, %528
  %_33 = shl i32 %529, %528
  %530 = or i32 %529, %528
  store i32 %530, i32* %525, align 8
  br label %originalBB1

originalBB37alteredBB:                            ; preds = %originalBB37, %67
  %531 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %532 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %531, i32 0, i32 1
  %533 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %532, i64 0, i64 2
  %534 = bitcast %union.rtunion_def* %533 to %struct.rtx_def**
  %535 = load %struct.rtx_def*, %struct.rtx_def** %534, align 8
  store %struct.rtx_def* %535, %struct.rtx_def** %7, align 8
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %89
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %106
  %536 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %537 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %536, i32 0, i32 1
  %538 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %537, i64 0, i64 0
  %539 = bitcast %union.rtunion_def* %538 to i32*
  %540 = load i32, i32* %539, align 8
  store i32 %540, i32* %3, align 4
  %541 = load i32, i32* %3, align 4
  %542 = icmp sge i32 %541, 8
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %133
  %543 = load i32, i32* %3, align 4
  %544 = icmp sge i32 %543, 21
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %167
  %545 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %546 = bitcast %struct.rtx_def* %545 to i32*
  %547 = load i32, i32* %546, align 8
  %_54 = sub i32 %547, 16
  %gen55 = mul i32 %_54, 16
  %_56 = sub i32 0, %547
  %gen57 = add i32 %_56, 16
  %_58 = sub i32 %547, 16
  %gen59 = mul i32 %_58, 16
  %_60 = sub i32 0, %547
  %gen61 = add i32 %_60, 16
  %_62 = sub i32 0, %547
  %gen63 = add i32 %_62, 16
  %548 = lshr i32 %547, 16
  %_64 = shl i32 %548, 255
  %_65 = sub i32 0, %548
  %gen66 = add i32 %_65, 255
  %_67 = sub i32 0, %548
  %gen68 = add i32 %_67, 255
  %_69 = sub i32 %548, 255
  %gen70 = mul i32 %_69, 255
  %_71 = sub i32 %548, 255
  %gen72 = mul i32 %_71, 255
  %_73 = sub i32 %548, 255
  %gen74 = mul i32 %_73, 255
  %_75 = sub i32 %548, 255
  %gen76 = mul i32 %_75, 255
  %549 = and i32 %548, 255
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i64 0, i64 %550
  %552 = load i32, i32* %551, align 4
  %553 = icmp eq i32 %552, 5
  br label %originalBB53

originalBB80alteredBB:                            ; preds = %originalBB80, %193
  %554 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %555 = bitcast %struct.rtx_def* %554 to i32*
  %556 = load i32, i32* %555, align 8
  %_81 = shl i32 %556, 16
  %_82 = sub i32 %556, 16
  %gen83 = mul i32 %_82, 16
  %_84 = sub i32 0, %556
  %gen85 = add i32 %_84, 16
  %_86 = sub i32 %556, 16
  %gen87 = mul i32 %_86, 16
  %_88 = sub i32 0, %556
  %gen89 = add i32 %_88, 16
  %557 = lshr i32 %556, 16
  %_90 = sub i32 0, %557
  %gen91 = add i32 %_90, 255
  %_92 = sub i32 0, %557
  %gen93 = add i32 %_92, 255
  %_94 = sub i32 0, %557
  %gen95 = add i32 %_94, 255
  %_96 = sub i32 0, %557
  %gen97 = add i32 %_96, 255
  %558 = and i32 %557, 255
  %559 = sext i32 %558 to i64
  %560 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i64 0, i64 %559
  %561 = load i32, i32* %560, align 4
  %562 = icmp eq i32 %561, 6
  br label %originalBB80

originalBB101alteredBB:                           ; preds = %originalBB101, %219
  %563 = select i1 %220, i32 2, i32 1
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %285
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %308
  %564 = load i32, i32* %5, align 4
  %565 = icmp sge i32 %564, 0
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %327
  %566 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %567 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %566, i32 0, i32 4
  %568 = bitcast %union.varray_data_tag* %567 to [1 x %struct.basic_block_def*]*
  %569 = load i32, i32* %5, align 4
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %568, i64 0, i64 %570
  %572 = load %struct.basic_block_def*, %struct.basic_block_def** %571, align 8
  %573 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %572, i32 0, i32 0
  %574 = load %struct.rtx_def*, %struct.rtx_def** %573, align 8
  store %struct.rtx_def* %574, %struct.rtx_def** %8, align 8
  %575 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %576 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %575, i32 0, i32 4
  %577 = bitcast %union.varray_data_tag* %576 to [1 x %struct.basic_block_def*]*
  %578 = load i32, i32* %5, align 4
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %577, i64 0, i64 %579
  %581 = load %struct.basic_block_def*, %struct.basic_block_def** %580, align 8
  %582 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %581, i32 0, i32 1
  %583 = load %struct.rtx_def*, %struct.rtx_def** %582, align 8
  store %struct.rtx_def* %583, %struct.rtx_def** %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %362
  %584 = load i32, i32* %11, align 4
  %585 = load i32, i32* %4, align 4
  %586 = icmp slt i32 %584, %585
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %401
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %462
  %587 = load i32, i32* %10, align 4
  %588 = icmp ne i32 %587, 0
  %589 = select i1 %588, i32 3, i32 0
  %590 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %591 = bitcast %struct.rtx_def* %590 to i32*
  %592 = load i32, i32* %591, align 8
  %_126 = sub i32 %589, 255
  %gen127 = mul i32 %_126, 255
  %593 = and i32 %589, 255
  %_128 = sub i32 %593, 16
  %gen129 = mul i32 %_128, 16
  %_130 = sub i32 0, %593
  %gen131 = add i32 %_130, 16
  %_132 = shl i32 %593, 16
  %594 = shl i32 %593, 16
  %_133 = sub i32 %592, -16711681
  %gen134 = mul i32 %_133, -16711681
  %595 = and i32 %592, -16711681
  %_135 = shl i32 %595, %594
  %_136 = shl i32 %595, %594
  %_137 = sub i32 0, %595
  %gen138 = add i32 %_137, %594
  %_139 = sub i32 %595, %594
  %gen140 = mul i32 %_139, %594
  %_141 = shl i32 %595, %594
  %_142 = shl i32 %595, %594
  %_143 = sub i32 0, %595
  %gen144 = add i32 %_143, %594
  %_145 = shl i32 %595, %594
  %596 = or i32 %595, %594
  store i32 %596, i32* %591, align 8
  br label %originalBB125

originalBB149alteredBB:                           ; preds = %originalBB149, %493
  br label %originalBB149
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @discover_flags_reg() #0 {
  %1 = alloca %struct.rtx_def*, align 8
  %2 = alloca %struct.rtx_def*, align 8
  %3 = alloca i32, align 4
  %4 = load i32, i32* @word_mode, align 4
  %5 = call %struct.rtx_def* @gen_rtx_REG(i32 %4, i32 10000)
  store %struct.rtx_def* %5, %struct.rtx_def** %2, align 8
  %6 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %7 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %8 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2)
  %9 = call %struct.rtx_def* @gen_add3_insn(%struct.rtx_def* %6, %struct.rtx_def* %7, %struct.rtx_def* %8)
  store %struct.rtx_def* %9, %struct.rtx_def** %2, align 8
  %10 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 65535
  %14 = icmp eq i32 %13, 47
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %0
  store %struct.rtx_def* null, %struct.rtx_def** %1, align 8
  br label %237

; <label>:16:                                     ; preds = %0
  %17 = load i32, i32* @x.3
  %18 = load i32, i32* @y.4
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %16
  %25 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 65535
  %29 = icmp eq i32 %28, 39
  %30 = load i32, i32* @x.3
  %31 = load i32, i32* @y.4
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %218

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %40, i64 0, i64 0
  %42 = bitcast %union.rtunion_def* %41 to %struct.rtvec_def**
  %43 = load %struct.rtvec_def*, %struct.rtvec_def** %42, align 8
  %44 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp ne i32 %45, 2
  br i1 %46, label %47, label %49

; <label>:47:                                     ; preds = %38
  %48 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16
  store %struct.rtx_def* %48, %struct.rtx_def** %1, align 8
  br label %237

; <label>:49:                                     ; preds = %38
  %50 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %51, i64 0, i64 0
  %53 = bitcast %union.rtunion_def* %52 to %struct.rtvec_def**
  %54 = load %struct.rtvec_def*, %struct.rtvec_def** %53, align 8
  %55 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %54, i32 0, i32 1
  %56 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %55, i64 0, i64 1
  %57 = load %struct.rtx_def*, %struct.rtx_def** %56, align 8
  store %struct.rtx_def* %57, %struct.rtx_def** %2, align 8
  %58 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, 65535
  %62 = icmp ne i32 %61, 49
  br i1 %62, label %63, label %81

; <label>:63:                                     ; preds = %49
  %64 = load i32, i32* @x.3
  %65 = load i32, i32* @y.4
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %originalBB3alteredBB, %63
  %72 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16
  store %struct.rtx_def* %72, %struct.rtx_def** %1, align 8
  %73 = load i32, i32* @x.3
  %74 = load i32, i32* @y.4
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart25, label %originalBB3alteredBB

originalBBpart25:                                 ; preds = %originalBB3
  br label %237

; <label>:81:                                     ; preds = %49
  %82 = load i32, i32* @x.3
  %83 = load i32, i32* @y.4
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %originalBB7alteredBB, %81
  %90 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %91, i64 0, i64 0
  %93 = bitcast %union.rtunion_def* %92 to %struct.rtx_def**
  %94 = load %struct.rtx_def*, %struct.rtx_def** %93, align 8
  store %struct.rtx_def* %94, %struct.rtx_def** %2, align 8
  %95 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %96 = bitcast %struct.rtx_def* %95 to i32*
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 65535
  %99 = icmp eq i32 %98, 63
  %100 = load i32, i32* @x.3
  %101 = load i32, i32* @y.4
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  br i1 %99, label %108, label %131

; <label>:108:                                    ; preds = %originalBBpart29
  %109 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1
  %111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %110, i64 0, i64 0
  %112 = bitcast %union.rtunion_def* %111 to %struct.rtx_def**
  %113 = load %struct.rtx_def*, %struct.rtx_def** %112, align 8
  %114 = bitcast %struct.rtx_def* %113 to i32*
  %115 = load i32, i32* %114, align 8
  %116 = and i32 %115, 65535
  %117 = icmp eq i32 %116, 61
  br i1 %117, label %118, label %131

; <label>:118:                                    ; preds = %108
  %119 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %120, i64 0, i64 0
  %122 = bitcast %union.rtunion_def* %121 to %struct.rtx_def**
  %123 = load %struct.rtx_def*, %struct.rtx_def** %122, align 8
  %124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1
  %125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %124, i64 0, i64 0
  %126 = bitcast %union.rtunion_def* %125 to i32*
  %127 = load i32, i32* %126, align 8
  %128 = icmp ult i32 %127, 53
  br i1 %128, label %129, label %131

; <label>:129:                                    ; preds = %118
  %130 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16
  store %struct.rtx_def* %130, %struct.rtx_def** %1, align 8
  br label %237

; <label>:131:                                    ; preds = %118, %108, %originalBBpart29
  %132 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %133 = bitcast %struct.rtx_def* %132 to i32*
  %134 = load i32, i32* %133, align 8
  %135 = and i32 %134, 65535
  %136 = icmp eq i32 %135, 61
  br i1 %136, label %137, label %160

; <label>:137:                                    ; preds = %131
  %138 = load i32, i32* @x.3
  %139 = load i32, i32* @y.4
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %137
  %146 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1
  %148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %147, i64 0, i64 0
  %149 = bitcast %union.rtunion_def* %148 to i32*
  %150 = load i32, i32* %149, align 8
  %151 = icmp ult i32 %150, 53
  %152 = load i32, i32* @x.3
  %153 = load i32, i32* @y.4
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br label %160

; <label>:160:                                    ; preds = %originalBBpart213, %131
  %161 = phi i1 [ false, %131 ], [ %151, %originalBBpart213 ]
  %162 = load i32, i32* @x.3
  %163 = load i32, i32* @y.4
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %originalBB15alteredBB, %160
  %170 = zext i1 %161 to i32
  store i32 %170, i32* %3, align 4
  %171 = load i32, i32* %3, align 4
  %172 = icmp ne i32 %171, 0
  %173 = load i32, i32* @x.3
  %174 = load i32, i32* @y.4
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br i1 %172, label %181, label %199

; <label>:181:                                    ; preds = %originalBBpart217
  %182 = load i32, i32* @x.3
  %183 = load i32, i32* @y.4
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %originalBB19alteredBB, %181
  %190 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %191 = load i32, i32* @x.3
  %192 = load i32, i32* @y.4
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br label %200

; <label>:199:                                    ; preds = %originalBBpart217
  br label %200

; <label>:200:                                    ; preds = %199, %originalBBpart221
  %201 = phi %struct.rtx_def* [ %190, %originalBBpart221 ], [ null, %199 ]
  %202 = load i32, i32* @x.3
  %203 = load i32, i32* @y.4
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %originalBB23alteredBB, %200
  store %struct.rtx_def* %201, %struct.rtx_def** %1, align 8
  %210 = load i32, i32* @x.3
  %211 = load i32, i32* @y.4
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %237

; <label>:218:                                    ; preds = %originalBBpart2
  br label %219

; <label>:219:                                    ; preds = %218
  %220 = load i32, i32* @x.3
  %221 = load i32, i32* @y.4
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %219
  %228 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16
  store %struct.rtx_def* %228, %struct.rtx_def** %1, align 8
  %229 = load i32, i32* @x.3
  %230 = load i32, i32* @y.4
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %237

; <label>:237:                                    ; preds = %originalBBpart229, %originalBBpart225, %129, %originalBBpart25, %47, %15
  %238 = load %struct.rtx_def*, %struct.rtx_def** %1, align 8
  ret %struct.rtx_def* %238

originalBBalteredBB:                              ; preds = %originalBB, %16
  %239 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %240 = bitcast %struct.rtx_def* %239 to i32*
  %241 = load i32, i32* %240, align 8
  %_ = sub i32 0, %241
  %gen = add i32 %_, 65535
  %_1 = sub i32 0, %241
  %gen2 = add i32 %_1, 65535
  %242 = and i32 %241, 65535
  %243 = icmp eq i32 %242, 39
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %63
  %244 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16
  store %struct.rtx_def* %244, %struct.rtx_def** %1, align 8
  br label %originalBB3

originalBB7alteredBB:                             ; preds = %originalBB7, %81
  %245 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1
  %247 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %246, i64 0, i64 0
  %248 = bitcast %union.rtunion_def* %247 to %struct.rtx_def**
  %249 = load %struct.rtx_def*, %struct.rtx_def** %248, align 8
  store %struct.rtx_def* %249, %struct.rtx_def** %2, align 8
  %250 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %251 = bitcast %struct.rtx_def* %250 to i32*
  %252 = load i32, i32* %251, align 8
  %253 = and i32 %252, 65535
  %254 = icmp eq i32 %253, 63
  br label %originalBB7

originalBB11alteredBB:                            ; preds = %originalBB11, %137
  %255 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %256 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %255, i32 0, i32 1
  %257 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %256, i64 0, i64 0
  %258 = bitcast %union.rtunion_def* %257 to i32*
  %259 = load i32, i32* %258, align 8
  %260 = icmp ult i32 %259, 53
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %160
  %261 = zext i1 %161 to i32
  store i32 %261, i32* %3, align 4
  %262 = load i32, i32* %3, align 4
  %263 = icmp ne i32 %262, 0
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %181
  %264 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %200
  store %struct.rtx_def* %201, %struct.rtx_def** %1, align 8
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %219
  %265 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16
  store %struct.rtx_def* %265, %struct.rtx_def** %1, align 8
  br label %originalBB27
}

declare noalias i8* @xmalloc(i64) #1

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

declare %struct.rtx_def* @get_last_insn() #1

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @optimize_reg_copy_3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.rtx_def*, align 8
  %11 = alloca %struct.rtx_def*, align 8
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %4, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %5, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %6, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %16, i64 0, i64 0
  %18 = bitcast %union.rtunion_def* %17 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  store %struct.rtx_def* %19, %struct.rtx_def** %7, align 8
  %20 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %21, i64 0, i64 0
  %23 = bitcast %union.rtunion_def* %22 to i32*
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %8, align 4
  %25 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %26, i64 0, i64 0
  %28 = bitcast %union.rtunion_def* %27 to i32*
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %9, align 4
  %30 = load i32, i32* %8, align 4
  %31 = icmp slt i32 %30, 53
  br i1 %31, label %62, label %32

; <label>:32:                                     ; preds = %3
  %33 = load i32, i32* %9, align 4
  %34 = icmp slt i32 %33, 53
  br i1 %34, label %62, label %35

; <label>:35:                                     ; preds = %32
  %36 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %37 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %38 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %36, i32 1, %struct.rtx_def* %37)
  %39 = icmp ne %struct.rtx_def* %38, null
  br i1 %39, label %40, label %62

; <label>:40:                                     ; preds = %35
  %41 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %42 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %41, i32 0, i32 4
  %43 = bitcast %union.varray_data_tag* %42 to [1 x %struct.reg_info_def*]*
  %44 = load i32, i32* %8, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %43, i64 0, i64 %45
  %47 = load %struct.reg_info_def*, %struct.reg_info_def** %46, align 8
  %48 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %47, i32 0, i32 6
  %49 = load i32, i32* %48, align 4
  %50 = icmp ne i32 %49, 1
  br i1 %50, label %62, label %51

; <label>:51:                                     ; preds = %40
  %52 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %53 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %52, i32 0, i32 4
  %54 = bitcast %union.varray_data_tag* %53 to [1 x %struct.reg_info_def*]*
  %55 = load i32, i32* %8, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %54, i64 0, i64 %56
  %58 = load %struct.reg_info_def*, %struct.reg_info_def** %57, align 8
  %59 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %58, i32 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = icmp ne i32 %60, 1
  br i1 %61, label %62, label %63

; <label>:62:                                     ; preds = %51, %40, %35, %32, %3
  br label %459

; <label>:63:                                     ; preds = %51
  %64 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %65, i64 0, i64 1
  %67 = bitcast %union.rtunion_def* %66 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %67, align 8
  store %struct.rtx_def* %68, %struct.rtx_def** %10, align 8
  br label %69

; <label>:69:                                     ; preds = %originalBBpart24, %63
  %70 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %71 = icmp ne %struct.rtx_def* %70, null
  br i1 %71, label %72, label %78

; <label>:72:                                     ; preds = %69
  %73 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %74 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %75 = call i32 @reg_set_p(%struct.rtx_def* %73, %struct.rtx_def* %74)
  %76 = icmp ne i32 %75, 0
  %77 = xor i1 %76, true
  br label %78

; <label>:78:                                     ; preds = %72, %69
  %79 = phi i1 [ false, %69 ], [ %77, %72 ]
  br i1 %79, label %80, label %124

; <label>:80:                                     ; preds = %78
  %81 = load i32, i32* @x.5
  %82 = load i32, i32* @y.6
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %80
  %89 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %90 = call i32 @perhaps_ends_bb_p(%struct.rtx_def* %89)
  %91 = icmp ne i32 %90, 0
  %92 = load i32, i32* @x.5
  %93 = load i32, i32* @y.6
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %91, label %100, label %101

; <label>:100:                                    ; preds = %originalBBpart2
  br label %124

; <label>:101:                                    ; preds = %originalBBpart2
  br label %102

; <label>:102:                                    ; preds = %101
  %103 = load i32, i32* @x.5
  %104 = load i32, i32* @y.6
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %102
  %111 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %112, i64 0, i64 1
  %114 = bitcast %union.rtunion_def* %113 to %struct.rtx_def**
  %115 = load %struct.rtx_def*, %struct.rtx_def** %114, align 8
  store %struct.rtx_def* %115, %struct.rtx_def** %10, align 8
  %116 = load i32, i32* @x.5
  %117 = load i32, i32* @y.6
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %69

; <label>:124:                                    ; preds = %100, %78
  %125 = load i32, i32* @x.5
  %126 = load i32, i32* @y.6
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %124
  %133 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %134 = icmp ne %struct.rtx_def* %133, null
  %135 = load i32, i32* @x.5
  %136 = load i32, i32* @y.6
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %134, label %144, label %143

; <label>:143:                                    ; preds = %originalBBpart28
  br label %459

; <label>:144:                                    ; preds = %originalBBpart28
  %145 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %146 = bitcast %struct.rtx_def* %145 to i32*
  %147 = load i32, i32* %146, align 8
  %148 = and i32 %147, 65535
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %149
  %151 = load i8, i8* %150, align 1
  %152 = sext i8 %151 to i32
  %153 = icmp eq i32 %152, 105
  br i1 %153, label %154, label %196

; <label>:154:                                    ; preds = %144
  %155 = load i32, i32* @x.5
  %156 = load i32, i32* @y.6
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %154
  %163 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %165 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %164, i64 0, i64 3
  %166 = bitcast %union.rtunion_def* %165 to %struct.rtx_def**
  %167 = load %struct.rtx_def*, %struct.rtx_def** %166, align 8
  %168 = bitcast %struct.rtx_def* %167 to i32*
  %169 = load i32, i32* %168, align 8
  %170 = and i32 %169, 65535
  %171 = icmp eq i32 %170, 47
  %172 = load i32, i32* @x.5
  %173 = load i32, i32* @y.6
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %171, label %180, label %186

; <label>:180:                                    ; preds = %originalBBpart212
  %181 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1
  %183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %182, i64 0, i64 3
  %184 = bitcast %union.rtunion_def* %183 to %struct.rtx_def**
  %185 = load %struct.rtx_def*, %struct.rtx_def** %184, align 8
  br label %194

; <label>:186:                                    ; preds = %originalBBpart212
  %187 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %188 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1
  %190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %189, i64 0, i64 3
  %191 = bitcast %union.rtunion_def* %190 to %struct.rtx_def**
  %192 = load %struct.rtx_def*, %struct.rtx_def** %191, align 8
  %193 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %187, %struct.rtx_def* %192)
  br label %194

; <label>:194:                                    ; preds = %186, %180
  %195 = phi %struct.rtx_def* [ %185, %180 ], [ %193, %186 ]
  br label %197

; <label>:196:                                    ; preds = %144
  br label %197

; <label>:197:                                    ; preds = %196, %194
  %198 = phi %struct.rtx_def* [ %195, %194 ], [ null, %196 ]
  %199 = load i32, i32* @x.5
  %200 = load i32, i32* @y.6
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %197
  store %struct.rtx_def* %198, %struct.rtx_def** %11, align 8
  %207 = icmp ne %struct.rtx_def* %198, null
  %208 = load i32, i32* @x.5
  %209 = load i32, i32* @y.6
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %207, label %216, label %254

; <label>:216:                                    ; preds = %originalBBpart216
  %217 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %217, i32 0, i32 1
  %219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %218, i64 0, i64 1
  %220 = bitcast %union.rtunion_def* %219 to %struct.rtx_def**
  %221 = load %struct.rtx_def*, %struct.rtx_def** %220, align 8
  %222 = bitcast %struct.rtx_def* %221 to i32*
  %223 = load i32, i32* %222, align 8
  %224 = and i32 %223, 65535
  %225 = icmp ne i32 %224, 66
  br i1 %225, label %254, label %226

; <label>:226:                                    ; preds = %216
  %227 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %228 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %227, i32 3, %struct.rtx_def* null)
  %229 = icmp ne %struct.rtx_def* %228, null
  br i1 %229, label %254, label %230

; <label>:230:                                    ; preds = %226
  %231 = load i32, i32* @x.5
  %232 = load i32, i32* @y.6
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %230
  %239 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %239, i32 0, i32 1
  %241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %240, i64 0, i64 0
  %242 = bitcast %union.rtunion_def* %241 to %struct.rtx_def**
  %243 = load %struct.rtx_def*, %struct.rtx_def** %242, align 8
  %244 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %245 = icmp ne %struct.rtx_def* %243, %244
  %246 = load i32, i32* @x.5
  %247 = load i32, i32* @y.6
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %245, label %254, label %271

; <label>:254:                                    ; preds = %originalBBpart220, %226, %216, %originalBBpart216
  %255 = load i32, i32* @x.5
  %256 = load i32, i32* @y.6
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %254
  %263 = load i32, i32* @x.5
  %264 = load i32, i32* @y.6
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %459

; <label>:271:                                    ; preds = %originalBBpart220
  %272 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %273 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %272, i32 0, i32 1
  %274 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %273, i64 0, i64 1
  %275 = bitcast %union.rtunion_def* %274 to %struct.rtx_def**
  %276 = load %struct.rtx_def*, %struct.rtx_def** %275, align 8
  %277 = bitcast %struct.rtx_def* %276 to i32*
  %278 = load i32, i32* %277, align 8
  %279 = lshr i32 %278, 27
  %280 = and i32 %279, 1
  %281 = icmp ne i32 %280, 0
  br i1 %281, label %282, label %299

; <label>:282:                                    ; preds = %271
  %283 = load i32, i32* @x.5
  %284 = load i32, i32* @y.6
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %282
  %291 = load i32, i32* @x.5
  %292 = load i32, i32* @y.6
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %459

; <label>:299:                                    ; preds = %271
  %300 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %301 = bitcast %struct.rtx_def* %300 to i32*
  %302 = load i32, i32* %301, align 8
  %303 = lshr i32 %302, 16
  %304 = and i32 %303, 255
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i64 0, i64 %305
  %307 = load i16, i16* %306, align 2
  %308 = zext i16 %307 to i32
  %309 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %310 = bitcast %struct.rtx_def* %309 to i32*
  %311 = load i32, i32* %310, align 8
  %312 = lshr i32 %311, 16
  %313 = and i32 %312, 255
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i64 0, i64 %314
  %316 = load i16, i16* %315, align 2
  %317 = zext i16 %316 to i32
  %318 = icmp sle i32 %308, %317
  br i1 %318, label %319, label %321

; <label>:319:                                    ; preds = %299
  br i1 true, label %321, label %320

; <label>:320:                                    ; preds = %319
  br label %459

; <label>:321:                                    ; preds = %319, %299
  %322 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %323 = bitcast %struct.rtx_def* %322 to i32*
  %324 = load i32, i32* %323, align 8
  %325 = lshr i32 %324, 16
  %326 = and i32 %325, 255
  store i32 %326, i32* %13, align 4
  %327 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %328 = bitcast %struct.rtx_def* %327 to i32*
  %329 = load i32, i32* %328, align 8
  %330 = lshr i32 %329, 16
  %331 = and i32 %330, 255
  %332 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %333 = bitcast %struct.rtx_def* %332 to i32*
  %334 = load i32, i32* %333, align 8
  %335 = and i32 %331, 255
  %336 = shl i32 %335, 16
  %337 = and i32 %334, -16711681
  %338 = or i32 %337, %336
  store i32 %338, i32* %333, align 8
  %339 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %339, i32 0, i32 1
  %341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %340, i64 0, i64 1
  %342 = bitcast %union.rtunion_def* %341 to %struct.rtx_def**
  %343 = load %struct.rtx_def*, %struct.rtx_def** %342, align 8
  %344 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %345 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1
  %346 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %345, i64 0, i64 0
  %347 = bitcast %union.rtunion_def* %346 to %struct.rtx_def**
  store %struct.rtx_def* %343, %struct.rtx_def** %347, align 8
  %348 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %349 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %349, i32 0, i32 1
  %351 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %350, i64 0, i64 1
  %352 = bitcast %union.rtunion_def* %351 to %struct.rtx_def**
  %353 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %354 = call i32 @validate_change(%struct.rtx_def* %348, %struct.rtx_def** %352, %struct.rtx_def* %353, i32 1)
  %355 = load i32, i32* %13, align 4
  %356 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %357 = call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %355, %struct.rtx_def* %356)
  store %struct.rtx_def* %357, %struct.rtx_def** %12, align 8
  br label %358

; <label>:358:                                    ; preds = %410, %409, %321
  %359 = load i32, i32* @x.5
  %360 = load i32, i32* @y.6
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %358
  %367 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %368 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %367, i32 0, i32 1
  %369 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %368, i64 0, i64 2
  %370 = bitcast %union.rtunion_def* %369 to %struct.rtx_def**
  %371 = load %struct.rtx_def*, %struct.rtx_def** %370, align 8
  store %struct.rtx_def* %371, %struct.rtx_def** %10, align 8
  %372 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %373 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %374 = icmp ne %struct.rtx_def* %372, %373
  %375 = load i32, i32* @x.5
  %376 = load i32, i32* @y.6
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %374, label %383, label %414

; <label>:383:                                    ; preds = %originalBBpart232
  %384 = load i32, i32* @x.5
  %385 = load i32, i32* @y.6
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %383
  %392 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %393 = bitcast %struct.rtx_def* %392 to i32*
  %394 = load i32, i32* %393, align 8
  %395 = and i32 %394, 65535
  %396 = sext i32 %395 to i64
  %397 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %396
  %398 = load i8, i8* %397, align 1
  %399 = sext i8 %398 to i32
  %400 = icmp eq i32 %399, 105
  %401 = load i32, i32* @x.5
  %402 = load i32, i32* @y.6
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBBpart242, label %originalBB34alteredBB

originalBBpart242:                                ; preds = %originalBB34
  br i1 %400, label %410, label %409

; <label>:409:                                    ; preds = %originalBBpart242
  br label %358

; <label>:410:                                    ; preds = %originalBBpart242
  %411 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %412 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %413 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  call void @validate_replace_rtx_group(%struct.rtx_def* %411, %struct.rtx_def* %412, %struct.rtx_def* %413)
  br label %358

; <label>:414:                                    ; preds = %originalBBpart232
  %415 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %416 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %417 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  call void @validate_replace_rtx_group(%struct.rtx_def* %415, %struct.rtx_def* %416, %struct.rtx_def* %417)
  %418 = call i32 @apply_change_group()
  %419 = icmp ne i32 %418, 0
  br i1 %419, label %434, label %420

; <label>:420:                                    ; preds = %414
  %421 = load i32, i32* %13, align 4
  %422 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %423 = bitcast %struct.rtx_def* %422 to i32*
  %424 = load i32, i32* %423, align 8
  %425 = and i32 %421, 255
  %426 = shl i32 %425, 16
  %427 = and i32 %424, -16711681
  %428 = or i32 %427, %426
  store i32 %428, i32* %423, align 8
  %429 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %430 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %431 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %430, i32 0, i32 1
  %432 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %431, i64 0, i64 0
  %433 = bitcast %union.rtunion_def* %432 to %struct.rtx_def**
  store %struct.rtx_def* %429, %struct.rtx_def** %433, align 8
  br label %459

; <label>:434:                                    ; preds = %414
  %435 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %436 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %435, i32 4, %struct.rtx_def* null)
  store %struct.rtx_def* %436, %struct.rtx_def** %14, align 8
  %437 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %438 = icmp ne %struct.rtx_def* %437, null
  br i1 %438, label %439, label %442

; <label>:439:                                    ; preds = %434
  %440 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %441 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  call void @remove_note(%struct.rtx_def* %440, %struct.rtx_def* %441)
  br label %442

; <label>:442:                                    ; preds = %439, %434
  %443 = load i32, i32* @x.5
  %444 = load i32, i32* @y.6
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %originalBB44alteredBB, %442
  %451 = load i32, i32* @x.5
  %452 = load i32, i32* @y.6
  %453 = sub i32 %451, 1
  %454 = mul i32 %451, %453
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %456, %457
  br i1 %458, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  br label %459

; <label>:459:                                    ; preds = %originalBBpart246, %420, %320, %originalBBpart228, %originalBBpart224, %143, %62
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %80
  %460 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %461 = call i32 @perhaps_ends_bb_p(%struct.rtx_def* %460)
  %462 = icmp ne i32 %461, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %102
  %463 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %464 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %463, i32 0, i32 1
  %465 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %464, i64 0, i64 1
  %466 = bitcast %union.rtunion_def* %465 to %struct.rtx_def**
  %467 = load %struct.rtx_def*, %struct.rtx_def** %466, align 8
  store %struct.rtx_def* %467, %struct.rtx_def** %10, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %124
  %468 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %469 = icmp ne %struct.rtx_def* %468, null
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %154
  %470 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %471 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %470, i32 0, i32 1
  %472 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %471, i64 0, i64 3
  %473 = bitcast %union.rtunion_def* %472 to %struct.rtx_def**
  %474 = load %struct.rtx_def*, %struct.rtx_def** %473, align 8
  %475 = bitcast %struct.rtx_def* %474 to i32*
  %476 = load i32, i32* %475, align 8
  %_ = shl i32 %476, 65535
  %477 = and i32 %476, 65535
  %478 = icmp eq i32 %477, 47
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %197
  store %struct.rtx_def* %198, %struct.rtx_def** %11, align 8
  %479 = icmp ne %struct.rtx_def* %198, null
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %230
  %480 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %481 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %480, i32 0, i32 1
  %482 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %481, i64 0, i64 0
  %483 = bitcast %union.rtunion_def* %482 to %struct.rtx_def**
  %484 = load %struct.rtx_def*, %struct.rtx_def** %483, align 8
  %485 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %486 = icmp ne %struct.rtx_def* %484, %485
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %254
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %282
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %358
  %487 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %488 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %487, i32 0, i32 1
  %489 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %488, i64 0, i64 2
  %490 = bitcast %union.rtunion_def* %489 to %struct.rtx_def**
  %491 = load %struct.rtx_def*, %struct.rtx_def** %490, align 8
  store %struct.rtx_def* %491, %struct.rtx_def** %10, align 8
  %492 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %493 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %494 = icmp ne %struct.rtx_def* %492, %493
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %383
  %495 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %496 = bitcast %struct.rtx_def* %495 to i32*
  %497 = load i32, i32* %496, align 8
  %_35 = sub i32 0, %497
  %gen = add i32 %_35, 65535
  %_36 = sub i32 0, %497
  %gen37 = add i32 %_36, 65535
  %_38 = sub i32 %497, 65535
  %gen39 = mul i32 %_38, 65535
  %_40 = shl i32 %497, 65535
  %498 = and i32 %497, 65535
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %499
  %501 = load i8, i8* %500, align 1
  %502 = sext i8 %501 to i32
  %503 = icmp eq i32 %502, 105
  br label %originalBB34

originalBB44alteredBB:                            ; preds = %originalBB44, %442
  br label %originalBB44
}

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @optimize_reg_copy_1(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  %9 = alloca %struct.rtx_def*, align 8
  %10 = alloca %struct.rtx_def*, align 8
  %11 = alloca %struct.rtx_def*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct.rtx_def* %0, %struct.rtx_def** %5, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %6, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %7, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %11, align 8
  %19 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %20, i64 0, i64 0
  %22 = bitcast %union.rtunion_def* %21 to i32*
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %12, align 4
  %24 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %25, i64 0, i64 0
  %27 = bitcast %union.rtunion_def* %26 to i32*
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %13, align 4
  %29 = load i32, i32* %12, align 4
  %30 = load i32, i32* %13, align 4
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %76, label %32

; <label>:32:                                     ; preds = %3
  %33 = load i32, i32* @x.7
  %34 = load i32, i32* @y.8
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %32
  %41 = load i32, i32* %12, align 4
  %42 = icmp slt i32 %41, 53
  %43 = load i32, i32* @x.7
  %44 = load i32, i32* @y.8
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %42, label %76, label %51

; <label>:51:                                     ; preds = %originalBBpart2
  %52 = load i32, i32* %13, align 4
  %53 = icmp slt i32 %52, 53
  br i1 %53, label %76, label %54

; <label>:54:                                     ; preds = %51
  %55 = load i32, i32* %12, align 4
  %56 = icmp eq i32 %55, 7
  br i1 %56, label %76, label %57

; <label>:57:                                     ; preds = %54
  %58 = load i32, i32* @x.7
  %59 = load i32, i32* @y.8
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %57
  %66 = load i32, i32* %13, align 4
  %67 = icmp eq i32 %66, 7
  %68 = load i32, i32* @x.7
  %69 = load i32, i32* @y.8
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %67, label %76, label %77

; <label>:76:                                     ; preds = %originalBBpart24, %54, %51, %originalBBpart2, %3
  store i32 0, i32* %4, align 4
  br label %735

; <label>:77:                                     ; preds = %originalBBpart24
  %78 = load i32, i32* @x.7
  %79 = load i32, i32* @y.8
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %77
  %86 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %87, i64 0, i64 2
  %89 = bitcast %union.rtunion_def* %88 to %struct.rtx_def**
  %90 = load %struct.rtx_def*, %struct.rtx_def** %89, align 8
  store %struct.rtx_def* %90, %struct.rtx_def** %8, align 8
  %91 = load i32, i32* @x.7
  %92 = load i32, i32* @y.8
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %99

; <label>:99:                                     ; preds = %728, %originalBBpart28
  %100 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %101 = icmp ne %struct.rtx_def* %100, null
  br i1 %101, label %102, label %734

; <label>:102:                                    ; preds = %99
  %103 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %104 = call i32 @perhaps_ends_bb_p(%struct.rtx_def* %103)
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %107

; <label>:106:                                    ; preds = %102
  br label %734

; <label>:107:                                    ; preds = %102
  %108 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %109 = bitcast %struct.rtx_def* %108 to i32*
  %110 = load i32, i32* %109, align 8
  %111 = and i32 %110, 65535
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = sext i8 %114 to i32
  %116 = icmp eq i32 %115, 105
  br i1 %116, label %118, label %117

; <label>:117:                                    ; preds = %107
  br label %728

; <label>:118:                                    ; preds = %107
  br label %119

; <label>:119:                                    ; preds = %118
  %120 = load i32, i32* @x.7
  %121 = load i32, i32* @y.8
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %119
  %128 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %129 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %130 = call i32 @reg_set_p(%struct.rtx_def* %128, %struct.rtx_def* %129)
  %131 = icmp ne i32 %130, 0
  %132 = load i32, i32* @x.7
  %133 = load i32, i32* @y.8
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %131, label %200, label %140

; <label>:140:                                    ; preds = %originalBBpart212
  %141 = load i32, i32* @x.7
  %142 = load i32, i32* @y.8
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %140
  %149 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %150 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %151 = call i32 @reg_set_p(%struct.rtx_def* %149, %struct.rtx_def* %150)
  %152 = icmp ne i32 %151, 0
  %153 = load i32, i32* @x.7
  %154 = load i32, i32* @y.8
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %152, label %200, label %161

; <label>:161:                                    ; preds = %originalBBpart216
  %162 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1
  %164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %163, i64 0, i64 3
  %165 = bitcast %union.rtunion_def* %164 to %struct.rtx_def**
  %166 = load %struct.rtx_def*, %struct.rtx_def** %165, align 8
  %167 = bitcast %struct.rtx_def* %166 to i32*
  %168 = load i32, i32* %167, align 8
  %169 = and i32 %168, 65535
  %170 = icmp eq i32 %169, 48
  br i1 %170, label %171, label %201

; <label>:171:                                    ; preds = %161
  %172 = load i32, i32* @x.7
  %173 = load i32, i32* @y.8
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %171
  %180 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %181 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1
  %183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %182, i64 0, i64 3
  %184 = bitcast %union.rtunion_def* %183 to %struct.rtx_def**
  %185 = load %struct.rtx_def*, %struct.rtx_def** %184, align 8
  %186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1
  %187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %186, i64 0, i64 0
  %188 = bitcast %union.rtunion_def* %187 to %struct.rtx_def**
  %189 = load %struct.rtx_def*, %struct.rtx_def** %188, align 8
  %190 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %180, %struct.rtx_def* %189)
  %191 = icmp ne i32 %190, 0
  %192 = load i32, i32* @x.7
  %193 = load i32, i32* @y.8
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %191, label %200, label %201

; <label>:200:                                    ; preds = %originalBBpart220, %originalBBpart216, %originalBBpart212
  br label %734

; <label>:201:                                    ; preds = %originalBBpart220, %161
  %202 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %203 = load i32, i32* %12, align 4
  %204 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %202, i32 1, i32 %203)
  store %struct.rtx_def* %204, %struct.rtx_def** %10, align 8
  %205 = icmp ne %struct.rtx_def* %204, null
  br i1 %205, label %206, label %701

; <label>:206:                                    ; preds = %201
  %207 = load i32, i32* @x.7
  %208 = load i32, i32* @y.8
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %206
  %215 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %216 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1
  %217 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %216, i64 0, i64 0
  %218 = bitcast %union.rtunion_def* %217 to %struct.rtx_def**
  %219 = load %struct.rtx_def*, %struct.rtx_def** %218, align 8
  %220 = bitcast %struct.rtx_def* %219 to i32*
  %221 = load i32, i32* %220, align 8
  %222 = lshr i32 %221, 16
  %223 = and i32 %222, 255
  %224 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %225 = bitcast %struct.rtx_def* %224 to i32*
  %226 = load i32, i32* %225, align 8
  %227 = lshr i32 %226, 16
  %228 = and i32 %227, 255
  %229 = icmp eq i32 %223, %228
  %230 = load i32, i32* @x.7
  %231 = load i32, i32* @y.8
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart256, label %originalBB22alteredBB

originalBBpart256:                                ; preds = %originalBB22
  br i1 %229, label %238, label %701

; <label>:238:                                    ; preds = %originalBBpart256
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %16, align 4
  store i32 0, i32* %17, align 4
  store i32 0, i32* %18, align 4
  %239 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %240 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %239)
  store %struct.rtx_def* %240, %struct.rtx_def** %9, align 8
  br label %241

; <label>:241:                                    ; preds = %463, %238
  %242 = load i32, i32* @x.7
  %243 = load i32, i32* @y.8
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %241
  %250 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %251 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %252 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %251)
  %253 = icmp ne %struct.rtx_def* %250, %252
  %254 = load i32, i32* @x.7
  %255 = load i32, i32* @y.8
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %253, label %262, label %466

; <label>:262:                                    ; preds = %originalBBpart260
  %263 = load i32, i32* @x.7
  %264 = load i32, i32* @y.8
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %262
  %271 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %272 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %273 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %272, i32 0, i32 1
  %274 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %273, i64 0, i64 3
  %275 = bitcast %union.rtunion_def* %274 to %struct.rtx_def**
  %276 = load %struct.rtx_def*, %struct.rtx_def** %275, align 8
  %277 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %271, %struct.rtx_def* %276)
  %278 = icmp ne i32 %277, 0
  %279 = load i32, i32* @x.7
  %280 = load i32, i32* @y.8
  %281 = sub i32 %279, 1
  %282 = mul i32 %279, %281
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %284, %285
  br i1 %286, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %278, label %287, label %374

; <label>:287:                                    ; preds = %originalBBpart264
  %288 = load i32, i32* %12, align 4
  %289 = icmp slt i32 %288, 53
  br i1 %289, label %290, label %300

; <label>:290:                                    ; preds = %287
  %291 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %292 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %292, i32 0, i32 1
  %294 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %293, i64 0, i64 3
  %295 = bitcast %union.rtunion_def* %294 to %struct.rtx_def**
  %296 = load %struct.rtx_def*, %struct.rtx_def** %295, align 8
  %297 = call i32 @reg_mentioned_p(%struct.rtx_def* %291, %struct.rtx_def* %296)
  %298 = icmp ne i32 %297, 0
  br i1 %298, label %299, label %300

; <label>:299:                                    ; preds = %290
  store i32 1, i32* %14, align 4
  br label %373

; <label>:300:                                    ; preds = %290, %287
  %301 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %302 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %303 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %304 = call i32 @validate_replace_rtx(%struct.rtx_def* %301, %struct.rtx_def* %302, %struct.rtx_def* %303)
  %305 = icmp ne i32 %304, 0
  br i1 %305, label %306, label %367

; <label>:306:                                    ; preds = %300
  %307 = load i32, i32* @x.7
  %308 = load i32, i32* @y.8
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %306
  %315 = load i32, i32* %12, align 4
  %316 = icmp sge i32 %315, 53
  %317 = load i32, i32* @x.7
  %318 = load i32, i32* @y.8
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %316, label %350, label %325

; <label>:325:                                    ; preds = %originalBBpart268
  %326 = load i32, i32* @x.7
  %327 = load i32, i32* @y.8
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %325
  %334 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %335 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %336 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %335, i32 0, i32 1
  %337 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %336, i64 0, i64 3
  %338 = bitcast %union.rtunion_def* %337 to %struct.rtx_def**
  %339 = load %struct.rtx_def*, %struct.rtx_def** %338, align 8
  %340 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %334, %struct.rtx_def* %339)
  %341 = icmp ne i32 %340, 0
  %342 = load i32, i32* @x.7
  %343 = load i32, i32* @y.8
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br i1 %341, label %367, label %350

; <label>:350:                                    ; preds = %originalBBpart272, %originalBBpart268
  %351 = load i32, i32* @x.7
  %352 = load i32, i32* @y.8
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %350
  %359 = load i32, i32* @x.7
  %360 = load i32, i32* @y.8
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %372

; <label>:367:                                    ; preds = %originalBBpart272, %300
  %368 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %369 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %370 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %371 = call i32 @validate_replace_rtx(%struct.rtx_def* %368, %struct.rtx_def* %369, %struct.rtx_def* %370)
  store i32 1, i32* %14, align 4
  br label %372

; <label>:372:                                    ; preds = %367, %originalBBpart276
  br label %373

; <label>:373:                                    ; preds = %372, %299
  br label %374

; <label>:374:                                    ; preds = %373, %originalBBpart264
  %375 = load i32, i32* %16, align 4
  %376 = add nsw i32 %375, 1
  store i32 %376, i32* %16, align 4
  %377 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %378 = icmp ne %struct.rtx_def* %377, null
  br i1 %378, label %379, label %382

; <label>:379:                                    ; preds = %374
  %380 = load i32, i32* %15, align 4
  %381 = add nsw i32 %380, 1
  store i32 %381, i32* %15, align 4
  br label %382

; <label>:382:                                    ; preds = %379, %374
  %383 = load i32, i32* @x.7
  %384 = load i32, i32* @y.8
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %382
  %391 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %392 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %393 = icmp ne %struct.rtx_def* %391, %392
  %394 = load i32, i32* @x.7
  %395 = load i32, i32* @y.8
  %396 = sub i32 %394, 1
  %397 = mul i32 %394, %396
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %399, %400
  br i1 %401, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br i1 %393, label %402, label %433

; <label>:402:                                    ; preds = %originalBBpart280
  %403 = load i32, i32* @x.7
  %404 = load i32, i32* @y.8
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %originalBB82alteredBB, %402
  %411 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %412 = bitcast %struct.rtx_def* %411 to i32*
  %413 = load i32, i32* %412, align 8
  %414 = and i32 %413, 65535
  %415 = icmp eq i32 %414, 34
  %416 = load i32, i32* @x.7
  %417 = load i32, i32* @y.8
  %418 = sub i32 %416, 1
  %419 = mul i32 %416, %418
  %420 = urem i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %421, %422
  br i1 %423, label %originalBBpart289, label %originalBB82alteredBB

originalBBpart289:                                ; preds = %originalBB82
  br i1 %415, label %424, label %433

; <label>:424:                                    ; preds = %originalBBpart289
  %425 = load i32, i32* %18, align 4
  %426 = add nsw i32 %425, 1
  store i32 %426, i32* %18, align 4
  %427 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %428 = icmp ne %struct.rtx_def* %427, null
  br i1 %428, label %429, label %432

; <label>:429:                                    ; preds = %424
  %430 = load i32, i32* %17, align 4
  %431 = add nsw i32 %430, 1
  store i32 %431, i32* %17, align 4
  br label %432

; <label>:432:                                    ; preds = %429, %424
  br label %433

; <label>:433:                                    ; preds = %432, %originalBBpart289, %originalBBpart280
  %434 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %435 = icmp eq %struct.rtx_def* %434, null
  br i1 %435, label %436, label %462

; <label>:436:                                    ; preds = %433
  %437 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %438 = load i32, i32* %13, align 4
  %439 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %437, i32 1, i32 %438)
  store %struct.rtx_def* %439, %struct.rtx_def** %11, align 8
  %440 = icmp ne %struct.rtx_def* %439, null
  br i1 %440, label %441, label %462

; <label>:441:                                    ; preds = %436
  %442 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %443 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %442, i32 0, i32 1
  %444 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %443, i64 0, i64 0
  %445 = bitcast %union.rtunion_def* %444 to %struct.rtx_def**
  %446 = load %struct.rtx_def*, %struct.rtx_def** %445, align 8
  %447 = bitcast %struct.rtx_def* %446 to i32*
  %448 = load i32, i32* %447, align 8
  %449 = lshr i32 %448, 16
  %450 = and i32 %449, 255
  %451 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %452 = bitcast %struct.rtx_def* %451 to i32*
  %453 = load i32, i32* %452, align 8
  %454 = lshr i32 %453, 16
  %455 = and i32 %454, 255
  %456 = icmp ne i32 %450, %455
  br i1 %456, label %457, label %458

; <label>:457:                                    ; preds = %441
  store i32 1, i32* %14, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %11, align 8
  br label %461

; <label>:458:                                    ; preds = %441
  %459 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %460 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  call void @remove_note(%struct.rtx_def* %459, %struct.rtx_def* %460)
  br label %461

; <label>:461:                                    ; preds = %458, %457
  br label %462

; <label>:462:                                    ; preds = %461, %436, %433
  br label %463

; <label>:463:                                    ; preds = %462
  %464 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %465 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %464)
  store %struct.rtx_def* %465, %struct.rtx_def** %9, align 8
  br label %241

; <label>:466:                                    ; preds = %originalBBpart260
  %467 = load i32, i32* @x.7
  %468 = load i32, i32* @y.8
  %469 = sub i32 %467, 1
  %470 = mul i32 %467, %469
  %471 = urem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %472, %473
  br i1 %474, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %466
  %475 = load i32, i32* %14, align 4
  %476 = icmp ne i32 %475, 0
  %477 = load i32, i32* @x.7
  %478 = load i32, i32* @y.8
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br i1 %476, label %592, label %485

; <label>:485:                                    ; preds = %originalBBpart293
  %486 = load i32, i32* %12, align 4
  %487 = icmp sge i32 %486, 53
  br i1 %487, label %488, label %575

; <label>:488:                                    ; preds = %485
  %489 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %490 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %489, i32 0, i32 4
  %491 = bitcast %union.varray_data_tag* %490 to [1 x %struct.reg_info_def*]*
  %492 = load i32, i32* %12, align 4
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %491, i64 0, i64 %493
  %495 = load %struct.reg_info_def*, %struct.reg_info_def** %494, align 8
  %496 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %495, i32 0, i32 7
  %497 = load i32, i32* %496, align 4
  %498 = icmp sge i32 %497, 0
  br i1 %498, label %499, label %563

; <label>:499:                                    ; preds = %488
  %500 = load i32, i32* @x.7
  %501 = load i32, i32* @y.8
  %502 = sub i32 %500, 1
  %503 = mul i32 %500, %502
  %504 = urem i32 %503, 2
  %505 = icmp eq i32 %504, 0
  %506 = icmp slt i32 %501, 10
  %507 = or i1 %505, %506
  br i1 %507, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %originalBB95alteredBB, %499
  %508 = load i32, i32* %16, align 4
  %509 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %510 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %509, i32 0, i32 4
  %511 = bitcast %union.varray_data_tag* %510 to [1 x %struct.reg_info_def*]*
  %512 = load i32, i32* %12, align 4
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %511, i64 0, i64 %513
  %515 = load %struct.reg_info_def*, %struct.reg_info_def** %514, align 8
  %516 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %515, i32 0, i32 7
  %517 = load i32, i32* %516, align 4
  %518 = sub nsw i32 %517, %508
  store i32 %518, i32* %516, align 4
  %519 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %520 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %519, i32 0, i32 4
  %521 = bitcast %union.varray_data_tag* %520 to [1 x %struct.reg_info_def*]*
  %522 = load i32, i32* %12, align 4
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %521, i64 0, i64 %523
  %525 = load %struct.reg_info_def*, %struct.reg_info_def** %524, align 8
  %526 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %525, i32 0, i32 7
  %527 = load i32, i32* %526, align 4
  %528 = icmp slt i32 %527, 2
  %529 = load i32, i32* @x.7
  %530 = load i32, i32* @y.8
  %531 = sub i32 %529, 1
  %532 = mul i32 %529, %531
  %533 = urem i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %534, %535
  br i1 %536, label %originalBBpart2101, label %originalBB95alteredBB

originalBBpart2101:                               ; preds = %originalBB95
  br i1 %528, label %537, label %546

; <label>:537:                                    ; preds = %originalBBpart2101
  %538 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %539 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %538, i32 0, i32 4
  %540 = bitcast %union.varray_data_tag* %539 to [1 x %struct.reg_info_def*]*
  %541 = load i32, i32* %12, align 4
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %540, i64 0, i64 %542
  %544 = load %struct.reg_info_def*, %struct.reg_info_def** %543, align 8
  %545 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %544, i32 0, i32 7
  store i32 2, i32* %545, align 4
  br label %546

; <label>:546:                                    ; preds = %537, %originalBBpart2101
  %547 = load i32, i32* @x.7
  %548 = load i32, i32* @y.8
  %549 = sub i32 %547, 1
  %550 = mul i32 %547, %549
  %551 = urem i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = icmp slt i32 %548, 10
  %554 = or i1 %552, %553
  br i1 %554, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %originalBB103alteredBB, %546
  %555 = load i32, i32* @x.7
  %556 = load i32, i32* @y.8
  %557 = sub i32 %555, 1
  %558 = mul i32 %555, %557
  %559 = urem i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = icmp slt i32 %556, 10
  %562 = or i1 %560, %561
  br i1 %562, label %originalBBpart2105, label %originalBB103alteredBB

originalBBpart2105:                               ; preds = %originalBB103
  br label %563

; <label>:563:                                    ; preds = %originalBBpart2105, %488
  %564 = load i32, i32* %18, align 4
  %565 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %566 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %565, i32 0, i32 4
  %567 = bitcast %union.varray_data_tag* %566 to [1 x %struct.reg_info_def*]*
  %568 = load i32, i32* %12, align 4
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %567, i64 0, i64 %569
  %571 = load %struct.reg_info_def*, %struct.reg_info_def** %570, align 8
  %572 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %571, i32 0, i32 8
  %573 = load i32, i32* %572, align 4
  %574 = sub nsw i32 %573, %564
  store i32 %574, i32* %572, align 4
  br label %575

; <label>:575:                                    ; preds = %563, %485
  %576 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %577 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  call void @remove_note(%struct.rtx_def* %576, %struct.rtx_def* %577)
  %578 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %579 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %578, i32 0, i32 1
  %580 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %579, i64 0, i64 6
  %581 = bitcast %union.rtunion_def* %580 to %struct.rtx_def**
  %582 = load %struct.rtx_def*, %struct.rtx_def** %581, align 8
  %583 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %584 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %583, i32 0, i32 1
  %585 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %584, i64 0, i64 1
  %586 = bitcast %union.rtunion_def* %585 to %struct.rtx_def**
  store %struct.rtx_def* %582, %struct.rtx_def** %586, align 8
  %587 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %588 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %589 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %588, i32 0, i32 1
  %590 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %589, i64 0, i64 6
  %591 = bitcast %union.rtunion_def* %590 to %struct.rtx_def**
  store %struct.rtx_def* %587, %struct.rtx_def** %591, align 8
  br label %592

; <label>:592:                                    ; preds = %575, %originalBBpart293
  %593 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %594 = icmp ne %struct.rtx_def* %593, null
  br i1 %594, label %608, label %595

; <label>:595:                                    ; preds = %592
  %596 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %597 = load i32, i32* %13, align 4
  %598 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %596, i32 10, i32 %597)
  store %struct.rtx_def* %598, %struct.rtx_def** %11, align 8
  %599 = icmp ne %struct.rtx_def* %598, null
  br i1 %599, label %600, label %608

; <label>:600:                                    ; preds = %595
  %601 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %602 = bitcast %struct.rtx_def* %601 to i32*
  %603 = load i32, i32* %602, align 8
  %604 = and i32 %603, -16711681
  %605 = or i32 %604, 65536
  store i32 %605, i32* %602, align 8
  %606 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %607 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  call void @remove_note(%struct.rtx_def* %606, %struct.rtx_def* %607)
  br label %608

; <label>:608:                                    ; preds = %600, %595, %592
  %609 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %610 = icmp ne %struct.rtx_def* %609, null
  br i1 %610, label %611, label %680

; <label>:611:                                    ; preds = %608
  %612 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %613 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %612, i32 0, i32 1
  %614 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %613, i64 0, i64 6
  %615 = bitcast %union.rtunion_def* %614 to %struct.rtx_def**
  %616 = load %struct.rtx_def*, %struct.rtx_def** %615, align 8
  %617 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %618 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %617, i32 0, i32 1
  %619 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %618, i64 0, i64 1
  %620 = bitcast %union.rtunion_def* %619 to %struct.rtx_def**
  store %struct.rtx_def* %616, %struct.rtx_def** %620, align 8
  %621 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %622 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %623 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %622, i32 0, i32 1
  %624 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %623, i64 0, i64 6
  %625 = bitcast %union.rtunion_def* %624 to %struct.rtx_def**
  store %struct.rtx_def* %621, %struct.rtx_def** %625, align 8
  %626 = load i32, i32* %13, align 4
  %627 = icmp sge i32 %626, 53
  br i1 %627, label %628, label %663

; <label>:628:                                    ; preds = %611
  %629 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %630 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %629, i32 0, i32 4
  %631 = bitcast %union.varray_data_tag* %630 to [1 x %struct.reg_info_def*]*
  %632 = load i32, i32* %13, align 4
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %631, i64 0, i64 %633
  %635 = load %struct.reg_info_def*, %struct.reg_info_def** %634, align 8
  %636 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %635, i32 0, i32 7
  %637 = load i32, i32* %636, align 4
  %638 = icmp sge i32 %637, 0
  br i1 %638, label %639, label %651

; <label>:639:                                    ; preds = %628
  %640 = load i32, i32* %15, align 4
  %641 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %642 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %641, i32 0, i32 4
  %643 = bitcast %union.varray_data_tag* %642 to [1 x %struct.reg_info_def*]*
  %644 = load i32, i32* %13, align 4
  %645 = sext i32 %644 to i64
  %646 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %643, i64 0, i64 %645
  %647 = load %struct.reg_info_def*, %struct.reg_info_def** %646, align 8
  %648 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %647, i32 0, i32 7
  %649 = load i32, i32* %648, align 4
  %650 = add nsw i32 %649, %640
  store i32 %650, i32* %648, align 4
  br label %651

; <label>:651:                                    ; preds = %639, %628
  %652 = load i32, i32* %17, align 4
  %653 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %654 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %653, i32 0, i32 4
  %655 = bitcast %union.varray_data_tag* %654 to [1 x %struct.reg_info_def*]*
  %656 = load i32, i32* %13, align 4
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %655, i64 0, i64 %657
  %659 = load %struct.reg_info_def*, %struct.reg_info_def** %658, align 8
  %660 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %659, i32 0, i32 8
  %661 = load i32, i32* %660, align 4
  %662 = add nsw i32 %661, %652
  store i32 %662, i32* %660, align 4
  br label %663

; <label>:663:                                    ; preds = %651, %611
  %664 = load i32, i32* @x.7
  %665 = load i32, i32* @y.8
  %666 = sub i32 %664, 1
  %667 = mul i32 %664, %666
  %668 = urem i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %665, 10
  %671 = or i1 %669, %670
  br i1 %671, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %originalBB107alteredBB, %663
  %672 = load i32, i32* @x.7
  %673 = load i32, i32* @y.8
  %674 = sub i32 %672, 1
  %675 = mul i32 %672, %674
  %676 = urem i32 %675, 2
  %677 = icmp eq i32 %676, 0
  %678 = icmp slt i32 %673, 10
  %679 = or i1 %677, %678
  br i1 %679, label %originalBBpart2109, label %originalBB107alteredBB

originalBBpart2109:                               ; preds = %originalBB107
  br label %680

; <label>:680:                                    ; preds = %originalBBpart2109, %608
  %681 = load i32, i32* @x.7
  %682 = load i32, i32* @y.8
  %683 = sub i32 %681, 1
  %684 = mul i32 %681, %683
  %685 = urem i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = icmp slt i32 %682, 10
  %688 = or i1 %686, %687
  br i1 %688, label %originalBB111, label %originalBB111alteredBB

originalBB111:                                    ; preds = %originalBB111alteredBB, %680
  %689 = load i32, i32* %14, align 4
  %690 = icmp ne i32 %689, 0
  %691 = xor i1 %690, true
  %692 = zext i1 %691 to i32
  store i32 %692, i32* %4, align 4
  %693 = load i32, i32* @x.7
  %694 = load i32, i32* @y.8
  %695 = sub i32 %693, 1
  %696 = mul i32 %693, %695
  %697 = urem i32 %696, 2
  %698 = icmp eq i32 %697, 0
  %699 = icmp slt i32 %694, 10
  %700 = or i1 %698, %699
  br i1 %700, label %originalBBpart2122, label %originalBB111alteredBB

originalBBpart2122:                               ; preds = %originalBB111
  br label %735

; <label>:701:                                    ; preds = %originalBBpart256, %201
  %702 = load i32, i32* @x.7
  %703 = load i32, i32* @y.8
  %704 = sub i32 %702, 1
  %705 = mul i32 %702, %704
  %706 = urem i32 %705, 2
  %707 = icmp eq i32 %706, 0
  %708 = icmp slt i32 %703, 10
  %709 = or i1 %707, %708
  br i1 %709, label %originalBB124, label %originalBB124alteredBB

originalBB124:                                    ; preds = %originalBB124alteredBB, %701
  %710 = load i32, i32* %12, align 4
  %711 = icmp slt i32 %710, 53
  %712 = load i32, i32* @x.7
  %713 = load i32, i32* @y.8
  %714 = sub i32 %712, 1
  %715 = mul i32 %712, %714
  %716 = urem i32 %715, 2
  %717 = icmp eq i32 %716, 0
  %718 = icmp slt i32 %713, 10
  %719 = or i1 %717, %718
  br i1 %719, label %originalBBpart2126, label %originalBB124alteredBB

originalBBpart2126:                               ; preds = %originalBB124
  br i1 %711, label %720, label %726

; <label>:720:                                    ; preds = %originalBBpart2126
  %721 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %722 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %723 = call i32 @dead_or_set_p(%struct.rtx_def* %721, %struct.rtx_def* %722)
  %724 = icmp ne i32 %723, 0
  br i1 %724, label %725, label %726

; <label>:725:                                    ; preds = %720
  br label %734

; <label>:726:                                    ; preds = %720, %originalBBpart2126
  br label %727

; <label>:727:                                    ; preds = %726
  br label %728

; <label>:728:                                    ; preds = %727, %117
  %729 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %730 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %729, i32 0, i32 1
  %731 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %730, i64 0, i64 2
  %732 = bitcast %union.rtunion_def* %731 to %struct.rtx_def**
  %733 = load %struct.rtx_def*, %struct.rtx_def** %732, align 8
  store %struct.rtx_def* %733, %struct.rtx_def** %8, align 8
  br label %99

; <label>:734:                                    ; preds = %725, %200, %106, %99
  store i32 0, i32* %4, align 4
  br label %735

; <label>:735:                                    ; preds = %734, %originalBBpart2122, %76
  %736 = load i32, i32* %4, align 4
  ret i32 %736

originalBBalteredBB:                              ; preds = %originalBB, %32
  %737 = load i32, i32* %12, align 4
  %738 = icmp slt i32 %737, 53
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %57
  %739 = load i32, i32* %13, align 4
  %740 = icmp eq i32 %739, 7
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %77
  %741 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %742 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %741, i32 0, i32 1
  %743 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %742, i64 0, i64 2
  %744 = bitcast %union.rtunion_def* %743 to %struct.rtx_def**
  %745 = load %struct.rtx_def*, %struct.rtx_def** %744, align 8
  store %struct.rtx_def* %745, %struct.rtx_def** %8, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %119
  %746 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %747 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %748 = call i32 @reg_set_p(%struct.rtx_def* %746, %struct.rtx_def* %747)
  %749 = icmp ne i32 %748, 0
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %140
  %750 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %751 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %752 = call i32 @reg_set_p(%struct.rtx_def* %750, %struct.rtx_def* %751)
  %753 = icmp ne i32 %752, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %171
  %754 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %755 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %756 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %755, i32 0, i32 1
  %757 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %756, i64 0, i64 3
  %758 = bitcast %union.rtunion_def* %757 to %struct.rtx_def**
  %759 = load %struct.rtx_def*, %struct.rtx_def** %758, align 8
  %760 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %759, i32 0, i32 1
  %761 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %760, i64 0, i64 0
  %762 = bitcast %union.rtunion_def* %761 to %struct.rtx_def**
  %763 = load %struct.rtx_def*, %struct.rtx_def** %762, align 8
  %764 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %754, %struct.rtx_def* %763)
  %765 = icmp ne i32 %764, 0
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %206
  %766 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %767 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %766, i32 0, i32 1
  %768 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %767, i64 0, i64 0
  %769 = bitcast %union.rtunion_def* %768 to %struct.rtx_def**
  %770 = load %struct.rtx_def*, %struct.rtx_def** %769, align 8
  %771 = bitcast %struct.rtx_def* %770 to i32*
  %772 = load i32, i32* %771, align 8
  %_ = sub i32 0, %772
  %gen = add i32 %_, 16
  %_23 = sub i32 %772, 16
  %gen24 = mul i32 %_23, 16
  %_25 = sub i32 %772, 16
  %gen26 = mul i32 %_25, 16
  %_27 = shl i32 %772, 16
  %_28 = shl i32 %772, 16
  %_29 = sub i32 %772, 16
  %gen30 = mul i32 %_29, 16
  %_31 = sub i32 %772, 16
  %gen32 = mul i32 %_31, 16
  %_33 = sub i32 0, %772
  %gen34 = add i32 %_33, 16
  %773 = lshr i32 %772, 16
  %_35 = sub i32 0, %773
  %gen36 = add i32 %_35, 255
  %_37 = sub i32 %773, 255
  %gen38 = mul i32 %_37, 255
  %_39 = sub i32 0, %773
  %gen40 = add i32 %_39, 255
  %_41 = shl i32 %773, 255
  %_42 = sub i32 %773, 255
  %gen43 = mul i32 %_42, 255
  %_44 = sub i32 %773, 255
  %gen45 = mul i32 %_44, 255
  %_46 = shl i32 %773, 255
  %774 = and i32 %773, 255
  %775 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %776 = bitcast %struct.rtx_def* %775 to i32*
  %777 = load i32, i32* %776, align 8
  %_47 = shl i32 %777, 16
  %_48 = sub i32 0, %777
  %gen49 = add i32 %_48, 16
  %778 = lshr i32 %777, 16
  %_50 = sub i32 0, %778
  %gen51 = add i32 %_50, 255
  %_52 = shl i32 %778, 255
  %_53 = sub i32 0, %778
  %gen54 = add i32 %_53, 255
  %779 = and i32 %778, 255
  %780 = icmp eq i32 %774, %779
  br label %originalBB22

originalBB58alteredBB:                            ; preds = %originalBB58, %241
  %781 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %782 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %783 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %782)
  %784 = icmp ne %struct.rtx_def* %781, %783
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %262
  %785 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %786 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %787 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %786, i32 0, i32 1
  %788 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %787, i64 0, i64 3
  %789 = bitcast %union.rtunion_def* %788 to %struct.rtx_def**
  %790 = load %struct.rtx_def*, %struct.rtx_def** %789, align 8
  %791 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %785, %struct.rtx_def* %790)
  %792 = icmp ne i32 %791, 0
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %306
  %793 = load i32, i32* %12, align 4
  %794 = icmp sge i32 %793, 53
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %325
  %795 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %796 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %797 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %796, i32 0, i32 1
  %798 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %797, i64 0, i64 3
  %799 = bitcast %union.rtunion_def* %798 to %struct.rtx_def**
  %800 = load %struct.rtx_def*, %struct.rtx_def** %799, align 8
  %801 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %795, %struct.rtx_def* %800)
  %802 = icmp ne i32 %801, 0
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %350
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %382
  %803 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %804 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %805 = icmp ne %struct.rtx_def* %803, %804
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %402
  %806 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %807 = bitcast %struct.rtx_def* %806 to i32*
  %808 = load i32, i32* %807, align 8
  %_83 = sub i32 %808, 65535
  %gen84 = mul i32 %_83, 65535
  %_85 = sub i32 %808, 65535
  %gen86 = mul i32 %_85, 65535
  %_87 = shl i32 %808, 65535
  %809 = and i32 %808, 65535
  %810 = icmp eq i32 %809, 34
  br label %originalBB82

originalBB91alteredBB:                            ; preds = %originalBB91, %466
  %811 = load i32, i32* %14, align 4
  %812 = icmp ne i32 %811, 0
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %499
  %813 = load i32, i32* %16, align 4
  %814 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %815 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %814, i32 0, i32 4
  %816 = bitcast %union.varray_data_tag* %815 to [1 x %struct.reg_info_def*]*
  %817 = load i32, i32* %12, align 4
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %816, i64 0, i64 %818
  %820 = load %struct.reg_info_def*, %struct.reg_info_def** %819, align 8
  %821 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %820, i32 0, i32 7
  %822 = load i32, i32* %821, align 4
  %_96 = sub i32 0, %822
  %gen97 = add i32 %_96, %813
  %_98 = sub i32 %822, %813
  %gen99 = mul i32 %_98, %813
  %823 = sub nsw i32 %822, %813
  store i32 %823, i32* %821, align 4
  %824 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %825 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %824, i32 0, i32 4
  %826 = bitcast %union.varray_data_tag* %825 to [1 x %struct.reg_info_def*]*
  %827 = load i32, i32* %12, align 4
  %828 = sext i32 %827 to i64
  %829 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %826, i64 0, i64 %828
  %830 = load %struct.reg_info_def*, %struct.reg_info_def** %829, align 8
  %831 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %830, i32 0, i32 7
  %832 = load i32, i32* %831, align 4
  %833 = icmp slt i32 %832, 2
  br label %originalBB95

originalBB103alteredBB:                           ; preds = %originalBB103, %546
  br label %originalBB103

originalBB107alteredBB:                           ; preds = %originalBB107, %663
  br label %originalBB107

originalBB111alteredBB:                           ; preds = %originalBB111, %680
  %834 = load i32, i32* %14, align 4
  %835 = icmp ne i32 %834, 0
  %_112 = shl i1 %835, true
  %_113 = sub i1 false, %835
  %gen114 = add i1 %_113, true
  %_115 = sub i1 false, %835
  %gen116 = add i1 %_115, true
  %_117 = sub i1 %835, true
  %gen118 = mul i1 %_117, true
  %_119 = sub i1 false, %835
  %gen120 = add i1 %_119, true
  %836 = xor i1 %835, true
  %837 = zext i1 %836 to i32
  store i32 %837, i32* %4, align 4
  br label %originalBB111

originalBB124alteredBB:                           ; preds = %originalBB124, %701
  %838 = load i32, i32* %12, align 4
  %839 = icmp slt i32 %838, 53
  br label %originalBB124
}

; Function Attrs: noinline nounwind uwtable
define internal void @optimize_reg_copy_2(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  %9 = alloca %struct.rtx_def*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.rtx_def* %0, %struct.rtx_def** %4, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %5, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %6, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %13, i64 0, i64 0
  %15 = bitcast %union.rtunion_def* %14 to i32*
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %10, align 4
  %17 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %18, i64 0, i64 0
  %20 = bitcast %union.rtunion_def* %19 to i32*
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %11, align 4
  %22 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %23, i64 0, i64 2
  %25 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**
  %26 = load %struct.rtx_def*, %struct.rtx_def** %25, align 8
  store %struct.rtx_def* %26, %struct.rtx_def** %7, align 8
  br label %27

; <label>:27:                                     ; preds = %420, %3
  %28 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %29 = icmp ne %struct.rtx_def* %28, null
  br i1 %29, label %30, label %426

; <label>:30:                                     ; preds = %27
  %31 = load i32, i32* @x.9
  %32 = load i32, i32* @y.10
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %30
  %39 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %40 = call i32 @perhaps_ends_bb_p(%struct.rtx_def* %39)
  %41 = icmp ne i32 %40, 0
  %42 = load i32, i32* @x.9
  %43 = load i32, i32* @y.10
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %41, label %50, label %51

; <label>:50:                                     ; preds = %originalBBpart2
  br label %426

; <label>:51:                                     ; preds = %originalBBpart2
  %52 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %53 = bitcast %struct.rtx_def* %52 to i32*
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, 65535
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %59, 105
  br i1 %60, label %62, label %61

; <label>:61:                                     ; preds = %51
  br label %420

; <label>:62:                                     ; preds = %51
  br label %63

; <label>:63:                                     ; preds = %62
  %64 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %65 = bitcast %struct.rtx_def* %64 to i32*
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 65535
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = sext i8 %70 to i32
  %72 = icmp eq i32 %71, 105
  br i1 %72, label %73, label %115

; <label>:73:                                     ; preds = %63
  %74 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %75, i64 0, i64 3
  %77 = bitcast %union.rtunion_def* %76 to %struct.rtx_def**
  %78 = load %struct.rtx_def*, %struct.rtx_def** %77, align 8
  %79 = bitcast %struct.rtx_def* %78 to i32*
  %80 = load i32, i32* %79, align 8
  %81 = and i32 %80, 65535
  %82 = icmp eq i32 %81, 47
  br i1 %82, label %83, label %89

; <label>:83:                                     ; preds = %73
  %84 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %85, i64 0, i64 3
  %87 = bitcast %union.rtunion_def* %86 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %87, align 8
  br label %97

; <label>:89:                                     ; preds = %73
  %90 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %91 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %92, i64 0, i64 3
  %94 = bitcast %union.rtunion_def* %93 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %94, align 8
  %96 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %90, %struct.rtx_def* %95)
  br label %97

; <label>:97:                                     ; preds = %89, %83
  %98 = phi %struct.rtx_def* [ %88, %83 ], [ %96, %89 ]
  %99 = load i32, i32* @x.9
  %100 = load i32, i32* @y.10
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %97
  %107 = load i32, i32* @x.9
  %108 = load i32, i32* @y.10
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %132

; <label>:115:                                    ; preds = %63
  %116 = load i32, i32* @x.9
  %117 = load i32, i32* @y.10
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %115
  %124 = load i32, i32* @x.9
  %125 = load i32, i32* @y.10
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %132

; <label>:132:                                    ; preds = %originalBBpart28, %originalBBpart24
  %133 = phi %struct.rtx_def* [ %98, %originalBBpart24 ], [ null, %originalBBpart28 ]
  %134 = load i32, i32* @x.9
  %135 = load i32, i32* @y.10
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %132
  store %struct.rtx_def* %133, %struct.rtx_def** %9, align 8
  %142 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %143 = icmp ne %struct.rtx_def* %142, null
  %144 = load i32, i32* @x.9
  %145 = load i32, i32* @y.10
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %143, label %152, label %375

; <label>:152:                                    ; preds = %originalBBpart212
  %153 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1
  %155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %154, i64 0, i64 1
  %156 = bitcast %union.rtunion_def* %155 to %struct.rtx_def**
  %157 = load %struct.rtx_def*, %struct.rtx_def** %156, align 8
  %158 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %159 = icmp eq %struct.rtx_def* %157, %158
  br i1 %159, label %160, label %375

; <label>:160:                                    ; preds = %152
  %161 = load i32, i32* @x.9
  %162 = load i32, i32* @y.10
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %160
  %169 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1
  %171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %170, i64 0, i64 0
  %172 = bitcast %union.rtunion_def* %171 to %struct.rtx_def**
  %173 = load %struct.rtx_def*, %struct.rtx_def** %172, align 8
  %174 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %175 = icmp eq %struct.rtx_def* %173, %174
  %176 = load i32, i32* @x.9
  %177 = load i32, i32* @y.10
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %175, label %184, label %375

; <label>:184:                                    ; preds = %originalBBpart216
  %185 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %186 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %187 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %185, i32 1, %struct.rtx_def* %186)
  %188 = icmp ne %struct.rtx_def* %187, null
  br i1 %188, label %189, label %375

; <label>:189:                                    ; preds = %184
  %190 = load i32, i32* @x.9
  %191 = load i32, i32* @y.10
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %189
  %198 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  store %struct.rtx_def* %198, %struct.rtx_def** %8, align 8
  %199 = load i32, i32* @x.9
  %200 = load i32, i32* @y.10
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %207

; <label>:207:                                    ; preds = %originalBBpart242, %originalBBpart220
  %208 = load i32, i32* @x.9
  %209 = load i32, i32* @y.10
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %207
  %216 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %217 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %217, i32 0, i32 1
  %219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %218, i64 0, i64 2
  %220 = bitcast %union.rtunion_def* %219 to %struct.rtx_def**
  %221 = load %struct.rtx_def*, %struct.rtx_def** %220, align 8
  %222 = icmp ne %struct.rtx_def* %216, %221
  %223 = load i32, i32* @x.9
  %224 = load i32, i32* @y.10
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %222, label %231, label %346

; <label>:231:                                    ; preds = %originalBBpart224
  %232 = load i32, i32* @x.9
  %233 = load i32, i32* @y.10
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %231
  %240 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %241 = bitcast %struct.rtx_def* %240 to i32*
  %242 = load i32, i32* %241, align 8
  %243 = and i32 %242, 65535
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %244
  %246 = load i8, i8* %245, align 1
  %247 = sext i8 %246 to i32
  %248 = icmp eq i32 %247, 105
  %249 = load i32, i32* @x.9
  %250 = load i32, i32* @y.10
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %248, label %257, label %323

; <label>:257:                                    ; preds = %originalBBpart228
  %258 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %259 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i32 0, i32 1
  %261 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %260, i64 0, i64 3
  %262 = bitcast %union.rtunion_def* %261 to %struct.rtx_def**
  %263 = load %struct.rtx_def*, %struct.rtx_def** %262, align 8
  %264 = call i32 @reg_mentioned_p(%struct.rtx_def* %258, %struct.rtx_def* %263)
  %265 = icmp ne i32 %264, 0
  br i1 %265, label %266, label %279

; <label>:266:                                    ; preds = %257
  %267 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %267, i32 0, i32 1
  %269 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %268, i64 0, i64 3
  %270 = bitcast %union.rtunion_def* %269 to %struct.rtx_def**
  %271 = load %struct.rtx_def*, %struct.rtx_def** %270, align 8
  %272 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %273 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %274 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %271, %struct.rtx_def* %272, %struct.rtx_def* %273)
  %275 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %275, i32 0, i32 1
  %277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %276, i64 0, i64 3
  %278 = bitcast %union.rtunion_def* %277 to %struct.rtx_def**
  store %struct.rtx_def* %274, %struct.rtx_def** %278, align 8
  br label %279

; <label>:279:                                    ; preds = %266, %257
  %280 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %281 = bitcast %struct.rtx_def* %280 to i32*
  %282 = load i32, i32* %281, align 8
  %283 = and i32 %282, 65535
  %284 = icmp eq i32 %283, 34
  br i1 %284, label %285, label %322

; <label>:285:                                    ; preds = %279
  %286 = load i32, i32* @x.9
  %287 = load i32, i32* @y.10
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %285
  %294 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %295 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %294, i32 0, i32 4
  %296 = bitcast %union.varray_data_tag* %295 to [1 x %struct.reg_info_def*]*
  %297 = load i32, i32* %11, align 4
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %296, i64 0, i64 %298
  %300 = load %struct.reg_info_def*, %struct.reg_info_def** %299, align 8
  %301 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %300, i32 0, i32 8
  %302 = load i32, i32* %301, align 4
  %303 = add nsw i32 %302, -1
  store i32 %303, i32* %301, align 4
  %304 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %305 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %304, i32 0, i32 4
  %306 = bitcast %union.varray_data_tag* %305 to [1 x %struct.reg_info_def*]*
  %307 = load i32, i32* %10, align 4
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %306, i64 0, i64 %308
  %310 = load %struct.reg_info_def*, %struct.reg_info_def** %309, align 8
  %311 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %310, i32 0, i32 8
  %312 = load i32, i32* %311, align 4
  %313 = add nsw i32 %312, 1
  store i32 %313, i32* %311, align 4
  %314 = load i32, i32* @x.9
  %315 = load i32, i32* @y.10
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart238, label %originalBB30alteredBB

originalBBpart238:                                ; preds = %originalBB30
  br label %322

; <label>:322:                                    ; preds = %originalBBpart238, %279
  br label %323

; <label>:323:                                    ; preds = %322, %originalBBpart228
  br label %324

; <label>:324:                                    ; preds = %323
  %325 = load i32, i32* @x.9
  %326 = load i32, i32* @y.10
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %originalBB40alteredBB, %324
  %333 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %334 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %333, i32 0, i32 1
  %335 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %334, i64 0, i64 2
  %336 = bitcast %union.rtunion_def* %335 to %struct.rtx_def**
  %337 = load %struct.rtx_def*, %struct.rtx_def** %336, align 8
  store %struct.rtx_def* %337, %struct.rtx_def** %8, align 8
  %338 = load i32, i32* @x.9
  %339 = load i32, i32* @y.10
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBBpart242, label %originalBB40alteredBB

originalBBpart242:                                ; preds = %originalBB40
  br label %207

; <label>:346:                                    ; preds = %originalBBpart224
  %347 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %348 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %349 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %350 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %348, i32 1, %struct.rtx_def* %349)
  call void @remove_note(%struct.rtx_def* %347, %struct.rtx_def* %350)
  %351 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %352 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %351, i32 0, i32 4
  %353 = bitcast %union.varray_data_tag* %352 to [1 x %struct.reg_info_def*]*
  %354 = load i32, i32* %11, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %353, i64 0, i64 %355
  %357 = load %struct.reg_info_def*, %struct.reg_info_def** %356, align 8
  %358 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %357, i32 0, i32 6
  %359 = load i32, i32* %358, align 4
  %360 = add nsw i32 %359, -1
  store i32 %360, i32* %358, align 4
  %361 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %362 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %363 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %364 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %362, i32 1, %struct.rtx_def* %363)
  call void @remove_note(%struct.rtx_def* %361, %struct.rtx_def* %364)
  %365 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %366 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %365, i32 0, i32 4
  %367 = bitcast %union.varray_data_tag* %366 to [1 x %struct.reg_info_def*]*
  %368 = load i32, i32* %10, align 4
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %367, i64 0, i64 %369
  %371 = load %struct.reg_info_def*, %struct.reg_info_def** %370, align 8
  %372 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %371, i32 0, i32 6
  %373 = load i32, i32* %372, align 4
  %374 = add nsw i32 %373, -1
  store i32 %374, i32* %372, align 4
  br label %426

; <label>:375:                                    ; preds = %184, %originalBBpart216, %152, %originalBBpart212
  %376 = load i32, i32* @x.9
  %377 = load i32, i32* @y.10
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %originalBB44alteredBB, %375
  %384 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %385 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %386 = call i32 @reg_set_p(%struct.rtx_def* %384, %struct.rtx_def* %385)
  %387 = icmp ne i32 %386, 0
  %388 = load i32, i32* @x.9
  %389 = load i32, i32* @y.10
  %390 = sub i32 %388, 1
  %391 = mul i32 %388, %390
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %393, %394
  br i1 %395, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  br i1 %387, label %418, label %396

; <label>:396:                                    ; preds = %originalBBpart246
  %397 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %398 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %399 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %397, i32 1, %struct.rtx_def* %398)
  %400 = icmp ne %struct.rtx_def* %399, null
  br i1 %400, label %418, label %401

; <label>:401:                                    ; preds = %396
  %402 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %403 = bitcast %struct.rtx_def* %402 to i32*
  %404 = load i32, i32* %403, align 8
  %405 = and i32 %404, 65535
  %406 = icmp eq i32 %405, 34
  br i1 %406, label %407, label %419

; <label>:407:                                    ; preds = %401
  %408 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %409 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %408, i32 0, i32 4
  %410 = bitcast %union.varray_data_tag* %409 to [1 x %struct.reg_info_def*]*
  %411 = load i32, i32* %10, align 4
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %410, i64 0, i64 %412
  %414 = load %struct.reg_info_def*, %struct.reg_info_def** %413, align 8
  %415 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %414, i32 0, i32 8
  %416 = load i32, i32* %415, align 4
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %419

; <label>:418:                                    ; preds = %407, %396, %originalBBpart246
  br label %426

; <label>:419:                                    ; preds = %407, %401
  br label %420

; <label>:420:                                    ; preds = %419, %61
  %421 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %422 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %421, i32 0, i32 1
  %423 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %422, i64 0, i64 2
  %424 = bitcast %union.rtunion_def* %423 to %struct.rtx_def**
  %425 = load %struct.rtx_def*, %struct.rtx_def** %424, align 8
  store %struct.rtx_def* %425, %struct.rtx_def** %7, align 8
  br label %27

; <label>:426:                                    ; preds = %418, %346, %50, %27
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %30
  %427 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %428 = call i32 @perhaps_ends_bb_p(%struct.rtx_def* %427)
  %429 = icmp ne i32 %428, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %97
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %115
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %132
  store %struct.rtx_def* %133, %struct.rtx_def** %9, align 8
  %430 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %431 = icmp ne %struct.rtx_def* %430, null
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %160
  %432 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %433 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %432, i32 0, i32 1
  %434 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %433, i64 0, i64 0
  %435 = bitcast %union.rtunion_def* %434 to %struct.rtx_def**
  %436 = load %struct.rtx_def*, %struct.rtx_def** %435, align 8
  %437 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %438 = icmp eq %struct.rtx_def* %436, %437
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %189
  %439 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  store %struct.rtx_def* %439, %struct.rtx_def** %8, align 8
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %207
  %440 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %441 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %442 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %441, i32 0, i32 1
  %443 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %442, i64 0, i64 2
  %444 = bitcast %union.rtunion_def* %443 to %struct.rtx_def**
  %445 = load %struct.rtx_def*, %struct.rtx_def** %444, align 8
  %446 = icmp ne %struct.rtx_def* %440, %445
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %231
  %447 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %448 = bitcast %struct.rtx_def* %447 to i32*
  %449 = load i32, i32* %448, align 8
  %_ = sub i32 %449, 65535
  %gen = mul i32 %_, 65535
  %450 = and i32 %449, 65535
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %451
  %453 = load i8, i8* %452, align 1
  %454 = sext i8 %453 to i32
  %455 = icmp eq i32 %454, 105
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %285
  %456 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %457 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %456, i32 0, i32 4
  %458 = bitcast %union.varray_data_tag* %457 to [1 x %struct.reg_info_def*]*
  %459 = load i32, i32* %11, align 4
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %458, i64 0, i64 %460
  %462 = load %struct.reg_info_def*, %struct.reg_info_def** %461, align 8
  %463 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %462, i32 0, i32 8
  %464 = load i32, i32* %463, align 4
  %_31 = sub i32 0, %464
  %gen32 = add i32 %_31, -1
  %465 = add nsw i32 %464, -1
  store i32 %465, i32* %463, align 4
  %466 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %467 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %466, i32 0, i32 4
  %468 = bitcast %union.varray_data_tag* %467 to [1 x %struct.reg_info_def*]*
  %469 = load i32, i32* %10, align 4
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %468, i64 0, i64 %470
  %472 = load %struct.reg_info_def*, %struct.reg_info_def** %471, align 8
  %473 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %472, i32 0, i32 8
  %474 = load i32, i32* %473, align 4
  %_33 = sub i32 %474, 1
  %gen34 = mul i32 %_33, 1
  %_35 = sub i32 0, %474
  %gen36 = add i32 %_35, 1
  %475 = add nsw i32 %474, 1
  store i32 %475, i32* %473, align 4
  br label %originalBB30

originalBB40alteredBB:                            ; preds = %originalBB40, %324
  %476 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %477 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %476, i32 0, i32 1
  %478 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %477, i64 0, i64 2
  %479 = bitcast %union.rtunion_def* %478 to %struct.rtx_def**
  %480 = load %struct.rtx_def*, %struct.rtx_def** %479, align 8
  store %struct.rtx_def* %480, %struct.rtx_def** %8, align 8
  br label %originalBB40

originalBB44alteredBB:                            ; preds = %originalBB44, %375
  %481 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %482 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %483 = call i32 @reg_set_p(%struct.rtx_def* %481, %struct.rtx_def* %482)
  %484 = icmp ne i32 %483, 0
  br label %originalBB44
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @find_matches(%struct.rtx_def*, %struct.match*) #0 {
  %3 = load i32, i32* @x.11
  %4 = load i32, i32* @y.12
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %struct.match*, align 8
  %14 = alloca [30 x i32], align 16
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i32, align 4
  store %struct.rtx_def* %0, %struct.rtx_def** %12, align 8
  store %struct.match* %1, %struct.match** %13, align 8
  store i32 0, i32* %16, align 4
  %23 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  call void @extract_insn(%struct.rtx_def* %23)
  %24 = call i32 @constrain_operands(i32 0)
  %25 = icmp ne i32 %24, 0
  %26 = load i32, i32* @x.11
  %27 = load i32, i32* @y.12
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %25, label %51, label %34

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i32, i32* @x.11
  %36 = load i32, i32* @y.12
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %34
  store i32 0, i32* %11, align 4
  %43 = load i32, i32* @x.11
  %44 = load i32, i32* @y.12
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %3494

; <label>:51:                                     ; preds = %originalBBpart2
  %52 = load i32, i32* @x.11
  %53 = load i32, i32* @y.12
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %51
  %60 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 4
  %61 = sext i8 %60 to i32
  store i32 %61, i32* %15, align 4
  %62 = load i32, i32* @x.11
  %63 = load i32, i32* @y.12
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %70

; <label>:70:                                     ; preds = %originalBBpart217, %originalBBpart28
  %71 = load i32, i32* @x.11
  %72 = load i32, i32* @y.12
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %70
  %79 = load i32, i32* %15, align 4
  %80 = add nsw i32 %79, -1
  store i32 %80, i32* %15, align 4
  %81 = icmp sge i32 %80, 0
  %82 = load i32, i32* @x.11
  %83 = load i32, i32* @y.12
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart213, label %originalBB10alteredBB

originalBBpart213:                                ; preds = %originalBB10
  br i1 %81, label %90, label %117

; <label>:90:                                     ; preds = %originalBBpart213
  %91 = load i32, i32* @x.11
  %92 = load i32, i32* @y.12
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %originalBB15alteredBB, %90
  %99 = load %struct.match*, %struct.match** %13, align 8
  %100 = getelementptr inbounds %struct.match, %struct.match* %99, i32 0, i32 2
  %101 = load i32, i32* %15, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [30 x i32], [30 x i32]* %100, i64 0, i64 %102
  store i32 -1, i32* %103, align 4
  %104 = load %struct.match*, %struct.match** %13, align 8
  %105 = getelementptr inbounds %struct.match, %struct.match* %104, i32 0, i32 0
  %106 = load i32, i32* %15, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [30 x i32], [30 x i32]* %105, i64 0, i64 %107
  store i32 -1, i32* %108, align 4
  %109 = load i32, i32* @x.11
  %110 = load i32, i32* @y.12
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br label %70

; <label>:117:                                    ; preds = %originalBBpart213
  store i32 0, i32* %15, align 4
  br label %118

; <label>:118:                                    ; preds = %originalBBpart2706, %117
  %119 = load i32, i32* %15, align 4
  %120 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 4
  %121 = sext i8 %120 to i32
  %122 = icmp slt i32 %119, %121
  br i1 %122, label %123, label %3492

; <label>:123:                                    ; preds = %118
  %124 = load i32, i32* @x.11
  %125 = load i32, i32* @y.12
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %originalBB19alteredBB, %123
  store i32 0, i32* %19, align 4
  %132 = load i32, i32* %15, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [30 x i8*], [30 x i8*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2), i64 0, i64 %133
  %135 = load i8*, i8** %134, align 8
  store i8* %135, i8** %17, align 8
  %136 = load i32, i32* %15, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [30 x i32], [30 x i32]* %14, i64 0, i64 %137
  store i32 0, i32* %138, align 4
  %139 = load %struct.match*, %struct.match** %13, align 8
  %140 = getelementptr inbounds %struct.match, %struct.match* %139, i32 0, i32 1
  %141 = load i32, i32* %15, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [30 x i32], [30 x i32]* %140, i64 0, i64 %142
  store i32 0, i32* %143, align 4
  %144 = load %struct.match*, %struct.match** %13, align 8
  %145 = getelementptr inbounds %struct.match, %struct.match* %144, i32 0, i32 3
  %146 = load i32, i32* %15, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [30 x i32], [30 x i32]* %145, i64 0, i64 %147
  store i32 0, i32* %148, align 4
  %149 = load i8*, i8** %17, align 8
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp eq i32 %151, 61
  %153 = load i32, i32* @x.11
  %154 = load i32, i32* @y.12
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br i1 %152, label %161, label %167

; <label>:161:                                    ; preds = %originalBBpart221
  %162 = load %struct.match*, %struct.match** %13, align 8
  %163 = getelementptr inbounds %struct.match, %struct.match* %162, i32 0, i32 1
  %164 = load i32, i32* %15, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [30 x i32], [30 x i32]* %163, i64 0, i64 %165
  store i32 1, i32* %166, align 4
  br label %195

; <label>:167:                                    ; preds = %originalBBpart221
  %168 = load i8*, i8** %17, align 8
  %169 = load i8, i8* %168, align 1
  %170 = sext i8 %169 to i32
  %171 = icmp eq i32 %170, 43
  br i1 %171, label %172, label %178

; <label>:172:                                    ; preds = %167
  %173 = load %struct.match*, %struct.match** %13, align 8
  %174 = getelementptr inbounds %struct.match, %struct.match* %173, i32 0, i32 1
  %175 = load i32, i32* %15, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [30 x i32], [30 x i32]* %174, i64 0, i64 %176
  store i32 2, i32* %177, align 4
  br label %178

; <label>:178:                                    ; preds = %172, %167
  %179 = load i32, i32* @x.11
  %180 = load i32, i32* @y.12
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %originalBB23alteredBB, %178
  %187 = load i32, i32* @x.11
  %188 = load i32, i32* @y.12
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %195

; <label>:195:                                    ; preds = %originalBBpart225, %161
  br label %196

; <label>:196:                                    ; preds = %248, %195
  %197 = load i8*, i8** %17, align 8
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %201, label %205

; <label>:201:                                    ; preds = %196
  %202 = load i32, i32* %19, align 4
  %203 = load i32, i32* @which_alternative, align 4
  %204 = icmp slt i32 %202, %203
  br label %205

; <label>:205:                                    ; preds = %201, %196
  %206 = phi i1 [ false, %196 ], [ %204, %201 ]
  br i1 %206, label %207, label %251

; <label>:207:                                    ; preds = %205
  %208 = load i32, i32* @x.11
  %209 = load i32, i32* @y.12
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %207
  %216 = load i8*, i8** %17, align 8
  %217 = load i8, i8* %216, align 1
  %218 = sext i8 %217 to i32
  %219 = icmp eq i32 %218, 44
  %220 = load i32, i32* @x.11
  %221 = load i32, i32* @y.12
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br i1 %219, label %228, label %231

; <label>:228:                                    ; preds = %originalBBpart229
  %229 = load i32, i32* %19, align 4
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %19, align 4
  br label %231

; <label>:231:                                    ; preds = %228, %originalBBpart229
  %232 = load i32, i32* @x.11
  %233 = load i32, i32* @y.12
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %231
  %240 = load i32, i32* @x.11
  %241 = load i32, i32* @y.12
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %248

; <label>:248:                                    ; preds = %originalBBpart233
  %249 = load i8*, i8** %17, align 8
  %250 = getelementptr inbounds i8, i8* %249, i32 1
  store i8* %250, i8** %17, align 8
  br label %196

; <label>:251:                                    ; preds = %205
  br label %252

; <label>:252:                                    ; preds = %3455, %251
  %253 = load i8*, i8** %17, align 8
  %254 = getelementptr inbounds i8, i8* %253, i32 1
  store i8* %254, i8** %17, align 8
  %255 = load i8, i8* %253, align 1
  store i8 %255, i8* %18, align 1
  %256 = sext i8 %255 to i32
  %257 = icmp ne i32 %256, 0
  br i1 %257, label %258, label %262

; <label>:258:                                    ; preds = %252
  %259 = load i8, i8* %18, align 1
  %260 = sext i8 %259 to i32
  %261 = icmp ne i32 %260, 44
  br label %262

; <label>:262:                                    ; preds = %258, %252
  %263 = phi i1 [ false, %252 ], [ %261, %258 ]
  %264 = load i32, i32* @x.11
  %265 = load i32, i32* @y.12
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %262
  %272 = load i32, i32* @x.11
  %273 = load i32, i32* @y.12
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br i1 %263, label %280, label %3456

; <label>:280:                                    ; preds = %originalBBpart237
  %281 = load i8, i8* %18, align 1
  %282 = sext i8 %281 to i32
  switch i32 %282, label %3455 [
    i32 61, label %283
    i32 43, label %300
    i32 38, label %317
    i32 37, label %323
    i32 48, label %338
    i32 49, label %338
    i32 50, label %338
    i32 51, label %338
    i32 52, label %338
    i32 53, label %338
    i32 54, label %338
    i32 55, label %338
    i32 56, label %338
    i32 57, label %338
    i32 97, label %414
    i32 98, label %414
    i32 99, label %414
    i32 100, label %414
    i32 101, label %414
    i32 102, label %414
    i32 104, label %414
    i32 106, label %414
    i32 107, label %414
    i32 108, label %414
    i32 112, label %414
    i32 113, label %414
    i32 116, label %414
    i32 117, label %414
    i32 118, label %414
    i32 119, label %414
    i32 120, label %414
    i32 121, label %414
    i32 122, label %414
    i32 65, label %414
    i32 66, label %414
    i32 67, label %414
    i32 68, label %414
    i32 87, label %414
    i32 89, label %414
    i32 90, label %414
  ]

; <label>:283:                                    ; preds = %280
  %284 = load i32, i32* @x.11
  %285 = load i32, i32* @y.12
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %283
  %292 = load i32, i32* @x.11
  %293 = load i32, i32* @y.12
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br label %3455

; <label>:300:                                    ; preds = %280
  %301 = load i32, i32* @x.11
  %302 = load i32, i32* @y.12
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %originalBB43alteredBB, %300
  %309 = load i32, i32* @x.11
  %310 = load i32, i32* @y.12
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %3455

; <label>:317:                                    ; preds = %280
  %318 = load %struct.match*, %struct.match** %13, align 8
  %319 = getelementptr inbounds %struct.match, %struct.match* %318, i32 0, i32 3
  %320 = load i32, i32* %15, align 4
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds [30 x i32], [30 x i32]* %319, i64 0, i64 %321
  store i32 1, i32* %322, align 4
  br label %3455

; <label>:323:                                    ; preds = %280
  %324 = load i32, i32* %15, align 4
  %325 = add nsw i32 %324, 1
  %326 = load %struct.match*, %struct.match** %13, align 8
  %327 = getelementptr inbounds %struct.match, %struct.match* %326, i32 0, i32 2
  %328 = load i32, i32* %15, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds [30 x i32], [30 x i32]* %327, i64 0, i64 %329
  store i32 %325, i32* %330, align 4
  %331 = load i32, i32* %15, align 4
  %332 = load %struct.match*, %struct.match** %13, align 8
  %333 = getelementptr inbounds %struct.match, %struct.match* %332, i32 0, i32 2
  %334 = load i32, i32* %15, align 4
  %335 = add nsw i32 %334, 1
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds [30 x i32], [30 x i32]* %333, i64 0, i64 %336
  store i32 %331, i32* %337, align 4
  br label %3455

; <label>:338:                                    ; preds = %280, %280, %280, %280, %280, %280, %280, %280, %280, %280
  %339 = load i8*, i8** %17, align 8
  %340 = getelementptr inbounds i8, i8* %339, i64 -1
  %341 = call i64 @strtoul(i8* %340, i8** %20, i32 10) #3
  store i64 %341, i64* %21, align 8
  %342 = load i64, i64* %21, align 8
  %343 = trunc i64 %342 to i32
  store i32 %343, i32* %22, align 4
  %344 = load i8*, i8** %20, align 8
  store i8* %344, i8** %17, align 8
  %345 = load i32, i32* %22, align 4
  %346 = load i32, i32* %15, align 4
  %347 = icmp slt i32 %345, %346
  br i1 %347, label %348, label %387

; <label>:348:                                    ; preds = %338
  %349 = load i32, i32* @x.11
  %350 = load i32, i32* @y.12
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %348
  %357 = load i32, i32* %22, align 4
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds [30 x i32], [30 x i32]* %14, i64 0, i64 %358
  %360 = load i32, i32* %359, align 4
  %361 = icmp ne i32 %360, 0
  %362 = load i32, i32* @x.11
  %363 = load i32, i32* @y.12
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br i1 %361, label %370, label %387

; <label>:370:                                    ; preds = %originalBBpart249
  %371 = load i32, i32* @x.11
  %372 = load i32, i32* @y.12
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %370
  %379 = load i32, i32* @x.11
  %380 = load i32, i32* @y.12
  %381 = sub i32 %379, 1
  %382 = mul i32 %379, %381
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %384, %385
  br i1 %386, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %3455

; <label>:387:                                    ; preds = %originalBBpart249, %338
  %388 = load i32, i32* %22, align 4
  %389 = load %struct.match*, %struct.match** %13, align 8
  %390 = getelementptr inbounds %struct.match, %struct.match* %389, i32 0, i32 0
  %391 = load i32, i32* %15, align 4
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds [30 x i32], [30 x i32]* %390, i64 0, i64 %392
  store i32 %388, i32* %393, align 4
  store i32 1, i32* %16, align 4
  %394 = load %struct.match*, %struct.match** %13, align 8
  %395 = getelementptr inbounds %struct.match, %struct.match* %394, i32 0, i32 2
  %396 = load i32, i32* %15, align 4
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds [30 x i32], [30 x i32]* %395, i64 0, i64 %397
  %399 = load i32, i32* %398, align 4
  %400 = icmp sge i32 %399, 0
  br i1 %400, label %401, label %413

; <label>:401:                                    ; preds = %387
  %402 = load i32, i32* %22, align 4
  %403 = load %struct.match*, %struct.match** %13, align 8
  %404 = getelementptr inbounds %struct.match, %struct.match* %403, i32 0, i32 0
  %405 = load %struct.match*, %struct.match** %13, align 8
  %406 = getelementptr inbounds %struct.match, %struct.match* %405, i32 0, i32 2
  %407 = load i32, i32* %15, align 4
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds [30 x i32], [30 x i32]* %406, i64 0, i64 %408
  %410 = load i32, i32* %409, align 4
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds [30 x i32], [30 x i32]* %404, i64 0, i64 %411
  store i32 %402, i32* %412, align 4
  br label %413

; <label>:413:                                    ; preds = %401, %387
  br label %3455

; <label>:414:                                    ; preds = %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280, %280
  %415 = load i8, i8* %18, align 1
  %416 = zext i8 %415 to i32
  %417 = icmp eq i32 %416, 114
  br i1 %417, label %418, label %419

; <label>:418:                                    ; preds = %414
  br label %847

; <label>:419:                                    ; preds = %414
  %420 = load i8, i8* %18, align 1
  %421 = zext i8 %420 to i32
  %422 = icmp eq i32 %421, 82
  br i1 %422, label %423, label %424

; <label>:423:                                    ; preds = %419
  br label %845

; <label>:424:                                    ; preds = %419
  %425 = load i8, i8* %18, align 1
  %426 = zext i8 %425 to i32
  %427 = icmp eq i32 %426, 113
  br i1 %427, label %428, label %433

; <label>:428:                                    ; preds = %424
  %429 = load i32, i32* @target_flags, align 4
  %430 = and i32 %429, 33554432
  %431 = icmp ne i32 %430, 0
  %432 = select i1 %431, i32 12, i32 8
  br label %843

; <label>:433:                                    ; preds = %424
  %434 = load i32, i32* @x.11
  %435 = load i32, i32* @y.12
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %433
  %442 = load i8, i8* %18, align 1
  %443 = zext i8 %442 to i32
  %444 = icmp eq i32 %443, 81
  %445 = load i32, i32* @x.11
  %446 = load i32, i32* @y.12
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br i1 %444, label %453, label %454

; <label>:453:                                    ; preds = %originalBBpart257
  br label %841

; <label>:454:                                    ; preds = %originalBBpart257
  %455 = load i32, i32* @x.11
  %456 = load i32, i32* @y.12
  %457 = sub i32 %455, 1
  %458 = mul i32 %455, %457
  %459 = urem i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %456, 10
  %462 = or i1 %460, %461
  br i1 %462, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %454
  %463 = load i8, i8* %18, align 1
  %464 = zext i8 %463 to i32
  %465 = icmp eq i32 %464, 102
  %466 = load i32, i32* @x.11
  %467 = load i32, i32* @y.12
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br i1 %465, label %474, label %485

; <label>:474:                                    ; preds = %originalBBpart261
  %475 = load i32, i32* @target_flags, align 4
  %476 = and i32 %475, 1
  %477 = icmp ne i32 %476, 0
  br i1 %477, label %482, label %478

; <label>:478:                                    ; preds = %474
  %479 = load i32, i32* @target_flags, align 4
  %480 = and i32 %479, 32
  %481 = icmp ne i32 %480, 0
  br label %482

; <label>:482:                                    ; preds = %478, %474
  %483 = phi i1 [ true, %474 ], [ %481, %478 ]
  %484 = select i1 %483, i32 15, i32 0
  br label %839

; <label>:485:                                    ; preds = %originalBBpart261
  %486 = load i8, i8* %18, align 1
  %487 = zext i8 %486 to i32
  %488 = icmp eq i32 %487, 116
  br i1 %488, label %489, label %532

; <label>:489:                                    ; preds = %485
  %490 = load i32, i32* @x.11
  %491 = load i32, i32* @y.12
  %492 = sub i32 %490, 1
  %493 = mul i32 %490, %492
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %495, %496
  br i1 %497, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %originalBB63alteredBB, %489
  %498 = load i32, i32* @target_flags, align 4
  %499 = and i32 %498, 1
  %500 = icmp ne i32 %499, 0
  %501 = load i32, i32* @x.11
  %502 = load i32, i32* @y.12
  %503 = sub i32 %501, 1
  %504 = mul i32 %501, %503
  %505 = urem i32 %504, 2
  %506 = icmp eq i32 %505, 0
  %507 = icmp slt i32 %502, 10
  %508 = or i1 %506, %507
  br i1 %508, label %originalBBpart269, label %originalBB63alteredBB

originalBBpart269:                                ; preds = %originalBB63
  br i1 %500, label %529, label %509

; <label>:509:                                    ; preds = %originalBBpart269
  %510 = load i32, i32* @x.11
  %511 = load i32, i32* @y.12
  %512 = sub i32 %510, 1
  %513 = mul i32 %510, %512
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %515, %516
  br i1 %517, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %509
  %518 = load i32, i32* @target_flags, align 4
  %519 = and i32 %518, 32
  %520 = icmp ne i32 %519, 0
  %521 = load i32, i32* @x.11
  %522 = load i32, i32* @y.12
  %523 = sub i32 %521, 1
  %524 = mul i32 %521, %523
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %526, %527
  br i1 %528, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %529

; <label>:529:                                    ; preds = %originalBBpart273, %originalBBpart269
  %530 = phi i1 [ true, %originalBBpart269 ], [ %520, %originalBBpart273 ]
  %531 = select i1 %530, i32 13, i32 0
  br label %837

; <label>:532:                                    ; preds = %485
  %533 = load i32, i32* @x.11
  %534 = load i32, i32* @y.12
  %535 = sub i32 %533, 1
  %536 = mul i32 %533, %535
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %534, 10
  %540 = or i1 %538, %539
  br i1 %540, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %originalBB75alteredBB, %532
  %541 = load i8, i8* %18, align 1
  %542 = zext i8 %541 to i32
  %543 = icmp eq i32 %542, 117
  %544 = load i32, i32* @x.11
  %545 = load i32, i32* @y.12
  %546 = sub i32 %544, 1
  %547 = mul i32 %544, %546
  %548 = urem i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = icmp slt i32 %545, 10
  %551 = or i1 %549, %550
  br i1 %551, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br i1 %543, label %552, label %579

; <label>:552:                                    ; preds = %originalBBpart277
  %553 = load i32, i32* @target_flags, align 4
  %554 = and i32 %553, 1
  %555 = icmp ne i32 %554, 0
  br i1 %555, label %560, label %556

; <label>:556:                                    ; preds = %552
  %557 = load i32, i32* @target_flags, align 4
  %558 = and i32 %557, 32
  %559 = icmp ne i32 %558, 0
  br label %560

; <label>:560:                                    ; preds = %556, %552
  %561 = phi i1 [ true, %552 ], [ %559, %556 ]
  %562 = load i32, i32* @x.11
  %563 = load i32, i32* @y.12
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %originalBB79alteredBB, %560
  %570 = select i1 %561, i32 14, i32 0
  %571 = load i32, i32* @x.11
  %572 = load i32, i32* @y.12
  %573 = sub i32 %571, 1
  %574 = mul i32 %571, %573
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %572, 10
  %578 = or i1 %576, %577
  br i1 %578, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br label %819

; <label>:579:                                    ; preds = %originalBBpart277
  %580 = load i32, i32* @x.11
  %581 = load i32, i32* @y.12
  %582 = sub i32 %580, 1
  %583 = mul i32 %580, %582
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %581, 10
  %587 = or i1 %585, %586
  br i1 %587, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %originalBB83alteredBB, %579
  %588 = load i8, i8* %18, align 1
  %589 = zext i8 %588 to i32
  %590 = icmp eq i32 %589, 97
  %591 = load i32, i32* @x.11
  %592 = load i32, i32* @y.12
  %593 = sub i32 %591, 1
  %594 = mul i32 %591, %593
  %595 = urem i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %592, 10
  %598 = or i1 %596, %597
  br i1 %598, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br i1 %590, label %599, label %600

; <label>:599:                                    ; preds = %originalBBpart285
  br label %801

; <label>:600:                                    ; preds = %originalBBpart285
  %601 = load i8, i8* %18, align 1
  %602 = zext i8 %601 to i32
  %603 = icmp eq i32 %602, 98
  br i1 %603, label %604, label %621

; <label>:604:                                    ; preds = %600
  %605 = load i32, i32* @x.11
  %606 = load i32, i32* @y.12
  %607 = sub i32 %605, 1
  %608 = mul i32 %605, %607
  %609 = urem i32 %608, 2
  %610 = icmp eq i32 %609, 0
  %611 = icmp slt i32 %606, 10
  %612 = or i1 %610, %611
  br i1 %612, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %originalBB87alteredBB, %604
  %613 = load i32, i32* @x.11
  %614 = load i32, i32* @y.12
  %615 = sub i32 %613, 1
  %616 = mul i32 %613, %615
  %617 = urem i32 %616, 2
  %618 = icmp eq i32 %617, 0
  %619 = icmp slt i32 %614, 10
  %620 = or i1 %618, %619
  br i1 %620, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br label %799

; <label>:621:                                    ; preds = %600
  %622 = load i8, i8* %18, align 1
  %623 = zext i8 %622 to i32
  %624 = icmp eq i32 %623, 99
  br i1 %624, label %625, label %626

; <label>:625:                                    ; preds = %621
  br label %797

; <label>:626:                                    ; preds = %621
  %627 = load i32, i32* @x.11
  %628 = load i32, i32* @y.12
  %629 = sub i32 %627, 1
  %630 = mul i32 %627, %629
  %631 = urem i32 %630, 2
  %632 = icmp eq i32 %631, 0
  %633 = icmp slt i32 %628, 10
  %634 = or i1 %632, %633
  br i1 %634, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %626
  %635 = load i8, i8* %18, align 1
  %636 = zext i8 %635 to i32
  %637 = icmp eq i32 %636, 100
  %638 = load i32, i32* @x.11
  %639 = load i32, i32* @y.12
  %640 = sub i32 %638, 1
  %641 = mul i32 %638, %640
  %642 = urem i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %639, 10
  %645 = or i1 %643, %644
  br i1 %645, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br i1 %637, label %646, label %663

; <label>:646:                                    ; preds = %originalBBpart293
  %647 = load i32, i32* @x.11
  %648 = load i32, i32* @y.12
  %649 = sub i32 %647, 1
  %650 = mul i32 %647, %649
  %651 = urem i32 %650, 2
  %652 = icmp eq i32 %651, 0
  %653 = icmp slt i32 %648, 10
  %654 = or i1 %652, %653
  br i1 %654, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %originalBB95alteredBB, %646
  %655 = load i32, i32* @x.11
  %656 = load i32, i32* @y.12
  %657 = sub i32 %655, 1
  %658 = mul i32 %655, %657
  %659 = urem i32 %658, 2
  %660 = icmp eq i32 %659, 0
  %661 = icmp slt i32 %656, 10
  %662 = or i1 %660, %661
  br i1 %662, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br label %795

; <label>:663:                                    ; preds = %originalBBpart293
  %664 = load i8, i8* %18, align 1
  %665 = zext i8 %664 to i32
  %666 = icmp eq i32 %665, 120
  br i1 %666, label %667, label %688

; <label>:667:                                    ; preds = %663
  %668 = load i32, i32* @x.11
  %669 = load i32, i32* @y.12
  %670 = sub i32 %668, 1
  %671 = mul i32 %668, %670
  %672 = urem i32 %671, 2
  %673 = icmp eq i32 %672, 0
  %674 = icmp slt i32 %669, 10
  %675 = or i1 %673, %674
  br i1 %675, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %originalBB99alteredBB, %667
  %676 = load i32, i32* @target_flags, align 4
  %677 = and i32 %676, 327680
  %678 = icmp ne i32 %677, 0
  %679 = select i1 %678, i32 16, i32 0
  %680 = load i32, i32* @x.11
  %681 = load i32, i32* @y.12
  %682 = sub i32 %680, 1
  %683 = mul i32 %680, %682
  %684 = urem i32 %683, 2
  %685 = icmp eq i32 %684, 0
  %686 = icmp slt i32 %681, 10
  %687 = or i1 %685, %686
  br i1 %687, label %originalBBpart2113, label %originalBB99alteredBB

originalBBpart2113:                               ; preds = %originalBB99
  br label %793

; <label>:688:                                    ; preds = %663
  %689 = load i32, i32* @x.11
  %690 = load i32, i32* @y.12
  %691 = sub i32 %689, 1
  %692 = mul i32 %689, %691
  %693 = urem i32 %692, 2
  %694 = icmp eq i32 %693, 0
  %695 = icmp slt i32 %690, 10
  %696 = or i1 %694, %695
  br i1 %696, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %originalBB115alteredBB, %688
  %697 = load i8, i8* %18, align 1
  %698 = zext i8 %697 to i32
  %699 = icmp eq i32 %698, 89
  %700 = load i32, i32* @x.11
  %701 = load i32, i32* @y.12
  %702 = sub i32 %700, 1
  %703 = mul i32 %700, %702
  %704 = urem i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = icmp slt i32 %701, 10
  %707 = or i1 %705, %706
  br i1 %707, label %originalBBpart2117, label %originalBB115alteredBB

originalBBpart2117:                               ; preds = %originalBB115
  br i1 %699, label %708, label %729

; <label>:708:                                    ; preds = %originalBBpart2117
  %709 = load i32, i32* @x.11
  %710 = load i32, i32* @y.12
  %711 = sub i32 %709, 1
  %712 = mul i32 %709, %711
  %713 = urem i32 %712, 2
  %714 = icmp eq i32 %713, 0
  %715 = icmp slt i32 %710, 10
  %716 = or i1 %714, %715
  br i1 %716, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %originalBB119alteredBB, %708
  %717 = load i32, i32* @target_flags, align 4
  %718 = and i32 %717, 262144
  %719 = icmp ne i32 %718, 0
  %720 = select i1 %719, i32 16, i32 0
  %721 = load i32, i32* @x.11
  %722 = load i32, i32* @y.12
  %723 = sub i32 %721, 1
  %724 = mul i32 %721, %723
  %725 = urem i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = icmp slt i32 %722, 10
  %728 = or i1 %726, %727
  br i1 %728, label %originalBBpart2133, label %originalBB119alteredBB

originalBBpart2133:                               ; preds = %originalBB119
  br label %791

; <label>:729:                                    ; preds = %originalBBpart2117
  %730 = load i8, i8* %18, align 1
  %731 = zext i8 %730 to i32
  %732 = icmp eq i32 %731, 121
  br i1 %732, label %733, label %738

; <label>:733:                                    ; preds = %729
  %734 = load i32, i32* @target_flags, align 4
  %735 = and i32 %734, 16384
  %736 = icmp ne i32 %735, 0
  %737 = select i1 %736, i32 17, i32 0
  br label %789

; <label>:738:                                    ; preds = %729
  %739 = load i8, i8* %18, align 1
  %740 = zext i8 %739 to i32
  %741 = icmp eq i32 %740, 65
  br i1 %741, label %742, label %743

; <label>:742:                                    ; preds = %738
  br label %787

; <label>:743:                                    ; preds = %738
  %744 = load i32, i32* @x.11
  %745 = load i32, i32* @y.12
  %746 = sub i32 %744, 1
  %747 = mul i32 %744, %746
  %748 = urem i32 %747, 2
  %749 = icmp eq i32 %748, 0
  %750 = icmp slt i32 %745, 10
  %751 = or i1 %749, %750
  br i1 %751, label %originalBB135, label %originalBB135alteredBB

originalBB135:                                    ; preds = %originalBB135alteredBB, %743
  %752 = load i8, i8* %18, align 1
  %753 = zext i8 %752 to i32
  %754 = icmp eq i32 %753, 68
  %755 = load i32, i32* @x.11
  %756 = load i32, i32* @y.12
  %757 = sub i32 %755, 1
  %758 = mul i32 %755, %757
  %759 = urem i32 %758, 2
  %760 = icmp eq i32 %759, 0
  %761 = icmp slt i32 %756, 10
  %762 = or i1 %760, %761
  br i1 %762, label %originalBBpart2137, label %originalBB135alteredBB

originalBBpart2137:                               ; preds = %originalBB135
  br i1 %754, label %763, label %780

; <label>:763:                                    ; preds = %originalBBpart2137
  %764 = load i32, i32* @x.11
  %765 = load i32, i32* @y.12
  %766 = sub i32 %764, 1
  %767 = mul i32 %764, %766
  %768 = urem i32 %767, 2
  %769 = icmp eq i32 %768, 0
  %770 = icmp slt i32 %765, 10
  %771 = or i1 %769, %770
  br i1 %771, label %originalBB139, label %originalBB139alteredBB

originalBB139:                                    ; preds = %originalBB139alteredBB, %763
  %772 = load i32, i32* @x.11
  %773 = load i32, i32* @y.12
  %774 = sub i32 %772, 1
  %775 = mul i32 %772, %774
  %776 = urem i32 %775, 2
  %777 = icmp eq i32 %776, 0
  %778 = icmp slt i32 %773, 10
  %779 = or i1 %777, %778
  br i1 %779, label %originalBBpart2141, label %originalBB139alteredBB

originalBBpart2141:                               ; preds = %originalBB139
  br label %785

; <label>:780:                                    ; preds = %originalBBpart2137
  %781 = load i8, i8* %18, align 1
  %782 = zext i8 %781 to i32
  %783 = icmp eq i32 %782, 83
  %784 = select i1 %783, i32 5, i32 0
  br label %785

; <label>:785:                                    ; preds = %780, %originalBBpart2141
  %786 = phi i32 [ 6, %originalBBpart2141 ], [ %784, %780 ]
  br label %787

; <label>:787:                                    ; preds = %785, %742
  %788 = phi i32 [ 7, %742 ], [ %786, %785 ]
  br label %789

; <label>:789:                                    ; preds = %787, %733
  %790 = phi i32 [ %737, %733 ], [ %788, %787 ]
  br label %791

; <label>:791:                                    ; preds = %789, %originalBBpart2133
  %792 = phi i32 [ %720, %originalBBpart2133 ], [ %790, %789 ]
  br label %793

; <label>:793:                                    ; preds = %791, %originalBBpart2113
  %794 = phi i32 [ %679, %originalBBpart2113 ], [ %792, %791 ]
  br label %795

; <label>:795:                                    ; preds = %793, %originalBBpart297
  %796 = phi i32 [ 2, %originalBBpart297 ], [ %794, %793 ]
  br label %797

; <label>:797:                                    ; preds = %795, %625
  %798 = phi i32 [ 3, %625 ], [ %796, %795 ]
  br label %799

; <label>:799:                                    ; preds = %797, %originalBBpart289
  %800 = phi i32 [ 4, %originalBBpart289 ], [ %798, %797 ]
  br label %801

; <label>:801:                                    ; preds = %799, %599
  %802 = phi i32 [ 1, %599 ], [ %800, %799 ]
  %803 = load i32, i32* @x.11
  %804 = load i32, i32* @y.12
  %805 = sub i32 %803, 1
  %806 = mul i32 %803, %805
  %807 = urem i32 %806, 2
  %808 = icmp eq i32 %807, 0
  %809 = icmp slt i32 %804, 10
  %810 = or i1 %808, %809
  br i1 %810, label %originalBB143, label %originalBB143alteredBB

originalBB143:                                    ; preds = %originalBB143alteredBB, %801
  %811 = load i32, i32* @x.11
  %812 = load i32, i32* @y.12
  %813 = sub i32 %811, 1
  %814 = mul i32 %811, %813
  %815 = urem i32 %814, 2
  %816 = icmp eq i32 %815, 0
  %817 = icmp slt i32 %812, 10
  %818 = or i1 %816, %817
  br i1 %818, label %originalBBpart2145, label %originalBB143alteredBB

originalBBpart2145:                               ; preds = %originalBB143
  br label %819

; <label>:819:                                    ; preds = %originalBBpart2145, %originalBBpart281
  %820 = phi i32 [ %570, %originalBBpart281 ], [ %802, %originalBBpart2145 ]
  %821 = load i32, i32* @x.11
  %822 = load i32, i32* @y.12
  %823 = sub i32 %821, 1
  %824 = mul i32 %821, %823
  %825 = urem i32 %824, 2
  %826 = icmp eq i32 %825, 0
  %827 = icmp slt i32 %822, 10
  %828 = or i1 %826, %827
  br i1 %828, label %originalBB147, label %originalBB147alteredBB

originalBB147:                                    ; preds = %originalBB147alteredBB, %819
  %829 = load i32, i32* @x.11
  %830 = load i32, i32* @y.12
  %831 = sub i32 %829, 1
  %832 = mul i32 %829, %831
  %833 = urem i32 %832, 2
  %834 = icmp eq i32 %833, 0
  %835 = icmp slt i32 %830, 10
  %836 = or i1 %834, %835
  br i1 %836, label %originalBBpart2149, label %originalBB147alteredBB

originalBBpart2149:                               ; preds = %originalBB147
  br label %837

; <label>:837:                                    ; preds = %originalBBpart2149, %529
  %838 = phi i32 [ %531, %529 ], [ %820, %originalBBpart2149 ]
  br label %839

; <label>:839:                                    ; preds = %837, %482
  %840 = phi i32 [ %484, %482 ], [ %838, %837 ]
  br label %841

; <label>:841:                                    ; preds = %839, %453
  %842 = phi i32 [ 8, %453 ], [ %840, %839 ]
  br label %843

; <label>:843:                                    ; preds = %841, %428
  %844 = phi i32 [ %432, %428 ], [ %842, %841 ]
  br label %845

; <label>:845:                                    ; preds = %843, %423
  %846 = phi i32 [ 11, %423 ], [ %844, %843 ]
  br label %847

; <label>:847:                                    ; preds = %845, %418
  %848 = phi i32 [ 12, %418 ], [ %846, %845 ]
  %849 = load i32, i32* @x.11
  %850 = load i32, i32* @y.12
  %851 = sub i32 %849, 1
  %852 = mul i32 %849, %851
  %853 = urem i32 %852, 2
  %854 = icmp eq i32 %853, 0
  %855 = icmp slt i32 %850, 10
  %856 = or i1 %854, %855
  br i1 %856, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %originalBB151alteredBB, %847
  %857 = icmp eq i32 %848, 1
  %858 = load i32, i32* @x.11
  %859 = load i32, i32* @y.12
  %860 = sub i32 %858, 1
  %861 = mul i32 %858, %860
  %862 = urem i32 %861, 2
  %863 = icmp eq i32 %862, 0
  %864 = icmp slt i32 %859, 10
  %865 = or i1 %863, %864
  br i1 %865, label %originalBBpart2153, label %originalBB151alteredBB

originalBBpart2153:                               ; preds = %originalBB151
  br i1 %857, label %3434, label %866

; <label>:866:                                    ; preds = %originalBBpart2153
  %867 = load i32, i32* @x.11
  %868 = load i32, i32* @y.12
  %869 = sub i32 %867, 1
  %870 = mul i32 %867, %869
  %871 = urem i32 %870, 2
  %872 = icmp eq i32 %871, 0
  %873 = icmp slt i32 %868, 10
  %874 = or i1 %872, %873
  br i1 %874, label %originalBB155, label %originalBB155alteredBB

originalBB155:                                    ; preds = %originalBB155alteredBB, %866
  %875 = load i8, i8* %18, align 1
  %876 = zext i8 %875 to i32
  %877 = icmp eq i32 %876, 114
  %878 = load i32, i32* @x.11
  %879 = load i32, i32* @y.12
  %880 = sub i32 %878, 1
  %881 = mul i32 %878, %880
  %882 = urem i32 %881, 2
  %883 = icmp eq i32 %882, 0
  %884 = icmp slt i32 %879, 10
  %885 = or i1 %883, %884
  br i1 %885, label %originalBBpart2157, label %originalBB155alteredBB

originalBBpart2157:                               ; preds = %originalBB155
  br i1 %877, label %886, label %887

; <label>:886:                                    ; preds = %originalBBpart2157
  br label %1315

; <label>:887:                                    ; preds = %originalBBpart2157
  %888 = load i8, i8* %18, align 1
  %889 = zext i8 %888 to i32
  %890 = icmp eq i32 %889, 82
  br i1 %890, label %891, label %908

; <label>:891:                                    ; preds = %887
  %892 = load i32, i32* @x.11
  %893 = load i32, i32* @y.12
  %894 = sub i32 %892, 1
  %895 = mul i32 %892, %894
  %896 = urem i32 %895, 2
  %897 = icmp eq i32 %896, 0
  %898 = icmp slt i32 %893, 10
  %899 = or i1 %897, %898
  br i1 %899, label %originalBB159, label %originalBB159alteredBB

originalBB159:                                    ; preds = %originalBB159alteredBB, %891
  %900 = load i32, i32* @x.11
  %901 = load i32, i32* @y.12
  %902 = sub i32 %900, 1
  %903 = mul i32 %900, %902
  %904 = urem i32 %903, 2
  %905 = icmp eq i32 %904, 0
  %906 = icmp slt i32 %901, 10
  %907 = or i1 %905, %906
  br i1 %907, label %originalBBpart2161, label %originalBB159alteredBB

originalBBpart2161:                               ; preds = %originalBB159
  br label %1313

; <label>:908:                                    ; preds = %887
  %909 = load i32, i32* @x.11
  %910 = load i32, i32* @y.12
  %911 = sub i32 %909, 1
  %912 = mul i32 %909, %911
  %913 = urem i32 %912, 2
  %914 = icmp eq i32 %913, 0
  %915 = icmp slt i32 %910, 10
  %916 = or i1 %914, %915
  br i1 %916, label %originalBB163, label %originalBB163alteredBB

originalBB163:                                    ; preds = %originalBB163alteredBB, %908
  %917 = load i8, i8* %18, align 1
  %918 = zext i8 %917 to i32
  %919 = icmp eq i32 %918, 113
  %920 = load i32, i32* @x.11
  %921 = load i32, i32* @y.12
  %922 = sub i32 %920, 1
  %923 = mul i32 %920, %922
  %924 = urem i32 %923, 2
  %925 = icmp eq i32 %924, 0
  %926 = icmp slt i32 %921, 10
  %927 = or i1 %925, %926
  br i1 %927, label %originalBBpart2165, label %originalBB163alteredBB

originalBBpart2165:                               ; preds = %originalBB163
  br i1 %919, label %928, label %933

; <label>:928:                                    ; preds = %originalBBpart2165
  %929 = load i32, i32* @target_flags, align 4
  %930 = and i32 %929, 33554432
  %931 = icmp ne i32 %930, 0
  %932 = select i1 %931, i32 12, i32 8
  br label %1311

; <label>:933:                                    ; preds = %originalBBpart2165
  %934 = load i8, i8* %18, align 1
  %935 = zext i8 %934 to i32
  %936 = icmp eq i32 %935, 81
  br i1 %936, label %937, label %954

; <label>:937:                                    ; preds = %933
  %938 = load i32, i32* @x.11
  %939 = load i32, i32* @y.12
  %940 = sub i32 %938, 1
  %941 = mul i32 %938, %940
  %942 = urem i32 %941, 2
  %943 = icmp eq i32 %942, 0
  %944 = icmp slt i32 %939, 10
  %945 = or i1 %943, %944
  br i1 %945, label %originalBB167, label %originalBB167alteredBB

originalBB167:                                    ; preds = %originalBB167alteredBB, %937
  %946 = load i32, i32* @x.11
  %947 = load i32, i32* @y.12
  %948 = sub i32 %946, 1
  %949 = mul i32 %946, %948
  %950 = urem i32 %949, 2
  %951 = icmp eq i32 %950, 0
  %952 = icmp slt i32 %947, 10
  %953 = or i1 %951, %952
  br i1 %953, label %originalBBpart2169, label %originalBB167alteredBB

originalBBpart2169:                               ; preds = %originalBB167
  br label %1309

; <label>:954:                                    ; preds = %933
  %955 = load i32, i32* @x.11
  %956 = load i32, i32* @y.12
  %957 = sub i32 %955, 1
  %958 = mul i32 %955, %957
  %959 = urem i32 %958, 2
  %960 = icmp eq i32 %959, 0
  %961 = icmp slt i32 %956, 10
  %962 = or i1 %960, %961
  br i1 %962, label %originalBB171, label %originalBB171alteredBB

originalBB171:                                    ; preds = %originalBB171alteredBB, %954
  %963 = load i8, i8* %18, align 1
  %964 = zext i8 %963 to i32
  %965 = icmp eq i32 %964, 102
  %966 = load i32, i32* @x.11
  %967 = load i32, i32* @y.12
  %968 = sub i32 %966, 1
  %969 = mul i32 %966, %968
  %970 = urem i32 %969, 2
  %971 = icmp eq i32 %970, 0
  %972 = icmp slt i32 %967, 10
  %973 = or i1 %971, %972
  br i1 %973, label %originalBBpart2173, label %originalBB171alteredBB

originalBBpart2173:                               ; preds = %originalBB171
  br i1 %965, label %974, label %985

; <label>:974:                                    ; preds = %originalBBpart2173
  %975 = load i32, i32* @target_flags, align 4
  %976 = and i32 %975, 1
  %977 = icmp ne i32 %976, 0
  br i1 %977, label %982, label %978

; <label>:978:                                    ; preds = %974
  %979 = load i32, i32* @target_flags, align 4
  %980 = and i32 %979, 32
  %981 = icmp ne i32 %980, 0
  br label %982

; <label>:982:                                    ; preds = %978, %974
  %983 = phi i1 [ true, %974 ], [ %981, %978 ]
  %984 = select i1 %983, i32 15, i32 0
  br label %1307

; <label>:985:                                    ; preds = %originalBBpart2173
  %986 = load i8, i8* %18, align 1
  %987 = zext i8 %986 to i32
  %988 = icmp eq i32 %987, 116
  br i1 %988, label %989, label %1016

; <label>:989:                                    ; preds = %985
  %990 = load i32, i32* @target_flags, align 4
  %991 = and i32 %990, 1
  %992 = icmp ne i32 %991, 0
  br i1 %992, label %997, label %993

; <label>:993:                                    ; preds = %989
  %994 = load i32, i32* @target_flags, align 4
  %995 = and i32 %994, 32
  %996 = icmp ne i32 %995, 0
  br label %997

; <label>:997:                                    ; preds = %993, %989
  %998 = phi i1 [ true, %989 ], [ %996, %993 ]
  %999 = load i32, i32* @x.11
  %1000 = load i32, i32* @y.12
  %1001 = sub i32 %999, 1
  %1002 = mul i32 %999, %1001
  %1003 = urem i32 %1002, 2
  %1004 = icmp eq i32 %1003, 0
  %1005 = icmp slt i32 %1000, 10
  %1006 = or i1 %1004, %1005
  br i1 %1006, label %originalBB175, label %originalBB175alteredBB

originalBB175:                                    ; preds = %originalBB175alteredBB, %997
  %1007 = select i1 %998, i32 13, i32 0
  %1008 = load i32, i32* @x.11
  %1009 = load i32, i32* @y.12
  %1010 = sub i32 %1008, 1
  %1011 = mul i32 %1008, %1010
  %1012 = urem i32 %1011, 2
  %1013 = icmp eq i32 %1012, 0
  %1014 = icmp slt i32 %1009, 10
  %1015 = or i1 %1013, %1014
  br i1 %1015, label %originalBBpart2177, label %originalBB175alteredBB

originalBBpart2177:                               ; preds = %originalBB175
  br label %1305

; <label>:1016:                                   ; preds = %985
  %1017 = load i8, i8* %18, align 1
  %1018 = zext i8 %1017 to i32
  %1019 = icmp eq i32 %1018, 117
  br i1 %1019, label %1020, label %1079

; <label>:1020:                                   ; preds = %1016
  %1021 = load i32, i32* @x.11
  %1022 = load i32, i32* @y.12
  %1023 = sub i32 %1021, 1
  %1024 = mul i32 %1021, %1023
  %1025 = urem i32 %1024, 2
  %1026 = icmp eq i32 %1025, 0
  %1027 = icmp slt i32 %1022, 10
  %1028 = or i1 %1026, %1027
  br i1 %1028, label %originalBB179, label %originalBB179alteredBB

originalBB179:                                    ; preds = %originalBB179alteredBB, %1020
  %1029 = load i32, i32* @target_flags, align 4
  %1030 = and i32 %1029, 1
  %1031 = icmp ne i32 %1030, 0
  %1032 = load i32, i32* @x.11
  %1033 = load i32, i32* @y.12
  %1034 = sub i32 %1032, 1
  %1035 = mul i32 %1032, %1034
  %1036 = urem i32 %1035, 2
  %1037 = icmp eq i32 %1036, 0
  %1038 = icmp slt i32 %1033, 10
  %1039 = or i1 %1037, %1038
  br i1 %1039, label %originalBBpart2188, label %originalBB179alteredBB

originalBBpart2188:                               ; preds = %originalBB179
  br i1 %1031, label %1060, label %1040

; <label>:1040:                                   ; preds = %originalBBpart2188
  %1041 = load i32, i32* @x.11
  %1042 = load i32, i32* @y.12
  %1043 = sub i32 %1041, 1
  %1044 = mul i32 %1041, %1043
  %1045 = urem i32 %1044, 2
  %1046 = icmp eq i32 %1045, 0
  %1047 = icmp slt i32 %1042, 10
  %1048 = or i1 %1046, %1047
  br i1 %1048, label %originalBB190, label %originalBB190alteredBB

originalBB190:                                    ; preds = %originalBB190alteredBB, %1040
  %1049 = load i32, i32* @target_flags, align 4
  %1050 = and i32 %1049, 32
  %1051 = icmp ne i32 %1050, 0
  %1052 = load i32, i32* @x.11
  %1053 = load i32, i32* @y.12
  %1054 = sub i32 %1052, 1
  %1055 = mul i32 %1052, %1054
  %1056 = urem i32 %1055, 2
  %1057 = icmp eq i32 %1056, 0
  %1058 = icmp slt i32 %1053, 10
  %1059 = or i1 %1057, %1058
  br i1 %1059, label %originalBBpart2201, label %originalBB190alteredBB

originalBBpart2201:                               ; preds = %originalBB190
  br label %1060

; <label>:1060:                                   ; preds = %originalBBpart2201, %originalBBpart2188
  %1061 = phi i1 [ true, %originalBBpart2188 ], [ %1051, %originalBBpart2201 ]
  %1062 = load i32, i32* @x.11
  %1063 = load i32, i32* @y.12
  %1064 = sub i32 %1062, 1
  %1065 = mul i32 %1062, %1064
  %1066 = urem i32 %1065, 2
  %1067 = icmp eq i32 %1066, 0
  %1068 = icmp slt i32 %1063, 10
  %1069 = or i1 %1067, %1068
  br i1 %1069, label %originalBB203, label %originalBB203alteredBB

originalBB203:                                    ; preds = %originalBB203alteredBB, %1060
  %1070 = select i1 %1061, i32 14, i32 0
  %1071 = load i32, i32* @x.11
  %1072 = load i32, i32* @y.12
  %1073 = sub i32 %1071, 1
  %1074 = mul i32 %1071, %1073
  %1075 = urem i32 %1074, 2
  %1076 = icmp eq i32 %1075, 0
  %1077 = icmp slt i32 %1072, 10
  %1078 = or i1 %1076, %1077
  br i1 %1078, label %originalBBpart2205, label %originalBB203alteredBB

originalBBpart2205:                               ; preds = %originalBB203
  br label %1287

; <label>:1079:                                   ; preds = %1016
  %1080 = load i32, i32* @x.11
  %1081 = load i32, i32* @y.12
  %1082 = sub i32 %1080, 1
  %1083 = mul i32 %1080, %1082
  %1084 = urem i32 %1083, 2
  %1085 = icmp eq i32 %1084, 0
  %1086 = icmp slt i32 %1081, 10
  %1087 = or i1 %1085, %1086
  br i1 %1087, label %originalBB207, label %originalBB207alteredBB

originalBB207:                                    ; preds = %originalBB207alteredBB, %1079
  %1088 = load i8, i8* %18, align 1
  %1089 = zext i8 %1088 to i32
  %1090 = icmp eq i32 %1089, 97
  %1091 = load i32, i32* @x.11
  %1092 = load i32, i32* @y.12
  %1093 = sub i32 %1091, 1
  %1094 = mul i32 %1091, %1093
  %1095 = urem i32 %1094, 2
  %1096 = icmp eq i32 %1095, 0
  %1097 = icmp slt i32 %1092, 10
  %1098 = or i1 %1096, %1097
  br i1 %1098, label %originalBBpart2209, label %originalBB207alteredBB

originalBBpart2209:                               ; preds = %originalBB207
  br i1 %1090, label %1099, label %1116

; <label>:1099:                                   ; preds = %originalBBpart2209
  %1100 = load i32, i32* @x.11
  %1101 = load i32, i32* @y.12
  %1102 = sub i32 %1100, 1
  %1103 = mul i32 %1100, %1102
  %1104 = urem i32 %1103, 2
  %1105 = icmp eq i32 %1104, 0
  %1106 = icmp slt i32 %1101, 10
  %1107 = or i1 %1105, %1106
  br i1 %1107, label %originalBB211, label %originalBB211alteredBB

originalBB211:                                    ; preds = %originalBB211alteredBB, %1099
  %1108 = load i32, i32* @x.11
  %1109 = load i32, i32* @y.12
  %1110 = sub i32 %1108, 1
  %1111 = mul i32 %1108, %1110
  %1112 = urem i32 %1111, 2
  %1113 = icmp eq i32 %1112, 0
  %1114 = icmp slt i32 %1109, 10
  %1115 = or i1 %1113, %1114
  br i1 %1115, label %originalBBpart2213, label %originalBB211alteredBB

originalBBpart2213:                               ; preds = %originalBB211
  br label %1285

; <label>:1116:                                   ; preds = %originalBBpart2209
  %1117 = load i8, i8* %18, align 1
  %1118 = zext i8 %1117 to i32
  %1119 = icmp eq i32 %1118, 98
  br i1 %1119, label %1120, label %1137

; <label>:1120:                                   ; preds = %1116
  %1121 = load i32, i32* @x.11
  %1122 = load i32, i32* @y.12
  %1123 = sub i32 %1121, 1
  %1124 = mul i32 %1121, %1123
  %1125 = urem i32 %1124, 2
  %1126 = icmp eq i32 %1125, 0
  %1127 = icmp slt i32 %1122, 10
  %1128 = or i1 %1126, %1127
  br i1 %1128, label %originalBB215, label %originalBB215alteredBB

originalBB215:                                    ; preds = %originalBB215alteredBB, %1120
  %1129 = load i32, i32* @x.11
  %1130 = load i32, i32* @y.12
  %1131 = sub i32 %1129, 1
  %1132 = mul i32 %1129, %1131
  %1133 = urem i32 %1132, 2
  %1134 = icmp eq i32 %1133, 0
  %1135 = icmp slt i32 %1130, 10
  %1136 = or i1 %1134, %1135
  br i1 %1136, label %originalBBpart2217, label %originalBB215alteredBB

originalBBpart2217:                               ; preds = %originalBB215
  br label %1283

; <label>:1137:                                   ; preds = %1116
  %1138 = load i8, i8* %18, align 1
  %1139 = zext i8 %1138 to i32
  %1140 = icmp eq i32 %1139, 99
  br i1 %1140, label %1141, label %1142

; <label>:1141:                                   ; preds = %1137
  br label %1281

; <label>:1142:                                   ; preds = %1137
  %1143 = load i32, i32* @x.11
  %1144 = load i32, i32* @y.12
  %1145 = sub i32 %1143, 1
  %1146 = mul i32 %1143, %1145
  %1147 = urem i32 %1146, 2
  %1148 = icmp eq i32 %1147, 0
  %1149 = icmp slt i32 %1144, 10
  %1150 = or i1 %1148, %1149
  br i1 %1150, label %originalBB219, label %originalBB219alteredBB

originalBB219:                                    ; preds = %originalBB219alteredBB, %1142
  %1151 = load i8, i8* %18, align 1
  %1152 = zext i8 %1151 to i32
  %1153 = icmp eq i32 %1152, 100
  %1154 = load i32, i32* @x.11
  %1155 = load i32, i32* @y.12
  %1156 = sub i32 %1154, 1
  %1157 = mul i32 %1154, %1156
  %1158 = urem i32 %1157, 2
  %1159 = icmp eq i32 %1158, 0
  %1160 = icmp slt i32 %1155, 10
  %1161 = or i1 %1159, %1160
  br i1 %1161, label %originalBBpart2221, label %originalBB219alteredBB

originalBBpart2221:                               ; preds = %originalBB219
  br i1 %1153, label %1162, label %1163

; <label>:1162:                                   ; preds = %originalBBpart2221
  br label %1279

; <label>:1163:                                   ; preds = %originalBBpart2221
  %1164 = load i8, i8* %18, align 1
  %1165 = zext i8 %1164 to i32
  %1166 = icmp eq i32 %1165, 120
  br i1 %1166, label %1167, label %1188

; <label>:1167:                                   ; preds = %1163
  %1168 = load i32, i32* @x.11
  %1169 = load i32, i32* @y.12
  %1170 = sub i32 %1168, 1
  %1171 = mul i32 %1168, %1170
  %1172 = urem i32 %1171, 2
  %1173 = icmp eq i32 %1172, 0
  %1174 = icmp slt i32 %1169, 10
  %1175 = or i1 %1173, %1174
  br i1 %1175, label %originalBB223, label %originalBB223alteredBB

originalBB223:                                    ; preds = %originalBB223alteredBB, %1167
  %1176 = load i32, i32* @target_flags, align 4
  %1177 = and i32 %1176, 327680
  %1178 = icmp ne i32 %1177, 0
  %1179 = select i1 %1178, i32 16, i32 0
  %1180 = load i32, i32* @x.11
  %1181 = load i32, i32* @y.12
  %1182 = sub i32 %1180, 1
  %1183 = mul i32 %1180, %1182
  %1184 = urem i32 %1183, 2
  %1185 = icmp eq i32 %1184, 0
  %1186 = icmp slt i32 %1181, 10
  %1187 = or i1 %1185, %1186
  br i1 %1187, label %originalBBpart2233, label %originalBB223alteredBB

originalBBpart2233:                               ; preds = %originalBB223
  br label %1277

; <label>:1188:                                   ; preds = %1163
  %1189 = load i8, i8* %18, align 1
  %1190 = zext i8 %1189 to i32
  %1191 = icmp eq i32 %1190, 89
  br i1 %1191, label %1192, label %1213

; <label>:1192:                                   ; preds = %1188
  %1193 = load i32, i32* @x.11
  %1194 = load i32, i32* @y.12
  %1195 = sub i32 %1193, 1
  %1196 = mul i32 %1193, %1195
  %1197 = urem i32 %1196, 2
  %1198 = icmp eq i32 %1197, 0
  %1199 = icmp slt i32 %1194, 10
  %1200 = or i1 %1198, %1199
  br i1 %1200, label %originalBB235, label %originalBB235alteredBB

originalBB235:                                    ; preds = %originalBB235alteredBB, %1192
  %1201 = load i32, i32* @target_flags, align 4
  %1202 = and i32 %1201, 262144
  %1203 = icmp ne i32 %1202, 0
  %1204 = select i1 %1203, i32 16, i32 0
  %1205 = load i32, i32* @x.11
  %1206 = load i32, i32* @y.12
  %1207 = sub i32 %1205, 1
  %1208 = mul i32 %1205, %1207
  %1209 = urem i32 %1208, 2
  %1210 = icmp eq i32 %1209, 0
  %1211 = icmp slt i32 %1206, 10
  %1212 = or i1 %1210, %1211
  br i1 %1212, label %originalBBpart2248, label %originalBB235alteredBB

originalBBpart2248:                               ; preds = %originalBB235
  br label %1275

; <label>:1213:                                   ; preds = %1188
  %1214 = load i32, i32* @x.11
  %1215 = load i32, i32* @y.12
  %1216 = sub i32 %1214, 1
  %1217 = mul i32 %1214, %1216
  %1218 = urem i32 %1217, 2
  %1219 = icmp eq i32 %1218, 0
  %1220 = icmp slt i32 %1215, 10
  %1221 = or i1 %1219, %1220
  br i1 %1221, label %originalBB250, label %originalBB250alteredBB

originalBB250:                                    ; preds = %originalBB250alteredBB, %1213
  %1222 = load i8, i8* %18, align 1
  %1223 = zext i8 %1222 to i32
  %1224 = icmp eq i32 %1223, 121
  %1225 = load i32, i32* @x.11
  %1226 = load i32, i32* @y.12
  %1227 = sub i32 %1225, 1
  %1228 = mul i32 %1225, %1227
  %1229 = urem i32 %1228, 2
  %1230 = icmp eq i32 %1229, 0
  %1231 = icmp slt i32 %1226, 10
  %1232 = or i1 %1230, %1231
  br i1 %1232, label %originalBBpart2252, label %originalBB250alteredBB

originalBBpart2252:                               ; preds = %originalBB250
  br i1 %1224, label %1233, label %1238

; <label>:1233:                                   ; preds = %originalBBpart2252
  %1234 = load i32, i32* @target_flags, align 4
  %1235 = and i32 %1234, 16384
  %1236 = icmp ne i32 %1235, 0
  %1237 = select i1 %1236, i32 17, i32 0
  br label %1257

; <label>:1238:                                   ; preds = %originalBBpart2252
  %1239 = load i8, i8* %18, align 1
  %1240 = zext i8 %1239 to i32
  %1241 = icmp eq i32 %1240, 65
  br i1 %1241, label %1242, label %1243

; <label>:1242:                                   ; preds = %1238
  br label %1255

; <label>:1243:                                   ; preds = %1238
  %1244 = load i8, i8* %18, align 1
  %1245 = zext i8 %1244 to i32
  %1246 = icmp eq i32 %1245, 68
  br i1 %1246, label %1247, label %1248

; <label>:1247:                                   ; preds = %1243
  br label %1253

; <label>:1248:                                   ; preds = %1243
  %1249 = load i8, i8* %18, align 1
  %1250 = zext i8 %1249 to i32
  %1251 = icmp eq i32 %1250, 83
  %1252 = select i1 %1251, i32 5, i32 0
  br label %1253

; <label>:1253:                                   ; preds = %1248, %1247
  %1254 = phi i32 [ 6, %1247 ], [ %1252, %1248 ]
  br label %1255

; <label>:1255:                                   ; preds = %1253, %1242
  %1256 = phi i32 [ 7, %1242 ], [ %1254, %1253 ]
  br label %1257

; <label>:1257:                                   ; preds = %1255, %1233
  %1258 = phi i32 [ %1237, %1233 ], [ %1256, %1255 ]
  %1259 = load i32, i32* @x.11
  %1260 = load i32, i32* @y.12
  %1261 = sub i32 %1259, 1
  %1262 = mul i32 %1259, %1261
  %1263 = urem i32 %1262, 2
  %1264 = icmp eq i32 %1263, 0
  %1265 = icmp slt i32 %1260, 10
  %1266 = or i1 %1264, %1265
  br i1 %1266, label %originalBB254, label %originalBB254alteredBB

originalBB254:                                    ; preds = %originalBB254alteredBB, %1257
  %1267 = load i32, i32* @x.11
  %1268 = load i32, i32* @y.12
  %1269 = sub i32 %1267, 1
  %1270 = mul i32 %1267, %1269
  %1271 = urem i32 %1270, 2
  %1272 = icmp eq i32 %1271, 0
  %1273 = icmp slt i32 %1268, 10
  %1274 = or i1 %1272, %1273
  br i1 %1274, label %originalBBpart2256, label %originalBB254alteredBB

originalBBpart2256:                               ; preds = %originalBB254
  br label %1275

; <label>:1275:                                   ; preds = %originalBBpart2256, %originalBBpart2248
  %1276 = phi i32 [ %1204, %originalBBpart2248 ], [ %1258, %originalBBpart2256 ]
  br label %1277

; <label>:1277:                                   ; preds = %1275, %originalBBpart2233
  %1278 = phi i32 [ %1179, %originalBBpart2233 ], [ %1276, %1275 ]
  br label %1279

; <label>:1279:                                   ; preds = %1277, %1162
  %1280 = phi i32 [ 2, %1162 ], [ %1278, %1277 ]
  br label %1281

; <label>:1281:                                   ; preds = %1279, %1141
  %1282 = phi i32 [ 3, %1141 ], [ %1280, %1279 ]
  br label %1283

; <label>:1283:                                   ; preds = %1281, %originalBBpart2217
  %1284 = phi i32 [ 4, %originalBBpart2217 ], [ %1282, %1281 ]
  br label %1285

; <label>:1285:                                   ; preds = %1283, %originalBBpart2213
  %1286 = phi i32 [ 1, %originalBBpart2213 ], [ %1284, %1283 ]
  br label %1287

; <label>:1287:                                   ; preds = %1285, %originalBBpart2205
  %1288 = phi i32 [ %1070, %originalBBpart2205 ], [ %1286, %1285 ]
  %1289 = load i32, i32* @x.11
  %1290 = load i32, i32* @y.12
  %1291 = sub i32 %1289, 1
  %1292 = mul i32 %1289, %1291
  %1293 = urem i32 %1292, 2
  %1294 = icmp eq i32 %1293, 0
  %1295 = icmp slt i32 %1290, 10
  %1296 = or i1 %1294, %1295
  br i1 %1296, label %originalBB258, label %originalBB258alteredBB

originalBB258:                                    ; preds = %originalBB258alteredBB, %1287
  %1297 = load i32, i32* @x.11
  %1298 = load i32, i32* @y.12
  %1299 = sub i32 %1297, 1
  %1300 = mul i32 %1297, %1299
  %1301 = urem i32 %1300, 2
  %1302 = icmp eq i32 %1301, 0
  %1303 = icmp slt i32 %1298, 10
  %1304 = or i1 %1302, %1303
  br i1 %1304, label %originalBBpart2260, label %originalBB258alteredBB

originalBBpart2260:                               ; preds = %originalBB258
  br label %1305

; <label>:1305:                                   ; preds = %originalBBpart2260, %originalBBpart2177
  %1306 = phi i32 [ %1007, %originalBBpart2177 ], [ %1288, %originalBBpart2260 ]
  br label %1307

; <label>:1307:                                   ; preds = %1305, %982
  %1308 = phi i32 [ %984, %982 ], [ %1306, %1305 ]
  br label %1309

; <label>:1309:                                   ; preds = %1307, %originalBBpart2169
  %1310 = phi i32 [ 8, %originalBBpart2169 ], [ %1308, %1307 ]
  br label %1311

; <label>:1311:                                   ; preds = %1309, %928
  %1312 = phi i32 [ %932, %928 ], [ %1310, %1309 ]
  br label %1313

; <label>:1313:                                   ; preds = %1311, %originalBBpart2161
  %1314 = phi i32 [ 11, %originalBBpart2161 ], [ %1312, %1311 ]
  br label %1315

; <label>:1315:                                   ; preds = %1313, %886
  %1316 = phi i32 [ 12, %886 ], [ %1314, %1313 ]
  %1317 = icmp eq i32 %1316, 2
  br i1 %1317, label %3434, label %1318

; <label>:1318:                                   ; preds = %1315
  %1319 = load i32, i32* @x.11
  %1320 = load i32, i32* @y.12
  %1321 = sub i32 %1319, 1
  %1322 = mul i32 %1319, %1321
  %1323 = urem i32 %1322, 2
  %1324 = icmp eq i32 %1323, 0
  %1325 = icmp slt i32 %1320, 10
  %1326 = or i1 %1324, %1325
  br i1 %1326, label %originalBB262, label %originalBB262alteredBB

originalBB262:                                    ; preds = %originalBB262alteredBB, %1318
  %1327 = load i8, i8* %18, align 1
  %1328 = zext i8 %1327 to i32
  %1329 = icmp eq i32 %1328, 114
  %1330 = load i32, i32* @x.11
  %1331 = load i32, i32* @y.12
  %1332 = sub i32 %1330, 1
  %1333 = mul i32 %1330, %1332
  %1334 = urem i32 %1333, 2
  %1335 = icmp eq i32 %1334, 0
  %1336 = icmp slt i32 %1331, 10
  %1337 = or i1 %1335, %1336
  br i1 %1337, label %originalBBpart2264, label %originalBB262alteredBB

originalBBpart2264:                               ; preds = %originalBB262
  br i1 %1329, label %1338, label %1339

; <label>:1338:                                   ; preds = %originalBBpart2264
  br label %1767

; <label>:1339:                                   ; preds = %originalBBpart2264
  %1340 = load i8, i8* %18, align 1
  %1341 = zext i8 %1340 to i32
  %1342 = icmp eq i32 %1341, 82
  br i1 %1342, label %1343, label %1344

; <label>:1343:                                   ; preds = %1339
  br label %1765

; <label>:1344:                                   ; preds = %1339
  %1345 = load i8, i8* %18, align 1
  %1346 = zext i8 %1345 to i32
  %1347 = icmp eq i32 %1346, 113
  br i1 %1347, label %1348, label %1369

; <label>:1348:                                   ; preds = %1344
  %1349 = load i32, i32* @x.11
  %1350 = load i32, i32* @y.12
  %1351 = sub i32 %1349, 1
  %1352 = mul i32 %1349, %1351
  %1353 = urem i32 %1352, 2
  %1354 = icmp eq i32 %1353, 0
  %1355 = icmp slt i32 %1350, 10
  %1356 = or i1 %1354, %1355
  br i1 %1356, label %originalBB266, label %originalBB266alteredBB

originalBB266:                                    ; preds = %originalBB266alteredBB, %1348
  %1357 = load i32, i32* @target_flags, align 4
  %1358 = and i32 %1357, 33554432
  %1359 = icmp ne i32 %1358, 0
  %1360 = select i1 %1359, i32 12, i32 8
  %1361 = load i32, i32* @x.11
  %1362 = load i32, i32* @y.12
  %1363 = sub i32 %1361, 1
  %1364 = mul i32 %1361, %1363
  %1365 = urem i32 %1364, 2
  %1366 = icmp eq i32 %1365, 0
  %1367 = icmp slt i32 %1362, 10
  %1368 = or i1 %1366, %1367
  br i1 %1368, label %originalBBpart2284, label %originalBB266alteredBB

originalBBpart2284:                               ; preds = %originalBB266
  br label %1763

; <label>:1369:                                   ; preds = %1344
  %1370 = load i8, i8* %18, align 1
  %1371 = zext i8 %1370 to i32
  %1372 = icmp eq i32 %1371, 81
  br i1 %1372, label %1373, label %1374

; <label>:1373:                                   ; preds = %1369
  br label %1761

; <label>:1374:                                   ; preds = %1369
  %1375 = load i8, i8* %18, align 1
  %1376 = zext i8 %1375 to i32
  %1377 = icmp eq i32 %1376, 102
  br i1 %1377, label %1378, label %1421

; <label>:1378:                                   ; preds = %1374
  %1379 = load i32, i32* @target_flags, align 4
  %1380 = and i32 %1379, 1
  %1381 = icmp ne i32 %1380, 0
  br i1 %1381, label %1402, label %1382

; <label>:1382:                                   ; preds = %1378
  %1383 = load i32, i32* @x.11
  %1384 = load i32, i32* @y.12
  %1385 = sub i32 %1383, 1
  %1386 = mul i32 %1383, %1385
  %1387 = urem i32 %1386, 2
  %1388 = icmp eq i32 %1387, 0
  %1389 = icmp slt i32 %1384, 10
  %1390 = or i1 %1388, %1389
  br i1 %1390, label %originalBB286, label %originalBB286alteredBB

originalBB286:                                    ; preds = %originalBB286alteredBB, %1382
  %1391 = load i32, i32* @target_flags, align 4
  %1392 = and i32 %1391, 32
  %1393 = icmp ne i32 %1392, 0
  %1394 = load i32, i32* @x.11
  %1395 = load i32, i32* @y.12
  %1396 = sub i32 %1394, 1
  %1397 = mul i32 %1394, %1396
  %1398 = urem i32 %1397, 2
  %1399 = icmp eq i32 %1398, 0
  %1400 = icmp slt i32 %1395, 10
  %1401 = or i1 %1399, %1400
  br i1 %1401, label %originalBBpart2296, label %originalBB286alteredBB

originalBBpart2296:                               ; preds = %originalBB286
  br label %1402

; <label>:1402:                                   ; preds = %originalBBpart2296, %1378
  %1403 = phi i1 [ true, %1378 ], [ %1393, %originalBBpart2296 ]
  %1404 = load i32, i32* @x.11
  %1405 = load i32, i32* @y.12
  %1406 = sub i32 %1404, 1
  %1407 = mul i32 %1404, %1406
  %1408 = urem i32 %1407, 2
  %1409 = icmp eq i32 %1408, 0
  %1410 = icmp slt i32 %1405, 10
  %1411 = or i1 %1409, %1410
  br i1 %1411, label %originalBB298, label %originalBB298alteredBB

originalBB298:                                    ; preds = %originalBB298alteredBB, %1402
  %1412 = select i1 %1403, i32 15, i32 0
  %1413 = load i32, i32* @x.11
  %1414 = load i32, i32* @y.12
  %1415 = sub i32 %1413, 1
  %1416 = mul i32 %1413, %1415
  %1417 = urem i32 %1416, 2
  %1418 = icmp eq i32 %1417, 0
  %1419 = icmp slt i32 %1414, 10
  %1420 = or i1 %1418, %1419
  br i1 %1420, label %originalBBpart2300, label %originalBB298alteredBB

originalBBpart2300:                               ; preds = %originalBB298
  br label %1743

; <label>:1421:                                   ; preds = %1374
  %1422 = load i8, i8* %18, align 1
  %1423 = zext i8 %1422 to i32
  %1424 = icmp eq i32 %1423, 116
  br i1 %1424, label %1425, label %1468

; <label>:1425:                                   ; preds = %1421
  %1426 = load i32, i32* @x.11
  %1427 = load i32, i32* @y.12
  %1428 = sub i32 %1426, 1
  %1429 = mul i32 %1426, %1428
  %1430 = urem i32 %1429, 2
  %1431 = icmp eq i32 %1430, 0
  %1432 = icmp slt i32 %1427, 10
  %1433 = or i1 %1431, %1432
  br i1 %1433, label %originalBB302, label %originalBB302alteredBB

originalBB302:                                    ; preds = %originalBB302alteredBB, %1425
  %1434 = load i32, i32* @target_flags, align 4
  %1435 = and i32 %1434, 1
  %1436 = icmp ne i32 %1435, 0
  %1437 = load i32, i32* @x.11
  %1438 = load i32, i32* @y.12
  %1439 = sub i32 %1437, 1
  %1440 = mul i32 %1437, %1439
  %1441 = urem i32 %1440, 2
  %1442 = icmp eq i32 %1441, 0
  %1443 = icmp slt i32 %1438, 10
  %1444 = or i1 %1442, %1443
  br i1 %1444, label %originalBBpart2312, label %originalBB302alteredBB

originalBBpart2312:                               ; preds = %originalBB302
  br i1 %1436, label %1465, label %1445

; <label>:1445:                                   ; preds = %originalBBpart2312
  %1446 = load i32, i32* @x.11
  %1447 = load i32, i32* @y.12
  %1448 = sub i32 %1446, 1
  %1449 = mul i32 %1446, %1448
  %1450 = urem i32 %1449, 2
  %1451 = icmp eq i32 %1450, 0
  %1452 = icmp slt i32 %1447, 10
  %1453 = or i1 %1451, %1452
  br i1 %1453, label %originalBB314, label %originalBB314alteredBB

originalBB314:                                    ; preds = %originalBB314alteredBB, %1445
  %1454 = load i32, i32* @target_flags, align 4
  %1455 = and i32 %1454, 32
  %1456 = icmp ne i32 %1455, 0
  %1457 = load i32, i32* @x.11
  %1458 = load i32, i32* @y.12
  %1459 = sub i32 %1457, 1
  %1460 = mul i32 %1457, %1459
  %1461 = urem i32 %1460, 2
  %1462 = icmp eq i32 %1461, 0
  %1463 = icmp slt i32 %1458, 10
  %1464 = or i1 %1462, %1463
  br i1 %1464, label %originalBBpart2320, label %originalBB314alteredBB

originalBBpart2320:                               ; preds = %originalBB314
  br label %1465

; <label>:1465:                                   ; preds = %originalBBpart2320, %originalBBpart2312
  %1466 = phi i1 [ true, %originalBBpart2312 ], [ %1456, %originalBBpart2320 ]
  %1467 = select i1 %1466, i32 13, i32 0
  br label %1725

; <label>:1468:                                   ; preds = %1421
  %1469 = load i32, i32* @x.11
  %1470 = load i32, i32* @y.12
  %1471 = sub i32 %1469, 1
  %1472 = mul i32 %1469, %1471
  %1473 = urem i32 %1472, 2
  %1474 = icmp eq i32 %1473, 0
  %1475 = icmp slt i32 %1470, 10
  %1476 = or i1 %1474, %1475
  br i1 %1476, label %originalBB322, label %originalBB322alteredBB

originalBB322:                                    ; preds = %originalBB322alteredBB, %1468
  %1477 = load i8, i8* %18, align 1
  %1478 = zext i8 %1477 to i32
  %1479 = icmp eq i32 %1478, 117
  %1480 = load i32, i32* @x.11
  %1481 = load i32, i32* @y.12
  %1482 = sub i32 %1480, 1
  %1483 = mul i32 %1480, %1482
  %1484 = urem i32 %1483, 2
  %1485 = icmp eq i32 %1484, 0
  %1486 = icmp slt i32 %1481, 10
  %1487 = or i1 %1485, %1486
  br i1 %1487, label %originalBBpart2324, label %originalBB322alteredBB

originalBBpart2324:                               ; preds = %originalBB322
  br i1 %1479, label %1488, label %1499

; <label>:1488:                                   ; preds = %originalBBpart2324
  %1489 = load i32, i32* @target_flags, align 4
  %1490 = and i32 %1489, 1
  %1491 = icmp ne i32 %1490, 0
  br i1 %1491, label %1496, label %1492

; <label>:1492:                                   ; preds = %1488
  %1493 = load i32, i32* @target_flags, align 4
  %1494 = and i32 %1493, 32
  %1495 = icmp ne i32 %1494, 0
  br label %1496

; <label>:1496:                                   ; preds = %1492, %1488
  %1497 = phi i1 [ true, %1488 ], [ %1495, %1492 ]
  %1498 = select i1 %1497, i32 14, i32 0
  br label %1707

; <label>:1499:                                   ; preds = %originalBBpart2324
  %1500 = load i8, i8* %18, align 1
  %1501 = zext i8 %1500 to i32
  %1502 = icmp eq i32 %1501, 97
  br i1 %1502, label %1503, label %1520

; <label>:1503:                                   ; preds = %1499
  %1504 = load i32, i32* @x.11
  %1505 = load i32, i32* @y.12
  %1506 = sub i32 %1504, 1
  %1507 = mul i32 %1504, %1506
  %1508 = urem i32 %1507, 2
  %1509 = icmp eq i32 %1508, 0
  %1510 = icmp slt i32 %1505, 10
  %1511 = or i1 %1509, %1510
  br i1 %1511, label %originalBB326, label %originalBB326alteredBB

originalBB326:                                    ; preds = %originalBB326alteredBB, %1503
  %1512 = load i32, i32* @x.11
  %1513 = load i32, i32* @y.12
  %1514 = sub i32 %1512, 1
  %1515 = mul i32 %1512, %1514
  %1516 = urem i32 %1515, 2
  %1517 = icmp eq i32 %1516, 0
  %1518 = icmp slt i32 %1513, 10
  %1519 = or i1 %1517, %1518
  br i1 %1519, label %originalBBpart2328, label %originalBB326alteredBB

originalBBpart2328:                               ; preds = %originalBB326
  br label %1705

; <label>:1520:                                   ; preds = %1499
  %1521 = load i32, i32* @x.11
  %1522 = load i32, i32* @y.12
  %1523 = sub i32 %1521, 1
  %1524 = mul i32 %1521, %1523
  %1525 = urem i32 %1524, 2
  %1526 = icmp eq i32 %1525, 0
  %1527 = icmp slt i32 %1522, 10
  %1528 = or i1 %1526, %1527
  br i1 %1528, label %originalBB330, label %originalBB330alteredBB

originalBB330:                                    ; preds = %originalBB330alteredBB, %1520
  %1529 = load i8, i8* %18, align 1
  %1530 = zext i8 %1529 to i32
  %1531 = icmp eq i32 %1530, 98
  %1532 = load i32, i32* @x.11
  %1533 = load i32, i32* @y.12
  %1534 = sub i32 %1532, 1
  %1535 = mul i32 %1532, %1534
  %1536 = urem i32 %1535, 2
  %1537 = icmp eq i32 %1536, 0
  %1538 = icmp slt i32 %1533, 10
  %1539 = or i1 %1537, %1538
  br i1 %1539, label %originalBBpart2332, label %originalBB330alteredBB

originalBBpart2332:                               ; preds = %originalBB330
  br i1 %1531, label %1540, label %1557

; <label>:1540:                                   ; preds = %originalBBpart2332
  %1541 = load i32, i32* @x.11
  %1542 = load i32, i32* @y.12
  %1543 = sub i32 %1541, 1
  %1544 = mul i32 %1541, %1543
  %1545 = urem i32 %1544, 2
  %1546 = icmp eq i32 %1545, 0
  %1547 = icmp slt i32 %1542, 10
  %1548 = or i1 %1546, %1547
  br i1 %1548, label %originalBB334, label %originalBB334alteredBB

originalBB334:                                    ; preds = %originalBB334alteredBB, %1540
  %1549 = load i32, i32* @x.11
  %1550 = load i32, i32* @y.12
  %1551 = sub i32 %1549, 1
  %1552 = mul i32 %1549, %1551
  %1553 = urem i32 %1552, 2
  %1554 = icmp eq i32 %1553, 0
  %1555 = icmp slt i32 %1550, 10
  %1556 = or i1 %1554, %1555
  br i1 %1556, label %originalBBpart2336, label %originalBB334alteredBB

originalBBpart2336:                               ; preds = %originalBB334
  br label %1687

; <label>:1557:                                   ; preds = %originalBBpart2332
  %1558 = load i8, i8* %18, align 1
  %1559 = zext i8 %1558 to i32
  %1560 = icmp eq i32 %1559, 99
  br i1 %1560, label %1561, label %1578

; <label>:1561:                                   ; preds = %1557
  %1562 = load i32, i32* @x.11
  %1563 = load i32, i32* @y.12
  %1564 = sub i32 %1562, 1
  %1565 = mul i32 %1562, %1564
  %1566 = urem i32 %1565, 2
  %1567 = icmp eq i32 %1566, 0
  %1568 = icmp slt i32 %1563, 10
  %1569 = or i1 %1567, %1568
  br i1 %1569, label %originalBB338, label %originalBB338alteredBB

originalBB338:                                    ; preds = %originalBB338alteredBB, %1561
  %1570 = load i32, i32* @x.11
  %1571 = load i32, i32* @y.12
  %1572 = sub i32 %1570, 1
  %1573 = mul i32 %1570, %1572
  %1574 = urem i32 %1573, 2
  %1575 = icmp eq i32 %1574, 0
  %1576 = icmp slt i32 %1571, 10
  %1577 = or i1 %1575, %1576
  br i1 %1577, label %originalBBpart2340, label %originalBB338alteredBB

originalBBpart2340:                               ; preds = %originalBB338
  br label %1685

; <label>:1578:                                   ; preds = %1557
  %1579 = load i8, i8* %18, align 1
  %1580 = zext i8 %1579 to i32
  %1581 = icmp eq i32 %1580, 100
  br i1 %1581, label %1582, label %1599

; <label>:1582:                                   ; preds = %1578
  %1583 = load i32, i32* @x.11
  %1584 = load i32, i32* @y.12
  %1585 = sub i32 %1583, 1
  %1586 = mul i32 %1583, %1585
  %1587 = urem i32 %1586, 2
  %1588 = icmp eq i32 %1587, 0
  %1589 = icmp slt i32 %1584, 10
  %1590 = or i1 %1588, %1589
  br i1 %1590, label %originalBB342, label %originalBB342alteredBB

originalBB342:                                    ; preds = %originalBB342alteredBB, %1582
  %1591 = load i32, i32* @x.11
  %1592 = load i32, i32* @y.12
  %1593 = sub i32 %1591, 1
  %1594 = mul i32 %1591, %1593
  %1595 = urem i32 %1594, 2
  %1596 = icmp eq i32 %1595, 0
  %1597 = icmp slt i32 %1592, 10
  %1598 = or i1 %1596, %1597
  br i1 %1598, label %originalBBpart2344, label %originalBB342alteredBB

originalBBpart2344:                               ; preds = %originalBB342
  br label %1683

; <label>:1599:                                   ; preds = %1578
  %1600 = load i8, i8* %18, align 1
  %1601 = zext i8 %1600 to i32
  %1602 = icmp eq i32 %1601, 120
  br i1 %1602, label %1603, label %1608

; <label>:1603:                                   ; preds = %1599
  %1604 = load i32, i32* @target_flags, align 4
  %1605 = and i32 %1604, 327680
  %1606 = icmp ne i32 %1605, 0
  %1607 = select i1 %1606, i32 16, i32 0
  br label %1681

; <label>:1608:                                   ; preds = %1599
  %1609 = load i8, i8* %18, align 1
  %1610 = zext i8 %1609 to i32
  %1611 = icmp eq i32 %1610, 89
  br i1 %1611, label %1612, label %1617

; <label>:1612:                                   ; preds = %1608
  %1613 = load i32, i32* @target_flags, align 4
  %1614 = and i32 %1613, 262144
  %1615 = icmp ne i32 %1614, 0
  %1616 = select i1 %1615, i32 16, i32 0
  br label %1679

; <label>:1617:                                   ; preds = %1608
  %1618 = load i8, i8* %18, align 1
  %1619 = zext i8 %1618 to i32
  %1620 = icmp eq i32 %1619, 121
  br i1 %1620, label %1621, label %1626

; <label>:1621:                                   ; preds = %1617
  %1622 = load i32, i32* @target_flags, align 4
  %1623 = and i32 %1622, 16384
  %1624 = icmp ne i32 %1623, 0
  %1625 = select i1 %1624, i32 17, i32 0
  br label %1677

; <label>:1626:                                   ; preds = %1617
  %1627 = load i32, i32* @x.11
  %1628 = load i32, i32* @y.12
  %1629 = sub i32 %1627, 1
  %1630 = mul i32 %1627, %1629
  %1631 = urem i32 %1630, 2
  %1632 = icmp eq i32 %1631, 0
  %1633 = icmp slt i32 %1628, 10
  %1634 = or i1 %1632, %1633
  br i1 %1634, label %originalBB346, label %originalBB346alteredBB

originalBB346:                                    ; preds = %originalBB346alteredBB, %1626
  %1635 = load i8, i8* %18, align 1
  %1636 = zext i8 %1635 to i32
  %1637 = icmp eq i32 %1636, 65
  %1638 = load i32, i32* @x.11
  %1639 = load i32, i32* @y.12
  %1640 = sub i32 %1638, 1
  %1641 = mul i32 %1638, %1640
  %1642 = urem i32 %1641, 2
  %1643 = icmp eq i32 %1642, 0
  %1644 = icmp slt i32 %1639, 10
  %1645 = or i1 %1643, %1644
  br i1 %1645, label %originalBBpart2348, label %originalBB346alteredBB

originalBBpart2348:                               ; preds = %originalBB346
  br i1 %1637, label %1646, label %1647

; <label>:1646:                                   ; preds = %originalBBpart2348
  br label %1675

; <label>:1647:                                   ; preds = %originalBBpart2348
  %1648 = load i8, i8* %18, align 1
  %1649 = zext i8 %1648 to i32
  %1650 = icmp eq i32 %1649, 68
  br i1 %1650, label %1651, label %1652

; <label>:1651:                                   ; preds = %1647
  br label %1673

; <label>:1652:                                   ; preds = %1647
  %1653 = load i32, i32* @x.11
  %1654 = load i32, i32* @y.12
  %1655 = sub i32 %1653, 1
  %1656 = mul i32 %1653, %1655
  %1657 = urem i32 %1656, 2
  %1658 = icmp eq i32 %1657, 0
  %1659 = icmp slt i32 %1654, 10
  %1660 = or i1 %1658, %1659
  br i1 %1660, label %originalBB350, label %originalBB350alteredBB

originalBB350:                                    ; preds = %originalBB350alteredBB, %1652
  %1661 = load i8, i8* %18, align 1
  %1662 = zext i8 %1661 to i32
  %1663 = icmp eq i32 %1662, 83
  %1664 = select i1 %1663, i32 5, i32 0
  %1665 = load i32, i32* @x.11
  %1666 = load i32, i32* @y.12
  %1667 = sub i32 %1665, 1
  %1668 = mul i32 %1665, %1667
  %1669 = urem i32 %1668, 2
  %1670 = icmp eq i32 %1669, 0
  %1671 = icmp slt i32 %1666, 10
  %1672 = or i1 %1670, %1671
  br i1 %1672, label %originalBBpart2352, label %originalBB350alteredBB

originalBBpart2352:                               ; preds = %originalBB350
  br label %1673

; <label>:1673:                                   ; preds = %originalBBpart2352, %1651
  %1674 = phi i32 [ 6, %1651 ], [ %1664, %originalBBpart2352 ]
  br label %1675

; <label>:1675:                                   ; preds = %1673, %1646
  %1676 = phi i32 [ 7, %1646 ], [ %1674, %1673 ]
  br label %1677

; <label>:1677:                                   ; preds = %1675, %1621
  %1678 = phi i32 [ %1625, %1621 ], [ %1676, %1675 ]
  br label %1679

; <label>:1679:                                   ; preds = %1677, %1612
  %1680 = phi i32 [ %1616, %1612 ], [ %1678, %1677 ]
  br label %1681

; <label>:1681:                                   ; preds = %1679, %1603
  %1682 = phi i32 [ %1607, %1603 ], [ %1680, %1679 ]
  br label %1683

; <label>:1683:                                   ; preds = %1681, %originalBBpart2344
  %1684 = phi i32 [ 2, %originalBBpart2344 ], [ %1682, %1681 ]
  br label %1685

; <label>:1685:                                   ; preds = %1683, %originalBBpart2340
  %1686 = phi i32 [ 3, %originalBBpart2340 ], [ %1684, %1683 ]
  br label %1687

; <label>:1687:                                   ; preds = %1685, %originalBBpart2336
  %1688 = phi i32 [ 4, %originalBBpart2336 ], [ %1686, %1685 ]
  %1689 = load i32, i32* @x.11
  %1690 = load i32, i32* @y.12
  %1691 = sub i32 %1689, 1
  %1692 = mul i32 %1689, %1691
  %1693 = urem i32 %1692, 2
  %1694 = icmp eq i32 %1693, 0
  %1695 = icmp slt i32 %1690, 10
  %1696 = or i1 %1694, %1695
  br i1 %1696, label %originalBB354, label %originalBB354alteredBB

originalBB354:                                    ; preds = %originalBB354alteredBB, %1687
  %1697 = load i32, i32* @x.11
  %1698 = load i32, i32* @y.12
  %1699 = sub i32 %1697, 1
  %1700 = mul i32 %1697, %1699
  %1701 = urem i32 %1700, 2
  %1702 = icmp eq i32 %1701, 0
  %1703 = icmp slt i32 %1698, 10
  %1704 = or i1 %1702, %1703
  br i1 %1704, label %originalBBpart2356, label %originalBB354alteredBB

originalBBpart2356:                               ; preds = %originalBB354
  br label %1705

; <label>:1705:                                   ; preds = %originalBBpart2356, %originalBBpart2328
  %1706 = phi i32 [ 1, %originalBBpart2328 ], [ %1688, %originalBBpart2356 ]
  br label %1707

; <label>:1707:                                   ; preds = %1705, %1496
  %1708 = phi i32 [ %1498, %1496 ], [ %1706, %1705 ]
  %1709 = load i32, i32* @x.11
  %1710 = load i32, i32* @y.12
  %1711 = sub i32 %1709, 1
  %1712 = mul i32 %1709, %1711
  %1713 = urem i32 %1712, 2
  %1714 = icmp eq i32 %1713, 0
  %1715 = icmp slt i32 %1710, 10
  %1716 = or i1 %1714, %1715
  br i1 %1716, label %originalBB358, label %originalBB358alteredBB

originalBB358:                                    ; preds = %originalBB358alteredBB, %1707
  %1717 = load i32, i32* @x.11
  %1718 = load i32, i32* @y.12
  %1719 = sub i32 %1717, 1
  %1720 = mul i32 %1717, %1719
  %1721 = urem i32 %1720, 2
  %1722 = icmp eq i32 %1721, 0
  %1723 = icmp slt i32 %1718, 10
  %1724 = or i1 %1722, %1723
  br i1 %1724, label %originalBBpart2360, label %originalBB358alteredBB

originalBBpart2360:                               ; preds = %originalBB358
  br label %1725

; <label>:1725:                                   ; preds = %originalBBpart2360, %1465
  %1726 = phi i32 [ %1467, %1465 ], [ %1708, %originalBBpart2360 ]
  %1727 = load i32, i32* @x.11
  %1728 = load i32, i32* @y.12
  %1729 = sub i32 %1727, 1
  %1730 = mul i32 %1727, %1729
  %1731 = urem i32 %1730, 2
  %1732 = icmp eq i32 %1731, 0
  %1733 = icmp slt i32 %1728, 10
  %1734 = or i1 %1732, %1733
  br i1 %1734, label %originalBB362, label %originalBB362alteredBB

originalBB362:                                    ; preds = %originalBB362alteredBB, %1725
  %1735 = load i32, i32* @x.11
  %1736 = load i32, i32* @y.12
  %1737 = sub i32 %1735, 1
  %1738 = mul i32 %1735, %1737
  %1739 = urem i32 %1738, 2
  %1740 = icmp eq i32 %1739, 0
  %1741 = icmp slt i32 %1736, 10
  %1742 = or i1 %1740, %1741
  br i1 %1742, label %originalBBpart2364, label %originalBB362alteredBB

originalBBpart2364:                               ; preds = %originalBB362
  br label %1743

; <label>:1743:                                   ; preds = %originalBBpart2364, %originalBBpart2300
  %1744 = phi i32 [ %1412, %originalBBpart2300 ], [ %1726, %originalBBpart2364 ]
  %1745 = load i32, i32* @x.11
  %1746 = load i32, i32* @y.12
  %1747 = sub i32 %1745, 1
  %1748 = mul i32 %1745, %1747
  %1749 = urem i32 %1748, 2
  %1750 = icmp eq i32 %1749, 0
  %1751 = icmp slt i32 %1746, 10
  %1752 = or i1 %1750, %1751
  br i1 %1752, label %originalBB366, label %originalBB366alteredBB

originalBB366:                                    ; preds = %originalBB366alteredBB, %1743
  %1753 = load i32, i32* @x.11
  %1754 = load i32, i32* @y.12
  %1755 = sub i32 %1753, 1
  %1756 = mul i32 %1753, %1755
  %1757 = urem i32 %1756, 2
  %1758 = icmp eq i32 %1757, 0
  %1759 = icmp slt i32 %1754, 10
  %1760 = or i1 %1758, %1759
  br i1 %1760, label %originalBBpart2368, label %originalBB366alteredBB

originalBBpart2368:                               ; preds = %originalBB366
  br label %1761

; <label>:1761:                                   ; preds = %originalBBpart2368, %1373
  %1762 = phi i32 [ 8, %1373 ], [ %1744, %originalBBpart2368 ]
  br label %1763

; <label>:1763:                                   ; preds = %1761, %originalBBpart2284
  %1764 = phi i32 [ %1360, %originalBBpart2284 ], [ %1762, %1761 ]
  br label %1765

; <label>:1765:                                   ; preds = %1763, %1343
  %1766 = phi i32 [ 11, %1343 ], [ %1764, %1763 ]
  br label %1767

; <label>:1767:                                   ; preds = %1765, %1338
  %1768 = phi i32 [ 12, %1338 ], [ %1766, %1765 ]
  %1769 = icmp eq i32 %1768, 3
  br i1 %1769, label %3434, label %1770

; <label>:1770:                                   ; preds = %1767
  %1771 = load i8, i8* %18, align 1
  %1772 = zext i8 %1771 to i32
  %1773 = icmp eq i32 %1772, 114
  br i1 %1773, label %1774, label %1775

; <label>:1774:                                   ; preds = %1770
  br label %2139

; <label>:1775:                                   ; preds = %1770
  %1776 = load i8, i8* %18, align 1
  %1777 = zext i8 %1776 to i32
  %1778 = icmp eq i32 %1777, 82
  br i1 %1778, label %1779, label %1796

; <label>:1779:                                   ; preds = %1775
  %1780 = load i32, i32* @x.11
  %1781 = load i32, i32* @y.12
  %1782 = sub i32 %1780, 1
  %1783 = mul i32 %1780, %1782
  %1784 = urem i32 %1783, 2
  %1785 = icmp eq i32 %1784, 0
  %1786 = icmp slt i32 %1781, 10
  %1787 = or i1 %1785, %1786
  br i1 %1787, label %originalBB370, label %originalBB370alteredBB

originalBB370:                                    ; preds = %originalBB370alteredBB, %1779
  %1788 = load i32, i32* @x.11
  %1789 = load i32, i32* @y.12
  %1790 = sub i32 %1788, 1
  %1791 = mul i32 %1788, %1790
  %1792 = urem i32 %1791, 2
  %1793 = icmp eq i32 %1792, 0
  %1794 = icmp slt i32 %1789, 10
  %1795 = or i1 %1793, %1794
  br i1 %1795, label %originalBBpart2372, label %originalBB370alteredBB

originalBBpart2372:                               ; preds = %originalBB370
  br label %2137

; <label>:1796:                                   ; preds = %1775
  %1797 = load i32, i32* @x.11
  %1798 = load i32, i32* @y.12
  %1799 = sub i32 %1797, 1
  %1800 = mul i32 %1797, %1799
  %1801 = urem i32 %1800, 2
  %1802 = icmp eq i32 %1801, 0
  %1803 = icmp slt i32 %1798, 10
  %1804 = or i1 %1802, %1803
  br i1 %1804, label %originalBB374, label %originalBB374alteredBB

originalBB374:                                    ; preds = %originalBB374alteredBB, %1796
  %1805 = load i8, i8* %18, align 1
  %1806 = zext i8 %1805 to i32
  %1807 = icmp eq i32 %1806, 113
  %1808 = load i32, i32* @x.11
  %1809 = load i32, i32* @y.12
  %1810 = sub i32 %1808, 1
  %1811 = mul i32 %1808, %1810
  %1812 = urem i32 %1811, 2
  %1813 = icmp eq i32 %1812, 0
  %1814 = icmp slt i32 %1809, 10
  %1815 = or i1 %1813, %1814
  br i1 %1815, label %originalBBpart2376, label %originalBB374alteredBB

originalBBpart2376:                               ; preds = %originalBB374
  br i1 %1807, label %1816, label %1821

; <label>:1816:                                   ; preds = %originalBBpart2376
  %1817 = load i32, i32* @target_flags, align 4
  %1818 = and i32 %1817, 33554432
  %1819 = icmp ne i32 %1818, 0
  %1820 = select i1 %1819, i32 12, i32 8
  br label %2119

; <label>:1821:                                   ; preds = %originalBBpart2376
  %1822 = load i8, i8* %18, align 1
  %1823 = zext i8 %1822 to i32
  %1824 = icmp eq i32 %1823, 81
  br i1 %1824, label %1825, label %1826

; <label>:1825:                                   ; preds = %1821
  br label %2117

; <label>:1826:                                   ; preds = %1821
  %1827 = load i8, i8* %18, align 1
  %1828 = zext i8 %1827 to i32
  %1829 = icmp eq i32 %1828, 102
  br i1 %1829, label %1830, label %1841

; <label>:1830:                                   ; preds = %1826
  %1831 = load i32, i32* @target_flags, align 4
  %1832 = and i32 %1831, 1
  %1833 = icmp ne i32 %1832, 0
  br i1 %1833, label %1838, label %1834

; <label>:1834:                                   ; preds = %1830
  %1835 = load i32, i32* @target_flags, align 4
  %1836 = and i32 %1835, 32
  %1837 = icmp ne i32 %1836, 0
  br label %1838

; <label>:1838:                                   ; preds = %1834, %1830
  %1839 = phi i1 [ true, %1830 ], [ %1837, %1834 ]
  %1840 = select i1 %1839, i32 15, i32 0
  br label %2099

; <label>:1841:                                   ; preds = %1826
  %1842 = load i8, i8* %18, align 1
  %1843 = zext i8 %1842 to i32
  %1844 = icmp eq i32 %1843, 116
  br i1 %1844, label %1845, label %1872

; <label>:1845:                                   ; preds = %1841
  %1846 = load i32, i32* @x.11
  %1847 = load i32, i32* @y.12
  %1848 = sub i32 %1846, 1
  %1849 = mul i32 %1846, %1848
  %1850 = urem i32 %1849, 2
  %1851 = icmp eq i32 %1850, 0
  %1852 = icmp slt i32 %1847, 10
  %1853 = or i1 %1851, %1852
  br i1 %1853, label %originalBB378, label %originalBB378alteredBB

originalBB378:                                    ; preds = %originalBB378alteredBB, %1845
  %1854 = load i32, i32* @target_flags, align 4
  %1855 = and i32 %1854, 1
  %1856 = icmp ne i32 %1855, 0
  %1857 = load i32, i32* @x.11
  %1858 = load i32, i32* @y.12
  %1859 = sub i32 %1857, 1
  %1860 = mul i32 %1857, %1859
  %1861 = urem i32 %1860, 2
  %1862 = icmp eq i32 %1861, 0
  %1863 = icmp slt i32 %1858, 10
  %1864 = or i1 %1862, %1863
  br i1 %1864, label %originalBBpart2391, label %originalBB378alteredBB

originalBBpart2391:                               ; preds = %originalBB378
  br i1 %1856, label %1869, label %1865

; <label>:1865:                                   ; preds = %originalBBpart2391
  %1866 = load i32, i32* @target_flags, align 4
  %1867 = and i32 %1866, 32
  %1868 = icmp ne i32 %1867, 0
  br label %1869

; <label>:1869:                                   ; preds = %1865, %originalBBpart2391
  %1870 = phi i1 [ true, %originalBBpart2391 ], [ %1868, %1865 ]
  %1871 = select i1 %1870, i32 13, i32 0
  br label %2081

; <label>:1872:                                   ; preds = %1841
  %1873 = load i32, i32* @x.11
  %1874 = load i32, i32* @y.12
  %1875 = sub i32 %1873, 1
  %1876 = mul i32 %1873, %1875
  %1877 = urem i32 %1876, 2
  %1878 = icmp eq i32 %1877, 0
  %1879 = icmp slt i32 %1874, 10
  %1880 = or i1 %1878, %1879
  br i1 %1880, label %originalBB393, label %originalBB393alteredBB

originalBB393:                                    ; preds = %originalBB393alteredBB, %1872
  %1881 = load i8, i8* %18, align 1
  %1882 = zext i8 %1881 to i32
  %1883 = icmp eq i32 %1882, 117
  %1884 = load i32, i32* @x.11
  %1885 = load i32, i32* @y.12
  %1886 = sub i32 %1884, 1
  %1887 = mul i32 %1884, %1886
  %1888 = urem i32 %1887, 2
  %1889 = icmp eq i32 %1888, 0
  %1890 = icmp slt i32 %1885, 10
  %1891 = or i1 %1889, %1890
  br i1 %1891, label %originalBBpart2395, label %originalBB393alteredBB

originalBBpart2395:                               ; preds = %originalBB393
  br i1 %1883, label %1892, label %1919

; <label>:1892:                                   ; preds = %originalBBpart2395
  %1893 = load i32, i32* @x.11
  %1894 = load i32, i32* @y.12
  %1895 = sub i32 %1893, 1
  %1896 = mul i32 %1893, %1895
  %1897 = urem i32 %1896, 2
  %1898 = icmp eq i32 %1897, 0
  %1899 = icmp slt i32 %1894, 10
  %1900 = or i1 %1898, %1899
  br i1 %1900, label %originalBB397, label %originalBB397alteredBB

originalBB397:                                    ; preds = %originalBB397alteredBB, %1892
  %1901 = load i32, i32* @target_flags, align 4
  %1902 = and i32 %1901, 1
  %1903 = icmp ne i32 %1902, 0
  %1904 = load i32, i32* @x.11
  %1905 = load i32, i32* @y.12
  %1906 = sub i32 %1904, 1
  %1907 = mul i32 %1904, %1906
  %1908 = urem i32 %1907, 2
  %1909 = icmp eq i32 %1908, 0
  %1910 = icmp slt i32 %1905, 10
  %1911 = or i1 %1909, %1910
  br i1 %1911, label %originalBBpart2401, label %originalBB397alteredBB

originalBBpart2401:                               ; preds = %originalBB397
  br i1 %1903, label %1916, label %1912

; <label>:1912:                                   ; preds = %originalBBpart2401
  %1913 = load i32, i32* @target_flags, align 4
  %1914 = and i32 %1913, 32
  %1915 = icmp ne i32 %1914, 0
  br label %1916

; <label>:1916:                                   ; preds = %1912, %originalBBpart2401
  %1917 = phi i1 [ true, %originalBBpart2401 ], [ %1915, %1912 ]
  %1918 = select i1 %1917, i32 14, i32 0
  br label %2079

; <label>:1919:                                   ; preds = %originalBBpart2395
  %1920 = load i32, i32* @x.11
  %1921 = load i32, i32* @y.12
  %1922 = sub i32 %1920, 1
  %1923 = mul i32 %1920, %1922
  %1924 = urem i32 %1923, 2
  %1925 = icmp eq i32 %1924, 0
  %1926 = icmp slt i32 %1921, 10
  %1927 = or i1 %1925, %1926
  br i1 %1927, label %originalBB403, label %originalBB403alteredBB

originalBB403:                                    ; preds = %originalBB403alteredBB, %1919
  %1928 = load i8, i8* %18, align 1
  %1929 = zext i8 %1928 to i32
  %1930 = icmp eq i32 %1929, 97
  %1931 = load i32, i32* @x.11
  %1932 = load i32, i32* @y.12
  %1933 = sub i32 %1931, 1
  %1934 = mul i32 %1931, %1933
  %1935 = urem i32 %1934, 2
  %1936 = icmp eq i32 %1935, 0
  %1937 = icmp slt i32 %1932, 10
  %1938 = or i1 %1936, %1937
  br i1 %1938, label %originalBBpart2405, label %originalBB403alteredBB

originalBBpart2405:                               ; preds = %originalBB403
  br i1 %1930, label %1939, label %1940

; <label>:1939:                                   ; preds = %originalBBpart2405
  br label %2061

; <label>:1940:                                   ; preds = %originalBBpart2405
  %1941 = load i8, i8* %18, align 1
  %1942 = zext i8 %1941 to i32
  %1943 = icmp eq i32 %1942, 98
  br i1 %1943, label %1944, label %1945

; <label>:1944:                                   ; preds = %1940
  br label %2059

; <label>:1945:                                   ; preds = %1940
  %1946 = load i8, i8* %18, align 1
  %1947 = zext i8 %1946 to i32
  %1948 = icmp eq i32 %1947, 99
  br i1 %1948, label %1949, label %1950

; <label>:1949:                                   ; preds = %1945
  br label %2057

; <label>:1950:                                   ; preds = %1945
  %1951 = load i8, i8* %18, align 1
  %1952 = zext i8 %1951 to i32
  %1953 = icmp eq i32 %1952, 100
  br i1 %1953, label %1954, label %1971

; <label>:1954:                                   ; preds = %1950
  %1955 = load i32, i32* @x.11
  %1956 = load i32, i32* @y.12
  %1957 = sub i32 %1955, 1
  %1958 = mul i32 %1955, %1957
  %1959 = urem i32 %1958, 2
  %1960 = icmp eq i32 %1959, 0
  %1961 = icmp slt i32 %1956, 10
  %1962 = or i1 %1960, %1961
  br i1 %1962, label %originalBB407, label %originalBB407alteredBB

originalBB407:                                    ; preds = %originalBB407alteredBB, %1954
  %1963 = load i32, i32* @x.11
  %1964 = load i32, i32* @y.12
  %1965 = sub i32 %1963, 1
  %1966 = mul i32 %1963, %1965
  %1967 = urem i32 %1966, 2
  %1968 = icmp eq i32 %1967, 0
  %1969 = icmp slt i32 %1964, 10
  %1970 = or i1 %1968, %1969
  br i1 %1970, label %originalBBpart2409, label %originalBB407alteredBB

originalBBpart2409:                               ; preds = %originalBB407
  br label %2055

; <label>:1971:                                   ; preds = %1950
  %1972 = load i8, i8* %18, align 1
  %1973 = zext i8 %1972 to i32
  %1974 = icmp eq i32 %1973, 120
  br i1 %1974, label %1975, label %1980

; <label>:1975:                                   ; preds = %1971
  %1976 = load i32, i32* @target_flags, align 4
  %1977 = and i32 %1976, 327680
  %1978 = icmp ne i32 %1977, 0
  %1979 = select i1 %1978, i32 16, i32 0
  br label %2053

; <label>:1980:                                   ; preds = %1971
  %1981 = load i32, i32* @x.11
  %1982 = load i32, i32* @y.12
  %1983 = sub i32 %1981, 1
  %1984 = mul i32 %1981, %1983
  %1985 = urem i32 %1984, 2
  %1986 = icmp eq i32 %1985, 0
  %1987 = icmp slt i32 %1982, 10
  %1988 = or i1 %1986, %1987
  br i1 %1988, label %originalBB411, label %originalBB411alteredBB

originalBB411:                                    ; preds = %originalBB411alteredBB, %1980
  %1989 = load i8, i8* %18, align 1
  %1990 = zext i8 %1989 to i32
  %1991 = icmp eq i32 %1990, 89
  %1992 = load i32, i32* @x.11
  %1993 = load i32, i32* @y.12
  %1994 = sub i32 %1992, 1
  %1995 = mul i32 %1992, %1994
  %1996 = urem i32 %1995, 2
  %1997 = icmp eq i32 %1996, 0
  %1998 = icmp slt i32 %1993, 10
  %1999 = or i1 %1997, %1998
  br i1 %1999, label %originalBBpart2413, label %originalBB411alteredBB

originalBBpart2413:                               ; preds = %originalBB411
  br i1 %1991, label %2000, label %2005

; <label>:2000:                                   ; preds = %originalBBpart2413
  %2001 = load i32, i32* @target_flags, align 4
  %2002 = and i32 %2001, 262144
  %2003 = icmp ne i32 %2002, 0
  %2004 = select i1 %2003, i32 16, i32 0
  br label %2035

; <label>:2005:                                   ; preds = %originalBBpart2413
  %2006 = load i8, i8* %18, align 1
  %2007 = zext i8 %2006 to i32
  %2008 = icmp eq i32 %2007, 121
  br i1 %2008, label %2009, label %2014

; <label>:2009:                                   ; preds = %2005
  %2010 = load i32, i32* @target_flags, align 4
  %2011 = and i32 %2010, 16384
  %2012 = icmp ne i32 %2011, 0
  %2013 = select i1 %2012, i32 17, i32 0
  br label %2033

; <label>:2014:                                   ; preds = %2005
  %2015 = load i8, i8* %18, align 1
  %2016 = zext i8 %2015 to i32
  %2017 = icmp eq i32 %2016, 65
  br i1 %2017, label %2018, label %2019

; <label>:2018:                                   ; preds = %2014
  br label %2031

; <label>:2019:                                   ; preds = %2014
  %2020 = load i8, i8* %18, align 1
  %2021 = zext i8 %2020 to i32
  %2022 = icmp eq i32 %2021, 68
  br i1 %2022, label %2023, label %2024

; <label>:2023:                                   ; preds = %2019
  br label %2029

; <label>:2024:                                   ; preds = %2019
  %2025 = load i8, i8* %18, align 1
  %2026 = zext i8 %2025 to i32
  %2027 = icmp eq i32 %2026, 83
  %2028 = select i1 %2027, i32 5, i32 0
  br label %2029

; <label>:2029:                                   ; preds = %2024, %2023
  %2030 = phi i32 [ 6, %2023 ], [ %2028, %2024 ]
  br label %2031

; <label>:2031:                                   ; preds = %2029, %2018
  %2032 = phi i32 [ 7, %2018 ], [ %2030, %2029 ]
  br label %2033

; <label>:2033:                                   ; preds = %2031, %2009
  %2034 = phi i32 [ %2013, %2009 ], [ %2032, %2031 ]
  br label %2035

; <label>:2035:                                   ; preds = %2033, %2000
  %2036 = phi i32 [ %2004, %2000 ], [ %2034, %2033 ]
  %2037 = load i32, i32* @x.11
  %2038 = load i32, i32* @y.12
  %2039 = sub i32 %2037, 1
  %2040 = mul i32 %2037, %2039
  %2041 = urem i32 %2040, 2
  %2042 = icmp eq i32 %2041, 0
  %2043 = icmp slt i32 %2038, 10
  %2044 = or i1 %2042, %2043
  br i1 %2044, label %originalBB415, label %originalBB415alteredBB

originalBB415:                                    ; preds = %originalBB415alteredBB, %2035
  %2045 = load i32, i32* @x.11
  %2046 = load i32, i32* @y.12
  %2047 = sub i32 %2045, 1
  %2048 = mul i32 %2045, %2047
  %2049 = urem i32 %2048, 2
  %2050 = icmp eq i32 %2049, 0
  %2051 = icmp slt i32 %2046, 10
  %2052 = or i1 %2050, %2051
  br i1 %2052, label %originalBBpart2417, label %originalBB415alteredBB

originalBBpart2417:                               ; preds = %originalBB415
  br label %2053

; <label>:2053:                                   ; preds = %originalBBpart2417, %1975
  %2054 = phi i32 [ %1979, %1975 ], [ %2036, %originalBBpart2417 ]
  br label %2055

; <label>:2055:                                   ; preds = %2053, %originalBBpart2409
  %2056 = phi i32 [ 2, %originalBBpart2409 ], [ %2054, %2053 ]
  br label %2057

; <label>:2057:                                   ; preds = %2055, %1949
  %2058 = phi i32 [ 3, %1949 ], [ %2056, %2055 ]
  br label %2059

; <label>:2059:                                   ; preds = %2057, %1944
  %2060 = phi i32 [ 4, %1944 ], [ %2058, %2057 ]
  br label %2061

; <label>:2061:                                   ; preds = %2059, %1939
  %2062 = phi i32 [ 1, %1939 ], [ %2060, %2059 ]
  %2063 = load i32, i32* @x.11
  %2064 = load i32, i32* @y.12
  %2065 = sub i32 %2063, 1
  %2066 = mul i32 %2063, %2065
  %2067 = urem i32 %2066, 2
  %2068 = icmp eq i32 %2067, 0
  %2069 = icmp slt i32 %2064, 10
  %2070 = or i1 %2068, %2069
  br i1 %2070, label %originalBB419, label %originalBB419alteredBB

originalBB419:                                    ; preds = %originalBB419alteredBB, %2061
  %2071 = load i32, i32* @x.11
  %2072 = load i32, i32* @y.12
  %2073 = sub i32 %2071, 1
  %2074 = mul i32 %2071, %2073
  %2075 = urem i32 %2074, 2
  %2076 = icmp eq i32 %2075, 0
  %2077 = icmp slt i32 %2072, 10
  %2078 = or i1 %2076, %2077
  br i1 %2078, label %originalBBpart2421, label %originalBB419alteredBB

originalBBpart2421:                               ; preds = %originalBB419
  br label %2079

; <label>:2079:                                   ; preds = %originalBBpart2421, %1916
  %2080 = phi i32 [ %1918, %1916 ], [ %2062, %originalBBpart2421 ]
  br label %2081

; <label>:2081:                                   ; preds = %2079, %1869
  %2082 = phi i32 [ %1871, %1869 ], [ %2080, %2079 ]
  %2083 = load i32, i32* @x.11
  %2084 = load i32, i32* @y.12
  %2085 = sub i32 %2083, 1
  %2086 = mul i32 %2083, %2085
  %2087 = urem i32 %2086, 2
  %2088 = icmp eq i32 %2087, 0
  %2089 = icmp slt i32 %2084, 10
  %2090 = or i1 %2088, %2089
  br i1 %2090, label %originalBB423, label %originalBB423alteredBB

originalBB423:                                    ; preds = %originalBB423alteredBB, %2081
  %2091 = load i32, i32* @x.11
  %2092 = load i32, i32* @y.12
  %2093 = sub i32 %2091, 1
  %2094 = mul i32 %2091, %2093
  %2095 = urem i32 %2094, 2
  %2096 = icmp eq i32 %2095, 0
  %2097 = icmp slt i32 %2092, 10
  %2098 = or i1 %2096, %2097
  br i1 %2098, label %originalBBpart2425, label %originalBB423alteredBB

originalBBpart2425:                               ; preds = %originalBB423
  br label %2099

; <label>:2099:                                   ; preds = %originalBBpart2425, %1838
  %2100 = phi i32 [ %1840, %1838 ], [ %2082, %originalBBpart2425 ]
  %2101 = load i32, i32* @x.11
  %2102 = load i32, i32* @y.12
  %2103 = sub i32 %2101, 1
  %2104 = mul i32 %2101, %2103
  %2105 = urem i32 %2104, 2
  %2106 = icmp eq i32 %2105, 0
  %2107 = icmp slt i32 %2102, 10
  %2108 = or i1 %2106, %2107
  br i1 %2108, label %originalBB427, label %originalBB427alteredBB

originalBB427:                                    ; preds = %originalBB427alteredBB, %2099
  %2109 = load i32, i32* @x.11
  %2110 = load i32, i32* @y.12
  %2111 = sub i32 %2109, 1
  %2112 = mul i32 %2109, %2111
  %2113 = urem i32 %2112, 2
  %2114 = icmp eq i32 %2113, 0
  %2115 = icmp slt i32 %2110, 10
  %2116 = or i1 %2114, %2115
  br i1 %2116, label %originalBBpart2429, label %originalBB427alteredBB

originalBBpart2429:                               ; preds = %originalBB427
  br label %2117

; <label>:2117:                                   ; preds = %originalBBpart2429, %1825
  %2118 = phi i32 [ 8, %1825 ], [ %2100, %originalBBpart2429 ]
  br label %2119

; <label>:2119:                                   ; preds = %2117, %1816
  %2120 = phi i32 [ %1820, %1816 ], [ %2118, %2117 ]
  %2121 = load i32, i32* @x.11
  %2122 = load i32, i32* @y.12
  %2123 = sub i32 %2121, 1
  %2124 = mul i32 %2121, %2123
  %2125 = urem i32 %2124, 2
  %2126 = icmp eq i32 %2125, 0
  %2127 = icmp slt i32 %2122, 10
  %2128 = or i1 %2126, %2127
  br i1 %2128, label %originalBB431, label %originalBB431alteredBB

originalBB431:                                    ; preds = %originalBB431alteredBB, %2119
  %2129 = load i32, i32* @x.11
  %2130 = load i32, i32* @y.12
  %2131 = sub i32 %2129, 1
  %2132 = mul i32 %2129, %2131
  %2133 = urem i32 %2132, 2
  %2134 = icmp eq i32 %2133, 0
  %2135 = icmp slt i32 %2130, 10
  %2136 = or i1 %2134, %2135
  br i1 %2136, label %originalBBpart2433, label %originalBB431alteredBB

originalBBpart2433:                               ; preds = %originalBB431
  br label %2137

; <label>:2137:                                   ; preds = %originalBBpart2433, %originalBBpart2372
  %2138 = phi i32 [ 11, %originalBBpart2372 ], [ %2120, %originalBBpart2433 ]
  br label %2139

; <label>:2139:                                   ; preds = %2137, %1774
  %2140 = phi i32 [ 12, %1774 ], [ %2138, %2137 ]
  %2141 = icmp eq i32 %2140, 4
  br i1 %2141, label %3434, label %2142

; <label>:2142:                                   ; preds = %2139
  %2143 = load i8, i8* %18, align 1
  %2144 = zext i8 %2143 to i32
  %2145 = icmp eq i32 %2144, 114
  br i1 %2145, label %2146, label %2147

; <label>:2146:                                   ; preds = %2142
  br label %2591

; <label>:2147:                                   ; preds = %2142
  %2148 = load i32, i32* @x.11
  %2149 = load i32, i32* @y.12
  %2150 = sub i32 %2148, 1
  %2151 = mul i32 %2148, %2150
  %2152 = urem i32 %2151, 2
  %2153 = icmp eq i32 %2152, 0
  %2154 = icmp slt i32 %2149, 10
  %2155 = or i1 %2153, %2154
  br i1 %2155, label %originalBB435, label %originalBB435alteredBB

originalBB435:                                    ; preds = %originalBB435alteredBB, %2147
  %2156 = load i8, i8* %18, align 1
  %2157 = zext i8 %2156 to i32
  %2158 = icmp eq i32 %2157, 82
  %2159 = load i32, i32* @x.11
  %2160 = load i32, i32* @y.12
  %2161 = sub i32 %2159, 1
  %2162 = mul i32 %2159, %2161
  %2163 = urem i32 %2162, 2
  %2164 = icmp eq i32 %2163, 0
  %2165 = icmp slt i32 %2160, 10
  %2166 = or i1 %2164, %2165
  br i1 %2166, label %originalBBpart2437, label %originalBB435alteredBB

originalBBpart2437:                               ; preds = %originalBB435
  br i1 %2158, label %2167, label %2184

; <label>:2167:                                   ; preds = %originalBBpart2437
  %2168 = load i32, i32* @x.11
  %2169 = load i32, i32* @y.12
  %2170 = sub i32 %2168, 1
  %2171 = mul i32 %2168, %2170
  %2172 = urem i32 %2171, 2
  %2173 = icmp eq i32 %2172, 0
  %2174 = icmp slt i32 %2169, 10
  %2175 = or i1 %2173, %2174
  br i1 %2175, label %originalBB439, label %originalBB439alteredBB

originalBB439:                                    ; preds = %originalBB439alteredBB, %2167
  %2176 = load i32, i32* @x.11
  %2177 = load i32, i32* @y.12
  %2178 = sub i32 %2176, 1
  %2179 = mul i32 %2176, %2178
  %2180 = urem i32 %2179, 2
  %2181 = icmp eq i32 %2180, 0
  %2182 = icmp slt i32 %2177, 10
  %2183 = or i1 %2181, %2182
  br i1 %2183, label %originalBBpart2441, label %originalBB439alteredBB

originalBBpart2441:                               ; preds = %originalBB439
  br label %2589

; <label>:2184:                                   ; preds = %originalBBpart2437
  %2185 = load i8, i8* %18, align 1
  %2186 = zext i8 %2185 to i32
  %2187 = icmp eq i32 %2186, 113
  br i1 %2187, label %2188, label %2193

; <label>:2188:                                   ; preds = %2184
  %2189 = load i32, i32* @target_flags, align 4
  %2190 = and i32 %2189, 33554432
  %2191 = icmp ne i32 %2190, 0
  %2192 = select i1 %2191, i32 12, i32 8
  br label %2587

; <label>:2193:                                   ; preds = %2184
  %2194 = load i8, i8* %18, align 1
  %2195 = zext i8 %2194 to i32
  %2196 = icmp eq i32 %2195, 81
  br i1 %2196, label %2197, label %2198

; <label>:2197:                                   ; preds = %2193
  br label %2569

; <label>:2198:                                   ; preds = %2193
  %2199 = load i8, i8* %18, align 1
  %2200 = zext i8 %2199 to i32
  %2201 = icmp eq i32 %2200, 102
  br i1 %2201, label %2202, label %2229

; <label>:2202:                                   ; preds = %2198
  %2203 = load i32, i32* @target_flags, align 4
  %2204 = and i32 %2203, 1
  %2205 = icmp ne i32 %2204, 0
  br i1 %2205, label %2226, label %2206

; <label>:2206:                                   ; preds = %2202
  %2207 = load i32, i32* @x.11
  %2208 = load i32, i32* @y.12
  %2209 = sub i32 %2207, 1
  %2210 = mul i32 %2207, %2209
  %2211 = urem i32 %2210, 2
  %2212 = icmp eq i32 %2211, 0
  %2213 = icmp slt i32 %2208, 10
  %2214 = or i1 %2212, %2213
  br i1 %2214, label %originalBB443, label %originalBB443alteredBB

originalBB443:                                    ; preds = %originalBB443alteredBB, %2206
  %2215 = load i32, i32* @target_flags, align 4
  %2216 = and i32 %2215, 32
  %2217 = icmp ne i32 %2216, 0
  %2218 = load i32, i32* @x.11
  %2219 = load i32, i32* @y.12
  %2220 = sub i32 %2218, 1
  %2221 = mul i32 %2218, %2220
  %2222 = urem i32 %2221, 2
  %2223 = icmp eq i32 %2222, 0
  %2224 = icmp slt i32 %2219, 10
  %2225 = or i1 %2223, %2224
  br i1 %2225, label %originalBBpart2458, label %originalBB443alteredBB

originalBBpart2458:                               ; preds = %originalBB443
  br label %2226

; <label>:2226:                                   ; preds = %originalBBpart2458, %2202
  %2227 = phi i1 [ true, %2202 ], [ %2217, %originalBBpart2458 ]
  %2228 = select i1 %2227, i32 15, i32 0
  br label %2567

; <label>:2229:                                   ; preds = %2198
  %2230 = load i32, i32* @x.11
  %2231 = load i32, i32* @y.12
  %2232 = sub i32 %2230, 1
  %2233 = mul i32 %2230, %2232
  %2234 = urem i32 %2233, 2
  %2235 = icmp eq i32 %2234, 0
  %2236 = icmp slt i32 %2231, 10
  %2237 = or i1 %2235, %2236
  br i1 %2237, label %originalBB460, label %originalBB460alteredBB

originalBB460:                                    ; preds = %originalBB460alteredBB, %2229
  %2238 = load i8, i8* %18, align 1
  %2239 = zext i8 %2238 to i32
  %2240 = icmp eq i32 %2239, 116
  %2241 = load i32, i32* @x.11
  %2242 = load i32, i32* @y.12
  %2243 = sub i32 %2241, 1
  %2244 = mul i32 %2241, %2243
  %2245 = urem i32 %2244, 2
  %2246 = icmp eq i32 %2245, 0
  %2247 = icmp slt i32 %2242, 10
  %2248 = or i1 %2246, %2247
  br i1 %2248, label %originalBBpart2462, label %originalBB460alteredBB

originalBBpart2462:                               ; preds = %originalBB460
  br i1 %2240, label %2249, label %2260

; <label>:2249:                                   ; preds = %originalBBpart2462
  %2250 = load i32, i32* @target_flags, align 4
  %2251 = and i32 %2250, 1
  %2252 = icmp ne i32 %2251, 0
  br i1 %2252, label %2257, label %2253

; <label>:2253:                                   ; preds = %2249
  %2254 = load i32, i32* @target_flags, align 4
  %2255 = and i32 %2254, 32
  %2256 = icmp ne i32 %2255, 0
  br label %2257

; <label>:2257:                                   ; preds = %2253, %2249
  %2258 = phi i1 [ true, %2249 ], [ %2256, %2253 ]
  %2259 = select i1 %2258, i32 13, i32 0
  br label %2565

; <label>:2260:                                   ; preds = %originalBBpart2462
  %2261 = load i8, i8* %18, align 1
  %2262 = zext i8 %2261 to i32
  %2263 = icmp eq i32 %2262, 117
  br i1 %2263, label %2264, label %2291

; <label>:2264:                                   ; preds = %2260
  %2265 = load i32, i32* @target_flags, align 4
  %2266 = and i32 %2265, 1
  %2267 = icmp ne i32 %2266, 0
  br i1 %2267, label %2272, label %2268

; <label>:2268:                                   ; preds = %2264
  %2269 = load i32, i32* @target_flags, align 4
  %2270 = and i32 %2269, 32
  %2271 = icmp ne i32 %2270, 0
  br label %2272

; <label>:2272:                                   ; preds = %2268, %2264
  %2273 = phi i1 [ true, %2264 ], [ %2271, %2268 ]
  %2274 = load i32, i32* @x.11
  %2275 = load i32, i32* @y.12
  %2276 = sub i32 %2274, 1
  %2277 = mul i32 %2274, %2276
  %2278 = urem i32 %2277, 2
  %2279 = icmp eq i32 %2278, 0
  %2280 = icmp slt i32 %2275, 10
  %2281 = or i1 %2279, %2280
  br i1 %2281, label %originalBB464, label %originalBB464alteredBB

originalBB464:                                    ; preds = %originalBB464alteredBB, %2272
  %2282 = select i1 %2273, i32 14, i32 0
  %2283 = load i32, i32* @x.11
  %2284 = load i32, i32* @y.12
  %2285 = sub i32 %2283, 1
  %2286 = mul i32 %2283, %2285
  %2287 = urem i32 %2286, 2
  %2288 = icmp eq i32 %2287, 0
  %2289 = icmp slt i32 %2284, 10
  %2290 = or i1 %2288, %2289
  br i1 %2290, label %originalBBpart2466, label %originalBB464alteredBB

originalBBpart2466:                               ; preds = %originalBB464
  br label %2563

; <label>:2291:                                   ; preds = %2260
  %2292 = load i8, i8* %18, align 1
  %2293 = zext i8 %2292 to i32
  %2294 = icmp eq i32 %2293, 97
  br i1 %2294, label %2295, label %2312

; <label>:2295:                                   ; preds = %2291
  %2296 = load i32, i32* @x.11
  %2297 = load i32, i32* @y.12
  %2298 = sub i32 %2296, 1
  %2299 = mul i32 %2296, %2298
  %2300 = urem i32 %2299, 2
  %2301 = icmp eq i32 %2300, 0
  %2302 = icmp slt i32 %2297, 10
  %2303 = or i1 %2301, %2302
  br i1 %2303, label %originalBB468, label %originalBB468alteredBB

originalBB468:                                    ; preds = %originalBB468alteredBB, %2295
  %2304 = load i32, i32* @x.11
  %2305 = load i32, i32* @y.12
  %2306 = sub i32 %2304, 1
  %2307 = mul i32 %2304, %2306
  %2308 = urem i32 %2307, 2
  %2309 = icmp eq i32 %2308, 0
  %2310 = icmp slt i32 %2305, 10
  %2311 = or i1 %2309, %2310
  br i1 %2311, label %originalBBpart2470, label %originalBB468alteredBB

originalBBpart2470:                               ; preds = %originalBB468
  br label %2561

; <label>:2312:                                   ; preds = %2291
  %2313 = load i32, i32* @x.11
  %2314 = load i32, i32* @y.12
  %2315 = sub i32 %2313, 1
  %2316 = mul i32 %2313, %2315
  %2317 = urem i32 %2316, 2
  %2318 = icmp eq i32 %2317, 0
  %2319 = icmp slt i32 %2314, 10
  %2320 = or i1 %2318, %2319
  br i1 %2320, label %originalBB472, label %originalBB472alteredBB

originalBB472:                                    ; preds = %originalBB472alteredBB, %2312
  %2321 = load i8, i8* %18, align 1
  %2322 = zext i8 %2321 to i32
  %2323 = icmp eq i32 %2322, 98
  %2324 = load i32, i32* @x.11
  %2325 = load i32, i32* @y.12
  %2326 = sub i32 %2324, 1
  %2327 = mul i32 %2324, %2326
  %2328 = urem i32 %2327, 2
  %2329 = icmp eq i32 %2328, 0
  %2330 = icmp slt i32 %2325, 10
  %2331 = or i1 %2329, %2330
  br i1 %2331, label %originalBBpart2474, label %originalBB472alteredBB

originalBBpart2474:                               ; preds = %originalBB472
  br i1 %2323, label %2332, label %2333

; <label>:2332:                                   ; preds = %originalBBpart2474
  br label %2543

; <label>:2333:                                   ; preds = %originalBBpart2474
  %2334 = load i8, i8* %18, align 1
  %2335 = zext i8 %2334 to i32
  %2336 = icmp eq i32 %2335, 99
  br i1 %2336, label %2337, label %2338

; <label>:2337:                                   ; preds = %2333
  br label %2525

; <label>:2338:                                   ; preds = %2333
  %2339 = load i32, i32* @x.11
  %2340 = load i32, i32* @y.12
  %2341 = sub i32 %2339, 1
  %2342 = mul i32 %2339, %2341
  %2343 = urem i32 %2342, 2
  %2344 = icmp eq i32 %2343, 0
  %2345 = icmp slt i32 %2340, 10
  %2346 = or i1 %2344, %2345
  br i1 %2346, label %originalBB476, label %originalBB476alteredBB

originalBB476:                                    ; preds = %originalBB476alteredBB, %2338
  %2347 = load i8, i8* %18, align 1
  %2348 = zext i8 %2347 to i32
  %2349 = icmp eq i32 %2348, 100
  %2350 = load i32, i32* @x.11
  %2351 = load i32, i32* @y.12
  %2352 = sub i32 %2350, 1
  %2353 = mul i32 %2350, %2352
  %2354 = urem i32 %2353, 2
  %2355 = icmp eq i32 %2354, 0
  %2356 = icmp slt i32 %2351, 10
  %2357 = or i1 %2355, %2356
  br i1 %2357, label %originalBBpart2478, label %originalBB476alteredBB

originalBBpart2478:                               ; preds = %originalBB476
  br i1 %2349, label %2358, label %2375

; <label>:2358:                                   ; preds = %originalBBpart2478
  %2359 = load i32, i32* @x.11
  %2360 = load i32, i32* @y.12
  %2361 = sub i32 %2359, 1
  %2362 = mul i32 %2359, %2361
  %2363 = urem i32 %2362, 2
  %2364 = icmp eq i32 %2363, 0
  %2365 = icmp slt i32 %2360, 10
  %2366 = or i1 %2364, %2365
  br i1 %2366, label %originalBB480, label %originalBB480alteredBB

originalBB480:                                    ; preds = %originalBB480alteredBB, %2358
  %2367 = load i32, i32* @x.11
  %2368 = load i32, i32* @y.12
  %2369 = sub i32 %2367, 1
  %2370 = mul i32 %2367, %2369
  %2371 = urem i32 %2370, 2
  %2372 = icmp eq i32 %2371, 0
  %2373 = icmp slt i32 %2368, 10
  %2374 = or i1 %2372, %2373
  br i1 %2374, label %originalBBpart2482, label %originalBB480alteredBB

originalBBpart2482:                               ; preds = %originalBB480
  br label %2523

; <label>:2375:                                   ; preds = %originalBBpart2478
  %2376 = load i8, i8* %18, align 1
  %2377 = zext i8 %2376 to i32
  %2378 = icmp eq i32 %2377, 120
  br i1 %2378, label %2379, label %2384

; <label>:2379:                                   ; preds = %2375
  %2380 = load i32, i32* @target_flags, align 4
  %2381 = and i32 %2380, 327680
  %2382 = icmp ne i32 %2381, 0
  %2383 = select i1 %2382, i32 16, i32 0
  br label %2521

; <label>:2384:                                   ; preds = %2375
  %2385 = load i32, i32* @x.11
  %2386 = load i32, i32* @y.12
  %2387 = sub i32 %2385, 1
  %2388 = mul i32 %2385, %2387
  %2389 = urem i32 %2388, 2
  %2390 = icmp eq i32 %2389, 0
  %2391 = icmp slt i32 %2386, 10
  %2392 = or i1 %2390, %2391
  br i1 %2392, label %originalBB484, label %originalBB484alteredBB

originalBB484:                                    ; preds = %originalBB484alteredBB, %2384
  %2393 = load i8, i8* %18, align 1
  %2394 = zext i8 %2393 to i32
  %2395 = icmp eq i32 %2394, 89
  %2396 = load i32, i32* @x.11
  %2397 = load i32, i32* @y.12
  %2398 = sub i32 %2396, 1
  %2399 = mul i32 %2396, %2398
  %2400 = urem i32 %2399, 2
  %2401 = icmp eq i32 %2400, 0
  %2402 = icmp slt i32 %2397, 10
  %2403 = or i1 %2401, %2402
  br i1 %2403, label %originalBBpart2486, label %originalBB484alteredBB

originalBBpart2486:                               ; preds = %originalBB484
  br i1 %2395, label %2404, label %2425

; <label>:2404:                                   ; preds = %originalBBpart2486
  %2405 = load i32, i32* @x.11
  %2406 = load i32, i32* @y.12
  %2407 = sub i32 %2405, 1
  %2408 = mul i32 %2405, %2407
  %2409 = urem i32 %2408, 2
  %2410 = icmp eq i32 %2409, 0
  %2411 = icmp slt i32 %2406, 10
  %2412 = or i1 %2410, %2411
  br i1 %2412, label %originalBB488, label %originalBB488alteredBB

originalBB488:                                    ; preds = %originalBB488alteredBB, %2404
  %2413 = load i32, i32* @target_flags, align 4
  %2414 = and i32 %2413, 262144
  %2415 = icmp ne i32 %2414, 0
  %2416 = select i1 %2415, i32 16, i32 0
  %2417 = load i32, i32* @x.11
  %2418 = load i32, i32* @y.12
  %2419 = sub i32 %2417, 1
  %2420 = mul i32 %2417, %2419
  %2421 = urem i32 %2420, 2
  %2422 = icmp eq i32 %2421, 0
  %2423 = icmp slt i32 %2418, 10
  %2424 = or i1 %2422, %2423
  br i1 %2424, label %originalBBpart2492, label %originalBB488alteredBB

originalBBpart2492:                               ; preds = %originalBB488
  br label %2503

; <label>:2425:                                   ; preds = %originalBBpart2486
  %2426 = load i8, i8* %18, align 1
  %2427 = zext i8 %2426 to i32
  %2428 = icmp eq i32 %2427, 121
  br i1 %2428, label %2429, label %2434

; <label>:2429:                                   ; preds = %2425
  %2430 = load i32, i32* @target_flags, align 4
  %2431 = and i32 %2430, 16384
  %2432 = icmp ne i32 %2431, 0
  %2433 = select i1 %2432, i32 17, i32 0
  br label %2501

; <label>:2434:                                   ; preds = %2425
  %2435 = load i32, i32* @x.11
  %2436 = load i32, i32* @y.12
  %2437 = sub i32 %2435, 1
  %2438 = mul i32 %2435, %2437
  %2439 = urem i32 %2438, 2
  %2440 = icmp eq i32 %2439, 0
  %2441 = icmp slt i32 %2436, 10
  %2442 = or i1 %2440, %2441
  br i1 %2442, label %originalBB494, label %originalBB494alteredBB

originalBB494:                                    ; preds = %originalBB494alteredBB, %2434
  %2443 = load i8, i8* %18, align 1
  %2444 = zext i8 %2443 to i32
  %2445 = icmp eq i32 %2444, 65
  %2446 = load i32, i32* @x.11
  %2447 = load i32, i32* @y.12
  %2448 = sub i32 %2446, 1
  %2449 = mul i32 %2446, %2448
  %2450 = urem i32 %2449, 2
  %2451 = icmp eq i32 %2450, 0
  %2452 = icmp slt i32 %2447, 10
  %2453 = or i1 %2451, %2452
  br i1 %2453, label %originalBBpart2496, label %originalBB494alteredBB

originalBBpart2496:                               ; preds = %originalBB494
  br i1 %2445, label %2454, label %2471

; <label>:2454:                                   ; preds = %originalBBpart2496
  %2455 = load i32, i32* @x.11
  %2456 = load i32, i32* @y.12
  %2457 = sub i32 %2455, 1
  %2458 = mul i32 %2455, %2457
  %2459 = urem i32 %2458, 2
  %2460 = icmp eq i32 %2459, 0
  %2461 = icmp slt i32 %2456, 10
  %2462 = or i1 %2460, %2461
  br i1 %2462, label %originalBB498, label %originalBB498alteredBB

originalBB498:                                    ; preds = %originalBB498alteredBB, %2454
  %2463 = load i32, i32* @x.11
  %2464 = load i32, i32* @y.12
  %2465 = sub i32 %2463, 1
  %2466 = mul i32 %2463, %2465
  %2467 = urem i32 %2466, 2
  %2468 = icmp eq i32 %2467, 0
  %2469 = icmp slt i32 %2464, 10
  %2470 = or i1 %2468, %2469
  br i1 %2470, label %originalBBpart2500, label %originalBB498alteredBB

originalBBpart2500:                               ; preds = %originalBB498
  br label %2499

; <label>:2471:                                   ; preds = %originalBBpart2496
  %2472 = load i8, i8* %18, align 1
  %2473 = zext i8 %2472 to i32
  %2474 = icmp eq i32 %2473, 68
  br i1 %2474, label %2475, label %2476

; <label>:2475:                                   ; preds = %2471
  br label %2481

; <label>:2476:                                   ; preds = %2471
  %2477 = load i8, i8* %18, align 1
  %2478 = zext i8 %2477 to i32
  %2479 = icmp eq i32 %2478, 83
  %2480 = select i1 %2479, i32 5, i32 0
  br label %2481

; <label>:2481:                                   ; preds = %2476, %2475
  %2482 = phi i32 [ 6, %2475 ], [ %2480, %2476 ]
  %2483 = load i32, i32* @x.11
  %2484 = load i32, i32* @y.12
  %2485 = sub i32 %2483, 1
  %2486 = mul i32 %2483, %2485
  %2487 = urem i32 %2486, 2
  %2488 = icmp eq i32 %2487, 0
  %2489 = icmp slt i32 %2484, 10
  %2490 = or i1 %2488, %2489
  br i1 %2490, label %originalBB502, label %originalBB502alteredBB

originalBB502:                                    ; preds = %originalBB502alteredBB, %2481
  %2491 = load i32, i32* @x.11
  %2492 = load i32, i32* @y.12
  %2493 = sub i32 %2491, 1
  %2494 = mul i32 %2491, %2493
  %2495 = urem i32 %2494, 2
  %2496 = icmp eq i32 %2495, 0
  %2497 = icmp slt i32 %2492, 10
  %2498 = or i1 %2496, %2497
  br i1 %2498, label %originalBBpart2504, label %originalBB502alteredBB

originalBBpart2504:                               ; preds = %originalBB502
  br label %2499

; <label>:2499:                                   ; preds = %originalBBpart2504, %originalBBpart2500
  %2500 = phi i32 [ 7, %originalBBpart2500 ], [ %2482, %originalBBpart2504 ]
  br label %2501

; <label>:2501:                                   ; preds = %2499, %2429
  %2502 = phi i32 [ %2433, %2429 ], [ %2500, %2499 ]
  br label %2503

; <label>:2503:                                   ; preds = %2501, %originalBBpart2492
  %2504 = phi i32 [ %2416, %originalBBpart2492 ], [ %2502, %2501 ]
  %2505 = load i32, i32* @x.11
  %2506 = load i32, i32* @y.12
  %2507 = sub i32 %2505, 1
  %2508 = mul i32 %2505, %2507
  %2509 = urem i32 %2508, 2
  %2510 = icmp eq i32 %2509, 0
  %2511 = icmp slt i32 %2506, 10
  %2512 = or i1 %2510, %2511
  br i1 %2512, label %originalBB506, label %originalBB506alteredBB

originalBB506:                                    ; preds = %originalBB506alteredBB, %2503
  %2513 = load i32, i32* @x.11
  %2514 = load i32, i32* @y.12
  %2515 = sub i32 %2513, 1
  %2516 = mul i32 %2513, %2515
  %2517 = urem i32 %2516, 2
  %2518 = icmp eq i32 %2517, 0
  %2519 = icmp slt i32 %2514, 10
  %2520 = or i1 %2518, %2519
  br i1 %2520, label %originalBBpart2508, label %originalBB506alteredBB

originalBBpart2508:                               ; preds = %originalBB506
  br label %2521

; <label>:2521:                                   ; preds = %originalBBpart2508, %2379
  %2522 = phi i32 [ %2383, %2379 ], [ %2504, %originalBBpart2508 ]
  br label %2523

; <label>:2523:                                   ; preds = %2521, %originalBBpart2482
  %2524 = phi i32 [ 2, %originalBBpart2482 ], [ %2522, %2521 ]
  br label %2525

; <label>:2525:                                   ; preds = %2523, %2337
  %2526 = phi i32 [ 3, %2337 ], [ %2524, %2523 ]
  %2527 = load i32, i32* @x.11
  %2528 = load i32, i32* @y.12
  %2529 = sub i32 %2527, 1
  %2530 = mul i32 %2527, %2529
  %2531 = urem i32 %2530, 2
  %2532 = icmp eq i32 %2531, 0
  %2533 = icmp slt i32 %2528, 10
  %2534 = or i1 %2532, %2533
  br i1 %2534, label %originalBB510, label %originalBB510alteredBB

originalBB510:                                    ; preds = %originalBB510alteredBB, %2525
  %2535 = load i32, i32* @x.11
  %2536 = load i32, i32* @y.12
  %2537 = sub i32 %2535, 1
  %2538 = mul i32 %2535, %2537
  %2539 = urem i32 %2538, 2
  %2540 = icmp eq i32 %2539, 0
  %2541 = icmp slt i32 %2536, 10
  %2542 = or i1 %2540, %2541
  br i1 %2542, label %originalBBpart2512, label %originalBB510alteredBB

originalBBpart2512:                               ; preds = %originalBB510
  br label %2543

; <label>:2543:                                   ; preds = %originalBBpart2512, %2332
  %2544 = phi i32 [ 4, %2332 ], [ %2526, %originalBBpart2512 ]
  %2545 = load i32, i32* @x.11
  %2546 = load i32, i32* @y.12
  %2547 = sub i32 %2545, 1
  %2548 = mul i32 %2545, %2547
  %2549 = urem i32 %2548, 2
  %2550 = icmp eq i32 %2549, 0
  %2551 = icmp slt i32 %2546, 10
  %2552 = or i1 %2550, %2551
  br i1 %2552, label %originalBB514, label %originalBB514alteredBB

originalBB514:                                    ; preds = %originalBB514alteredBB, %2543
  %2553 = load i32, i32* @x.11
  %2554 = load i32, i32* @y.12
  %2555 = sub i32 %2553, 1
  %2556 = mul i32 %2553, %2555
  %2557 = urem i32 %2556, 2
  %2558 = icmp eq i32 %2557, 0
  %2559 = icmp slt i32 %2554, 10
  %2560 = or i1 %2558, %2559
  br i1 %2560, label %originalBBpart2516, label %originalBB514alteredBB

originalBBpart2516:                               ; preds = %originalBB514
  br label %2561

; <label>:2561:                                   ; preds = %originalBBpart2516, %originalBBpart2470
  %2562 = phi i32 [ 1, %originalBBpart2470 ], [ %2544, %originalBBpart2516 ]
  br label %2563

; <label>:2563:                                   ; preds = %2561, %originalBBpart2466
  %2564 = phi i32 [ %2282, %originalBBpart2466 ], [ %2562, %2561 ]
  br label %2565

; <label>:2565:                                   ; preds = %2563, %2257
  %2566 = phi i32 [ %2259, %2257 ], [ %2564, %2563 ]
  br label %2567

; <label>:2567:                                   ; preds = %2565, %2226
  %2568 = phi i32 [ %2228, %2226 ], [ %2566, %2565 ]
  br label %2569

; <label>:2569:                                   ; preds = %2567, %2197
  %2570 = phi i32 [ 8, %2197 ], [ %2568, %2567 ]
  %2571 = load i32, i32* @x.11
  %2572 = load i32, i32* @y.12
  %2573 = sub i32 %2571, 1
  %2574 = mul i32 %2571, %2573
  %2575 = urem i32 %2574, 2
  %2576 = icmp eq i32 %2575, 0
  %2577 = icmp slt i32 %2572, 10
  %2578 = or i1 %2576, %2577
  br i1 %2578, label %originalBB518, label %originalBB518alteredBB

originalBB518:                                    ; preds = %originalBB518alteredBB, %2569
  %2579 = load i32, i32* @x.11
  %2580 = load i32, i32* @y.12
  %2581 = sub i32 %2579, 1
  %2582 = mul i32 %2579, %2581
  %2583 = urem i32 %2582, 2
  %2584 = icmp eq i32 %2583, 0
  %2585 = icmp slt i32 %2580, 10
  %2586 = or i1 %2584, %2585
  br i1 %2586, label %originalBBpart2520, label %originalBB518alteredBB

originalBBpart2520:                               ; preds = %originalBB518
  br label %2587

; <label>:2587:                                   ; preds = %originalBBpart2520, %2188
  %2588 = phi i32 [ %2192, %2188 ], [ %2570, %originalBBpart2520 ]
  br label %2589

; <label>:2589:                                   ; preds = %2587, %originalBBpart2441
  %2590 = phi i32 [ 11, %originalBBpart2441 ], [ %2588, %2587 ]
  br label %2591

; <label>:2591:                                   ; preds = %2589, %2146
  %2592 = phi i32 [ 12, %2146 ], [ %2590, %2589 ]
  %2593 = load i32, i32* @x.11
  %2594 = load i32, i32* @y.12
  %2595 = sub i32 %2593, 1
  %2596 = mul i32 %2593, %2595
  %2597 = urem i32 %2596, 2
  %2598 = icmp eq i32 %2597, 0
  %2599 = icmp slt i32 %2594, 10
  %2600 = or i1 %2598, %2599
  br i1 %2600, label %originalBB522, label %originalBB522alteredBB

originalBB522:                                    ; preds = %originalBB522alteredBB, %2591
  %2601 = icmp eq i32 %2592, 7
  %2602 = load i32, i32* @x.11
  %2603 = load i32, i32* @y.12
  %2604 = sub i32 %2602, 1
  %2605 = mul i32 %2602, %2604
  %2606 = urem i32 %2605, 2
  %2607 = icmp eq i32 %2606, 0
  %2608 = icmp slt i32 %2603, 10
  %2609 = or i1 %2607, %2608
  br i1 %2609, label %originalBBpart2524, label %originalBB522alteredBB

originalBBpart2524:                               ; preds = %originalBB522
  br i1 %2601, label %3434, label %2610

; <label>:2610:                                   ; preds = %originalBBpart2524
  %2611 = load i8, i8* %18, align 1
  %2612 = zext i8 %2611 to i32
  %2613 = icmp eq i32 %2612, 114
  br i1 %2613, label %2614, label %2631

; <label>:2614:                                   ; preds = %2610
  %2615 = load i32, i32* @x.11
  %2616 = load i32, i32* @y.12
  %2617 = sub i32 %2615, 1
  %2618 = mul i32 %2615, %2617
  %2619 = urem i32 %2618, 2
  %2620 = icmp eq i32 %2619, 0
  %2621 = icmp slt i32 %2616, 10
  %2622 = or i1 %2620, %2621
  br i1 %2622, label %originalBB526, label %originalBB526alteredBB

originalBB526:                                    ; preds = %originalBB526alteredBB, %2614
  %2623 = load i32, i32* @x.11
  %2624 = load i32, i32* @y.12
  %2625 = sub i32 %2623, 1
  %2626 = mul i32 %2623, %2625
  %2627 = urem i32 %2626, 2
  %2628 = icmp eq i32 %2627, 0
  %2629 = icmp slt i32 %2624, 10
  %2630 = or i1 %2628, %2629
  br i1 %2630, label %originalBBpart2528, label %originalBB526alteredBB

originalBBpart2528:                               ; preds = %originalBB526
  br label %2947

; <label>:2631:                                   ; preds = %2610
  %2632 = load i8, i8* %18, align 1
  %2633 = zext i8 %2632 to i32
  %2634 = icmp eq i32 %2633, 82
  br i1 %2634, label %2635, label %2652

; <label>:2635:                                   ; preds = %2631
  %2636 = load i32, i32* @x.11
  %2637 = load i32, i32* @y.12
  %2638 = sub i32 %2636, 1
  %2639 = mul i32 %2636, %2638
  %2640 = urem i32 %2639, 2
  %2641 = icmp eq i32 %2640, 0
  %2642 = icmp slt i32 %2637, 10
  %2643 = or i1 %2641, %2642
  br i1 %2643, label %originalBB530, label %originalBB530alteredBB

originalBB530:                                    ; preds = %originalBB530alteredBB, %2635
  %2644 = load i32, i32* @x.11
  %2645 = load i32, i32* @y.12
  %2646 = sub i32 %2644, 1
  %2647 = mul i32 %2644, %2646
  %2648 = urem i32 %2647, 2
  %2649 = icmp eq i32 %2648, 0
  %2650 = icmp slt i32 %2645, 10
  %2651 = or i1 %2649, %2650
  br i1 %2651, label %originalBBpart2532, label %originalBB530alteredBB

originalBBpart2532:                               ; preds = %originalBB530
  br label %2945

; <label>:2652:                                   ; preds = %2631
  %2653 = load i8, i8* %18, align 1
  %2654 = zext i8 %2653 to i32
  %2655 = icmp eq i32 %2654, 113
  br i1 %2655, label %2656, label %2661

; <label>:2656:                                   ; preds = %2652
  %2657 = load i32, i32* @target_flags, align 4
  %2658 = and i32 %2657, 33554432
  %2659 = icmp ne i32 %2658, 0
  %2660 = select i1 %2659, i32 12, i32 8
  br label %2943

; <label>:2661:                                   ; preds = %2652
  %2662 = load i8, i8* %18, align 1
  %2663 = zext i8 %2662 to i32
  %2664 = icmp eq i32 %2663, 81
  br i1 %2664, label %2665, label %2666

; <label>:2665:                                   ; preds = %2661
  br label %2941

; <label>:2666:                                   ; preds = %2661
  %2667 = load i8, i8* %18, align 1
  %2668 = zext i8 %2667 to i32
  %2669 = icmp eq i32 %2668, 102
  br i1 %2669, label %2670, label %2697

; <label>:2670:                                   ; preds = %2666
  %2671 = load i32, i32* @x.11
  %2672 = load i32, i32* @y.12
  %2673 = sub i32 %2671, 1
  %2674 = mul i32 %2671, %2673
  %2675 = urem i32 %2674, 2
  %2676 = icmp eq i32 %2675, 0
  %2677 = icmp slt i32 %2672, 10
  %2678 = or i1 %2676, %2677
  br i1 %2678, label %originalBB534, label %originalBB534alteredBB

originalBB534:                                    ; preds = %originalBB534alteredBB, %2670
  %2679 = load i32, i32* @target_flags, align 4
  %2680 = and i32 %2679, 1
  %2681 = icmp ne i32 %2680, 0
  %2682 = load i32, i32* @x.11
  %2683 = load i32, i32* @y.12
  %2684 = sub i32 %2682, 1
  %2685 = mul i32 %2682, %2684
  %2686 = urem i32 %2685, 2
  %2687 = icmp eq i32 %2686, 0
  %2688 = icmp slt i32 %2683, 10
  %2689 = or i1 %2687, %2688
  br i1 %2689, label %originalBBpart2540, label %originalBB534alteredBB

originalBBpart2540:                               ; preds = %originalBB534
  br i1 %2681, label %2694, label %2690

; <label>:2690:                                   ; preds = %originalBBpart2540
  %2691 = load i32, i32* @target_flags, align 4
  %2692 = and i32 %2691, 32
  %2693 = icmp ne i32 %2692, 0
  br label %2694

; <label>:2694:                                   ; preds = %2690, %originalBBpart2540
  %2695 = phi i1 [ true, %originalBBpart2540 ], [ %2693, %2690 ]
  %2696 = select i1 %2695, i32 15, i32 0
  br label %2939

; <label>:2697:                                   ; preds = %2666
  %2698 = load i32, i32* @x.11
  %2699 = load i32, i32* @y.12
  %2700 = sub i32 %2698, 1
  %2701 = mul i32 %2698, %2700
  %2702 = urem i32 %2701, 2
  %2703 = icmp eq i32 %2702, 0
  %2704 = icmp slt i32 %2699, 10
  %2705 = or i1 %2703, %2704
  br i1 %2705, label %originalBB542, label %originalBB542alteredBB

originalBB542:                                    ; preds = %originalBB542alteredBB, %2697
  %2706 = load i8, i8* %18, align 1
  %2707 = zext i8 %2706 to i32
  %2708 = icmp eq i32 %2707, 116
  %2709 = load i32, i32* @x.11
  %2710 = load i32, i32* @y.12
  %2711 = sub i32 %2709, 1
  %2712 = mul i32 %2709, %2711
  %2713 = urem i32 %2712, 2
  %2714 = icmp eq i32 %2713, 0
  %2715 = icmp slt i32 %2710, 10
  %2716 = or i1 %2714, %2715
  br i1 %2716, label %originalBBpart2544, label %originalBB542alteredBB

originalBBpart2544:                               ; preds = %originalBB542
  br i1 %2708, label %2717, label %2744

; <label>:2717:                                   ; preds = %originalBBpart2544
  %2718 = load i32, i32* @target_flags, align 4
  %2719 = and i32 %2718, 1
  %2720 = icmp ne i32 %2719, 0
  br i1 %2720, label %2725, label %2721

; <label>:2721:                                   ; preds = %2717
  %2722 = load i32, i32* @target_flags, align 4
  %2723 = and i32 %2722, 32
  %2724 = icmp ne i32 %2723, 0
  br label %2725

; <label>:2725:                                   ; preds = %2721, %2717
  %2726 = phi i1 [ true, %2717 ], [ %2724, %2721 ]
  %2727 = load i32, i32* @x.11
  %2728 = load i32, i32* @y.12
  %2729 = sub i32 %2727, 1
  %2730 = mul i32 %2727, %2729
  %2731 = urem i32 %2730, 2
  %2732 = icmp eq i32 %2731, 0
  %2733 = icmp slt i32 %2728, 10
  %2734 = or i1 %2732, %2733
  br i1 %2734, label %originalBB546, label %originalBB546alteredBB

originalBB546:                                    ; preds = %originalBB546alteredBB, %2725
  %2735 = select i1 %2726, i32 13, i32 0
  %2736 = load i32, i32* @x.11
  %2737 = load i32, i32* @y.12
  %2738 = sub i32 %2736, 1
  %2739 = mul i32 %2736, %2738
  %2740 = urem i32 %2739, 2
  %2741 = icmp eq i32 %2740, 0
  %2742 = icmp slt i32 %2737, 10
  %2743 = or i1 %2741, %2742
  br i1 %2743, label %originalBBpart2548, label %originalBB546alteredBB

originalBBpart2548:                               ; preds = %originalBB546
  br label %2937

; <label>:2744:                                   ; preds = %originalBBpart2544
  %2745 = load i8, i8* %18, align 1
  %2746 = zext i8 %2745 to i32
  %2747 = icmp eq i32 %2746, 117
  br i1 %2747, label %2748, label %2775

; <label>:2748:                                   ; preds = %2744
  %2749 = load i32, i32* @x.11
  %2750 = load i32, i32* @y.12
  %2751 = sub i32 %2749, 1
  %2752 = mul i32 %2749, %2751
  %2753 = urem i32 %2752, 2
  %2754 = icmp eq i32 %2753, 0
  %2755 = icmp slt i32 %2750, 10
  %2756 = or i1 %2754, %2755
  br i1 %2756, label %originalBB550, label %originalBB550alteredBB

originalBB550:                                    ; preds = %originalBB550alteredBB, %2748
  %2757 = load i32, i32* @target_flags, align 4
  %2758 = and i32 %2757, 1
  %2759 = icmp ne i32 %2758, 0
  %2760 = load i32, i32* @x.11
  %2761 = load i32, i32* @y.12
  %2762 = sub i32 %2760, 1
  %2763 = mul i32 %2760, %2762
  %2764 = urem i32 %2763, 2
  %2765 = icmp eq i32 %2764, 0
  %2766 = icmp slt i32 %2761, 10
  %2767 = or i1 %2765, %2766
  br i1 %2767, label %originalBBpart2568, label %originalBB550alteredBB

originalBBpart2568:                               ; preds = %originalBB550
  br i1 %2759, label %2772, label %2768

; <label>:2768:                                   ; preds = %originalBBpart2568
  %2769 = load i32, i32* @target_flags, align 4
  %2770 = and i32 %2769, 32
  %2771 = icmp ne i32 %2770, 0
  br label %2772

; <label>:2772:                                   ; preds = %2768, %originalBBpart2568
  %2773 = phi i1 [ true, %originalBBpart2568 ], [ %2771, %2768 ]
  %2774 = select i1 %2773, i32 14, i32 0
  br label %2935

; <label>:2775:                                   ; preds = %2744
  %2776 = load i8, i8* %18, align 1
  %2777 = zext i8 %2776 to i32
  %2778 = icmp eq i32 %2777, 97
  br i1 %2778, label %2779, label %2796

; <label>:2779:                                   ; preds = %2775
  %2780 = load i32, i32* @x.11
  %2781 = load i32, i32* @y.12
  %2782 = sub i32 %2780, 1
  %2783 = mul i32 %2780, %2782
  %2784 = urem i32 %2783, 2
  %2785 = icmp eq i32 %2784, 0
  %2786 = icmp slt i32 %2781, 10
  %2787 = or i1 %2785, %2786
  br i1 %2787, label %originalBB570, label %originalBB570alteredBB

originalBB570:                                    ; preds = %originalBB570alteredBB, %2779
  %2788 = load i32, i32* @x.11
  %2789 = load i32, i32* @y.12
  %2790 = sub i32 %2788, 1
  %2791 = mul i32 %2788, %2790
  %2792 = urem i32 %2791, 2
  %2793 = icmp eq i32 %2792, 0
  %2794 = icmp slt i32 %2789, 10
  %2795 = or i1 %2793, %2794
  br i1 %2795, label %originalBBpart2572, label %originalBB570alteredBB

originalBBpart2572:                               ; preds = %originalBB570
  br label %2933

; <label>:2796:                                   ; preds = %2775
  %2797 = load i8, i8* %18, align 1
  %2798 = zext i8 %2797 to i32
  %2799 = icmp eq i32 %2798, 98
  br i1 %2799, label %2800, label %2817

; <label>:2800:                                   ; preds = %2796
  %2801 = load i32, i32* @x.11
  %2802 = load i32, i32* @y.12
  %2803 = sub i32 %2801, 1
  %2804 = mul i32 %2801, %2803
  %2805 = urem i32 %2804, 2
  %2806 = icmp eq i32 %2805, 0
  %2807 = icmp slt i32 %2802, 10
  %2808 = or i1 %2806, %2807
  br i1 %2808, label %originalBB574, label %originalBB574alteredBB

originalBB574:                                    ; preds = %originalBB574alteredBB, %2800
  %2809 = load i32, i32* @x.11
  %2810 = load i32, i32* @y.12
  %2811 = sub i32 %2809, 1
  %2812 = mul i32 %2809, %2811
  %2813 = urem i32 %2812, 2
  %2814 = icmp eq i32 %2813, 0
  %2815 = icmp slt i32 %2810, 10
  %2816 = or i1 %2814, %2815
  br i1 %2816, label %originalBBpart2576, label %originalBB574alteredBB

originalBBpart2576:                               ; preds = %originalBB574
  br label %2931

; <label>:2817:                                   ; preds = %2796
  %2818 = load i8, i8* %18, align 1
  %2819 = zext i8 %2818 to i32
  %2820 = icmp eq i32 %2819, 99
  br i1 %2820, label %2821, label %2822

; <label>:2821:                                   ; preds = %2817
  br label %2929

; <label>:2822:                                   ; preds = %2817
  %2823 = load i8, i8* %18, align 1
  %2824 = zext i8 %2823 to i32
  %2825 = icmp eq i32 %2824, 100
  br i1 %2825, label %2826, label %2827

; <label>:2826:                                   ; preds = %2822
  br label %2927

; <label>:2827:                                   ; preds = %2822
  %2828 = load i8, i8* %18, align 1
  %2829 = zext i8 %2828 to i32
  %2830 = icmp eq i32 %2829, 120
  br i1 %2830, label %2831, label %2836

; <label>:2831:                                   ; preds = %2827
  %2832 = load i32, i32* @target_flags, align 4
  %2833 = and i32 %2832, 327680
  %2834 = icmp ne i32 %2833, 0
  %2835 = select i1 %2834, i32 16, i32 0
  br label %2925

; <label>:2836:                                   ; preds = %2827
  %2837 = load i8, i8* %18, align 1
  %2838 = zext i8 %2837 to i32
  %2839 = icmp eq i32 %2838, 89
  br i1 %2839, label %2840, label %2845

; <label>:2840:                                   ; preds = %2836
  %2841 = load i32, i32* @target_flags, align 4
  %2842 = and i32 %2841, 262144
  %2843 = icmp ne i32 %2842, 0
  %2844 = select i1 %2843, i32 16, i32 0
  br label %2923

; <label>:2845:                                   ; preds = %2836
  %2846 = load i8, i8* %18, align 1
  %2847 = zext i8 %2846 to i32
  %2848 = icmp eq i32 %2847, 121
  br i1 %2848, label %2849, label %2854

; <label>:2849:                                   ; preds = %2845
  %2850 = load i32, i32* @target_flags, align 4
  %2851 = and i32 %2850, 16384
  %2852 = icmp ne i32 %2851, 0
  %2853 = select i1 %2852, i32 17, i32 0
  br label %2905

; <label>:2854:                                   ; preds = %2845
  %2855 = load i32, i32* @x.11
  %2856 = load i32, i32* @y.12
  %2857 = sub i32 %2855, 1
  %2858 = mul i32 %2855, %2857
  %2859 = urem i32 %2858, 2
  %2860 = icmp eq i32 %2859, 0
  %2861 = icmp slt i32 %2856, 10
  %2862 = or i1 %2860, %2861
  br i1 %2862, label %originalBB578, label %originalBB578alteredBB

originalBB578:                                    ; preds = %originalBB578alteredBB, %2854
  %2863 = load i8, i8* %18, align 1
  %2864 = zext i8 %2863 to i32
  %2865 = icmp eq i32 %2864, 65
  %2866 = load i32, i32* @x.11
  %2867 = load i32, i32* @y.12
  %2868 = sub i32 %2866, 1
  %2869 = mul i32 %2866, %2868
  %2870 = urem i32 %2869, 2
  %2871 = icmp eq i32 %2870, 0
  %2872 = icmp slt i32 %2867, 10
  %2873 = or i1 %2871, %2872
  br i1 %2873, label %originalBBpart2580, label %originalBB578alteredBB

originalBBpart2580:                               ; preds = %originalBB578
  br i1 %2865, label %2874, label %2875

; <label>:2874:                                   ; preds = %originalBBpart2580
  br label %2887

; <label>:2875:                                   ; preds = %originalBBpart2580
  %2876 = load i8, i8* %18, align 1
  %2877 = zext i8 %2876 to i32
  %2878 = icmp eq i32 %2877, 68
  br i1 %2878, label %2879, label %2880

; <label>:2879:                                   ; preds = %2875
  br label %2885

; <label>:2880:                                   ; preds = %2875
  %2881 = load i8, i8* %18, align 1
  %2882 = zext i8 %2881 to i32
  %2883 = icmp eq i32 %2882, 83
  %2884 = select i1 %2883, i32 5, i32 0
  br label %2885

; <label>:2885:                                   ; preds = %2880, %2879
  %2886 = phi i32 [ 6, %2879 ], [ %2884, %2880 ]
  br label %2887

; <label>:2887:                                   ; preds = %2885, %2874
  %2888 = phi i32 [ 7, %2874 ], [ %2886, %2885 ]
  %2889 = load i32, i32* @x.11
  %2890 = load i32, i32* @y.12
  %2891 = sub i32 %2889, 1
  %2892 = mul i32 %2889, %2891
  %2893 = urem i32 %2892, 2
  %2894 = icmp eq i32 %2893, 0
  %2895 = icmp slt i32 %2890, 10
  %2896 = or i1 %2894, %2895
  br i1 %2896, label %originalBB582, label %originalBB582alteredBB

originalBB582:                                    ; preds = %originalBB582alteredBB, %2887
  %2897 = load i32, i32* @x.11
  %2898 = load i32, i32* @y.12
  %2899 = sub i32 %2897, 1
  %2900 = mul i32 %2897, %2899
  %2901 = urem i32 %2900, 2
  %2902 = icmp eq i32 %2901, 0
  %2903 = icmp slt i32 %2898, 10
  %2904 = or i1 %2902, %2903
  br i1 %2904, label %originalBBpart2584, label %originalBB582alteredBB

originalBBpart2584:                               ; preds = %originalBB582
  br label %2905

; <label>:2905:                                   ; preds = %originalBBpart2584, %2849
  %2906 = phi i32 [ %2853, %2849 ], [ %2888, %originalBBpart2584 ]
  %2907 = load i32, i32* @x.11
  %2908 = load i32, i32* @y.12
  %2909 = sub i32 %2907, 1
  %2910 = mul i32 %2907, %2909
  %2911 = urem i32 %2910, 2
  %2912 = icmp eq i32 %2911, 0
  %2913 = icmp slt i32 %2908, 10
  %2914 = or i1 %2912, %2913
  br i1 %2914, label %originalBB586, label %originalBB586alteredBB

originalBB586:                                    ; preds = %originalBB586alteredBB, %2905
  %2915 = load i32, i32* @x.11
  %2916 = load i32, i32* @y.12
  %2917 = sub i32 %2915, 1
  %2918 = mul i32 %2915, %2917
  %2919 = urem i32 %2918, 2
  %2920 = icmp eq i32 %2919, 0
  %2921 = icmp slt i32 %2916, 10
  %2922 = or i1 %2920, %2921
  br i1 %2922, label %originalBBpart2588, label %originalBB586alteredBB

originalBBpart2588:                               ; preds = %originalBB586
  br label %2923

; <label>:2923:                                   ; preds = %originalBBpart2588, %2840
  %2924 = phi i32 [ %2844, %2840 ], [ %2906, %originalBBpart2588 ]
  br label %2925

; <label>:2925:                                   ; preds = %2923, %2831
  %2926 = phi i32 [ %2835, %2831 ], [ %2924, %2923 ]
  br label %2927

; <label>:2927:                                   ; preds = %2925, %2826
  %2928 = phi i32 [ 2, %2826 ], [ %2926, %2925 ]
  br label %2929

; <label>:2929:                                   ; preds = %2927, %2821
  %2930 = phi i32 [ 3, %2821 ], [ %2928, %2927 ]
  br label %2931

; <label>:2931:                                   ; preds = %2929, %originalBBpart2576
  %2932 = phi i32 [ 4, %originalBBpart2576 ], [ %2930, %2929 ]
  br label %2933

; <label>:2933:                                   ; preds = %2931, %originalBBpart2572
  %2934 = phi i32 [ 1, %originalBBpart2572 ], [ %2932, %2931 ]
  br label %2935

; <label>:2935:                                   ; preds = %2933, %2772
  %2936 = phi i32 [ %2774, %2772 ], [ %2934, %2933 ]
  br label %2937

; <label>:2937:                                   ; preds = %2935, %originalBBpart2548
  %2938 = phi i32 [ %2735, %originalBBpart2548 ], [ %2936, %2935 ]
  br label %2939

; <label>:2939:                                   ; preds = %2937, %2694
  %2940 = phi i32 [ %2696, %2694 ], [ %2938, %2937 ]
  br label %2941

; <label>:2941:                                   ; preds = %2939, %2665
  %2942 = phi i32 [ 8, %2665 ], [ %2940, %2939 ]
  br label %2943

; <label>:2943:                                   ; preds = %2941, %2656
  %2944 = phi i32 [ %2660, %2656 ], [ %2942, %2941 ]
  br label %2945

; <label>:2945:                                   ; preds = %2943, %originalBBpart2532
  %2946 = phi i32 [ 11, %originalBBpart2532 ], [ %2944, %2943 ]
  br label %2947

; <label>:2947:                                   ; preds = %2945, %originalBBpart2528
  %2948 = phi i32 [ 12, %originalBBpart2528 ], [ %2946, %2945 ]
  %2949 = icmp eq i32 %2948, 5
  br i1 %2949, label %3434, label %2950

; <label>:2950:                                   ; preds = %2947
  %2951 = load i8, i8* %18, align 1
  %2952 = zext i8 %2951 to i32
  %2953 = icmp eq i32 %2952, 114
  br i1 %2953, label %2954, label %2971

; <label>:2954:                                   ; preds = %2950
  %2955 = load i32, i32* @x.11
  %2956 = load i32, i32* @y.12
  %2957 = sub i32 %2955, 1
  %2958 = mul i32 %2955, %2957
  %2959 = urem i32 %2958, 2
  %2960 = icmp eq i32 %2959, 0
  %2961 = icmp slt i32 %2956, 10
  %2962 = or i1 %2960, %2961
  br i1 %2962, label %originalBB590, label %originalBB590alteredBB

originalBB590:                                    ; preds = %originalBB590alteredBB, %2954
  %2963 = load i32, i32* @x.11
  %2964 = load i32, i32* @y.12
  %2965 = sub i32 %2963, 1
  %2966 = mul i32 %2963, %2965
  %2967 = urem i32 %2966, 2
  %2968 = icmp eq i32 %2967, 0
  %2969 = icmp slt i32 %2964, 10
  %2970 = or i1 %2968, %2969
  br i1 %2970, label %originalBBpart2592, label %originalBB590alteredBB

originalBBpart2592:                               ; preds = %originalBB590
  br label %3431

; <label>:2971:                                   ; preds = %2950
  %2972 = load i8, i8* %18, align 1
  %2973 = zext i8 %2972 to i32
  %2974 = icmp eq i32 %2973, 82
  br i1 %2974, label %2975, label %2976

; <label>:2975:                                   ; preds = %2971
  br label %3429

; <label>:2976:                                   ; preds = %2971
  %2977 = load i8, i8* %18, align 1
  %2978 = zext i8 %2977 to i32
  %2979 = icmp eq i32 %2978, 113
  br i1 %2979, label %2980, label %3001

; <label>:2980:                                   ; preds = %2976
  %2981 = load i32, i32* @x.11
  %2982 = load i32, i32* @y.12
  %2983 = sub i32 %2981, 1
  %2984 = mul i32 %2981, %2983
  %2985 = urem i32 %2984, 2
  %2986 = icmp eq i32 %2985, 0
  %2987 = icmp slt i32 %2982, 10
  %2988 = or i1 %2986, %2987
  br i1 %2988, label %originalBB594, label %originalBB594alteredBB

originalBB594:                                    ; preds = %originalBB594alteredBB, %2980
  %2989 = load i32, i32* @target_flags, align 4
  %2990 = and i32 %2989, 33554432
  %2991 = icmp ne i32 %2990, 0
  %2992 = select i1 %2991, i32 12, i32 8
  %2993 = load i32, i32* @x.11
  %2994 = load i32, i32* @y.12
  %2995 = sub i32 %2993, 1
  %2996 = mul i32 %2993, %2995
  %2997 = urem i32 %2996, 2
  %2998 = icmp eq i32 %2997, 0
  %2999 = icmp slt i32 %2994, 10
  %3000 = or i1 %2998, %2999
  br i1 %3000, label %originalBBpart2601, label %originalBB594alteredBB

originalBBpart2601:                               ; preds = %originalBB594
  br label %3411

; <label>:3001:                                   ; preds = %2976
  %3002 = load i8, i8* %18, align 1
  %3003 = zext i8 %3002 to i32
  %3004 = icmp eq i32 %3003, 81
  br i1 %3004, label %3005, label %3006

; <label>:3005:                                   ; preds = %3001
  br label %3409

; <label>:3006:                                   ; preds = %3001
  %3007 = load i8, i8* %18, align 1
  %3008 = zext i8 %3007 to i32
  %3009 = icmp eq i32 %3008, 102
  br i1 %3009, label %3010, label %3037

; <label>:3010:                                   ; preds = %3006
  %3011 = load i32, i32* @target_flags, align 4
  %3012 = and i32 %3011, 1
  %3013 = icmp ne i32 %3012, 0
  br i1 %3013, label %3018, label %3014

; <label>:3014:                                   ; preds = %3010
  %3015 = load i32, i32* @target_flags, align 4
  %3016 = and i32 %3015, 32
  %3017 = icmp ne i32 %3016, 0
  br label %3018

; <label>:3018:                                   ; preds = %3014, %3010
  %3019 = phi i1 [ true, %3010 ], [ %3017, %3014 ]
  %3020 = load i32, i32* @x.11
  %3021 = load i32, i32* @y.12
  %3022 = sub i32 %3020, 1
  %3023 = mul i32 %3020, %3022
  %3024 = urem i32 %3023, 2
  %3025 = icmp eq i32 %3024, 0
  %3026 = icmp slt i32 %3021, 10
  %3027 = or i1 %3025, %3026
  br i1 %3027, label %originalBB603, label %originalBB603alteredBB

originalBB603:                                    ; preds = %originalBB603alteredBB, %3018
  %3028 = select i1 %3019, i32 15, i32 0
  %3029 = load i32, i32* @x.11
  %3030 = load i32, i32* @y.12
  %3031 = sub i32 %3029, 1
  %3032 = mul i32 %3029, %3031
  %3033 = urem i32 %3032, 2
  %3034 = icmp eq i32 %3033, 0
  %3035 = icmp slt i32 %3030, 10
  %3036 = or i1 %3034, %3035
  br i1 %3036, label %originalBBpart2605, label %originalBB603alteredBB

originalBBpart2605:                               ; preds = %originalBB603
  br label %3407

; <label>:3037:                                   ; preds = %3006
  %3038 = load i8, i8* %18, align 1
  %3039 = zext i8 %3038 to i32
  %3040 = icmp eq i32 %3039, 116
  br i1 %3040, label %3041, label %3084

; <label>:3041:                                   ; preds = %3037
  %3042 = load i32, i32* @x.11
  %3043 = load i32, i32* @y.12
  %3044 = sub i32 %3042, 1
  %3045 = mul i32 %3042, %3044
  %3046 = urem i32 %3045, 2
  %3047 = icmp eq i32 %3046, 0
  %3048 = icmp slt i32 %3043, 10
  %3049 = or i1 %3047, %3048
  br i1 %3049, label %originalBB607, label %originalBB607alteredBB

originalBB607:                                    ; preds = %originalBB607alteredBB, %3041
  %3050 = load i32, i32* @target_flags, align 4
  %3051 = and i32 %3050, 1
  %3052 = icmp ne i32 %3051, 0
  %3053 = load i32, i32* @x.11
  %3054 = load i32, i32* @y.12
  %3055 = sub i32 %3053, 1
  %3056 = mul i32 %3053, %3055
  %3057 = urem i32 %3056, 2
  %3058 = icmp eq i32 %3057, 0
  %3059 = icmp slt i32 %3054, 10
  %3060 = or i1 %3058, %3059
  br i1 %3060, label %originalBBpart2612, label %originalBB607alteredBB

originalBBpart2612:                               ; preds = %originalBB607
  br i1 %3052, label %3065, label %3061

; <label>:3061:                                   ; preds = %originalBBpart2612
  %3062 = load i32, i32* @target_flags, align 4
  %3063 = and i32 %3062, 32
  %3064 = icmp ne i32 %3063, 0
  br label %3065

; <label>:3065:                                   ; preds = %3061, %originalBBpart2612
  %3066 = phi i1 [ true, %originalBBpart2612 ], [ %3064, %3061 ]
  %3067 = load i32, i32* @x.11
  %3068 = load i32, i32* @y.12
  %3069 = sub i32 %3067, 1
  %3070 = mul i32 %3067, %3069
  %3071 = urem i32 %3070, 2
  %3072 = icmp eq i32 %3071, 0
  %3073 = icmp slt i32 %3068, 10
  %3074 = or i1 %3072, %3073
  br i1 %3074, label %originalBB614, label %originalBB614alteredBB

originalBB614:                                    ; preds = %originalBB614alteredBB, %3065
  %3075 = select i1 %3066, i32 13, i32 0
  %3076 = load i32, i32* @x.11
  %3077 = load i32, i32* @y.12
  %3078 = sub i32 %3076, 1
  %3079 = mul i32 %3076, %3078
  %3080 = urem i32 %3079, 2
  %3081 = icmp eq i32 %3080, 0
  %3082 = icmp slt i32 %3077, 10
  %3083 = or i1 %3081, %3082
  br i1 %3083, label %originalBBpart2616, label %originalBB614alteredBB

originalBBpart2616:                               ; preds = %originalBB614
  br label %3405

; <label>:3084:                                   ; preds = %3037
  %3085 = load i8, i8* %18, align 1
  %3086 = zext i8 %3085 to i32
  %3087 = icmp eq i32 %3086, 117
  br i1 %3087, label %3088, label %3115

; <label>:3088:                                   ; preds = %3084
  %3089 = load i32, i32* @target_flags, align 4
  %3090 = and i32 %3089, 1
  %3091 = icmp ne i32 %3090, 0
  br i1 %3091, label %3096, label %3092

; <label>:3092:                                   ; preds = %3088
  %3093 = load i32, i32* @target_flags, align 4
  %3094 = and i32 %3093, 32
  %3095 = icmp ne i32 %3094, 0
  br label %3096

; <label>:3096:                                   ; preds = %3092, %3088
  %3097 = phi i1 [ true, %3088 ], [ %3095, %3092 ]
  %3098 = load i32, i32* @x.11
  %3099 = load i32, i32* @y.12
  %3100 = sub i32 %3098, 1
  %3101 = mul i32 %3098, %3100
  %3102 = urem i32 %3101, 2
  %3103 = icmp eq i32 %3102, 0
  %3104 = icmp slt i32 %3099, 10
  %3105 = or i1 %3103, %3104
  br i1 %3105, label %originalBB618, label %originalBB618alteredBB

originalBB618:                                    ; preds = %originalBB618alteredBB, %3096
  %3106 = select i1 %3097, i32 14, i32 0
  %3107 = load i32, i32* @x.11
  %3108 = load i32, i32* @y.12
  %3109 = sub i32 %3107, 1
  %3110 = mul i32 %3107, %3109
  %3111 = urem i32 %3110, 2
  %3112 = icmp eq i32 %3111, 0
  %3113 = icmp slt i32 %3108, 10
  %3114 = or i1 %3112, %3113
  br i1 %3114, label %originalBBpart2620, label %originalBB618alteredBB

originalBBpart2620:                               ; preds = %originalBB618
  br label %3403

; <label>:3115:                                   ; preds = %3084
  %3116 = load i32, i32* @x.11
  %3117 = load i32, i32* @y.12
  %3118 = sub i32 %3116, 1
  %3119 = mul i32 %3116, %3118
  %3120 = urem i32 %3119, 2
  %3121 = icmp eq i32 %3120, 0
  %3122 = icmp slt i32 %3117, 10
  %3123 = or i1 %3121, %3122
  br i1 %3123, label %originalBB622, label %originalBB622alteredBB

originalBB622:                                    ; preds = %originalBB622alteredBB, %3115
  %3124 = load i8, i8* %18, align 1
  %3125 = zext i8 %3124 to i32
  %3126 = icmp eq i32 %3125, 97
  %3127 = load i32, i32* @x.11
  %3128 = load i32, i32* @y.12
  %3129 = sub i32 %3127, 1
  %3130 = mul i32 %3127, %3129
  %3131 = urem i32 %3130, 2
  %3132 = icmp eq i32 %3131, 0
  %3133 = icmp slt i32 %3128, 10
  %3134 = or i1 %3132, %3133
  br i1 %3134, label %originalBBpart2624, label %originalBB622alteredBB

originalBBpart2624:                               ; preds = %originalBB622
  br i1 %3126, label %3135, label %3152

; <label>:3135:                                   ; preds = %originalBBpart2624
  %3136 = load i32, i32* @x.11
  %3137 = load i32, i32* @y.12
  %3138 = sub i32 %3136, 1
  %3139 = mul i32 %3136, %3138
  %3140 = urem i32 %3139, 2
  %3141 = icmp eq i32 %3140, 0
  %3142 = icmp slt i32 %3137, 10
  %3143 = or i1 %3141, %3142
  br i1 %3143, label %originalBB626, label %originalBB626alteredBB

originalBB626:                                    ; preds = %originalBB626alteredBB, %3135
  %3144 = load i32, i32* @x.11
  %3145 = load i32, i32* @y.12
  %3146 = sub i32 %3144, 1
  %3147 = mul i32 %3144, %3146
  %3148 = urem i32 %3147, 2
  %3149 = icmp eq i32 %3148, 0
  %3150 = icmp slt i32 %3145, 10
  %3151 = or i1 %3149, %3150
  br i1 %3151, label %originalBBpart2628, label %originalBB626alteredBB

originalBBpart2628:                               ; preds = %originalBB626
  br label %3401

; <label>:3152:                                   ; preds = %originalBBpart2624
  %3153 = load i32, i32* @x.11
  %3154 = load i32, i32* @y.12
  %3155 = sub i32 %3153, 1
  %3156 = mul i32 %3153, %3155
  %3157 = urem i32 %3156, 2
  %3158 = icmp eq i32 %3157, 0
  %3159 = icmp slt i32 %3154, 10
  %3160 = or i1 %3158, %3159
  br i1 %3160, label %originalBB630, label %originalBB630alteredBB

originalBB630:                                    ; preds = %originalBB630alteredBB, %3152
  %3161 = load i8, i8* %18, align 1
  %3162 = zext i8 %3161 to i32
  %3163 = icmp eq i32 %3162, 98
  %3164 = load i32, i32* @x.11
  %3165 = load i32, i32* @y.12
  %3166 = sub i32 %3164, 1
  %3167 = mul i32 %3164, %3166
  %3168 = urem i32 %3167, 2
  %3169 = icmp eq i32 %3168, 0
  %3170 = icmp slt i32 %3165, 10
  %3171 = or i1 %3169, %3170
  br i1 %3171, label %originalBBpart2632, label %originalBB630alteredBB

originalBBpart2632:                               ; preds = %originalBB630
  br i1 %3163, label %3172, label %3173

; <label>:3172:                                   ; preds = %originalBBpart2632
  br label %3383

; <label>:3173:                                   ; preds = %originalBBpart2632
  %3174 = load i8, i8* %18, align 1
  %3175 = zext i8 %3174 to i32
  %3176 = icmp eq i32 %3175, 99
  br i1 %3176, label %3177, label %3194

; <label>:3177:                                   ; preds = %3173
  %3178 = load i32, i32* @x.11
  %3179 = load i32, i32* @y.12
  %3180 = sub i32 %3178, 1
  %3181 = mul i32 %3178, %3180
  %3182 = urem i32 %3181, 2
  %3183 = icmp eq i32 %3182, 0
  %3184 = icmp slt i32 %3179, 10
  %3185 = or i1 %3183, %3184
  br i1 %3185, label %originalBB634, label %originalBB634alteredBB

originalBB634:                                    ; preds = %originalBB634alteredBB, %3177
  %3186 = load i32, i32* @x.11
  %3187 = load i32, i32* @y.12
  %3188 = sub i32 %3186, 1
  %3189 = mul i32 %3186, %3188
  %3190 = urem i32 %3189, 2
  %3191 = icmp eq i32 %3190, 0
  %3192 = icmp slt i32 %3187, 10
  %3193 = or i1 %3191, %3192
  br i1 %3193, label %originalBBpart2636, label %originalBB634alteredBB

originalBBpart2636:                               ; preds = %originalBB634
  br label %3381

; <label>:3194:                                   ; preds = %3173
  %3195 = load i8, i8* %18, align 1
  %3196 = zext i8 %3195 to i32
  %3197 = icmp eq i32 %3196, 100
  br i1 %3197, label %3198, label %3199

; <label>:3198:                                   ; preds = %3194
  br label %3379

; <label>:3199:                                   ; preds = %3194
  %3200 = load i32, i32* @x.11
  %3201 = load i32, i32* @y.12
  %3202 = sub i32 %3200, 1
  %3203 = mul i32 %3200, %3202
  %3204 = urem i32 %3203, 2
  %3205 = icmp eq i32 %3204, 0
  %3206 = icmp slt i32 %3201, 10
  %3207 = or i1 %3205, %3206
  br i1 %3207, label %originalBB638, label %originalBB638alteredBB

originalBB638:                                    ; preds = %originalBB638alteredBB, %3199
  %3208 = load i8, i8* %18, align 1
  %3209 = zext i8 %3208 to i32
  %3210 = icmp eq i32 %3209, 120
  %3211 = load i32, i32* @x.11
  %3212 = load i32, i32* @y.12
  %3213 = sub i32 %3211, 1
  %3214 = mul i32 %3211, %3213
  %3215 = urem i32 %3214, 2
  %3216 = icmp eq i32 %3215, 0
  %3217 = icmp slt i32 %3212, 10
  %3218 = or i1 %3216, %3217
  br i1 %3218, label %originalBBpart2640, label %originalBB638alteredBB

originalBBpart2640:                               ; preds = %originalBB638
  br i1 %3210, label %3219, label %3224

; <label>:3219:                                   ; preds = %originalBBpart2640
  %3220 = load i32, i32* @target_flags, align 4
  %3221 = and i32 %3220, 327680
  %3222 = icmp ne i32 %3221, 0
  %3223 = select i1 %3222, i32 16, i32 0
  br label %3377

; <label>:3224:                                   ; preds = %originalBBpart2640
  %3225 = load i32, i32* @x.11
  %3226 = load i32, i32* @y.12
  %3227 = sub i32 %3225, 1
  %3228 = mul i32 %3225, %3227
  %3229 = urem i32 %3228, 2
  %3230 = icmp eq i32 %3229, 0
  %3231 = icmp slt i32 %3226, 10
  %3232 = or i1 %3230, %3231
  br i1 %3232, label %originalBB642, label %originalBB642alteredBB

originalBB642:                                    ; preds = %originalBB642alteredBB, %3224
  %3233 = load i8, i8* %18, align 1
  %3234 = zext i8 %3233 to i32
  %3235 = icmp eq i32 %3234, 89
  %3236 = load i32, i32* @x.11
  %3237 = load i32, i32* @y.12
  %3238 = sub i32 %3236, 1
  %3239 = mul i32 %3236, %3238
  %3240 = urem i32 %3239, 2
  %3241 = icmp eq i32 %3240, 0
  %3242 = icmp slt i32 %3237, 10
  %3243 = or i1 %3241, %3242
  br i1 %3243, label %originalBBpart2644, label %originalBB642alteredBB

originalBBpart2644:                               ; preds = %originalBB642
  br i1 %3235, label %3244, label %3249

; <label>:3244:                                   ; preds = %originalBBpart2644
  %3245 = load i32, i32* @target_flags, align 4
  %3246 = and i32 %3245, 262144
  %3247 = icmp ne i32 %3246, 0
  %3248 = select i1 %3247, i32 16, i32 0
  br label %3359

; <label>:3249:                                   ; preds = %originalBBpart2644
  %3250 = load i32, i32* @x.11
  %3251 = load i32, i32* @y.12
  %3252 = sub i32 %3250, 1
  %3253 = mul i32 %3250, %3252
  %3254 = urem i32 %3253, 2
  %3255 = icmp eq i32 %3254, 0
  %3256 = icmp slt i32 %3251, 10
  %3257 = or i1 %3255, %3256
  br i1 %3257, label %originalBB646, label %originalBB646alteredBB

originalBB646:                                    ; preds = %originalBB646alteredBB, %3249
  %3258 = load i8, i8* %18, align 1
  %3259 = zext i8 %3258 to i32
  %3260 = icmp eq i32 %3259, 121
  %3261 = load i32, i32* @x.11
  %3262 = load i32, i32* @y.12
  %3263 = sub i32 %3261, 1
  %3264 = mul i32 %3261, %3263
  %3265 = urem i32 %3264, 2
  %3266 = icmp eq i32 %3265, 0
  %3267 = icmp slt i32 %3262, 10
  %3268 = or i1 %3266, %3267
  br i1 %3268, label %originalBBpart2648, label %originalBB646alteredBB

originalBBpart2648:                               ; preds = %originalBB646
  br i1 %3260, label %3269, label %3290

; <label>:3269:                                   ; preds = %originalBBpart2648
  %3270 = load i32, i32* @x.11
  %3271 = load i32, i32* @y.12
  %3272 = sub i32 %3270, 1
  %3273 = mul i32 %3270, %3272
  %3274 = urem i32 %3273, 2
  %3275 = icmp eq i32 %3274, 0
  %3276 = icmp slt i32 %3271, 10
  %3277 = or i1 %3275, %3276
  br i1 %3277, label %originalBB650, label %originalBB650alteredBB

originalBB650:                                    ; preds = %originalBB650alteredBB, %3269
  %3278 = load i32, i32* @target_flags, align 4
  %3279 = and i32 %3278, 16384
  %3280 = icmp ne i32 %3279, 0
  %3281 = select i1 %3280, i32 17, i32 0
  %3282 = load i32, i32* @x.11
  %3283 = load i32, i32* @y.12
  %3284 = sub i32 %3282, 1
  %3285 = mul i32 %3282, %3284
  %3286 = urem i32 %3285, 2
  %3287 = icmp eq i32 %3286, 0
  %3288 = icmp slt i32 %3283, 10
  %3289 = or i1 %3287, %3288
  br i1 %3289, label %originalBBpart2661, label %originalBB650alteredBB

originalBBpart2661:                               ; preds = %originalBB650
  br label %3357

; <label>:3290:                                   ; preds = %originalBBpart2648
  %3291 = load i32, i32* @x.11
  %3292 = load i32, i32* @y.12
  %3293 = sub i32 %3291, 1
  %3294 = mul i32 %3291, %3293
  %3295 = urem i32 %3294, 2
  %3296 = icmp eq i32 %3295, 0
  %3297 = icmp slt i32 %3292, 10
  %3298 = or i1 %3296, %3297
  br i1 %3298, label %originalBB663, label %originalBB663alteredBB

originalBB663:                                    ; preds = %originalBB663alteredBB, %3290
  %3299 = load i8, i8* %18, align 1
  %3300 = zext i8 %3299 to i32
  %3301 = icmp eq i32 %3300, 65
  %3302 = load i32, i32* @x.11
  %3303 = load i32, i32* @y.12
  %3304 = sub i32 %3302, 1
  %3305 = mul i32 %3302, %3304
  %3306 = urem i32 %3305, 2
  %3307 = icmp eq i32 %3306, 0
  %3308 = icmp slt i32 %3303, 10
  %3309 = or i1 %3307, %3308
  br i1 %3309, label %originalBBpart2665, label %originalBB663alteredBB

originalBBpart2665:                               ; preds = %originalBB663
  br i1 %3301, label %3310, label %3311

; <label>:3310:                                   ; preds = %originalBBpart2665
  br label %3355

; <label>:3311:                                   ; preds = %originalBBpart2665
  %3312 = load i32, i32* @x.11
  %3313 = load i32, i32* @y.12
  %3314 = sub i32 %3312, 1
  %3315 = mul i32 %3312, %3314
  %3316 = urem i32 %3315, 2
  %3317 = icmp eq i32 %3316, 0
  %3318 = icmp slt i32 %3313, 10
  %3319 = or i1 %3317, %3318
  br i1 %3319, label %originalBB667, label %originalBB667alteredBB

originalBB667:                                    ; preds = %originalBB667alteredBB, %3311
  %3320 = load i8, i8* %18, align 1
  %3321 = zext i8 %3320 to i32
  %3322 = icmp eq i32 %3321, 68
  %3323 = load i32, i32* @x.11
  %3324 = load i32, i32* @y.12
  %3325 = sub i32 %3323, 1
  %3326 = mul i32 %3323, %3325
  %3327 = urem i32 %3326, 2
  %3328 = icmp eq i32 %3327, 0
  %3329 = icmp slt i32 %3324, 10
  %3330 = or i1 %3328, %3329
  br i1 %3330, label %originalBBpart2669, label %originalBB667alteredBB

originalBBpart2669:                               ; preds = %originalBB667
  br i1 %3322, label %3331, label %3348

; <label>:3331:                                   ; preds = %originalBBpart2669
  %3332 = load i32, i32* @x.11
  %3333 = load i32, i32* @y.12
  %3334 = sub i32 %3332, 1
  %3335 = mul i32 %3332, %3334
  %3336 = urem i32 %3335, 2
  %3337 = icmp eq i32 %3336, 0
  %3338 = icmp slt i32 %3333, 10
  %3339 = or i1 %3337, %3338
  br i1 %3339, label %originalBB671, label %originalBB671alteredBB

originalBB671:                                    ; preds = %originalBB671alteredBB, %3331
  %3340 = load i32, i32* @x.11
  %3341 = load i32, i32* @y.12
  %3342 = sub i32 %3340, 1
  %3343 = mul i32 %3340, %3342
  %3344 = urem i32 %3343, 2
  %3345 = icmp eq i32 %3344, 0
  %3346 = icmp slt i32 %3341, 10
  %3347 = or i1 %3345, %3346
  br i1 %3347, label %originalBBpart2673, label %originalBB671alteredBB

originalBBpart2673:                               ; preds = %originalBB671
  br label %3353

; <label>:3348:                                   ; preds = %originalBBpart2669
  %3349 = load i8, i8* %18, align 1
  %3350 = zext i8 %3349 to i32
  %3351 = icmp eq i32 %3350, 83
  %3352 = select i1 %3351, i32 5, i32 0
  br label %3353

; <label>:3353:                                   ; preds = %3348, %originalBBpart2673
  %3354 = phi i32 [ 6, %originalBBpart2673 ], [ %3352, %3348 ]
  br label %3355

; <label>:3355:                                   ; preds = %3353, %3310
  %3356 = phi i32 [ 7, %3310 ], [ %3354, %3353 ]
  br label %3357

; <label>:3357:                                   ; preds = %3355, %originalBBpart2661
  %3358 = phi i32 [ %3281, %originalBBpart2661 ], [ %3356, %3355 ]
  br label %3359

; <label>:3359:                                   ; preds = %3357, %3244
  %3360 = phi i32 [ %3248, %3244 ], [ %3358, %3357 ]
  %3361 = load i32, i32* @x.11
  %3362 = load i32, i32* @y.12
  %3363 = sub i32 %3361, 1
  %3364 = mul i32 %3361, %3363
  %3365 = urem i32 %3364, 2
  %3366 = icmp eq i32 %3365, 0
  %3367 = icmp slt i32 %3362, 10
  %3368 = or i1 %3366, %3367
  br i1 %3368, label %originalBB675, label %originalBB675alteredBB

originalBB675:                                    ; preds = %originalBB675alteredBB, %3359
  %3369 = load i32, i32* @x.11
  %3370 = load i32, i32* @y.12
  %3371 = sub i32 %3369, 1
  %3372 = mul i32 %3369, %3371
  %3373 = urem i32 %3372, 2
  %3374 = icmp eq i32 %3373, 0
  %3375 = icmp slt i32 %3370, 10
  %3376 = or i1 %3374, %3375
  br i1 %3376, label %originalBBpart2677, label %originalBB675alteredBB

originalBBpart2677:                               ; preds = %originalBB675
  br label %3377

; <label>:3377:                                   ; preds = %originalBBpart2677, %3219
  %3378 = phi i32 [ %3223, %3219 ], [ %3360, %originalBBpart2677 ]
  br label %3379

; <label>:3379:                                   ; preds = %3377, %3198
  %3380 = phi i32 [ 2, %3198 ], [ %3378, %3377 ]
  br label %3381

; <label>:3381:                                   ; preds = %3379, %originalBBpart2636
  %3382 = phi i32 [ 3, %originalBBpart2636 ], [ %3380, %3379 ]
  br label %3383

; <label>:3383:                                   ; preds = %3381, %3172
  %3384 = phi i32 [ 4, %3172 ], [ %3382, %3381 ]
  %3385 = load i32, i32* @x.11
  %3386 = load i32, i32* @y.12
  %3387 = sub i32 %3385, 1
  %3388 = mul i32 %3385, %3387
  %3389 = urem i32 %3388, 2
  %3390 = icmp eq i32 %3389, 0
  %3391 = icmp slt i32 %3386, 10
  %3392 = or i1 %3390, %3391
  br i1 %3392, label %originalBB679, label %originalBB679alteredBB

originalBB679:                                    ; preds = %originalBB679alteredBB, %3383
  %3393 = load i32, i32* @x.11
  %3394 = load i32, i32* @y.12
  %3395 = sub i32 %3393, 1
  %3396 = mul i32 %3393, %3395
  %3397 = urem i32 %3396, 2
  %3398 = icmp eq i32 %3397, 0
  %3399 = icmp slt i32 %3394, 10
  %3400 = or i1 %3398, %3399
  br i1 %3400, label %originalBBpart2681, label %originalBB679alteredBB

originalBBpart2681:                               ; preds = %originalBB679
  br label %3401

; <label>:3401:                                   ; preds = %originalBBpart2681, %originalBBpart2628
  %3402 = phi i32 [ 1, %originalBBpart2628 ], [ %3384, %originalBBpart2681 ]
  br label %3403

; <label>:3403:                                   ; preds = %3401, %originalBBpart2620
  %3404 = phi i32 [ %3106, %originalBBpart2620 ], [ %3402, %3401 ]
  br label %3405

; <label>:3405:                                   ; preds = %3403, %originalBBpart2616
  %3406 = phi i32 [ %3075, %originalBBpart2616 ], [ %3404, %3403 ]
  br label %3407

; <label>:3407:                                   ; preds = %3405, %originalBBpart2605
  %3408 = phi i32 [ %3028, %originalBBpart2605 ], [ %3406, %3405 ]
  br label %3409

; <label>:3409:                                   ; preds = %3407, %3005
  %3410 = phi i32 [ 8, %3005 ], [ %3408, %3407 ]
  br label %3411

; <label>:3411:                                   ; preds = %3409, %originalBBpart2601
  %3412 = phi i32 [ %2992, %originalBBpart2601 ], [ %3410, %3409 ]
  %3413 = load i32, i32* @x.11
  %3414 = load i32, i32* @y.12
  %3415 = sub i32 %3413, 1
  %3416 = mul i32 %3413, %3415
  %3417 = urem i32 %3416, 2
  %3418 = icmp eq i32 %3417, 0
  %3419 = icmp slt i32 %3414, 10
  %3420 = or i1 %3418, %3419
  br i1 %3420, label %originalBB683, label %originalBB683alteredBB

originalBB683:                                    ; preds = %originalBB683alteredBB, %3411
  %3421 = load i32, i32* @x.11
  %3422 = load i32, i32* @y.12
  %3423 = sub i32 %3421, 1
  %3424 = mul i32 %3421, %3423
  %3425 = urem i32 %3424, 2
  %3426 = icmp eq i32 %3425, 0
  %3427 = icmp slt i32 %3422, 10
  %3428 = or i1 %3426, %3427
  br i1 %3428, label %originalBBpart2685, label %originalBB683alteredBB

originalBBpart2685:                               ; preds = %originalBB683
  br label %3429

; <label>:3429:                                   ; preds = %originalBBpart2685, %2975
  %3430 = phi i32 [ 11, %2975 ], [ %3412, %originalBBpart2685 ]
  br label %3431

; <label>:3431:                                   ; preds = %3429, %originalBBpart2592
  %3432 = phi i32 [ 12, %originalBBpart2592 ], [ %3430, %3429 ]
  %3433 = icmp eq i32 %3432, 6
  br i1 %3433, label %3434, label %3438

; <label>:3434:                                   ; preds = %3431, %2947, %originalBBpart2524, %2139, %1767, %1315, %originalBBpart2153
  %3435 = load i32, i32* %15, align 4
  %3436 = sext i32 %3435 to i64
  %3437 = getelementptr inbounds [30 x i32], [30 x i32]* %14, i64 0, i64 %3436
  store i32 1, i32* %3437, align 4
  br label %3438

; <label>:3438:                                   ; preds = %3434, %3431
  %3439 = load i32, i32* @x.11
  %3440 = load i32, i32* @y.12
  %3441 = sub i32 %3439, 1
  %3442 = mul i32 %3439, %3441
  %3443 = urem i32 %3442, 2
  %3444 = icmp eq i32 %3443, 0
  %3445 = icmp slt i32 %3440, 10
  %3446 = or i1 %3444, %3445
  br i1 %3446, label %originalBB687, label %originalBB687alteredBB

originalBB687:                                    ; preds = %originalBB687alteredBB, %3438
  %3447 = load i32, i32* @x.11
  %3448 = load i32, i32* @y.12
  %3449 = sub i32 %3447, 1
  %3450 = mul i32 %3447, %3449
  %3451 = urem i32 %3450, 2
  %3452 = icmp eq i32 %3451, 0
  %3453 = icmp slt i32 %3448, 10
  %3454 = or i1 %3452, %3453
  br i1 %3454, label %originalBBpart2689, label %originalBB687alteredBB

originalBBpart2689:                               ; preds = %originalBB687
  br label %3455

; <label>:3455:                                   ; preds = %originalBBpart2689, %413, %originalBBpart253, %323, %317, %originalBBpart245, %originalBBpart241, %280
  br label %252

; <label>:3456:                                   ; preds = %originalBBpart237
  %3457 = load i32, i32* @x.11
  %3458 = load i32, i32* @y.12
  %3459 = sub i32 %3457, 1
  %3460 = mul i32 %3457, %3459
  %3461 = urem i32 %3460, 2
  %3462 = icmp eq i32 %3461, 0
  %3463 = icmp slt i32 %3458, 10
  %3464 = or i1 %3462, %3463
  br i1 %3464, label %originalBB691, label %originalBB691alteredBB

originalBB691:                                    ; preds = %originalBB691alteredBB, %3456
  %3465 = load i32, i32* @x.11
  %3466 = load i32, i32* @y.12
  %3467 = sub i32 %3465, 1
  %3468 = mul i32 %3465, %3467
  %3469 = urem i32 %3468, 2
  %3470 = icmp eq i32 %3469, 0
  %3471 = icmp slt i32 %3466, 10
  %3472 = or i1 %3470, %3471
  br i1 %3472, label %originalBBpart2693, label %originalBB691alteredBB

originalBBpart2693:                               ; preds = %originalBB691
  br label %3473

; <label>:3473:                                   ; preds = %originalBBpart2693
  %3474 = load i32, i32* @x.11
  %3475 = load i32, i32* @y.12
  %3476 = sub i32 %3474, 1
  %3477 = mul i32 %3474, %3476
  %3478 = urem i32 %3477, 2
  %3479 = icmp eq i32 %3478, 0
  %3480 = icmp slt i32 %3475, 10
  %3481 = or i1 %3479, %3480
  br i1 %3481, label %originalBB695, label %originalBB695alteredBB

originalBB695:                                    ; preds = %originalBB695alteredBB, %3473
  %3482 = load i32, i32* %15, align 4
  %3483 = add nsw i32 %3482, 1
  store i32 %3483, i32* %15, align 4
  %3484 = load i32, i32* @x.11
  %3485 = load i32, i32* @y.12
  %3486 = sub i32 %3484, 1
  %3487 = mul i32 %3484, %3486
  %3488 = urem i32 %3487, 2
  %3489 = icmp eq i32 %3488, 0
  %3490 = icmp slt i32 %3485, 10
  %3491 = or i1 %3489, %3490
  br i1 %3491, label %originalBBpart2706, label %originalBB695alteredBB

originalBBpart2706:                               ; preds = %originalBB695
  br label %118

; <label>:3492:                                   ; preds = %118
  %3493 = load i32, i32* %16, align 4
  store i32 %3493, i32* %11, align 4
  br label %3494

; <label>:3494:                                   ; preds = %3492, %originalBBpart24
  %3495 = load i32, i32* %11, align 4
  ret i32 %3495

originalBBalteredBB:                              ; preds = %originalBB, %2
  %3496 = alloca i32, align 4
  %3497 = alloca %struct.rtx_def*, align 8
  %3498 = alloca %struct.match*, align 8
  %3499 = alloca [30 x i32], align 16
  %3500 = alloca i32, align 4
  %3501 = alloca i32, align 4
  %3502 = alloca i8*, align 8
  %3503 = alloca i8, align 1
  %3504 = alloca i32, align 4
  %3505 = alloca i8*, align 8
  %3506 = alloca i64, align 8
  %3507 = alloca i32, align 4
  store %struct.rtx_def* %0, %struct.rtx_def** %3497, align 8
  store %struct.match* %1, %struct.match** %3498, align 8
  store i32 0, i32* %3501, align 4
  %3508 = load %struct.rtx_def*, %struct.rtx_def** %3497, align 8
  call void @extract_insn(%struct.rtx_def* %3508)
  %3509 = call i32 @constrain_operands(i32 0)
  %3510 = icmp ne i32 %3509, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  store i32 0, i32* %11, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %3511 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 4
  %3512 = sext i8 %3511 to i32
  store i32 %3512, i32* %15, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %70
  %3513 = load i32, i32* %15, align 4
  %_ = shl i32 %3513, -1
  %_11 = sub i32 %3513, -1
  %gen = mul i32 %_11, -1
  %3514 = add nsw i32 %3513, -1
  store i32 %3514, i32* %15, align 4
  %3515 = icmp sge i32 %3514, 0
  br label %originalBB10

originalBB15alteredBB:                            ; preds = %originalBB15, %90
  %3516 = load %struct.match*, %struct.match** %13, align 8
  %3517 = getelementptr inbounds %struct.match, %struct.match* %3516, i32 0, i32 2
  %3518 = load i32, i32* %15, align 4
  %3519 = sext i32 %3518 to i64
  %3520 = getelementptr inbounds [30 x i32], [30 x i32]* %3517, i64 0, i64 %3519
  store i32 -1, i32* %3520, align 4
  %3521 = load %struct.match*, %struct.match** %13, align 8
  %3522 = getelementptr inbounds %struct.match, %struct.match* %3521, i32 0, i32 0
  %3523 = load i32, i32* %15, align 4
  %3524 = sext i32 %3523 to i64
  %3525 = getelementptr inbounds [30 x i32], [30 x i32]* %3522, i64 0, i64 %3524
  store i32 -1, i32* %3525, align 4
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %123
  store i32 0, i32* %19, align 4
  %3526 = load i32, i32* %15, align 4
  %3527 = sext i32 %3526 to i64
  %3528 = getelementptr inbounds [30 x i8*], [30 x i8*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2), i64 0, i64 %3527
  %3529 = load i8*, i8** %3528, align 8
  store i8* %3529, i8** %17, align 8
  %3530 = load i32, i32* %15, align 4
  %3531 = sext i32 %3530 to i64
  %3532 = getelementptr inbounds [30 x i32], [30 x i32]* %14, i64 0, i64 %3531
  store i32 0, i32* %3532, align 4
  %3533 = load %struct.match*, %struct.match** %13, align 8
  %3534 = getelementptr inbounds %struct.match, %struct.match* %3533, i32 0, i32 1
  %3535 = load i32, i32* %15, align 4
  %3536 = sext i32 %3535 to i64
  %3537 = getelementptr inbounds [30 x i32], [30 x i32]* %3534, i64 0, i64 %3536
  store i32 0, i32* %3537, align 4
  %3538 = load %struct.match*, %struct.match** %13, align 8
  %3539 = getelementptr inbounds %struct.match, %struct.match* %3538, i32 0, i32 3
  %3540 = load i32, i32* %15, align 4
  %3541 = sext i32 %3540 to i64
  %3542 = getelementptr inbounds [30 x i32], [30 x i32]* %3539, i64 0, i64 %3541
  store i32 0, i32* %3542, align 4
  %3543 = load i8*, i8** %17, align 8
  %3544 = load i8, i8* %3543, align 1
  %3545 = sext i8 %3544 to i32
  %3546 = icmp eq i32 %3545, 61
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %178
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %207
  %3547 = load i8*, i8** %17, align 8
  %3548 = load i8, i8* %3547, align 1
  %3549 = sext i8 %3548 to i32
  %3550 = icmp eq i32 %3549, 44
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %231
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %262
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %283
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %300
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %348
  %3551 = load i32, i32* %22, align 4
  %3552 = sext i32 %3551 to i64
  %3553 = getelementptr inbounds [30 x i32], [30 x i32]* %14, i64 0, i64 %3552
  %3554 = load i32, i32* %3553, align 4
  %3555 = icmp ne i32 %3554, 0
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %370
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %433
  %3556 = load i8, i8* %18, align 1
  %3557 = zext i8 %3556 to i32
  %3558 = icmp eq i32 %3557, 81
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %454
  %3559 = load i8, i8* %18, align 1
  %3560 = zext i8 %3559 to i32
  %3561 = icmp eq i32 %3560, 102
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %489
  %3562 = load i32, i32* @target_flags, align 4
  %_64 = shl i32 %3562, 1
  %_65 = shl i32 %3562, 1
  %_66 = sub i32 0, %3562
  %gen67 = add i32 %_66, 1
  %3563 = and i32 %3562, 1
  %3564 = icmp ne i32 %3563, 0
  br label %originalBB63

originalBB71alteredBB:                            ; preds = %originalBB71, %509
  %3565 = load i32, i32* @target_flags, align 4
  %3566 = and i32 %3565, 32
  %3567 = icmp ne i32 %3566, 0
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %532
  %3568 = load i8, i8* %18, align 1
  %3569 = zext i8 %3568 to i32
  %3570 = icmp eq i32 %3569, 117
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %560
  %3571 = select i1 %561, i32 14, i32 0
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %579
  %3572 = load i8, i8* %18, align 1
  %3573 = zext i8 %3572 to i32
  %3574 = icmp eq i32 %3573, 97
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %604
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %626
  %3575 = load i8, i8* %18, align 1
  %3576 = zext i8 %3575 to i32
  %3577 = icmp eq i32 %3576, 100
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %646
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %667
  %3578 = load i32, i32* @target_flags, align 4
  %_100 = sub i32 %3578, 327680
  %gen101 = mul i32 %_100, 327680
  %_102 = sub i32 0, %3578
  %gen103 = add i32 %_102, 327680
  %_104 = shl i32 %3578, 327680
  %_105 = sub i32 %3578, 327680
  %gen106 = mul i32 %_105, 327680
  %_107 = sub i32 %3578, 327680
  %gen108 = mul i32 %_107, 327680
  %_109 = shl i32 %3578, 327680
  %_110 = sub i32 0, %3578
  %gen111 = add i32 %_110, 327680
  %3579 = and i32 %3578, 327680
  %3580 = icmp ne i32 %3579, 0
  %3581 = select i1 %3580, i32 16, i32 0
  br label %originalBB99

originalBB115alteredBB:                           ; preds = %originalBB115, %688
  %3582 = load i8, i8* %18, align 1
  %3583 = zext i8 %3582 to i32
  %3584 = icmp eq i32 %3583, 89
  br label %originalBB115

originalBB119alteredBB:                           ; preds = %originalBB119, %708
  %3585 = load i32, i32* @target_flags, align 4
  %_120 = shl i32 %3585, 262144
  %_121 = sub i32 %3585, 262144
  %gen122 = mul i32 %_121, 262144
  %_123 = sub i32 0, %3585
  %gen124 = add i32 %_123, 262144
  %_125 = sub i32 %3585, 262144
  %gen126 = mul i32 %_125, 262144
  %_127 = shl i32 %3585, 262144
  %_128 = sub i32 0, %3585
  %gen129 = add i32 %_128, 262144
  %_130 = sub i32 0, %3585
  %gen131 = add i32 %_130, 262144
  %3586 = and i32 %3585, 262144
  %3587 = icmp ne i32 %3586, 0
  %3588 = select i1 %3587, i32 16, i32 0
  br label %originalBB119

originalBB135alteredBB:                           ; preds = %originalBB135, %743
  %3589 = load i8, i8* %18, align 1
  %3590 = zext i8 %3589 to i32
  %3591 = icmp eq i32 %3590, 68
  br label %originalBB135

originalBB139alteredBB:                           ; preds = %originalBB139, %763
  br label %originalBB139

originalBB143alteredBB:                           ; preds = %originalBB143, %801
  br label %originalBB143

originalBB147alteredBB:                           ; preds = %originalBB147, %819
  br label %originalBB147

originalBB151alteredBB:                           ; preds = %originalBB151, %847
  %3592 = icmp eq i32 %848, 1
  br label %originalBB151

originalBB155alteredBB:                           ; preds = %originalBB155, %866
  %3593 = load i8, i8* %18, align 1
  %3594 = zext i8 %3593 to i32
  %3595 = icmp eq i32 %3594, 114
  br label %originalBB155

originalBB159alteredBB:                           ; preds = %originalBB159, %891
  br label %originalBB159

originalBB163alteredBB:                           ; preds = %originalBB163, %908
  %3596 = load i8, i8* %18, align 1
  %3597 = zext i8 %3596 to i32
  %3598 = icmp eq i32 %3597, 113
  br label %originalBB163

originalBB167alteredBB:                           ; preds = %originalBB167, %937
  br label %originalBB167

originalBB171alteredBB:                           ; preds = %originalBB171, %954
  %3599 = load i8, i8* %18, align 1
  %3600 = zext i8 %3599 to i32
  %3601 = icmp eq i32 %3600, 102
  br label %originalBB171

originalBB175alteredBB:                           ; preds = %originalBB175, %997
  %3602 = select i1 %998, i32 13, i32 0
  br label %originalBB175

originalBB179alteredBB:                           ; preds = %originalBB179, %1020
  %3603 = load i32, i32* @target_flags, align 4
  %_180 = shl i32 %3603, 1
  %_181 = shl i32 %3603, 1
  %_182 = sub i32 0, %3603
  %gen183 = add i32 %_182, 1
  %_184 = sub i32 %3603, 1
  %gen185 = mul i32 %_184, 1
  %_186 = shl i32 %3603, 1
  %3604 = and i32 %3603, 1
  %3605 = icmp ne i32 %3604, 0
  br label %originalBB179

originalBB190alteredBB:                           ; preds = %originalBB190, %1040
  %3606 = load i32, i32* @target_flags, align 4
  %_191 = sub i32 %3606, 32
  %gen192 = mul i32 %_191, 32
  %_193 = shl i32 %3606, 32
  %_194 = shl i32 %3606, 32
  %_195 = shl i32 %3606, 32
  %_196 = sub i32 0, %3606
  %gen197 = add i32 %_196, 32
  %_198 = sub i32 %3606, 32
  %gen199 = mul i32 %_198, 32
  %3607 = and i32 %3606, 32
  %3608 = icmp ne i32 %3607, 0
  br label %originalBB190

originalBB203alteredBB:                           ; preds = %originalBB203, %1060
  %3609 = select i1 %1061, i32 14, i32 0
  br label %originalBB203

originalBB207alteredBB:                           ; preds = %originalBB207, %1079
  %3610 = load i8, i8* %18, align 1
  %3611 = zext i8 %3610 to i32
  %3612 = icmp eq i32 %3611, 97
  br label %originalBB207

originalBB211alteredBB:                           ; preds = %originalBB211, %1099
  br label %originalBB211

originalBB215alteredBB:                           ; preds = %originalBB215, %1120
  br label %originalBB215

originalBB219alteredBB:                           ; preds = %originalBB219, %1142
  %3613 = load i8, i8* %18, align 1
  %3614 = zext i8 %3613 to i32
  %3615 = icmp eq i32 %3614, 100
  br label %originalBB219

originalBB223alteredBB:                           ; preds = %originalBB223, %1167
  %3616 = load i32, i32* @target_flags, align 4
  %_224 = shl i32 %3616, 327680
  %_225 = shl i32 %3616, 327680
  %_226 = sub i32 %3616, 327680
  %gen227 = mul i32 %_226, 327680
  %_228 = sub i32 %3616, 327680
  %gen229 = mul i32 %_228, 327680
  %_230 = sub i32 0, %3616
  %gen231 = add i32 %_230, 327680
  %3617 = and i32 %3616, 327680
  %3618 = icmp ne i32 %3617, 0
  %3619 = select i1 %3618, i32 16, i32 0
  br label %originalBB223

originalBB235alteredBB:                           ; preds = %originalBB235, %1192
  %3620 = load i32, i32* @target_flags, align 4
  %_236 = sub i32 %3620, 262144
  %gen237 = mul i32 %_236, 262144
  %_238 = shl i32 %3620, 262144
  %_239 = shl i32 %3620, 262144
  %_240 = sub i32 0, %3620
  %gen241 = add i32 %_240, 262144
  %_242 = shl i32 %3620, 262144
  %_243 = sub i32 0, %3620
  %gen244 = add i32 %_243, 262144
  %_245 = sub i32 0, %3620
  %gen246 = add i32 %_245, 262144
  %3621 = and i32 %3620, 262144
  %3622 = icmp ne i32 %3621, 0
  %3623 = select i1 %3622, i32 16, i32 0
  br label %originalBB235

originalBB250alteredBB:                           ; preds = %originalBB250, %1213
  %3624 = load i8, i8* %18, align 1
  %3625 = zext i8 %3624 to i32
  %3626 = icmp eq i32 %3625, 121
  br label %originalBB250

originalBB254alteredBB:                           ; preds = %originalBB254, %1257
  br label %originalBB254

originalBB258alteredBB:                           ; preds = %originalBB258, %1287
  br label %originalBB258

originalBB262alteredBB:                           ; preds = %originalBB262, %1318
  %3627 = load i8, i8* %18, align 1
  %3628 = zext i8 %3627 to i32
  %3629 = icmp eq i32 %3628, 114
  br label %originalBB262

originalBB266alteredBB:                           ; preds = %originalBB266, %1348
  %3630 = load i32, i32* @target_flags, align 4
  %_267 = sub i32 0, %3630
  %gen268 = add i32 %_267, 33554432
  %_269 = sub i32 %3630, 33554432
  %gen270 = mul i32 %_269, 33554432
  %_271 = sub i32 0, %3630
  %gen272 = add i32 %_271, 33554432
  %_273 = sub i32 %3630, 33554432
  %gen274 = mul i32 %_273, 33554432
  %_275 = sub i32 %3630, 33554432
  %gen276 = mul i32 %_275, 33554432
  %_277 = shl i32 %3630, 33554432
  %_278 = sub i32 %3630, 33554432
  %gen279 = mul i32 %_278, 33554432
  %_280 = sub i32 0, %3630
  %gen281 = add i32 %_280, 33554432
  %_282 = shl i32 %3630, 33554432
  %3631 = and i32 %3630, 33554432
  %3632 = icmp ne i32 %3631, 0
  %3633 = select i1 %3632, i32 12, i32 8
  br label %originalBB266

originalBB286alteredBB:                           ; preds = %originalBB286, %1382
  %3634 = load i32, i32* @target_flags, align 4
  %_287 = sub i32 %3634, 32
  %gen288 = mul i32 %_287, 32
  %_289 = sub i32 %3634, 32
  %gen290 = mul i32 %_289, 32
  %_291 = sub i32 %3634, 32
  %gen292 = mul i32 %_291, 32
  %_293 = sub i32 %3634, 32
  %gen294 = mul i32 %_293, 32
  %3635 = and i32 %3634, 32
  %3636 = icmp ne i32 %3635, 0
  br label %originalBB286

originalBB298alteredBB:                           ; preds = %originalBB298, %1402
  %3637 = select i1 %1403, i32 15, i32 0
  br label %originalBB298

originalBB302alteredBB:                           ; preds = %originalBB302, %1425
  %3638 = load i32, i32* @target_flags, align 4
  %_303 = sub i32 %3638, 1
  %gen304 = mul i32 %_303, 1
  %_305 = sub i32 %3638, 1
  %gen306 = mul i32 %_305, 1
  %_307 = sub i32 %3638, 1
  %gen308 = mul i32 %_307, 1
  %_309 = sub i32 %3638, 1
  %gen310 = mul i32 %_309, 1
  %3639 = and i32 %3638, 1
  %3640 = icmp ne i32 %3639, 0
  br label %originalBB302

originalBB314alteredBB:                           ; preds = %originalBB314, %1445
  %3641 = load i32, i32* @target_flags, align 4
  %_315 = sub i32 0, %3641
  %gen316 = add i32 %_315, 32
  %_317 = shl i32 %3641, 32
  %_318 = shl i32 %3641, 32
  %3642 = and i32 %3641, 32
  %3643 = icmp ne i32 %3642, 0
  br label %originalBB314

originalBB322alteredBB:                           ; preds = %originalBB322, %1468
  %3644 = load i8, i8* %18, align 1
  %3645 = zext i8 %3644 to i32
  %3646 = icmp eq i32 %3645, 117
  br label %originalBB322

originalBB326alteredBB:                           ; preds = %originalBB326, %1503
  br label %originalBB326

originalBB330alteredBB:                           ; preds = %originalBB330, %1520
  %3647 = load i8, i8* %18, align 1
  %3648 = zext i8 %3647 to i32
  %3649 = icmp eq i32 %3648, 98
  br label %originalBB330

originalBB334alteredBB:                           ; preds = %originalBB334, %1540
  br label %originalBB334

originalBB338alteredBB:                           ; preds = %originalBB338, %1561
  br label %originalBB338

originalBB342alteredBB:                           ; preds = %originalBB342, %1582
  br label %originalBB342

originalBB346alteredBB:                           ; preds = %originalBB346, %1626
  %3650 = load i8, i8* %18, align 1
  %3651 = zext i8 %3650 to i32
  %3652 = icmp eq i32 %3651, 65
  br label %originalBB346

originalBB350alteredBB:                           ; preds = %originalBB350, %1652
  %3653 = load i8, i8* %18, align 1
  %3654 = zext i8 %3653 to i32
  %3655 = icmp eq i32 %3654, 83
  %3656 = select i1 %3655, i32 5, i32 0
  br label %originalBB350

originalBB354alteredBB:                           ; preds = %originalBB354, %1687
  br label %originalBB354

originalBB358alteredBB:                           ; preds = %originalBB358, %1707
  br label %originalBB358

originalBB362alteredBB:                           ; preds = %originalBB362, %1725
  br label %originalBB362

originalBB366alteredBB:                           ; preds = %originalBB366, %1743
  br label %originalBB366

originalBB370alteredBB:                           ; preds = %originalBB370, %1779
  br label %originalBB370

originalBB374alteredBB:                           ; preds = %originalBB374, %1796
  %3657 = load i8, i8* %18, align 1
  %3658 = zext i8 %3657 to i32
  %3659 = icmp eq i32 %3658, 113
  br label %originalBB374

originalBB378alteredBB:                           ; preds = %originalBB378, %1845
  %3660 = load i32, i32* @target_flags, align 4
  %_379 = sub i32 0, %3660
  %gen380 = add i32 %_379, 1
  %_381 = sub i32 %3660, 1
  %gen382 = mul i32 %_381, 1
  %_383 = sub i32 %3660, 1
  %gen384 = mul i32 %_383, 1
  %_385 = sub i32 %3660, 1
  %gen386 = mul i32 %_385, 1
  %_387 = sub i32 0, %3660
  %gen388 = add i32 %_387, 1
  %_389 = shl i32 %3660, 1
  %3661 = and i32 %3660, 1
  %3662 = icmp ne i32 %3661, 0
  br label %originalBB378

originalBB393alteredBB:                           ; preds = %originalBB393, %1872
  %3663 = load i8, i8* %18, align 1
  %3664 = zext i8 %3663 to i32
  %3665 = icmp eq i32 %3664, 117
  br label %originalBB393

originalBB397alteredBB:                           ; preds = %originalBB397, %1892
  %3666 = load i32, i32* @target_flags, align 4
  %_398 = sub i32 %3666, 1
  %gen399 = mul i32 %_398, 1
  %3667 = and i32 %3666, 1
  %3668 = icmp ne i32 %3667, 0
  br label %originalBB397

originalBB403alteredBB:                           ; preds = %originalBB403, %1919
  %3669 = load i8, i8* %18, align 1
  %3670 = zext i8 %3669 to i32
  %3671 = icmp eq i32 %3670, 97
  br label %originalBB403

originalBB407alteredBB:                           ; preds = %originalBB407, %1954
  br label %originalBB407

originalBB411alteredBB:                           ; preds = %originalBB411, %1980
  %3672 = load i8, i8* %18, align 1
  %3673 = zext i8 %3672 to i32
  %3674 = icmp eq i32 %3673, 89
  br label %originalBB411

originalBB415alteredBB:                           ; preds = %originalBB415, %2035
  br label %originalBB415

originalBB419alteredBB:                           ; preds = %originalBB419, %2061
  br label %originalBB419

originalBB423alteredBB:                           ; preds = %originalBB423, %2081
  br label %originalBB423

originalBB427alteredBB:                           ; preds = %originalBB427, %2099
  br label %originalBB427

originalBB431alteredBB:                           ; preds = %originalBB431, %2119
  br label %originalBB431

originalBB435alteredBB:                           ; preds = %originalBB435, %2147
  %3675 = load i8, i8* %18, align 1
  %3676 = zext i8 %3675 to i32
  %3677 = icmp eq i32 %3676, 82
  br label %originalBB435

originalBB439alteredBB:                           ; preds = %originalBB439, %2167
  br label %originalBB439

originalBB443alteredBB:                           ; preds = %originalBB443, %2206
  %3678 = load i32, i32* @target_flags, align 4
  %_444 = shl i32 %3678, 32
  %_445 = sub i32 %3678, 32
  %gen446 = mul i32 %_445, 32
  %_447 = shl i32 %3678, 32
  %_448 = sub i32 %3678, 32
  %gen449 = mul i32 %_448, 32
  %_450 = shl i32 %3678, 32
  %_451 = sub i32 0, %3678
  %gen452 = add i32 %_451, 32
  %_453 = sub i32 %3678, 32
  %gen454 = mul i32 %_453, 32
  %_455 = sub i32 0, %3678
  %gen456 = add i32 %_455, 32
  %3679 = and i32 %3678, 32
  %3680 = icmp ne i32 %3679, 0
  br label %originalBB443

originalBB460alteredBB:                           ; preds = %originalBB460, %2229
  %3681 = load i8, i8* %18, align 1
  %3682 = zext i8 %3681 to i32
  %3683 = icmp eq i32 %3682, 116
  br label %originalBB460

originalBB464alteredBB:                           ; preds = %originalBB464, %2272
  %3684 = select i1 %2273, i32 14, i32 0
  br label %originalBB464

originalBB468alteredBB:                           ; preds = %originalBB468, %2295
  br label %originalBB468

originalBB472alteredBB:                           ; preds = %originalBB472, %2312
  %3685 = load i8, i8* %18, align 1
  %3686 = zext i8 %3685 to i32
  %3687 = icmp eq i32 %3686, 98
  br label %originalBB472

originalBB476alteredBB:                           ; preds = %originalBB476, %2338
  %3688 = load i8, i8* %18, align 1
  %3689 = zext i8 %3688 to i32
  %3690 = icmp eq i32 %3689, 100
  br label %originalBB476

originalBB480alteredBB:                           ; preds = %originalBB480, %2358
  br label %originalBB480

originalBB484alteredBB:                           ; preds = %originalBB484, %2384
  %3691 = load i8, i8* %18, align 1
  %3692 = zext i8 %3691 to i32
  %3693 = icmp eq i32 %3692, 89
  br label %originalBB484

originalBB488alteredBB:                           ; preds = %originalBB488, %2404
  %3694 = load i32, i32* @target_flags, align 4
  %_489 = sub i32 0, %3694
  %gen490 = add i32 %_489, 262144
  %3695 = and i32 %3694, 262144
  %3696 = icmp ne i32 %3695, 0
  %3697 = select i1 %3696, i32 16, i32 0
  br label %originalBB488

originalBB494alteredBB:                           ; preds = %originalBB494, %2434
  %3698 = load i8, i8* %18, align 1
  %3699 = zext i8 %3698 to i32
  %3700 = icmp eq i32 %3699, 65
  br label %originalBB494

originalBB498alteredBB:                           ; preds = %originalBB498, %2454
  br label %originalBB498

originalBB502alteredBB:                           ; preds = %originalBB502, %2481
  br label %originalBB502

originalBB506alteredBB:                           ; preds = %originalBB506, %2503
  br label %originalBB506

originalBB510alteredBB:                           ; preds = %originalBB510, %2525
  br label %originalBB510

originalBB514alteredBB:                           ; preds = %originalBB514, %2543
  br label %originalBB514

originalBB518alteredBB:                           ; preds = %originalBB518, %2569
  br label %originalBB518

originalBB522alteredBB:                           ; preds = %originalBB522, %2591
  %3701 = icmp eq i32 %2592, 7
  br label %originalBB522

originalBB526alteredBB:                           ; preds = %originalBB526, %2614
  br label %originalBB526

originalBB530alteredBB:                           ; preds = %originalBB530, %2635
  br label %originalBB530

originalBB534alteredBB:                           ; preds = %originalBB534, %2670
  %3702 = load i32, i32* @target_flags, align 4
  %_535 = sub i32 0, %3702
  %gen536 = add i32 %_535, 1
  %_537 = sub i32 %3702, 1
  %gen538 = mul i32 %_537, 1
  %3703 = and i32 %3702, 1
  %3704 = icmp ne i32 %3703, 0
  br label %originalBB534

originalBB542alteredBB:                           ; preds = %originalBB542, %2697
  %3705 = load i8, i8* %18, align 1
  %3706 = zext i8 %3705 to i32
  %3707 = icmp eq i32 %3706, 116
  br label %originalBB542

originalBB546alteredBB:                           ; preds = %originalBB546, %2725
  %3708 = select i1 %2726, i32 13, i32 0
  br label %originalBB546

originalBB550alteredBB:                           ; preds = %originalBB550, %2748
  %3709 = load i32, i32* @target_flags, align 4
  %_551 = shl i32 %3709, 1
  %_552 = sub i32 %3709, 1
  %gen553 = mul i32 %_552, 1
  %_554 = sub i32 0, %3709
  %gen555 = add i32 %_554, 1
  %_556 = sub i32 %3709, 1
  %gen557 = mul i32 %_556, 1
  %_558 = sub i32 0, %3709
  %gen559 = add i32 %_558, 1
  %_560 = sub i32 0, %3709
  %gen561 = add i32 %_560, 1
  %_562 = sub i32 0, %3709
  %gen563 = add i32 %_562, 1
  %_564 = sub i32 0, %3709
  %gen565 = add i32 %_564, 1
  %_566 = shl i32 %3709, 1
  %3710 = and i32 %3709, 1
  %3711 = icmp ne i32 %3710, 0
  br label %originalBB550

originalBB570alteredBB:                           ; preds = %originalBB570, %2779
  br label %originalBB570

originalBB574alteredBB:                           ; preds = %originalBB574, %2800
  br label %originalBB574

originalBB578alteredBB:                           ; preds = %originalBB578, %2854
  %3712 = load i8, i8* %18, align 1
  %3713 = zext i8 %3712 to i32
  %3714 = icmp eq i32 %3713, 65
  br label %originalBB578

originalBB582alteredBB:                           ; preds = %originalBB582, %2887
  br label %originalBB582

originalBB586alteredBB:                           ; preds = %originalBB586, %2905
  br label %originalBB586

originalBB590alteredBB:                           ; preds = %originalBB590, %2954
  br label %originalBB590

originalBB594alteredBB:                           ; preds = %originalBB594, %2980
  %3715 = load i32, i32* @target_flags, align 4
  %_595 = sub i32 0, %3715
  %gen596 = add i32 %_595, 33554432
  %_597 = sub i32 %3715, 33554432
  %gen598 = mul i32 %_597, 33554432
  %_599 = shl i32 %3715, 33554432
  %3716 = and i32 %3715, 33554432
  %3717 = icmp ne i32 %3716, 0
  %3718 = select i1 %3717, i32 12, i32 8
  br label %originalBB594

originalBB603alteredBB:                           ; preds = %originalBB603, %3018
  %3719 = select i1 %3019, i32 15, i32 0
  br label %originalBB603

originalBB607alteredBB:                           ; preds = %originalBB607, %3041
  %3720 = load i32, i32* @target_flags, align 4
  %_608 = shl i32 %3720, 1
  %_609 = shl i32 %3720, 1
  %_610 = shl i32 %3720, 1
  %3721 = and i32 %3720, 1
  %3722 = icmp ne i32 %3721, 0
  br label %originalBB607

originalBB614alteredBB:                           ; preds = %originalBB614, %3065
  %3723 = select i1 %3066, i32 13, i32 0
  br label %originalBB614

originalBB618alteredBB:                           ; preds = %originalBB618, %3096
  %3724 = select i1 %3097, i32 14, i32 0
  br label %originalBB618

originalBB622alteredBB:                           ; preds = %originalBB622, %3115
  %3725 = load i8, i8* %18, align 1
  %3726 = zext i8 %3725 to i32
  %3727 = icmp eq i32 %3726, 97
  br label %originalBB622

originalBB626alteredBB:                           ; preds = %originalBB626, %3135
  br label %originalBB626

originalBB630alteredBB:                           ; preds = %originalBB630, %3152
  %3728 = load i8, i8* %18, align 1
  %3729 = zext i8 %3728 to i32
  %3730 = icmp eq i32 %3729, 98
  br label %originalBB630

originalBB634alteredBB:                           ; preds = %originalBB634, %3177
  br label %originalBB634

originalBB638alteredBB:                           ; preds = %originalBB638, %3199
  %3731 = load i8, i8* %18, align 1
  %3732 = zext i8 %3731 to i32
  %3733 = icmp eq i32 %3732, 120
  br label %originalBB638

originalBB642alteredBB:                           ; preds = %originalBB642, %3224
  %3734 = load i8, i8* %18, align 1
  %3735 = zext i8 %3734 to i32
  %3736 = icmp eq i32 %3735, 89
  br label %originalBB642

originalBB646alteredBB:                           ; preds = %originalBB646, %3249
  %3737 = load i8, i8* %18, align 1
  %3738 = zext i8 %3737 to i32
  %3739 = icmp eq i32 %3738, 121
  br label %originalBB646

originalBB650alteredBB:                           ; preds = %originalBB650, %3269
  %3740 = load i32, i32* @target_flags, align 4
  %_651 = sub i32 %3740, 16384
  %gen652 = mul i32 %_651, 16384
  %_653 = shl i32 %3740, 16384
  %_654 = shl i32 %3740, 16384
  %_655 = shl i32 %3740, 16384
  %_656 = sub i32 0, %3740
  %gen657 = add i32 %_656, 16384
  %_658 = sub i32 %3740, 16384
  %gen659 = mul i32 %_658, 16384
  %3741 = and i32 %3740, 16384
  %3742 = icmp ne i32 %3741, 0
  %3743 = select i1 %3742, i32 17, i32 0
  br label %originalBB650

originalBB663alteredBB:                           ; preds = %originalBB663, %3290
  %3744 = load i8, i8* %18, align 1
  %3745 = zext i8 %3744 to i32
  %3746 = icmp eq i32 %3745, 65
  br label %originalBB663

originalBB667alteredBB:                           ; preds = %originalBB667, %3311
  %3747 = load i8, i8* %18, align 1
  %3748 = zext i8 %3747 to i32
  %3749 = icmp eq i32 %3748, 68
  br label %originalBB667

originalBB671alteredBB:                           ; preds = %originalBB671, %3331
  br label %originalBB671

originalBB675alteredBB:                           ; preds = %originalBB675, %3359
  br label %originalBB675

originalBB679alteredBB:                           ; preds = %originalBB679, %3383
  br label %originalBB679

originalBB683alteredBB:                           ; preds = %originalBB683, %3411
  br label %originalBB683

originalBB687alteredBB:                           ; preds = %originalBB687, %3438
  br label %originalBB687

originalBB691alteredBB:                           ; preds = %originalBB691, %3456
  br label %originalBB691

originalBB695alteredBB:                           ; preds = %originalBB695, %3473
  %3750 = load i32, i32* %15, align 4
  %_696 = sub i32 0, %3750
  %gen697 = add i32 %_696, 1
  %_698 = shl i32 %3750, 1
  %_699 = sub i32 0, %3750
  %gen700 = add i32 %_699, 1
  %_701 = sub i32 %3750, 1
  %gen702 = mul i32 %_701, 1
  %_703 = sub i32 %3750, 1
  %gen704 = mul i32 %_703, 1
  %3751 = add nsw i32 %3750, 1
  store i32 %3751, i32* %15, align 4
  br label %originalBB695
}

declare %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #1

declare i32 @count_occurrences(%struct.rtx_def*, %struct.rtx_def*, i32) #1

declare i32 @operands_match_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @replacement_quality(%struct.rtx_def*) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.rtx_def*, align 8
  %4 = alloca i32, align 4
  store %struct.rtx_def* %0, %struct.rtx_def** %3, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 65535
  %9 = icmp ne i32 %8, 61
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %1
  store i32 0, i32* %2, align 4
  br label %93

; <label>:11:                                     ; preds = %1
  %12 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %13 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %12, i32 0, i32 4
  %14 = bitcast %union.varray_data_tag* %13 to [1 x %struct.reg_info_def*]*
  %15 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %16, i64 0, i64 0
  %18 = bitcast %union.rtunion_def* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %14, i64 0, i64 %20
  %22 = load %struct.reg_info_def*, %struct.reg_info_def** %21, align 8
  %23 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %22, i32 0, i32 7
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %11
  store i32 0, i32* %2, align 4
  br label %93

; <label>:27:                                     ; preds = %11
  %28 = load i32*, i32** @regno_src_regno, align 8
  %29 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %30, i64 0, i64 0
  %32 = bitcast %union.rtunion_def* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %28, i64 %34
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %4, align 4
  %37 = load i32, i32* %4, align 4
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %39, label %56

; <label>:39:                                     ; preds = %27
  %40 = load i32, i32* @x.13
  %41 = load i32, i32* @y.14
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %39
  store i32 3, i32* %2, align 4
  %48 = load i32, i32* @x.13
  %49 = load i32, i32* @y.14
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %93

; <label>:56:                                     ; preds = %27
  %57 = load i32, i32* @x.13
  %58 = load i32, i32* @y.14
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %56
  %65 = load i32, i32* %4, align 4
  %66 = icmp slt i32 %65, 53
  %67 = load i32, i32* @x.13
  %68 = load i32, i32* @y.14
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %66, label %75, label %92

; <label>:75:                                     ; preds = %originalBBpart24
  %76 = load i32, i32* @x.13
  %77 = load i32, i32* @y.14
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %75
  store i32 1, i32* %2, align 4
  %84 = load i32, i32* @x.13
  %85 = load i32, i32* @y.14
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %93

; <label>:92:                                     ; preds = %originalBBpart24
  store i32 2, i32* %2, align 4
  br label %93

; <label>:93:                                     ; preds = %92, %originalBBpart28, %originalBBpart2, %26, %10
  %94 = load i32, i32* %2, align 4
  ret i32 %94

originalBBalteredBB:                              ; preds = %originalBB, %39
  store i32 3, i32* %2, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %56
  %95 = load i32, i32* %4, align 4
  %96 = icmp slt i32 %95, 53
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %75
  store i32 1, i32* %2, align 4
  br label %originalBB6
}

declare i32 @reg_preferred_class(i32) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @regclass_compatible_p(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %145, label %8

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.15
  %10 = load i32, i32* @y.16
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %8
  %17 = load i32, i32* %3, align 4
  %18 = load i32, i32* %4, align 4
  %19 = call i32 @reg_class_subset_p(i32 %17, i32 %18)
  %20 = icmp ne i32 %19, 0
  %21 = load i32, i32* @x.15
  %22 = load i32, i32* @y.16
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %82

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i32, i32* %3, align 4
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %82, label %32

; <label>:32:                                     ; preds = %29
  %33 = load i32, i32* %3, align 4
  %34 = icmp eq i32 %33, 2
  br i1 %34, label %82, label %35

; <label>:35:                                     ; preds = %32
  %36 = load i32, i32* @x.15
  %37 = load i32, i32* @y.16
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %35
  %44 = load i32, i32* %3, align 4
  %45 = icmp eq i32 %44, 3
  %46 = load i32, i32* @x.15
  %47 = load i32, i32* @y.16
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %45, label %82, label %54

; <label>:54:                                     ; preds = %originalBBpart24
  %55 = load i32, i32* %3, align 4
  %56 = icmp eq i32 %55, 4
  br i1 %56, label %82, label %57

; <label>:57:                                     ; preds = %54
  %58 = load i32, i32* %3, align 4
  %59 = icmp eq i32 %58, 7
  br i1 %59, label %82, label %60

; <label>:60:                                     ; preds = %57
  %61 = load i32, i32* %3, align 4
  %62 = icmp eq i32 %61, 5
  br i1 %62, label %82, label %63

; <label>:63:                                     ; preds = %60
  %64 = load i32, i32* @x.15
  %65 = load i32, i32* @y.16
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %63
  %72 = load i32, i32* %3, align 4
  %73 = icmp eq i32 %72, 6
  %74 = load i32, i32* @x.15
  %75 = load i32, i32* @y.16
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %73, label %82, label %145

; <label>:82:                                     ; preds = %originalBBpart28, %60, %57, %54, %originalBBpart24, %32, %29, %originalBBpart2
  %83 = load i32, i32* %4, align 4
  %84 = load i32, i32* %3, align 4
  %85 = call i32 @reg_class_subset_p(i32 %83, i32 %84)
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %143

; <label>:87:                                     ; preds = %82
  %88 = load i32, i32* %4, align 4
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %140, label %90

; <label>:90:                                     ; preds = %87
  %91 = load i32, i32* %4, align 4
  %92 = icmp eq i32 %91, 2
  br i1 %92, label %140, label %93

; <label>:93:                                     ; preds = %90
  %94 = load i32, i32* %4, align 4
  %95 = icmp eq i32 %94, 3
  br i1 %95, label %140, label %96

; <label>:96:                                     ; preds = %93
  %97 = load i32, i32* @x.15
  %98 = load i32, i32* @y.16
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %96
  %105 = load i32, i32* %4, align 4
  %106 = icmp eq i32 %105, 4
  %107 = load i32, i32* @x.15
  %108 = load i32, i32* @y.16
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %106, label %140, label %115

; <label>:115:                                    ; preds = %originalBBpart212
  %116 = load i32, i32* %4, align 4
  %117 = icmp eq i32 %116, 7
  br i1 %117, label %140, label %118

; <label>:118:                                    ; preds = %115
  %119 = load i32, i32* @x.15
  %120 = load i32, i32* @y.16
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %118
  %127 = load i32, i32* %4, align 4
  %128 = icmp eq i32 %127, 5
  %129 = load i32, i32* @x.15
  %130 = load i32, i32* @y.16
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %128, label %140, label %137

; <label>:137:                                    ; preds = %originalBBpart216
  %138 = load i32, i32* %4, align 4
  %139 = icmp eq i32 %138, 6
  br label %140

; <label>:140:                                    ; preds = %137, %originalBBpart216, %115, %originalBBpart212, %93, %90, %87
  %141 = phi i1 [ true, %originalBBpart216 ], [ true, %115 ], [ true, %originalBBpart212 ], [ true, %93 ], [ true, %90 ], [ true, %87 ], [ %139, %137 ]
  %142 = xor i1 %141, true
  br label %143

; <label>:143:                                    ; preds = %140, %82
  %144 = phi i1 [ false, %82 ], [ %142, %140 ]
  br label %145

; <label>:145:                                    ; preds = %143, %originalBBpart28, %2
  %146 = phi i1 [ true, %originalBBpart28 ], [ true, %2 ], [ %144, %143 ]
  %147 = zext i1 %146 to i32
  ret i32 %147

originalBBalteredBB:                              ; preds = %originalBB, %8
  %148 = load i32, i32* %3, align 4
  %149 = load i32, i32* %4, align 4
  %150 = call i32 @reg_class_subset_p(i32 %148, i32 %149)
  %151 = icmp ne i32 %150, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %152 = load i32, i32* %3, align 4
  %153 = icmp eq i32 %152, 3
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  %154 = load i32, i32* %3, align 4
  %155 = icmp eq i32 %154, 6
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %96
  %156 = load i32, i32* %4, align 4
  %157 = icmp eq i32 %156, 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %118
  %158 = load i32, i32* %4, align 4
  %159 = icmp eq i32 %158, 5
  br label %originalBB14
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fixup_match_1(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct._IO_FILE*) #0 {
  %10 = alloca i32, align 4
  %11 = alloca %struct.rtx_def*, align 8
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %struct.rtx_def*, align 8
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca %struct.rtx_def*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct._IO_FILE*, align 8
  %20 = alloca %struct.rtx_def*, align 8
  %21 = alloca %struct.rtx_def*, align 8
  %22 = alloca %struct.rtx_def*, align 8
  %23 = alloca %struct.rtx_def*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca %struct.rtx_def*, align 8
  %31 = alloca %struct.rtx_def*, align 8
  %32 = alloca %struct.rtx_def*, align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca %struct.rtx_def*, align 8
  %36 = alloca %struct.rtx_def*, align 8
  %37 = alloca %struct.rtx_def*, align 8
  %38 = alloca %struct.rtx_def*, align 8
  %39 = alloca %struct.rtx_def*, align 8
  %40 = alloca %struct.rtx_def*, align 8
  %41 = alloca %struct.rtx_def*, align 8
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca %struct.rtx_def*, align 8
  %45 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %11, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %12, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %13, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %14, align 8
  store %struct.rtx_def* %4, %struct.rtx_def** %15, align 8
  store i32 %5, i32* %16, align 4
  store i32 %6, i32* %17, align 4
  store i32 %7, i32* %18, align 4
  store %struct._IO_FILE* %8, %struct._IO_FILE** %19, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %21, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %22, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %23, align 8
  store i32 0, i32* %24, align 4
  store i32 0, i32* %25, align 4
  store i32 0, i32* %26, align 4
  store i32 37, i32* %27, align 4
  store i64 0, i64* %28, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %30, align 8
  %46 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %47 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %48 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %46, i32 1, %struct.rtx_def* %47)
  store %struct.rtx_def* %48, %struct.rtx_def** %31, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %32, align 8
  %49 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %50 = bitcast %struct.rtx_def* %49 to i32*
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 26
  %53 = and i32 %52, 1
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %56

; <label>:55:                                     ; preds = %9
  store i32 0, i32* %10, align 4
  br label %2524

; <label>:56:                                     ; preds = %9
  %57 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %58 = icmp ne %struct.rtx_def* %57, null
  br i1 %58, label %149, label %59

; <label>:59:                                     ; preds = %56
  %60 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %61, i64 0, i64 1
  %63 = bitcast %union.rtunion_def* %62 to %struct.rtx_def**
  %64 = load %struct.rtx_def*, %struct.rtx_def** %63, align 8
  %65 = bitcast %struct.rtx_def* %64 to i32*
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 65535
  store i32 %67, i32* %27, align 4
  %68 = load i32, i32* %27, align 4
  %69 = icmp eq i32 %68, 75
  br i1 %69, label %79, label %70

; <label>:70:                                     ; preds = %59
  %71 = load i32, i32* %27, align 4
  %72 = icmp eq i32 %71, 90
  br i1 %72, label %79, label %73

; <label>:73:                                     ; preds = %70
  %74 = load i32, i32* %27, align 4
  %75 = icmp eq i32 %74, 87
  br i1 %75, label %79, label %76

; <label>:76:                                     ; preds = %73
  %77 = load i32, i32* %27, align 4
  %78 = icmp eq i32 %77, 89
  br i1 %78, label %79, label %119

; <label>:79:                                     ; preds = %76, %73, %70, %59
  %80 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %81, i64 0, i64 1
  %83 = bitcast %union.rtunion_def* %82 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %83, align 8
  %85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %85, i64 0, i64 0
  %87 = bitcast %union.rtunion_def* %86 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %87, align 8
  %89 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %90 = icmp eq %struct.rtx_def* %88, %89
  br i1 %90, label %91, label %119

; <label>:91:                                     ; preds = %79
  %92 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %93, i64 0, i64 1
  %95 = bitcast %union.rtunion_def* %94 to %struct.rtx_def**
  %96 = load %struct.rtx_def*, %struct.rtx_def** %95, align 8
  %97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %97, i64 0, i64 1
  %99 = bitcast %union.rtunion_def* %98 to %struct.rtx_def**
  %100 = load %struct.rtx_def*, %struct.rtx_def** %99, align 8
  %101 = bitcast %struct.rtx_def* %100 to i32*
  %102 = load i32, i32* %101, align 8
  %103 = and i32 %102, 65535
  %104 = icmp eq i32 %103, 54
  br i1 %104, label %105, label %119

; <label>:105:                                    ; preds = %91
  %106 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1
  %108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %107, i64 0, i64 1
  %109 = bitcast %union.rtunion_def* %108 to %struct.rtx_def**
  %110 = load %struct.rtx_def*, %struct.rtx_def** %109, align 8
  %111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1
  %112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %111, i64 0, i64 1
  %113 = bitcast %union.rtunion_def* %112 to %struct.rtx_def**
  %114 = load %struct.rtx_def*, %struct.rtx_def** %113, align 8
  %115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %115, i64 0, i64 0
  %117 = bitcast %union.rtunion_def* %116 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %28, align 8
  br label %132

; <label>:119:                                    ; preds = %91, %79, %76
  %120 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %121, i64 0, i64 1
  %123 = bitcast %union.rtunion_def* %122 to %struct.rtx_def**
  %124 = load %struct.rtx_def*, %struct.rtx_def** %123, align 8
  %125 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %126 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %127 = call i32 @stable_and_no_regs_but_for_p(%struct.rtx_def* %124, %struct.rtx_def* %125, %struct.rtx_def* %126)
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %130, label %129

; <label>:129:                                    ; preds = %119
  store i32 0, i32* %10, align 4
  br label %2524

; <label>:130:                                    ; preds = %119
  store i32 37, i32* %27, align 4
  br label %131

; <label>:131:                                    ; preds = %130
  br label %132

; <label>:132:                                    ; preds = %131, %105
  %133 = load i32, i32* @x.17
  %134 = load i32, i32* @y.18
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %132
  %141 = load i32, i32* @x.17
  %142 = load i32, i32* @y.18
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %149

; <label>:149:                                    ; preds = %originalBBpart2, %56
  %150 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %151 = icmp ne %struct._IO_FILE* %150, null
  br i1 %151, label %152, label %162

; <label>:152:                                    ; preds = %149
  %153 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %154 = load i32, i32* %17, align 4
  %155 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %155, i32 0, i32 1
  %157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %156, i64 0, i64 0
  %158 = bitcast %union.rtunion_def* %157 to i32*
  %159 = load i32, i32* %158, align 8
  %160 = load i32, i32* %18, align 4
  %161 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i32 0, i32 0), i32 %154, i32 %159, i32 %160)
  br label %162

; <label>:162:                                    ; preds = %152, %149
  %163 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %164 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %165 = call %struct.rtx_def* @get_insns()
  %166 = call i32 @reg_is_remote_constant_p(%struct.rtx_def* %163, %struct.rtx_def* %164, %struct.rtx_def* %165)
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %168, label %169

; <label>:168:                                    ; preds = %162
  store i32 0, i32* %10, align 4
  br label %2524

; <label>:169:                                    ; preds = %162
  store i32 0, i32* %34, align 4
  store i32 0, i32* %33, align 4
  %170 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %171 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %171, i64 0, i64 2
  %173 = bitcast %union.rtunion_def* %172 to %struct.rtx_def**
  %174 = load %struct.rtx_def*, %struct.rtx_def** %173, align 8
  store %struct.rtx_def* %174, %struct.rtx_def** %20, align 8
  br label %175

; <label>:175:                                    ; preds = %1227, %169
  %176 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %177 = icmp ne %struct.rtx_def* %176, null
  br i1 %177, label %178, label %1233

; <label>:178:                                    ; preds = %175
  %179 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %180 = bitcast %struct.rtx_def* %179 to i32*
  %181 = load i32, i32* %180, align 8
  %182 = and i32 %181, 65535
  %183 = icmp eq i32 %182, 34
  br i1 %183, label %184, label %196

; <label>:184:                                    ; preds = %178
  %185 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1
  %187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %186, i64 0, i64 7
  %188 = bitcast %union.rtunion_def* %187 to %struct.rtx_def**
  %189 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %189, i32 0, i32 1
  %191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %190, i64 0, i64 0
  %192 = bitcast %union.rtunion_def* %191 to i32*
  %193 = load i32, i32* %192, align 8
  %194 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %195 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  call void @replace_in_call_usage(%struct.rtx_def** %188, i32 %193, %struct.rtx_def* %194, %struct.rtx_def* %195)
  br label %196

; <label>:196:                                    ; preds = %184, %178
  %197 = load i32, i32* @x.17
  %198 = load i32, i32* @y.18
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %196
  %205 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %206 = call i32 @perhaps_ends_bb_p(%struct.rtx_def* %205)
  %207 = icmp ne i32 %206, 0
  %208 = load i32, i32* @x.17
  %209 = load i32, i32* @y.18
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %207, label %216, label %217

; <label>:216:                                    ; preds = %originalBBpart24
  br label %1233

; <label>:217:                                    ; preds = %originalBBpart24
  %218 = load i32, i32* @x.17
  %219 = load i32, i32* @y.18
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %217
  %226 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %227 = bitcast %struct.rtx_def* %226 to i32*
  %228 = load i32, i32* %227, align 8
  %229 = and i32 %228, 65535
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = sext i8 %232 to i32
  %234 = icmp eq i32 %233, 105
  %235 = load i32, i32* @x.17
  %236 = load i32, i32* @y.18
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBBpart212, label %originalBB6alteredBB

originalBBpart212:                                ; preds = %originalBB6
  br i1 %234, label %244, label %243

; <label>:243:                                    ; preds = %originalBBpart212
  br label %1227

; <label>:244:                                    ; preds = %originalBBpart212
  br label %245

; <label>:245:                                    ; preds = %244
  %246 = load i32, i32* %33, align 4
  %247 = add nsw i32 %246, 1
  store i32 %247, i32* %33, align 4
  %248 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %249 = icmp ne %struct.rtx_def* %248, null
  br i1 %249, label %250, label %253

; <label>:250:                                    ; preds = %245
  %251 = load i32, i32* %34, align 4
  %252 = add nsw i32 %251, 1
  store i32 %252, i32* %34, align 4
  br label %253

; <label>:253:                                    ; preds = %250, %245
  %254 = load i32, i32* @x.17
  %255 = load i32, i32* @y.18
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %253
  %262 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %263 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %264 = call i32 @reg_set_p(%struct.rtx_def* %262, %struct.rtx_def* %263)
  %265 = icmp ne i32 %264, 0
  %266 = load i32, i32* @x.17
  %267 = load i32, i32* @y.18
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %265, label %302, label %274

; <label>:274:                                    ; preds = %originalBBpart216
  %275 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %276 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %277 = call i32 @reg_set_p(%struct.rtx_def* %275, %struct.rtx_def* %276)
  %278 = icmp ne i32 %277, 0
  br i1 %278, label %302, label %279

; <label>:279:                                    ; preds = %274
  %280 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %281 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %280, i32 0, i32 1
  %282 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %281, i64 0, i64 3
  %283 = bitcast %union.rtunion_def* %282 to %struct.rtx_def**
  %284 = load %struct.rtx_def*, %struct.rtx_def** %283, align 8
  %285 = bitcast %struct.rtx_def* %284 to i32*
  %286 = load i32, i32* %285, align 8
  %287 = and i32 %286, 65535
  %288 = icmp eq i32 %287, 48
  br i1 %288, label %289, label %303

; <label>:289:                                    ; preds = %279
  %290 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %291 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %292 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %291, i32 0, i32 1
  %293 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %292, i64 0, i64 3
  %294 = bitcast %union.rtunion_def* %293 to %struct.rtx_def**
  %295 = load %struct.rtx_def*, %struct.rtx_def** %294, align 8
  %296 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %295, i32 0, i32 1
  %297 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %296, i64 0, i64 0
  %298 = bitcast %union.rtunion_def* %297 to %struct.rtx_def**
  %299 = load %struct.rtx_def*, %struct.rtx_def** %298, align 8
  %300 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %290, %struct.rtx_def* %299)
  %301 = icmp ne i32 %300, 0
  br i1 %301, label %302, label %303

; <label>:302:                                    ; preds = %289, %274, %originalBBpart216
  br label %1233

; <label>:303:                                    ; preds = %289, %279
  %304 = load i32, i32* @x.17
  %305 = load i32, i32* @y.18
  %306 = sub i32 %304, 1
  %307 = mul i32 %304, %306
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %309, %310
  br i1 %311, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %303
  %312 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %313 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %313, i32 0, i32 1
  %315 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %314, i64 0, i64 0
  %316 = bitcast %union.rtunion_def* %315 to i32*
  %317 = load i32, i32* %316, align 8
  %318 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %312, i32 1, i32 %317)
  store %struct.rtx_def* %318, %struct.rtx_def** %32, align 8
  %319 = icmp ne %struct.rtx_def* %318, null
  %320 = load i32, i32* @x.17
  %321 = load i32, i32* @y.18
  %322 = sub i32 %320, 1
  %323 = mul i32 %320, %322
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %325, %326
  br i1 %327, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %319, label %328, label %1104

; <label>:328:                                    ; preds = %originalBBpart220
  %329 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %330 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %329, i32 0, i32 1
  %331 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %330, i64 0, i64 0
  %332 = bitcast %union.rtunion_def* %331 to %struct.rtx_def**
  %333 = load %struct.rtx_def*, %struct.rtx_def** %332, align 8
  %334 = bitcast %struct.rtx_def* %333 to i32*
  %335 = load i32, i32* %334, align 8
  %336 = lshr i32 %335, 16
  %337 = and i32 %336, 255
  %338 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %339 = bitcast %struct.rtx_def* %338 to i32*
  %340 = load i32, i32* %339, align 8
  %341 = lshr i32 %340, 16
  %342 = and i32 %341, 255
  %343 = icmp eq i32 %337, %342
  br i1 %343, label %344, label %1104

; <label>:344:                                    ; preds = %328
  %345 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %346 = icmp ne %struct.rtx_def* %345, null
  br i1 %346, label %347, label %375

; <label>:347:                                    ; preds = %344
  %348 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %349 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %348, i32 0, i32 1
  %350 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %349, i64 0, i64 1
  %351 = bitcast %union.rtunion_def* %350 to %struct.rtx_def**
  %352 = load %struct.rtx_def*, %struct.rtx_def** %351, align 8
  %353 = bitcast %struct.rtx_def* %352 to i32*
  %354 = load i32, i32* %353, align 8
  %355 = lshr i32 %354, 16
  %356 = and i32 %355, 255
  %357 = icmp ne i32 %356, 0
  br i1 %357, label %358, label %375

; <label>:358:                                    ; preds = %347
  %359 = load i32, i32* @x.17
  %360 = load i32, i32* @y.18
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %358
  %367 = load i32, i32* @x.17
  %368 = load i32, i32* @y.18
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %1233

; <label>:375:                                    ; preds = %347, %344
  %376 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %377 = icmp ne %struct.rtx_def* %376, null
  br i1 %377, label %1089, label %378

; <label>:378:                                    ; preds = %375
  store %struct.rtx_def* null, %struct.rtx_def** %36, align 8
  %379 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %380 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %381 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %380, i32 0, i32 1
  %382 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %381, i64 0, i64 3
  %383 = bitcast %union.rtunion_def* %382 to %struct.rtx_def**
  %384 = load %struct.rtx_def*, %struct.rtx_def** %383, align 8
  %385 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %379, %struct.rtx_def* %384)
  %386 = icmp ne i32 %385, 0
  br i1 %386, label %387, label %404

; <label>:387:                                    ; preds = %378
  %388 = load i32, i32* @x.17
  %389 = load i32, i32* @y.18
  %390 = sub i32 %388, 1
  %391 = mul i32 %388, %390
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %393, %394
  br i1 %395, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %387
  %396 = load i32, i32* @x.17
  %397 = load i32, i32* @y.18
  %398 = sub i32 %396, 1
  %399 = mul i32 %396, %398
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %401, %402
  br i1 %403, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %1233

; <label>:404:                                    ; preds = %378
  %405 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  store %struct.rtx_def* %405, %struct.rtx_def** %35, align 8
  br label %406

; <label>:406:                                    ; preds = %491, %404
  %407 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %408 = icmp ne %struct.rtx_def* %407, null
  br i1 %408, label %409, label %497

; <label>:409:                                    ; preds = %406
  %410 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %411 = call i32 @perhaps_ends_bb_p(%struct.rtx_def* %410)
  %412 = icmp ne i32 %411, 0
  br i1 %412, label %413, label %430

; <label>:413:                                    ; preds = %409
  %414 = load i32, i32* @x.17
  %415 = load i32, i32* @y.18
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %413
  store %struct.rtx_def* null, %struct.rtx_def** %35, align 8
  %422 = load i32, i32* @x.17
  %423 = load i32, i32* @y.18
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %497

; <label>:430:                                    ; preds = %409
  %431 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %432 = bitcast %struct.rtx_def* %431 to i32*
  %433 = load i32, i32* %432, align 8
  %434 = and i32 %433, 65535
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %435
  %437 = load i8, i8* %436, align 1
  %438 = sext i8 %437 to i32
  %439 = icmp eq i32 %438, 105
  br i1 %439, label %441, label %440

; <label>:440:                                    ; preds = %430
  br label %491

; <label>:441:                                    ; preds = %430
  %442 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %443 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %444 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %443, i32 0, i32 1
  %445 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %444, i64 0, i64 3
  %446 = bitcast %union.rtunion_def* %445 to %struct.rtx_def**
  %447 = load %struct.rtx_def*, %struct.rtx_def** %446, align 8
  %448 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %442, %struct.rtx_def* %447)
  %449 = icmp ne i32 %448, 0
  br i1 %449, label %455, label %450

; <label>:450:                                    ; preds = %441
  %451 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %452 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %453 = call i32 @reg_set_p(%struct.rtx_def* %451, %struct.rtx_def* %452)
  %454 = icmp ne i32 %453, 0
  br i1 %454, label %455, label %472

; <label>:455:                                    ; preds = %450, %441
  %456 = load i32, i32* @x.17
  %457 = load i32, i32* @y.18
  %458 = sub i32 %456, 1
  %459 = mul i32 %456, %458
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %461, %462
  br i1 %463, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %455
  %464 = load i32, i32* @x.17
  %465 = load i32, i32* @y.18
  %466 = sub i32 %464, 1
  %467 = mul i32 %464, %466
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %469, %470
  br i1 %471, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %497

; <label>:472:                                    ; preds = %450
  br label %473

; <label>:473:                                    ; preds = %472
  br label %474

; <label>:474:                                    ; preds = %473
  %475 = load i32, i32* @x.17
  %476 = load i32, i32* @y.18
  %477 = sub i32 %475, 1
  %478 = mul i32 %475, %477
  %479 = urem i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %480, %481
  br i1 %482, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %474
  %483 = load i32, i32* @x.17
  %484 = load i32, i32* @y.18
  %485 = sub i32 %483, 1
  %486 = mul i32 %483, %485
  %487 = urem i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %488, %489
  br i1 %490, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %491

; <label>:491:                                    ; preds = %originalBBpart240, %440
  %492 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %493 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %492, i32 0, i32 1
  %494 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %493, i64 0, i64 2
  %495 = bitcast %union.rtunion_def* %494 to %struct.rtx_def**
  %496 = load %struct.rtx_def*, %struct.rtx_def** %495, align 8
  store %struct.rtx_def* %496, %struct.rtx_def** %35, align 8
  br label %406

; <label>:497:                                    ; preds = %originalBBpart236, %originalBBpart232, %406
  %498 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %499 = icmp ne %struct.rtx_def* %498, null
  br i1 %499, label %500, label %603

; <label>:500:                                    ; preds = %497
  %501 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %502 = bitcast %struct.rtx_def* %501 to i32*
  %503 = load i32, i32* %502, align 8
  %504 = and i32 %503, 65535
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %505
  %507 = load i8, i8* %506, align 1
  %508 = sext i8 %507 to i32
  %509 = icmp eq i32 %508, 105
  br i1 %509, label %510, label %584

; <label>:510:                                    ; preds = %500
  %511 = load i32, i32* @x.17
  %512 = load i32, i32* @y.18
  %513 = sub i32 %511, 1
  %514 = mul i32 %511, %513
  %515 = urem i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = icmp slt i32 %512, 10
  %518 = or i1 %516, %517
  br i1 %518, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %510
  %519 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %520 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %519, i32 0, i32 1
  %521 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %520, i64 0, i64 3
  %522 = bitcast %union.rtunion_def* %521 to %struct.rtx_def**
  %523 = load %struct.rtx_def*, %struct.rtx_def** %522, align 8
  %524 = bitcast %struct.rtx_def* %523 to i32*
  %525 = load i32, i32* %524, align 8
  %526 = and i32 %525, 65535
  %527 = icmp eq i32 %526, 47
  %528 = load i32, i32* @x.17
  %529 = load i32, i32* @y.18
  %530 = sub i32 %528, 1
  %531 = mul i32 %528, %530
  %532 = urem i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = icmp slt i32 %529, 10
  %535 = or i1 %533, %534
  br i1 %535, label %originalBBpart255, label %originalBB42alteredBB

originalBBpart255:                                ; preds = %originalBB42
  br i1 %527, label %536, label %558

; <label>:536:                                    ; preds = %originalBBpart255
  %537 = load i32, i32* @x.17
  %538 = load i32, i32* @y.18
  %539 = sub i32 %537, 1
  %540 = mul i32 %537, %539
  %541 = urem i32 %540, 2
  %542 = icmp eq i32 %541, 0
  %543 = icmp slt i32 %538, 10
  %544 = or i1 %542, %543
  br i1 %544, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %536
  %545 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %546 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %545, i32 0, i32 1
  %547 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %546, i64 0, i64 3
  %548 = bitcast %union.rtunion_def* %547 to %struct.rtx_def**
  %549 = load %struct.rtx_def*, %struct.rtx_def** %548, align 8
  %550 = load i32, i32* @x.17
  %551 = load i32, i32* @y.18
  %552 = sub i32 %550, 1
  %553 = mul i32 %550, %552
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %551, 10
  %557 = or i1 %555, %556
  br i1 %557, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br label %582

; <label>:558:                                    ; preds = %originalBBpart255
  %559 = load i32, i32* @x.17
  %560 = load i32, i32* @y.18
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %originalBB61alteredBB, %558
  %567 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %568 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %569 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %568, i32 0, i32 1
  %570 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %569, i64 0, i64 3
  %571 = bitcast %union.rtunion_def* %570 to %struct.rtx_def**
  %572 = load %struct.rtx_def*, %struct.rtx_def** %571, align 8
  %573 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %567, %struct.rtx_def* %572)
  %574 = load i32, i32* @x.17
  %575 = load i32, i32* @y.18
  %576 = sub i32 %574, 1
  %577 = mul i32 %574, %576
  %578 = urem i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = icmp slt i32 %575, 10
  %581 = or i1 %579, %580
  br i1 %581, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br label %582

; <label>:582:                                    ; preds = %originalBBpart263, %originalBBpart259
  %583 = phi %struct.rtx_def* [ %549, %originalBBpart259 ], [ %573, %originalBBpart263 ]
  br label %601

; <label>:584:                                    ; preds = %500
  %585 = load i32, i32* @x.17
  %586 = load i32, i32* @y.18
  %587 = sub i32 %585, 1
  %588 = mul i32 %585, %587
  %589 = urem i32 %588, 2
  %590 = icmp eq i32 %589, 0
  %591 = icmp slt i32 %586, 10
  %592 = or i1 %590, %591
  br i1 %592, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %originalBB65alteredBB, %584
  %593 = load i32, i32* @x.17
  %594 = load i32, i32* @y.18
  %595 = sub i32 %593, 1
  %596 = mul i32 %593, %595
  %597 = urem i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = icmp slt i32 %594, 10
  %600 = or i1 %598, %599
  br i1 %600, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br label %601

; <label>:601:                                    ; preds = %originalBBpart267, %582
  %602 = phi %struct.rtx_def* [ %583, %582 ], [ null, %originalBBpart267 ]
  store %struct.rtx_def* %602, %struct.rtx_def** %36, align 8
  br label %603

; <label>:603:                                    ; preds = %601, %497
  %604 = load i32, i32* @x.17
  %605 = load i32, i32* @y.18
  %606 = sub i32 %604, 1
  %607 = mul i32 %604, %606
  %608 = urem i32 %607, 2
  %609 = icmp eq i32 %608, 0
  %610 = icmp slt i32 %605, 10
  %611 = or i1 %609, %610
  br i1 %611, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %originalBB69alteredBB, %603
  %612 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %613 = icmp ne %struct.rtx_def* %612, null
  %614 = load i32, i32* @x.17
  %615 = load i32, i32* @y.18
  %616 = sub i32 %614, 1
  %617 = mul i32 %614, %616
  %618 = urem i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = icmp slt i32 %615, 10
  %621 = or i1 %619, %620
  br i1 %621, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br i1 %613, label %622, label %723

; <label>:622:                                    ; preds = %originalBBpart271
  %623 = load i32, i32* @x.17
  %624 = load i32, i32* @y.18
  %625 = sub i32 %623, 1
  %626 = mul i32 %623, %625
  %627 = urem i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = icmp slt i32 %624, 10
  %630 = or i1 %628, %629
  br i1 %630, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %originalBB73alteredBB, %622
  %631 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  %632 = icmp ne %struct.rtx_def* %631, null
  %633 = load i32, i32* @x.17
  %634 = load i32, i32* @y.18
  %635 = sub i32 %633, 1
  %636 = mul i32 %633, %635
  %637 = urem i32 %636, 2
  %638 = icmp eq i32 %637, 0
  %639 = icmp slt i32 %634, 10
  %640 = or i1 %638, %639
  br i1 %640, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  br i1 %632, label %641, label %723

; <label>:641:                                    ; preds = %originalBBpart275
  %642 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  %643 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %642, i32 0, i32 1
  %644 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %643, i64 0, i64 1
  %645 = bitcast %union.rtunion_def* %644 to %struct.rtx_def**
  %646 = load %struct.rtx_def*, %struct.rtx_def** %645, align 8
  %647 = bitcast %struct.rtx_def* %646 to i32*
  %648 = load i32, i32* %647, align 8
  %649 = and i32 %648, 65535
  %650 = load i32, i32* %27, align 4
  %651 = icmp ne i32 %649, %650
  br i1 %651, label %723, label %652

; <label>:652:                                    ; preds = %641
  %653 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  %654 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %653, i32 0, i32 1
  %655 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %654, i64 0, i64 1
  %656 = bitcast %union.rtunion_def* %655 to %struct.rtx_def**
  %657 = load %struct.rtx_def*, %struct.rtx_def** %656, align 8
  %658 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %657, i32 0, i32 1
  %659 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %658, i64 0, i64 0
  %660 = bitcast %union.rtunion_def* %659 to %struct.rtx_def**
  %661 = load %struct.rtx_def*, %struct.rtx_def** %660, align 8
  %662 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %663 = icmp ne %struct.rtx_def* %661, %662
  br i1 %663, label %723, label %664

; <label>:664:                                    ; preds = %652
  %665 = load i32, i32* @x.17
  %666 = load i32, i32* @y.18
  %667 = sub i32 %665, 1
  %668 = mul i32 %665, %667
  %669 = urem i32 %668, 2
  %670 = icmp eq i32 %669, 0
  %671 = icmp slt i32 %666, 10
  %672 = or i1 %670, %671
  br i1 %672, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %originalBB77alteredBB, %664
  %673 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  %674 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %673, i32 0, i32 1
  %675 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %674, i64 0, i64 1
  %676 = bitcast %union.rtunion_def* %675 to %struct.rtx_def**
  %677 = load %struct.rtx_def*, %struct.rtx_def** %676, align 8
  %678 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %677, i32 0, i32 1
  %679 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %678, i64 0, i64 1
  %680 = bitcast %union.rtunion_def* %679 to %struct.rtx_def**
  %681 = load %struct.rtx_def*, %struct.rtx_def** %680, align 8
  %682 = bitcast %struct.rtx_def* %681 to i32*
  %683 = load i32, i32* %682, align 8
  %684 = and i32 %683, 65535
  %685 = icmp ne i32 %684, 54
  %686 = load i32, i32* @x.17
  %687 = load i32, i32* @y.18
  %688 = sub i32 %686, 1
  %689 = mul i32 %686, %688
  %690 = urem i32 %689, 2
  %691 = icmp eq i32 %690, 0
  %692 = icmp slt i32 %687, 10
  %693 = or i1 %691, %692
  br i1 %693, label %originalBBpart281, label %originalBB77alteredBB

originalBBpart281:                                ; preds = %originalBB77
  br i1 %685, label %723, label %694

; <label>:694:                                    ; preds = %originalBBpart281
  %695 = load i32, i32* @x.17
  %696 = load i32, i32* @y.18
  %697 = sub i32 %695, 1
  %698 = mul i32 %695, %697
  %699 = urem i32 %698, 2
  %700 = icmp eq i32 %699, 0
  %701 = icmp slt i32 %696, 10
  %702 = or i1 %700, %701
  br i1 %702, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %originalBB83alteredBB, %694
  %703 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  %704 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %703, i32 0, i32 1
  %705 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %704, i64 0, i64 0
  %706 = bitcast %union.rtunion_def* %705 to %struct.rtx_def**
  %707 = load %struct.rtx_def*, %struct.rtx_def** %706, align 8
  %708 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %709 = icmp ne %struct.rtx_def* %707, %708
  %710 = load i32, i32* @x.17
  %711 = load i32, i32* @y.18
  %712 = sub i32 %710, 1
  %713 = mul i32 %710, %712
  %714 = urem i32 %713, 2
  %715 = icmp eq i32 %714, 0
  %716 = icmp slt i32 %711, 10
  %717 = or i1 %715, %716
  br i1 %717, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br i1 %709, label %718, label %1022

; <label>:718:                                    ; preds = %originalBBpart285
  %719 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %720 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %721 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %719, i32 1, %struct.rtx_def* %720)
  %722 = icmp ne %struct.rtx_def* %721, null
  br i1 %722, label %1022, label %723

; <label>:723:                                    ; preds = %718, %originalBBpart281, %652, %641, %originalBBpart275, %originalBBpart271
  %724 = load i32, i32* %27, align 4
  %725 = icmp eq i32 %724, 75
  br i1 %725, label %726, label %988

; <label>:726:                                    ; preds = %723
  %727 = load i32, i32* %16, align 4
  %728 = icmp ne i32 %727, 0
  br i1 %728, label %729, label %988

; <label>:729:                                    ; preds = %726
  %730 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %731 = icmp ne %struct.rtx_def* %730, null
  br i1 %731, label %732, label %975

; <label>:732:                                    ; preds = %729
  %733 = load i32, i32* @x.17
  %734 = load i32, i32* @y.18
  %735 = sub i32 %733, 1
  %736 = mul i32 %733, %735
  %737 = urem i32 %736, 2
  %738 = icmp eq i32 %737, 0
  %739 = icmp slt i32 %734, 10
  %740 = or i1 %738, %739
  br i1 %740, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %originalBB87alteredBB, %732
  %741 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %742 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %741, i32 0, i32 4
  %743 = bitcast %union.varray_data_tag* %742 to [1 x %struct.reg_info_def*]*
  %744 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %745 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %744, i32 0, i32 1
  %746 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %745, i64 0, i64 0
  %747 = bitcast %union.rtunion_def* %746 to i32*
  %748 = load i32, i32* %747, align 8
  %749 = zext i32 %748 to i64
  %750 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %743, i64 0, i64 %749
  %751 = load %struct.reg_info_def*, %struct.reg_info_def** %750, align 8
  %752 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %751, i32 0, i32 8
  %753 = load i32, i32* %752, align 4
  %754 = icmp ne i32 %753, 0
  %755 = load i32, i32* @x.17
  %756 = load i32, i32* @y.18
  %757 = sub i32 %755, 1
  %758 = mul i32 %755, %757
  %759 = urem i32 %758, 2
  %760 = icmp eq i32 %759, 0
  %761 = icmp slt i32 %756, 10
  %762 = or i1 %760, %761
  br i1 %762, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br i1 %754, label %975, label %763

; <label>:763:                                    ; preds = %originalBBpart289
  %764 = load i32, i32* @x.17
  %765 = load i32, i32* @y.18
  %766 = sub i32 %764, 1
  %767 = mul i32 %764, %766
  %768 = urem i32 %767, 2
  %769 = icmp eq i32 %768, 0
  %770 = icmp slt i32 %765, 10
  %771 = or i1 %769, %770
  br i1 %771, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %763
  %772 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %773 = bitcast %struct.rtx_def* %772 to i32*
  %774 = load i32, i32* %773, align 8
  %775 = and i32 %774, 65535
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %776
  %778 = load i8, i8* %777, align 1
  %779 = sext i8 %778 to i32
  %780 = icmp eq i32 %779, 105
  %781 = load i32, i32* @x.17
  %782 = load i32, i32* @y.18
  %783 = sub i32 %781, 1
  %784 = mul i32 %781, %783
  %785 = urem i32 %784, 2
  %786 = icmp eq i32 %785, 0
  %787 = icmp slt i32 %782, 10
  %788 = or i1 %786, %787
  br i1 %788, label %originalBBpart299, label %originalBB91alteredBB

originalBBpart299:                                ; preds = %originalBB91
  br i1 %780, label %789, label %831

; <label>:789:                                    ; preds = %originalBBpart299
  %790 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %791 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %790, i32 0, i32 1
  %792 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %791, i64 0, i64 3
  %793 = bitcast %union.rtunion_def* %792 to %struct.rtx_def**
  %794 = load %struct.rtx_def*, %struct.rtx_def** %793, align 8
  %795 = bitcast %struct.rtx_def* %794 to i32*
  %796 = load i32, i32* %795, align 8
  %797 = and i32 %796, 65535
  %798 = icmp eq i32 %797, 47
  br i1 %798, label %799, label %822

; <label>:799:                                    ; preds = %789
  %800 = load i32, i32* @x.17
  %801 = load i32, i32* @y.18
  %802 = sub i32 %800, 1
  %803 = mul i32 %800, %802
  %804 = urem i32 %803, 2
  %805 = icmp eq i32 %804, 0
  %806 = icmp slt i32 %801, 10
  %807 = or i1 %805, %806
  br i1 %807, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %originalBB101alteredBB, %799
  %808 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %809 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %808, i32 0, i32 1
  %810 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %809, i64 0, i64 3
  %811 = bitcast %union.rtunion_def* %810 to %struct.rtx_def**
  %812 = load %struct.rtx_def*, %struct.rtx_def** %811, align 8
  %813 = icmp ne %struct.rtx_def* %812, null
  %814 = load i32, i32* @x.17
  %815 = load i32, i32* @y.18
  %816 = sub i32 %814, 1
  %817 = mul i32 %814, %816
  %818 = urem i32 %817, 2
  %819 = icmp eq i32 %818, 0
  %820 = icmp slt i32 %815, 10
  %821 = or i1 %819, %820
  br i1 %821, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br i1 %813, label %832, label %975

; <label>:822:                                    ; preds = %789
  %823 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %824 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %825 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %824, i32 0, i32 1
  %826 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %825, i64 0, i64 3
  %827 = bitcast %union.rtunion_def* %826 to %struct.rtx_def**
  %828 = load %struct.rtx_def*, %struct.rtx_def** %827, align 8
  %829 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %823, %struct.rtx_def* %828)
  %830 = icmp ne %struct.rtx_def* %829, null
  br i1 %830, label %832, label %975

; <label>:831:                                    ; preds = %originalBBpart299
  br i1 false, label %832, label %975

; <label>:832:                                    ; preds = %831, %822, %originalBBpart2103
  %833 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %834 = bitcast %struct.rtx_def* %833 to i32*
  %835 = load i32, i32* %834, align 8
  %836 = and i32 %835, 65535
  %837 = sext i32 %836 to i64
  %838 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %837
  %839 = load i8, i8* %838, align 1
  %840 = sext i8 %839 to i32
  %841 = icmp eq i32 %840, 105
  br i1 %841, label %842, label %900

; <label>:842:                                    ; preds = %832
  %843 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %844 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %843, i32 0, i32 1
  %845 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %844, i64 0, i64 3
  %846 = bitcast %union.rtunion_def* %845 to %struct.rtx_def**
  %847 = load %struct.rtx_def*, %struct.rtx_def** %846, align 8
  %848 = bitcast %struct.rtx_def* %847 to i32*
  %849 = load i32, i32* %848, align 8
  %850 = and i32 %849, 65535
  %851 = icmp eq i32 %850, 47
  br i1 %851, label %852, label %858

; <label>:852:                                    ; preds = %842
  %853 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %854 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %853, i32 0, i32 1
  %855 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %854, i64 0, i64 3
  %856 = bitcast %union.rtunion_def* %855 to %struct.rtx_def**
  %857 = load %struct.rtx_def*, %struct.rtx_def** %856, align 8
  br label %882

; <label>:858:                                    ; preds = %842
  %859 = load i32, i32* @x.17
  %860 = load i32, i32* @y.18
  %861 = sub i32 %859, 1
  %862 = mul i32 %859, %861
  %863 = urem i32 %862, 2
  %864 = icmp eq i32 %863, 0
  %865 = icmp slt i32 %860, 10
  %866 = or i1 %864, %865
  br i1 %866, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %originalBB105alteredBB, %858
  %867 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %868 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %869 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %868, i32 0, i32 1
  %870 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %869, i64 0, i64 3
  %871 = bitcast %union.rtunion_def* %870 to %struct.rtx_def**
  %872 = load %struct.rtx_def*, %struct.rtx_def** %871, align 8
  %873 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %867, %struct.rtx_def* %872)
  %874 = load i32, i32* @x.17
  %875 = load i32, i32* @y.18
  %876 = sub i32 %874, 1
  %877 = mul i32 %874, %876
  %878 = urem i32 %877, 2
  %879 = icmp eq i32 %878, 0
  %880 = icmp slt i32 %875, 10
  %881 = or i1 %879, %880
  br i1 %881, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br label %882

; <label>:882:                                    ; preds = %originalBBpart2107, %852
  %883 = phi %struct.rtx_def* [ %857, %852 ], [ %873, %originalBBpart2107 ]
  %884 = load i32, i32* @x.17
  %885 = load i32, i32* @y.18
  %886 = sub i32 %884, 1
  %887 = mul i32 %884, %886
  %888 = urem i32 %887, 2
  %889 = icmp eq i32 %888, 0
  %890 = icmp slt i32 %885, 10
  %891 = or i1 %889, %890
  br i1 %891, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %originalBB109alteredBB, %882
  %892 = load i32, i32* @x.17
  %893 = load i32, i32* @y.18
  %894 = sub i32 %892, 1
  %895 = mul i32 %892, %894
  %896 = urem i32 %895, 2
  %897 = icmp eq i32 %896, 0
  %898 = icmp slt i32 %893, 10
  %899 = or i1 %897, %898
  br i1 %899, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br label %901

; <label>:900:                                    ; preds = %832
  br label %901

; <label>:901:                                    ; preds = %900, %originalBBpart2111
  %902 = phi %struct.rtx_def* [ %883, %originalBBpart2111 ], [ null, %900 ]
  %903 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %902, i32 0, i32 1
  %904 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %903, i64 0, i64 0
  %905 = bitcast %union.rtunion_def* %904 to %struct.rtx_def**
  %906 = load %struct.rtx_def*, %struct.rtx_def** %905, align 8
  %907 = bitcast %struct.rtx_def* %906 to i32*
  %908 = load i32, i32* %907, align 8
  %909 = and i32 %908, 65535
  %910 = icmp eq i32 %909, 61
  br i1 %910, label %911, label %975

; <label>:911:                                    ; preds = %901
  %912 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %913 = bitcast %struct.rtx_def* %912 to i32*
  %914 = load i32, i32* %913, align 8
  %915 = and i32 %914, 65535
  %916 = sext i32 %915 to i64
  %917 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %916
  %918 = load i8, i8* %917, align 1
  %919 = sext i8 %918 to i32
  %920 = icmp eq i32 %919, 105
  br i1 %920, label %921, label %947

; <label>:921:                                    ; preds = %911
  %922 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %923 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %922, i32 0, i32 1
  %924 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %923, i64 0, i64 3
  %925 = bitcast %union.rtunion_def* %924 to %struct.rtx_def**
  %926 = load %struct.rtx_def*, %struct.rtx_def** %925, align 8
  %927 = bitcast %struct.rtx_def* %926 to i32*
  %928 = load i32, i32* %927, align 8
  %929 = and i32 %928, 65535
  %930 = icmp eq i32 %929, 47
  br i1 %930, label %931, label %937

; <label>:931:                                    ; preds = %921
  %932 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %933 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %932, i32 0, i32 1
  %934 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %933, i64 0, i64 3
  %935 = bitcast %union.rtunion_def* %934 to %struct.rtx_def**
  %936 = load %struct.rtx_def*, %struct.rtx_def** %935, align 8
  br label %945

; <label>:937:                                    ; preds = %921
  %938 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %939 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %940 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %939, i32 0, i32 1
  %941 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %940, i64 0, i64 3
  %942 = bitcast %union.rtunion_def* %941 to %struct.rtx_def**
  %943 = load %struct.rtx_def*, %struct.rtx_def** %942, align 8
  %944 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %938, %struct.rtx_def* %943)
  br label %945

; <label>:945:                                    ; preds = %937, %931
  %946 = phi %struct.rtx_def* [ %936, %931 ], [ %944, %937 ]
  br label %964

; <label>:947:                                    ; preds = %911
  %948 = load i32, i32* @x.17
  %949 = load i32, i32* @y.18
  %950 = sub i32 %948, 1
  %951 = mul i32 %948, %950
  %952 = urem i32 %951, 2
  %953 = icmp eq i32 %952, 0
  %954 = icmp slt i32 %949, 10
  %955 = or i1 %953, %954
  br i1 %955, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %originalBB113alteredBB, %947
  %956 = load i32, i32* @x.17
  %957 = load i32, i32* @y.18
  %958 = sub i32 %956, 1
  %959 = mul i32 %956, %958
  %960 = urem i32 %959, 2
  %961 = icmp eq i32 %960, 0
  %962 = icmp slt i32 %957, 10
  %963 = or i1 %961, %962
  br i1 %963, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br label %964

; <label>:964:                                    ; preds = %originalBBpart2115, %945
  %965 = phi %struct.rtx_def* [ %946, %945 ], [ null, %originalBBpart2115 ]
  %966 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %965, i32 0, i32 1
  %967 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %966, i64 0, i64 0
  %968 = bitcast %union.rtunion_def* %967 to %struct.rtx_def**
  %969 = load %struct.rtx_def*, %struct.rtx_def** %968, align 8
  %970 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %969, i32 0, i32 1
  %971 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %970, i64 0, i64 0
  %972 = bitcast %union.rtunion_def* %971 to i32*
  %973 = load i32, i32* %972, align 8
  %974 = icmp ult i32 %973, 53
  br i1 %974, label %988, label %975

; <label>:975:                                    ; preds = %964, %901, %831, %822, %originalBBpart2103, %originalBBpart289, %729
  %976 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %977 = bitcast %struct.rtx_def* %976 to i32*
  %978 = load i32, i32* %977, align 8
  %979 = lshr i32 %978, 16
  %980 = and i32 %979, 255
  %981 = icmp eq i32 %980, 0
  br i1 %981, label %982, label %988

; <label>:982:                                    ; preds = %975
  %983 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  store %struct.rtx_def* %983, %struct.rtx_def** %23, align 8
  %984 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  store %struct.rtx_def* %984, %struct.rtx_def** %35, align 8
  %985 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  store %struct.rtx_def* %985, %struct.rtx_def** %36, align 8
  %986 = load i64, i64* %28, align 8
  %987 = sub nsw i64 0, %986
  store i64 %987, i64* %29, align 8
  store i32 76, i32* %27, align 4
  br label %1005

; <label>:988:                                    ; preds = %975, %964, %726, %723
  %989 = load i32, i32* @x.17
  %990 = load i32, i32* @y.18
  %991 = sub i32 %989, 1
  %992 = mul i32 %989, %991
  %993 = urem i32 %992, 2
  %994 = icmp eq i32 %993, 0
  %995 = icmp slt i32 %990, 10
  %996 = or i1 %994, %995
  br i1 %996, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %originalBB117alteredBB, %988
  %997 = load i32, i32* @x.17
  %998 = load i32, i32* @y.18
  %999 = sub i32 %997, 1
  %1000 = mul i32 %997, %999
  %1001 = urem i32 %1000, 2
  %1002 = icmp eq i32 %1001, 0
  %1003 = icmp slt i32 %998, 10
  %1004 = or i1 %1002, %1003
  br i1 %1004, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br label %1233

; <label>:1005:                                   ; preds = %982
  %1006 = load i32, i32* @x.17
  %1007 = load i32, i32* @y.18
  %1008 = sub i32 %1006, 1
  %1009 = mul i32 %1006, %1008
  %1010 = urem i32 %1009, 2
  %1011 = icmp eq i32 %1010, 0
  %1012 = icmp slt i32 %1007, 10
  %1013 = or i1 %1011, %1012
  br i1 %1013, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %originalBB121alteredBB, %1005
  %1014 = load i32, i32* @x.17
  %1015 = load i32, i32* @y.18
  %1016 = sub i32 %1014, 1
  %1017 = mul i32 %1014, %1016
  %1018 = urem i32 %1017, 2
  %1019 = icmp eq i32 %1018, 0
  %1020 = icmp slt i32 %1015, 10
  %1021 = or i1 %1019, %1020
  br i1 %1021, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br label %1076

; <label>:1022:                                   ; preds = %718, %originalBBpart285
  %1023 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  %1024 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1023, i32 0, i32 1
  %1025 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1024, i64 0, i64 1
  %1026 = bitcast %union.rtunion_def* %1025 to %struct.rtx_def**
  %1027 = load %struct.rtx_def*, %struct.rtx_def** %1026, align 8
  %1028 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1027, i32 0, i32 1
  %1029 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1028, i64 0, i64 1
  %1030 = bitcast %union.rtunion_def* %1029 to %struct.rtx_def**
  %1031 = load %struct.rtx_def*, %struct.rtx_def** %1030, align 8
  %1032 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1031, i32 0, i32 1
  %1033 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1032, i64 0, i64 0
  %1034 = bitcast %union.rtunion_def* %1033 to i64*
  %1035 = load i64, i64* %1034, align 8
  %1036 = load i64, i64* %28, align 8
  %1037 = sub nsw i64 %1035, %1036
  store i64 %1037, i64* %29, align 8
  %1038 = load i32, i32* %27, align 4
  %1039 = icmp ne i32 %1038, 75
  br i1 %1039, label %1040, label %1060

; <label>:1040:                                   ; preds = %1022
  %1041 = load i64, i64* %29, align 8
  %1042 = icmp slt i64 %1041, 0
  br i1 %1042, label %1059, label %1043

; <label>:1043:                                   ; preds = %1040
  %1044 = load i64, i64* %29, align 8
  %1045 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  %1046 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1045, i32 0, i32 1
  %1047 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1046, i64 0, i64 1
  %1048 = bitcast %union.rtunion_def* %1047 to %struct.rtx_def**
  %1049 = load %struct.rtx_def*, %struct.rtx_def** %1048, align 8
  %1050 = bitcast %struct.rtx_def* %1049 to i32*
  %1051 = load i32, i32* %1050, align 8
  %1052 = lshr i32 %1051, 16
  %1053 = and i32 %1052, 255
  %1054 = sext i32 %1053 to i64
  %1055 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i64 0, i64 %1054
  %1056 = load i16, i16* %1055, align 2
  %1057 = zext i16 %1056 to i64
  %1058 = icmp uge i64 %1044, %1057
  br i1 %1058, label %1059, label %1060

; <label>:1059:                                   ; preds = %1043, %1040
  br label %1233

; <label>:1060:                                   ; preds = %1043, %1022
  %1061 = load i32, i32* %27, align 4
  %1062 = icmp eq i32 %1061, 75
  br i1 %1062, label %1063, label %1075

; <label>:1063:                                   ; preds = %1060
  %1064 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  store %struct.rtx_def* %1064, %struct.rtx_def** %21, align 8
  %1065 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  %1066 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1065, i32 0, i32 1
  %1067 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1066, i64 0, i64 0
  %1068 = bitcast %union.rtunion_def* %1067 to %struct.rtx_def**
  %1069 = load %struct.rtx_def*, %struct.rtx_def** %1068, align 8
  %1070 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %1071 = icmp ne %struct.rtx_def* %1069, %1070
  br i1 %1071, label %1072, label %1074

; <label>:1072:                                   ; preds = %1063
  %1073 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  store %struct.rtx_def* %1073, %struct.rtx_def** %22, align 8
  br label %1074

; <label>:1074:                                   ; preds = %1072, %1063
  br label %1075

; <label>:1075:                                   ; preds = %1074, %1060
  br label %1076

; <label>:1076:                                   ; preds = %1075, %originalBBpart2123
  %1077 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %1078 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  %1079 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1078, i32 0, i32 1
  %1080 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1079, i64 0, i64 1
  %1081 = bitcast %union.rtunion_def* %1080 to %struct.rtx_def**
  %1082 = load %struct.rtx_def*, %struct.rtx_def** %1081, align 8
  %1083 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1082, i32 0, i32 1
  %1084 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1083, i64 0, i64 1
  %1085 = bitcast %union.rtunion_def* %1084 to %struct.rtx_def**
  %1086 = load i64, i64* %29, align 8
  %1087 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %1086)
  %1088 = call i32 @validate_change(%struct.rtx_def* %1077, %struct.rtx_def** %1085, %struct.rtx_def* %1087, i32 1)
  br label %1089

; <label>:1089:                                   ; preds = %1076, %375
  %1090 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %1091 = load i32, i32* %18, align 4
  %1092 = sext i32 %1091 to i64
  %1093 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i64 0, i64 %1092
  %1094 = load %struct.rtx_def**, %struct.rtx_def*** %1093, align 8
  %1095 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %1096 = call i32 @validate_change(%struct.rtx_def* %1090, %struct.rtx_def** %1094, %struct.rtx_def* %1095, i32 1)
  %1097 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %1098 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %1099 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %1100 = call i32 @validate_replace_rtx(%struct.rtx_def* %1097, %struct.rtx_def* %1098, %struct.rtx_def* %1099)
  %1101 = icmp ne i32 %1100, 0
  br i1 %1101, label %1102, label %1103

; <label>:1102:                                   ; preds = %1089
  store i32 1, i32* %24, align 4
  br label %1103

; <label>:1103:                                   ; preds = %1102, %1089
  br label %1233

; <label>:1104:                                   ; preds = %328, %originalBBpart220
  %1105 = load i32, i32* @x.17
  %1106 = load i32, i32* @y.18
  %1107 = sub i32 %1105, 1
  %1108 = mul i32 %1105, %1107
  %1109 = urem i32 %1108, 2
  %1110 = icmp eq i32 %1109, 0
  %1111 = icmp slt i32 %1106, 10
  %1112 = or i1 %1110, %1111
  br i1 %1112, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %originalBB125alteredBB, %1104
  %1113 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %1114 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %1115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1114, i32 0, i32 1
  %1116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1115, i64 0, i64 3
  %1117 = bitcast %union.rtunion_def* %1116 to %struct.rtx_def**
  %1118 = load %struct.rtx_def*, %struct.rtx_def** %1117, align 8
  %1119 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %1113, %struct.rtx_def* %1118)
  %1120 = icmp ne i32 %1119, 0
  %1121 = load i32, i32* @x.17
  %1122 = load i32, i32* @y.18
  %1123 = sub i32 %1121, 1
  %1124 = mul i32 %1121, %1123
  %1125 = urem i32 %1124, 2
  %1126 = icmp eq i32 %1125, 0
  %1127 = icmp slt i32 %1122, 10
  %1128 = or i1 %1126, %1127
  br i1 %1128, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br i1 %1120, label %1129, label %1146

; <label>:1129:                                   ; preds = %originalBBpart2127
  %1130 = load i32, i32* @x.17
  %1131 = load i32, i32* @y.18
  %1132 = sub i32 %1130, 1
  %1133 = mul i32 %1130, %1132
  %1134 = urem i32 %1133, 2
  %1135 = icmp eq i32 %1134, 0
  %1136 = icmp slt i32 %1131, 10
  %1137 = or i1 %1135, %1136
  br i1 %1137, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %originalBB129alteredBB, %1129
  %1138 = load i32, i32* @x.17
  %1139 = load i32, i32* @y.18
  %1140 = sub i32 %1138, 1
  %1141 = mul i32 %1138, %1140
  %1142 = urem i32 %1141, 2
  %1143 = icmp eq i32 %1142, 0
  %1144 = icmp slt i32 %1139, 10
  %1145 = or i1 %1143, %1144
  br i1 %1145, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  br label %1233

; <label>:1146:                                   ; preds = %originalBBpart2127
  %1147 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %1148 = icmp ne %struct.rtx_def* %1147, null
  br i1 %1148, label %1179, label %1149

; <label>:1149:                                   ; preds = %1146
  %1150 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %1151 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %1152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1151, i32 0, i32 1
  %1153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1152, i64 0, i64 3
  %1154 = bitcast %union.rtunion_def* %1153 to %struct.rtx_def**
  %1155 = load %struct.rtx_def*, %struct.rtx_def** %1154, align 8
  %1156 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %1150, %struct.rtx_def* %1155)
  %1157 = icmp ne i32 %1156, 0
  br i1 %1157, label %1158, label %1179

; <label>:1158:                                   ; preds = %1149
  %1159 = load i32, i32* @x.17
  %1160 = load i32, i32* @y.18
  %1161 = sub i32 %1159, 1
  %1162 = mul i32 %1159, %1161
  %1163 = urem i32 %1162, 2
  %1164 = icmp eq i32 %1163, 0
  %1165 = icmp slt i32 %1160, 10
  %1166 = or i1 %1164, %1165
  br i1 %1166, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %originalBB133alteredBB, %1158
  %1167 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  store %struct.rtx_def* %1167, %struct.rtx_def** %30, align 8
  %1168 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %1169 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %1170 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1168, i32 1, %struct.rtx_def* %1169)
  store %struct.rtx_def* %1170, %struct.rtx_def** %31, align 8
  %1171 = load i32, i32* @x.17
  %1172 = load i32, i32* @y.18
  %1173 = sub i32 %1171, 1
  %1174 = mul i32 %1171, %1173
  %1175 = urem i32 %1174, 2
  %1176 = icmp eq i32 %1175, 0
  %1177 = icmp slt i32 %1172, 10
  %1178 = or i1 %1176, %1177
  br i1 %1178, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  br label %1179

; <label>:1179:                                   ; preds = %originalBBpart2135, %1149, %1146
  %1180 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %1181 = bitcast %struct.rtx_def* %1180 to i32*
  %1182 = load i32, i32* %1181, align 8
  %1183 = and i32 %1182, 65535
  %1184 = icmp eq i32 %1183, 34
  br i1 %1184, label %1185, label %1210

; <label>:1185:                                   ; preds = %1179
  %1186 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %1187 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1186, i32 0, i32 4
  %1188 = bitcast %union.varray_data_tag* %1187 to [1 x %struct.reg_info_def*]*
  %1189 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %1190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1189, i32 0, i32 1
  %1191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1190, i64 0, i64 0
  %1192 = bitcast %union.rtunion_def* %1191 to i32*
  %1193 = load i32, i32* %1192, align 8
  %1194 = zext i32 %1193 to i64
  %1195 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %1188, i64 0, i64 %1194
  %1196 = load %struct.reg_info_def*, %struct.reg_info_def** %1195, align 8
  %1197 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %1196, i32 0, i32 8
  %1198 = load i32, i32* %1197, align 4
  %1199 = icmp eq i32 %1198, 0
  br i1 %1199, label %1200, label %1201

; <label>:1200:                                   ; preds = %1185
  br label %1233

; <label>:1201:                                   ; preds = %1185
  %1202 = load i32, i32* %25, align 4
  %1203 = add nsw i32 %1202, 1
  store i32 %1203, i32* %25, align 4
  %1204 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %1205 = icmp ne %struct.rtx_def* %1204, null
  br i1 %1205, label %1206, label %1209

; <label>:1206:                                   ; preds = %1201
  %1207 = load i32, i32* %26, align 4
  %1208 = add nsw i32 %1207, 1
  store i32 %1208, i32* %26, align 4
  br label %1209

; <label>:1209:                                   ; preds = %1206, %1201
  br label %1210

; <label>:1210:                                   ; preds = %1209, %1179
  %1211 = load i32, i32* @x.17
  %1212 = load i32, i32* @y.18
  %1213 = sub i32 %1211, 1
  %1214 = mul i32 %1211, %1213
  %1215 = urem i32 %1214, 2
  %1216 = icmp eq i32 %1215, 0
  %1217 = icmp slt i32 %1212, 10
  %1218 = or i1 %1216, %1217
  br i1 %1218, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %originalBB137alteredBB, %1210
  %1219 = load i32, i32* @x.17
  %1220 = load i32, i32* @y.18
  %1221 = sub i32 %1219, 1
  %1222 = mul i32 %1219, %1221
  %1223 = urem i32 %1222, 2
  %1224 = icmp eq i32 %1223, 0
  %1225 = icmp slt i32 %1220, 10
  %1226 = or i1 %1224, %1225
  br i1 %1226, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br label %1227

; <label>:1227:                                   ; preds = %originalBBpart2139, %243
  %1228 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %1229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1228, i32 0, i32 1
  %1230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1229, i64 0, i64 2
  %1231 = bitcast %union.rtunion_def* %1230 to %struct.rtx_def**
  %1232 = load %struct.rtx_def*, %struct.rtx_def** %1231, align 8
  store %struct.rtx_def* %1232, %struct.rtx_def** %20, align 8
  br label %175

; <label>:1233:                                   ; preds = %1200, %originalBBpart2131, %1103, %1059, %originalBBpart2119, %originalBBpart228, %originalBBpart224, %302, %216, %175
  %1234 = load i32, i32* @x.17
  %1235 = load i32, i32* @y.18
  %1236 = sub i32 %1234, 1
  %1237 = mul i32 %1234, %1236
  %1238 = urem i32 %1237, 2
  %1239 = icmp eq i32 %1238, 0
  %1240 = icmp slt i32 %1235, 10
  %1241 = or i1 %1239, %1240
  br i1 %1241, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %originalBB141alteredBB, %1233
  %1242 = load i32, i32* %24, align 4
  %1243 = icmp ne i32 %1242, 0
  %1244 = load i32, i32* @x.17
  %1245 = load i32, i32* @y.18
  %1246 = sub i32 %1244, 1
  %1247 = mul i32 %1244, %1246
  %1248 = urem i32 %1247, 2
  %1249 = icmp eq i32 %1248, 0
  %1250 = icmp slt i32 %1245, 10
  %1251 = or i1 %1249, %1250
  br i1 %1251, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br i1 %1243, label %1253, label %1252

; <label>:1252:                                   ; preds = %originalBBpart2143
  store i32 0, i32* %10, align 4
  br label %2524

; <label>:1253:                                   ; preds = %originalBBpart2143
  %1254 = load i32, i32* @x.17
  %1255 = load i32, i32* @y.18
  %1256 = sub i32 %1254, 1
  %1257 = mul i32 %1254, %1256
  %1258 = urem i32 %1257, 2
  %1259 = icmp eq i32 %1258, 0
  %1260 = icmp slt i32 %1255, 10
  %1261 = or i1 %1259, %1260
  br i1 %1261, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %originalBB145alteredBB, %1253
  %1262 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %1263 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  call void @remove_note(%struct.rtx_def* %1262, %struct.rtx_def* %1263)
  %1264 = load i32, i32* %27, align 4
  %1265 = icmp eq i32 %1264, 76
  %1266 = load i32, i32* @x.17
  %1267 = load i32, i32* @y.18
  %1268 = sub i32 %1266, 1
  %1269 = mul i32 %1266, %1268
  %1270 = urem i32 %1269, 2
  %1271 = icmp eq i32 %1270, 0
  %1272 = icmp slt i32 %1267, 10
  %1273 = or i1 %1271, %1272
  br i1 %1273, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br i1 %1265, label %1274, label %1339

; <label>:1274:                                   ; preds = %originalBBpart2147
  %1275 = load i32, i32* @x.17
  %1276 = load i32, i32* @y.18
  %1277 = sub i32 %1275, 1
  %1278 = mul i32 %1275, %1277
  %1279 = urem i32 %1278, 2
  %1280 = icmp eq i32 %1279, 0
  %1281 = icmp slt i32 %1276, 10
  %1282 = or i1 %1280, %1281
  br i1 %1282, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %originalBB149alteredBB, %1274
  %1283 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %1284 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1283, i32 0, i32 1
  %1285 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1284, i64 0, i64 3
  %1286 = bitcast %union.rtunion_def* %1285 to %struct.rtx_def**
  %1287 = load %struct.rtx_def*, %struct.rtx_def** %1286, align 8
  %1288 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1287)
  %1289 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %1290 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %1288, %struct.rtx_def* %1289)
  store %struct.rtx_def* %1290, %struct.rtx_def** %21, align 8
  %1291 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %1292 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %1293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1292, i32 0, i32 1
  %1294 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1293, i64 0, i64 1
  %1295 = bitcast %union.rtunion_def* %1294 to %struct.rtx_def**
  %1296 = load %struct.rtx_def*, %struct.rtx_def** %1295, align 8
  %1297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1296, i32 0, i32 1
  %1298 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1297, i64 0, i64 1
  %1299 = bitcast %union.rtunion_def* %1298 to %struct.rtx_def**
  %1300 = load i64, i64* %28, align 8
  %1301 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %1300)
  %1302 = call i32 @validate_change(%struct.rtx_def* %1291, %struct.rtx_def** %1299, %struct.rtx_def* %1301, i32 0)
  %1303 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %1304 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1303, i32 0, i32 4
  %1305 = bitcast %union.varray_data_tag* %1304 to [1 x %struct.reg_info_def*]*
  %1306 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %1307 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1306, i32 0, i32 1
  %1308 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1307, i64 0, i64 0
  %1309 = bitcast %union.rtunion_def* %1308 to i32*
  %1310 = load i32, i32* %1309, align 8
  %1311 = zext i32 %1310 to i64
  %1312 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %1305, i64 0, i64 %1311
  %1313 = load %struct.reg_info_def*, %struct.reg_info_def** %1312, align 8
  %1314 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %1313, i32 0, i32 3
  %1315 = load i32, i32* %1314, align 4
  %1316 = add nsw i32 %1315, 1
  store i32 %1316, i32* %1314, align 4
  %1317 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %1318 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1317, i32 0, i32 4
  %1319 = bitcast %union.varray_data_tag* %1318 to [1 x %struct.reg_info_def*]*
  %1320 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %1321 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1320, i32 0, i32 1
  %1322 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1321, i64 0, i64 0
  %1323 = bitcast %union.rtunion_def* %1322 to i32*
  %1324 = load i32, i32* %1323, align 8
  %1325 = zext i32 %1324 to i64
  %1326 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %1319, i64 0, i64 %1325
  %1327 = load %struct.reg_info_def*, %struct.reg_info_def** %1326, align 8
  %1328 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %1327, i32 0, i32 7
  %1329 = load i32, i32* %1328, align 4
  %1330 = add nsw i32 %1329, 1
  store i32 %1330, i32* %1328, align 4
  %1331 = load i32, i32* @x.17
  %1332 = load i32, i32* @y.18
  %1333 = sub i32 %1331, 1
  %1334 = mul i32 %1331, %1333
  %1335 = urem i32 %1334, 2
  %1336 = icmp eq i32 %1335, 0
  %1337 = icmp slt i32 %1332, 10
  %1338 = or i1 %1336, %1337
  br i1 %1338, label %originalBBpart2167, label %originalBB149alteredBB

originalBBpart2167:                               ; preds = %originalBB149
  br label %1339

; <label>:1339:                                   ; preds = %originalBBpart2167, %originalBBpart2147
  %1340 = load i32, i32* @x.17
  %1341 = load i32, i32* @y.18
  %1342 = sub i32 %1340, 1
  %1343 = mul i32 %1340, %1342
  %1344 = urem i32 %1343, 2
  %1345 = icmp eq i32 %1344, 0
  %1346 = icmp slt i32 %1341, 10
  %1347 = or i1 %1345, %1346
  br i1 %1347, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %originalBB169alteredBB, %1339
  %1348 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %1349 = icmp ne %struct.rtx_def* %1348, null
  %1350 = load i32, i32* @x.17
  %1351 = load i32, i32* @y.18
  %1352 = sub i32 %1350, 1
  %1353 = mul i32 %1350, %1352
  %1354 = urem i32 %1353, 2
  %1355 = icmp eq i32 %1354, 0
  %1356 = icmp slt i32 %1351, 10
  %1357 = or i1 %1355, %1356
  br i1 %1357, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  br i1 %1349, label %1358, label %1465

; <label>:1358:                                   ; preds = %originalBBpart2171
  %1359 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %1360 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1359, i32 0, i32 1
  %1361 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1360, i64 0, i64 3
  %1362 = bitcast %union.rtunion_def* %1361 to %struct.rtx_def**
  %1363 = load %struct.rtx_def*, %struct.rtx_def** %1362, align 8
  store %struct.rtx_def* %1363, %struct.rtx_def** %37, align 8
  %1364 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %1365 = icmp ne %struct.rtx_def* %1364, null
  br i1 %1365, label %1366, label %1369

; <label>:1366:                                   ; preds = %1358
  %1367 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %1368 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  call void @remove_note(%struct.rtx_def* %1367, %struct.rtx_def* %1368)
  br label %1369

; <label>:1369:                                   ; preds = %1366, %1358
  %1370 = load i32, i32* @x.17
  %1371 = load i32, i32* @y.18
  %1372 = sub i32 %1370, 1
  %1373 = mul i32 %1370, %1372
  %1374 = urem i32 %1373, 2
  %1375 = icmp eq i32 %1374, 0
  %1376 = icmp slt i32 %1371, 10
  %1377 = or i1 %1375, %1376
  br i1 %1377, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %originalBB173alteredBB, %1369
  %1378 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %1379 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1378, i32 0, i32 1
  %1380 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1379, i64 0, i64 6
  %1381 = bitcast %union.rtunion_def* %1380 to %struct.rtx_def**
  %1382 = load %struct.rtx_def*, %struct.rtx_def** %1381, align 8
  store %struct.rtx_def* %1382, %struct.rtx_def** %38, align 8
  %1383 = load %struct.rtx_def*, %struct.rtx_def** %37, align 8
  %1384 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %1385 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1384, i32 0, i32 1
  %1386 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1385, i64 0, i64 1
  %1387 = bitcast %union.rtunion_def* %1386 to %struct.rtx_def**
  %1388 = load %struct.rtx_def*, %struct.rtx_def** %1387, align 8
  %1389 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  call void @emit_insn_after_with_line_notes(%struct.rtx_def* %1383, %struct.rtx_def* %1388, %struct.rtx_def* %1389)
  %1390 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %1391 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %1390)
  %1392 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  store %struct.rtx_def* %1392, %struct.rtx_def** %11, align 8
  %1393 = load i32, i32* @x.17
  %1394 = load i32, i32* @y.18
  %1395 = sub i32 %1393, 1
  %1396 = mul i32 %1393, %1395
  %1397 = urem i32 %1396, 2
  %1398 = icmp eq i32 %1397, 0
  %1399 = icmp slt i32 %1394, 10
  %1400 = or i1 %1398, %1399
  br i1 %1400, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  br label %1401

; <label>:1401:                                   ; preds = %originalBBpart2183, %originalBBpart2175
  %1402 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %1403 = bitcast %struct.rtx_def* %1402 to i32*
  %1404 = load i32, i32* %1403, align 8
  %1405 = and i32 %1404, 65535
  %1406 = sext i32 %1405 to i64
  %1407 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %1406
  %1408 = load i8, i8* %1407, align 1
  %1409 = sext i8 %1408 to i32
  %1410 = icmp eq i32 %1409, 105
  br i1 %1410, label %1411, label %1419

; <label>:1411:                                   ; preds = %1401
  %1412 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %1413 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1412, i32 0, i32 1
  %1414 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1413, i64 0, i64 3
  %1415 = bitcast %union.rtunion_def* %1414 to %struct.rtx_def**
  %1416 = load %struct.rtx_def*, %struct.rtx_def** %1415, align 8
  %1417 = load %struct.rtx_def*, %struct.rtx_def** %37, align 8
  %1418 = icmp ne %struct.rtx_def* %1416, %1417
  br label %1419

; <label>:1419:                                   ; preds = %1411, %1401
  %1420 = phi i1 [ true, %1401 ], [ %1418, %1411 ]
  %1421 = load i32, i32* @x.17
  %1422 = load i32, i32* @y.18
  %1423 = sub i32 %1421, 1
  %1424 = mul i32 %1421, %1423
  %1425 = urem i32 %1424, 2
  %1426 = icmp eq i32 %1425, 0
  %1427 = icmp slt i32 %1422, 10
  %1428 = or i1 %1426, %1427
  br i1 %1428, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %originalBB177alteredBB, %1419
  %1429 = load i32, i32* @x.17
  %1430 = load i32, i32* @y.18
  %1431 = sub i32 %1429, 1
  %1432 = mul i32 %1429, %1431
  %1433 = urem i32 %1432, 2
  %1434 = icmp eq i32 %1433, 0
  %1435 = icmp slt i32 %1430, 10
  %1436 = or i1 %1434, %1435
  br i1 %1436, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  br i1 %1420, label %1437, label %1459

; <label>:1437:                                   ; preds = %originalBBpart2179
  %1438 = load i32, i32* @x.17
  %1439 = load i32, i32* @y.18
  %1440 = sub i32 %1438, 1
  %1441 = mul i32 %1438, %1440
  %1442 = urem i32 %1441, 2
  %1443 = icmp eq i32 %1442, 0
  %1444 = icmp slt i32 %1439, 10
  %1445 = or i1 %1443, %1444
  br i1 %1445, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %originalBB181alteredBB, %1437
  %1446 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %1447 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1446, i32 0, i32 1
  %1448 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1447, i64 0, i64 1
  %1449 = bitcast %union.rtunion_def* %1448 to %struct.rtx_def**
  %1450 = load %struct.rtx_def*, %struct.rtx_def** %1449, align 8
  store %struct.rtx_def* %1450, %struct.rtx_def** %11, align 8
  %1451 = load i32, i32* @x.17
  %1452 = load i32, i32* @y.18
  %1453 = sub i32 %1451, 1
  %1454 = mul i32 %1451, %1453
  %1455 = urem i32 %1454, 2
  %1456 = icmp eq i32 %1455, 0
  %1457 = icmp slt i32 %1452, 10
  %1458 = or i1 %1456, %1457
  br i1 %1458, label %originalBBpart2183, label %originalBB181alteredBB

originalBBpart2183:                               ; preds = %originalBB181
  br label %1401

; <label>:1459:                                   ; preds = %originalBBpart2179
  %1460 = load %struct.rtx_def*, %struct.rtx_def** %38, align 8
  %1461 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %1462 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1461, i32 0, i32 1
  %1463 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1462, i64 0, i64 6
  %1464 = bitcast %union.rtunion_def* %1463 to %struct.rtx_def**
  store %struct.rtx_def* %1460, %struct.rtx_def** %1464, align 8
  br label %1465

; <label>:1465:                                   ; preds = %1459, %originalBBpart2171
  %1466 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %1467 = icmp ne %struct.rtx_def* %1466, null
  br i1 %1467, label %2053, label %1468

; <label>:1468:                                   ; preds = %1465
  %1469 = load i32, i32* %27, align 4
  %1470 = icmp eq i32 %1469, 75
  br i1 %1470, label %1490, label %1471

; <label>:1471:                                   ; preds = %1468
  %1472 = load i32, i32* @x.17
  %1473 = load i32, i32* @y.18
  %1474 = sub i32 %1472, 1
  %1475 = mul i32 %1472, %1474
  %1476 = urem i32 %1475, 2
  %1477 = icmp eq i32 %1476, 0
  %1478 = icmp slt i32 %1473, 10
  %1479 = or i1 %1477, %1478
  br i1 %1479, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %originalBB185alteredBB, %1471
  %1480 = load i32, i32* %27, align 4
  %1481 = icmp eq i32 %1480, 76
  %1482 = load i32, i32* @x.17
  %1483 = load i32, i32* @y.18
  %1484 = sub i32 %1482, 1
  %1485 = mul i32 %1482, %1484
  %1486 = urem i32 %1485, 2
  %1487 = icmp eq i32 %1486, 0
  %1488 = icmp slt i32 %1483, 10
  %1489 = or i1 %1487, %1488
  br i1 %1489, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br i1 %1481, label %1490, label %2053

; <label>:1490:                                   ; preds = %originalBBpart2187, %1468
  %1491 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %1492 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1491, i32 4, %struct.rtx_def* null)
  store %struct.rtx_def* %1492, %struct.rtx_def** %39, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %41, align 8
  store i32 0, i32* %42, align 4
  store i32 0, i32* %43, align 4
  %1493 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %1494 = icmp ne %struct.rtx_def* %1493, null
  br i1 %1494, label %1495, label %2052

; <label>:1495:                                   ; preds = %1490
  %1496 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %1497 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1496, i32 0, i32 1
  %1498 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1497, i64 0, i64 0
  %1499 = bitcast %union.rtunion_def* %1498 to %struct.rtx_def**
  %1500 = load %struct.rtx_def*, %struct.rtx_def** %1499, align 8
  %1501 = bitcast %struct.rtx_def* %1500 to i32*
  %1502 = load i32, i32* %1501, align 8
  %1503 = and i32 %1502, 65535
  %1504 = icmp eq i32 %1503, 67
  br i1 %1504, label %1639, label %1505

; <label>:1505:                                   ; preds = %1495
  %1506 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %1507 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1506, i32 0, i32 1
  %1508 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1507, i64 0, i64 0
  %1509 = bitcast %union.rtunion_def* %1508 to %struct.rtx_def**
  %1510 = load %struct.rtx_def*, %struct.rtx_def** %1509, align 8
  %1511 = bitcast %struct.rtx_def* %1510 to i32*
  %1512 = load i32, i32* %1511, align 8
  %1513 = and i32 %1512, 65535
  %1514 = icmp eq i32 %1513, 68
  br i1 %1514, label %1639, label %1515

; <label>:1515:                                   ; preds = %1505
  %1516 = load i32, i32* @x.17
  %1517 = load i32, i32* @y.18
  %1518 = sub i32 %1516, 1
  %1519 = mul i32 %1516, %1518
  %1520 = urem i32 %1519, 2
  %1521 = icmp eq i32 %1520, 0
  %1522 = icmp slt i32 %1517, 10
  %1523 = or i1 %1521, %1522
  br i1 %1523, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %originalBB189alteredBB, %1515
  %1524 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %1525 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1524, i32 0, i32 1
  %1526 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1525, i64 0, i64 0
  %1527 = bitcast %union.rtunion_def* %1526 to %struct.rtx_def**
  %1528 = load %struct.rtx_def*, %struct.rtx_def** %1527, align 8
  %1529 = bitcast %struct.rtx_def* %1528 to i32*
  %1530 = load i32, i32* %1529, align 8
  %1531 = and i32 %1530, 65535
  %1532 = icmp eq i32 %1531, 54
  %1533 = load i32, i32* @x.17
  %1534 = load i32, i32* @y.18
  %1535 = sub i32 %1533, 1
  %1536 = mul i32 %1533, %1535
  %1537 = urem i32 %1536, 2
  %1538 = icmp eq i32 %1537, 0
  %1539 = icmp slt i32 %1534, 10
  %1540 = or i1 %1538, %1539
  br i1 %1540, label %originalBBpart2195, label %originalBB189alteredBB

originalBBpart2195:                               ; preds = %originalBB189
  br i1 %1532, label %1639, label %1541

; <label>:1541:                                   ; preds = %originalBBpart2195
  %1542 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %1543 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1542, i32 0, i32 1
  %1544 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1543, i64 0, i64 0
  %1545 = bitcast %union.rtunion_def* %1544 to %struct.rtx_def**
  %1546 = load %struct.rtx_def*, %struct.rtx_def** %1545, align 8
  %1547 = bitcast %struct.rtx_def* %1546 to i32*
  %1548 = load i32, i32* %1547, align 8
  %1549 = and i32 %1548, 65535
  %1550 = icmp eq i32 %1549, 55
  br i1 %1550, label %1639, label %1551

; <label>:1551:                                   ; preds = %1541
  %1552 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %1553 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1552, i32 0, i32 1
  %1554 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1553, i64 0, i64 0
  %1555 = bitcast %union.rtunion_def* %1554 to %struct.rtx_def**
  %1556 = load %struct.rtx_def*, %struct.rtx_def** %1555, align 8
  %1557 = bitcast %struct.rtx_def* %1556 to i32*
  %1558 = load i32, i32* %1557, align 8
  %1559 = and i32 %1558, 65535
  %1560 = icmp eq i32 %1559, 58
  br i1 %1560, label %1639, label %1561

; <label>:1561:                                   ; preds = %1551
  %1562 = load i32, i32* @x.17
  %1563 = load i32, i32* @y.18
  %1564 = sub i32 %1562, 1
  %1565 = mul i32 %1562, %1564
  %1566 = urem i32 %1565, 2
  %1567 = icmp eq i32 %1566, 0
  %1568 = icmp slt i32 %1563, 10
  %1569 = or i1 %1567, %1568
  br i1 %1569, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %originalBB197alteredBB, %1561
  %1570 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %1571 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1570, i32 0, i32 1
  %1572 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1571, i64 0, i64 0
  %1573 = bitcast %union.rtunion_def* %1572 to %struct.rtx_def**
  %1574 = load %struct.rtx_def*, %struct.rtx_def** %1573, align 8
  %1575 = bitcast %struct.rtx_def* %1574 to i32*
  %1576 = load i32, i32* %1575, align 8
  %1577 = and i32 %1576, 65535
  %1578 = icmp eq i32 %1577, 134
  %1579 = load i32, i32* @x.17
  %1580 = load i32, i32* @y.18
  %1581 = sub i32 %1579, 1
  %1582 = mul i32 %1579, %1581
  %1583 = urem i32 %1582, 2
  %1584 = icmp eq i32 %1583, 0
  %1585 = icmp slt i32 %1580, 10
  %1586 = or i1 %1584, %1585
  br i1 %1586, label %originalBBpart2206, label %originalBB197alteredBB

originalBBpart2206:                               ; preds = %originalBB197
  br i1 %1578, label %1639, label %1587

; <label>:1587:                                   ; preds = %originalBBpart2206
  %1588 = load i32, i32* @x.17
  %1589 = load i32, i32* @y.18
  %1590 = sub i32 %1588, 1
  %1591 = mul i32 %1588, %1590
  %1592 = urem i32 %1591, 2
  %1593 = icmp eq i32 %1592, 0
  %1594 = icmp slt i32 %1589, 10
  %1595 = or i1 %1593, %1594
  br i1 %1595, label %originalBB208, label %originalBB208alteredBB

originalBB208:                                    ; preds = %originalBB208alteredBB, %1587
  %1596 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %1597 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1596, i32 0, i32 1
  %1598 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1597, i64 0, i64 0
  %1599 = bitcast %union.rtunion_def* %1598 to %struct.rtx_def**
  %1600 = load %struct.rtx_def*, %struct.rtx_def** %1599, align 8
  %1601 = bitcast %struct.rtx_def* %1600 to i32*
  %1602 = load i32, i32* %1601, align 8
  %1603 = and i32 %1602, 65535
  %1604 = icmp eq i32 %1603, 56
  %1605 = load i32, i32* @x.17
  %1606 = load i32, i32* @y.18
  %1607 = sub i32 %1605, 1
  %1608 = mul i32 %1605, %1607
  %1609 = urem i32 %1608, 2
  %1610 = icmp eq i32 %1609, 0
  %1611 = icmp slt i32 %1606, 10
  %1612 = or i1 %1610, %1611
  br i1 %1612, label %originalBBpart2212, label %originalBB208alteredBB

originalBBpart2212:                               ; preds = %originalBB208
  br i1 %1604, label %1639, label %1613

; <label>:1613:                                   ; preds = %originalBBpart2212
  %1614 = load i32, i32* @x.17
  %1615 = load i32, i32* @y.18
  %1616 = sub i32 %1614, 1
  %1617 = mul i32 %1614, %1616
  %1618 = urem i32 %1617, 2
  %1619 = icmp eq i32 %1618, 0
  %1620 = icmp slt i32 %1615, 10
  %1621 = or i1 %1619, %1620
  br i1 %1621, label %originalBB214, label %originalBB214alteredBB

originalBB214:                                    ; preds = %originalBB214alteredBB, %1613
  %1622 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %1623 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1622, i32 0, i32 1
  %1624 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1623, i64 0, i64 0
  %1625 = bitcast %union.rtunion_def* %1624 to %struct.rtx_def**
  %1626 = load %struct.rtx_def*, %struct.rtx_def** %1625, align 8
  %1627 = bitcast %struct.rtx_def* %1626 to i32*
  %1628 = load i32, i32* %1627, align 8
  %1629 = and i32 %1628, 65535
  %1630 = icmp eq i32 %1629, 140
  %1631 = load i32, i32* @x.17
  %1632 = load i32, i32* @y.18
  %1633 = sub i32 %1631, 1
  %1634 = mul i32 %1631, %1633
  %1635 = urem i32 %1634, 2
  %1636 = icmp eq i32 %1635, 0
  %1637 = icmp slt i32 %1632, 10
  %1638 = or i1 %1636, %1637
  br i1 %1638, label %originalBBpart2216, label %originalBB214alteredBB

originalBBpart2216:                               ; preds = %originalBB214
  br i1 %1630, label %1639, label %2052

; <label>:1639:                                   ; preds = %originalBBpart2216, %originalBBpart2212, %originalBBpart2206, %1551, %1541, %originalBBpart2195, %1505, %1495
  %1640 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %1641 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1640, i32 0, i32 1
  %1642 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1641, i64 0, i64 1
  %1643 = bitcast %union.rtunion_def* %1642 to %struct.rtx_def**
  %1644 = load %struct.rtx_def*, %struct.rtx_def** %1643, align 8
  store %struct.rtx_def* %1644, %struct.rtx_def** %40, align 8
  br label %1645

; <label>:1645:                                   ; preds = %1811, %1639
  %1646 = load i32, i32* @x.17
  %1647 = load i32, i32* @y.18
  %1648 = sub i32 %1646, 1
  %1649 = mul i32 %1646, %1648
  %1650 = urem i32 %1649, 2
  %1651 = icmp eq i32 %1650, 0
  %1652 = icmp slt i32 %1647, 10
  %1653 = or i1 %1651, %1652
  br i1 %1653, label %originalBB218, label %originalBB218alteredBB

originalBB218:                                    ; preds = %originalBB218alteredBB, %1645
  %1654 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %1655 = icmp ne %struct.rtx_def* %1654, null
  %1656 = load i32, i32* @x.17
  %1657 = load i32, i32* @y.18
  %1658 = sub i32 %1656, 1
  %1659 = mul i32 %1656, %1658
  %1660 = urem i32 %1659, 2
  %1661 = icmp eq i32 %1660, 0
  %1662 = icmp slt i32 %1657, 10
  %1663 = or i1 %1661, %1662
  br i1 %1663, label %originalBBpart2220, label %originalBB218alteredBB

originalBBpart2220:                               ; preds = %originalBB218
  br i1 %1655, label %1664, label %1817

; <label>:1664:                                   ; preds = %originalBBpart2220
  %1665 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %1666 = call i32 @perhaps_ends_bb_p(%struct.rtx_def* %1665)
  %1667 = icmp ne i32 %1666, 0
  br i1 %1667, label %1668, label %1669

; <label>:1668:                                   ; preds = %1664
  store %struct.rtx_def* null, %struct.rtx_def** %40, align 8
  br label %1817

; <label>:1669:                                   ; preds = %1664
  %1670 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %1671 = bitcast %struct.rtx_def* %1670 to i32*
  %1672 = load i32, i32* %1671, align 8
  %1673 = and i32 %1672, 65535
  %1674 = sext i32 %1673 to i64
  %1675 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %1674
  %1676 = load i8, i8* %1675, align 1
  %1677 = sext i8 %1676 to i32
  %1678 = icmp eq i32 %1677, 105
  br i1 %1678, label %1680, label %1679

; <label>:1679:                                   ; preds = %1669
  br label %1811

; <label>:1680:                                   ; preds = %1669
  br label %1681

; <label>:1681:                                   ; preds = %1680
  %1682 = load i32, i32* @x.17
  %1683 = load i32, i32* @y.18
  %1684 = sub i32 %1682, 1
  %1685 = mul i32 %1682, %1684
  %1686 = urem i32 %1685, 2
  %1687 = icmp eq i32 %1686, 0
  %1688 = icmp slt i32 %1683, 10
  %1689 = or i1 %1687, %1688
  br i1 %1689, label %originalBB222, label %originalBB222alteredBB

originalBB222:                                    ; preds = %originalBB222alteredBB, %1681
  %1690 = load i32, i32* %43, align 4
  %1691 = add nsw i32 %1690, 1
  store i32 %1691, i32* %43, align 4
  %1692 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %1693 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %1694 = call i32 @reg_set_p(%struct.rtx_def* %1692, %struct.rtx_def* %1693)
  %1695 = icmp ne i32 %1694, 0
  %1696 = load i32, i32* @x.17
  %1697 = load i32, i32* @y.18
  %1698 = sub i32 %1696, 1
  %1699 = mul i32 %1696, %1698
  %1700 = urem i32 %1699, 2
  %1701 = icmp eq i32 %1700, 0
  %1702 = icmp slt i32 %1697, 10
  %1703 = or i1 %1701, %1702
  br i1 %1703, label %originalBBpart2227, label %originalBB222alteredBB

originalBBpart2227:                               ; preds = %originalBB222
  br i1 %1695, label %1704, label %1791

; <label>:1704:                                   ; preds = %originalBBpart2227
  %1705 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %1706 = bitcast %struct.rtx_def* %1705 to i32*
  %1707 = load i32, i32* %1706, align 8
  %1708 = and i32 %1707, 65535
  %1709 = sext i32 %1708 to i64
  %1710 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %1709
  %1711 = load i8, i8* %1710, align 1
  %1712 = sext i8 %1711 to i32
  %1713 = icmp eq i32 %1712, 105
  br i1 %1713, label %1714, label %1788

; <label>:1714:                                   ; preds = %1704
  %1715 = load i32, i32* @x.17
  %1716 = load i32, i32* @y.18
  %1717 = sub i32 %1715, 1
  %1718 = mul i32 %1715, %1717
  %1719 = urem i32 %1718, 2
  %1720 = icmp eq i32 %1719, 0
  %1721 = icmp slt i32 %1716, 10
  %1722 = or i1 %1720, %1721
  br i1 %1722, label %originalBB229, label %originalBB229alteredBB

originalBB229:                                    ; preds = %originalBB229alteredBB, %1714
  %1723 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %1724 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1723, i32 0, i32 1
  %1725 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1724, i64 0, i64 3
  %1726 = bitcast %union.rtunion_def* %1725 to %struct.rtx_def**
  %1727 = load %struct.rtx_def*, %struct.rtx_def** %1726, align 8
  %1728 = bitcast %struct.rtx_def* %1727 to i32*
  %1729 = load i32, i32* %1728, align 8
  %1730 = and i32 %1729, 65535
  %1731 = icmp eq i32 %1730, 47
  %1732 = load i32, i32* @x.17
  %1733 = load i32, i32* @y.18
  %1734 = sub i32 %1732, 1
  %1735 = mul i32 %1732, %1734
  %1736 = urem i32 %1735, 2
  %1737 = icmp eq i32 %1736, 0
  %1738 = icmp slt i32 %1733, 10
  %1739 = or i1 %1737, %1738
  br i1 %1739, label %originalBBpart2244, label %originalBB229alteredBB

originalBBpart2244:                               ; preds = %originalBB229
  br i1 %1731, label %1740, label %1762

; <label>:1740:                                   ; preds = %originalBBpart2244
  %1741 = load i32, i32* @x.17
  %1742 = load i32, i32* @y.18
  %1743 = sub i32 %1741, 1
  %1744 = mul i32 %1741, %1743
  %1745 = urem i32 %1744, 2
  %1746 = icmp eq i32 %1745, 0
  %1747 = icmp slt i32 %1742, 10
  %1748 = or i1 %1746, %1747
  br i1 %1748, label %originalBB246, label %originalBB246alteredBB

originalBB246:                                    ; preds = %originalBB246alteredBB, %1740
  %1749 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %1750 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1749, i32 0, i32 1
  %1751 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1750, i64 0, i64 3
  %1752 = bitcast %union.rtunion_def* %1751 to %struct.rtx_def**
  %1753 = load %struct.rtx_def*, %struct.rtx_def** %1752, align 8
  %1754 = load i32, i32* @x.17
  %1755 = load i32, i32* @y.18
  %1756 = sub i32 %1754, 1
  %1757 = mul i32 %1754, %1756
  %1758 = urem i32 %1757, 2
  %1759 = icmp eq i32 %1758, 0
  %1760 = icmp slt i32 %1755, 10
  %1761 = or i1 %1759, %1760
  br i1 %1761, label %originalBBpart2248, label %originalBB246alteredBB

originalBBpart2248:                               ; preds = %originalBB246
  br label %1770

; <label>:1762:                                   ; preds = %originalBBpart2244
  %1763 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %1764 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %1765 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1764, i32 0, i32 1
  %1766 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1765, i64 0, i64 3
  %1767 = bitcast %union.rtunion_def* %1766 to %struct.rtx_def**
  %1768 = load %struct.rtx_def*, %struct.rtx_def** %1767, align 8
  %1769 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %1763, %struct.rtx_def* %1768)
  br label %1770

; <label>:1770:                                   ; preds = %1762, %originalBBpart2248
  %1771 = phi %struct.rtx_def* [ %1753, %originalBBpart2248 ], [ %1769, %1762 ]
  %1772 = load i32, i32* @x.17
  %1773 = load i32, i32* @y.18
  %1774 = sub i32 %1772, 1
  %1775 = mul i32 %1772, %1774
  %1776 = urem i32 %1775, 2
  %1777 = icmp eq i32 %1776, 0
  %1778 = icmp slt i32 %1773, 10
  %1779 = or i1 %1777, %1778
  br i1 %1779, label %originalBB250, label %originalBB250alteredBB

originalBB250:                                    ; preds = %originalBB250alteredBB, %1770
  %1780 = load i32, i32* @x.17
  %1781 = load i32, i32* @y.18
  %1782 = sub i32 %1780, 1
  %1783 = mul i32 %1780, %1782
  %1784 = urem i32 %1783, 2
  %1785 = icmp eq i32 %1784, 0
  %1786 = icmp slt i32 %1781, 10
  %1787 = or i1 %1785, %1786
  br i1 %1787, label %originalBBpart2252, label %originalBB250alteredBB

originalBBpart2252:                               ; preds = %originalBB250
  br label %1789

; <label>:1788:                                   ; preds = %1704
  br label %1789

; <label>:1789:                                   ; preds = %1788, %originalBBpart2252
  %1790 = phi %struct.rtx_def* [ %1771, %originalBBpart2252 ], [ null, %1788 ]
  store %struct.rtx_def* %1790, %struct.rtx_def** %41, align 8
  br label %1817

; <label>:1791:                                   ; preds = %originalBBpart2227
  %1792 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %1793 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %1794 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1793, i32 0, i32 1
  %1795 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1794, i64 0, i64 3
  %1796 = bitcast %union.rtunion_def* %1795 to %struct.rtx_def**
  %1797 = load %struct.rtx_def*, %struct.rtx_def** %1796, align 8
  %1798 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %1792, %struct.rtx_def* %1797)
  %1799 = icmp ne i32 %1798, 0
  br i1 %1799, label %1800, label %1801

; <label>:1800:                                   ; preds = %1791
  store %struct.rtx_def* null, %struct.rtx_def** %40, align 8
  br label %1817

; <label>:1801:                                   ; preds = %1791
  %1802 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %1803 = bitcast %struct.rtx_def* %1802 to i32*
  %1804 = load i32, i32* %1803, align 8
  %1805 = and i32 %1804, 65535
  %1806 = icmp eq i32 %1805, 34
  br i1 %1806, label %1807, label %1810

; <label>:1807:                                   ; preds = %1801
  %1808 = load i32, i32* %42, align 4
  %1809 = add nsw i32 %1808, 1
  store i32 %1809, i32* %42, align 4
  br label %1810

; <label>:1810:                                   ; preds = %1807, %1801
  br label %1811

; <label>:1811:                                   ; preds = %1810, %1679
  %1812 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %1813 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1812, i32 0, i32 1
  %1814 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1813, i64 0, i64 1
  %1815 = bitcast %union.rtunion_def* %1814 to %struct.rtx_def**
  %1816 = load %struct.rtx_def*, %struct.rtx_def** %1815, align 8
  store %struct.rtx_def* %1816, %struct.rtx_def** %40, align 8
  br label %1645

; <label>:1817:                                   ; preds = %1800, %1789, %1668, %originalBBpart2220
  %1818 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %1819 = icmp ne %struct.rtx_def* %1818, null
  br i1 %1819, label %1820, label %2051

; <label>:1820:                                   ; preds = %1817
  %1821 = load %struct.rtx_def*, %struct.rtx_def** %41, align 8
  %1822 = icmp ne %struct.rtx_def* %1821, null
  br i1 %1822, label %1823, label %2051

; <label>:1823:                                   ; preds = %1820
  %1824 = load %struct.rtx_def*, %struct.rtx_def** %41, align 8
  %1825 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1824, i32 0, i32 1
  %1826 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1825, i64 0, i64 0
  %1827 = bitcast %union.rtunion_def* %1826 to %struct.rtx_def**
  %1828 = load %struct.rtx_def*, %struct.rtx_def** %1827, align 8
  %1829 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %1830 = icmp eq %struct.rtx_def* %1828, %1829
  br i1 %1830, label %1831, label %2051

; <label>:1831:                                   ; preds = %1823
  %1832 = load %struct.rtx_def*, %struct.rtx_def** %41, align 8
  %1833 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1832, i32 0, i32 1
  %1834 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1833, i64 0, i64 1
  %1835 = bitcast %union.rtunion_def* %1834 to %struct.rtx_def**
  %1836 = load %struct.rtx_def*, %struct.rtx_def** %1835, align 8
  %1837 = bitcast %struct.rtx_def* %1836 to i32*
  %1838 = load i32, i32* %1837, align 8
  %1839 = and i32 %1838, 65535
  %1840 = icmp eq i32 %1839, 67
  br i1 %1840, label %1959, label %1841

; <label>:1841:                                   ; preds = %1831
  %1842 = load %struct.rtx_def*, %struct.rtx_def** %41, align 8
  %1843 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1842, i32 0, i32 1
  %1844 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1843, i64 0, i64 1
  %1845 = bitcast %union.rtunion_def* %1844 to %struct.rtx_def**
  %1846 = load %struct.rtx_def*, %struct.rtx_def** %1845, align 8
  %1847 = bitcast %struct.rtx_def* %1846 to i32*
  %1848 = load i32, i32* %1847, align 8
  %1849 = and i32 %1848, 65535
  %1850 = icmp eq i32 %1849, 68
  br i1 %1850, label %1959, label %1851

; <label>:1851:                                   ; preds = %1841
  %1852 = load %struct.rtx_def*, %struct.rtx_def** %41, align 8
  %1853 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1852, i32 0, i32 1
  %1854 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1853, i64 0, i64 1
  %1855 = bitcast %union.rtunion_def* %1854 to %struct.rtx_def**
  %1856 = load %struct.rtx_def*, %struct.rtx_def** %1855, align 8
  %1857 = bitcast %struct.rtx_def* %1856 to i32*
  %1858 = load i32, i32* %1857, align 8
  %1859 = and i32 %1858, 65535
  %1860 = icmp eq i32 %1859, 54
  br i1 %1860, label %1959, label %1861

; <label>:1861:                                   ; preds = %1851
  %1862 = load i32, i32* @x.17
  %1863 = load i32, i32* @y.18
  %1864 = sub i32 %1862, 1
  %1865 = mul i32 %1862, %1864
  %1866 = urem i32 %1865, 2
  %1867 = icmp eq i32 %1866, 0
  %1868 = icmp slt i32 %1863, 10
  %1869 = or i1 %1867, %1868
  br i1 %1869, label %originalBB254, label %originalBB254alteredBB

originalBB254:                                    ; preds = %originalBB254alteredBB, %1861
  %1870 = load %struct.rtx_def*, %struct.rtx_def** %41, align 8
  %1871 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1870, i32 0, i32 1
  %1872 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1871, i64 0, i64 1
  %1873 = bitcast %union.rtunion_def* %1872 to %struct.rtx_def**
  %1874 = load %struct.rtx_def*, %struct.rtx_def** %1873, align 8
  %1875 = bitcast %struct.rtx_def* %1874 to i32*
  %1876 = load i32, i32* %1875, align 8
  %1877 = and i32 %1876, 65535
  %1878 = icmp eq i32 %1877, 55
  %1879 = load i32, i32* @x.17
  %1880 = load i32, i32* @y.18
  %1881 = sub i32 %1879, 1
  %1882 = mul i32 %1879, %1881
  %1883 = urem i32 %1882, 2
  %1884 = icmp eq i32 %1883, 0
  %1885 = icmp slt i32 %1880, 10
  %1886 = or i1 %1884, %1885
  br i1 %1886, label %originalBBpart2266, label %originalBB254alteredBB

originalBBpart2266:                               ; preds = %originalBB254
  br i1 %1878, label %1959, label %1887

; <label>:1887:                                   ; preds = %originalBBpart2266
  %1888 = load i32, i32* @x.17
  %1889 = load i32, i32* @y.18
  %1890 = sub i32 %1888, 1
  %1891 = mul i32 %1888, %1890
  %1892 = urem i32 %1891, 2
  %1893 = icmp eq i32 %1892, 0
  %1894 = icmp slt i32 %1889, 10
  %1895 = or i1 %1893, %1894
  br i1 %1895, label %originalBB268, label %originalBB268alteredBB

originalBB268:                                    ; preds = %originalBB268alteredBB, %1887
  %1896 = load %struct.rtx_def*, %struct.rtx_def** %41, align 8
  %1897 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1896, i32 0, i32 1
  %1898 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1897, i64 0, i64 1
  %1899 = bitcast %union.rtunion_def* %1898 to %struct.rtx_def**
  %1900 = load %struct.rtx_def*, %struct.rtx_def** %1899, align 8
  %1901 = bitcast %struct.rtx_def* %1900 to i32*
  %1902 = load i32, i32* %1901, align 8
  %1903 = and i32 %1902, 65535
  %1904 = icmp eq i32 %1903, 58
  %1905 = load i32, i32* @x.17
  %1906 = load i32, i32* @y.18
  %1907 = sub i32 %1905, 1
  %1908 = mul i32 %1905, %1907
  %1909 = urem i32 %1908, 2
  %1910 = icmp eq i32 %1909, 0
  %1911 = icmp slt i32 %1906, 10
  %1912 = or i1 %1910, %1911
  br i1 %1912, label %originalBBpart2274, label %originalBB268alteredBB

originalBBpart2274:                               ; preds = %originalBB268
  br i1 %1904, label %1959, label %1913

; <label>:1913:                                   ; preds = %originalBBpart2274
  %1914 = load i32, i32* @x.17
  %1915 = load i32, i32* @y.18
  %1916 = sub i32 %1914, 1
  %1917 = mul i32 %1914, %1916
  %1918 = urem i32 %1917, 2
  %1919 = icmp eq i32 %1918, 0
  %1920 = icmp slt i32 %1915, 10
  %1921 = or i1 %1919, %1920
  br i1 %1921, label %originalBB276, label %originalBB276alteredBB

originalBB276:                                    ; preds = %originalBB276alteredBB, %1913
  %1922 = load %struct.rtx_def*, %struct.rtx_def** %41, align 8
  %1923 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1922, i32 0, i32 1
  %1924 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1923, i64 0, i64 1
  %1925 = bitcast %union.rtunion_def* %1924 to %struct.rtx_def**
  %1926 = load %struct.rtx_def*, %struct.rtx_def** %1925, align 8
  %1927 = bitcast %struct.rtx_def* %1926 to i32*
  %1928 = load i32, i32* %1927, align 8
  %1929 = and i32 %1928, 65535
  %1930 = icmp eq i32 %1929, 134
  %1931 = load i32, i32* @x.17
  %1932 = load i32, i32* @y.18
  %1933 = sub i32 %1931, 1
  %1934 = mul i32 %1931, %1933
  %1935 = urem i32 %1934, 2
  %1936 = icmp eq i32 %1935, 0
  %1937 = icmp slt i32 %1932, 10
  %1938 = or i1 %1936, %1937
  br i1 %1938, label %originalBBpart2288, label %originalBB276alteredBB

originalBBpart2288:                               ; preds = %originalBB276
  br i1 %1930, label %1959, label %1939

; <label>:1939:                                   ; preds = %originalBBpart2288
  %1940 = load %struct.rtx_def*, %struct.rtx_def** %41, align 8
  %1941 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1940, i32 0, i32 1
  %1942 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1941, i64 0, i64 1
  %1943 = bitcast %union.rtunion_def* %1942 to %struct.rtx_def**
  %1944 = load %struct.rtx_def*, %struct.rtx_def** %1943, align 8
  %1945 = bitcast %struct.rtx_def* %1944 to i32*
  %1946 = load i32, i32* %1945, align 8
  %1947 = and i32 %1946, 65535
  %1948 = icmp eq i32 %1947, 56
  br i1 %1948, label %1959, label %1949

; <label>:1949:                                   ; preds = %1939
  %1950 = load %struct.rtx_def*, %struct.rtx_def** %41, align 8
  %1951 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1950, i32 0, i32 1
  %1952 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1951, i64 0, i64 1
  %1953 = bitcast %union.rtunion_def* %1952 to %struct.rtx_def**
  %1954 = load %struct.rtx_def*, %struct.rtx_def** %1953, align 8
  %1955 = bitcast %struct.rtx_def* %1954 to i32*
  %1956 = load i32, i32* %1955, align 8
  %1957 = and i32 %1956, 65535
  %1958 = icmp eq i32 %1957, 140
  br i1 %1958, label %1959, label %2051

; <label>:1959:                                   ; preds = %1949, %1939, %originalBBpart2288, %originalBBpart2274, %originalBBpart2266, %1851, %1841, %1831
  %1960 = load i32, i32* @x.17
  %1961 = load i32, i32* @y.18
  %1962 = sub i32 %1960, 1
  %1963 = mul i32 %1960, %1962
  %1964 = urem i32 %1963, 2
  %1965 = icmp eq i32 %1964, 0
  %1966 = icmp slt i32 %1961, 10
  %1967 = or i1 %1965, %1966
  br i1 %1967, label %originalBB290, label %originalBB290alteredBB

originalBB290:                                    ; preds = %originalBB290alteredBB, %1959
  %1968 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %1969 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %1970 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1969, i32 0, i32 1
  %1971 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1970, i64 0, i64 1
  %1972 = bitcast %union.rtunion_def* %1971 to %struct.rtx_def**
  %1973 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %1974 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1973, i32 0, i32 1
  %1975 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %1974, i64 0, i64 0
  %1976 = bitcast %union.rtunion_def* %1975 to %struct.rtx_def**
  %1977 = load %struct.rtx_def*, %struct.rtx_def** %1976, align 8
  %1978 = call i32 @validate_change(%struct.rtx_def* %1968, %struct.rtx_def** %1972, %struct.rtx_def* %1977, i32 0)
  %1979 = icmp ne i32 %1978, 0
  %1980 = load i32, i32* @x.17
  %1981 = load i32, i32* @y.18
  %1982 = sub i32 %1980, 1
  %1983 = mul i32 %1980, %1982
  %1984 = urem i32 %1983, 2
  %1985 = icmp eq i32 %1984, 0
  %1986 = icmp slt i32 %1981, 10
  %1987 = or i1 %1985, %1986
  br i1 %1987, label %originalBBpart2292, label %originalBB290alteredBB

originalBBpart2292:                               ; preds = %originalBB290
  br i1 %1979, label %1988, label %2051

; <label>:1988:                                   ; preds = %originalBBpart2292
  %1989 = load i32, i32* @x.17
  %1990 = load i32, i32* @y.18
  %1991 = sub i32 %1989, 1
  %1992 = mul i32 %1989, %1991
  %1993 = urem i32 %1992, 2
  %1994 = icmp eq i32 %1993, 0
  %1995 = icmp slt i32 %1990, 10
  %1996 = or i1 %1994, %1995
  br i1 %1996, label %originalBB294, label %originalBB294alteredBB

originalBB294:                                    ; preds = %originalBB294alteredBB, %1988
  %1997 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %1998 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %1997)
  %1999 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2000 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %1999, i32 0, i32 4
  %2001 = bitcast %union.varray_data_tag* %2000 to [1 x %struct.reg_info_def*]*
  %2002 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2003 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2002, i32 0, i32 1
  %2004 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2003, i64 0, i64 0
  %2005 = bitcast %union.rtunion_def* %2004 to i32*
  %2006 = load i32, i32* %2005, align 8
  %2007 = zext i32 %2006 to i64
  %2008 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2001, i64 0, i64 %2007
  %2009 = load %struct.reg_info_def*, %struct.reg_info_def** %2008, align 8
  %2010 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2009, i32 0, i32 3
  %2011 = load i32, i32* %2010, align 4
  %2012 = add nsw i32 %2011, -1
  store i32 %2012, i32* %2010, align 4
  %2013 = load i32, i32* %42, align 4
  %2014 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2015 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2014, i32 0, i32 4
  %2016 = bitcast %union.varray_data_tag* %2015 to [1 x %struct.reg_info_def*]*
  %2017 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2018 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2017, i32 0, i32 1
  %2019 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2018, i64 0, i64 0
  %2020 = bitcast %union.rtunion_def* %2019 to i32*
  %2021 = load i32, i32* %2020, align 8
  %2022 = zext i32 %2021 to i64
  %2023 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2016, i64 0, i64 %2022
  %2024 = load %struct.reg_info_def*, %struct.reg_info_def** %2023, align 8
  %2025 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2024, i32 0, i32 8
  %2026 = load i32, i32* %2025, align 4
  %2027 = sub nsw i32 %2026, %2013
  store i32 %2027, i32* %2025, align 4
  %2028 = load i32, i32* %43, align 4
  %2029 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2030 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2029, i32 0, i32 4
  %2031 = bitcast %union.varray_data_tag* %2030 to [1 x %struct.reg_info_def*]*
  %2032 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2033 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2032, i32 0, i32 1
  %2034 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2033, i64 0, i64 0
  %2035 = bitcast %union.rtunion_def* %2034 to i32*
  %2036 = load i32, i32* %2035, align 8
  %2037 = zext i32 %2036 to i64
  %2038 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2031, i64 0, i64 %2037
  %2039 = load %struct.reg_info_def*, %struct.reg_info_def** %2038, align 8
  %2040 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2039, i32 0, i32 7
  %2041 = load i32, i32* %2040, align 4
  %2042 = sub nsw i32 %2041, %2028
  store i32 %2042, i32* %2040, align 4
  store i64 0, i64* %28, align 8
  %2043 = load i32, i32* @x.17
  %2044 = load i32, i32* @y.18
  %2045 = sub i32 %2043, 1
  %2046 = mul i32 %2043, %2045
  %2047 = urem i32 %2046, 2
  %2048 = icmp eq i32 %2047, 0
  %2049 = icmp slt i32 %2044, 10
  %2050 = or i1 %2048, %2049
  br i1 %2050, label %originalBBpart2322, label %originalBB294alteredBB

originalBBpart2322:                               ; preds = %originalBB294
  br label %2051

; <label>:2051:                                   ; preds = %originalBBpart2322, %originalBBpart2292, %1949, %1823, %1820, %1817
  br label %2052

; <label>:2052:                                   ; preds = %2051, %originalBBpart2216, %1490
  br label %2053

; <label>:2053:                                   ; preds = %2052, %originalBBpart2187, %1465
  %2054 = load %struct.rtx_def*, %struct.rtx_def** %21, align 8
  %2055 = icmp ne %struct.rtx_def* %2054, null
  br i1 %2055, label %2056, label %2298

; <label>:2056:                                   ; preds = %2053
  %2057 = load i32, i32* %27, align 4
  %2058 = icmp eq i32 %2057, 75
  br i1 %2058, label %2059, label %2298

; <label>:2059:                                   ; preds = %2056
  br i1 false, label %2060, label %2298

; <label>:2060:                                   ; preds = %2059
  %2061 = load i64, i64* %29, align 8
  %2062 = icmp slt i64 %2061, 0
  br i1 %2062, label %2063, label %2298

; <label>:2063:                                   ; preds = %2060
  %2064 = load i32, i32* @x.17
  %2065 = load i32, i32* @y.18
  %2066 = sub i32 %2064, 1
  %2067 = mul i32 %2064, %2066
  %2068 = urem i32 %2067, 2
  %2069 = icmp eq i32 %2068, 0
  %2070 = icmp slt i32 %2065, 10
  %2071 = or i1 %2069, %2070
  br i1 %2071, label %originalBB324, label %originalBB324alteredBB

originalBB324:                                    ; preds = %originalBB324alteredBB, %2063
  %2072 = load i64, i64* %29, align 8
  %2073 = icmp sge i64 %2072, -16
  %2074 = load i32, i32* @x.17
  %2075 = load i32, i32* @y.18
  %2076 = sub i32 %2074, 1
  %2077 = mul i32 %2074, %2076
  %2078 = urem i32 %2077, 2
  %2079 = icmp eq i32 %2078, 0
  %2080 = icmp slt i32 %2075, 10
  %2081 = or i1 %2079, %2080
  br i1 %2081, label %originalBBpart2326, label %originalBB324alteredBB

originalBBpart2326:                               ; preds = %originalBB324
  br i1 %2073, label %2082, label %2298

; <label>:2082:                                   ; preds = %originalBBpart2326
  %2083 = load i64, i64* %29, align 8
  %2084 = call i32 @exact_log2_wide(i64 %2083)
  %2085 = icmp ne i32 %2084, 0
  br i1 %2085, label %2086, label %2298

; <label>:2086:                                   ; preds = %2082
  %2087 = load %struct.rtx_def*, %struct.rtx_def** %22, align 8
  %2088 = icmp ne %struct.rtx_def* %2087, null
  br i1 %2088, label %2089, label %2095

; <label>:2089:                                   ; preds = %2086
  %2090 = load %struct.rtx_def*, %struct.rtx_def** %22, align 8
  %2091 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2090, i32 0, i32 1
  %2092 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2091, i64 0, i64 0
  %2093 = bitcast %union.rtunion_def* %2092 to %struct.rtx_def**
  %2094 = load %struct.rtx_def*, %struct.rtx_def** %2093, align 8
  br label %2097

; <label>:2095:                                   ; preds = %2086
  %2096 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  br label %2097

; <label>:2097:                                   ; preds = %2095, %2089
  %2098 = phi %struct.rtx_def* [ %2094, %2089 ], [ %2096, %2095 ]
  store %struct.rtx_def* %2098, %struct.rtx_def** %45, align 8
  %2099 = load %struct.rtx_def*, %struct.rtx_def** %21, align 8
  store %struct.rtx_def* %2099, %struct.rtx_def** %44, align 8
  br label %2100

; <label>:2100:                                   ; preds = %2280, %originalBBpart2352, %2097
  %2101 = load %struct.rtx_def*, %struct.rtx_def** %44, align 8
  %2102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2101, i32 0, i32 1
  %2103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2102, i64 0, i64 2
  %2104 = bitcast %union.rtunion_def* %2103 to %struct.rtx_def**
  %2105 = load %struct.rtx_def*, %struct.rtx_def** %2104, align 8
  store %struct.rtx_def* %2105, %struct.rtx_def** %44, align 8
  %2106 = icmp ne %struct.rtx_def* %2105, null
  br i1 %2106, label %2107, label %2281

; <label>:2107:                                   ; preds = %2100
  %2108 = load i32, i32* @x.17
  %2109 = load i32, i32* @y.18
  %2110 = sub i32 %2108, 1
  %2111 = mul i32 %2108, %2110
  %2112 = urem i32 %2111, 2
  %2113 = icmp eq i32 %2112, 0
  %2114 = icmp slt i32 %2109, 10
  %2115 = or i1 %2113, %2114
  br i1 %2115, label %originalBB328, label %originalBB328alteredBB

originalBB328:                                    ; preds = %originalBB328alteredBB, %2107
  %2116 = load %struct.rtx_def*, %struct.rtx_def** %44, align 8
  %2117 = call i32 @perhaps_ends_bb_p(%struct.rtx_def* %2116)
  %2118 = icmp ne i32 %2117, 0
  %2119 = load i32, i32* @x.17
  %2120 = load i32, i32* @y.18
  %2121 = sub i32 %2119, 1
  %2122 = mul i32 %2119, %2121
  %2123 = urem i32 %2122, 2
  %2124 = icmp eq i32 %2123, 0
  %2125 = icmp slt i32 %2120, 10
  %2126 = or i1 %2124, %2125
  br i1 %2126, label %originalBBpart2330, label %originalBB328alteredBB

originalBBpart2330:                               ; preds = %originalBB328
  br i1 %2118, label %2127, label %2144

; <label>:2127:                                   ; preds = %originalBBpart2330
  %2128 = load i32, i32* @x.17
  %2129 = load i32, i32* @y.18
  %2130 = sub i32 %2128, 1
  %2131 = mul i32 %2128, %2130
  %2132 = urem i32 %2131, 2
  %2133 = icmp eq i32 %2132, 0
  %2134 = icmp slt i32 %2129, 10
  %2135 = or i1 %2133, %2134
  br i1 %2135, label %originalBB332, label %originalBB332alteredBB

originalBB332:                                    ; preds = %originalBB332alteredBB, %2127
  %2136 = load i32, i32* @x.17
  %2137 = load i32, i32* @y.18
  %2138 = sub i32 %2136, 1
  %2139 = mul i32 %2136, %2138
  %2140 = urem i32 %2139, 2
  %2141 = icmp eq i32 %2140, 0
  %2142 = icmp slt i32 %2137, 10
  %2143 = or i1 %2141, %2142
  br i1 %2143, label %originalBBpart2334, label %originalBB332alteredBB

originalBBpart2334:                               ; preds = %originalBB332
  br label %2281

; <label>:2144:                                   ; preds = %originalBBpart2330
  %2145 = load i32, i32* @x.17
  %2146 = load i32, i32* @y.18
  %2147 = sub i32 %2145, 1
  %2148 = mul i32 %2145, %2147
  %2149 = urem i32 %2148, 2
  %2150 = icmp eq i32 %2149, 0
  %2151 = icmp slt i32 %2146, 10
  %2152 = or i1 %2150, %2151
  br i1 %2152, label %originalBB336, label %originalBB336alteredBB

originalBB336:                                    ; preds = %originalBB336alteredBB, %2144
  %2153 = load %struct.rtx_def*, %struct.rtx_def** %44, align 8
  %2154 = bitcast %struct.rtx_def* %2153 to i32*
  %2155 = load i32, i32* %2154, align 8
  %2156 = and i32 %2155, 65535
  %2157 = sext i32 %2156 to i64
  %2158 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %2157
  %2159 = load i8, i8* %2158, align 1
  %2160 = sext i8 %2159 to i32
  %2161 = icmp eq i32 %2160, 105
  %2162 = load i32, i32* @x.17
  %2163 = load i32, i32* @y.18
  %2164 = sub i32 %2162, 1
  %2165 = mul i32 %2162, %2164
  %2166 = urem i32 %2165, 2
  %2167 = icmp eq i32 %2166, 0
  %2168 = icmp slt i32 %2163, 10
  %2169 = or i1 %2167, %2168
  br i1 %2169, label %originalBBpart2348, label %originalBB336alteredBB

originalBBpart2348:                               ; preds = %originalBB336
  br i1 %2161, label %2187, label %2170

; <label>:2170:                                   ; preds = %originalBBpart2348
  %2171 = load i32, i32* @x.17
  %2172 = load i32, i32* @y.18
  %2173 = sub i32 %2171, 1
  %2174 = mul i32 %2171, %2173
  %2175 = urem i32 %2174, 2
  %2176 = icmp eq i32 %2175, 0
  %2177 = icmp slt i32 %2172, 10
  %2178 = or i1 %2176, %2177
  br i1 %2178, label %originalBB350, label %originalBB350alteredBB

originalBB350:                                    ; preds = %originalBB350alteredBB, %2170
  %2179 = load i32, i32* @x.17
  %2180 = load i32, i32* @y.18
  %2181 = sub i32 %2179, 1
  %2182 = mul i32 %2179, %2181
  %2183 = urem i32 %2182, 2
  %2184 = icmp eq i32 %2183, 0
  %2185 = icmp slt i32 %2180, 10
  %2186 = or i1 %2184, %2185
  br i1 %2186, label %originalBBpart2352, label %originalBB350alteredBB

originalBBpart2352:                               ; preds = %originalBB350
  br label %2100

; <label>:2187:                                   ; preds = %originalBBpart2348
  %2188 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2189 = load %struct.rtx_def*, %struct.rtx_def** %45, align 8
  %2190 = icmp ne %struct.rtx_def* %2188, %2189
  br i1 %2190, label %2191, label %2222

; <label>:2191:                                   ; preds = %2187
  %2192 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2193 = load %struct.rtx_def*, %struct.rtx_def** %44, align 8
  %2194 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2193, i32 0, i32 1
  %2195 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2194, i64 0, i64 3
  %2196 = bitcast %union.rtunion_def* %2195 to %struct.rtx_def**
  %2197 = load %struct.rtx_def*, %struct.rtx_def** %2196, align 8
  %2198 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %2192, %struct.rtx_def* %2197)
  %2199 = icmp ne i32 %2198, 0
  br i1 %2199, label %2221, label %2200

; <label>:2200:                                   ; preds = %2191
  %2201 = load i32, i32* @x.17
  %2202 = load i32, i32* @y.18
  %2203 = sub i32 %2201, 1
  %2204 = mul i32 %2201, %2203
  %2205 = urem i32 %2204, 2
  %2206 = icmp eq i32 %2205, 0
  %2207 = icmp slt i32 %2202, 10
  %2208 = or i1 %2206, %2207
  br i1 %2208, label %originalBB354, label %originalBB354alteredBB

originalBB354:                                    ; preds = %originalBB354alteredBB, %2200
  %2209 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2210 = load %struct.rtx_def*, %struct.rtx_def** %44, align 8
  %2211 = call i32 @reg_set_p(%struct.rtx_def* %2209, %struct.rtx_def* %2210)
  %2212 = icmp ne i32 %2211, 0
  %2213 = load i32, i32* @x.17
  %2214 = load i32, i32* @y.18
  %2215 = sub i32 %2213, 1
  %2216 = mul i32 %2213, %2215
  %2217 = urem i32 %2216, 2
  %2218 = icmp eq i32 %2217, 0
  %2219 = icmp slt i32 %2214, 10
  %2220 = or i1 %2218, %2219
  br i1 %2220, label %originalBBpart2356, label %originalBB354alteredBB

originalBBpart2356:                               ; preds = %originalBB354
  br i1 %2212, label %2221, label %2222

; <label>:2221:                                   ; preds = %originalBBpart2356, %2191
  br label %2281

; <label>:2222:                                   ; preds = %originalBBpart2356, %2187
  %2223 = load i32, i32* @x.17
  %2224 = load i32, i32* @y.18
  %2225 = sub i32 %2223, 1
  %2226 = mul i32 %2223, %2225
  %2227 = urem i32 %2226, 2
  %2228 = icmp eq i32 %2227, 0
  %2229 = icmp slt i32 %2224, 10
  %2230 = or i1 %2228, %2229
  br i1 %2230, label %originalBB358, label %originalBB358alteredBB

originalBB358:                                    ; preds = %originalBB358alteredBB, %2222
  %2231 = load %struct.rtx_def*, %struct.rtx_def** %45, align 8
  %2232 = load %struct.rtx_def*, %struct.rtx_def** %44, align 8
  %2233 = call i32 @reg_set_p(%struct.rtx_def* %2231, %struct.rtx_def* %2232)
  %2234 = icmp ne i32 %2233, 0
  %2235 = load i32, i32* @x.17
  %2236 = load i32, i32* @y.18
  %2237 = sub i32 %2235, 1
  %2238 = mul i32 %2235, %2237
  %2239 = urem i32 %2238, 2
  %2240 = icmp eq i32 %2239, 0
  %2241 = icmp slt i32 %2236, 10
  %2242 = or i1 %2240, %2241
  br i1 %2242, label %originalBBpart2360, label %originalBB358alteredBB

originalBBpart2360:                               ; preds = %originalBB358
  br i1 %2234, label %2243, label %2244

; <label>:2243:                                   ; preds = %originalBBpart2360
  br label %2281

; <label>:2244:                                   ; preds = %originalBBpart2360
  %2245 = load i32, i32* @x.17
  %2246 = load i32, i32* @y.18
  %2247 = sub i32 %2245, 1
  %2248 = mul i32 %2245, %2247
  %2249 = urem i32 %2248, 2
  %2250 = icmp eq i32 %2249, 0
  %2251 = icmp slt i32 %2246, 10
  %2252 = or i1 %2250, %2251
  br i1 %2252, label %originalBB362, label %originalBB362alteredBB

originalBB362:                                    ; preds = %originalBB362alteredBB, %2244
  %2253 = load %struct.rtx_def*, %struct.rtx_def** %45, align 8
  %2254 = load %struct.rtx_def*, %struct.rtx_def** %44, align 8
  %2255 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2254, i32 0, i32 1
  %2256 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2255, i64 0, i64 3
  %2257 = bitcast %union.rtunion_def* %2256 to %struct.rtx_def**
  %2258 = load %struct.rtx_def*, %struct.rtx_def** %2257, align 8
  %2259 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %2253, %struct.rtx_def* %2258)
  %2260 = icmp ne i32 %2259, 0
  %2261 = load i32, i32* @x.17
  %2262 = load i32, i32* @y.18
  %2263 = sub i32 %2261, 1
  %2264 = mul i32 %2261, %2263
  %2265 = urem i32 %2264, 2
  %2266 = icmp eq i32 %2265, 0
  %2267 = icmp slt i32 %2262, 10
  %2268 = or i1 %2266, %2267
  br i1 %2268, label %originalBBpart2364, label %originalBB362alteredBB

originalBBpart2364:                               ; preds = %originalBB362
  br i1 %2260, label %2269, label %2276

; <label>:2269:                                   ; preds = %originalBBpart2364
  %2270 = load %struct.rtx_def*, %struct.rtx_def** %44, align 8
  %2271 = load %struct.rtx_def*, %struct.rtx_def** %21, align 8
  %2272 = load %struct.rtx_def*, %struct.rtx_def** %22, align 8
  %2273 = load %struct.rtx_def*, %struct.rtx_def** %45, align 8
  %2274 = load i64, i64* %29, align 8
  %2275 = call i32 @try_auto_increment(%struct.rtx_def* %2270, %struct.rtx_def* %2271, %struct.rtx_def* %2272, %struct.rtx_def* %2273, i64 %2274, i32 1)
  br label %2281

; <label>:2276:                                   ; preds = %originalBBpart2364
  br label %2277

; <label>:2277:                                   ; preds = %2276
  br label %2278

; <label>:2278:                                   ; preds = %2277
  br label %2279

; <label>:2279:                                   ; preds = %2278
  br label %2280

; <label>:2280:                                   ; preds = %2279
  br label %2100

; <label>:2281:                                   ; preds = %2269, %2243, %2221, %originalBBpart2334, %2100
  %2282 = load i32, i32* @x.17
  %2283 = load i32, i32* @y.18
  %2284 = sub i32 %2282, 1
  %2285 = mul i32 %2282, %2284
  %2286 = urem i32 %2285, 2
  %2287 = icmp eq i32 %2286, 0
  %2288 = icmp slt i32 %2283, 10
  %2289 = or i1 %2287, %2288
  br i1 %2289, label %originalBB366, label %originalBB366alteredBB

originalBB366:                                    ; preds = %originalBB366alteredBB, %2281
  %2290 = load i32, i32* @x.17
  %2291 = load i32, i32* @y.18
  %2292 = sub i32 %2290, 1
  %2293 = mul i32 %2290, %2292
  %2294 = urem i32 %2293, 2
  %2295 = icmp eq i32 %2294, 0
  %2296 = icmp slt i32 %2291, 10
  %2297 = or i1 %2295, %2296
  br i1 %2297, label %originalBBpart2368, label %originalBB366alteredBB

originalBBpart2368:                               ; preds = %originalBB366
  br label %2298

; <label>:2298:                                   ; preds = %originalBBpart2368, %2082, %originalBBpart2326, %2060, %2059, %2056, %2053
  %2299 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %2300 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %2301 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2300, i32 0, i32 1
  %2302 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2301, i64 0, i64 3
  %2303 = bitcast %union.rtunion_def* %2302 to %struct.rtx_def**
  %2304 = load %struct.rtx_def*, %struct.rtx_def** %2303, align 8
  %2305 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %2299, %struct.rtx_def* %2304)
  %2306 = icmp ne i32 %2305, 0
  br i1 %2306, label %2307, label %2322

; <label>:2307:                                   ; preds = %2298
  %2308 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %2309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2308, i32 0, i32 1
  %2310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2309, i64 0, i64 6
  %2311 = bitcast %union.rtunion_def* %2310 to %struct.rtx_def**
  %2312 = load %struct.rtx_def*, %struct.rtx_def** %2311, align 8
  %2313 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %2314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2313, i32 0, i32 1
  %2315 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2314, i64 0, i64 1
  %2316 = bitcast %union.rtunion_def* %2315 to %struct.rtx_def**
  store %struct.rtx_def* %2312, %struct.rtx_def** %2316, align 8
  %2317 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %2318 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %2319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2318, i32 0, i32 1
  %2320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2319, i64 0, i64 6
  %2321 = bitcast %union.rtunion_def* %2320 to %struct.rtx_def**
  store %struct.rtx_def* %2317, %struct.rtx_def** %2321, align 8
  br label %2322

; <label>:2322:                                   ; preds = %2307, %2298
  %2323 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %2324 = icmp ne %struct.rtx_def* %2323, null
  br i1 %2324, label %2325, label %2377

; <label>:2325:                                   ; preds = %2322
  %2326 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %2327 = icmp ne %struct.rtx_def* %2326, null
  br i1 %2327, label %2331, label %2328

; <label>:2328:                                   ; preds = %2325
  %2329 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %2330 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  call void @remove_note(%struct.rtx_def* %2329, %struct.rtx_def* %2330)
  br label %2331

; <label>:2331:                                   ; preds = %2328, %2325
  %2332 = load i32, i32* @x.17
  %2333 = load i32, i32* @y.18
  %2334 = sub i32 %2332, 1
  %2335 = mul i32 %2332, %2334
  %2336 = urem i32 %2335, 2
  %2337 = icmp eq i32 %2336, 0
  %2338 = icmp slt i32 %2333, 10
  %2339 = or i1 %2337, %2338
  br i1 %2339, label %originalBB370, label %originalBB370alteredBB

originalBB370:                                    ; preds = %originalBB370alteredBB, %2331
  %2340 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2341 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2340, i32 0, i32 1
  %2342 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2341, i64 0, i64 6
  %2343 = bitcast %union.rtunion_def* %2342 to %struct.rtx_def**
  %2344 = load %struct.rtx_def*, %struct.rtx_def** %2343, align 8
  %2345 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %2346 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2345, i32 0, i32 1
  %2347 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2346, i64 0, i64 1
  %2348 = bitcast %union.rtunion_def* %2347 to %struct.rtx_def**
  store %struct.rtx_def* %2344, %struct.rtx_def** %2348, align 8
  %2349 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %2350 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2351 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2350, i32 0, i32 1
  %2352 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2351, i64 0, i64 6
  %2353 = bitcast %union.rtunion_def* %2352 to %struct.rtx_def**
  store %struct.rtx_def* %2349, %struct.rtx_def** %2353, align 8
  %2354 = load i32, i32* %26, align 4
  %2355 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2356 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2355, i32 0, i32 4
  %2357 = bitcast %union.varray_data_tag* %2356 to [1 x %struct.reg_info_def*]*
  %2358 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2359 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2358, i32 0, i32 1
  %2360 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2359, i64 0, i64 0
  %2361 = bitcast %union.rtunion_def* %2360 to i32*
  %2362 = load i32, i32* %2361, align 8
  %2363 = zext i32 %2362 to i64
  %2364 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2357, i64 0, i64 %2363
  %2365 = load %struct.reg_info_def*, %struct.reg_info_def** %2364, align 8
  %2366 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2365, i32 0, i32 8
  %2367 = load i32, i32* %2366, align 4
  %2368 = add nsw i32 %2367, %2354
  store i32 %2368, i32* %2366, align 4
  %2369 = load i32, i32* @x.17
  %2370 = load i32, i32* @y.18
  %2371 = sub i32 %2369, 1
  %2372 = mul i32 %2369, %2371
  %2373 = urem i32 %2372, 2
  %2374 = icmp eq i32 %2373, 0
  %2375 = icmp slt i32 %2370, 10
  %2376 = or i1 %2374, %2375
  br i1 %2376, label %originalBBpart2381, label %originalBB370alteredBB

originalBBpart2381:                               ; preds = %originalBB370
  br label %2377

; <label>:2377:                                   ; preds = %originalBBpart2381, %2322
  %2378 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2379 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2378, i32 0, i32 4
  %2380 = bitcast %union.varray_data_tag* %2379 to [1 x %struct.reg_info_def*]*
  %2381 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2382 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2381, i32 0, i32 1
  %2383 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2382, i64 0, i64 0
  %2384 = bitcast %union.rtunion_def* %2383 to i32*
  %2385 = load i32, i32* %2384, align 8
  %2386 = zext i32 %2385 to i64
  %2387 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2380, i64 0, i64 %2386
  %2388 = load %struct.reg_info_def*, %struct.reg_info_def** %2387, align 8
  %2389 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2388, i32 0, i32 3
  %2390 = load i32, i32* %2389, align 4
  %2391 = add nsw i32 %2390, 1
  store i32 %2391, i32* %2389, align 4
  %2392 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2393 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2392, i32 0, i32 4
  %2394 = bitcast %union.varray_data_tag* %2393 to [1 x %struct.reg_info_def*]*
  %2395 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %2396 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2395, i32 0, i32 1
  %2397 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2396, i64 0, i64 0
  %2398 = bitcast %union.rtunion_def* %2397 to i32*
  %2399 = load i32, i32* %2398, align 8
  %2400 = zext i32 %2399 to i64
  %2401 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2394, i64 0, i64 %2400
  %2402 = load %struct.reg_info_def*, %struct.reg_info_def** %2401, align 8
  %2403 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2402, i32 0, i32 3
  %2404 = load i32, i32* %2403, align 4
  %2405 = add nsw i32 %2404, -1
  store i32 %2405, i32* %2403, align 4
  %2406 = load i32, i32* %25, align 4
  %2407 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2408 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2407, i32 0, i32 4
  %2409 = bitcast %union.varray_data_tag* %2408 to [1 x %struct.reg_info_def*]*
  %2410 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %2411 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2410, i32 0, i32 1
  %2412 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2411, i64 0, i64 0
  %2413 = bitcast %union.rtunion_def* %2412 to i32*
  %2414 = load i32, i32* %2413, align 8
  %2415 = zext i32 %2414 to i64
  %2416 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2409, i64 0, i64 %2415
  %2417 = load %struct.reg_info_def*, %struct.reg_info_def** %2416, align 8
  %2418 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2417, i32 0, i32 8
  %2419 = load i32, i32* %2418, align 4
  %2420 = sub nsw i32 %2419, %2406
  store i32 %2420, i32* %2418, align 4
  %2421 = load i32, i32* %34, align 4
  %2422 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2423 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2422, i32 0, i32 4
  %2424 = bitcast %union.varray_data_tag* %2423 to [1 x %struct.reg_info_def*]*
  %2425 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2426 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2425, i32 0, i32 1
  %2427 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2426, i64 0, i64 0
  %2428 = bitcast %union.rtunion_def* %2427 to i32*
  %2429 = load i32, i32* %2428, align 8
  %2430 = zext i32 %2429 to i64
  %2431 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2424, i64 0, i64 %2430
  %2432 = load %struct.reg_info_def*, %struct.reg_info_def** %2431, align 8
  %2433 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2432, i32 0, i32 7
  %2434 = load i32, i32* %2433, align 4
  %2435 = add nsw i32 %2434, %2421
  store i32 %2435, i32* %2433, align 4
  %2436 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2437 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2436, i32 0, i32 4
  %2438 = bitcast %union.varray_data_tag* %2437 to [1 x %struct.reg_info_def*]*
  %2439 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %2440 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2439, i32 0, i32 1
  %2441 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2440, i64 0, i64 0
  %2442 = bitcast %union.rtunion_def* %2441 to i32*
  %2443 = load i32, i32* %2442, align 8
  %2444 = zext i32 %2443 to i64
  %2445 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2438, i64 0, i64 %2444
  %2446 = load %struct.reg_info_def*, %struct.reg_info_def** %2445, align 8
  %2447 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2446, i32 0, i32 7
  %2448 = load i32, i32* %2447, align 4
  %2449 = icmp sge i32 %2448, 0
  br i1 %2449, label %2450, label %2494

; <label>:2450:                                   ; preds = %2377
  %2451 = load i32, i32* %33, align 4
  %2452 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2453 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2452, i32 0, i32 4
  %2454 = bitcast %union.varray_data_tag* %2453 to [1 x %struct.reg_info_def*]*
  %2455 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %2456 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2455, i32 0, i32 1
  %2457 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2456, i64 0, i64 0
  %2458 = bitcast %union.rtunion_def* %2457 to i32*
  %2459 = load i32, i32* %2458, align 8
  %2460 = zext i32 %2459 to i64
  %2461 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2454, i64 0, i64 %2460
  %2462 = load %struct.reg_info_def*, %struct.reg_info_def** %2461, align 8
  %2463 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2462, i32 0, i32 7
  %2464 = load i32, i32* %2463, align 4
  %2465 = sub nsw i32 %2464, %2451
  store i32 %2465, i32* %2463, align 4
  %2466 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2467 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2466, i32 0, i32 4
  %2468 = bitcast %union.varray_data_tag* %2467 to [1 x %struct.reg_info_def*]*
  %2469 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %2470 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2469, i32 0, i32 1
  %2471 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2470, i64 0, i64 0
  %2472 = bitcast %union.rtunion_def* %2471 to i32*
  %2473 = load i32, i32* %2472, align 8
  %2474 = zext i32 %2473 to i64
  %2475 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2468, i64 0, i64 %2474
  %2476 = load %struct.reg_info_def*, %struct.reg_info_def** %2475, align 8
  %2477 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2476, i32 0, i32 7
  %2478 = load i32, i32* %2477, align 4
  %2479 = icmp slt i32 %2478, 2
  br i1 %2479, label %2480, label %2493

; <label>:2480:                                   ; preds = %2450
  %2481 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2482 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2481, i32 0, i32 4
  %2483 = bitcast %union.varray_data_tag* %2482 to [1 x %struct.reg_info_def*]*
  %2484 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %2485 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2484, i32 0, i32 1
  %2486 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2485, i64 0, i64 0
  %2487 = bitcast %union.rtunion_def* %2486 to i32*
  %2488 = load i32, i32* %2487, align 8
  %2489 = zext i32 %2488 to i64
  %2490 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2483, i64 0, i64 %2489
  %2491 = load %struct.reg_info_def*, %struct.reg_info_def** %2490, align 8
  %2492 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2491, i32 0, i32 7
  store i32 2, i32* %2492, align 4
  br label %2493

; <label>:2493:                                   ; preds = %2480, %2450
  br label %2494

; <label>:2494:                                   ; preds = %2493, %2377
  %2495 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %2496 = icmp ne %struct._IO_FILE* %2495, null
  br i1 %2496, label %2497, label %2523

; <label>:2497:                                   ; preds = %2494
  %2498 = load i32, i32* @x.17
  %2499 = load i32, i32* @y.18
  %2500 = sub i32 %2498, 1
  %2501 = mul i32 %2498, %2500
  %2502 = urem i32 %2501, 2
  %2503 = icmp eq i32 %2502, 0
  %2504 = icmp slt i32 %2499, 10
  %2505 = or i1 %2503, %2504
  br i1 %2505, label %originalBB383, label %originalBB383alteredBB

originalBB383:                                    ; preds = %originalBB383alteredBB, %2497
  %2506 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %2507 = load i32, i32* %17, align 4
  %2508 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %2509 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2508, i32 0, i32 1
  %2510 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2509, i64 0, i64 0
  %2511 = bitcast %union.rtunion_def* %2510 to i32*
  %2512 = load i32, i32* %2511, align 8
  %2513 = load i32, i32* %18, align 4
  %2514 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2506, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i32 0, i32 0), i32 %2507, i32 %2512, i32 %2513)
  %2515 = load i32, i32* @x.17
  %2516 = load i32, i32* @y.18
  %2517 = sub i32 %2515, 1
  %2518 = mul i32 %2515, %2517
  %2519 = urem i32 %2518, 2
  %2520 = icmp eq i32 %2519, 0
  %2521 = icmp slt i32 %2516, 10
  %2522 = or i1 %2520, %2521
  br i1 %2522, label %originalBBpart2385, label %originalBB383alteredBB

originalBBpart2385:                               ; preds = %originalBB383
  br label %2523

; <label>:2523:                                   ; preds = %originalBBpart2385, %2494
  store i32 1, i32* %10, align 4
  br label %2524

; <label>:2524:                                   ; preds = %2523, %1252, %168, %129, %55
  %2525 = load i32, i32* %10, align 4
  ret i32 %2525

originalBBalteredBB:                              ; preds = %originalBB, %132
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %196
  %2526 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2527 = call i32 @perhaps_ends_bb_p(%struct.rtx_def* %2526)
  %2528 = icmp ne i32 %2527, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %217
  %2529 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2530 = bitcast %struct.rtx_def* %2529 to i32*
  %2531 = load i32, i32* %2530, align 8
  %_ = shl i32 %2531, 65535
  %_7 = sub i32 %2531, 65535
  %gen = mul i32 %_7, 65535
  %_8 = shl i32 %2531, 65535
  %_9 = sub i32 0, %2531
  %gen10 = add i32 %_9, 65535
  %2532 = and i32 %2531, 65535
  %2533 = sext i32 %2532 to i64
  %2534 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %2533
  %2535 = load i8, i8* %2534, align 1
  %2536 = sext i8 %2535 to i32
  %2537 = icmp eq i32 %2536, 105
  br label %originalBB6

originalBB14alteredBB:                            ; preds = %originalBB14, %253
  %2538 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2539 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2540 = call i32 @reg_set_p(%struct.rtx_def* %2538, %struct.rtx_def* %2539)
  %2541 = icmp ne i32 %2540, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %303
  %2542 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2543 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %2544 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2543, i32 0, i32 1
  %2545 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2544, i64 0, i64 0
  %2546 = bitcast %union.rtunion_def* %2545 to i32*
  %2547 = load i32, i32* %2546, align 8
  %2548 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %2542, i32 1, i32 %2547)
  store %struct.rtx_def* %2548, %struct.rtx_def** %32, align 8
  %2549 = icmp ne %struct.rtx_def* %2548, null
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %358
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %387
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %413
  store %struct.rtx_def* null, %struct.rtx_def** %35, align 8
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %455
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %474
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %510
  %2550 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %2551 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2550, i32 0, i32 1
  %2552 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2551, i64 0, i64 3
  %2553 = bitcast %union.rtunion_def* %2552 to %struct.rtx_def**
  %2554 = load %struct.rtx_def*, %struct.rtx_def** %2553, align 8
  %2555 = bitcast %struct.rtx_def* %2554 to i32*
  %2556 = load i32, i32* %2555, align 8
  %_43 = shl i32 %2556, 65535
  %_44 = sub i32 0, %2556
  %gen45 = add i32 %_44, 65535
  %_46 = shl i32 %2556, 65535
  %_47 = sub i32 %2556, 65535
  %gen48 = mul i32 %_47, 65535
  %_49 = shl i32 %2556, 65535
  %_50 = sub i32 0, %2556
  %gen51 = add i32 %_50, 65535
  %_52 = sub i32 0, %2556
  %gen53 = add i32 %_52, 65535
  %2557 = and i32 %2556, 65535
  %2558 = icmp eq i32 %2557, 47
  br label %originalBB42

originalBB57alteredBB:                            ; preds = %originalBB57, %536
  %2559 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %2560 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2559, i32 0, i32 1
  %2561 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2560, i64 0, i64 3
  %2562 = bitcast %union.rtunion_def* %2561 to %struct.rtx_def**
  %2563 = load %struct.rtx_def*, %struct.rtx_def** %2562, align 8
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %558
  %2564 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %2565 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %2566 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2565, i32 0, i32 1
  %2567 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2566, i64 0, i64 3
  %2568 = bitcast %union.rtunion_def* %2567 to %struct.rtx_def**
  %2569 = load %struct.rtx_def*, %struct.rtx_def** %2568, align 8
  %2570 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %2564, %struct.rtx_def* %2569)
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %584
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %603
  %2571 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %2572 = icmp ne %struct.rtx_def* %2571, null
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %622
  %2573 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  %2574 = icmp ne %struct.rtx_def* %2573, null
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %664
  %2575 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  %2576 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2575, i32 0, i32 1
  %2577 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2576, i64 0, i64 1
  %2578 = bitcast %union.rtunion_def* %2577 to %struct.rtx_def**
  %2579 = load %struct.rtx_def*, %struct.rtx_def** %2578, align 8
  %2580 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2579, i32 0, i32 1
  %2581 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2580, i64 0, i64 1
  %2582 = bitcast %union.rtunion_def* %2581 to %struct.rtx_def**
  %2583 = load %struct.rtx_def*, %struct.rtx_def** %2582, align 8
  %2584 = bitcast %struct.rtx_def* %2583 to i32*
  %2585 = load i32, i32* %2584, align 8
  %_78 = sub i32 0, %2585
  %gen79 = add i32 %_78, 65535
  %2586 = and i32 %2585, 65535
  %2587 = icmp ne i32 %2586, 54
  br label %originalBB77

originalBB83alteredBB:                            ; preds = %originalBB83, %694
  %2588 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  %2589 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2588, i32 0, i32 1
  %2590 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2589, i64 0, i64 0
  %2591 = bitcast %union.rtunion_def* %2590 to %struct.rtx_def**
  %2592 = load %struct.rtx_def*, %struct.rtx_def** %2591, align 8
  %2593 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2594 = icmp ne %struct.rtx_def* %2592, %2593
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %732
  %2595 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2596 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2595, i32 0, i32 4
  %2597 = bitcast %union.varray_data_tag* %2596 to [1 x %struct.reg_info_def*]*
  %2598 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %2599 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2598, i32 0, i32 1
  %2600 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2599, i64 0, i64 0
  %2601 = bitcast %union.rtunion_def* %2600 to i32*
  %2602 = load i32, i32* %2601, align 8
  %2603 = zext i32 %2602 to i64
  %2604 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2597, i64 0, i64 %2603
  %2605 = load %struct.reg_info_def*, %struct.reg_info_def** %2604, align 8
  %2606 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2605, i32 0, i32 8
  %2607 = load i32, i32* %2606, align 4
  %2608 = icmp ne i32 %2607, 0
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %763
  %2609 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2610 = bitcast %struct.rtx_def* %2609 to i32*
  %2611 = load i32, i32* %2610, align 8
  %_92 = shl i32 %2611, 65535
  %_93 = shl i32 %2611, 65535
  %_94 = shl i32 %2611, 65535
  %_95 = sub i32 0, %2611
  %gen96 = add i32 %_95, 65535
  %_97 = shl i32 %2611, 65535
  %2612 = and i32 %2611, 65535
  %2613 = sext i32 %2612 to i64
  %2614 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %2613
  %2615 = load i8, i8* %2614, align 1
  %2616 = sext i8 %2615 to i32
  %2617 = icmp eq i32 %2616, 105
  br label %originalBB91

originalBB101alteredBB:                           ; preds = %originalBB101, %799
  %2618 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2619 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2618, i32 0, i32 1
  %2620 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2619, i64 0, i64 3
  %2621 = bitcast %union.rtunion_def* %2620 to %struct.rtx_def**
  %2622 = load %struct.rtx_def*, %struct.rtx_def** %2621, align 8
  %2623 = icmp ne %struct.rtx_def* %2622, null
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %858
  %2624 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2625 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2626 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2625, i32 0, i32 1
  %2627 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2626, i64 0, i64 3
  %2628 = bitcast %union.rtunion_def* %2627 to %struct.rtx_def**
  %2629 = load %struct.rtx_def*, %struct.rtx_def** %2628, align 8
  %2630 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %2624, %struct.rtx_def* %2629)
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %882
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %947
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %988
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %1005
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %1104
  %2631 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %2632 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2633 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2632, i32 0, i32 1
  %2634 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2633, i64 0, i64 3
  %2635 = bitcast %union.rtunion_def* %2634 to %struct.rtx_def**
  %2636 = load %struct.rtx_def*, %struct.rtx_def** %2635, align 8
  %2637 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %2631, %struct.rtx_def* %2636)
  %2638 = icmp ne i32 %2637, 0
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %1129
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %1158
  %2639 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  store %struct.rtx_def* %2639, %struct.rtx_def** %30, align 8
  %2640 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2641 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2642 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %2640, i32 1, %struct.rtx_def* %2641)
  store %struct.rtx_def* %2642, %struct.rtx_def** %31, align 8
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %1210
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %1233
  %2643 = load i32, i32* %24, align 4
  %2644 = icmp ne i32 %2643, 0
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %1253
  %2645 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2646 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  call void @remove_note(%struct.rtx_def* %2645, %struct.rtx_def* %2646)
  %2647 = load i32, i32* %27, align 4
  %2648 = icmp eq i32 %2647, 76
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %1274
  %2649 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %2650 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2649, i32 0, i32 1
  %2651 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2650, i64 0, i64 3
  %2652 = bitcast %union.rtunion_def* %2651 to %struct.rtx_def**
  %2653 = load %struct.rtx_def*, %struct.rtx_def** %2652, align 8
  %2654 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %2653)
  %2655 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2656 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %2654, %struct.rtx_def* %2655)
  store %struct.rtx_def* %2656, %struct.rtx_def** %21, align 8
  %2657 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %2658 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %2659 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2658, i32 0, i32 1
  %2660 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2659, i64 0, i64 1
  %2661 = bitcast %union.rtunion_def* %2660 to %struct.rtx_def**
  %2662 = load %struct.rtx_def*, %struct.rtx_def** %2661, align 8
  %2663 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2662, i32 0, i32 1
  %2664 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2663, i64 0, i64 1
  %2665 = bitcast %union.rtunion_def* %2664 to %struct.rtx_def**
  %2666 = load i64, i64* %28, align 8
  %2667 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %2666)
  %2668 = call i32 @validate_change(%struct.rtx_def* %2657, %struct.rtx_def** %2665, %struct.rtx_def* %2667, i32 0)
  %2669 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2670 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2669, i32 0, i32 4
  %2671 = bitcast %union.varray_data_tag* %2670 to [1 x %struct.reg_info_def*]*
  %2672 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2673 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2672, i32 0, i32 1
  %2674 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2673, i64 0, i64 0
  %2675 = bitcast %union.rtunion_def* %2674 to i32*
  %2676 = load i32, i32* %2675, align 8
  %2677 = zext i32 %2676 to i64
  %2678 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2671, i64 0, i64 %2677
  %2679 = load %struct.reg_info_def*, %struct.reg_info_def** %2678, align 8
  %2680 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2679, i32 0, i32 3
  %2681 = load i32, i32* %2680, align 4
  %_150 = sub i32 %2681, 1
  %gen151 = mul i32 %_150, 1
  %_152 = shl i32 %2681, 1
  %_153 = sub i32 0, %2681
  %gen154 = add i32 %_153, 1
  %_155 = shl i32 %2681, 1
  %2682 = add nsw i32 %2681, 1
  store i32 %2682, i32* %2680, align 4
  %2683 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2684 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2683, i32 0, i32 4
  %2685 = bitcast %union.varray_data_tag* %2684 to [1 x %struct.reg_info_def*]*
  %2686 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2687 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2686, i32 0, i32 1
  %2688 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2687, i64 0, i64 0
  %2689 = bitcast %union.rtunion_def* %2688 to i32*
  %2690 = load i32, i32* %2689, align 8
  %2691 = zext i32 %2690 to i64
  %2692 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2685, i64 0, i64 %2691
  %2693 = load %struct.reg_info_def*, %struct.reg_info_def** %2692, align 8
  %2694 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2693, i32 0, i32 7
  %2695 = load i32, i32* %2694, align 4
  %_156 = sub i32 0, %2695
  %gen157 = add i32 %_156, 1
  %_158 = shl i32 %2695, 1
  %_159 = sub i32 %2695, 1
  %gen160 = mul i32 %_159, 1
  %_161 = sub i32 %2695, 1
  %gen162 = mul i32 %_161, 1
  %_163 = shl i32 %2695, 1
  %_164 = sub i32 %2695, 1
  %gen165 = mul i32 %_164, 1
  %2696 = add nsw i32 %2695, 1
  store i32 %2696, i32* %2694, align 4
  br label %originalBB149

originalBB169alteredBB:                           ; preds = %originalBB169, %1339
  %2697 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %2698 = icmp ne %struct.rtx_def* %2697, null
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %1369
  %2699 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %2700 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2699, i32 0, i32 1
  %2701 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2700, i64 0, i64 6
  %2702 = bitcast %union.rtunion_def* %2701 to %struct.rtx_def**
  %2703 = load %struct.rtx_def*, %struct.rtx_def** %2702, align 8
  store %struct.rtx_def* %2703, %struct.rtx_def** %38, align 8
  %2704 = load %struct.rtx_def*, %struct.rtx_def** %37, align 8
  %2705 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2706 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2705, i32 0, i32 1
  %2707 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2706, i64 0, i64 1
  %2708 = bitcast %union.rtunion_def* %2707 to %struct.rtx_def**
  %2709 = load %struct.rtx_def*, %struct.rtx_def** %2708, align 8
  %2710 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  call void @emit_insn_after_with_line_notes(%struct.rtx_def* %2704, %struct.rtx_def* %2709, %struct.rtx_def* %2710)
  %2711 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %2712 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %2711)
  %2713 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  store %struct.rtx_def* %2713, %struct.rtx_def** %11, align 8
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %1419
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %1437
  %2714 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %2715 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2714, i32 0, i32 1
  %2716 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2715, i64 0, i64 1
  %2717 = bitcast %union.rtunion_def* %2716 to %struct.rtx_def**
  %2718 = load %struct.rtx_def*, %struct.rtx_def** %2717, align 8
  store %struct.rtx_def* %2718, %struct.rtx_def** %11, align 8
  br label %originalBB181

originalBB185alteredBB:                           ; preds = %originalBB185, %1471
  %2719 = load i32, i32* %27, align 4
  %2720 = icmp eq i32 %2719, 76
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %1515
  %2721 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %2722 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2721, i32 0, i32 1
  %2723 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2722, i64 0, i64 0
  %2724 = bitcast %union.rtunion_def* %2723 to %struct.rtx_def**
  %2725 = load %struct.rtx_def*, %struct.rtx_def** %2724, align 8
  %2726 = bitcast %struct.rtx_def* %2725 to i32*
  %2727 = load i32, i32* %2726, align 8
  %_190 = shl i32 %2727, 65535
  %_191 = sub i32 %2727, 65535
  %gen192 = mul i32 %_191, 65535
  %_193 = shl i32 %2727, 65535
  %2728 = and i32 %2727, 65535
  %2729 = icmp eq i32 %2728, 54
  br label %originalBB189

originalBB197alteredBB:                           ; preds = %originalBB197, %1561
  %2730 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %2731 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2730, i32 0, i32 1
  %2732 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2731, i64 0, i64 0
  %2733 = bitcast %union.rtunion_def* %2732 to %struct.rtx_def**
  %2734 = load %struct.rtx_def*, %struct.rtx_def** %2733, align 8
  %2735 = bitcast %struct.rtx_def* %2734 to i32*
  %2736 = load i32, i32* %2735, align 8
  %_198 = sub i32 %2736, 65535
  %gen199 = mul i32 %_198, 65535
  %_200 = sub i32 0, %2736
  %gen201 = add i32 %_200, 65535
  %_202 = shl i32 %2736, 65535
  %_203 = sub i32 0, %2736
  %gen204 = add i32 %_203, 65535
  %2737 = and i32 %2736, 65535
  %2738 = icmp eq i32 %2737, 134
  br label %originalBB197

originalBB208alteredBB:                           ; preds = %originalBB208, %1587
  %2739 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %2740 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2739, i32 0, i32 1
  %2741 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2740, i64 0, i64 0
  %2742 = bitcast %union.rtunion_def* %2741 to %struct.rtx_def**
  %2743 = load %struct.rtx_def*, %struct.rtx_def** %2742, align 8
  %2744 = bitcast %struct.rtx_def* %2743 to i32*
  %2745 = load i32, i32* %2744, align 8
  %_209 = sub i32 %2745, 65535
  %gen210 = mul i32 %_209, 65535
  %2746 = and i32 %2745, 65535
  %2747 = icmp eq i32 %2746, 56
  br label %originalBB208

originalBB214alteredBB:                           ; preds = %originalBB214, %1613
  %2748 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %2749 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2748, i32 0, i32 1
  %2750 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2749, i64 0, i64 0
  %2751 = bitcast %union.rtunion_def* %2750 to %struct.rtx_def**
  %2752 = load %struct.rtx_def*, %struct.rtx_def** %2751, align 8
  %2753 = bitcast %struct.rtx_def* %2752 to i32*
  %2754 = load i32, i32* %2753, align 8
  %2755 = and i32 %2754, 65535
  %2756 = icmp eq i32 %2755, 140
  br label %originalBB214

originalBB218alteredBB:                           ; preds = %originalBB218, %1645
  %2757 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %2758 = icmp ne %struct.rtx_def* %2757, null
  br label %originalBB218

originalBB222alteredBB:                           ; preds = %originalBB222, %1681
  %2759 = load i32, i32* %43, align 4
  %_223 = shl i32 %2759, 1
  %_224 = sub i32 0, %2759
  %gen225 = add i32 %_224, 1
  %2760 = add nsw i32 %2759, 1
  store i32 %2760, i32* %43, align 4
  %2761 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2762 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %2763 = call i32 @reg_set_p(%struct.rtx_def* %2761, %struct.rtx_def* %2762)
  %2764 = icmp ne i32 %2763, 0
  br label %originalBB222

originalBB229alteredBB:                           ; preds = %originalBB229, %1714
  %2765 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %2766 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2765, i32 0, i32 1
  %2767 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2766, i64 0, i64 3
  %2768 = bitcast %union.rtunion_def* %2767 to %struct.rtx_def**
  %2769 = load %struct.rtx_def*, %struct.rtx_def** %2768, align 8
  %2770 = bitcast %struct.rtx_def* %2769 to i32*
  %2771 = load i32, i32* %2770, align 8
  %_230 = sub i32 %2771, 65535
  %gen231 = mul i32 %_230, 65535
  %_232 = sub i32 %2771, 65535
  %gen233 = mul i32 %_232, 65535
  %_234 = sub i32 %2771, 65535
  %gen235 = mul i32 %_234, 65535
  %_236 = shl i32 %2771, 65535
  %_237 = sub i32 %2771, 65535
  %gen238 = mul i32 %_237, 65535
  %_239 = sub i32 0, %2771
  %gen240 = add i32 %_239, 65535
  %_241 = sub i32 %2771, 65535
  %gen242 = mul i32 %_241, 65535
  %2772 = and i32 %2771, 65535
  %2773 = icmp eq i32 %2772, 47
  br label %originalBB229

originalBB246alteredBB:                           ; preds = %originalBB246, %1740
  %2774 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %2775 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2774, i32 0, i32 1
  %2776 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2775, i64 0, i64 3
  %2777 = bitcast %union.rtunion_def* %2776 to %struct.rtx_def**
  %2778 = load %struct.rtx_def*, %struct.rtx_def** %2777, align 8
  br label %originalBB246

originalBB250alteredBB:                           ; preds = %originalBB250, %1770
  br label %originalBB250

originalBB254alteredBB:                           ; preds = %originalBB254, %1861
  %2779 = load %struct.rtx_def*, %struct.rtx_def** %41, align 8
  %2780 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2779, i32 0, i32 1
  %2781 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2780, i64 0, i64 1
  %2782 = bitcast %union.rtunion_def* %2781 to %struct.rtx_def**
  %2783 = load %struct.rtx_def*, %struct.rtx_def** %2782, align 8
  %2784 = bitcast %struct.rtx_def* %2783 to i32*
  %2785 = load i32, i32* %2784, align 8
  %_255 = shl i32 %2785, 65535
  %_256 = shl i32 %2785, 65535
  %_257 = shl i32 %2785, 65535
  %_258 = sub i32 %2785, 65535
  %gen259 = mul i32 %_258, 65535
  %_260 = sub i32 %2785, 65535
  %gen261 = mul i32 %_260, 65535
  %_262 = sub i32 0, %2785
  %gen263 = add i32 %_262, 65535
  %2786 = and i32 %2785, 65535
  %2787 = icmp eq i32 %2786, 55
  br label %originalBB254

originalBB268alteredBB:                           ; preds = %originalBB268, %1887
  %2788 = load %struct.rtx_def*, %struct.rtx_def** %41, align 8
  %2789 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2788, i32 0, i32 1
  %2790 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2789, i64 0, i64 1
  %2791 = bitcast %union.rtunion_def* %2790 to %struct.rtx_def**
  %2792 = load %struct.rtx_def*, %struct.rtx_def** %2791, align 8
  %2793 = bitcast %struct.rtx_def* %2792 to i32*
  %2794 = load i32, i32* %2793, align 8
  %_269 = sub i32 %2794, 65535
  %gen270 = mul i32 %_269, 65535
  %_271 = shl i32 %2794, 65535
  %_272 = shl i32 %2794, 65535
  %2795 = and i32 %2794, 65535
  %2796 = icmp eq i32 %2795, 58
  br label %originalBB268

originalBB276alteredBB:                           ; preds = %originalBB276, %1913
  %2797 = load %struct.rtx_def*, %struct.rtx_def** %41, align 8
  %2798 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2797, i32 0, i32 1
  %2799 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2798, i64 0, i64 1
  %2800 = bitcast %union.rtunion_def* %2799 to %struct.rtx_def**
  %2801 = load %struct.rtx_def*, %struct.rtx_def** %2800, align 8
  %2802 = bitcast %struct.rtx_def* %2801 to i32*
  %2803 = load i32, i32* %2802, align 8
  %_277 = sub i32 %2803, 65535
  %gen278 = mul i32 %_277, 65535
  %_279 = sub i32 0, %2803
  %gen280 = add i32 %_279, 65535
  %_281 = sub i32 0, %2803
  %gen282 = add i32 %_281, 65535
  %_283 = shl i32 %2803, 65535
  %_284 = shl i32 %2803, 65535
  %_285 = sub i32 %2803, 65535
  %gen286 = mul i32 %_285, 65535
  %2804 = and i32 %2803, 65535
  %2805 = icmp eq i32 %2804, 134
  br label %originalBB276

originalBB290alteredBB:                           ; preds = %originalBB290, %1959
  %2806 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %2807 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %2808 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2807, i32 0, i32 1
  %2809 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2808, i64 0, i64 1
  %2810 = bitcast %union.rtunion_def* %2809 to %struct.rtx_def**
  %2811 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %2812 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2811, i32 0, i32 1
  %2813 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2812, i64 0, i64 0
  %2814 = bitcast %union.rtunion_def* %2813 to %struct.rtx_def**
  %2815 = load %struct.rtx_def*, %struct.rtx_def** %2814, align 8
  %2816 = call i32 @validate_change(%struct.rtx_def* %2806, %struct.rtx_def** %2810, %struct.rtx_def* %2815, i32 0)
  %2817 = icmp ne i32 %2816, 0
  br label %originalBB290

originalBB294alteredBB:                           ; preds = %originalBB294, %1988
  %2818 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %2819 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %2818)
  %2820 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2821 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2820, i32 0, i32 4
  %2822 = bitcast %union.varray_data_tag* %2821 to [1 x %struct.reg_info_def*]*
  %2823 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2824 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2823, i32 0, i32 1
  %2825 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2824, i64 0, i64 0
  %2826 = bitcast %union.rtunion_def* %2825 to i32*
  %2827 = load i32, i32* %2826, align 8
  %2828 = zext i32 %2827 to i64
  %2829 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2822, i64 0, i64 %2828
  %2830 = load %struct.reg_info_def*, %struct.reg_info_def** %2829, align 8
  %2831 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2830, i32 0, i32 3
  %2832 = load i32, i32* %2831, align 4
  %_295 = sub i32 %2832, -1
  %gen296 = mul i32 %_295, -1
  %_297 = sub i32 %2832, -1
  %gen298 = mul i32 %_297, -1
  %2833 = add nsw i32 %2832, -1
  store i32 %2833, i32* %2831, align 4
  %2834 = load i32, i32* %42, align 4
  %2835 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2836 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2835, i32 0, i32 4
  %2837 = bitcast %union.varray_data_tag* %2836 to [1 x %struct.reg_info_def*]*
  %2838 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2839 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2838, i32 0, i32 1
  %2840 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2839, i64 0, i64 0
  %2841 = bitcast %union.rtunion_def* %2840 to i32*
  %2842 = load i32, i32* %2841, align 8
  %2843 = zext i32 %2842 to i64
  %2844 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2837, i64 0, i64 %2843
  %2845 = load %struct.reg_info_def*, %struct.reg_info_def** %2844, align 8
  %2846 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2845, i32 0, i32 8
  %2847 = load i32, i32* %2846, align 4
  %_299 = sub i32 %2847, %2834
  %gen300 = mul i32 %_299, %2834
  %_301 = sub i32 %2847, %2834
  %gen302 = mul i32 %_301, %2834
  %_303 = sub i32 0, %2847
  %gen304 = add i32 %_303, %2834
  %_305 = sub i32 %2847, %2834
  %gen306 = mul i32 %_305, %2834
  %_307 = sub i32 %2847, %2834
  %gen308 = mul i32 %_307, %2834
  %2848 = sub nsw i32 %2847, %2834
  store i32 %2848, i32* %2846, align 4
  %2849 = load i32, i32* %43, align 4
  %2850 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2851 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2850, i32 0, i32 4
  %2852 = bitcast %union.varray_data_tag* %2851 to [1 x %struct.reg_info_def*]*
  %2853 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2854 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2853, i32 0, i32 1
  %2855 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2854, i64 0, i64 0
  %2856 = bitcast %union.rtunion_def* %2855 to i32*
  %2857 = load i32, i32* %2856, align 8
  %2858 = zext i32 %2857 to i64
  %2859 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2852, i64 0, i64 %2858
  %2860 = load %struct.reg_info_def*, %struct.reg_info_def** %2859, align 8
  %2861 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2860, i32 0, i32 7
  %2862 = load i32, i32* %2861, align 4
  %_309 = sub i32 0, %2862
  %gen310 = add i32 %_309, %2849
  %_311 = shl i32 %2862, %2849
  %_312 = shl i32 %2862, %2849
  %_313 = shl i32 %2862, %2849
  %_314 = sub i32 0, %2862
  %gen315 = add i32 %_314, %2849
  %_316 = shl i32 %2862, %2849
  %_317 = sub i32 %2862, %2849
  %gen318 = mul i32 %_317, %2849
  %_319 = sub i32 %2862, %2849
  %gen320 = mul i32 %_319, %2849
  %2863 = sub nsw i32 %2862, %2849
  store i32 %2863, i32* %2861, align 4
  store i64 0, i64* %28, align 8
  br label %originalBB294

originalBB324alteredBB:                           ; preds = %originalBB324, %2063
  %2864 = load i64, i64* %29, align 8
  %2865 = icmp sge i64 %2864, -16
  br label %originalBB324

originalBB328alteredBB:                           ; preds = %originalBB328, %2107
  %2866 = load %struct.rtx_def*, %struct.rtx_def** %44, align 8
  %2867 = call i32 @perhaps_ends_bb_p(%struct.rtx_def* %2866)
  %2868 = icmp ne i32 %2867, 0
  br label %originalBB328

originalBB332alteredBB:                           ; preds = %originalBB332, %2127
  br label %originalBB332

originalBB336alteredBB:                           ; preds = %originalBB336, %2144
  %2869 = load %struct.rtx_def*, %struct.rtx_def** %44, align 8
  %2870 = bitcast %struct.rtx_def* %2869 to i32*
  %2871 = load i32, i32* %2870, align 8
  %_337 = sub i32 0, %2871
  %gen338 = add i32 %_337, 65535
  %_339 = sub i32 %2871, 65535
  %gen340 = mul i32 %_339, 65535
  %_341 = sub i32 %2871, 65535
  %gen342 = mul i32 %_341, 65535
  %_343 = sub i32 0, %2871
  %gen344 = add i32 %_343, 65535
  %_345 = sub i32 0, %2871
  %gen346 = add i32 %_345, 65535
  %2872 = and i32 %2871, 65535
  %2873 = sext i32 %2872 to i64
  %2874 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %2873
  %2875 = load i8, i8* %2874, align 1
  %2876 = sext i8 %2875 to i32
  %2877 = icmp eq i32 %2876, 105
  br label %originalBB336

originalBB350alteredBB:                           ; preds = %originalBB350, %2170
  br label %originalBB350

originalBB354alteredBB:                           ; preds = %originalBB354, %2200
  %2878 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2879 = load %struct.rtx_def*, %struct.rtx_def** %44, align 8
  %2880 = call i32 @reg_set_p(%struct.rtx_def* %2878, %struct.rtx_def* %2879)
  %2881 = icmp ne i32 %2880, 0
  br label %originalBB354

originalBB358alteredBB:                           ; preds = %originalBB358, %2222
  %2882 = load %struct.rtx_def*, %struct.rtx_def** %45, align 8
  %2883 = load %struct.rtx_def*, %struct.rtx_def** %44, align 8
  %2884 = call i32 @reg_set_p(%struct.rtx_def* %2882, %struct.rtx_def* %2883)
  %2885 = icmp ne i32 %2884, 0
  br label %originalBB358

originalBB362alteredBB:                           ; preds = %originalBB362, %2244
  %2886 = load %struct.rtx_def*, %struct.rtx_def** %45, align 8
  %2887 = load %struct.rtx_def*, %struct.rtx_def** %44, align 8
  %2888 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2887, i32 0, i32 1
  %2889 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2888, i64 0, i64 3
  %2890 = bitcast %union.rtunion_def* %2889 to %struct.rtx_def**
  %2891 = load %struct.rtx_def*, %struct.rtx_def** %2890, align 8
  %2892 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %2886, %struct.rtx_def* %2891)
  %2893 = icmp ne i32 %2892, 0
  br label %originalBB362

originalBB366alteredBB:                           ; preds = %originalBB366, %2281
  br label %originalBB366

originalBB370alteredBB:                           ; preds = %originalBB370, %2331
  %2894 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2895 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2894, i32 0, i32 1
  %2896 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2895, i64 0, i64 6
  %2897 = bitcast %union.rtunion_def* %2896 to %struct.rtx_def**
  %2898 = load %struct.rtx_def*, %struct.rtx_def** %2897, align 8
  %2899 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %2900 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2899, i32 0, i32 1
  %2901 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2900, i64 0, i64 1
  %2902 = bitcast %union.rtunion_def* %2901 to %struct.rtx_def**
  store %struct.rtx_def* %2898, %struct.rtx_def** %2902, align 8
  %2903 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %2904 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %2905 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2904, i32 0, i32 1
  %2906 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2905, i64 0, i64 6
  %2907 = bitcast %union.rtunion_def* %2906 to %struct.rtx_def**
  store %struct.rtx_def* %2903, %struct.rtx_def** %2907, align 8
  %2908 = load i32, i32* %26, align 4
  %2909 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %2910 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %2909, i32 0, i32 4
  %2911 = bitcast %union.varray_data_tag* %2910 to [1 x %struct.reg_info_def*]*
  %2912 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %2913 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2912, i32 0, i32 1
  %2914 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2913, i64 0, i64 0
  %2915 = bitcast %union.rtunion_def* %2914 to i32*
  %2916 = load i32, i32* %2915, align 8
  %2917 = zext i32 %2916 to i64
  %2918 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %2911, i64 0, i64 %2917
  %2919 = load %struct.reg_info_def*, %struct.reg_info_def** %2918, align 8
  %2920 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %2919, i32 0, i32 8
  %2921 = load i32, i32* %2920, align 4
  %_371 = shl i32 %2921, %2908
  %_372 = sub i32 %2921, %2908
  %gen373 = mul i32 %_372, %2908
  %_374 = sub i32 %2921, %2908
  %gen375 = mul i32 %_374, %2908
  %_376 = sub i32 0, %2921
  %gen377 = add i32 %_376, %2908
  %_378 = sub i32 0, %2921
  %gen379 = add i32 %_378, %2908
  %2922 = add nsw i32 %2921, %2908
  store i32 %2922, i32* %2920, align 4
  br label %originalBB370

originalBB383alteredBB:                           ; preds = %originalBB383, %2497
  %2923 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %2924 = load i32, i32* %17, align 4
  %2925 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %2926 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2925, i32 0, i32 1
  %2927 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %2926, i64 0, i64 0
  %2928 = bitcast %union.rtunion_def* %2927 to i32*
  %2929 = load i32, i32* %2928, align 8
  %2930 = load i32, i32* %18, align 4
  %2931 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2923, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i32 0, i32 0), i32 %2924, i32 %2929, i32 %2930)
  br label %originalBB383
}

declare i32 @reg_set_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @fixup_match_2(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct._IO_FILE*) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  %9 = alloca %struct.rtx_def*, align 8
  %10 = alloca %struct.rtx_def*, align 8
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %struct.rtx_def*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.rtx_def*, align 8
  %17 = alloca i64, align 8
  %18 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %7, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %9, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %10, align 8
  store %struct._IO_FILE* %4, %struct._IO_FILE** %11, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %13, align 8
  store i32 0, i32* %15, align 4
  %19 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %20 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %21, i64 0, i64 0
  %23 = bitcast %union.rtunion_def* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %19, i32 1, i32 %24)
  %26 = icmp ne %struct.rtx_def* %25, null
  br i1 %26, label %27, label %28

; <label>:27:                                     ; preds = %5
  store i32 0, i32* %6, align 4
  br label %609

; <label>:28:                                     ; preds = %5
  store i32 0, i32* %14, align 4
  %29 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %30, i64 0, i64 1
  %32 = bitcast %union.rtunion_def* %31 to %struct.rtx_def**
  %33 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  store %struct.rtx_def* %33, %struct.rtx_def** %12, align 8
  br label %34

; <label>:34:                                     ; preds = %586, %28
  %35 = load i32, i32* @x.19
  %36 = load i32, i32* @y.20
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %34
  %43 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %44 = icmp ne %struct.rtx_def* %43, null
  %45 = load i32, i32* @x.19
  %46 = load i32, i32* @y.20
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %44, label %53, label %592

; <label>:53:                                     ; preds = %originalBBpart2
  %54 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %55 = call i32 @perhaps_ends_bb_p(%struct.rtx_def* %54)
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %58

; <label>:57:                                     ; preds = %53
  br label %592

; <label>:58:                                     ; preds = %53
  %59 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 65535
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 %65 to i32
  %67 = icmp eq i32 %66, 105
  br i1 %67, label %85, label %68

; <label>:68:                                     ; preds = %58
  %69 = load i32, i32* @x.19
  %70 = load i32, i32* @y.20
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %68
  %77 = load i32, i32* @x.19
  %78 = load i32, i32* @y.20
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %586

; <label>:85:                                     ; preds = %58
  %86 = load i32, i32* @x.19
  %87 = load i32, i32* @y.20
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %85
  %94 = load i32, i32* @x.19
  %95 = load i32, i32* @y.20
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %102

; <label>:102:                                    ; preds = %originalBBpart28
  %103 = load i32, i32* @x.19
  %104 = load i32, i32* @y.20
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %102
  %111 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %112 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %113, i64 0, i64 0
  %115 = bitcast %union.rtunion_def* %114 to i32*
  %116 = load i32, i32* %115, align 8
  %117 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %111, i32 1, i32 %116)
  %118 = icmp ne %struct.rtx_def* %117, null
  %119 = load i32, i32* @x.19
  %120 = load i32, i32* @y.20
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %118, label %127, label %129

; <label>:127:                                    ; preds = %originalBBpart212
  %128 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  store %struct.rtx_def* %128, %struct.rtx_def** %13, align 8
  br label %129

; <label>:129:                                    ; preds = %127, %originalBBpart212
  %130 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %131 = icmp ne %struct.rtx_def* %130, null
  br i1 %131, label %151, label %132

; <label>:132:                                    ; preds = %129
  %133 = load i32, i32* @x.19
  %134 = load i32, i32* @y.20
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %132
  %141 = load i32, i32* %14, align 4
  %142 = add nsw i32 %141, 1
  store i32 %142, i32* %14, align 4
  %143 = load i32, i32* @x.19
  %144 = load i32, i32* @y.20
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart220, label %originalBB14alteredBB

originalBBpart220:                                ; preds = %originalBB14
  br label %151

; <label>:151:                                    ; preds = %originalBBpart220, %129
  %152 = load i32, i32* @x.19
  %153 = load i32, i32* @y.20
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %151
  %160 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %161 = bitcast %struct.rtx_def* %160 to i32*
  %162 = load i32, i32* %161, align 8
  %163 = and i32 %162, 65535
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  %168 = icmp eq i32 %167, 105
  %169 = load i32, i32* @x.19
  %170 = load i32, i32* @y.20
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart231, label %originalBB22alteredBB

originalBBpart231:                                ; preds = %originalBB22
  br i1 %168, label %177, label %219

; <label>:177:                                    ; preds = %originalBBpart231
  %178 = load i32, i32* @x.19
  %179 = load i32, i32* @y.20
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %177
  %186 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1
  %188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %187, i64 0, i64 3
  %189 = bitcast %union.rtunion_def* %188 to %struct.rtx_def**
  %190 = load %struct.rtx_def*, %struct.rtx_def** %189, align 8
  %191 = bitcast %struct.rtx_def* %190 to i32*
  %192 = load i32, i32* %191, align 8
  %193 = and i32 %192, 65535
  %194 = icmp eq i32 %193, 47
  %195 = load i32, i32* @x.19
  %196 = load i32, i32* @y.20
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart242, label %originalBB33alteredBB

originalBBpart242:                                ; preds = %originalBB33
  br i1 %194, label %203, label %209

; <label>:203:                                    ; preds = %originalBBpart242
  %204 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %205 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1
  %206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %205, i64 0, i64 3
  %207 = bitcast %union.rtunion_def* %206 to %struct.rtx_def**
  %208 = load %struct.rtx_def*, %struct.rtx_def** %207, align 8
  br label %217

; <label>:209:                                    ; preds = %originalBBpart242
  %210 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %211 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1
  %213 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %212, i64 0, i64 3
  %214 = bitcast %union.rtunion_def* %213 to %struct.rtx_def**
  %215 = load %struct.rtx_def*, %struct.rtx_def** %214, align 8
  %216 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %210, %struct.rtx_def* %215)
  br label %217

; <label>:217:                                    ; preds = %209, %203
  %218 = phi %struct.rtx_def* [ %208, %203 ], [ %216, %209 ]
  br label %220

; <label>:219:                                    ; preds = %originalBBpart231
  br label %220

; <label>:220:                                    ; preds = %219, %217
  %221 = phi %struct.rtx_def* [ %218, %217 ], [ null, %219 ]
  store %struct.rtx_def* %221, %struct.rtx_def** %16, align 8
  %222 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %223 = icmp ne %struct.rtx_def* %222, null
  br i1 %223, label %224, label %406

; <label>:224:                                    ; preds = %220
  %225 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %225, i32 0, i32 1
  %227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %226, i64 0, i64 0
  %228 = bitcast %union.rtunion_def* %227 to %struct.rtx_def**
  %229 = load %struct.rtx_def*, %struct.rtx_def** %228, align 8
  %230 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %231 = icmp eq %struct.rtx_def* %229, %230
  br i1 %231, label %232, label %406

; <label>:232:                                    ; preds = %224
  %233 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1
  %235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %234, i64 0, i64 1
  %236 = bitcast %union.rtunion_def* %235 to %struct.rtx_def**
  %237 = load %struct.rtx_def*, %struct.rtx_def** %236, align 8
  %238 = bitcast %struct.rtx_def* %237 to i32*
  %239 = load i32, i32* %238, align 8
  %240 = and i32 %239, 65535
  %241 = icmp eq i32 %240, 75
  br i1 %241, label %242, label %406

; <label>:242:                                    ; preds = %232
  %243 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %244 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %243, i32 0, i32 1
  %245 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %244, i64 0, i64 1
  %246 = bitcast %union.rtunion_def* %245 to %struct.rtx_def**
  %247 = load %struct.rtx_def*, %struct.rtx_def** %246, align 8
  %248 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1
  %249 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %248, i64 0, i64 0
  %250 = bitcast %union.rtunion_def* %249 to %struct.rtx_def**
  %251 = load %struct.rtx_def*, %struct.rtx_def** %250, align 8
  %252 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %253 = icmp eq %struct.rtx_def* %251, %252
  br i1 %253, label %254, label %406

; <label>:254:                                    ; preds = %242
  %255 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %256 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %255, i32 0, i32 1
  %257 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %256, i64 0, i64 1
  %258 = bitcast %union.rtunion_def* %257 to %struct.rtx_def**
  %259 = load %struct.rtx_def*, %struct.rtx_def** %258, align 8
  %260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i32 0, i32 1
  %261 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %260, i64 0, i64 1
  %262 = bitcast %union.rtunion_def* %261 to %struct.rtx_def**
  %263 = load %struct.rtx_def*, %struct.rtx_def** %262, align 8
  %264 = bitcast %struct.rtx_def* %263 to i32*
  %265 = load i32, i32* %264, align 8
  %266 = and i32 %265, 65535
  %267 = icmp eq i32 %266, 54
  br i1 %267, label %268, label %406

; <label>:268:                                    ; preds = %254
  %269 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %269, i32 0, i32 1
  %271 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %270, i64 0, i64 0
  %272 = bitcast %union.rtunion_def* %271 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %274, i32 0, i32 1
  %276 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %275, i64 0, i64 1
  %277 = bitcast %union.rtunion_def* %276 to %struct.rtx_def**
  %278 = load %struct.rtx_def*, %struct.rtx_def** %277, align 8
  %279 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1
  %280 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %279, i64 0, i64 1
  %281 = bitcast %union.rtunion_def* %280 to %struct.rtx_def**
  %282 = load %struct.rtx_def*, %struct.rtx_def** %281, align 8
  %283 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %282, i32 0, i32 1
  %284 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %283, i64 0, i64 0
  %285 = bitcast %union.rtunion_def* %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = sub nsw i64 %273, %286
  store i64 %287, i64* %17, align 8
  %288 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %289 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %290 = load i64, i64* %17, align 8
  %291 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %290)
  %292 = call %struct.rtx_def* @gen_add3_insn(%struct.rtx_def* %288, %struct.rtx_def* %289, %struct.rtx_def* %291)
  store %struct.rtx_def* %292, %struct.rtx_def** %18, align 8
  %293 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %294 = icmp ne %struct.rtx_def* %293, null
  br i1 %294, label %295, label %389

; <label>:295:                                    ; preds = %268
  %296 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %297 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %298 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %297, i32 0, i32 1
  %299 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %298, i64 0, i64 3
  %300 = bitcast %union.rtunion_def* %299 to %struct.rtx_def**
  %301 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %302 = call i32 @validate_change(%struct.rtx_def* %296, %struct.rtx_def** %300, %struct.rtx_def* %301, i32 0)
  %303 = icmp ne i32 %302, 0
  br i1 %303, label %304, label %389

; <label>:304:                                    ; preds = %295
  %305 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %306 = icmp ne %struct.rtx_def* %305, null
  br i1 %306, label %307, label %345

; <label>:307:                                    ; preds = %304
  %308 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %308, i32 0, i32 1
  %310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %309, i64 0, i64 0
  %311 = bitcast %union.rtunion_def* %310 to i32*
  %312 = load i32, i32* %311, align 8
  %313 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %314 = call %struct.rtx_def* @remove_death(i32 %312, %struct.rtx_def* %313)
  %315 = load i32, i32* %14, align 4
  %316 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %317 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %316, i32 0, i32 4
  %318 = bitcast %union.varray_data_tag* %317 to [1 x %struct.reg_info_def*]*
  %319 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %320 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %319, i32 0, i32 1
  %321 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %320, i64 0, i64 0
  %322 = bitcast %union.rtunion_def* %321 to i32*
  %323 = load i32, i32* %322, align 8
  %324 = zext i32 %323 to i64
  %325 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %318, i64 0, i64 %324
  %326 = load %struct.reg_info_def*, %struct.reg_info_def** %325, align 8
  %327 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %326, i32 0, i32 7
  %328 = load i32, i32* %327, align 4
  %329 = add nsw i32 %328, %315
  store i32 %329, i32* %327, align 4
  %330 = load i32, i32* %15, align 4
  %331 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %332 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %331, i32 0, i32 4
  %333 = bitcast %union.varray_data_tag* %332 to [1 x %struct.reg_info_def*]*
  %334 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %335 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %334, i32 0, i32 1
  %336 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %335, i64 0, i64 0
  %337 = bitcast %union.rtunion_def* %336 to i32*
  %338 = load i32, i32* %337, align 8
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %333, i64 0, i64 %339
  %341 = load %struct.reg_info_def*, %struct.reg_info_def** %340, align 8
  %342 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %341, i32 0, i32 8
  %343 = load i32, i32* %342, align 4
  %344 = add nsw i32 %343, %330
  store i32 %344, i32* %342, align 4
  br label %345

; <label>:345:                                    ; preds = %307, %304
  %346 = load i32, i32* @x.19
  %347 = load i32, i32* @y.20
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %originalBB44alteredBB, %345
  %354 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %355 = icmp ne %struct._IO_FILE* %354, null
  %356 = load i32, i32* @x.19
  %357 = load i32, i32* @y.20
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  br i1 %355, label %364, label %372

; <label>:364:                                    ; preds = %originalBBpart246
  %365 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %366 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %367 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %366, i32 0, i32 1
  %368 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %367, i64 0, i64 0
  %369 = bitcast %union.rtunion_def* %368 to i32*
  %370 = load i32, i32* %369, align 8
  %371 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %365, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i32 0, i32 0), i32 %370)
  br label %372

; <label>:372:                                    ; preds = %364, %originalBBpart246
  %373 = load i32, i32* @x.19
  %374 = load i32, i32* @y.20
  %375 = sub i32 %373, 1
  %376 = mul i32 %373, %375
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %378, %379
  br i1 %380, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %originalBB48alteredBB, %372
  store i32 1, i32* %6, align 4
  %381 = load i32, i32* @x.19
  %382 = load i32, i32* @y.20
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br label %609

; <label>:389:                                    ; preds = %295, %268
  %390 = load i32, i32* @x.19
  %391 = load i32, i32* @y.20
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %389
  %398 = load i32, i32* @x.19
  %399 = load i32, i32* @y.20
  %400 = sub i32 %398, 1
  %401 = mul i32 %398, %400
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %403, %404
  br i1 %405, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br label %406

; <label>:406:                                    ; preds = %originalBBpart254, %254, %242, %232, %224, %220
  %407 = load i32, i32* @x.19
  %408 = load i32, i32* @y.20
  %409 = sub i32 %407, 1
  %410 = mul i32 %407, %409
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %412, %413
  br i1 %414, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %406
  %415 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %416 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %417 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %416, i32 0, i32 1
  %418 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %417, i64 0, i64 3
  %419 = bitcast %union.rtunion_def* %418 to %struct.rtx_def**
  %420 = load %struct.rtx_def*, %struct.rtx_def** %419, align 8
  %421 = call i32 @reg_set_p(%struct.rtx_def* %415, %struct.rtx_def* %420)
  %422 = icmp ne i32 %421, 0
  %423 = load i32, i32* @x.19
  %424 = load i32, i32* @y.20
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br i1 %422, label %431, label %432

; <label>:431:                                    ; preds = %originalBBpart258
  br label %592

; <label>:432:                                    ; preds = %originalBBpart258
  %433 = load i32, i32* @x.19
  %434 = load i32, i32* @y.20
  %435 = sub i32 %433, 1
  %436 = mul i32 %433, %435
  %437 = urem i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %438, %439
  br i1 %440, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %originalBB60alteredBB, %432
  %441 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %442 = bitcast %struct.rtx_def* %441 to i32*
  %443 = load i32, i32* %442, align 8
  %444 = and i32 %443, 65535
  %445 = icmp eq i32 %444, 34
  %446 = load i32, i32* @x.19
  %447 = load i32, i32* @y.20
  %448 = sub i32 %446, 1
  %449 = mul i32 %446, %448
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %451, %452
  br i1 %453, label %originalBBpart265, label %originalBB60alteredBB

originalBBpart265:                                ; preds = %originalBB60
  br i1 %445, label %454, label %558

; <label>:454:                                    ; preds = %originalBBpart265
  %455 = load i32, i32* @x.19
  %456 = load i32, i32* @y.20
  %457 = sub i32 %455, 1
  %458 = mul i32 %455, %457
  %459 = urem i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %456, 10
  %462 = or i1 %460, %461
  br i1 %462, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %originalBB67alteredBB, %454
  %463 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %464 = icmp ne %struct.rtx_def* %463, null
  %465 = load i32, i32* @x.19
  %466 = load i32, i32* @y.20
  %467 = sub i32 %465, 1
  %468 = mul i32 %465, %467
  %469 = urem i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = icmp slt i32 %466, 10
  %472 = or i1 %470, %471
  br i1 %472, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br i1 %464, label %492, label %473

; <label>:473:                                    ; preds = %originalBBpart269
  %474 = load i32, i32* @x.19
  %475 = load i32, i32* @y.20
  %476 = sub i32 %474, 1
  %477 = mul i32 %474, %476
  %478 = urem i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = icmp slt i32 %475, 10
  %481 = or i1 %479, %480
  br i1 %481, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %473
  %482 = load i32, i32* %15, align 4
  %483 = add nsw i32 %482, 1
  store i32 %483, i32* %15, align 4
  %484 = load i32, i32* @x.19
  %485 = load i32, i32* @y.20
  %486 = sub i32 %484, 1
  %487 = mul i32 %484, %486
  %488 = urem i32 %487, 2
  %489 = icmp eq i32 %488, 0
  %490 = icmp slt i32 %485, 10
  %491 = or i1 %489, %490
  br i1 %491, label %originalBBpart281, label %originalBB71alteredBB

originalBBpart281:                                ; preds = %originalBB71
  br label %492

; <label>:492:                                    ; preds = %originalBBpart281, %originalBBpart269
  %493 = load i32, i32* @x.19
  %494 = load i32, i32* @y.20
  %495 = sub i32 %493, 1
  %496 = mul i32 %493, %495
  %497 = urem i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %494, 10
  %500 = or i1 %498, %499
  br i1 %500, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %originalBB83alteredBB, %492
  %501 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %502 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %501, i32 0, i32 4
  %503 = bitcast %union.varray_data_tag* %502 to [1 x %struct.reg_info_def*]*
  %504 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %505 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %504, i32 0, i32 1
  %506 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %505, i64 0, i64 0
  %507 = bitcast %union.rtunion_def* %506 to i32*
  %508 = load i32, i32* %507, align 8
  %509 = zext i32 %508 to i64
  %510 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %503, i64 0, i64 %509
  %511 = load %struct.reg_info_def*, %struct.reg_info_def** %510, align 8
  %512 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %511, i32 0, i32 8
  %513 = load i32, i32* %512, align 4
  %514 = icmp eq i32 %513, 0
  %515 = load i32, i32* @x.19
  %516 = load i32, i32* @y.20
  %517 = sub i32 %515, 1
  %518 = mul i32 %515, %517
  %519 = urem i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %516, 10
  %522 = or i1 %520, %521
  br i1 %522, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br i1 %514, label %523, label %524

; <label>:523:                                    ; preds = %originalBBpart285
  br label %592

; <label>:524:                                    ; preds = %originalBBpart285
  %525 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %526 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %525, i32 0, i32 1
  %527 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %526, i64 0, i64 0
  %528 = bitcast %union.rtunion_def* %527 to i32*
  %529 = load i32, i32* %528, align 8
  %530 = zext i32 %529 to i64
  %531 = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i64 0, i64 %530
  %532 = load i8, i8* %531, align 1
  %533 = sext i8 %532 to i32
  %534 = icmp ne i32 %533, 0
  br i1 %534, label %540, label %535

; <label>:535:                                    ; preds = %524
  %536 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %537 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %538 = call i32 @find_reg_fusage(%struct.rtx_def* %536, i32 49, %struct.rtx_def* %537)
  %539 = icmp ne i32 %538, 0
  br i1 %539, label %540, label %541

; <label>:540:                                    ; preds = %535, %524
  br label %592

; <label>:541:                                    ; preds = %535
  %542 = load i32, i32* @x.19
  %543 = load i32, i32* @y.20
  %544 = sub i32 %542, 1
  %545 = mul i32 %542, %544
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %547, %548
  br i1 %549, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %originalBB87alteredBB, %541
  %550 = load i32, i32* @x.19
  %551 = load i32, i32* @y.20
  %552 = sub i32 %550, 1
  %553 = mul i32 %550, %552
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %551, 10
  %557 = or i1 %555, %556
  br i1 %557, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br label %585

; <label>:558:                                    ; preds = %originalBBpart265
  %559 = load i32, i32* @x.19
  %560 = load i32, i32* @y.20
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %558
  %567 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %568 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %569 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %568, i32 0, i32 1
  %570 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %569, i64 0, i64 3
  %571 = bitcast %union.rtunion_def* %570 to %struct.rtx_def**
  %572 = load %struct.rtx_def*, %struct.rtx_def** %571, align 8
  %573 = call i32 @reg_set_p(%struct.rtx_def* %567, %struct.rtx_def* %572)
  %574 = icmp ne i32 %573, 0
  %575 = load i32, i32* @x.19
  %576 = load i32, i32* @y.20
  %577 = sub i32 %575, 1
  %578 = mul i32 %575, %577
  %579 = urem i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %576, 10
  %582 = or i1 %580, %581
  br i1 %582, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br i1 %574, label %583, label %584

; <label>:583:                                    ; preds = %originalBBpart293
  br label %592

; <label>:584:                                    ; preds = %originalBBpart293
  br label %585

; <label>:585:                                    ; preds = %584, %originalBBpart289
  br label %586

; <label>:586:                                    ; preds = %585, %originalBBpart24
  %587 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %588 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %587, i32 0, i32 1
  %589 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %588, i64 0, i64 1
  %590 = bitcast %union.rtunion_def* %589 to %struct.rtx_def**
  %591 = load %struct.rtx_def*, %struct.rtx_def** %590, align 8
  store %struct.rtx_def* %591, %struct.rtx_def** %12, align 8
  br label %34

; <label>:592:                                    ; preds = %583, %540, %523, %431, %57, %originalBBpart2
  %593 = load i32, i32* @x.19
  %594 = load i32, i32* @y.20
  %595 = sub i32 %593, 1
  %596 = mul i32 %593, %595
  %597 = urem i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = icmp slt i32 %594, 10
  %600 = or i1 %598, %599
  br i1 %600, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %originalBB95alteredBB, %592
  store i32 0, i32* %6, align 4
  %601 = load i32, i32* @x.19
  %602 = load i32, i32* @y.20
  %603 = sub i32 %601, 1
  %604 = mul i32 %601, %603
  %605 = urem i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = icmp slt i32 %602, 10
  %608 = or i1 %606, %607
  br i1 %608, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br label %609

; <label>:609:                                    ; preds = %originalBBpart297, %originalBBpart250, %27
  %610 = load i32, i32* %6, align 4
  ret i32 %610

originalBBalteredBB:                              ; preds = %originalBB, %34
  %611 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %612 = icmp ne %struct.rtx_def* %611, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %68
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %85
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %102
  %613 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %614 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %615 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %614, i32 0, i32 1
  %616 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %615, i64 0, i64 0
  %617 = bitcast %union.rtunion_def* %616 to i32*
  %618 = load i32, i32* %617, align 8
  %619 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %613, i32 1, i32 %618)
  %620 = icmp ne %struct.rtx_def* %619, null
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %132
  %621 = load i32, i32* %14, align 4
  %_ = sub i32 %621, 1
  %gen = mul i32 %_, 1
  %_15 = sub i32 %621, 1
  %gen16 = mul i32 %_15, 1
  %_17 = sub i32 %621, 1
  %gen18 = mul i32 %_17, 1
  %622 = add nsw i32 %621, 1
  store i32 %622, i32* %14, align 4
  br label %originalBB14

originalBB22alteredBB:                            ; preds = %originalBB22, %151
  %623 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %624 = bitcast %struct.rtx_def* %623 to i32*
  %625 = load i32, i32* %624, align 8
  %_23 = sub i32 0, %625
  %gen24 = add i32 %_23, 65535
  %_25 = sub i32 0, %625
  %gen26 = add i32 %_25, 65535
  %_27 = sub i32 0, %625
  %gen28 = add i32 %_27, 65535
  %626 = and i32 %625, 65535
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %627
  %629 = load i8, i8* %628, align 1
  %630 = sext i8 %629 to i32
  %631 = icmp eq i32 %630, 105
  br label %originalBB22

originalBB33alteredBB:                            ; preds = %originalBB33, %177
  %632 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %633 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %632, i32 0, i32 1
  %634 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %633, i64 0, i64 3
  %635 = bitcast %union.rtunion_def* %634 to %struct.rtx_def**
  %636 = load %struct.rtx_def*, %struct.rtx_def** %635, align 8
  %637 = bitcast %struct.rtx_def* %636 to i32*
  %638 = load i32, i32* %637, align 8
  %_34 = sub i32 0, %638
  %gen35 = add i32 %_34, 65535
  %_36 = shl i32 %638, 65535
  %_37 = sub i32 %638, 65535
  %gen38 = mul i32 %_37, 65535
  %_39 = sub i32 0, %638
  %gen40 = add i32 %_39, 65535
  %639 = and i32 %638, 65535
  %640 = icmp eq i32 %639, 47
  br label %originalBB33

originalBB44alteredBB:                            ; preds = %originalBB44, %345
  %641 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %642 = icmp ne %struct._IO_FILE* %641, null
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %372
  store i32 1, i32* %6, align 4
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %389
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %406
  %643 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %644 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %645 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %644, i32 0, i32 1
  %646 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %645, i64 0, i64 3
  %647 = bitcast %union.rtunion_def* %646 to %struct.rtx_def**
  %648 = load %struct.rtx_def*, %struct.rtx_def** %647, align 8
  %649 = call i32 @reg_set_p(%struct.rtx_def* %643, %struct.rtx_def* %648)
  %650 = icmp ne i32 %649, 0
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %432
  %651 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %652 = bitcast %struct.rtx_def* %651 to i32*
  %653 = load i32, i32* %652, align 8
  %_61 = sub i32 %653, 65535
  %gen62 = mul i32 %_61, 65535
  %_63 = shl i32 %653, 65535
  %654 = and i32 %653, 65535
  %655 = icmp eq i32 %654, 34
  br label %originalBB60

originalBB67alteredBB:                            ; preds = %originalBB67, %454
  %656 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %657 = icmp ne %struct.rtx_def* %656, null
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %473
  %658 = load i32, i32* %15, align 4
  %_72 = sub i32 0, %658
  %gen73 = add i32 %_72, 1
  %_74 = shl i32 %658, 1
  %_75 = shl i32 %658, 1
  %_76 = sub i32 %658, 1
  %gen77 = mul i32 %_76, 1
  %_78 = sub i32 %658, 1
  %gen79 = mul i32 %_78, 1
  %659 = add nsw i32 %658, 1
  store i32 %659, i32* %15, align 4
  br label %originalBB71

originalBB83alteredBB:                            ; preds = %originalBB83, %492
  %660 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %661 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %660, i32 0, i32 4
  %662 = bitcast %union.varray_data_tag* %661 to [1 x %struct.reg_info_def*]*
  %663 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %664 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %663, i32 0, i32 1
  %665 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %664, i64 0, i64 0
  %666 = bitcast %union.rtunion_def* %665 to i32*
  %667 = load i32, i32* %666, align 8
  %668 = zext i32 %667 to i64
  %669 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %662, i64 0, i64 %668
  %670 = load %struct.reg_info_def*, %struct.reg_info_def** %669, align 8
  %671 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %670, i32 0, i32 8
  %672 = load i32, i32* %671, align 4
  %673 = icmp eq i32 %672, 0
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %541
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %558
  %674 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %675 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %676 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %675, i32 0, i32 1
  %677 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %676, i64 0, i64 3
  %678 = bitcast %union.rtunion_def* %677 to %struct.rtx_def**
  %679 = load %struct.rtx_def*, %struct.rtx_def** %678, align 8
  %680 = call i32 @reg_set_p(%struct.rtx_def* %674, %struct.rtx_def* %679)
  %681 = icmp ne i32 %680, 0
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %592
  store i32 0, i32* %6, align 4
  br label %originalBB95
}

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @reg_is_remote_constant_p(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  %9 = alloca %struct.rtx_def*, align 8
  %10 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %5, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %6, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %7, align 8
  %11 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %12 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %11, i32 0, i32 4
  %13 = bitcast %union.varray_data_tag* %12 to [1 x %struct.reg_info_def*]*
  %14 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %15, i64 0, i64 0
  %17 = bitcast %union.rtunion_def* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %13, i64 0, i64 %19
  %21 = load %struct.reg_info_def*, %struct.reg_info_def** %20, align 8
  %22 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %21, i32 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = icmp ne i32 %23, 1
  br i1 %24, label %25, label %42

; <label>:25:                                     ; preds = %3
  %26 = load i32, i32* @x.21
  %27 = load i32, i32* @y.22
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %25
  store i32 0, i32* %4, align 4
  %34 = load i32, i32* @x.21
  %35 = load i32, i32* @y.22
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %449

; <label>:42:                                     ; preds = %3
  %43 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %44, i64 0, i64 5
  %46 = bitcast %union.rtunion_def* %45 to %struct.rtx_def**
  %47 = load %struct.rtx_def*, %struct.rtx_def** %46, align 8
  store %struct.rtx_def* %47, %struct.rtx_def** %8, align 8
  br label %48

; <label>:48:                                     ; preds = %212, %42
  %49 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %50 = icmp ne %struct.rtx_def* %49, null
  br i1 %50, label %51, label %218

; <label>:51:                                     ; preds = %48
  %52 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %53 = bitcast %struct.rtx_def* %52 to i32*
  %54 = load i32, i32* %53, align 8
  %55 = lshr i32 %54, 16
  %56 = and i32 %55, 255
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %75

; <label>:58:                                     ; preds = %51
  %59 = load i32, i32* @x.21
  %60 = load i32, i32* @y.22
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %58
  %67 = load i32, i32* @x.21
  %68 = load i32, i32* @y.22
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %212

; <label>:75:                                     ; preds = %51
  %76 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %77, i64 0, i64 0
  %79 = bitcast %union.rtunion_def* %78 to %struct.rtx_def**
  %80 = load %struct.rtx_def*, %struct.rtx_def** %79, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, 65535
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = sext i8 %86 to i32
  %88 = icmp eq i32 %87, 105
  br i1 %88, label %89, label %163

; <label>:89:                                     ; preds = %75
  %90 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %91, i64 0, i64 0
  %93 = bitcast %union.rtunion_def* %92 to %struct.rtx_def**
  %94 = load %struct.rtx_def*, %struct.rtx_def** %93, align 8
  %95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %95, i64 0, i64 3
  %97 = bitcast %union.rtunion_def* %96 to %struct.rtx_def**
  %98 = load %struct.rtx_def*, %struct.rtx_def** %97, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %100 = load i32, i32* %99, align 8
  %101 = and i32 %100, 65535
  %102 = icmp eq i32 %101, 47
  br i1 %102, label %103, label %129

; <label>:103:                                    ; preds = %89
  %104 = load i32, i32* @x.21
  %105 = load i32, i32* @y.22
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %103
  %112 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %113, i64 0, i64 0
  %115 = bitcast %union.rtunion_def* %114 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %115, align 8
  %117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1
  %118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %117, i64 0, i64 3
  %119 = bitcast %union.rtunion_def* %118 to %struct.rtx_def**
  %120 = load %struct.rtx_def*, %struct.rtx_def** %119, align 8
  %121 = load i32, i32* @x.21
  %122 = load i32, i32* @y.22
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %161

; <label>:129:                                    ; preds = %89
  %130 = load i32, i32* @x.21
  %131 = load i32, i32* @y.22
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %129
  %138 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1
  %140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %139, i64 0, i64 0
  %141 = bitcast %union.rtunion_def* %140 to %struct.rtx_def**
  %142 = load %struct.rtx_def*, %struct.rtx_def** %141, align 8
  %143 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1
  %145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %144, i64 0, i64 0
  %146 = bitcast %union.rtunion_def* %145 to %struct.rtx_def**
  %147 = load %struct.rtx_def*, %struct.rtx_def** %146, align 8
  %148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1
  %149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %148, i64 0, i64 3
  %150 = bitcast %union.rtunion_def* %149 to %struct.rtx_def**
  %151 = load %struct.rtx_def*, %struct.rtx_def** %150, align 8
  %152 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %142, %struct.rtx_def* %151)
  %153 = load i32, i32* @x.21
  %154 = load i32, i32* @y.22
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %161

; <label>:161:                                    ; preds = %originalBBpart212, %originalBBpart28
  %162 = phi %struct.rtx_def* [ %120, %originalBBpart28 ], [ %152, %originalBBpart212 ]
  br label %164

; <label>:163:                                    ; preds = %75
  br label %164

; <label>:164:                                    ; preds = %163, %161
  %165 = phi %struct.rtx_def* [ %162, %161 ], [ null, %163 ]
  store %struct.rtx_def* %165, %struct.rtx_def** %9, align 8
  %166 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %167 = icmp ne %struct.rtx_def* %166, null
  br i1 %167, label %168, label %195

; <label>:168:                                    ; preds = %164
  %169 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1
  %171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %170, i64 0, i64 0
  %172 = bitcast %union.rtunion_def* %171 to %struct.rtx_def**
  %173 = load %struct.rtx_def*, %struct.rtx_def** %172, align 8
  %174 = bitcast %struct.rtx_def* %173 to i32*
  %175 = load i32, i32* %174, align 8
  %176 = and i32 %175, 65535
  %177 = icmp eq i32 %176, 61
  br i1 %177, label %178, label %195

; <label>:178:                                    ; preds = %168
  %179 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %179, i32 0, i32 1
  %181 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %180, i64 0, i64 0
  %182 = bitcast %union.rtunion_def* %181 to %struct.rtx_def**
  %183 = load %struct.rtx_def*, %struct.rtx_def** %182, align 8
  %184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1
  %185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %184, i64 0, i64 0
  %186 = bitcast %union.rtunion_def* %185 to i32*
  %187 = load i32, i32* %186, align 8
  %188 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1
  %190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %189, i64 0, i64 0
  %191 = bitcast %union.rtunion_def* %190 to i32*
  %192 = load i32, i32* %191, align 8
  %193 = icmp eq i32 %187, %192
  br i1 %193, label %194, label %195

; <label>:194:                                    ; preds = %178
  store i32 0, i32* %4, align 4
  br label %449

; <label>:195:                                    ; preds = %178, %168, %164
  %196 = load i32, i32* @x.21
  %197 = load i32, i32* @y.22
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %195
  %204 = load i32, i32* @x.21
  %205 = load i32, i32* @y.22
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %212

; <label>:212:                                    ; preds = %originalBBpart216, %originalBBpart24
  %213 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %213, i32 0, i32 1
  %215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %214, i64 0, i64 1
  %216 = bitcast %union.rtunion_def* %215 to %struct.rtx_def**
  %217 = load %struct.rtx_def*, %struct.rtx_def** %216, align 8
  store %struct.rtx_def* %217, %struct.rtx_def** %8, align 8
  br label %48

; <label>:218:                                    ; preds = %48
  %219 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  store %struct.rtx_def* %219, %struct.rtx_def** %8, align 8
  br label %220

; <label>:220:                                    ; preds = %originalBBpart251, %218
  %221 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %222 = icmp ne %struct.rtx_def* %221, null
  br i1 %222, label %223, label %227

; <label>:223:                                    ; preds = %220
  %224 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %225 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %226 = icmp ne %struct.rtx_def* %224, %225
  br label %227

; <label>:227:                                    ; preds = %223, %220
  %228 = phi i1 [ false, %220 ], [ %226, %223 ]
  %229 = load i32, i32* @x.21
  %230 = load i32, i32* @y.22
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %227
  %237 = load i32, i32* @x.21
  %238 = load i32, i32* @y.22
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %228, label %245, label %432

; <label>:245:                                    ; preds = %originalBBpart220
  %246 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %247 = bitcast %struct.rtx_def* %246 to i32*
  %248 = load i32, i32* %247, align 8
  %249 = and i32 %248, 65535
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %250
  %252 = load i8, i8* %251, align 1
  %253 = sext i8 %252 to i32
  %254 = icmp eq i32 %253, 105
  br i1 %254, label %272, label %255

; <label>:255:                                    ; preds = %245
  %256 = load i32, i32* @x.21
  %257 = load i32, i32* @y.22
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %255
  %264 = load i32, i32* @x.21
  %265 = load i32, i32* @y.22
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %410

; <label>:272:                                    ; preds = %245
  %273 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %274 = bitcast %struct.rtx_def* %273 to i32*
  %275 = load i32, i32* %274, align 8
  %276 = and i32 %275, 65535
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %277
  %279 = load i8, i8* %278, align 1
  %280 = sext i8 %279 to i32
  %281 = icmp eq i32 %280, 105
  br i1 %281, label %282, label %356

; <label>:282:                                    ; preds = %272
  %283 = load i32, i32* @x.21
  %284 = load i32, i32* @y.22
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %282
  %291 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %292 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %291, i32 0, i32 1
  %293 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %292, i64 0, i64 3
  %294 = bitcast %union.rtunion_def* %293 to %struct.rtx_def**
  %295 = load %struct.rtx_def*, %struct.rtx_def** %294, align 8
  %296 = bitcast %struct.rtx_def* %295 to i32*
  %297 = load i32, i32* %296, align 8
  %298 = and i32 %297, 65535
  %299 = icmp eq i32 %298, 47
  %300 = load i32, i32* @x.21
  %301 = load i32, i32* @y.22
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBBpart235, label %originalBB26alteredBB

originalBBpart235:                                ; preds = %originalBB26
  br i1 %299, label %308, label %330

; <label>:308:                                    ; preds = %originalBBpart235
  %309 = load i32, i32* @x.21
  %310 = load i32, i32* @y.22
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %308
  %317 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %318 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %317, i32 0, i32 1
  %319 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %318, i64 0, i64 3
  %320 = bitcast %union.rtunion_def* %319 to %struct.rtx_def**
  %321 = load %struct.rtx_def*, %struct.rtx_def** %320, align 8
  %322 = load i32, i32* @x.21
  %323 = load i32, i32* @y.22
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %354

; <label>:330:                                    ; preds = %originalBBpart235
  %331 = load i32, i32* @x.21
  %332 = load i32, i32* @y.22
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %330
  %339 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %340 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %341 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %340, i32 0, i32 1
  %342 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %341, i64 0, i64 3
  %343 = bitcast %union.rtunion_def* %342 to %struct.rtx_def**
  %344 = load %struct.rtx_def*, %struct.rtx_def** %343, align 8
  %345 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %339, %struct.rtx_def* %344)
  %346 = load i32, i32* @x.21
  %347 = load i32, i32* @y.22
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %354

; <label>:354:                                    ; preds = %originalBBpart243, %originalBBpart239
  %355 = phi %struct.rtx_def* [ %321, %originalBBpart239 ], [ %345, %originalBBpart243 ]
  br label %373

; <label>:356:                                    ; preds = %272
  %357 = load i32, i32* @x.21
  %358 = load i32, i32* @y.22
  %359 = sub i32 %357, 1
  %360 = mul i32 %357, %359
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %362, %363
  br i1 %364, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %356
  %365 = load i32, i32* @x.21
  %366 = load i32, i32* @y.22
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %373

; <label>:373:                                    ; preds = %originalBBpart247, %354
  %374 = phi %struct.rtx_def* [ %355, %354 ], [ null, %originalBBpart247 ]
  store %struct.rtx_def* %374, %struct.rtx_def** %10, align 8
  %375 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %376 = icmp ne %struct.rtx_def* %375, null
  br i1 %376, label %377, label %409

; <label>:377:                                    ; preds = %373
  %378 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %379 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %378, i32 0, i32 1
  %380 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %379, i64 0, i64 0
  %381 = bitcast %union.rtunion_def* %380 to %struct.rtx_def**
  %382 = load %struct.rtx_def*, %struct.rtx_def** %381, align 8
  %383 = bitcast %struct.rtx_def* %382 to i32*
  %384 = load i32, i32* %383, align 8
  %385 = and i32 %384, 65535
  %386 = icmp eq i32 %385, 61
  br i1 %386, label %387, label %409

; <label>:387:                                    ; preds = %377
  %388 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %389 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %388, i32 0, i32 1
  %390 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %389, i64 0, i64 0
  %391 = bitcast %union.rtunion_def* %390 to %struct.rtx_def**
  %392 = load %struct.rtx_def*, %struct.rtx_def** %391, align 8
  %393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %392, i32 0, i32 1
  %394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %393, i64 0, i64 0
  %395 = bitcast %union.rtunion_def* %394 to i32*
  %396 = load i32, i32* %395, align 8
  %397 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %398 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %397, i32 0, i32 1
  %399 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %398, i64 0, i64 0
  %400 = bitcast %union.rtunion_def* %399 to i32*
  %401 = load i32, i32* %400, align 8
  %402 = icmp eq i32 %396, %401
  br i1 %402, label %403, label %409

; <label>:403:                                    ; preds = %387
  %404 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %405 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %404, i32 4, %struct.rtx_def* null)
  %406 = icmp ne %struct.rtx_def* %405, null
  br i1 %406, label %407, label %408

; <label>:407:                                    ; preds = %403
  store i32 1, i32* %4, align 4
  br label %449

; <label>:408:                                    ; preds = %403
  store i32 0, i32* %4, align 4
  br label %449

; <label>:409:                                    ; preds = %387, %377, %373
  br label %410

; <label>:410:                                    ; preds = %409, %originalBBpart224
  %411 = load i32, i32* @x.21
  %412 = load i32, i32* @y.22
  %413 = sub i32 %411, 1
  %414 = mul i32 %411, %413
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %412, 10
  %418 = or i1 %416, %417
  br i1 %418, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %originalBB49alteredBB, %410
  %419 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %420 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %419, i32 0, i32 1
  %421 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %420, i64 0, i64 2
  %422 = bitcast %union.rtunion_def* %421 to %struct.rtx_def**
  %423 = load %struct.rtx_def*, %struct.rtx_def** %422, align 8
  store %struct.rtx_def* %423, %struct.rtx_def** %8, align 8
  %424 = load i32, i32* @x.21
  %425 = load i32, i32* @y.22
  %426 = sub i32 %424, 1
  %427 = mul i32 %424, %426
  %428 = urem i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %425, 10
  %431 = or i1 %429, %430
  br i1 %431, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br label %220

; <label>:432:                                    ; preds = %originalBBpart220
  %433 = load i32, i32* @x.21
  %434 = load i32, i32* @y.22
  %435 = sub i32 %433, 1
  %436 = mul i32 %433, %435
  %437 = urem i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %438, %439
  br i1 %440, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %originalBB53alteredBB, %432
  store i32 0, i32* %4, align 4
  %441 = load i32, i32* @x.21
  %442 = load i32, i32* @y.22
  %443 = sub i32 %441, 1
  %444 = mul i32 %441, %443
  %445 = urem i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %446, %447
  br i1 %448, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br label %449

; <label>:449:                                    ; preds = %originalBBpart255, %408, %407, %194, %originalBBpart2
  %450 = load i32, i32* @x.21
  %451 = load i32, i32* @y.22
  %452 = sub i32 %450, 1
  %453 = mul i32 %450, %452
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %455, %456
  br i1 %457, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %449
  %458 = load i32, i32* %4, align 4
  %459 = load i32, i32* @x.21
  %460 = load i32, i32* @y.22
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  ret i32 %458

originalBBalteredBB:                              ; preds = %originalBB, %25
  store i32 0, i32* %4, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %58
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %103
  %467 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %468 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %467, i32 0, i32 1
  %469 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %468, i64 0, i64 0
  %470 = bitcast %union.rtunion_def* %469 to %struct.rtx_def**
  %471 = load %struct.rtx_def*, %struct.rtx_def** %470, align 8
  %472 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %471, i32 0, i32 1
  %473 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %472, i64 0, i64 3
  %474 = bitcast %union.rtunion_def* %473 to %struct.rtx_def**
  %475 = load %struct.rtx_def*, %struct.rtx_def** %474, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %129
  %476 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %477 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %476, i32 0, i32 1
  %478 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %477, i64 0, i64 0
  %479 = bitcast %union.rtunion_def* %478 to %struct.rtx_def**
  %480 = load %struct.rtx_def*, %struct.rtx_def** %479, align 8
  %481 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %482 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %481, i32 0, i32 1
  %483 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %482, i64 0, i64 0
  %484 = bitcast %union.rtunion_def* %483 to %struct.rtx_def**
  %485 = load %struct.rtx_def*, %struct.rtx_def** %484, align 8
  %486 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %485, i32 0, i32 1
  %487 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %486, i64 0, i64 3
  %488 = bitcast %union.rtunion_def* %487 to %struct.rtx_def**
  %489 = load %struct.rtx_def*, %struct.rtx_def** %488, align 8
  %490 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %480, %struct.rtx_def* %489)
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %195
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %227
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %255
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %282
  %491 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %492 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %491, i32 0, i32 1
  %493 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %492, i64 0, i64 3
  %494 = bitcast %union.rtunion_def* %493 to %struct.rtx_def**
  %495 = load %struct.rtx_def*, %struct.rtx_def** %494, align 8
  %496 = bitcast %struct.rtx_def* %495 to i32*
  %497 = load i32, i32* %496, align 8
  %_ = shl i32 %497, 65535
  %_27 = shl i32 %497, 65535
  %_28 = sub i32 %497, 65535
  %gen = mul i32 %_28, 65535
  %_29 = sub i32 %497, 65535
  %gen30 = mul i32 %_29, 65535
  %_31 = shl i32 %497, 65535
  %_32 = sub i32 %497, 65535
  %gen33 = mul i32 %_32, 65535
  %498 = and i32 %497, 65535
  %499 = icmp eq i32 %498, 47
  br label %originalBB26

originalBB37alteredBB:                            ; preds = %originalBB37, %308
  %500 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %501 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %500, i32 0, i32 1
  %502 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %501, i64 0, i64 3
  %503 = bitcast %union.rtunion_def* %502 to %struct.rtx_def**
  %504 = load %struct.rtx_def*, %struct.rtx_def** %503, align 8
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %330
  %505 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %506 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %507 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %506, i32 0, i32 1
  %508 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %507, i64 0, i64 3
  %509 = bitcast %union.rtunion_def* %508 to %struct.rtx_def**
  %510 = load %struct.rtx_def*, %struct.rtx_def** %509, align 8
  %511 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %505, %struct.rtx_def* %510)
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %356
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %410
  %512 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %513 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %512, i32 0, i32 1
  %514 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %513, i64 0, i64 2
  %515 = bitcast %union.rtunion_def* %514 to %struct.rtx_def**
  %516 = load %struct.rtx_def*, %struct.rtx_def** %515, align 8
  store %struct.rtx_def* %516, %struct.rtx_def** %8, align 8
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %432
  store i32 0, i32* %4, align 4
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %449
  %517 = load i32, i32* %4, align 4
  br label %originalBB57
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @perhaps_ends_bb_p(%struct.rtx_def*) #0 {
  %2 = load i32, i32* @x.23
  %3 = load i32, i32* @y.24
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i32, align 4
  %11 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %11, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 65535
  %16 = load i32, i32* @x.23
  %17 = load i32, i32* @y.24
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %15, label %48 [
    i32 36, label %24
    i32 33, label %24
    i32 34, label %25
  ]

; <label>:24:                                     ; preds = %originalBBpart2, %originalBBpart2
  store i32 1, i32* %10, align 4
  br label %52

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load %struct.function*, %struct.function** @cfun, align 8
  %27 = getelementptr inbounds %struct.function, %struct.function* %26, i32 0, i32 21
  %28 = load %struct.rtx_def*, %struct.rtx_def** %27, align 8
  %29 = icmp ne %struct.rtx_def* %28, null
  br i1 %29, label %30, label %31

; <label>:30:                                     ; preds = %25
  store i32 1, i32* %10, align 4
  br label %52

; <label>:31:                                     ; preds = %25
  %32 = load i32, i32* @x.23
  %33 = load i32, i32* @y.24
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %31
  %40 = load i32, i32* @x.23
  %41 = load i32, i32* @y.24
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %48

; <label>:48:                                     ; preds = %originalBBpart216, %originalBBpart2
  %49 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %50 = call zeroext i1 @can_throw_internal(%struct.rtx_def* %49)
  %51 = zext i1 %50 to i32
  store i32 %51, i32* %10, align 4
  br label %52

; <label>:52:                                     ; preds = %48, %30, %24
  %53 = load i32, i32* @x.23
  %54 = load i32, i32* @y.24
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %52
  %61 = load i32, i32* %10, align 4
  %62 = load i32, i32* @x.23
  %63 = load i32, i32* @y.24
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  ret i32 %61

originalBBalteredBB:                              ; preds = %originalBB, %1
  %70 = alloca i32, align 4
  %71 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %71, align 8
  %72 = load %struct.rtx_def*, %struct.rtx_def** %71, align 8
  %73 = bitcast %struct.rtx_def* %72 to i32*
  %74 = load i32, i32* %73, align 8
  %_ = sub i32 %74, 65535
  %gen = mul i32 %_, 65535
  %_1 = sub i32 0, %74
  %gen2 = add i32 %_1, 65535
  %_3 = sub i32 0, %74
  %gen4 = add i32 %_3, 65535
  %_5 = sub i32 0, %74
  %gen6 = add i32 %_5, 65535
  %_7 = sub i32 0, %74
  %gen8 = add i32 %_7, 65535
  %_9 = sub i32 %74, 65535
  %gen10 = mul i32 %_9, 65535
  %_11 = sub i32 %74, 65535
  %gen12 = mul i32 %_11, 65535
  %_13 = shl i32 %74, 65535
  %75 = and i32 %74, 65535
  br label %originalBB

originalBB14alteredBB:                            ; preds = %originalBB14, %31
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %52
  %76 = load i32, i32* %10, align 4
  br label %originalBB18
}

declare i32 @validate_replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i32) #1

declare void @remove_note(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @copy_src_to_dest(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) #0 {
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.rtx_def*, align 8
  %10 = alloca %struct.rtx_def*, align 8
  %11 = alloca %struct.rtx_def*, align 8
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %struct.rtx_def*, align 8
  %14 = alloca %struct.rtx_def**, align 8
  %15 = alloca %struct.rtx_def**, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %struct.rtx_def* %0, %struct.rtx_def** %5, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %6, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %7, align 8
  store i32 %3, i32* %8, align 4
  %22 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 65535
  %26 = icmp eq i32 %25, 61
  br i1 %26, label %27, label %613

; <label>:27:                                     ; preds = %4
  %28 = load i32, i32* @x.25
  %29 = load i32, i32* @y.26
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %27
  %36 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %37 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %36, i32 0, i32 4
  %38 = bitcast %union.varray_data_tag* %37 to [1 x %struct.reg_info_def*]*
  %39 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %40, i64 0, i64 0
  %42 = bitcast %union.rtunion_def* %41 to i32*
  %43 = load i32, i32* %42, align 8
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %38, i64 0, i64 %44
  %46 = load %struct.reg_info_def*, %struct.reg_info_def** %45, align 8
  %47 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %46, i32 0, i32 7
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %48, 0
  %50 = load i32, i32* @x.25
  %51 = load i32, i32* @y.26
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %49, label %58, label %613

; <label>:58:                                     ; preds = %originalBBpart2
  %59 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 65535
  %63 = icmp eq i32 %62, 61
  br i1 %63, label %64, label %613

; <label>:64:                                     ; preds = %58
  %65 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = lshr i32 %67, 26
  %69 = and i32 %68, 1
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %613, label %71

; <label>:71:                                     ; preds = %64
  %72 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %73 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %72, i32 0, i32 4
  %74 = bitcast %union.varray_data_tag* %73 to [1 x %struct.reg_info_def*]*
  %75 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %76, i64 0, i64 0
  %78 = bitcast %union.rtunion_def* %77 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %74, i64 0, i64 %80
  %82 = load %struct.reg_info_def*, %struct.reg_info_def** %81, align 8
  %83 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %82, i32 0, i32 7
  %84 = load i32, i32* %83, align 4
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %86, label %613

; <label>:86:                                     ; preds = %71
  %87 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %88 = bitcast %struct.rtx_def* %87 to i32*
  %89 = load i32, i32* %88, align 8
  %90 = and i32 %89, 65535
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = icmp eq i32 %94, 105
  br i1 %95, label %96, label %170

; <label>:96:                                     ; preds = %86
  %97 = load i32, i32* @x.25
  %98 = load i32, i32* @y.26
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %96
  %105 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %106, i64 0, i64 3
  %108 = bitcast %union.rtunion_def* %107 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %108, align 8
  %110 = bitcast %struct.rtx_def* %109 to i32*
  %111 = load i32, i32* %110, align 8
  %112 = and i32 %111, 65535
  %113 = icmp eq i32 %112, 47
  %114 = load i32, i32* @x.25
  %115 = load i32, i32* @y.26
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %113, label %122, label %128

; <label>:122:                                    ; preds = %originalBBpart24
  %123 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1
  %125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %124, i64 0, i64 3
  %126 = bitcast %union.rtunion_def* %125 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %126, align 8
  br label %152

; <label>:128:                                    ; preds = %originalBBpart24
  %129 = load i32, i32* @x.25
  %130 = load i32, i32* @y.26
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %128
  %137 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %138 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1
  %140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %139, i64 0, i64 3
  %141 = bitcast %union.rtunion_def* %140 to %struct.rtx_def**
  %142 = load %struct.rtx_def*, %struct.rtx_def** %141, align 8
  %143 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %137, %struct.rtx_def* %142)
  %144 = load i32, i32* @x.25
  %145 = load i32, i32* @y.26
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %152

; <label>:152:                                    ; preds = %originalBBpart28, %122
  %153 = phi %struct.rtx_def* [ %127, %122 ], [ %143, %originalBBpart28 ]
  %154 = load i32, i32* @x.25
  %155 = load i32, i32* @y.26
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %152
  %162 = load i32, i32* @x.25
  %163 = load i32, i32* @y.26
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %171

; <label>:170:                                    ; preds = %86
  br label %171

; <label>:171:                                    ; preds = %170, %originalBBpart212
  %172 = phi %struct.rtx_def* [ %153, %originalBBpart212 ], [ null, %170 ]
  %173 = load i32, i32* @x.25
  %174 = load i32, i32* @y.26
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %171
  store %struct.rtx_def* %172, %struct.rtx_def** %12, align 8
  %181 = icmp ne %struct.rtx_def* %172, null
  %182 = load i32, i32* @x.25
  %183 = load i32, i32* @y.26
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %181, label %190, label %613

; <label>:190:                                    ; preds = %originalBBpart216
  %191 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %192 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %192, i32 0, i32 1
  %194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %193, i64 0, i64 1
  %195 = bitcast %union.rtunion_def* %194 to %struct.rtx_def**
  %196 = load %struct.rtx_def*, %struct.rtx_def** %195, align 8
  %197 = call i32 @reg_mentioned_p(%struct.rtx_def* %191, %struct.rtx_def* %196)
  %198 = icmp ne i32 %197, 0
  br i1 %198, label %613, label %199

; <label>:199:                                    ; preds = %190
  %200 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %201 = bitcast %struct.rtx_def* %200 to i32*
  %202 = load i32, i32* %201, align 8
  %203 = lshr i32 %202, 16
  %204 = and i32 %203, 255
  %205 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %206 = bitcast %struct.rtx_def* %205 to i32*
  %207 = load i32, i32* %206, align 8
  %208 = lshr i32 %207, 16
  %209 = and i32 %208, 255
  %210 = icmp eq i32 %204, %209
  br i1 %210, label %211, label %613

; <label>:211:                                    ; preds = %199
  %212 = load %struct.function*, %struct.function** @cfun, align 8
  %213 = getelementptr inbounds %struct.function, %struct.function* %212, i32 0, i32 3
  %214 = load %struct.emit_status*, %struct.emit_status** %213, align 8
  %215 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %214, i32 0, i32 0
  %216 = load i32, i32* %215, align 8
  store i32 %216, i32* %21, align 4
  call void @start_sequence()
  %217 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %218 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %219 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %217, %struct.rtx_def* %218)
  %220 = call %struct.rtx_def* @gen_sequence()
  store %struct.rtx_def* %220, %struct.rtx_def** %9, align 8
  call void @end_sequence()
  %221 = load i32, i32* %21, align 4
  %222 = load %struct.function*, %struct.function** @cfun, align 8
  %223 = getelementptr inbounds %struct.function, %struct.function* %222, i32 0, i32 3
  %224 = load %struct.emit_status*, %struct.emit_status** %223, align 8
  %225 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %224, i32 0, i32 0
  %226 = load i32, i32* %225, align 8
  %227 = icmp ne i32 %221, %226
  br i1 %227, label %234, label %228

; <label>:228:                                    ; preds = %211
  %229 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %230 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %231 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %232 = call i32 @validate_replace_rtx(%struct.rtx_def* %229, %struct.rtx_def* %230, %struct.rtx_def* %231)
  %233 = icmp ne i32 %232, 0
  br i1 %233, label %256, label %234

; <label>:234:                                    ; preds = %228, %211
  %235 = load i32, i32* @x.25
  %236 = load i32, i32* @y.26
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %234
  %243 = load i32, i32* %21, align 4
  %244 = load %struct.function*, %struct.function** @cfun, align 8
  %245 = getelementptr inbounds %struct.function, %struct.function* %244, i32 0, i32 3
  %246 = load %struct.emit_status*, %struct.emit_status** %245, align 8
  %247 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %246, i32 0, i32 0
  store i32 %243, i32* %247, align 8
  %248 = load i32, i32* @x.25
  %249 = load i32, i32* @y.26
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %613

; <label>:256:                                    ; preds = %228
  %257 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %258 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %259 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %257, %struct.rtx_def* %258)
  %260 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %261 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %260, i32 0, i32 1
  %262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %261, i64 0, i64 1
  %263 = bitcast %union.rtunion_def* %262 to %struct.rtx_def**
  %264 = load %struct.rtx_def*, %struct.rtx_def** %263, align 8
  store %struct.rtx_def* %264, %struct.rtx_def** %13, align 8
  %265 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %265, i32 0, i32 1
  %267 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %266, i64 0, i64 6
  %268 = bitcast %union.rtunion_def* %267 to %struct.rtx_def**
  store %struct.rtx_def** %268, %struct.rtx_def*** %15, align 8
  %269 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %269, i32 0, i32 1
  %271 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %270, i64 0, i64 6
  %272 = bitcast %union.rtunion_def* %271 to %struct.rtx_def**
  store %struct.rtx_def** %272, %struct.rtx_def*** %14, align 8
  %273 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %274 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %273, i32 0, i32 1
  %275 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %274, i64 0, i64 6
  %276 = bitcast %union.rtunion_def* %275 to %struct.rtx_def**
  %277 = load %struct.rtx_def*, %struct.rtx_def** %276, align 8
  store %struct.rtx_def* %277, %struct.rtx_def** %10, align 8
  br label %278

; <label>:278:                                    ; preds = %341, %256
  %279 = load i32, i32* @x.25
  %280 = load i32, i32* @y.26
  %281 = sub i32 %279, 1
  %282 = mul i32 %279, %281
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %284, %285
  br i1 %286, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %278
  %287 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %288 = icmp ne %struct.rtx_def* %287, null
  %289 = load i32, i32* @x.25
  %290 = load i32, i32* @y.26
  %291 = sub i32 %289, 1
  %292 = mul i32 %289, %291
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %294, %295
  br i1 %296, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %288, label %297, label %343

; <label>:297:                                    ; preds = %originalBBpart224
  %298 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %299 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %298, i32 0, i32 1
  %300 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %299, i64 0, i64 1
  %301 = bitcast %union.rtunion_def* %300 to %struct.rtx_def**
  %302 = load %struct.rtx_def*, %struct.rtx_def** %301, align 8
  store %struct.rtx_def* %302, %struct.rtx_def** %11, align 8
  %303 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %304 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %303, i32 0, i32 1
  %305 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %304, i64 0, i64 0
  %306 = bitcast %union.rtunion_def* %305 to %struct.rtx_def**
  %307 = load %struct.rtx_def*, %struct.rtx_def** %306, align 8
  %308 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %309 = icmp eq %struct.rtx_def* %307, %308
  br i1 %309, label %310, label %333

; <label>:310:                                    ; preds = %297
  %311 = load i32, i32* @x.25
  %312 = load i32, i32* @y.26
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %310
  %319 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %320 = load %struct.rtx_def**, %struct.rtx_def*** %15, align 8
  store %struct.rtx_def* %319, %struct.rtx_def** %320, align 8
  %321 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %322 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %321, i32 0, i32 1
  %323 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %322, i64 0, i64 1
  %324 = bitcast %union.rtunion_def* %323 to %struct.rtx_def**
  store %struct.rtx_def** %324, %struct.rtx_def*** %15, align 8
  %325 = load i32, i32* @x.25
  %326 = load i32, i32* @y.26
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %340

; <label>:333:                                    ; preds = %297
  %334 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %335 = load %struct.rtx_def**, %struct.rtx_def*** %14, align 8
  store %struct.rtx_def* %334, %struct.rtx_def** %335, align 8
  %336 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %337 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %336, i32 0, i32 1
  %338 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %337, i64 0, i64 1
  %339 = bitcast %union.rtunion_def* %338 to %struct.rtx_def**
  store %struct.rtx_def** %339, %struct.rtx_def*** %14, align 8
  br label %340

; <label>:340:                                    ; preds = %333, %originalBBpart228
  br label %341

; <label>:341:                                    ; preds = %340
  %342 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  store %struct.rtx_def* %342, %struct.rtx_def** %10, align 8
  br label %278

; <label>:343:                                    ; preds = %originalBBpart224
  %344 = load i32, i32* @x.25
  %345 = load i32, i32* @y.26
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %343
  %352 = load %struct.rtx_def**, %struct.rtx_def*** %15, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %352, align 8
  %353 = load %struct.rtx_def**, %struct.rtx_def*** %14, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %353, align 8
  %354 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %355 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %354, i32 0, i32 1
  %356 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %355, i64 0, i64 0
  %357 = bitcast %union.rtunion_def* %356 to i32*
  %358 = load i32, i32* %357, align 8
  store i32 %358, i32* %19, align 4
  %359 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %360 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %359, i32 0, i32 1
  %361 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %360, i64 0, i64 0
  %362 = bitcast %union.rtunion_def* %361 to i32*
  %363 = load i32, i32* %362, align 8
  store i32 %363, i32* %20, align 4
  %364 = load i32, i32* %19, align 4
  %365 = load i32, i32* %8, align 4
  %366 = icmp slt i32 %364, %365
  %367 = load i32, i32* @x.25
  %368 = load i32, i32* @y.26
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %366, label %375, label %430

; <label>:375:                                    ; preds = %originalBBpart232
  %376 = load i32, i32* @x.25
  %377 = load i32, i32* @y.26
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %375
  %384 = load i32*, i32** @regmove_bb_head, align 8
  %385 = load i32, i32* %19, align 4
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds i32, i32* %384, i64 %386
  %388 = load i32, i32* %387, align 4
  store i32 %388, i32* %18, align 4
  %389 = load i32, i32* %18, align 4
  %390 = icmp sge i32 %389, 0
  %391 = load i32, i32* @x.25
  %392 = load i32, i32* @y.26
  %393 = sub i32 %391, 1
  %394 = mul i32 %391, %393
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %396, %397
  br i1 %398, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %390, label %399, label %429

; <label>:399:                                    ; preds = %originalBBpart236
  %400 = load i32, i32* @x.25
  %401 = load i32, i32* @y.26
  %402 = sub i32 %400, 1
  %403 = mul i32 %400, %402
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %405, %406
  br i1 %407, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %399
  %408 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %409 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %410 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %409, i32 0, i32 4
  %411 = bitcast %union.varray_data_tag* %410 to [1 x %struct.basic_block_def*]*
  %412 = load i32, i32* %18, align 4
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %411, i64 0, i64 %413
  %415 = load %struct.basic_block_def*, %struct.basic_block_def** %414, align 8
  %416 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %415, i32 0, i32 0
  store %struct.rtx_def* %408, %struct.rtx_def** %416, align 8
  %417 = load i32*, i32** @regmove_bb_head, align 8
  %418 = load i32, i32* %19, align 4
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds i32, i32* %417, i64 %419
  store i32 -1, i32* %420, align 4
  %421 = load i32, i32* @x.25
  %422 = load i32, i32* @y.26
  %423 = sub i32 %421, 1
  %424 = mul i32 %421, %423
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %426, %427
  br i1 %428, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %429

; <label>:429:                                    ; preds = %originalBBpart240, %originalBBpart236
  br label %430

; <label>:430:                                    ; preds = %429, %originalBBpart232
  %431 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %432 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %431, i32 0, i32 1
  %433 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %432, i64 0, i64 0
  %434 = bitcast %union.rtunion_def* %433 to i32*
  %435 = load i32, i32* %434, align 8
  store i32 %435, i32* %17, align 4
  %436 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %437 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %436, i32 0, i32 4
  %438 = bitcast %union.varray_data_tag* %437 to [1 x %struct.reg_info_def*]*
  %439 = load i32, i32* %17, align 4
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %438, i64 0, i64 %440
  %442 = load %struct.reg_info_def*, %struct.reg_info_def** %441, align 8
  %443 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %442, i32 0, i32 3
  %444 = load i32, i32* %443, align 4
  %445 = add nsw i32 %444, 1
  store i32 %445, i32* %443, align 4
  %446 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %447 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %446, i32 0, i32 4
  %448 = bitcast %union.varray_data_tag* %447 to [1 x %struct.reg_info_def*]*
  %449 = load i32, i32* %17, align 4
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %448, i64 0, i64 %450
  %452 = load %struct.reg_info_def*, %struct.reg_info_def** %451, align 8
  %453 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %452, i32 0, i32 7
  %454 = load i32, i32* %453, align 4
  %455 = add nsw i32 %454, 1
  store i32 %455, i32* %453, align 4
  %456 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %457 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %456, i32 0, i32 4
  %458 = bitcast %union.varray_data_tag* %457 to [1 x %struct.reg_info_def*]*
  %459 = load i32, i32* %17, align 4
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %458, i64 0, i64 %460
  %462 = load %struct.reg_info_def*, %struct.reg_info_def** %461, align 8
  %463 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %462, i32 0, i32 0
  %464 = load i32, i32* %463, align 4
  %465 = load i32, i32* %19, align 4
  %466 = icmp eq i32 %464, %465
  br i1 %466, label %467, label %493

; <label>:467:                                    ; preds = %430
  %468 = load i32, i32* @x.25
  %469 = load i32, i32* @y.26
  %470 = sub i32 %468, 1
  %471 = mul i32 %468, %470
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %473, %474
  br i1 %475, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %467
  %476 = load i32, i32* %20, align 4
  %477 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %478 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %477, i32 0, i32 4
  %479 = bitcast %union.varray_data_tag* %478 to [1 x %struct.reg_info_def*]*
  %480 = load i32, i32* %17, align 4
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %479, i64 0, i64 %481
  %483 = load %struct.reg_info_def*, %struct.reg_info_def** %482, align 8
  %484 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %483, i32 0, i32 0
  store i32 %476, i32* %484, align 4
  %485 = load i32, i32* @x.25
  %486 = load i32, i32* @y.26
  %487 = sub i32 %485, 1
  %488 = mul i32 %485, %487
  %489 = urem i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %490, %491
  br i1 %492, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %493

; <label>:493:                                    ; preds = %originalBBpart244, %430
  %494 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %495 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %494, i32 0, i32 1
  %496 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %495, i64 0, i64 0
  %497 = bitcast %union.rtunion_def* %496 to i32*
  %498 = load i32, i32* %497, align 8
  store i32 %498, i32* %16, align 4
  %499 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %500 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %501 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %499, i32 1, %struct.rtx_def* %500)
  %502 = icmp ne %struct.rtx_def* %501, null
  br i1 %502, label %514, label %503

; <label>:503:                                    ; preds = %493
  %504 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %505 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %504, i32 0, i32 4
  %506 = bitcast %union.varray_data_tag* %505 to [1 x %struct.reg_info_def*]*
  %507 = load i32, i32* %16, align 4
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %506, i64 0, i64 %508
  %510 = load %struct.reg_info_def*, %struct.reg_info_def** %509, align 8
  %511 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %510, i32 0, i32 7
  %512 = load i32, i32* %511, align 4
  %513 = add nsw i32 %512, 1
  store i32 %513, i32* %511, align 4
  br label %514

; <label>:514:                                    ; preds = %503, %493
  %515 = load i32, i32* @x.25
  %516 = load i32, i32* @y.26
  %517 = sub i32 %515, 1
  %518 = mul i32 %515, %517
  %519 = urem i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %516, 10
  %522 = or i1 %520, %521
  br i1 %522, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %514
  %523 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %524 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %523, i32 0, i32 4
  %525 = bitcast %union.varray_data_tag* %524 to [1 x %struct.reg_info_def*]*
  %526 = load i32, i32* %16, align 4
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %525, i64 0, i64 %527
  %529 = load %struct.reg_info_def*, %struct.reg_info_def** %528, align 8
  %530 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %529, i32 0, i32 0
  %531 = load i32, i32* %530, align 4
  %532 = load i32, i32* %19, align 4
  %533 = icmp eq i32 %531, %532
  %534 = load i32, i32* @x.25
  %535 = load i32, i32* @y.26
  %536 = sub i32 %534, 1
  %537 = mul i32 %534, %536
  %538 = urem i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = icmp slt i32 %535, 10
  %541 = or i1 %539, %540
  br i1 %541, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %533, label %542, label %568

; <label>:542:                                    ; preds = %originalBBpart248
  %543 = load i32, i32* @x.25
  %544 = load i32, i32* @y.26
  %545 = sub i32 %543, 1
  %546 = mul i32 %543, %545
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %548, %549
  br i1 %550, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %542
  %551 = load i32, i32* %20, align 4
  %552 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %553 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %552, i32 0, i32 4
  %554 = bitcast %union.varray_data_tag* %553 to [1 x %struct.reg_info_def*]*
  %555 = load i32, i32* %16, align 4
  %556 = sext i32 %555 to i64
  %557 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %554, i64 0, i64 %556
  %558 = load %struct.reg_info_def*, %struct.reg_info_def** %557, align 8
  %559 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %558, i32 0, i32 0
  store i32 %551, i32* %559, align 4
  %560 = load i32, i32* @x.25
  %561 = load i32, i32* @y.26
  %562 = sub i32 %560, 1
  %563 = mul i32 %560, %562
  %564 = urem i32 %563, 2
  %565 = icmp eq i32 %564, 0
  %566 = icmp slt i32 %561, 10
  %567 = or i1 %565, %566
  br i1 %567, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %568

; <label>:568:                                    ; preds = %originalBBpart252, %originalBBpart248
  %569 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %570 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %569, i32 0, i32 4
  %571 = bitcast %union.varray_data_tag* %570 to [1 x %struct.reg_info_def*]*
  %572 = load i32, i32* %16, align 4
  %573 = sext i32 %572 to i64
  %574 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %571, i64 0, i64 %573
  %575 = load %struct.reg_info_def*, %struct.reg_info_def** %574, align 8
  %576 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %575, i32 0, i32 1
  %577 = load i32, i32* %576, align 4
  %578 = load i32, i32* %19, align 4
  %579 = icmp eq i32 %577, %578
  br i1 %579, label %580, label %590

; <label>:580:                                    ; preds = %568
  %581 = load i32, i32* %20, align 4
  %582 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %583 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %582, i32 0, i32 4
  %584 = bitcast %union.varray_data_tag* %583 to [1 x %struct.reg_info_def*]*
  %585 = load i32, i32* %16, align 4
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %584, i64 0, i64 %586
  %588 = load %struct.reg_info_def*, %struct.reg_info_def** %587, align 8
  %589 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %588, i32 0, i32 1
  store i32 %581, i32* %589, align 4
  br label %590

; <label>:590:                                    ; preds = %580, %568
  %591 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %592 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %591, i32 0, i32 4
  %593 = bitcast %union.varray_data_tag* %592 to [1 x %struct.reg_info_def*]*
  %594 = load i32, i32* %16, align 4
  %595 = sext i32 %594 to i64
  %596 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %593, i64 0, i64 %595
  %597 = load %struct.reg_info_def*, %struct.reg_info_def** %596, align 8
  %598 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %597, i32 0, i32 2
  %599 = load i32, i32* %598, align 4
  %600 = load i32, i32* %19, align 4
  %601 = icmp eq i32 %599, %600
  br i1 %601, label %602, label %612

; <label>:602:                                    ; preds = %590
  %603 = load i32, i32* %20, align 4
  %604 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %605 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %604, i32 0, i32 4
  %606 = bitcast %union.varray_data_tag* %605 to [1 x %struct.reg_info_def*]*
  %607 = load i32, i32* %16, align 4
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %606, i64 0, i64 %608
  %610 = load %struct.reg_info_def*, %struct.reg_info_def** %609, align 8
  %611 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %610, i32 0, i32 2
  store i32 %603, i32* %611, align 4
  br label %612

; <label>:612:                                    ; preds = %602, %590
  br label %613

; <label>:613:                                    ; preds = %612, %originalBBpart220, %199, %190, %originalBBpart216, %71, %64, %58, %originalBBpart2, %4
  %614 = load i32, i32* @x.25
  %615 = load i32, i32* @y.26
  %616 = sub i32 %614, 1
  %617 = mul i32 %614, %616
  %618 = urem i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = icmp slt i32 %615, 10
  %621 = or i1 %619, %620
  br i1 %621, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %613
  %622 = load i32, i32* @x.25
  %623 = load i32, i32* @y.26
  %624 = sub i32 %622, 1
  %625 = mul i32 %622, %624
  %626 = urem i32 %625, 2
  %627 = icmp eq i32 %626, 0
  %628 = icmp slt i32 %623, 10
  %629 = or i1 %627, %628
  br i1 %629, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %27
  %630 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %631 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %630, i32 0, i32 4
  %632 = bitcast %union.varray_data_tag* %631 to [1 x %struct.reg_info_def*]*
  %633 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %634 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %633, i32 0, i32 1
  %635 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %634, i64 0, i64 0
  %636 = bitcast %union.rtunion_def* %635 to i32*
  %637 = load i32, i32* %636, align 8
  %638 = zext i32 %637 to i64
  %639 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %632, i64 0, i64 %638
  %640 = load %struct.reg_info_def*, %struct.reg_info_def** %639, align 8
  %641 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %640, i32 0, i32 7
  %642 = load i32, i32* %641, align 4
  %643 = icmp sgt i32 %642, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %96
  %644 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %645 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %644, i32 0, i32 1
  %646 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %645, i64 0, i64 3
  %647 = bitcast %union.rtunion_def* %646 to %struct.rtx_def**
  %648 = load %struct.rtx_def*, %struct.rtx_def** %647, align 8
  %649 = bitcast %struct.rtx_def* %648 to i32*
  %650 = load i32, i32* %649, align 8
  %651 = and i32 %650, 65535
  %652 = icmp eq i32 %651, 47
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %128
  %653 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %654 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %655 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %654, i32 0, i32 1
  %656 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %655, i64 0, i64 3
  %657 = bitcast %union.rtunion_def* %656 to %struct.rtx_def**
  %658 = load %struct.rtx_def*, %struct.rtx_def** %657, align 8
  %659 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %653, %struct.rtx_def* %658)
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %152
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %171
  store %struct.rtx_def* %172, %struct.rtx_def** %12, align 8
  %660 = icmp ne %struct.rtx_def* %172, null
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %234
  %661 = load i32, i32* %21, align 4
  %662 = load %struct.function*, %struct.function** @cfun, align 8
  %663 = getelementptr inbounds %struct.function, %struct.function* %662, i32 0, i32 3
  %664 = load %struct.emit_status*, %struct.emit_status** %663, align 8
  %665 = getelementptr inbounds %struct.emit_status, %struct.emit_status* %664, i32 0, i32 0
  store i32 %661, i32* %665, align 8
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %278
  %666 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %667 = icmp ne %struct.rtx_def* %666, null
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %310
  %668 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %669 = load %struct.rtx_def**, %struct.rtx_def*** %15, align 8
  store %struct.rtx_def* %668, %struct.rtx_def** %669, align 8
  %670 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %671 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %670, i32 0, i32 1
  %672 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %671, i64 0, i64 1
  %673 = bitcast %union.rtunion_def* %672 to %struct.rtx_def**
  store %struct.rtx_def** %673, %struct.rtx_def*** %15, align 8
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %343
  %674 = load %struct.rtx_def**, %struct.rtx_def*** %15, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %674, align 8
  %675 = load %struct.rtx_def**, %struct.rtx_def*** %14, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %675, align 8
  %676 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %677 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %676, i32 0, i32 1
  %678 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %677, i64 0, i64 0
  %679 = bitcast %union.rtunion_def* %678 to i32*
  %680 = load i32, i32* %679, align 8
  store i32 %680, i32* %19, align 4
  %681 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %682 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %681, i32 0, i32 1
  %683 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %682, i64 0, i64 0
  %684 = bitcast %union.rtunion_def* %683 to i32*
  %685 = load i32, i32* %684, align 8
  store i32 %685, i32* %20, align 4
  %686 = load i32, i32* %19, align 4
  %687 = load i32, i32* %8, align 4
  %688 = icmp slt i32 %686, %687
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %375
  %689 = load i32*, i32** @regmove_bb_head, align 8
  %690 = load i32, i32* %19, align 4
  %691 = sext i32 %690 to i64
  %692 = getelementptr inbounds i32, i32* %689, i64 %691
  %693 = load i32, i32* %692, align 4
  store i32 %693, i32* %18, align 4
  %694 = load i32, i32* %18, align 4
  %695 = icmp sge i32 %694, 0
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %399
  %696 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %697 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %698 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %697, i32 0, i32 4
  %699 = bitcast %union.varray_data_tag* %698 to [1 x %struct.basic_block_def*]*
  %700 = load i32, i32* %18, align 4
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %699, i64 0, i64 %701
  %703 = load %struct.basic_block_def*, %struct.basic_block_def** %702, align 8
  %704 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %703, i32 0, i32 0
  store %struct.rtx_def* %696, %struct.rtx_def** %704, align 8
  %705 = load i32*, i32** @regmove_bb_head, align 8
  %706 = load i32, i32* %19, align 4
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds i32, i32* %705, i64 %707
  store i32 -1, i32* %708, align 4
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %467
  %709 = load i32, i32* %20, align 4
  %710 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %711 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %710, i32 0, i32 4
  %712 = bitcast %union.varray_data_tag* %711 to [1 x %struct.reg_info_def*]*
  %713 = load i32, i32* %17, align 4
  %714 = sext i32 %713 to i64
  %715 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %712, i64 0, i64 %714
  %716 = load %struct.reg_info_def*, %struct.reg_info_def** %715, align 8
  %717 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %716, i32 0, i32 0
  store i32 %709, i32* %717, align 4
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %514
  %718 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %719 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %718, i32 0, i32 4
  %720 = bitcast %union.varray_data_tag* %719 to [1 x %struct.reg_info_def*]*
  %721 = load i32, i32* %16, align 4
  %722 = sext i32 %721 to i64
  %723 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %720, i64 0, i64 %722
  %724 = load %struct.reg_info_def*, %struct.reg_info_def** %723, align 8
  %725 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %724, i32 0, i32 0
  %726 = load i32, i32* %725, align 4
  %727 = load i32, i32* %19, align 4
  %728 = icmp eq i32 %726, %727
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %542
  %729 = load i32, i32* %20, align 4
  %730 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %731 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %730, i32 0, i32 4
  %732 = bitcast %union.varray_data_tag* %731 to [1 x %struct.reg_info_def*]*
  %733 = load i32, i32* %16, align 4
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %732, i64 0, i64 %734
  %736 = load %struct.reg_info_def*, %struct.reg_info_def** %735, align 8
  %737 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %736, i32 0, i32 0
  store i32 %729, i32* %737, align 4
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %613
  br label %originalBB54
}

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: noinline nounwind uwtable
define void @combine_stack_adjustments() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  br label %2

; <label>:2:                                      ; preds = %14, %0
  %3 = load i32, i32* %1, align 4
  %4 = load i32, i32* @n_basic_blocks, align 4
  %5 = icmp slt i32 %3, %4
  br i1 %5, label %6, label %17

; <label>:6:                                      ; preds = %2
  %7 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %8 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %7, i32 0, i32 4
  %9 = bitcast %union.varray_data_tag* %8 to [1 x %struct.basic_block_def*]*
  %10 = load i32, i32* %1, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %9, i64 0, i64 %11
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %12, align 8
  call void @combine_stack_adjustments_for_block(%struct.basic_block_def* %13)
  br label %14

; <label>:14:                                     ; preds = %6
  %15 = load i32, i32* %1, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %1, align 4
  br label %2

; <label>:17:                                     ; preds = %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @combine_stack_adjustments_for_block(%struct.basic_block_def*) #0 {
  %2 = alloca %struct.basic_block_def*, align 8
  %3 = alloca i64, align 8
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %struct.csa_memlist*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  %9 = alloca %struct.record_stack_memrefs_data, align 8
  %10 = alloca i8, align 1
  %11 = alloca %struct.rtx_def*, align 8
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca i64, align 8
  store %struct.basic_block_def* %0, %struct.basic_block_def** %2, align 8
  store i64 0, i64* %3, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  store %struct.csa_memlist* null, %struct.csa_memlist** %5, align 8
  store i8 0, i8* %10, align 1
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %2, align 8
  %15 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %14, i32 0, i32 0
  %16 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  store %struct.rtx_def* %16, %struct.rtx_def** %6, align 8
  br label %17

; <label>:17:                                     ; preds = %originalBBpart2159, %1
  %18 = load i8, i8* %10, align 1
  %19 = trunc i8 %18 to i1
  %20 = xor i1 %19, true
  br i1 %20, label %21, label %742

; <label>:21:                                     ; preds = %17
  %22 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %2, align 8
  %24 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i32 0, i32 1
  %25 = load %struct.rtx_def*, %struct.rtx_def** %24, align 8
  %26 = icmp eq %struct.rtx_def* %22, %25
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %10, align 1
  %28 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %29, i64 0, i64 2
  %31 = bitcast %union.rtunion_def* %30 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  store %struct.rtx_def* %32, %struct.rtx_def** %7, align 8
  %33 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 65535
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %40, 105
  br i1 %41, label %43, label %42

; <label>:42:                                     ; preds = %21
  br label %724

; <label>:43:                                     ; preds = %21
  %44 = load i32, i32* @x.29
  %45 = load i32, i32* @y.30
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %43
  %52 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %53 = call %struct.rtx_def* @single_set_for_csa(%struct.rtx_def* %52)
  store %struct.rtx_def* %53, %struct.rtx_def** %8, align 8
  %54 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %55 = icmp ne %struct.rtx_def* %54, null
  %56 = load i32, i32* @x.29
  %57 = load i32, i32* @y.30
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %55, label %64, label %588

; <label>:64:                                     ; preds = %originalBBpart2
  %65 = load i32, i32* @x.29
  %66 = load i32, i32* @y.30
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %64
  %73 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1
  %75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %74, i64 0, i64 0
  %76 = bitcast %union.rtunion_def* %75 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %76, align 8
  store %struct.rtx_def* %77, %struct.rtx_def** %11, align 8
  %78 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %79, i64 0, i64 1
  %81 = bitcast %union.rtunion_def* %80 to %struct.rtx_def**
  %82 = load %struct.rtx_def*, %struct.rtx_def** %81, align 8
  store %struct.rtx_def* %82, %struct.rtx_def** %12, align 8
  %83 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %84 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %85 = icmp eq %struct.rtx_def* %83, %84
  %86 = load i32, i32* @x.29
  %87 = load i32, i32* @y.30
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %85, label %94, label %340

; <label>:94:                                     ; preds = %originalBBpart24
  %95 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %96 = bitcast %struct.rtx_def* %95 to i32*
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 65535
  %99 = icmp eq i32 %98, 75
  br i1 %99, label %100, label %340

; <label>:100:                                    ; preds = %94
  %101 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %102, i64 0, i64 0
  %104 = bitcast %union.rtunion_def* %103 to %struct.rtx_def**
  %105 = load %struct.rtx_def*, %struct.rtx_def** %104, align 8
  %106 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %107 = icmp eq %struct.rtx_def* %105, %106
  br i1 %107, label %108, label %340

; <label>:108:                                    ; preds = %100
  %109 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1
  %111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %110, i64 0, i64 1
  %112 = bitcast %union.rtunion_def* %111 to %struct.rtx_def**
  %113 = load %struct.rtx_def*, %struct.rtx_def** %112, align 8
  %114 = bitcast %struct.rtx_def* %113 to i32*
  %115 = load i32, i32* %114, align 8
  %116 = and i32 %115, 65535
  %117 = icmp eq i32 %116, 54
  br i1 %117, label %118, label %340

; <label>:118:                                    ; preds = %108
  %119 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %120, i64 0, i64 1
  %122 = bitcast %union.rtunion_def* %121 to %struct.rtx_def**
  %123 = load %struct.rtx_def*, %struct.rtx_def** %122, align 8
  %124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1
  %125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %124, i64 0, i64 0
  %126 = bitcast %union.rtunion_def* %125 to i64*
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %13, align 8
  %128 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %129 = icmp ne %struct.rtx_def* %128, null
  br i1 %129, label %149, label %130

; <label>:130:                                    ; preds = %118
  %131 = load i32, i32* @x.29
  %132 = load i32, i32* @y.30
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %130
  %139 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  store %struct.rtx_def* %139, %struct.rtx_def** %4, align 8
  %140 = load i64, i64* %13, align 8
  store i64 %140, i64* %3, align 8
  %141 = load i32, i32* @x.29
  %142 = load i32, i32* @y.30
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %724

; <label>:149:                                    ; preds = %118
  br i1 true, label %150, label %153

; <label>:150:                                    ; preds = %149
  %151 = load i64, i64* %13, align 8
  %152 = icmp sle i64 %151, 0
  br i1 %152, label %172, label %236

; <label>:153:                                    ; preds = %149
  %154 = load i32, i32* @x.29
  %155 = load i32, i32* @y.30
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %153
  %162 = load i64, i64* %13, align 8
  %163 = icmp sge i64 %162, 0
  %164 = load i32, i32* @x.29
  %165 = load i32, i32* @y.30
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %163, label %172, label %236

; <label>:172:                                    ; preds = %originalBBpart212, %150
  %173 = load i32, i32* @x.29
  %174 = load i32, i32* @y.30
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %172
  %181 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %182 = load %struct.csa_memlist*, %struct.csa_memlist** %5, align 8
  %183 = load i64, i64* %3, align 8
  %184 = load i64, i64* %13, align 8
  %185 = add nsw i64 %183, %184
  %186 = load i64, i64* %13, align 8
  %187 = call i32 @try_apply_stack_adjustment(%struct.rtx_def* %181, %struct.csa_memlist* %182, i64 %185, i64 %186)
  %188 = icmp ne i32 %187, 0
  %189 = load i32, i32* @x.29
  %190 = load i32, i32* @y.30
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart222, label %originalBB14alteredBB

originalBBpart222:                                ; preds = %originalBB14
  br i1 %188, label %197, label %219

; <label>:197:                                    ; preds = %originalBBpart222
  %198 = load i32, i32* @x.29
  %199 = load i32, i32* @y.30
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %originalBB24alteredBB, %197
  %206 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %207 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %206)
  %208 = load i64, i64* %13, align 8
  %209 = load i64, i64* %3, align 8
  %210 = add nsw i64 %209, %208
  store i64 %210, i64* %3, align 8
  %211 = load i32, i32* @x.29
  %212 = load i32, i32* @y.30
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart228, label %originalBB24alteredBB

originalBBpart228:                                ; preds = %originalBB24
  br label %724

; <label>:219:                                    ; preds = %originalBBpart222
  %220 = load i32, i32* @x.29
  %221 = load i32, i32* @y.30
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %219
  %228 = load i32, i32* @x.29
  %229 = load i32, i32* @y.30
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %295

; <label>:236:                                    ; preds = %originalBBpart212, %150
  %237 = load i32, i32* @x.29
  %238 = load i32, i32* @y.30
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %236
  %245 = load i32, i32* @x.29
  %246 = load i32, i32* @y.30
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 true, label %253, label %256

; <label>:253:                                    ; preds = %originalBBpart236
  %254 = load i64, i64* %3, align 8
  %255 = icmp sge i64 %254, 0
  br i1 %255, label %259, label %294

; <label>:256:                                    ; preds = %originalBBpart236
  %257 = load i64, i64* %3, align 8
  %258 = icmp sle i64 %257, 0
  br i1 %258, label %259, label %294

; <label>:259:                                    ; preds = %256, %253
  %260 = load i32, i32* @x.29
  %261 = load i32, i32* @y.30
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %259
  %268 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %269 = load %struct.csa_memlist*, %struct.csa_memlist** %5, align 8
  %270 = load i64, i64* %3, align 8
  %271 = load i64, i64* %13, align 8
  %272 = add nsw i64 %270, %271
  %273 = load i64, i64* %3, align 8
  %274 = sub nsw i64 0, %273
  %275 = call i32 @try_apply_stack_adjustment(%struct.rtx_def* %268, %struct.csa_memlist* %269, i64 %272, i64 %274)
  %276 = icmp ne i32 %275, 0
  %277 = load i32, i32* @x.29
  %278 = load i32, i32* @y.30
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart250, label %originalBB38alteredBB

originalBBpart250:                                ; preds = %originalBB38
  br i1 %276, label %285, label %293

; <label>:285:                                    ; preds = %originalBBpart250
  %286 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %287 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %286)
  %288 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  store %struct.rtx_def* %288, %struct.rtx_def** %4, align 8
  %289 = load i64, i64* %13, align 8
  %290 = load i64, i64* %3, align 8
  %291 = add nsw i64 %290, %289
  store i64 %291, i64* %3, align 8
  %292 = load %struct.csa_memlist*, %struct.csa_memlist** %5, align 8
  call void @free_csa_memlist(%struct.csa_memlist* %292)
  store %struct.csa_memlist* null, %struct.csa_memlist** %5, align 8
  br label %724

; <label>:293:                                    ; preds = %originalBBpart250
  br label %294

; <label>:294:                                    ; preds = %293, %256, %253
  br label %295

; <label>:295:                                    ; preds = %294, %originalBBpart232
  %296 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %297 = icmp ne %struct.rtx_def* %296, null
  br i1 %297, label %298, label %336

; <label>:298:                                    ; preds = %295
  %299 = load i32, i32* @x.29
  %300 = load i32, i32* @y.30
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %298
  %307 = load i64, i64* %3, align 8
  %308 = icmp eq i64 %307, 0
  %309 = load i32, i32* @x.29
  %310 = load i32, i32* @y.30
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br i1 %308, label %317, label %336

; <label>:317:                                    ; preds = %originalBBpart254
  %318 = load i32, i32* @x.29
  %319 = load i32, i32* @y.30
  %320 = sub i32 %318, 1
  %321 = mul i32 %318, %320
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %323, %324
  br i1 %325, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %317
  %326 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %327 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %326)
  %328 = load i32, i32* @x.29
  %329 = load i32, i32* @y.30
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br label %336

; <label>:336:                                    ; preds = %originalBBpart258, %originalBBpart254, %295
  %337 = load %struct.csa_memlist*, %struct.csa_memlist** %5, align 8
  call void @free_csa_memlist(%struct.csa_memlist* %337)
  store %struct.csa_memlist* null, %struct.csa_memlist** %5, align 8
  %338 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  store %struct.rtx_def* %338, %struct.rtx_def** %4, align 8
  %339 = load i64, i64* %13, align 8
  store i64 %339, i64* %3, align 8
  br label %724

; <label>:340:                                    ; preds = %108, %100, %94, %originalBBpart24
  %341 = load %struct.csa_memlist*, %struct.csa_memlist** %5, align 8
  %342 = icmp eq %struct.csa_memlist* %341, null
  br i1 %342, label %343, label %587

; <label>:343:                                    ; preds = %340
  %344 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %345 = bitcast %struct.rtx_def* %344 to i32*
  %346 = load i32, i32* %345, align 8
  %347 = and i32 %346, 65535
  %348 = icmp eq i32 %347, 66
  br i1 %348, label %349, label %587

; <label>:349:                                    ; preds = %343
  %350 = load i32, i32* @x.29
  %351 = load i32, i32* @y.30
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %originalBB60alteredBB, %349
  %358 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %359 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %358, i32 0, i32 1
  %360 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %359, i64 0, i64 0
  %361 = bitcast %union.rtunion_def* %360 to %struct.rtx_def**
  %362 = load %struct.rtx_def*, %struct.rtx_def** %361, align 8
  %363 = bitcast %struct.rtx_def* %362 to i32*
  %364 = load i32, i32* %363, align 8
  %365 = and i32 %364, 65535
  %366 = icmp eq i32 %365, 96
  %367 = load i32, i32* @x.29
  %368 = load i32, i32* @y.30
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBBpart267, label %originalBB60alteredBB

originalBBpart267:                                ; preds = %originalBB60
  br i1 %366, label %375, label %403

; <label>:375:                                    ; preds = %originalBBpart267
  %376 = load i32, i32* @x.29
  %377 = load i32, i32* @y.30
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %originalBB69alteredBB, %375
  %384 = load i64, i64* %3, align 8
  %385 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %386 = bitcast %struct.rtx_def* %385 to i32*
  %387 = load i32, i32* %386, align 8
  %388 = lshr i32 %387, 16
  %389 = and i32 %388, 255
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %390
  %392 = load i8, i8* %391, align 1
  %393 = zext i8 %392 to i64
  %394 = icmp eq i64 %384, %393
  %395 = load i32, i32* @x.29
  %396 = load i32, i32* @y.30
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBBpart291, label %originalBB69alteredBB

originalBBpart291:                                ; preds = %originalBB69
  br i1 %394, label %530, label %403

; <label>:403:                                    ; preds = %originalBBpart291, %originalBBpart267
  %404 = load i32, i32* @x.29
  %405 = load i32, i32* @y.30
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %originalBB93alteredBB, %403
  %412 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %413 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %412, i32 0, i32 1
  %414 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %413, i64 0, i64 0
  %415 = bitcast %union.rtunion_def* %414 to %struct.rtx_def**
  %416 = load %struct.rtx_def*, %struct.rtx_def** %415, align 8
  %417 = bitcast %struct.rtx_def* %416 to i32*
  %418 = load i32, i32* %417, align 8
  %419 = and i32 %418, 65535
  %420 = icmp eq i32 %419, 100
  %421 = load i32, i32* @x.29
  %422 = load i32, i32* @y.30
  %423 = sub i32 %421, 1
  %424 = mul i32 %421, %423
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %426, %427
  br i1 %428, label %originalBBpart2105, label %originalBB93alteredBB

originalBBpart2105:                               ; preds = %originalBB93
  br i1 %420, label %429, label %587

; <label>:429:                                    ; preds = %originalBBpart2105
  %430 = load i32, i32* @x.29
  %431 = load i32, i32* @y.30
  %432 = sub i32 %430, 1
  %433 = mul i32 %430, %432
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %435, %436
  br i1 %437, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %originalBB107alteredBB, %429
  %438 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %439 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %438, i32 0, i32 1
  %440 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %439, i64 0, i64 0
  %441 = bitcast %union.rtunion_def* %440 to %struct.rtx_def**
  %442 = load %struct.rtx_def*, %struct.rtx_def** %441, align 8
  %443 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %442, i32 0, i32 1
  %444 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %443, i64 0, i64 1
  %445 = bitcast %union.rtunion_def* %444 to %struct.rtx_def**
  %446 = load %struct.rtx_def*, %struct.rtx_def** %445, align 8
  %447 = bitcast %struct.rtx_def* %446 to i32*
  %448 = load i32, i32* %447, align 8
  %449 = and i32 %448, 65535
  %450 = icmp eq i32 %449, 75
  %451 = load i32, i32* @x.29
  %452 = load i32, i32* @y.30
  %453 = sub i32 %451, 1
  %454 = mul i32 %451, %453
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %456, %457
  br i1 %458, label %originalBBpart2120, label %originalBB107alteredBB

originalBBpart2120:                               ; preds = %originalBB107
  br i1 %450, label %459, label %587

; <label>:459:                                    ; preds = %originalBBpart2120
  %460 = load i32, i32* @x.29
  %461 = load i32, i32* @y.30
  %462 = sub i32 %460, 1
  %463 = mul i32 %460, %462
  %464 = urem i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = icmp slt i32 %461, 10
  %467 = or i1 %465, %466
  br i1 %467, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %originalBB122alteredBB, %459
  %468 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %469 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %468, i32 0, i32 1
  %470 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %469, i64 0, i64 0
  %471 = bitcast %union.rtunion_def* %470 to %struct.rtx_def**
  %472 = load %struct.rtx_def*, %struct.rtx_def** %471, align 8
  %473 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %472, i32 0, i32 1
  %474 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %473, i64 0, i64 1
  %475 = bitcast %union.rtunion_def* %474 to %struct.rtx_def**
  %476 = load %struct.rtx_def*, %struct.rtx_def** %475, align 8
  %477 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %476, i32 0, i32 1
  %478 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %477, i64 0, i64 0
  %479 = bitcast %union.rtunion_def* %478 to %struct.rtx_def**
  %480 = load %struct.rtx_def*, %struct.rtx_def** %479, align 8
  %481 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %482 = icmp eq %struct.rtx_def* %480, %481
  %483 = load i32, i32* @x.29
  %484 = load i32, i32* @y.30
  %485 = sub i32 %483, 1
  %486 = mul i32 %483, %485
  %487 = urem i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %488, %489
  br i1 %490, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br i1 %482, label %491, label %587

; <label>:491:                                    ; preds = %originalBBpart2124
  %492 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %493 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %492, i32 0, i32 1
  %494 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %493, i64 0, i64 0
  %495 = bitcast %union.rtunion_def* %494 to %struct.rtx_def**
  %496 = load %struct.rtx_def*, %struct.rtx_def** %495, align 8
  %497 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %496, i32 0, i32 1
  %498 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %497, i64 0, i64 1
  %499 = bitcast %union.rtunion_def* %498 to %struct.rtx_def**
  %500 = load %struct.rtx_def*, %struct.rtx_def** %499, align 8
  %501 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %500, i32 0, i32 1
  %502 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %501, i64 0, i64 1
  %503 = bitcast %union.rtunion_def* %502 to %struct.rtx_def**
  %504 = load %struct.rtx_def*, %struct.rtx_def** %503, align 8
  %505 = bitcast %struct.rtx_def* %504 to i32*
  %506 = load i32, i32* %505, align 8
  %507 = and i32 %506, 65535
  %508 = icmp eq i32 %507, 54
  br i1 %508, label %509, label %587

; <label>:509:                                    ; preds = %491
  %510 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %511 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %510, i32 0, i32 1
  %512 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %511, i64 0, i64 0
  %513 = bitcast %union.rtunion_def* %512 to %struct.rtx_def**
  %514 = load %struct.rtx_def*, %struct.rtx_def** %513, align 8
  %515 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %514, i32 0, i32 1
  %516 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %515, i64 0, i64 1
  %517 = bitcast %union.rtunion_def* %516 to %struct.rtx_def**
  %518 = load %struct.rtx_def*, %struct.rtx_def** %517, align 8
  %519 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %518, i32 0, i32 1
  %520 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %519, i64 0, i64 1
  %521 = bitcast %union.rtunion_def* %520 to %struct.rtx_def**
  %522 = load %struct.rtx_def*, %struct.rtx_def** %521, align 8
  %523 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %522, i32 0, i32 1
  %524 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %523, i64 0, i64 0
  %525 = bitcast %union.rtunion_def* %524 to i64*
  %526 = load i64, i64* %525, align 8
  %527 = load i64, i64* %3, align 8
  %528 = sub nsw i64 0, %527
  %529 = icmp eq i64 %526, %528
  br i1 %529, label %530, label %587

; <label>:530:                                    ; preds = %509, %originalBBpart291
  %531 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %532 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %531, i32 0, i32 1
  %533 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %532, i64 0, i64 0
  %534 = bitcast %union.rtunion_def* %533 to %struct.rtx_def**
  %535 = load %struct.rtx_def*, %struct.rtx_def** %534, align 8
  %536 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %535, i32 0, i32 1
  %537 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %536, i64 0, i64 0
  %538 = bitcast %union.rtunion_def* %537 to %struct.rtx_def**
  %539 = load %struct.rtx_def*, %struct.rtx_def** %538, align 8
  %540 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %541 = icmp eq %struct.rtx_def* %539, %540
  br i1 %541, label %542, label %587

; <label>:542:                                    ; preds = %530
  %543 = load i32, i32* @x.29
  %544 = load i32, i32* @y.30
  %545 = sub i32 %543, 1
  %546 = mul i32 %543, %545
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %548, %549
  br i1 %550, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %542
  %551 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %552 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %553 = call i32 @reg_mentioned_p(%struct.rtx_def* %551, %struct.rtx_def* %552)
  %554 = icmp ne i32 %553, 0
  %555 = load i32, i32* @x.29
  %556 = load i32, i32* @y.30
  %557 = sub i32 %555, 1
  %558 = mul i32 %555, %557
  %559 = urem i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = icmp slt i32 %556, 10
  %562 = or i1 %560, %561
  br i1 %562, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br i1 %554, label %587, label %563

; <label>:563:                                    ; preds = %originalBBpart2128
  %564 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %565 = bitcast %struct.rtx_def* %564 to i32*
  %566 = load i32, i32* %565, align 8
  %567 = lshr i32 %566, 16
  %568 = and i32 %567, 255
  %569 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %570 = call i32 @memory_address_p(i32 %568, %struct.rtx_def* %569)
  %571 = icmp ne i32 %570, 0
  br i1 %571, label %572, label %587

; <label>:572:                                    ; preds = %563
  %573 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %574 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %575 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %574, i32 0, i32 1
  %576 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %575, i64 0, i64 0
  %577 = bitcast %union.rtunion_def* %576 to %struct.rtx_def**
  %578 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %579 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %580 = call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %578, %struct.rtx_def* %579)
  %581 = call i32 @validate_change(%struct.rtx_def* %573, %struct.rtx_def** %577, %struct.rtx_def* %580, i32 0)
  %582 = icmp ne i32 %581, 0
  br i1 %582, label %583, label %587

; <label>:583:                                    ; preds = %572
  %584 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %585 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %584)
  %586 = load %struct.csa_memlist*, %struct.csa_memlist** %5, align 8
  call void @free_csa_memlist(%struct.csa_memlist* %586)
  store %struct.csa_memlist* null, %struct.csa_memlist** %5, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  store i64 0, i64* %3, align 8
  br label %724

; <label>:587:                                    ; preds = %572, %563, %originalBBpart2128, %530, %509, %491, %originalBBpart2124, %originalBBpart2120, %originalBBpart2105, %343, %340
  br label %588

; <label>:588:                                    ; preds = %587, %originalBBpart2
  %589 = load i32, i32* @x.29
  %590 = load i32, i32* @y.30
  %591 = sub i32 %589, 1
  %592 = mul i32 %589, %591
  %593 = urem i32 %592, 2
  %594 = icmp eq i32 %593, 0
  %595 = icmp slt i32 %590, 10
  %596 = or i1 %594, %595
  br i1 %596, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %originalBB130alteredBB, %588
  %597 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %598 = getelementptr inbounds %struct.record_stack_memrefs_data, %struct.record_stack_memrefs_data* %9, i32 0, i32 0
  store %struct.rtx_def* %597, %struct.rtx_def** %598, align 8
  %599 = load %struct.csa_memlist*, %struct.csa_memlist** %5, align 8
  %600 = getelementptr inbounds %struct.record_stack_memrefs_data, %struct.record_stack_memrefs_data* %9, i32 0, i32 1
  store %struct.csa_memlist* %599, %struct.csa_memlist** %600, align 8
  %601 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %602 = bitcast %struct.rtx_def* %601 to i32*
  %603 = load i32, i32* %602, align 8
  %604 = and i32 %603, 65535
  %605 = icmp ne i32 %604, 34
  %606 = load i32, i32* @x.29
  %607 = load i32, i32* @y.30
  %608 = sub i32 %606, 1
  %609 = mul i32 %606, %608
  %610 = urem i32 %609, 2
  %611 = icmp eq i32 %610, 0
  %612 = icmp slt i32 %607, 10
  %613 = or i1 %611, %612
  br i1 %613, label %originalBBpart2139, label %originalBB130alteredBB

originalBBpart2139:                               ; preds = %originalBB130
  br i1 %605, label %614, label %660

; <label>:614:                                    ; preds = %originalBBpart2139
  %615 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %616 = icmp ne %struct.rtx_def* %615, null
  br i1 %616, label %617, label %660

; <label>:617:                                    ; preds = %614
  %618 = load i32, i32* @x.29
  %619 = load i32, i32* @y.30
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %originalBB141alteredBB, %617
  %626 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %627 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %626, i32 0, i32 1
  %628 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %627, i64 0, i64 3
  %629 = bitcast %union.rtunion_def* %628 to %struct.rtx_def**
  %630 = bitcast %struct.record_stack_memrefs_data* %9 to i8*
  %631 = call i32 @for_each_rtx(%struct.rtx_def** %629, i32 (%struct.rtx_def**, i8*)* @record_stack_memrefs, i8* %630)
  %632 = icmp ne i32 %631, 0
  %633 = load i32, i32* @x.29
  %634 = load i32, i32* @y.30
  %635 = sub i32 %633, 1
  %636 = mul i32 %633, %635
  %637 = urem i32 %636, 2
  %638 = icmp eq i32 %637, 0
  %639 = icmp slt i32 %634, 10
  %640 = or i1 %638, %639
  br i1 %640, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br i1 %632, label %660, label %641

; <label>:641:                                    ; preds = %originalBBpart2143
  %642 = load i32, i32* @x.29
  %643 = load i32, i32* @y.30
  %644 = sub i32 %642, 1
  %645 = mul i32 %642, %644
  %646 = urem i32 %645, 2
  %647 = icmp eq i32 %646, 0
  %648 = icmp slt i32 %643, 10
  %649 = or i1 %647, %648
  br i1 %649, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %originalBB145alteredBB, %641
  %650 = getelementptr inbounds %struct.record_stack_memrefs_data, %struct.record_stack_memrefs_data* %9, i32 0, i32 1
  %651 = load %struct.csa_memlist*, %struct.csa_memlist** %650, align 8
  store %struct.csa_memlist* %651, %struct.csa_memlist** %5, align 8
  %652 = load i32, i32* @x.29
  %653 = load i32, i32* @y.30
  %654 = sub i32 %652, 1
  %655 = mul i32 %652, %654
  %656 = urem i32 %655, 2
  %657 = icmp eq i32 %656, 0
  %658 = icmp slt i32 %653, 10
  %659 = or i1 %657, %658
  br i1 %659, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br label %724

; <label>:660:                                    ; preds = %originalBBpart2143, %614, %originalBBpart2139
  %661 = getelementptr inbounds %struct.record_stack_memrefs_data, %struct.record_stack_memrefs_data* %9, i32 0, i32 1
  %662 = load %struct.csa_memlist*, %struct.csa_memlist** %661, align 8
  store %struct.csa_memlist* %662, %struct.csa_memlist** %5, align 8
  %663 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %664 = icmp ne %struct.rtx_def* %663, null
  br i1 %664, label %665, label %723

; <label>:665:                                    ; preds = %660
  %666 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %667 = bitcast %struct.rtx_def* %666 to i32*
  %668 = load i32, i32* %667, align 8
  %669 = and i32 %668, 65535
  %670 = icmp eq i32 %669, 34
  br i1 %670, label %680, label %671

; <label>:671:                                    ; preds = %665
  %672 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %673 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %674 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %673, i32 0, i32 1
  %675 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %674, i64 0, i64 3
  %676 = bitcast %union.rtunion_def* %675 to %struct.rtx_def**
  %677 = load %struct.rtx_def*, %struct.rtx_def** %676, align 8
  %678 = call i32 @reg_mentioned_p(%struct.rtx_def* %672, %struct.rtx_def* %677)
  %679 = icmp ne i32 %678, 0
  br i1 %679, label %680, label %723

; <label>:680:                                    ; preds = %671, %665
  %681 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %682 = icmp ne %struct.rtx_def* %681, null
  br i1 %682, label %683, label %721

; <label>:683:                                    ; preds = %680
  %684 = load i32, i32* @x.29
  %685 = load i32, i32* @y.30
  %686 = sub i32 %684, 1
  %687 = mul i32 %684, %686
  %688 = urem i32 %687, 2
  %689 = icmp eq i32 %688, 0
  %690 = icmp slt i32 %685, 10
  %691 = or i1 %689, %690
  br i1 %691, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %originalBB149alteredBB, %683
  %692 = load i64, i64* %3, align 8
  %693 = icmp eq i64 %692, 0
  %694 = load i32, i32* @x.29
  %695 = load i32, i32* @y.30
  %696 = sub i32 %694, 1
  %697 = mul i32 %694, %696
  %698 = urem i32 %697, 2
  %699 = icmp eq i32 %698, 0
  %700 = icmp slt i32 %695, 10
  %701 = or i1 %699, %700
  br i1 %701, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br i1 %693, label %702, label %721

; <label>:702:                                    ; preds = %originalBBpart2151
  %703 = load i32, i32* @x.29
  %704 = load i32, i32* @y.30
  %705 = sub i32 %703, 1
  %706 = mul i32 %703, %705
  %707 = urem i32 %706, 2
  %708 = icmp eq i32 %707, 0
  %709 = icmp slt i32 %704, 10
  %710 = or i1 %708, %709
  br i1 %710, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %originalBB153alteredBB, %702
  %711 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %712 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %711)
  %713 = load i32, i32* @x.29
  %714 = load i32, i32* @y.30
  %715 = sub i32 %713, 1
  %716 = mul i32 %713, %715
  %717 = urem i32 %716, 2
  %718 = icmp eq i32 %717, 0
  %719 = icmp slt i32 %714, 10
  %720 = or i1 %718, %719
  br i1 %720, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br label %721

; <label>:721:                                    ; preds = %originalBBpart2155, %originalBBpart2151, %680
  %722 = load %struct.csa_memlist*, %struct.csa_memlist** %5, align 8
  call void @free_csa_memlist(%struct.csa_memlist* %722)
  store %struct.csa_memlist* null, %struct.csa_memlist** %5, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  store i64 0, i64* %3, align 8
  br label %723

; <label>:723:                                    ; preds = %721, %671, %660
  br label %724

; <label>:724:                                    ; preds = %723, %originalBBpart2147, %583, %336, %285, %originalBBpart228, %originalBBpart28, %42
  %725 = load i32, i32* @x.29
  %726 = load i32, i32* @y.30
  %727 = sub i32 %725, 1
  %728 = mul i32 %725, %727
  %729 = urem i32 %728, 2
  %730 = icmp eq i32 %729, 0
  %731 = icmp slt i32 %726, 10
  %732 = or i1 %730, %731
  br i1 %732, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %originalBB157alteredBB, %724
  %733 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  store %struct.rtx_def* %733, %struct.rtx_def** %6, align 8
  %734 = load i32, i32* @x.29
  %735 = load i32, i32* @y.30
  %736 = sub i32 %734, 1
  %737 = mul i32 %734, %736
  %738 = urem i32 %737, 2
  %739 = icmp eq i32 %738, 0
  %740 = icmp slt i32 %735, 10
  %741 = or i1 %739, %740
  br i1 %741, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br label %17

; <label>:742:                                    ; preds = %17
  %743 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %744 = icmp ne %struct.rtx_def* %743, null
  br i1 %744, label %745, label %751

; <label>:745:                                    ; preds = %742
  %746 = load i64, i64* %3, align 8
  %747 = icmp eq i64 %746, 0
  br i1 %747, label %748, label %751

; <label>:748:                                    ; preds = %745
  %749 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %750 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %749)
  br label %751

; <label>:751:                                    ; preds = %748, %745, %742
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %43
  %752 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %753 = call %struct.rtx_def* @single_set_for_csa(%struct.rtx_def* %752)
  store %struct.rtx_def* %753, %struct.rtx_def** %8, align 8
  %754 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %755 = icmp ne %struct.rtx_def* %754, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %64
  %756 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %757 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %756, i32 0, i32 1
  %758 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %757, i64 0, i64 0
  %759 = bitcast %union.rtunion_def* %758 to %struct.rtx_def**
  %760 = load %struct.rtx_def*, %struct.rtx_def** %759, align 8
  store %struct.rtx_def* %760, %struct.rtx_def** %11, align 8
  %761 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %762 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %761, i32 0, i32 1
  %763 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %762, i64 0, i64 1
  %764 = bitcast %union.rtunion_def* %763 to %struct.rtx_def**
  %765 = load %struct.rtx_def*, %struct.rtx_def** %764, align 8
  store %struct.rtx_def* %765, %struct.rtx_def** %12, align 8
  %766 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %767 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %768 = icmp eq %struct.rtx_def* %766, %767
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %130
  %769 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  store %struct.rtx_def* %769, %struct.rtx_def** %4, align 8
  %770 = load i64, i64* %13, align 8
  store i64 %770, i64* %3, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %153
  %771 = load i64, i64* %13, align 8
  %772 = icmp sge i64 %771, 0
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %172
  %773 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %774 = load %struct.csa_memlist*, %struct.csa_memlist** %5, align 8
  %775 = load i64, i64* %3, align 8
  %776 = load i64, i64* %13, align 8
  %_ = sub i64 %775, %776
  %gen = mul i64 %_, %776
  %_15 = sub i64 %775, %776
  %gen16 = mul i64 %_15, %776
  %_17 = sub i64 0, %775
  %gen18 = add i64 %_17, %776
  %_19 = sub i64 0, %775
  %gen20 = add i64 %_19, %776
  %777 = add nsw i64 %775, %776
  %778 = load i64, i64* %13, align 8
  %779 = call i32 @try_apply_stack_adjustment(%struct.rtx_def* %773, %struct.csa_memlist* %774, i64 %777, i64 %778)
  %780 = icmp ne i32 %779, 0
  br label %originalBB14

originalBB24alteredBB:                            ; preds = %originalBB24, %197
  %781 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %782 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %781)
  %783 = load i64, i64* %13, align 8
  %784 = load i64, i64* %3, align 8
  %_25 = sub i64 0, %784
  %gen26 = add i64 %_25, %783
  %785 = add nsw i64 %784, %783
  store i64 %785, i64* %3, align 8
  br label %originalBB24

originalBB30alteredBB:                            ; preds = %originalBB30, %219
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %236
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %259
  %786 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %787 = load %struct.csa_memlist*, %struct.csa_memlist** %5, align 8
  %788 = load i64, i64* %3, align 8
  %789 = load i64, i64* %13, align 8
  %_39 = sub i64 0, %788
  %gen40 = add i64 %_39, %789
  %_41 = sub i64 0, %788
  %gen42 = add i64 %_41, %789
  %790 = add nsw i64 %788, %789
  %791 = load i64, i64* %3, align 8
  %_43 = sub i64 0, %791
  %gen44 = mul i64 %_43, %791
  %_45 = sub i64 0, %791
  %gen46 = mul i64 %_45, %791
  %_47 = shl i64 0, %791
  %_48 = shl i64 0, %791
  %792 = sub nsw i64 0, %791
  %793 = call i32 @try_apply_stack_adjustment(%struct.rtx_def* %786, %struct.csa_memlist* %787, i64 %790, i64 %792)
  %794 = icmp ne i32 %793, 0
  br label %originalBB38

originalBB52alteredBB:                            ; preds = %originalBB52, %298
  %795 = load i64, i64* %3, align 8
  %796 = icmp eq i64 %795, 0
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %317
  %797 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %798 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %797)
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %349
  %799 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %800 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %799, i32 0, i32 1
  %801 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %800, i64 0, i64 0
  %802 = bitcast %union.rtunion_def* %801 to %struct.rtx_def**
  %803 = load %struct.rtx_def*, %struct.rtx_def** %802, align 8
  %804 = bitcast %struct.rtx_def* %803 to i32*
  %805 = load i32, i32* %804, align 8
  %_61 = sub i32 0, %805
  %gen62 = add i32 %_61, 65535
  %_63 = sub i32 0, %805
  %gen64 = add i32 %_63, 65535
  %_65 = shl i32 %805, 65535
  %806 = and i32 %805, 65535
  %807 = icmp eq i32 %806, 96
  br label %originalBB60

originalBB69alteredBB:                            ; preds = %originalBB69, %375
  %808 = load i64, i64* %3, align 8
  %809 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %810 = bitcast %struct.rtx_def* %809 to i32*
  %811 = load i32, i32* %810, align 8
  %_70 = sub i32 0, %811
  %gen71 = add i32 %_70, 16
  %_72 = sub i32 0, %811
  %gen73 = add i32 %_72, 16
  %_74 = shl i32 %811, 16
  %_75 = shl i32 %811, 16
  %_76 = sub i32 %811, 16
  %gen77 = mul i32 %_76, 16
  %_78 = sub i32 0, %811
  %gen79 = add i32 %_78, 16
  %_80 = sub i32 0, %811
  %gen81 = add i32 %_80, 16
  %812 = lshr i32 %811, 16
  %_82 = shl i32 %812, 255
  %_83 = shl i32 %812, 255
  %_84 = sub i32 0, %812
  %gen85 = add i32 %_84, 255
  %_86 = sub i32 %812, 255
  %gen87 = mul i32 %_86, 255
  %_88 = sub i32 %812, 255
  %gen89 = mul i32 %_88, 255
  %813 = and i32 %812, 255
  %814 = sext i32 %813 to i64
  %815 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %814
  %816 = load i8, i8* %815, align 1
  %817 = zext i8 %816 to i64
  %818 = icmp eq i64 %808, %817
  br label %originalBB69

originalBB93alteredBB:                            ; preds = %originalBB93, %403
  %819 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %820 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %819, i32 0, i32 1
  %821 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %820, i64 0, i64 0
  %822 = bitcast %union.rtunion_def* %821 to %struct.rtx_def**
  %823 = load %struct.rtx_def*, %struct.rtx_def** %822, align 8
  %824 = bitcast %struct.rtx_def* %823 to i32*
  %825 = load i32, i32* %824, align 8
  %_94 = sub i32 0, %825
  %gen95 = add i32 %_94, 65535
  %_96 = sub i32 0, %825
  %gen97 = add i32 %_96, 65535
  %_98 = sub i32 0, %825
  %gen99 = add i32 %_98, 65535
  %_100 = sub i32 0, %825
  %gen101 = add i32 %_100, 65535
  %_102 = sub i32 0, %825
  %gen103 = add i32 %_102, 65535
  %826 = and i32 %825, 65535
  %827 = icmp eq i32 %826, 100
  br label %originalBB93

originalBB107alteredBB:                           ; preds = %originalBB107, %429
  %828 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %829 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %828, i32 0, i32 1
  %830 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %829, i64 0, i64 0
  %831 = bitcast %union.rtunion_def* %830 to %struct.rtx_def**
  %832 = load %struct.rtx_def*, %struct.rtx_def** %831, align 8
  %833 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %832, i32 0, i32 1
  %834 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %833, i64 0, i64 1
  %835 = bitcast %union.rtunion_def* %834 to %struct.rtx_def**
  %836 = load %struct.rtx_def*, %struct.rtx_def** %835, align 8
  %837 = bitcast %struct.rtx_def* %836 to i32*
  %838 = load i32, i32* %837, align 8
  %_108 = sub i32 0, %838
  %gen109 = add i32 %_108, 65535
  %_110 = sub i32 %838, 65535
  %gen111 = mul i32 %_110, 65535
  %_112 = shl i32 %838, 65535
  %_113 = sub i32 %838, 65535
  %gen114 = mul i32 %_113, 65535
  %_115 = sub i32 0, %838
  %gen116 = add i32 %_115, 65535
  %_117 = sub i32 %838, 65535
  %gen118 = mul i32 %_117, 65535
  %839 = and i32 %838, 65535
  %840 = icmp eq i32 %839, 75
  br label %originalBB107

originalBB122alteredBB:                           ; preds = %originalBB122, %459
  %841 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %842 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %841, i32 0, i32 1
  %843 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %842, i64 0, i64 0
  %844 = bitcast %union.rtunion_def* %843 to %struct.rtx_def**
  %845 = load %struct.rtx_def*, %struct.rtx_def** %844, align 8
  %846 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %845, i32 0, i32 1
  %847 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %846, i64 0, i64 1
  %848 = bitcast %union.rtunion_def* %847 to %struct.rtx_def**
  %849 = load %struct.rtx_def*, %struct.rtx_def** %848, align 8
  %850 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %849, i32 0, i32 1
  %851 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %850, i64 0, i64 0
  %852 = bitcast %union.rtunion_def* %851 to %struct.rtx_def**
  %853 = load %struct.rtx_def*, %struct.rtx_def** %852, align 8
  %854 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %855 = icmp eq %struct.rtx_def* %853, %854
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %542
  %856 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %857 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %858 = call i32 @reg_mentioned_p(%struct.rtx_def* %856, %struct.rtx_def* %857)
  %859 = icmp ne i32 %858, 0
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %588
  %860 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %861 = getelementptr inbounds %struct.record_stack_memrefs_data, %struct.record_stack_memrefs_data* %9, i32 0, i32 0
  store %struct.rtx_def* %860, %struct.rtx_def** %861, align 8
  %862 = load %struct.csa_memlist*, %struct.csa_memlist** %5, align 8
  %863 = getelementptr inbounds %struct.record_stack_memrefs_data, %struct.record_stack_memrefs_data* %9, i32 0, i32 1
  store %struct.csa_memlist* %862, %struct.csa_memlist** %863, align 8
  %864 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %865 = bitcast %struct.rtx_def* %864 to i32*
  %866 = load i32, i32* %865, align 8
  %_131 = shl i32 %866, 65535
  %_132 = shl i32 %866, 65535
  %_133 = shl i32 %866, 65535
  %_134 = sub i32 0, %866
  %gen135 = add i32 %_134, 65535
  %_136 = sub i32 0, %866
  %gen137 = add i32 %_136, 65535
  %867 = and i32 %866, 65535
  %868 = icmp ne i32 %867, 34
  br label %originalBB130

originalBB141alteredBB:                           ; preds = %originalBB141, %617
  %869 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %870 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %869, i32 0, i32 1
  %871 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %870, i64 0, i64 3
  %872 = bitcast %union.rtunion_def* %871 to %struct.rtx_def**
  %873 = bitcast %struct.record_stack_memrefs_data* %9 to i8*
  %874 = call i32 @for_each_rtx(%struct.rtx_def** %872, i32 (%struct.rtx_def**, i8*)* @record_stack_memrefs, i8* %873)
  %875 = icmp ne i32 %874, 0
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %641
  %876 = getelementptr inbounds %struct.record_stack_memrefs_data, %struct.record_stack_memrefs_data* %9, i32 0, i32 1
  %877 = load %struct.csa_memlist*, %struct.csa_memlist** %876, align 8
  store %struct.csa_memlist* %877, %struct.csa_memlist** %5, align 8
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %683
  %878 = load i64, i64* %3, align 8
  %879 = icmp eq i64 %878, 0
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %702
  %880 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %881 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %880)
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %724
  %882 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  store %struct.rtx_def* %882, %struct.rtx_def** %6, align 8
  br label %originalBB157
}

declare %struct.rtx_def* @get_insns() #1

declare i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #1

declare %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) #1

declare void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @flags_set_1(%struct.rtx_def*, %struct.rtx_def*, i8*) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca i8*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %4, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 65535
  %11 = icmp eq i32 %10, 47
  br i1 %11, label %12, label %18

; <label>:12:                                     ; preds = %3
  %13 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** @flags_set_1_rtx, align 8
  %15 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %13, %struct.rtx_def* %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %18

; <label>:17:                                     ; preds = %12
  store i32 1, i32* @flags_set_1_set, align 4
  br label %18

; <label>:18:                                     ; preds = %17, %12, %3
  %19 = load i32, i32* @x.31
  %20 = load i32, i32* @y.32
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %18
  %27 = load i32, i32* @x.31
  %28 = load i32, i32* @y.32
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %18
  br label %originalBB
}

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

declare %struct.rtx_def* @gen_add3_insn(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

declare %struct.rtx_def* @gen_lowpart_SUBREG(i32, %struct.rtx_def*) #1

declare void @validate_replace_rtx_group(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @apply_change_group() #1

declare %struct.rtx_def* @next_real_insn(%struct.rtx_def*) #1

declare i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @dead_or_set_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @reg_class_subset_p(i32, i32) #1

declare %struct.rtx_def* @remove_death(i32, %struct.rtx_def*) #1

declare i32 @find_reg_fusage(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare zeroext i1 @can_throw_internal(%struct.rtx_def*) #1

declare void @start_sequence() #1

declare %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_sequence() #1

declare void @end_sequence() #1

declare %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @extract_insn(%struct.rtx_def*) #1

declare i32 @constrain_operands(i32) #1

; Function Attrs: nounwind
declare i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @stable_and_no_regs_but_for_p(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %5, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %6, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %7, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 65535
  store i32 %14, i32* %8, align 4
  %15 = load i32, i32* %8, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  switch i32 %19, label %185 [
    i32 60, label %20
    i32 49, label %20
    i32 99, label %20
    i32 50, label %20
    i32 98, label %20
    i32 51, label %20
    i32 111, label %92
  ]

; <label>:20:                                     ; preds = %3, %3, %3, %3, %3, %3
  %21 = load i32, i32* %8, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i64 0, i64 %22
  %24 = load i8*, i8** %23, align 8
  store i8* %24, i8** %10, align 8
  %25 = load i32, i32* %8, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = sub nsw i32 %29, 1
  store i32 %30, i32* %9, align 4
  br label %31

; <label>:31:                                     ; preds = %originalBBpart24, %20
  %32 = load i32, i32* %9, align 4
  %33 = icmp sge i32 %32, 0
  br i1 %33, label %34, label %91

; <label>:34:                                     ; preds = %31
  %35 = load i8*, i8** %10, align 8
  %36 = load i32, i32* %9, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %40, 101
  br i1 %41, label %42, label %55

; <label>:42:                                     ; preds = %34
  %43 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %45 = load i32, i32* %9, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %44, i64 0, i64 %46
  %48 = bitcast %union.rtunion_def* %47 to %struct.rtx_def**
  %49 = load %struct.rtx_def*, %struct.rtx_def** %48, align 8
  %50 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %51 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %52 = call i32 @stable_and_no_regs_but_for_p(%struct.rtx_def* %49, %struct.rtx_def* %50, %struct.rtx_def* %51)
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %55, label %54

; <label>:54:                                     ; preds = %42
  store i32 0, i32* %4, align 4
  br label %191

; <label>:55:                                     ; preds = %42, %34
  %56 = load i32, i32* @x.33
  %57 = load i32, i32* @y.34
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %55
  %64 = load i32, i32* @x.33
  %65 = load i32, i32* @y.34
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %72

; <label>:72:                                     ; preds = %originalBBpart2
  %73 = load i32, i32* @x.33
  %74 = load i32, i32* @y.34
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %72
  %81 = load i32, i32* %9, align 4
  %82 = add nsw i32 %81, -1
  store i32 %82, i32* %9, align 4
  %83 = load i32, i32* @x.33
  %84 = load i32, i32* @y.34
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %31

; <label>:91:                                     ; preds = %31
  store i32 1, i32* %4, align 4
  br label %191

; <label>:92:                                     ; preds = %3
  %93 = load i32, i32* @x.33
  %94 = load i32, i32* @y.34
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %92
  %101 = load i32, i32* %8, align 4
  %102 = icmp eq i32 %101, 61
  %103 = load i32, i32* @x.33
  %104 = load i32, i32* @y.34
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %102, label %111, label %138

; <label>:111:                                    ; preds = %originalBBpart28
  %112 = load i32, i32* @x.33
  %113 = load i32, i32* @y.34
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %111
  %120 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %121 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %122 = icmp eq %struct.rtx_def* %120, %121
  %123 = load i32, i32* @x.33
  %124 = load i32, i32* @y.34
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %122, label %135, label %131

; <label>:131:                                    ; preds = %originalBBpart212
  %132 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %133 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %134 = icmp eq %struct.rtx_def* %132, %133
  br label %135

; <label>:135:                                    ; preds = %131, %originalBBpart212
  %136 = phi i1 [ true, %originalBBpart212 ], [ %134, %131 ]
  %137 = zext i1 %136 to i32
  store i32 %137, i32* %4, align 4
  br label %191

; <label>:138:                                    ; preds = %originalBBpart28
  %139 = load i32, i32* @x.33
  %140 = load i32, i32* @y.34
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %138
  %147 = load i32, i32* %8, align 4
  %148 = icmp eq i32 %147, 66
  %149 = load i32, i32* @x.33
  %150 = load i32, i32* @y.34
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %148, label %157, label %168

; <label>:157:                                    ; preds = %originalBBpart216
  %158 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %159, i64 0, i64 0
  %161 = bitcast %union.rtunion_def* %160 to %struct.rtx_def**
  %162 = load %struct.rtx_def*, %struct.rtx_def** %161, align 8
  %163 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %164 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %165 = call i32 @stable_and_no_regs_but_for_p(%struct.rtx_def* %162, %struct.rtx_def* %163, %struct.rtx_def* %164)
  %166 = icmp ne i32 %165, 0
  br i1 %166, label %168, label %167

; <label>:167:                                    ; preds = %157
  store i32 0, i32* %4, align 4
  br label %191

; <label>:168:                                    ; preds = %157, %originalBBpart216
  %169 = load i32, i32* @x.33
  %170 = load i32, i32* @y.34
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %168
  %177 = load i32, i32* @x.33
  %178 = load i32, i32* @y.34
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %185

; <label>:185:                                    ; preds = %originalBBpart220, %3
  %186 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %187 = call i32 @rtx_unstable_p(%struct.rtx_def* %186)
  %188 = icmp ne i32 %187, 0
  %189 = xor i1 %188, true
  %190 = zext i1 %189 to i32
  store i32 %190, i32* %4, align 4
  br label %191

; <label>:191:                                    ; preds = %185, %167, %135, %91, %54
  %192 = load i32, i32* %4, align 4
  ret i32 %192

originalBBalteredBB:                              ; preds = %originalBB, %55
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %72
  %193 = load i32, i32* %9, align 4
  %_ = sub i32 %193, -1
  %gen = mul i32 %_, -1
  %_2 = shl i32 %193, -1
  %194 = add nsw i32 %193, -1
  store i32 %194, i32* %9, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %92
  %195 = load i32, i32* %8, align 4
  %196 = icmp eq i32 %195, 61
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %111
  %197 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %198 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %199 = icmp eq %struct.rtx_def* %197, %198
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %138
  %200 = load i32, i32* %8, align 4
  %201 = icmp eq i32 %200, 66
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %168
  br label %originalBB18
}

; Function Attrs: noinline nounwind uwtable
define internal void @replace_in_call_usage(%struct.rtx_def**, i32, %struct.rtx_def*, %struct.rtx_def*) #0 {
  %5 = alloca %struct.rtx_def**, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  %9 = alloca %struct.rtx_def*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct.rtx_def** %0, %struct.rtx_def*** %5, align 8
  store i32 %1, i32* %6, align 4
  store %struct.rtx_def* %2, %struct.rtx_def** %7, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %8, align 8
  %14 = load %struct.rtx_def**, %struct.rtx_def*** %5, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  store %struct.rtx_def* %15, %struct.rtx_def** %9, align 8
  %16 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %17 = icmp ne %struct.rtx_def* %16, null
  br i1 %17, label %19, label %18

; <label>:18:                                     ; preds = %4
  br label %288

; <label>:19:                                     ; preds = %4
  %20 = load i32, i32* @x.35
  %21 = load i32, i32* @y.36
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %19
  %28 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 65535
  store i32 %31, i32* %10, align 4
  %32 = load i32, i32* %10, align 4
  %33 = icmp eq i32 %32, 61
  %34 = load i32, i32* @x.35
  %35 = load i32, i32* @y.36
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %33, label %42, label %72

; <label>:42:                                     ; preds = %originalBBpart2
  %43 = load i32, i32* @x.35
  %44 = load i32, i32* @y.36
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %42
  %51 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %52, i64 0, i64 0
  %54 = bitcast %union.rtunion_def* %53 to i32*
  %55 = load i32, i32* %54, align 8
  %56 = load i32, i32* %6, align 4
  %57 = icmp ne i32 %55, %56
  %58 = load i32, i32* @x.35
  %59 = load i32, i32* @y.36
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %57, label %66, label %67

; <label>:66:                                     ; preds = %originalBBpart212
  br label %288

; <label>:67:                                     ; preds = %originalBBpart212
  %68 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %69 = load %struct.rtx_def**, %struct.rtx_def*** %5, align 8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %71 = call i32 @validate_change(%struct.rtx_def* %68, %struct.rtx_def** %69, %struct.rtx_def* %70, i32 1)
  br label %288

; <label>:72:                                     ; preds = %originalBBpart2
  %73 = load i32, i32* @x.35
  %74 = load i32, i32* @y.36
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %72
  %81 = load i32, i32* %10, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i64 0, i64 %82
  %84 = load i8*, i8** %83, align 8
  store i8* %84, i8** %11, align 8
  store i32 0, i32* %12, align 4
  %85 = load i32, i32* @x.35
  %86 = load i32, i32* @y.36
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %93

; <label>:93:                                     ; preds = %283, %originalBBpart216
  %94 = load i32, i32* @x.35
  %95 = load i32, i32* @y.36
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %93
  %102 = load i32, i32* %12, align 4
  %103 = load i32, i32* %10, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = icmp slt i32 %102, %107
  %109 = load i32, i32* @x.35
  %110 = load i32, i32* @y.36
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %108, label %117, label %288

; <label>:117:                                    ; preds = %originalBBpart220
  %118 = load i32, i32* @x.35
  %119 = load i32, i32* @y.36
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %117
  %126 = load i8*, i8** %11, align 8
  %127 = load i8, i8* %126, align 1
  %128 = sext i8 %127 to i32
  %129 = icmp eq i32 %128, 101
  %130 = load i32, i32* @x.35
  %131 = load i32, i32* @y.36
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %129, label %138, label %148

; <label>:138:                                    ; preds = %originalBBpart224
  %139 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1
  %141 = load i32, i32* %12, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %140, i64 0, i64 %142
  %144 = bitcast %union.rtunion_def* %143 to %struct.rtx_def**
  %145 = load i32, i32* %6, align 4
  %146 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %147 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  call void @replace_in_call_usage(%struct.rtx_def** %144, i32 %145, %struct.rtx_def* %146, %struct.rtx_def* %147)
  br label %266

; <label>:148:                                    ; preds = %originalBBpart224
  %149 = load i8*, i8** %11, align 8
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp eq i32 %151, 69
  br i1 %152, label %153, label %249

; <label>:153:                                    ; preds = %148
  %154 = load i32, i32* @x.35
  %155 = load i32, i32* @y.36
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %153
  store i32 0, i32* %13, align 4
  %162 = load i32, i32* @x.35
  %163 = load i32, i32* @y.36
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %170

; <label>:170:                                    ; preds = %229, %originalBBpart228
  %171 = load i32, i32* @x.35
  %172 = load i32, i32* @y.36
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %170
  %179 = load i32, i32* %13, align 4
  %180 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %180, i32 0, i32 1
  %182 = load i32, i32* %12, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %181, i64 0, i64 %183
  %185 = bitcast %union.rtunion_def* %184 to %struct.rtvec_def**
  %186 = load %struct.rtvec_def*, %struct.rtvec_def** %185, align 8
  %187 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %186, i32 0, i32 0
  %188 = load i32, i32* %187, align 8
  %189 = icmp slt i32 %179, %188
  %190 = load i32, i32* @x.35
  %191 = load i32, i32* @y.36
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %189, label %198, label %232

; <label>:198:                                    ; preds = %originalBBpart232
  %199 = load i32, i32* @x.35
  %200 = load i32, i32* @y.36
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %198
  %207 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1
  %209 = load i32, i32* %12, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %208, i64 0, i64 %210
  %212 = bitcast %union.rtunion_def* %211 to %struct.rtvec_def**
  %213 = load %struct.rtvec_def*, %struct.rtvec_def** %212, align 8
  %214 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %213, i32 0, i32 1
  %215 = load i32, i32* %13, align 4
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %214, i64 0, i64 %216
  %218 = load i32, i32* %6, align 4
  %219 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %220 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  call void @replace_in_call_usage(%struct.rtx_def** %217, i32 %218, %struct.rtx_def* %219, %struct.rtx_def* %220)
  %221 = load i32, i32* @x.35
  %222 = load i32, i32* @y.36
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %229

; <label>:229:                                    ; preds = %originalBBpart236
  %230 = load i32, i32* %13, align 4
  %231 = add nsw i32 %230, 1
  store i32 %231, i32* %13, align 4
  br label %170

; <label>:232:                                    ; preds = %originalBBpart232
  %233 = load i32, i32* @x.35
  %234 = load i32, i32* @y.36
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %232
  %241 = load i32, i32* @x.35
  %242 = load i32, i32* @y.36
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %249

; <label>:249:                                    ; preds = %originalBBpart240, %148
  %250 = load i32, i32* @x.35
  %251 = load i32, i32* @y.36
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %249
  %258 = load i32, i32* @x.35
  %259 = load i32, i32* @y.36
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %266

; <label>:266:                                    ; preds = %originalBBpart244, %138
  %267 = load i32, i32* @x.35
  %268 = load i32, i32* @y.36
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %266
  %275 = load i32, i32* @x.35
  %276 = load i32, i32* @y.36
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %283

; <label>:283:                                    ; preds = %originalBBpart248
  %284 = load i32, i32* %12, align 4
  %285 = add nsw i32 %284, 1
  store i32 %285, i32* %12, align 4
  %286 = load i8*, i8** %11, align 8
  %287 = getelementptr inbounds i8, i8* %286, i32 1
  store i8* %287, i8** %11, align 8
  br label %93

; <label>:288:                                    ; preds = %originalBBpart220, %67, %66, %18
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %19
  %289 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %290 = bitcast %struct.rtx_def* %289 to i32*
  %291 = load i32, i32* %290, align 8
  %_ = shl i32 %291, 65535
  %_1 = shl i32 %291, 65535
  %_2 = sub i32 0, %291
  %gen = add i32 %_2, 65535
  %_3 = sub i32 0, %291
  %gen4 = add i32 %_3, 65535
  %_5 = sub i32 0, %291
  %gen6 = add i32 %_5, 65535
  %_7 = shl i32 %291, 65535
  %_8 = sub i32 %291, 65535
  %gen9 = mul i32 %_8, 65535
  %292 = and i32 %291, 65535
  store i32 %292, i32* %10, align 4
  %293 = load i32, i32* %10, align 4
  %294 = icmp eq i32 %293, 61
  br label %originalBB

originalBB10alteredBB:                            ; preds = %originalBB10, %42
  %295 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %296 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %295, i32 0, i32 1
  %297 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %296, i64 0, i64 0
  %298 = bitcast %union.rtunion_def* %297 to i32*
  %299 = load i32, i32* %298, align 8
  %300 = load i32, i32* %6, align 4
  %301 = icmp ne i32 %299, %300
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %72
  %302 = load i32, i32* %10, align 4
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i64 0, i64 %303
  %305 = load i8*, i8** %304, align 8
  store i8* %305, i8** %11, align 8
  store i32 0, i32* %12, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %93
  %306 = load i32, i32* %12, align 4
  %307 = load i32, i32* %10, align 4
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i64 0, i64 %308
  %310 = load i8, i8* %309, align 1
  %311 = zext i8 %310 to i32
  %312 = icmp slt i32 %306, %311
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %117
  %313 = load i8*, i8** %11, align 8
  %314 = load i8, i8* %313, align 1
  %315 = sext i8 %314 to i32
  %316 = icmp eq i32 %315, 101
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %153
  store i32 0, i32* %13, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %170
  %317 = load i32, i32* %13, align 4
  %318 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %318, i32 0, i32 1
  %320 = load i32, i32* %12, align 4
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %319, i64 0, i64 %321
  %323 = bitcast %union.rtunion_def* %322 to %struct.rtvec_def**
  %324 = load %struct.rtvec_def*, %struct.rtvec_def** %323, align 8
  %325 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %324, i32 0, i32 0
  %326 = load i32, i32* %325, align 8
  %327 = icmp slt i32 %317, %326
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %198
  %328 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %329 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %328, i32 0, i32 1
  %330 = load i32, i32* %12, align 4
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %329, i64 0, i64 %331
  %333 = bitcast %union.rtunion_def* %332 to %struct.rtvec_def**
  %334 = load %struct.rtvec_def*, %struct.rtvec_def** %333, align 8
  %335 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %334, i32 0, i32 1
  %336 = load i32, i32* %13, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %335, i64 0, i64 %337
  %339 = load i32, i32* %6, align 4
  %340 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %341 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  call void @replace_in_call_usage(%struct.rtx_def** %338, i32 %339, %struct.rtx_def* %340, %struct.rtx_def* %341)
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %232
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %249
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %266
  br label %originalBB46
}

declare %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #1

declare void @emit_insn_after_with_line_notes(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @delete_insn(%struct.rtx_def*) #1

declare i32 @exact_log2_wide(i64) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @try_auto_increment(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, i32) #0 {
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  %9 = alloca %struct.rtx_def*, align 8
  %10 = alloca %struct.rtx_def*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca %struct.rtx_def*, align 8
  %16 = alloca i32, align 4
  store %struct.rtx_def* %0, %struct.rtx_def** %7, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %9, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %10, align 8
  store i64 %4, i64* %11, align 8
  store i32 %5, i32* %12, align 4
  %17 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 65535
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %24, 105
  br i1 %25, label %26, label %84

; <label>:26:                                     ; preds = %6
  %27 = load i32, i32* @x.37
  %28 = load i32, i32* @y.38
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %26
  %35 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %36, i64 0, i64 3
  %38 = bitcast %union.rtunion_def* %37 to %struct.rtx_def**
  %39 = load %struct.rtx_def*, %struct.rtx_def** %38, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 65535
  %43 = icmp eq i32 %42, 47
  %44 = load i32, i32* @x.37
  %45 = load i32, i32* @y.38
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %43, label %52, label %58

; <label>:52:                                     ; preds = %originalBBpart2
  %53 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %54, i64 0, i64 3
  %56 = bitcast %union.rtunion_def* %55 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %56, align 8
  br label %66

; <label>:58:                                     ; preds = %originalBBpart2
  %59 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %61, i64 0, i64 3
  %63 = bitcast %union.rtunion_def* %62 to %struct.rtx_def**
  %64 = load %struct.rtx_def*, %struct.rtx_def** %63, align 8
  %65 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %59, %struct.rtx_def* %64)
  br label %66

; <label>:66:                                     ; preds = %58, %52
  %67 = phi %struct.rtx_def* [ %57, %52 ], [ %65, %58 ]
  %68 = load i32, i32* @x.37
  %69 = load i32, i32* @y.38
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %66
  %76 = load i32, i32* @x.37
  %77 = load i32, i32* @y.38
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %101

; <label>:84:                                     ; preds = %6
  %85 = load i32, i32* @x.37
  %86 = load i32, i32* @y.38
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %84
  %93 = load i32, i32* @x.37
  %94 = load i32, i32* @y.38
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %101

; <label>:101:                                    ; preds = %originalBBpart216, %originalBBpart212
  %102 = phi %struct.rtx_def* [ %67, %originalBBpart212 ], [ null, %originalBBpart216 ]
  %103 = load i32, i32* @x.37
  %104 = load i32, i32* @y.38
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %101
  store %struct.rtx_def* %102, %struct.rtx_def** %14, align 8
  %111 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %112 = icmp ne %struct.rtx_def* %111, null
  %113 = load i32, i32* @x.37
  %114 = load i32, i32* @y.38
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %112, label %121, label %157

; <label>:121:                                    ; preds = %originalBBpart220
  %122 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %123 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %124 = call %struct.rtx_def* @find_use_as_address(%struct.rtx_def* %122, %struct.rtx_def* %123, i64 0)
  store %struct.rtx_def* %124, %struct.rtx_def** %15, align 8
  %125 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %126 = icmp ne %struct.rtx_def* %125, null
  br i1 %126, label %127, label %156

; <label>:127:                                    ; preds = %121
  %128 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %129 = icmp ne %struct.rtx_def* %128, inttoptr (i64 1 to %struct.rtx_def*)
  br i1 %129, label %130, label %156

; <label>:130:                                    ; preds = %127
  %131 = load i32, i32* @x.37
  %132 = load i32, i32* @y.38
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %130
  %139 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %140 = bitcast %struct.rtx_def* %139 to i32*
  %141 = load i32, i32* %140, align 8
  %142 = lshr i32 %141, 16
  %143 = and i32 %142, 255
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  store i32 %147, i32* %16, align 4
  %148 = load i32, i32* @x.37
  %149 = load i32, i32* @y.38
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart233, label %originalBB22alteredBB

originalBBpart233:                                ; preds = %originalBB22
  br label %156

; <label>:156:                                    ; preds = %originalBBpart233, %127, %121
  br label %157

; <label>:157:                                    ; preds = %156, %originalBBpart220
  ret i32 0

originalBBalteredBB:                              ; preds = %originalBB, %26
  %158 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %159, i64 0, i64 3
  %161 = bitcast %union.rtunion_def* %160 to %struct.rtx_def**
  %162 = load %struct.rtx_def*, %struct.rtx_def** %161, align 8
  %163 = bitcast %struct.rtx_def* %162 to i32*
  %164 = load i32, i32* %163, align 8
  %_ = shl i32 %164, 65535
  %_1 = sub i32 %164, 65535
  %gen = mul i32 %_1, 65535
  %_2 = shl i32 %164, 65535
  %_3 = shl i32 %164, 65535
  %_4 = sub i32 0, %164
  %gen5 = add i32 %_4, 65535
  %_6 = shl i32 %164, 65535
  %_7 = shl i32 %164, 65535
  %_8 = sub i32 0, %164
  %gen9 = add i32 %_8, 65535
  %165 = and i32 %164, 65535
  %166 = icmp eq i32 %165, 47
  br label %originalBB

originalBB10alteredBB:                            ; preds = %originalBB10, %66
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %84
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %101
  store %struct.rtx_def* %102, %struct.rtx_def** %14, align 8
  %167 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %168 = icmp ne %struct.rtx_def* %167, null
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %130
  %169 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %170 = bitcast %struct.rtx_def* %169 to i32*
  %171 = load i32, i32* %170, align 8
  %_23 = sub i32 %171, 16
  %gen24 = mul i32 %_23, 16
  %_25 = sub i32 0, %171
  %gen26 = add i32 %_25, 16
  %_27 = sub i32 %171, 16
  %gen28 = mul i32 %_27, 16
  %_29 = shl i32 %171, 16
  %_30 = sub i32 %171, 16
  %gen31 = mul i32 %_30, 16
  %172 = lshr i32 %171, 16
  %173 = and i32 %172, 255
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  store i32 %177, i32* %16, align 4
  br label %originalBB22
}

declare i32 @rtx_unstable_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @find_use_as_address(%struct.rtx_def*, %struct.rtx_def*, i64) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @single_set_for_csa(%struct.rtx_def*) #0 {
  %2 = load i32, i32* @x.39
  %3 = load i32, i32* @y.40
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %struct.rtx_def*, align 8
  %11 = alloca %struct.rtx_def*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.rtx_def*, align 8
  %14 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %11, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 65535
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = icmp eq i32 %22, 105
  %24 = load i32, i32* @x.39
  %25 = load i32, i32* @y.40
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %74

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %34, i64 0, i64 3
  %36 = bitcast %union.rtunion_def* %35 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %36, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 65535
  %41 = icmp eq i32 %40, 47
  br i1 %41, label %42, label %64

; <label>:42:                                     ; preds = %32
  %43 = load i32, i32* @x.39
  %44 = load i32, i32* @y.40
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %42
  %51 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %52, i64 0, i64 3
  %54 = bitcast %union.rtunion_def* %53 to %struct.rtx_def**
  %55 = load %struct.rtx_def*, %struct.rtx_def** %54, align 8
  %56 = load i32, i32* @x.39
  %57 = load i32, i32* @y.40
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %72

; <label>:64:                                     ; preds = %32
  %65 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %66 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %67, i64 0, i64 3
  %69 = bitcast %union.rtunion_def* %68 to %struct.rtx_def**
  %70 = load %struct.rtx_def*, %struct.rtx_def** %69, align 8
  %71 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %65, %struct.rtx_def* %70)
  br label %72

; <label>:72:                                     ; preds = %64, %originalBBpart24
  %73 = phi %struct.rtx_def* [ %55, %originalBBpart24 ], [ %71, %64 ]
  br label %75

; <label>:74:                                     ; preds = %originalBBpart2
  br label %75

; <label>:75:                                     ; preds = %74, %72
  %76 = phi %struct.rtx_def* [ %73, %72 ], [ null, %74 ]
  store %struct.rtx_def* %76, %struct.rtx_def** %13, align 8
  %77 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %78 = icmp ne %struct.rtx_def* %77, null
  br i1 %78, label %79, label %81

; <label>:79:                                     ; preds = %75
  %80 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  store %struct.rtx_def* %80, %struct.rtx_def** %10, align 8
  br label %264

; <label>:81:                                     ; preds = %75
  %82 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %83 = bitcast %struct.rtx_def* %82 to i32*
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 65535
  %86 = icmp ne i32 %85, 32
  br i1 %86, label %97, label %87

; <label>:87:                                     ; preds = %81
  %88 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %89, i64 0, i64 3
  %91 = bitcast %union.rtunion_def* %90 to %struct.rtx_def**
  %92 = load %struct.rtx_def*, %struct.rtx_def** %91, align 8
  %93 = bitcast %struct.rtx_def* %92 to i32*
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, 65535
  %96 = icmp ne i32 %95, 39
  br i1 %96, label %97, label %114

; <label>:97:                                     ; preds = %87, %81
  %98 = load i32, i32* @x.39
  %99 = load i32, i32* @y.40
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %97
  store %struct.rtx_def* null, %struct.rtx_def** %10, align 8
  %106 = load i32, i32* @x.39
  %107 = load i32, i32* @y.40
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %264

; <label>:114:                                    ; preds = %87
  %115 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %116, i64 0, i64 3
  %118 = bitcast %union.rtunion_def* %117 to %struct.rtx_def**
  %119 = load %struct.rtx_def*, %struct.rtx_def** %118, align 8
  store %struct.rtx_def* %119, %struct.rtx_def** %13, align 8
  %120 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %121, i64 0, i64 0
  %123 = bitcast %union.rtunion_def* %122 to %struct.rtvec_def**
  %124 = load %struct.rtvec_def*, %struct.rtvec_def** %123, align 8
  %125 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %124, i32 0, i32 1
  %126 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %125, i64 0, i64 0
  %127 = load %struct.rtx_def*, %struct.rtx_def** %126, align 8
  %128 = bitcast %struct.rtx_def* %127 to i32*
  %129 = load i32, i32* %128, align 8
  %130 = and i32 %129, 65535
  %131 = icmp ne i32 %130, 47
  br i1 %131, label %132, label %149

; <label>:132:                                    ; preds = %114
  %133 = load i32, i32* @x.39
  %134 = load i32, i32* @y.40
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %132
  store %struct.rtx_def* null, %struct.rtx_def** %10, align 8
  %141 = load i32, i32* @x.39
  %142 = load i32, i32* @y.40
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %264

; <label>:149:                                    ; preds = %114
  store i32 1, i32* %12, align 4
  br label %150

; <label>:150:                                    ; preds = %252, %149
  %151 = load i32, i32* @x.39
  %152 = load i32, i32* @y.40
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %150
  %159 = load i32, i32* %12, align 4
  %160 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1
  %162 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %161, i64 0, i64 0
  %163 = bitcast %union.rtunion_def* %162 to %struct.rtvec_def**
  %164 = load %struct.rtvec_def*, %struct.rtvec_def** %163, align 8
  %165 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %164, i32 0, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = icmp slt i32 %159, %166
  %168 = load i32, i32* @x.39
  %169 = load i32, i32* @y.40
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %167, label %176, label %255

; <label>:176:                                    ; preds = %originalBBpart216
  %177 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1
  %179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %178, i64 0, i64 0
  %180 = bitcast %union.rtunion_def* %179 to %struct.rtvec_def**
  %181 = load %struct.rtvec_def*, %struct.rtvec_def** %180, align 8
  %182 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %181, i32 0, i32 1
  %183 = load i32, i32* %12, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %182, i64 0, i64 %184
  %186 = load %struct.rtx_def*, %struct.rtx_def** %185, align 8
  store %struct.rtx_def* %186, %struct.rtx_def** %14, align 8
  %187 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %188 = bitcast %struct.rtx_def* %187 to i32*
  %189 = load i32, i32* %188, align 8
  %190 = and i32 %189, 65535
  %191 = icmp eq i32 %190, 47
  br i1 %191, label %192, label %205

; <label>:192:                                    ; preds = %176
  %193 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %194 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %193, i32 0, i32 1
  %195 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %194, i64 0, i64 1
  %196 = bitcast %union.rtunion_def* %195 to %struct.rtx_def**
  %197 = load %struct.rtx_def*, %struct.rtx_def** %196, align 8
  %198 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %198, i32 0, i32 1
  %200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %199, i64 0, i64 0
  %201 = bitcast %union.rtunion_def* %200 to %struct.rtx_def**
  %202 = load %struct.rtx_def*, %struct.rtx_def** %201, align 8
  %203 = icmp eq %struct.rtx_def* %197, %202
  br i1 %203, label %204, label %205

; <label>:204:                                    ; preds = %192
  br label %251

; <label>:205:                                    ; preds = %192, %176
  %206 = load i32, i32* @x.39
  %207 = load i32, i32* @y.40
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %205
  %214 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %215 = bitcast %struct.rtx_def* %214 to i32*
  %216 = load i32, i32* %215, align 8
  %217 = and i32 %216, 65535
  %218 = icmp ne i32 %217, 49
  %219 = load i32, i32* @x.39
  %220 = load i32, i32* @y.40
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBBpart221, label %originalBB18alteredBB

originalBBpart221:                                ; preds = %originalBB18
  br i1 %218, label %227, label %250

; <label>:227:                                    ; preds = %originalBBpart221
  %228 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %229 = bitcast %struct.rtx_def* %228 to i32*
  %230 = load i32, i32* %229, align 8
  %231 = and i32 %230, 65535
  %232 = icmp ne i32 %231, 48
  br i1 %232, label %233, label %250

; <label>:233:                                    ; preds = %227
  %234 = load i32, i32* @x.39
  %235 = load i32, i32* @y.40
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %originalBB23alteredBB, %233
  store %struct.rtx_def* null, %struct.rtx_def** %10, align 8
  %242 = load i32, i32* @x.39
  %243 = load i32, i32* @y.40
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %264

; <label>:250:                                    ; preds = %227, %originalBBpart221
  br label %251

; <label>:251:                                    ; preds = %250, %204
  br label %252

; <label>:252:                                    ; preds = %251
  %253 = load i32, i32* %12, align 4
  %254 = add nsw i32 %253, 1
  store i32 %254, i32* %12, align 4
  br label %150

; <label>:255:                                    ; preds = %originalBBpart216
  %256 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %256, i32 0, i32 1
  %258 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %257, i64 0, i64 0
  %259 = bitcast %union.rtunion_def* %258 to %struct.rtvec_def**
  %260 = load %struct.rtvec_def*, %struct.rtvec_def** %259, align 8
  %261 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %260, i32 0, i32 1
  %262 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %261, i64 0, i64 0
  %263 = load %struct.rtx_def*, %struct.rtx_def** %262, align 8
  store %struct.rtx_def* %263, %struct.rtx_def** %10, align 8
  br label %264

; <label>:264:                                    ; preds = %255, %originalBBpart225, %originalBBpart212, %originalBBpart28, %79
  %265 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  ret %struct.rtx_def* %265

originalBBalteredBB:                              ; preds = %originalBB, %1
  %266 = alloca %struct.rtx_def*, align 8
  %267 = alloca %struct.rtx_def*, align 8
  %268 = alloca i32, align 4
  %269 = alloca %struct.rtx_def*, align 8
  %270 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %267, align 8
  %271 = load %struct.rtx_def*, %struct.rtx_def** %267, align 8
  %272 = bitcast %struct.rtx_def* %271 to i32*
  %273 = load i32, i32* %272, align 8
  %_ = shl i32 %273, 65535
  %274 = and i32 %273, 65535
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i64 0, i64 %275
  %277 = load i8, i8* %276, align 1
  %278 = sext i8 %277 to i32
  %279 = icmp eq i32 %278, 105
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %280 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %281 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %280, i32 0, i32 1
  %282 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %281, i64 0, i64 3
  %283 = bitcast %union.rtunion_def* %282 to %struct.rtx_def**
  %284 = load %struct.rtx_def*, %struct.rtx_def** %283, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %97
  store %struct.rtx_def* null, %struct.rtx_def** %10, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %132
  store %struct.rtx_def* null, %struct.rtx_def** %10, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %150
  %285 = load i32, i32* %12, align 4
  %286 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %287 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %286, i32 0, i32 1
  %288 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %287, i64 0, i64 0
  %289 = bitcast %union.rtunion_def* %288 to %struct.rtvec_def**
  %290 = load %struct.rtvec_def*, %struct.rtvec_def** %289, align 8
  %291 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %290, i32 0, i32 0
  %292 = load i32, i32* %291, align 8
  %293 = icmp slt i32 %285, %292
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %205
  %294 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %295 = bitcast %struct.rtx_def* %294 to i32*
  %296 = load i32, i32* %295, align 8
  %_19 = sub i32 %296, 65535
  %gen = mul i32 %_19, 65535
  %297 = and i32 %296, 65535
  %298 = icmp ne i32 %297, 49
  br label %originalBB18

originalBB23alteredBB:                            ; preds = %originalBB23, %233
  store %struct.rtx_def* null, %struct.rtx_def** %10, align 8
  br label %originalBB23
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @try_apply_stack_adjustment(%struct.rtx_def*, %struct.csa_memlist*, i64, i64) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.csa_memlist*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.csa_memlist*, align 8
  %11 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %6, align 8
  store %struct.csa_memlist* %1, %struct.csa_memlist** %7, align 8
  store i64 %2, i64* %8, align 8
  store i64 %3, i64* %9, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %13 = call %struct.rtx_def* @single_set_for_csa(%struct.rtx_def* %12)
  store %struct.rtx_def* %13, %struct.rtx_def** %11, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %16, i64 0, i64 1
  %18 = bitcast %union.rtunion_def* %17 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %20, i64 0, i64 1
  %22 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**
  %23 = load i64, i64* %8, align 8
  %24 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %23)
  %25 = call i32 @validate_change(%struct.rtx_def* %14, %struct.rtx_def** %22, %struct.rtx_def* %24, i32 1)
  %26 = load %struct.csa_memlist*, %struct.csa_memlist** %7, align 8
  store %struct.csa_memlist* %26, %struct.csa_memlist** %10, align 8
  br label %27

; <label>:27:                                     ; preds = %66, %4
  %28 = load %struct.csa_memlist*, %struct.csa_memlist** %10, align 8
  %29 = icmp ne %struct.csa_memlist* %28, null
  br i1 %29, label %30, label %70

; <label>:30:                                     ; preds = %27
  %31 = load i32, i32* @x.41
  %32 = load i32, i32* @y.42
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %30
  %39 = load %struct.csa_memlist*, %struct.csa_memlist** %10, align 8
  %40 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %39, i32 0, i32 1
  %41 = load %struct.rtx_def*, %struct.rtx_def** %40, align 8
  %42 = load %struct.csa_memlist*, %struct.csa_memlist** %10, align 8
  %43 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %42, i32 0, i32 2
  %44 = load %struct.rtx_def**, %struct.rtx_def*** %43, align 8
  %45 = load %struct.csa_memlist*, %struct.csa_memlist** %10, align 8
  %46 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %45, i32 0, i32 2
  %47 = load %struct.rtx_def**, %struct.rtx_def*** %46, align 8
  %48 = load %struct.rtx_def*, %struct.rtx_def** %47, align 8
  %49 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %50 = load %struct.csa_memlist*, %struct.csa_memlist** %10, align 8
  %51 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %50, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = load i64, i64* %9, align 8
  %54 = sub nsw i64 %52, %53
  %55 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %49, i64 %54)
  %56 = call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %48, %struct.rtx_def* %55)
  %57 = call i32 @validate_change(%struct.rtx_def* %41, %struct.rtx_def** %44, %struct.rtx_def* %56, i32 1)
  %58 = load i32, i32* @x.41
  %59 = load i32, i32* @y.42
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %66

; <label>:66:                                     ; preds = %originalBBpart2
  %67 = load %struct.csa_memlist*, %struct.csa_memlist** %10, align 8
  %68 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %67, i32 0, i32 3
  %69 = load %struct.csa_memlist*, %struct.csa_memlist** %68, align 8
  store %struct.csa_memlist* %69, %struct.csa_memlist** %10, align 8
  br label %27

; <label>:70:                                     ; preds = %27
  %71 = call i32 @apply_change_group()
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %105

; <label>:73:                                     ; preds = %70
  %74 = load %struct.csa_memlist*, %struct.csa_memlist** %7, align 8
  store %struct.csa_memlist* %74, %struct.csa_memlist** %10, align 8
  br label %75

; <label>:75:                                     ; preds = %100, %73
  %76 = load %struct.csa_memlist*, %struct.csa_memlist** %10, align 8
  %77 = icmp ne %struct.csa_memlist* %76, null
  br i1 %77, label %78, label %104

; <label>:78:                                     ; preds = %75
  %79 = load i32, i32* @x.41
  %80 = load i32, i32* @y.42
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %78
  %87 = load i64, i64* %9, align 8
  %88 = load %struct.csa_memlist*, %struct.csa_memlist** %10, align 8
  %89 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %88, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = sub nsw i64 %90, %87
  store i64 %91, i64* %89, align 8
  %92 = load i32, i32* @x.41
  %93 = load i32, i32* @y.42
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart214, label %originalBB1alteredBB

originalBBpart214:                                ; preds = %originalBB1
  br label %100

; <label>:100:                                    ; preds = %originalBBpart214
  %101 = load %struct.csa_memlist*, %struct.csa_memlist** %10, align 8
  %102 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %101, i32 0, i32 3
  %103 = load %struct.csa_memlist*, %struct.csa_memlist** %102, align 8
  store %struct.csa_memlist* %103, %struct.csa_memlist** %10, align 8
  br label %75

; <label>:104:                                    ; preds = %75
  store i32 1, i32* %5, align 4
  br label %106

; <label>:105:                                    ; preds = %70
  store i32 0, i32* %5, align 4
  br label %106

; <label>:106:                                    ; preds = %105, %104
  %107 = load i32, i32* %5, align 4
  ret i32 %107

originalBBalteredBB:                              ; preds = %originalBB, %30
  %108 = load %struct.csa_memlist*, %struct.csa_memlist** %10, align 8
  %109 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %108, i32 0, i32 1
  %110 = load %struct.rtx_def*, %struct.rtx_def** %109, align 8
  %111 = load %struct.csa_memlist*, %struct.csa_memlist** %10, align 8
  %112 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %111, i32 0, i32 2
  %113 = load %struct.rtx_def**, %struct.rtx_def*** %112, align 8
  %114 = load %struct.csa_memlist*, %struct.csa_memlist** %10, align 8
  %115 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %114, i32 0, i32 2
  %116 = load %struct.rtx_def**, %struct.rtx_def*** %115, align 8
  %117 = load %struct.rtx_def*, %struct.rtx_def** %116, align 8
  %118 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %119 = load %struct.csa_memlist*, %struct.csa_memlist** %10, align 8
  %120 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %119, i32 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = load i64, i64* %9, align 8
  %_ = sub i64 0, %121
  %gen = add i64 %_, %122
  %123 = sub nsw i64 %121, %122
  %124 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %118, i64 %123)
  %125 = call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %117, %struct.rtx_def* %124)
  %126 = call i32 @validate_change(%struct.rtx_def* %110, %struct.rtx_def** %113, %struct.rtx_def* %125, i32 1)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %78
  %127 = load i64, i64* %9, align 8
  %128 = load %struct.csa_memlist*, %struct.csa_memlist** %10, align 8
  %129 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %128, i32 0, i32 0
  %130 = load i64, i64* %129, align 8
  %_2 = sub i64 0, %130
  %gen3 = add i64 %_2, %127
  %_4 = shl i64 %130, %127
  %_5 = sub i64 0, %130
  %gen6 = add i64 %_5, %127
  %_7 = sub i64 0, %130
  %gen8 = add i64 %_7, %127
  %_9 = sub i64 %130, %127
  %gen10 = mul i64 %_9, %127
  %_11 = sub i64 %130, %127
  %gen12 = mul i64 %_11, %127
  %131 = sub nsw i64 %130, %127
  store i64 %131, i64* %129, align 8
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_csa_memlist(%struct.csa_memlist*) #0 {
  %2 = alloca %struct.csa_memlist*, align 8
  %3 = alloca %struct.csa_memlist*, align 8
  store %struct.csa_memlist* %0, %struct.csa_memlist** %2, align 8
  br label %4

; <label>:4:                                      ; preds = %13, %1
  %5 = load %struct.csa_memlist*, %struct.csa_memlist** %2, align 8
  %6 = icmp ne %struct.csa_memlist* %5, null
  br i1 %6, label %7, label %15

; <label>:7:                                      ; preds = %4
  %8 = load %struct.csa_memlist*, %struct.csa_memlist** %2, align 8
  %9 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %8, i32 0, i32 3
  %10 = load %struct.csa_memlist*, %struct.csa_memlist** %9, align 8
  store %struct.csa_memlist* %10, %struct.csa_memlist** %3, align 8
  %11 = load %struct.csa_memlist*, %struct.csa_memlist** %2, align 8
  %12 = bitcast %struct.csa_memlist* %11 to i8*
  call void @free(i8* %12) #3
  br label %13

; <label>:13:                                     ; preds = %7
  %14 = load %struct.csa_memlist*, %struct.csa_memlist** %3, align 8
  store %struct.csa_memlist* %14, %struct.csa_memlist** %2, align 8
  br label %4

; <label>:15:                                     ; preds = %4
  ret void
}

declare i32 @memory_address_p(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @replace_equiv_address(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @record_stack_memrefs(%struct.rtx_def**, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.rtx_def**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.record_stack_memrefs_data*, align 8
  store %struct.rtx_def** %0, %struct.rtx_def*** %4, align 8
  store i8* %1, i8** %5, align 8
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %4, align 8
  %9 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %9, %struct.rtx_def** %6, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = bitcast i8* %10 to %struct.record_stack_memrefs_data*
  store %struct.record_stack_memrefs_data* %11, %struct.record_stack_memrefs_data** %7, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %13 = icmp ne %struct.rtx_def* %12, null
  br i1 %13, label %15, label %14

; <label>:14:                                     ; preds = %2
  store i32 0, i32* %3, align 4
  br label %117

; <label>:15:                                     ; preds = %2
  %16 = load i32, i32* @x.45
  %17 = load i32, i32* @y.46
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %15
  %24 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 65535
  %28 = load i32, i32* @x.45
  %29 = load i32, i32* @y.46
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %27, label %83 [
    i32 66, label %36
    i32 61, label %74
  ]

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %38 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %39 = call i32 @reg_mentioned_p(%struct.rtx_def* %37, %struct.rtx_def* %38)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %58, label %41

; <label>:41:                                     ; preds = %36
  %42 = load i32, i32* @x.45
  %43 = load i32, i32* @y.46
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %originalBB7alteredBB, %41
  store i32 -1, i32* %3, align 4
  %50 = load i32, i32* @x.45
  %51 = load i32, i32* @y.46
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  br label %117

; <label>:58:                                     ; preds = %36
  %59 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %60 = call i32 @stack_memref_p(%struct.rtx_def* %59)
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %73

; <label>:62:                                     ; preds = %58
  %63 = load %struct.record_stack_memrefs_data*, %struct.record_stack_memrefs_data** %7, align 8
  %64 = getelementptr inbounds %struct.record_stack_memrefs_data, %struct.record_stack_memrefs_data* %63, i32 0, i32 0
  %65 = load %struct.rtx_def*, %struct.rtx_def** %64, align 8
  %66 = load %struct.rtx_def**, %struct.rtx_def*** %4, align 8
  %67 = load %struct.record_stack_memrefs_data*, %struct.record_stack_memrefs_data** %7, align 8
  %68 = getelementptr inbounds %struct.record_stack_memrefs_data, %struct.record_stack_memrefs_data* %67, i32 0, i32 1
  %69 = load %struct.csa_memlist*, %struct.csa_memlist** %68, align 8
  %70 = call %struct.csa_memlist* @record_one_stack_memref(%struct.rtx_def* %65, %struct.rtx_def** %66, %struct.csa_memlist* %69)
  %71 = load %struct.record_stack_memrefs_data*, %struct.record_stack_memrefs_data** %7, align 8
  %72 = getelementptr inbounds %struct.record_stack_memrefs_data, %struct.record_stack_memrefs_data* %71, i32 0, i32 1
  store %struct.csa_memlist* %70, %struct.csa_memlist** %72, align 8
  store i32 -1, i32* %3, align 4
  br label %117

; <label>:73:                                     ; preds = %58
  store i32 1, i32* %3, align 4
  br label %117

; <label>:74:                                     ; preds = %originalBBpart2
  %75 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %76, i64 0, i64 0
  %78 = bitcast %union.rtunion_def* %77 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 7
  br i1 %80, label %81, label %82

; <label>:81:                                     ; preds = %74
  store i32 1, i32* %3, align 4
  br label %117

; <label>:82:                                     ; preds = %74
  br label %100

; <label>:83:                                     ; preds = %originalBBpart2
  %84 = load i32, i32* @x.45
  %85 = load i32, i32* @y.46
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %83
  %92 = load i32, i32* @x.45
  %93 = load i32, i32* @y.46
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br label %100

; <label>:100:                                    ; preds = %originalBBpart213, %82
  %101 = load i32, i32* @x.45
  %102 = load i32, i32* @y.46
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %originalBB15alteredBB, %100
  store i32 0, i32* %3, align 4
  %109 = load i32, i32* @x.45
  %110 = load i32, i32* @y.46
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br label %117

; <label>:117:                                    ; preds = %originalBBpart217, %81, %73, %62, %originalBBpart29, %14
  %118 = load i32, i32* %3, align 4
  ret i32 %118

originalBBalteredBB:                              ; preds = %originalBB, %15
  %119 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %120 = bitcast %struct.rtx_def* %119 to i32*
  %121 = load i32, i32* %120, align 8
  %_ = shl i32 %121, 65535
  %_1 = sub i32 0, %121
  %gen = add i32 %_1, 65535
  %_2 = sub i32 %121, 65535
  %gen3 = mul i32 %_2, 65535
  %_4 = shl i32 %121, 65535
  %_5 = sub i32 0, %121
  %gen6 = add i32 %_5, 65535
  %122 = and i32 %121, 65535
  br label %originalBB

originalBB7alteredBB:                             ; preds = %originalBB7, %41
  store i32 -1, i32* %3, align 4
  br label %originalBB7

originalBB11alteredBB:                            ; preds = %originalBB11, %83
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %100
  store i32 0, i32* %3, align 4
  br label %originalBB15
}

declare %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @stack_memref_p(%struct.rtx_def*) #0 {
  %2 = load i32, i32* @x.47
  %3 = load i32, i32* @y.48
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i32, align 4
  %11 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %11, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 65535
  %16 = icmp ne i32 %15, 66
  %17 = load i32, i32* @x.47
  %18 = load i32, i32* @y.48
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %42

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load i32, i32* @x.47
  %27 = load i32, i32* @y.48
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %originalBB7alteredBB, %25
  store i32 0, i32* %10, align 4
  %34 = load i32, i32* @x.47
  %35 = load i32, i32* @y.48
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  br label %110

; <label>:42:                                     ; preds = %originalBBpart2
  %43 = load i32, i32* @x.47
  %44 = load i32, i32* @y.48
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %42
  %51 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %52, i64 0, i64 0
  %54 = bitcast %union.rtunion_def* %53 to %struct.rtx_def**
  %55 = load %struct.rtx_def*, %struct.rtx_def** %54, align 8
  store %struct.rtx_def* %55, %struct.rtx_def** %11, align 8
  %56 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %57 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %58 = icmp eq %struct.rtx_def* %56, %57
  %59 = load i32, i32* @x.47
  %60 = load i32, i32* @y.48
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br i1 %58, label %67, label %68

; <label>:67:                                     ; preds = %originalBBpart213
  store i32 1, i32* %10, align 4
  br label %110

; <label>:68:                                     ; preds = %originalBBpart213
  %69 = load i32, i32* @x.47
  %70 = load i32, i32* @y.48
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %originalBB15alteredBB, %68
  %77 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %78 = bitcast %struct.rtx_def* %77 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 65535
  %81 = icmp eq i32 %80, 75
  %82 = load i32, i32* @x.47
  %83 = load i32, i32* @y.48
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart218, label %originalBB15alteredBB

originalBBpart218:                                ; preds = %originalBB15
  br i1 %81, label %90, label %109

; <label>:90:                                     ; preds = %originalBBpart218
  %91 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %92, i64 0, i64 0
  %94 = bitcast %union.rtunion_def* %93 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %94, align 8
  %96 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %97 = icmp eq %struct.rtx_def* %95, %96
  br i1 %97, label %98, label %109

; <label>:98:                                     ; preds = %90
  %99 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %100, i64 0, i64 1
  %102 = bitcast %union.rtunion_def* %101 to %struct.rtx_def**
  %103 = load %struct.rtx_def*, %struct.rtx_def** %102, align 8
  %104 = bitcast %struct.rtx_def* %103 to i32*
  %105 = load i32, i32* %104, align 8
  %106 = and i32 %105, 65535
  %107 = icmp eq i32 %106, 54
  br i1 %107, label %108, label %109

; <label>:108:                                    ; preds = %98
  store i32 1, i32* %10, align 4
  br label %110

; <label>:109:                                    ; preds = %98, %90, %originalBBpart218
  store i32 0, i32* %10, align 4
  br label %110

; <label>:110:                                    ; preds = %109, %108, %67, %originalBBpart29
  %111 = load i32, i32* %10, align 4
  ret i32 %111

originalBBalteredBB:                              ; preds = %originalBB, %1
  %112 = alloca i32, align 4
  %113 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %113, align 8
  %114 = load %struct.rtx_def*, %struct.rtx_def** %113, align 8
  %115 = bitcast %struct.rtx_def* %114 to i32*
  %116 = load i32, i32* %115, align 8
  %_ = sub i32 0, %116
  %gen = add i32 %_, 65535
  %_1 = sub i32 0, %116
  %gen2 = add i32 %_1, 65535
  %_3 = sub i32 0, %116
  %gen4 = add i32 %_3, 65535
  %_5 = sub i32 0, %116
  %gen6 = add i32 %_5, 65535
  %117 = and i32 %116, 65535
  %118 = icmp ne i32 %117, 66
  br label %originalBB

originalBB7alteredBB:                             ; preds = %originalBB7, %25
  store i32 0, i32* %10, align 4
  br label %originalBB7

originalBB11alteredBB:                            ; preds = %originalBB11, %42
  %119 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %120, i64 0, i64 0
  %122 = bitcast %union.rtunion_def* %121 to %struct.rtx_def**
  %123 = load %struct.rtx_def*, %struct.rtx_def** %122, align 8
  store %struct.rtx_def* %123, %struct.rtx_def** %11, align 8
  %124 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %125 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %126 = icmp eq %struct.rtx_def* %124, %125
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %68
  %127 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %128 = bitcast %struct.rtx_def* %127 to i32*
  %129 = load i32, i32* %128, align 8
  %_16 = shl i32 %129, 65535
  %130 = and i32 %129, 65535
  %131 = icmp eq i32 %130, 75
  br label %originalBB15
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.csa_memlist* @record_one_stack_memref(%struct.rtx_def*, %struct.rtx_def**, %struct.csa_memlist*) #0 {
  %4 = load i32, i32* @x.49
  %5 = load i32, i32* @y.50
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %struct.rtx_def**, align 8
  %14 = alloca %struct.csa_memlist*, align 8
  %15 = alloca %struct.csa_memlist*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %12, align 8
  store %struct.rtx_def** %1, %struct.rtx_def*** %13, align 8
  store %struct.csa_memlist* %2, %struct.csa_memlist** %14, align 8
  %16 = call noalias i8* @xmalloc(i64 32)
  %17 = bitcast i8* %16 to %struct.csa_memlist*
  store %struct.csa_memlist* %17, %struct.csa_memlist** %15, align 8
  %18 = load %struct.rtx_def**, %struct.rtx_def*** %13, align 8
  %19 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %20, i64 0, i64 0
  %22 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**
  %23 = load %struct.rtx_def*, %struct.rtx_def** %22, align 8
  %24 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %25 = icmp eq %struct.rtx_def* %23, %24
  %26 = load i32, i32* @x.49
  %27 = load i32, i32* @y.50
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %25, label %34, label %37

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load %struct.csa_memlist*, %struct.csa_memlist** %15, align 8
  %36 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %35, i32 0, i32 0
  store i64 0, i64* %36, align 8
  br label %70

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load i32, i32* @x.49
  %39 = load i32, i32* @y.50
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %37
  %46 = load %struct.rtx_def**, %struct.rtx_def*** %13, align 8
  %47 = load %struct.rtx_def*, %struct.rtx_def** %46, align 8
  %48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %48, i64 0, i64 0
  %50 = bitcast %union.rtunion_def* %49 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %50, align 8
  %52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %52, i64 0, i64 1
  %54 = bitcast %union.rtunion_def* %53 to %struct.rtx_def**
  %55 = load %struct.rtx_def*, %struct.rtx_def** %54, align 8
  %56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1
  %57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %56, i64 0, i64 0
  %58 = bitcast %union.rtunion_def* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = load %struct.csa_memlist*, %struct.csa_memlist** %15, align 8
  %61 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %60, i32 0, i32 0
  store i64 %59, i64* %61, align 8
  %62 = load i32, i32* @x.49
  %63 = load i32, i32* @y.50
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %70

; <label>:70:                                     ; preds = %originalBBpart24, %34
  %71 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %72 = load %struct.csa_memlist*, %struct.csa_memlist** %15, align 8
  %73 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %72, i32 0, i32 1
  store %struct.rtx_def* %71, %struct.rtx_def** %73, align 8
  %74 = load %struct.rtx_def**, %struct.rtx_def*** %13, align 8
  %75 = load %struct.csa_memlist*, %struct.csa_memlist** %15, align 8
  %76 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %75, i32 0, i32 2
  store %struct.rtx_def** %74, %struct.rtx_def*** %76, align 8
  %77 = load %struct.csa_memlist*, %struct.csa_memlist** %14, align 8
  %78 = load %struct.csa_memlist*, %struct.csa_memlist** %15, align 8
  %79 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %78, i32 0, i32 3
  store %struct.csa_memlist* %77, %struct.csa_memlist** %79, align 8
  %80 = load %struct.csa_memlist*, %struct.csa_memlist** %15, align 8
  ret %struct.csa_memlist* %80

originalBBalteredBB:                              ; preds = %originalBB, %3
  %81 = alloca %struct.rtx_def*, align 8
  %82 = alloca %struct.rtx_def**, align 8
  %83 = alloca %struct.csa_memlist*, align 8
  %84 = alloca %struct.csa_memlist*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %81, align 8
  store %struct.rtx_def** %1, %struct.rtx_def*** %82, align 8
  store %struct.csa_memlist* %2, %struct.csa_memlist** %83, align 8
  %85 = call noalias i8* @xmalloc(i64 32)
  %86 = bitcast i8* %85 to %struct.csa_memlist*
  store %struct.csa_memlist* %86, %struct.csa_memlist** %84, align 8
  %87 = load %struct.rtx_def**, %struct.rtx_def*** %82, align 8
  %88 = load %struct.rtx_def*, %struct.rtx_def** %87, align 8
  %89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %89, i64 0, i64 0
  %91 = bitcast %union.rtunion_def* %90 to %struct.rtx_def**
  %92 = load %struct.rtx_def*, %struct.rtx_def** %91, align 8
  %93 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %94 = icmp eq %struct.rtx_def* %92, %93
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %95 = load %struct.rtx_def**, %struct.rtx_def*** %13, align 8
  %96 = load %struct.rtx_def*, %struct.rtx_def** %95, align 8
  %97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %97, i64 0, i64 0
  %99 = bitcast %union.rtunion_def* %98 to %struct.rtx_def**
  %100 = load %struct.rtx_def*, %struct.rtx_def** %99, align 8
  %101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %101, i64 0, i64 1
  %103 = bitcast %union.rtunion_def* %102 to %struct.rtx_def**
  %104 = load %struct.rtx_def*, %struct.rtx_def** %103, align 8
  %105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1
  %106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %105, i64 0, i64 0
  %107 = bitcast %union.rtunion_def* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = load %struct.csa_memlist*, %struct.csa_memlist** %15, align 8
  %110 = getelementptr inbounds %struct.csa_memlist, %struct.csa_memlist* %109, i32 0, i32 0
  store i64 %108, i64* %110, align 8
  br label %originalBB1
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
