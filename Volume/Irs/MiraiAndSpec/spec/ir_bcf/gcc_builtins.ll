; ModuleID = 'host/ir_bcf/gcc_builtins.ll'
source_filename = "builtins.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.lang_decl = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.elims = type { i32, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i1 (%union.tree_node*)*, i1 (%union.tree_node*)*, void ()*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, i32 (%union.tree_node*, i8*, i32)*, i8, i8, i1 ()* }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i1 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void (i8*, i32)*, void ()*, void ()*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, %struct.rtx_def* (i32, %struct.rtx_def*)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.optab = type { i32, [59 x %struct.anon.3] }
%struct.anon.3 = type { i32, %struct.rtx_def* }
%struct.insn_data = type { i8*, i8*, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type opaque
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { i32, i8* }
%struct.tree_exp = type { %struct.tree_common, i32, [1 x %union.tree_node*] }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.tree_string = type { %struct.tree_common, %struct.rtx_def*, i32, i8* }
%struct.anon.0 = type { i32 }

@.str = private unnamed_addr constant [13 x i8] c"NOT_BUILT_IN\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"BUILT_IN_FRONTEND\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"BUILT_IN_MD\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"BUILT_IN_NORMAL\00", align 1
@built_in_class_names = constant [4 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0)], align 16
@.str.4 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ALLOCA\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"BUILT_IN_ABS\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"BUILT_IN_LABS\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"BUILT_IN_FABS\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FABSF\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FABSL\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"BUILT_IN_LLABS\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"BUILT_IN_IMAXABS\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CONJ\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CONJF\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CONJL\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CREAL\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CREALF\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CREALL\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CIMAG\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CIMAGF\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CIMAGL\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"BUILT_IN_BZERO\00", align 1
@.str.22 = private unnamed_addr constant [14 x i8] c"BUILT_IN_BCMP\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"BUILT_IN_FFS\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"BUILT_IN_INDEX\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"BUILT_IN_RINDEX\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"BUILT_IN_MEMCPY\00", align 1
@.str.27 = private unnamed_addr constant [16 x i8] c"BUILT_IN_MEMCMP\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"BUILT_IN_MEMSET\00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRCAT\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRNCAT\00", align 1
@.str.31 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRCPY\00", align 1
@.str.32 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRNCPY\00", align 1
@.str.33 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRCMP\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRNCMP\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRLEN\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRSTR\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRPBRK\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRSPN\00", align 1
@.str.39 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRCSPN\00", align 1
@.str.40 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRCHR\00", align 1
@.str.41 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRRCHR\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"BUILT_IN_SQRT\00", align 1
@.str.43 = private unnamed_addr constant [13 x i8] c"BUILT_IN_SIN\00", align 1
@.str.44 = private unnamed_addr constant [13 x i8] c"BUILT_IN_COS\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"BUILT_IN_SQRTF\00", align 1
@.str.46 = private unnamed_addr constant [14 x i8] c"BUILT_IN_SINF\00", align 1
@.str.47 = private unnamed_addr constant [14 x i8] c"BUILT_IN_COSF\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c"BUILT_IN_SQRTL\00", align 1
@.str.49 = private unnamed_addr constant [14 x i8] c"BUILT_IN_SINL\00", align 1
@.str.50 = private unnamed_addr constant [14 x i8] c"BUILT_IN_COSL\00", align 1
@.str.51 = private unnamed_addr constant [18 x i8] c"BUILT_IN_SAVEREGS\00", align 1
@.str.52 = private unnamed_addr constant [23 x i8] c"BUILT_IN_CLASSIFY_TYPE\00", align 1
@.str.53 = private unnamed_addr constant [18 x i8] c"BUILT_IN_NEXT_ARG\00", align 1
@.str.54 = private unnamed_addr constant [19 x i8] c"BUILT_IN_ARGS_INFO\00", align 1
@.str.55 = private unnamed_addr constant [20 x i8] c"BUILT_IN_CONSTANT_P\00", align 1
@.str.56 = private unnamed_addr constant [23 x i8] c"BUILT_IN_FRAME_ADDRESS\00", align 1
@.str.57 = private unnamed_addr constant [24 x i8] c"BUILT_IN_RETURN_ADDRESS\00", align 1
@.str.58 = private unnamed_addr constant [36 x i8] c"BUILT_IN_AGGREGATE_INCOMING_ADDRESS\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"BUILT_IN_APPLY_ARGS\00", align 1
@.str.60 = private unnamed_addr constant [15 x i8] c"BUILT_IN_APPLY\00", align 1
@.str.61 = private unnamed_addr constant [16 x i8] c"BUILT_IN_RETURN\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"BUILT_IN_SETJMP\00", align 1
@.str.63 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LONGJMP\00", align 1
@.str.64 = private unnamed_addr constant [14 x i8] c"BUILT_IN_TRAP\00", align 1
@.str.65 = private unnamed_addr constant [18 x i8] c"BUILT_IN_PREFETCH\00", align 1
@.str.66 = private unnamed_addr constant [17 x i8] c"BUILT_IN_PUTCHAR\00", align 1
@.str.67 = private unnamed_addr constant [14 x i8] c"BUILT_IN_PUTS\00", align 1
@.str.68 = private unnamed_addr constant [16 x i8] c"BUILT_IN_PRINTF\00", align 1
@.str.69 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FPUTC\00", align 1
@.str.70 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FPUTS\00", align 1
@.str.71 = private unnamed_addr constant [16 x i8] c"BUILT_IN_FWRITE\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"BUILT_IN_FPRINTF\00", align 1
@.str.73 = private unnamed_addr constant [26 x i8] c"BUILT_IN_PUTCHAR_UNLOCKED\00", align 1
@.str.74 = private unnamed_addr constant [23 x i8] c"BUILT_IN_PUTS_UNLOCKED\00", align 1
@.str.75 = private unnamed_addr constant [25 x i8] c"BUILT_IN_PRINTF_UNLOCKED\00", align 1
@.str.76 = private unnamed_addr constant [24 x i8] c"BUILT_IN_FPUTC_UNLOCKED\00", align 1
@.str.77 = private unnamed_addr constant [24 x i8] c"BUILT_IN_FPUTS_UNLOCKED\00", align 1
@.str.78 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FWRITE_UNLOCKED\00", align 1
@.str.79 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FPRINTF_UNLOCKED\00", align 1
@.str.80 = private unnamed_addr constant [19 x i8] c"BUILT_IN_ISGREATER\00", align 1
@.str.81 = private unnamed_addr constant [24 x i8] c"BUILT_IN_ISGREATEREQUAL\00", align 1
@.str.82 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ISLESS\00", align 1
@.str.83 = private unnamed_addr constant [21 x i8] c"BUILT_IN_ISLESSEQUAL\00", align 1
@.str.84 = private unnamed_addr constant [23 x i8] c"BUILT_IN_ISLESSGREATER\00", align 1
@.str.85 = private unnamed_addr constant [21 x i8] c"BUILT_IN_ISUNORDERED\00", align 1
@.str.86 = private unnamed_addr constant [21 x i8] c"BUILT_IN_UNWIND_INIT\00", align 1
@.str.87 = private unnamed_addr constant [19 x i8] c"BUILT_IN_DWARF_CFA\00", align 1
@.str.88 = private unnamed_addr constant [25 x i8] c"BUILT_IN_DWARF_FP_REGNUM\00", align 1
@.str.89 = private unnamed_addr constant [30 x i8] c"BUILT_IN_INIT_DWARF_REG_SIZES\00", align 1
@.str.90 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FROB_RETURN_ADDR\00", align 1
@.str.91 = private unnamed_addr constant [29 x i8] c"BUILT_IN_EXTRACT_RETURN_ADDR\00", align 1
@.str.92 = private unnamed_addr constant [19 x i8] c"BUILT_IN_EH_RETURN\00", align 1
@.str.93 = private unnamed_addr constant [30 x i8] c"BUILT_IN_EH_RETURN_DATA_REGNO\00", align 1
@.str.94 = private unnamed_addr constant [23 x i8] c"BUILT_IN_VARARGS_START\00", align 1
@.str.95 = private unnamed_addr constant [22 x i8] c"BUILT_IN_STDARG_START\00", align 1
@.str.96 = private unnamed_addr constant [16 x i8] c"BUILT_IN_VA_END\00", align 1
@.str.97 = private unnamed_addr constant [17 x i8] c"BUILT_IN_VA_COPY\00", align 1
@.str.98 = private unnamed_addr constant [16 x i8] c"BUILT_IN_EXPECT\00", align 1
@built_in_names = constant [95 x i8*] [i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.98, i32 0, i32 0)], align 16
@target_flags = external global i32, align 4
@global_rtl = external global [11 x %struct.rtx_def*], align 16
@setjmp_alias_set = internal global i64 -1, align 8
@mode_size = external constant [59 x i8], align 16
@cfun = external global %struct.function*, align 8
@static_chain_rtx = external global %struct.rtx_def*, align 8
@fixed_regs = external global [53 x i8], align 16
@expand_builtin_setjmp_receiver.elim_regs = internal constant [4 x %struct.elims] [%struct.elims { i32 16, i32 7 }, %struct.elims { i32 16, i32 6 }, %struct.elims { i32 20, i32 7 }, %struct.elims { i32 20, i32 6 }], align 16
@flag_pic = external global i32, align 4
@.str.99 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@const_int_rtx = external global [129 x %struct.rtx_def*], align 16
@.str.100 = private unnamed_addr constant [11 x i8] c"builtins.c\00", align 1
@__FUNCTION__.expand_builtin_longjmp = private unnamed_addr constant [23 x i8] c"expand_builtin_longjmp\00", align 1
@apply_args_reg_offset = internal global [53 x i32] zeroinitializer, align 16
@.str.101 = private unnamed_addr constant [48 x i8] c"__builtin_saveregs not supported by this target\00", align 1
@integer_types = external global [11 x %union.tree_node*], align 16
@global_trees = external global [51 x %union.tree_node*], align 16
@sizetype_tab = external global [6 x %union.tree_node*], align 16
@.str.102 = private unnamed_addr constant [49 x i8] c"first argument to `va_arg' not of type `va_list'\00", align 1
@lang_type_promotes_to = common global %union.tree_node* (%union.tree_node*)* null, align 8
@.str.103 = private unnamed_addr constant [17 x i8] c"<anonymous type>\00", align 1
@expand_builtin_va_arg.gave_help = internal global i8 0, align 1
@.str.104 = private unnamed_addr constant [51 x i8] c"`%s' is promoted to `%s' when passed through `...'\00", align 1
@.str.105 = private unnamed_addr constant [47 x i8] c"(so you should pass `%s' not `%s' to `va_arg')\00", align 1
@targetm = external global %struct.gcc_target, align 8
@optimize = external global i32, align 4
@.str.106 = private unnamed_addr constant [11 x i8] c"__builtin_\00", align 1
@__FUNCTION__.expand_builtin = private unnamed_addr constant [15 x i8] c"expand_builtin\00", align 1
@flag_unsafe_math_optimizations = external global i32, align 4
@current_function_decl = external global %union.tree_node*, align 8
@.str.107 = private unnamed_addr constant [44 x i8] c"__builtin_longjmp second argument must be 1\00", align 1
@.str.108 = private unnamed_addr constant [47 x i8] c"built-in function `%s' not currently supported\00", align 1
@built_in_decls = common global [95 x %union.tree_node*] zeroinitializer, align 16
@apply_args_size.size = internal global i32 -1, align 4
@struct_value_rtx = external global %struct.rtx_def*, align 8
@class_narrowest_mode = external constant [9 x i32], align 16
@mode_class = external constant [59 x i32], align 16
@mode_wider_mode = external constant [59 x i8], align 16
@__FUNCTION__.apply_args_size = private unnamed_addr constant [16 x i8] c"apply_args_size\00", align 1
@apply_args_mode = internal global [53 x i32] zeroinitializer, align 16
@optab_table = external global [49 x %struct.optab*], align 16
@__FUNCTION__.expand_builtin_mathfn = private unnamed_addr constant [22 x i8] c"expand_builtin_mathfn\00", align 1
@flag_errno_math = external global i32, align 4
@struct_value_incoming_rtx = external global %struct.rtx_def*, align 8
@__FUNCTION__.expand_builtin_apply = private unnamed_addr constant [21 x i8] c"expand_builtin_apply\00", align 1
@apply_result_size.size = internal global i32 -1, align 4
@__FUNCTION__.apply_result_size = private unnamed_addr constant [18 x i8] c"apply_result_size\00", align 1
@apply_result_mode = internal global [53 x i32] zeroinitializer, align 16
@.str.109 = private unnamed_addr constant [51 x i8] c"argument of `__builtin_args_info' must be constant\00", align 1
@.str.110 = private unnamed_addr constant [47 x i8] c"argument of `__builtin_args_info' out of range\00", align 1
@.str.111 = private unnamed_addr constant [42 x i8] c"missing argument in `__builtin_args_info'\00", align 1
@.str.112 = private unnamed_addr constant [44 x i8] c"`va_start' used in function with fixed args\00", align 1
@.str.113 = private unnamed_addr constant [55 x i8] c"second parameter of `va_start' not last named argument\00", align 1
@.str.114 = private unnamed_addr constant [48 x i8] c"`__builtin_next_arg' called without an argument\00", align 1
@.str.115 = private unnamed_addr constant [41 x i8] c"invalid arg to `__builtin_frame_address'\00", align 1
@.str.116 = private unnamed_addr constant [42 x i8] c"invalid arg to `__builtin_return_address'\00", align 1
@.str.117 = private unnamed_addr constant [45 x i8] c"unsupported arg to `__builtin_frame_address'\00", align 1
@.str.118 = private unnamed_addr constant [46 x i8] c"unsupported arg to `__builtin_return_address'\00", align 1
@__FUNCTION__.expand_builtin_ffs = private unnamed_addr constant [19 x i8] c"expand_builtin_ffs\00", align 1
@insn_data = external constant [0 x %struct.insn_data], align 8
@ptr_mode = external global i32, align 4
@tree_code_type = external global [256 x i8], align 16
@__FUNCTION__.c_readstr = private unnamed_addr constant [10 x i8] c"c_readstr\00", align 1
@__FUNCTION__.builtin_memcpy_read_str = private unnamed_addr constant [24 x i8] c"builtin_memcpy_read_str\00", align 1
@libfunc_table = external global [97 x %struct.rtx_def*], align 16
@__FUNCTION__.expand_builtin_fputs = private unnamed_addr constant [21 x i8] c"expand_builtin_fputs\00", align 1
@.str.119 = private unnamed_addr constant [42 x i8] c"too many arguments to function `va_start'\00", align 1
@.str.120 = private unnamed_addr constant [52 x i8] c"second arg to `__builtin_expect' must be a constant\00", align 1
@.str.121 = private unnamed_addr constant [54 x i8] c"second arg to `__builtin_prefetch' must be a constant\00", align 1
@.str.122 = private unnamed_addr constant [53 x i8] c"invalid second arg to __builtin_prefetch; using zero\00", align 1
@.str.123 = private unnamed_addr constant [53 x i8] c"third arg to `__builtin_prefetch' must be a constant\00", align 1
@.str.124 = private unnamed_addr constant [52 x i8] c"invalid third arg to __builtin_prefetch; using zero\00", align 1
@x86_prefetch_sse = external global i32, align 4
@cse_not_expected = external global i32, align 4
@.str.125 = private unnamed_addr constant [41 x i8] c"offset outside bounds of constant string\00", align 1
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0

; Function Attrs: noinline nounwind uwtable
define %struct.rtx_def* @expand_builtin_return_addr(i32, i32, %struct.rtx_def*) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %6, align 4
  store %struct.rtx_def* %2, %struct.rtx_def** %7, align 8
  %9 = load i32, i32* %6, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @ix86_setup_frame_addresses()
  br label %12

; <label>:12:                                     ; preds = %11, %3
  store i32 0, i32* %8, align 4
  br label %13

; <label>:13:                                     ; preds = %originalBBpart29, %12
  %14 = load i32, i32* @x
  %15 = load i32, i32* @y
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %13
  %22 = load i32, i32* %8, align 4
  %23 = load i32, i32* %6, align 4
  %24 = icmp slt i32 %22, %23
  %25 = load i32, i32* @x
  %26 = load i32, i32* @y
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %33, label %69

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load i32, i32* @target_flags, align 4
  %35 = and i32 %34, 33554432
  %36 = icmp ne i32 %35, 0
  %37 = select i1 %36, i32 5, i32 4
  %38 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %39 = call %struct.rtx_def* @memory_address(i32 %37, %struct.rtx_def* %38)
  store %struct.rtx_def* %39, %struct.rtx_def** %7, align 8
  %40 = load i32, i32* @target_flags, align 4
  %41 = and i32 %40, 33554432
  %42 = icmp ne i32 %41, 0
  %43 = select i1 %42, i32 5, i32 4
  %44 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %45 = call %struct.rtx_def* @gen_rtx_MEM(i32 %43, %struct.rtx_def* %44)
  store %struct.rtx_def* %45, %struct.rtx_def** %7, align 8
  %46 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %47 = call i64 @get_frame_alias_set()
  call void @set_mem_alias_set(%struct.rtx_def* %46, i64 %47)
  %48 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %49 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %48)
  store %struct.rtx_def* %49, %struct.rtx_def** %7, align 8
  br label %50

; <label>:50:                                     ; preds = %33
  %51 = load i32, i32* @x
  %52 = load i32, i32* @y
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %50
  %59 = load i32, i32* %8, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %8, align 4
  %61 = load i32, i32* @x
  %62 = load i32, i32* @y
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  br label %13

; <label>:69:                                     ; preds = %originalBBpart2
  %70 = load i32, i32* %5, align 4
  %71 = icmp eq i32 %70, 52
  br i1 %71, label %72, label %90

; <label>:72:                                     ; preds = %69
  %73 = load i32, i32* @x
  %74 = load i32, i32* @y
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %72
  %81 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  store %struct.rtx_def* %81, %struct.rtx_def** %4, align 8
  %82 = load i32, i32* @x
  %83 = load i32, i32* @y
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br label %139

; <label>:90:                                     ; preds = %69
  %91 = load i32, i32* %6, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %107

; <label>:93:                                     ; preds = %90
  %94 = load i32, i32* @target_flags, align 4
  %95 = and i32 %94, 33554432
  %96 = icmp ne i32 %95, 0
  %97 = select i1 %96, i32 5, i32 4
  %98 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8
  %99 = load i32, i32* @target_flags, align 4
  %100 = and i32 %99, 33554432
  %101 = icmp ne i32 %100, 0
  %102 = select i1 %101, i32 8, i32 4
  %103 = sub nsw i32 0, %102
  %104 = sext i32 %103 to i64
  %105 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %98, i64 %104)
  %106 = call %struct.rtx_def* @gen_rtx_MEM(i32 %97, %struct.rtx_def* %105)
  br label %120

; <label>:107:                                    ; preds = %90
  %108 = load i32, i32* @target_flags, align 4
  %109 = and i32 %108, 33554432
  %110 = icmp ne i32 %109, 0
  %111 = select i1 %110, i32 5, i32 4
  %112 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %113 = load i32, i32* @target_flags, align 4
  %114 = and i32 %113, 33554432
  %115 = icmp ne i32 %114, 0
  %116 = select i1 %115, i32 8, i32 4
  %117 = sext i32 %116 to i64
  %118 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %112, i64 %117)
  %119 = call %struct.rtx_def* @gen_rtx_MEM(i32 %111, %struct.rtx_def* %118)
  br label %120

; <label>:120:                                    ; preds = %107, %93
  %121 = phi %struct.rtx_def* [ %106, %93 ], [ %119, %107 ]
  %122 = load i32, i32* @x
  %123 = load i32, i32* @y
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %originalBB15alteredBB, %120
  store %struct.rtx_def* %121, %struct.rtx_def** %7, align 8
  %130 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  store %struct.rtx_def* %130, %struct.rtx_def** %4, align 8
  %131 = load i32, i32* @x
  %132 = load i32, i32* @y
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br label %139

; <label>:139:                                    ; preds = %originalBBpart217, %originalBBpart213
  %140 = load i32, i32* @x
  %141 = load i32, i32* @y
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %originalBB19alteredBB, %139
  %148 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %149 = load i32, i32* @x
  %150 = load i32, i32* @y
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  ret %struct.rtx_def* %148

originalBBalteredBB:                              ; preds = %originalBB, %13
  %157 = load i32, i32* %8, align 4
  %158 = load i32, i32* %6, align 4
  %159 = icmp slt i32 %157, %158
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %50
  %160 = load i32, i32* %8, align 4
  %_ = shl i32 %160, 1
  %_2 = sub i32 %160, 1
  %gen = mul i32 %_2, 1
  %_3 = sub i32 0, %160
  %gen4 = add i32 %_3, 1
  %_5 = shl i32 %160, 1
  %_6 = sub i32 0, %160
  %gen7 = add i32 %_6, 1
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %8, align 4
  br label %originalBB1

originalBB11alteredBB:                            ; preds = %originalBB11, %72
  %162 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  store %struct.rtx_def* %162, %struct.rtx_def** %4, align 8
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %120
  store %struct.rtx_def* %121, %struct.rtx_def** %7, align 8
  %163 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  store %struct.rtx_def* %163, %struct.rtx_def** %4, align 8
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %139
  %164 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  br label %originalBB19
}

declare void @ix86_setup_frame_addresses() #1

declare %struct.rtx_def* @memory_address(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #1

declare void @set_mem_alias_set(%struct.rtx_def*, i64) #1

declare i64 @get_frame_alias_set() #1

declare %struct.rtx_def* @copy_to_reg(%struct.rtx_def*) #1

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #1

; Function Attrs: noinline nounwind uwtable
define void @expand_builtin_setjmp_setup(%struct.rtx_def*, %struct.rtx_def*) #0 {
  %3 = alloca %struct.rtx_def*, align 8
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %3, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %4, align 8
  %8 = load i32, i32* @target_flags, align 4
  %9 = and i32 %8, 33554432
  %10 = icmp ne i32 %9, 0
  %11 = select i1 %10, i32 5, i32 4
  store i32 %11, i32* %5, align 4
  %12 = load i64, i64* @setjmp_alias_set, align 8
  %13 = icmp eq i64 %12, -1
  br i1 %13, label %14, label %16

; <label>:14:                                     ; preds = %2
  %15 = call i64 @new_alias_set()
  store i64 %15, i64* @setjmp_alias_set, align 8
  br label %16

; <label>:16:                                     ; preds = %14, %2
  %17 = load i32, i32* @target_flags, align 4
  %18 = and i32 %17, 33554432
  %19 = icmp ne i32 %18, 0
  %20 = select i1 %19, i32 5, i32 4
  %21 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  %22 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %21, %struct.rtx_def* null)
  %23 = call %struct.rtx_def* @force_reg(i32 %20, %struct.rtx_def* %22)
  store %struct.rtx_def* %23, %struct.rtx_def** %3, align 8
  call void @emit_queue()
  %24 = load i32, i32* @target_flags, align 4
  %25 = and i32 %24, 33554432
  %26 = icmp ne i32 %25, 0
  %27 = select i1 %26, i32 5, i32 4
  %28 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  %29 = call %struct.rtx_def* @gen_rtx_MEM(i32 %27, %struct.rtx_def* %28)
  store %struct.rtx_def* %29, %struct.rtx_def** %7, align 8
  %30 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %31 = load i64, i64* @setjmp_alias_set, align 8
  call void @set_mem_alias_set(%struct.rtx_def* %30, i64 %31)
  %32 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %33 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8
  %34 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %32, %struct.rtx_def* %33)
  %35 = load i32, i32* @target_flags, align 4
  %36 = and i32 %35, 33554432
  %37 = icmp ne i32 %36, 0
  %38 = select i1 %37, i32 5, i32 4
  %39 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  %40 = load i32, i32* @target_flags, align 4
  %41 = and i32 %40, 33554432
  %42 = icmp ne i32 %41, 0
  %43 = select i1 %42, i32 5, i32 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %39, i64 %47)
  %49 = call %struct.rtx_def* @gen_rtx_MEM(i32 %38, %struct.rtx_def* %48)
  store %struct.rtx_def* %49, %struct.rtx_def** %7, align 8
  %50 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %51 = load i64, i64* @setjmp_alias_set, align 8
  call void @set_mem_alias_set(%struct.rtx_def* %50, i64 %51)
  %52 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %53 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %52)
  %54 = load i32, i32* @target_flags, align 4
  %55 = and i32 %54, 33554432
  %56 = icmp ne i32 %55, 0
  %57 = select i1 %56, i32 5, i32 4
  %58 = load i32, i32* @target_flags, align 4
  %59 = and i32 %58, 33554432
  %60 = icmp ne i32 %59, 0
  %61 = select i1 %60, i32 5, i32 4
  %62 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %63 = call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 %61, %struct.rtx_def* %62)
  %64 = call %struct.rtx_def* @force_reg(i32 %57, %struct.rtx_def* %63)
  %65 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %53, %struct.rtx_def* %64)
  %66 = load i32, i32* %5, align 4
  %67 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  %68 = load i32, i32* @target_flags, align 4
  %69 = and i32 %68, 33554432
  %70 = icmp ne i32 %69, 0
  %71 = select i1 %70, i32 5, i32 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = mul nsw i32 2, %75
  %77 = sext i32 %76 to i64
  %78 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %67, i64 %77)
  %79 = call %struct.rtx_def* @gen_rtx_MEM(i32 %66, %struct.rtx_def* %78)
  store %struct.rtx_def* %79, %struct.rtx_def** %6, align 8
  %80 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %81 = load i64, i64* @setjmp_alias_set, align 8
  call void @set_mem_alias_set(%struct.rtx_def* %80, i64 %81)
  call void @emit_stack_save(i32 2, %struct.rtx_def** %6, %struct.rtx_def* null)
  %82 = load %struct.function*, %struct.function** @cfun, align 8
  %83 = getelementptr inbounds %struct.function, %struct.function* %82, i32 0, i32 56
  %84 = bitcast i24* %83 to i32*
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, -17
  %87 = or i32 %86, 16
  store i32 %87, i32* %84, align 8
  %88 = load %struct.function*, %struct.function** @cfun, align 8
  %89 = getelementptr inbounds %struct.function, %struct.function* %88, i32 0, i32 56
  %90 = bitcast i24* %89 to i32*
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, -257
  %93 = or i32 %92, 256
  store i32 %93, i32* %90, align 8
  ret void
}

declare i64 @new_alias_set() #1

declare %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @force_operand(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @emit_queue() #1

declare %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @validize_mem(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_u00(i32, i32, %struct.rtx_def*) #1

declare void @emit_stack_save(i32, %struct.rtx_def**, %struct.rtx_def*) #1

; Function Attrs: noinline nounwind uwtable
define void @expand_builtin_setjmp_receiver(%struct.rtx_def*) #0 {
  %2 = load i32, i32* @x.3
  %3 = load i32, i32* @y.4
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %struct.rtx_def*, align 8
  %11 = alloca i64, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %10, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16
  %13 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %12)
  %14 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %13)
  %15 = load %struct.rtx_def*, %struct.rtx_def** @static_chain_rtx, align 8
  %16 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %15)
  %17 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %16)
  %18 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8
  %19 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16
  %20 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %18, %struct.rtx_def* %19)
  %21 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16
  %22 = icmp ne i8 %21, 0
  %23 = load i32, i32* @x.3
  %24 = load i32, i32* @y.4
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %94

; <label>:31:                                     ; preds = %originalBBpart2
  store i64 0, i64* %11, align 8
  br label %32

; <label>:32:                                     ; preds = %49, %31
  %33 = load i64, i64* %11, align 8
  %34 = icmp ult i64 %33, 4
  br i1 %34, label %35, label %52

; <label>:35:                                     ; preds = %32
  %36 = load i64, i64* %11, align 8
  %37 = getelementptr inbounds [4 x %struct.elims], [4 x %struct.elims]* @expand_builtin_setjmp_receiver.elim_regs, i64 0, i64 %36
  %38 = getelementptr inbounds %struct.elims, %struct.elims* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 16
  br i1 %40, label %41, label %48

; <label>:41:                                     ; preds = %35
  %42 = load i64, i64* %11, align 8
  %43 = getelementptr inbounds [4 x %struct.elims], [4 x %struct.elims]* @expand_builtin_setjmp_receiver.elim_regs, i64 0, i64 %42
  %44 = getelementptr inbounds %struct.elims, %struct.elims* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 6
  br i1 %46, label %47, label %48

; <label>:47:                                     ; preds = %41
  br label %52

; <label>:48:                                     ; preds = %41, %35
  br label %49

; <label>:49:                                     ; preds = %48
  %50 = load i64, i64* %11, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %11, align 8
  br label %32

; <label>:52:                                     ; preds = %47, %32
  %53 = load i32, i32* @x.3
  %54 = load i32, i32* @y.4
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %52
  %61 = load i64, i64* %11, align 8
  %62 = icmp eq i64 %61, 4
  %63 = load i32, i32* @x.3
  %64 = load i32, i32* @y.4
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %62, label %71, label %93

; <label>:71:                                     ; preds = %originalBBpart24
  %72 = load i32, i32* @x.3
  %73 = load i32, i32* @y.4
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %71
  %80 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 16
  %81 = load %struct.function*, %struct.function** @cfun, align 8
  %82 = call %struct.rtx_def* @get_arg_pointer_save_area(%struct.function* %81)
  %83 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %82)
  %84 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %80, %struct.rtx_def* %83)
  %85 = load i32, i32* @x.3
  %86 = load i32, i32* @y.4
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %93

; <label>:93:                                     ; preds = %originalBBpart28, %originalBBpart24
  br label %94

; <label>:94:                                     ; preds = %93, %originalBBpart2
  %95 = load i32, i32* @target_flags, align 4
  %96 = and i32 %95, 33554432
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %105, label %98

; <label>:98:                                     ; preds = %94
  %99 = load i32, i32* @flag_pic, align 4
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %105

; <label>:101:                                    ; preds = %98
  %102 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %103 = call %struct.rtx_def* @gen_builtin_setjmp_receiver(%struct.rtx_def* %102)
  %104 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %103)
  br label %106

; <label>:105:                                    ; preds = %98, %94
  br label %106

; <label>:106:                                    ; preds = %105, %101
  %107 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 40, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.99, i32 0, i32 0))
  %108 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %107)
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %109 = alloca %struct.rtx_def*, align 8
  %110 = alloca i64, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %109, align 8
  %111 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16
  %112 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %111)
  %113 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %112)
  %114 = load %struct.rtx_def*, %struct.rtx_def** @static_chain_rtx, align 8
  %115 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %114)
  %116 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %115)
  %117 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8
  %118 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16
  %119 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %117, %struct.rtx_def* %118)
  %120 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16
  %121 = icmp ne i8 %120, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %52
  %122 = load i64, i64* %11, align 8
  %123 = icmp eq i64 %122, 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %71
  %124 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 16
  %125 = load %struct.function*, %struct.function** @cfun, align 8
  %126 = call %struct.rtx_def* @get_arg_pointer_save_area(%struct.function* %125)
  %127 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %126)
  %128 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %124, %struct.rtx_def* %127)
  br label %originalBB6
}

declare %struct.rtx_def* @emit_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @get_arg_pointer_save_area(%struct.function*) #1

declare %struct.rtx_def* @gen_builtin_setjmp_receiver(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_s(i32, i32, i8*) #1

; Function Attrs: noinline nounwind uwtable
define void @expand_builtin_longjmp(%struct.rtx_def*, %struct.rtx_def*) #0 {
  %3 = alloca %struct.rtx_def*, align 8
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  %9 = alloca i32, align 4
  store %struct.rtx_def* %0, %struct.rtx_def** %3, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %4, align 8
  %10 = load i32, i32* @target_flags, align 4
  %11 = and i32 %10, 33554432
  %12 = icmp ne i32 %11, 0
  %13 = select i1 %12, i32 5, i32 4
  store i32 %13, i32* %9, align 4
  %14 = load i64, i64* @setjmp_alias_set, align 8
  %15 = icmp eq i64 %14, -1
  br i1 %15, label %16, label %34

; <label>:16:                                     ; preds = %2
  %17 = load i32, i32* @x.5
  %18 = load i32, i32* @y.6
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %16
  %25 = call i64 @new_alias_set()
  store i64 %25, i64* @setjmp_alias_set, align 8
  %26 = load i32, i32* @x.5
  %27 = load i32, i32* @y.6
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %34

; <label>:34:                                     ; preds = %originalBBpart2, %2
  %35 = load i32, i32* @target_flags, align 4
  %36 = and i32 %35, 33554432
  %37 = icmp ne i32 %36, 0
  %38 = select i1 %37, i32 5, i32 4
  %39 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  %40 = call %struct.rtx_def* @force_reg(i32 %38, %struct.rtx_def* %39)
  store %struct.rtx_def* %40, %struct.rtx_def** %3, align 8
  %41 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %42 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8
  %43 = icmp ne %struct.rtx_def* %41, %42
  br i1 %43, label %44, label %45

; <label>:44:                                     ; preds = %34
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 661, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.expand_builtin_longjmp, i32 0, i32 0)) #6
  unreachable

; <label>:45:                                     ; preds = %34
  %46 = load %struct.function*, %struct.function** @cfun, align 8
  %47 = getelementptr inbounds %struct.function, %struct.function* %46, i32 0, i32 56
  %48 = bitcast i24* %47 to i32*
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -33
  %51 = or i32 %50, 32
  store i32 %51, i32* %48, align 8
  %52 = load i32, i32* @target_flags, align 4
  %53 = and i32 %52, 33554432
  %54 = icmp ne i32 %53, 0
  %55 = select i1 %54, i32 5, i32 4
  %56 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  %57 = call %struct.rtx_def* @gen_rtx_MEM(i32 %55, %struct.rtx_def* %56)
  store %struct.rtx_def* %57, %struct.rtx_def** %5, align 8
  %58 = load i32, i32* @target_flags, align 4
  %59 = and i32 %58, 33554432
  %60 = icmp ne i32 %59, 0
  %61 = select i1 %60, i32 5, i32 4
  %62 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  %63 = load i32, i32* @target_flags, align 4
  %64 = and i32 %63, 33554432
  %65 = icmp ne i32 %64, 0
  %66 = select i1 %65, i32 5, i32 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %62, i64 %70)
  %72 = call %struct.rtx_def* @gen_rtx_MEM(i32 %61, %struct.rtx_def* %71)
  store %struct.rtx_def* %72, %struct.rtx_def** %6, align 8
  %73 = load i32, i32* %9, align 4
  %74 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  %75 = load i32, i32* @target_flags, align 4
  %76 = and i32 %75, 33554432
  %77 = icmp ne i32 %76, 0
  %78 = select i1 %77, i32 5, i32 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = mul nsw i32 2, %82
  %84 = sext i32 %83 to i64
  %85 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %74, i64 %84)
  %86 = call %struct.rtx_def* @gen_rtx_MEM(i32 %73, %struct.rtx_def* %85)
  store %struct.rtx_def* %86, %struct.rtx_def** %7, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %88 = load i64, i64* @setjmp_alias_set, align 8
  call void @set_mem_alias_set(%struct.rtx_def* %87, i64 %88)
  %89 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %90 = load i64, i64* @setjmp_alias_set, align 8
  call void @set_mem_alias_set(%struct.rtx_def* %89, i64 %90)
  %91 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %92 = load i64, i64* @setjmp_alias_set, align 8
  call void @set_mem_alias_set(%struct.rtx_def* %91, i64 %92)
  %93 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %94 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %93)
  store %struct.rtx_def* %94, %struct.rtx_def** %6, align 8
  %95 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16
  %96 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %97 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %95, %struct.rtx_def* %96)
  %98 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  call void @emit_stack_restore(i32 2, %struct.rtx_def* %98, %struct.rtx_def* null)
  %99 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16
  %100 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %99)
  %101 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %100)
  %102 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16
  %103 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %102)
  %104 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %103)
  %105 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  call void @emit_indirect_jump(%struct.rtx_def* %105)
  %106 = call %struct.rtx_def* @get_last_insn()
  store %struct.rtx_def* %106, %struct.rtx_def** %8, align 8
  br label %107

; <label>:107:                                    ; preds = %originalBBpart216, %45
  %108 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %109 = icmp ne %struct.rtx_def* %108, null
  br i1 %109, label %110, label %207

; <label>:110:                                    ; preds = %107
  %111 = load i32, i32* @x.5
  %112 = load i32, i32* @y.6
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %110
  %119 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %120 = bitcast %struct.rtx_def* %119 to i32*
  %121 = load i32, i32* %120, align 8
  %122 = and i32 %121, 65535
  %123 = icmp eq i32 %122, 33
  %124 = load i32, i32* @x.5
  %125 = load i32, i32* @y.6
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %123, label %132, label %160

; <label>:132:                                    ; preds = %originalBBpart24
  %133 = load i32, i32* @x.5
  %134 = load i32, i32* @y.6
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %132
  %141 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %142 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %143, i64 0, i64 6
  %145 = bitcast %union.rtunion_def* %144 to %struct.rtx_def**
  %146 = load %struct.rtx_def*, %struct.rtx_def** %145, align 8
  %147 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 27, %struct.rtx_def* %141, %struct.rtx_def* %146)
  %148 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1
  %150 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %149, i64 0, i64 6
  %151 = bitcast %union.rtunion_def* %150 to %struct.rtx_def**
  store %struct.rtx_def* %147, %struct.rtx_def** %151, align 8
  %152 = load i32, i32* @x.5
  %153 = load i32, i32* @y.6
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %207

; <label>:160:                                    ; preds = %originalBBpart24
  %161 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %162 = bitcast %struct.rtx_def* %161 to i32*
  %163 = load i32, i32* %162, align 8
  %164 = and i32 %163, 65535
  %165 = icmp eq i32 %164, 34
  br i1 %165, label %166, label %167

; <label>:166:                                    ; preds = %160
  br label %207

; <label>:167:                                    ; preds = %160
  %168 = load i32, i32* @x.5
  %169 = load i32, i32* @y.6
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %167
  %176 = load i32, i32* @x.5
  %177 = load i32, i32* @y.6
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %184

; <label>:184:                                    ; preds = %originalBBpart212
  br label %185

; <label>:185:                                    ; preds = %184
  %186 = load i32, i32* @x.5
  %187 = load i32, i32* @y.6
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %185
  %194 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %194, i32 0, i32 1
  %196 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %195, i64 0, i64 1
  %197 = bitcast %union.rtunion_def* %196 to %struct.rtx_def**
  %198 = load %struct.rtx_def*, %struct.rtx_def** %197, align 8
  store %struct.rtx_def* %198, %struct.rtx_def** %8, align 8
  %199 = load i32, i32* @x.5
  %200 = load i32, i32* @y.6
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %107

; <label>:207:                                    ; preds = %166, %originalBBpart28, %107
  %208 = load i32, i32* @x.5
  %209 = load i32, i32* @y.6
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %207
  %216 = load i32, i32* @x.5
  %217 = load i32, i32* @y.6
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %16
  %224 = call i64 @new_alias_set()
  store i64 %224, i64* @setjmp_alias_set, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %110
  %225 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %226 = bitcast %struct.rtx_def* %225 to i32*
  %227 = load i32, i32* %226, align 8
  %_ = sub i32 %227, 65535
  %gen = mul i32 %_, 65535
  %228 = and i32 %227, 65535
  %229 = icmp eq i32 %228, 33
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %132
  %230 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %231 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %231, i32 0, i32 1
  %233 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %232, i64 0, i64 6
  %234 = bitcast %union.rtunion_def* %233 to %struct.rtx_def**
  %235 = load %struct.rtx_def*, %struct.rtx_def** %234, align 8
  %236 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 27, %struct.rtx_def* %230, %struct.rtx_def* %235)
  %237 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %238 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %237, i32 0, i32 1
  %239 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %238, i64 0, i64 6
  %240 = bitcast %union.rtunion_def* %239 to %struct.rtx_def**
  store %struct.rtx_def* %236, %struct.rtx_def** %240, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %167
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %185
  %241 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %242 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %241, i32 0, i32 1
  %243 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %242, i64 0, i64 1
  %244 = bitcast %union.rtunion_def* %243 to %struct.rtx_def**
  %245 = load %struct.rtx_def*, %struct.rtx_def** %244, align 8
  store %struct.rtx_def* %245, %struct.rtx_def** %8, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %207
  br label %originalBB18
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #2

declare void @emit_stack_restore(i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare void @emit_indirect_jump(%struct.rtx_def*) #1

declare %struct.rtx_def* @get_last_insn() #1

declare %struct.rtx_def* @alloc_EXPR_LIST(i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: noinline nounwind uwtable
define i32 @apply_args_register_offset(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = call i32 @apply_args_size()
  %4 = load i32, i32* %2, align 4
  store i32 %4, i32* %2, align 4
  %5 = load i32, i32* %2, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [53 x i32], [53 x i32]* @apply_args_reg_offset, i64 0, i64 %6
  %8 = load i32, i32* %7, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @apply_args_size() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* @apply_args_size.size, align 4
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %553

; <label>:7:                                      ; preds = %0
  %8 = load i32, i32* @target_flags, align 4
  %9 = and i32 %8, 33554432
  %10 = icmp ne i32 %9, 0
  %11 = select i1 %10, i32 5, i32 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  store i32 %15, i32* @apply_args_size.size, align 4
  %16 = load %struct.rtx_def*, %struct.rtx_def** @struct_value_rtx, align 8
  %17 = icmp ne %struct.rtx_def* %16, null
  br i1 %17, label %18, label %29

; <label>:18:                                     ; preds = %7
  %19 = load i32, i32* @target_flags, align 4
  %20 = and i32 %19, 33554432
  %21 = icmp ne i32 %20, 0
  %22 = select i1 %21, i32 5, i32 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = load i32, i32* @apply_args_size.size, align 4
  %28 = add nsw i32 %27, %26
  store i32 %28, i32* @apply_args_size.size, align 4
  br label %29

; <label>:29:                                     ; preds = %18, %7
  store i32 0, i32* %2, align 4
  br label %30

; <label>:30:                                     ; preds = %originalBBpart2108, %29
  %31 = load i32, i32* %2, align 4
  %32 = icmp ult i32 %31, 53
  br i1 %32, label %33, label %536

; <label>:33:                                     ; preds = %30
  %34 = load i32, i32* %2, align 4
  %35 = call zeroext i1 @ix86_function_arg_regno_p(i32 %34)
  br i1 %35, label %36, label %493

; <label>:36:                                     ; preds = %33
  store i32 0, i32* %4, align 4
  %37 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4
  store i32 %37, i32* %3, align 4
  br label %38

; <label>:38:                                     ; preds = %240, %36
  %39 = load i32, i32* %3, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %246

; <label>:41:                                     ; preds = %38
  %42 = load i32, i32* %2, align 4
  %43 = load i32, i32* %3, align 4
  %44 = call i32 @ix86_hard_regno_mode_ok(i32 %42, i32 %43)
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %223

; <label>:46:                                     ; preds = %41
  %47 = load i32, i32* %2, align 4
  %48 = icmp uge i32 %47, 8
  br i1 %48, label %49, label %68

; <label>:49:                                     ; preds = %46
  %50 = load i32, i32* @x.9
  %51 = load i32, i32* @y.10
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %49
  %58 = load i32, i32* %2, align 4
  %59 = icmp ule i32 %58, 15
  %60 = load i32, i32* @x.9
  %61 = load i32, i32* @y.10
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %59, label %134, label %68

; <label>:68:                                     ; preds = %originalBBpart2, %46
  %69 = load i32, i32* @x.9
  %70 = load i32, i32* @y.10
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %68
  %77 = load i32, i32* %2, align 4
  %78 = icmp uge i32 %77, 21
  %79 = load i32, i32* @x.9
  %80 = load i32, i32* @y.10
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %78, label %87, label %90

; <label>:87:                                     ; preds = %originalBBpart24
  %88 = load i32, i32* %2, align 4
  %89 = icmp ule i32 %88, 28
  br i1 %89, label %134, label %90

; <label>:90:                                     ; preds = %87, %originalBBpart24
  %91 = load i32, i32* @x.9
  %92 = load i32, i32* @y.10
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %90
  %99 = load i32, i32* %2, align 4
  %100 = icmp uge i32 %99, 45
  %101 = load i32, i32* @x.9
  %102 = load i32, i32* @y.10
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %100, label %109, label %112

; <label>:109:                                    ; preds = %originalBBpart28
  %110 = load i32, i32* %2, align 4
  %111 = icmp ule i32 %110, 52
  br i1 %111, label %134, label %112

; <label>:112:                                    ; preds = %109, %originalBBpart28
  %113 = load i32, i32* @x.9
  %114 = load i32, i32* @y.10
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %112
  %121 = load i32, i32* %2, align 4
  %122 = icmp uge i32 %121, 29
  %123 = load i32, i32* @x.9
  %124 = load i32, i32* @y.10
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %122, label %131, label %149

; <label>:131:                                    ; preds = %originalBBpart212
  %132 = load i32, i32* %2, align 4
  %133 = icmp ule i32 %132, 36
  br i1 %133, label %134, label %149

; <label>:134:                                    ; preds = %131, %109, %87, %originalBBpart2
  %135 = load i32, i32* %3, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i64 0, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 5
  br i1 %139, label %146, label %140

; <label>:140:                                    ; preds = %134
  %141 = load i32, i32* %3, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i64 0, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 6
  br label %146

; <label>:146:                                    ; preds = %140, %134
  %147 = phi i1 [ true, %134 ], [ %145, %140 ]
  %148 = select i1 %147, i32 2, i32 1
  br label %218

; <label>:149:                                    ; preds = %131, %originalBBpart212
  %150 = load i32, i32* @x.9
  %151 = load i32, i32* @y.10
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %149
  %158 = load i32, i32* %3, align 4
  %159 = icmp eq i32 %158, 18
  %160 = load i32, i32* @x.9
  %161 = load i32, i32* @y.10
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %159, label %168, label %173

; <label>:168:                                    ; preds = %originalBBpart216
  %169 = load i32, i32* @target_flags, align 4
  %170 = and i32 %169, 33554432
  %171 = icmp ne i32 %170, 0
  %172 = select i1 %171, i32 2, i32 3
  br label %216

; <label>:173:                                    ; preds = %originalBBpart216
  %174 = load i32, i32* %3, align 4
  %175 = icmp eq i32 %174, 24
  br i1 %175, label %176, label %181

; <label>:176:                                    ; preds = %173
  %177 = load i32, i32* @target_flags, align 4
  %178 = and i32 %177, 33554432
  %179 = icmp ne i32 %178, 0
  %180 = select i1 %179, i32 4, i32 6
  br label %214

; <label>:181:                                    ; preds = %173
  %182 = load i32, i32* @x.9
  %183 = load i32, i32* @y.10
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %181
  %190 = load i32, i32* %3, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %191
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = load i32, i32* @target_flags, align 4
  %196 = and i32 %195, 33554432
  %197 = icmp ne i32 %196, 0
  %198 = select i1 %197, i32 8, i32 4
  %199 = add nsw i32 %194, %198
  %200 = sub nsw i32 %199, 1
  %201 = load i32, i32* @target_flags, align 4
  %202 = and i32 %201, 33554432
  %203 = icmp ne i32 %202, 0
  %204 = select i1 %203, i32 8, i32 4
  %205 = sdiv i32 %200, %204
  %206 = load i32, i32* @x.9
  %207 = load i32, i32* @y.10
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBBpart245, label %originalBB18alteredBB

originalBBpart245:                                ; preds = %originalBB18
  br label %214

; <label>:214:                                    ; preds = %originalBBpart245, %176
  %215 = phi i32 [ %180, %176 ], [ %205, %originalBBpart245 ]
  br label %216

; <label>:216:                                    ; preds = %214, %168
  %217 = phi i32 [ %172, %168 ], [ %215, %214 ]
  br label %218

; <label>:218:                                    ; preds = %216, %146
  %219 = phi i32 [ %148, %146 ], [ %217, %216 ]
  %220 = icmp eq i32 %219, 1
  br i1 %220, label %221, label %223

; <label>:221:                                    ; preds = %218
  %222 = load i32, i32* %3, align 4
  store i32 %222, i32* %4, align 4
  br label %223

; <label>:223:                                    ; preds = %221, %218, %41
  %224 = load i32, i32* @x.9
  %225 = load i32, i32* @y.10
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %223
  %232 = load i32, i32* @x.9
  %233 = load i32, i32* @y.10
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %240

; <label>:240:                                    ; preds = %originalBBpart249
  %241 = load i32, i32* %3, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i64 0, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i32
  store i32 %245, i32* %3, align 4
  br label %38

; <label>:246:                                    ; preds = %38
  %247 = load i32, i32* %4, align 4
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %321

; <label>:249:                                    ; preds = %246
  %250 = load i32, i32* @x.9
  %251 = load i32, i32* @y.10
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %249
  %258 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @class_narrowest_mode, i64 0, i64 2), align 8
  store i32 %258, i32* %3, align 4
  %259 = load i32, i32* @x.9
  %260 = load i32, i32* @y.10
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %267

; <label>:267:                                    ; preds = %314, %originalBBpart253
  %268 = load i32, i32* %3, align 4
  %269 = icmp ne i32 %268, 0
  br i1 %269, label %270, label %320

; <label>:270:                                    ; preds = %267
  %271 = load i32, i32* @x.9
  %272 = load i32, i32* @y.10
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %270
  %279 = load i32, i32* %2, align 4
  %280 = load i32, i32* %3, align 4
  %281 = call i32 @ix86_hard_regno_mode_ok(i32 %279, i32 %280)
  %282 = icmp ne i32 %281, 0
  %283 = load i32, i32* @x.9
  %284 = load i32, i32* @y.10
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br i1 %282, label %291, label %313

; <label>:291:                                    ; preds = %originalBBpart257
  %292 = load i32, i32* %3, align 4
  %293 = call i32 @have_insn_for(i32 47, i32 %292)
  %294 = icmp ne i32 %293, 0
  br i1 %294, label %295, label %313

; <label>:295:                                    ; preds = %291
  %296 = load i32, i32* @x.9
  %297 = load i32, i32* @y.10
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %295
  %304 = load i32, i32* %3, align 4
  store i32 %304, i32* %4, align 4
  %305 = load i32, i32* @x.9
  %306 = load i32, i32* @y.10
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %313

; <label>:313:                                    ; preds = %originalBBpart261, %291, %originalBBpart257
  br label %314

; <label>:314:                                    ; preds = %313
  %315 = load i32, i32* %3, align 4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i64 0, i64 %316
  %318 = load i8, i8* %317, align 1
  %319 = zext i8 %318 to i32
  store i32 %319, i32* %3, align 4
  br label %267

; <label>:320:                                    ; preds = %267
  br label %321

; <label>:321:                                    ; preds = %320, %246
  %322 = load i32, i32* %4, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %396

; <label>:324:                                    ; preds = %321
  %325 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @class_narrowest_mode, i64 0, i64 8), align 16
  store i32 %325, i32* %3, align 4
  br label %326

; <label>:326:                                    ; preds = %373, %324
  %327 = load i32, i32* @x.9
  %328 = load i32, i32* @y.10
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %originalBB63alteredBB, %326
  %335 = load i32, i32* %3, align 4
  %336 = icmp ne i32 %335, 0
  %337 = load i32, i32* @x.9
  %338 = load i32, i32* @y.10
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br i1 %336, label %345, label %379

; <label>:345:                                    ; preds = %originalBBpart265
  %346 = load i32, i32* %2, align 4
  %347 = load i32, i32* %3, align 4
  %348 = call i32 @ix86_hard_regno_mode_ok(i32 %346, i32 %347)
  %349 = icmp ne i32 %348, 0
  br i1 %349, label %350, label %372

; <label>:350:                                    ; preds = %345
  %351 = load i32, i32* @x.9
  %352 = load i32, i32* @y.10
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %originalBB67alteredBB, %350
  %359 = load i32, i32* %3, align 4
  %360 = call i32 @have_insn_for(i32 47, i32 %359)
  %361 = icmp ne i32 %360, 0
  %362 = load i32, i32* @x.9
  %363 = load i32, i32* @y.10
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br i1 %361, label %370, label %372

; <label>:370:                                    ; preds = %originalBBpart269
  %371 = load i32, i32* %3, align 4
  store i32 %371, i32* %4, align 4
  br label %372

; <label>:372:                                    ; preds = %370, %originalBBpart269, %345
  br label %373

; <label>:373:                                    ; preds = %372
  %374 = load i32, i32* %3, align 4
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i64 0, i64 %375
  %377 = load i8, i8* %376, align 1
  %378 = zext i8 %377 to i32
  store i32 %378, i32* %3, align 4
  br label %326

; <label>:379:                                    ; preds = %originalBBpart265
  %380 = load i32, i32* @x.9
  %381 = load i32, i32* @y.10
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %379
  %388 = load i32, i32* @x.9
  %389 = load i32, i32* @y.10
  %390 = sub i32 %388, 1
  %391 = mul i32 %388, %390
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %393, %394
  br i1 %395, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %396

; <label>:396:                                    ; preds = %originalBBpart273, %321
  %397 = load i32, i32* %4, align 4
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %423

; <label>:399:                                    ; preds = %396
  %400 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @class_narrowest_mode, i64 0, i64 7), align 4
  store i32 %400, i32* %3, align 4
  br label %401

; <label>:401:                                    ; preds = %416, %399
  %402 = load i32, i32* %3, align 4
  %403 = icmp ne i32 %402, 0
  br i1 %403, label %404, label %422

; <label>:404:                                    ; preds = %401
  %405 = load i32, i32* %2, align 4
  %406 = load i32, i32* %3, align 4
  %407 = call i32 @ix86_hard_regno_mode_ok(i32 %405, i32 %406)
  %408 = icmp ne i32 %407, 0
  br i1 %408, label %409, label %415

; <label>:409:                                    ; preds = %404
  %410 = load i32, i32* %3, align 4
  %411 = call i32 @have_insn_for(i32 47, i32 %410)
  %412 = icmp ne i32 %411, 0
  br i1 %412, label %413, label %415

; <label>:413:                                    ; preds = %409
  %414 = load i32, i32* %3, align 4
  store i32 %414, i32* %4, align 4
  br label %415

; <label>:415:                                    ; preds = %413, %409, %404
  br label %416

; <label>:416:                                    ; preds = %415
  %417 = load i32, i32* %3, align 4
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i64 0, i64 %418
  %420 = load i8, i8* %419, align 1
  %421 = zext i8 %420 to i32
  store i32 %421, i32* %3, align 4
  br label %401

; <label>:422:                                    ; preds = %401
  br label %423

; <label>:423:                                    ; preds = %422, %396
  %424 = load i32, i32* %4, align 4
  store i32 %424, i32* %3, align 4
  %425 = load i32, i32* %3, align 4
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %444

; <label>:427:                                    ; preds = %423
  %428 = load i32, i32* @x.9
  %429 = load i32, i32* @y.10
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %originalBB75alteredBB, %427
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 944, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.apply_args_size, i32 0, i32 0)) #6
  %436 = load i32, i32* @x.9
  %437 = load i32, i32* @y.10
  %438 = sub i32 %436, 1
  %439 = mul i32 %436, %438
  %440 = urem i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %437, 10
  %443 = or i1 %441, %442
  br i1 %443, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  unreachable

; <label>:444:                                    ; preds = %423
  %445 = load i32, i32* @x.9
  %446 = load i32, i32* @y.10
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %originalBB79alteredBB, %444
  %453 = load i32, i32* %3, align 4
  %454 = call i32 @get_mode_alignment(i32 %453)
  %455 = udiv i32 %454, 8
  store i32 %455, i32* %1, align 4
  %456 = load i32, i32* @apply_args_size.size, align 4
  %457 = load i32, i32* %1, align 4
  %458 = srem i32 %456, %457
  %459 = icmp ne i32 %458, 0
  %460 = load i32, i32* @x.9
  %461 = load i32, i32* @y.10
  %462 = sub i32 %460, 1
  %463 = mul i32 %460, %462
  %464 = urem i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = icmp slt i32 %461, 10
  %467 = or i1 %465, %466
  br i1 %467, label %originalBBpart296, label %originalBB79alteredBB

originalBBpart296:                                ; preds = %originalBB79
  br i1 %459, label %468, label %477

; <label>:468:                                    ; preds = %originalBBpart296
  %469 = load i32, i32* @apply_args_size.size, align 4
  %470 = load i32, i32* %1, align 4
  %471 = add nsw i32 %469, %470
  %472 = sub nsw i32 %471, 1
  %473 = load i32, i32* %1, align 4
  %474 = sdiv i32 %472, %473
  %475 = load i32, i32* %1, align 4
  %476 = mul nsw i32 %474, %475
  store i32 %476, i32* @apply_args_size.size, align 4
  br label %477

; <label>:477:                                    ; preds = %468, %originalBBpart296
  %478 = load i32, i32* @apply_args_size.size, align 4
  %479 = load i32, i32* %2, align 4
  %480 = zext i32 %479 to i64
  %481 = getelementptr inbounds [53 x i32], [53 x i32]* @apply_args_reg_offset, i64 0, i64 %480
  store i32 %478, i32* %481, align 4
  %482 = load i32, i32* %3, align 4
  %483 = sext i32 %482 to i64
  %484 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %483
  %485 = load i8, i8* %484, align 1
  %486 = zext i8 %485 to i32
  %487 = load i32, i32* @apply_args_size.size, align 4
  %488 = add nsw i32 %487, %486
  store i32 %488, i32* @apply_args_size.size, align 4
  %489 = load i32, i32* %3, align 4
  %490 = load i32, i32* %2, align 4
  %491 = zext i32 %490 to i64
  %492 = getelementptr inbounds [53 x i32], [53 x i32]* @apply_args_mode, i64 0, i64 %491
  store i32 %489, i32* %492, align 4
  br label %500

; <label>:493:                                    ; preds = %33
  %494 = load i32, i32* %2, align 4
  %495 = zext i32 %494 to i64
  %496 = getelementptr inbounds [53 x i32], [53 x i32]* @apply_args_mode, i64 0, i64 %495
  store i32 0, i32* %496, align 4
  %497 = load i32, i32* %2, align 4
  %498 = zext i32 %497 to i64
  %499 = getelementptr inbounds [53 x i32], [53 x i32]* @apply_args_reg_offset, i64 0, i64 %498
  store i32 0, i32* %499, align 4
  br label %500

; <label>:500:                                    ; preds = %493, %477
  %501 = load i32, i32* @x.9
  %502 = load i32, i32* @y.10
  %503 = sub i32 %501, 1
  %504 = mul i32 %501, %503
  %505 = urem i32 %504, 2
  %506 = icmp eq i32 %505, 0
  %507 = icmp slt i32 %502, 10
  %508 = or i1 %506, %507
  br i1 %508, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %500
  %509 = load i32, i32* @x.9
  %510 = load i32, i32* @y.10
  %511 = sub i32 %509, 1
  %512 = mul i32 %509, %511
  %513 = urem i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %510, 10
  %516 = or i1 %514, %515
  br i1 %516, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br label %517

; <label>:517:                                    ; preds = %originalBBpart2100
  %518 = load i32, i32* @x.9
  %519 = load i32, i32* @y.10
  %520 = sub i32 %518, 1
  %521 = mul i32 %518, %520
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %519, 10
  %525 = or i1 %523, %524
  br i1 %525, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %originalBB102alteredBB, %517
  %526 = load i32, i32* %2, align 4
  %527 = add i32 %526, 1
  store i32 %527, i32* %2, align 4
  %528 = load i32, i32* @x.9
  %529 = load i32, i32* @y.10
  %530 = sub i32 %528, 1
  %531 = mul i32 %528, %530
  %532 = urem i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = icmp slt i32 %529, 10
  %535 = or i1 %533, %534
  br i1 %535, label %originalBBpart2108, label %originalBB102alteredBB

originalBBpart2108:                               ; preds = %originalBB102
  br label %30

; <label>:536:                                    ; preds = %30
  %537 = load i32, i32* @x.9
  %538 = load i32, i32* @y.10
  %539 = sub i32 %537, 1
  %540 = mul i32 %537, %539
  %541 = urem i32 %540, 2
  %542 = icmp eq i32 %541, 0
  %543 = icmp slt i32 %538, 10
  %544 = or i1 %542, %543
  br i1 %544, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %originalBB110alteredBB, %536
  %545 = load i32, i32* @x.9
  %546 = load i32, i32* @y.10
  %547 = sub i32 %545, 1
  %548 = mul i32 %545, %547
  %549 = urem i32 %548, 2
  %550 = icmp eq i32 %549, 0
  %551 = icmp slt i32 %546, 10
  %552 = or i1 %550, %551
  br i1 %552, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br label %553

; <label>:553:                                    ; preds = %originalBBpart2112, %0
  %554 = load i32, i32* @apply_args_size.size, align 4
  ret i32 %554

originalBBalteredBB:                              ; preds = %originalBB, %49
  %555 = load i32, i32* %2, align 4
  %556 = icmp ule i32 %555, 15
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %68
  %557 = load i32, i32* %2, align 4
  %558 = icmp uge i32 %557, 21
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %90
  %559 = load i32, i32* %2, align 4
  %560 = icmp uge i32 %559, 45
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %112
  %561 = load i32, i32* %2, align 4
  %562 = icmp uge i32 %561, 29
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %149
  %563 = load i32, i32* %3, align 4
  %564 = icmp eq i32 %563, 18
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %181
  %565 = load i32, i32* %3, align 4
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %566
  %568 = load i8, i8* %567, align 1
  %569 = zext i8 %568 to i32
  %570 = load i32, i32* @target_flags, align 4
  %_ = sub i32 0, %570
  %gen = add i32 %_, 33554432
  %_19 = shl i32 %570, 33554432
  %_20 = sub i32 %570, 33554432
  %gen21 = mul i32 %_20, 33554432
  %_22 = sub i32 %570, 33554432
  %gen23 = mul i32 %_22, 33554432
  %571 = and i32 %570, 33554432
  %572 = icmp ne i32 %571, 0
  %573 = select i1 %572, i32 8, i32 4
  %_24 = sub i32 %569, %573
  %gen25 = mul i32 %_24, %573
  %_26 = sub i32 %569, %573
  %gen27 = mul i32 %_26, %573
  %_28 = sub i32 0, %569
  %gen29 = add i32 %_28, %573
  %574 = add nsw i32 %569, %573
  %_30 = sub i32 %574, 1
  %gen31 = mul i32 %_30, 1
  %_32 = sub i32 %574, 1
  %gen33 = mul i32 %_32, 1
  %_34 = sub i32 %574, 1
  %gen35 = mul i32 %_34, 1
  %575 = sub nsw i32 %574, 1
  %576 = load i32, i32* @target_flags, align 4
  %_36 = sub i32 0, %576
  %gen37 = add i32 %_36, 33554432
  %577 = and i32 %576, 33554432
  %578 = icmp ne i32 %577, 0
  %579 = select i1 %578, i32 8, i32 4
  %_38 = sub i32 0, %575
  %gen39 = add i32 %_38, %579
  %_40 = sub i32 0, %575
  %gen41 = add i32 %_40, %579
  %_42 = sub i32 %575, %579
  %gen43 = mul i32 %_42, %579
  %580 = sdiv i32 %575, %579
  br label %originalBB18

originalBB47alteredBB:                            ; preds = %originalBB47, %223
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %249
  %581 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @class_narrowest_mode, i64 0, i64 2), align 8
  store i32 %581, i32* %3, align 4
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %270
  %582 = load i32, i32* %2, align 4
  %583 = load i32, i32* %3, align 4
  %584 = call i32 @ix86_hard_regno_mode_ok(i32 %582, i32 %583)
  %585 = icmp ne i32 %584, 0
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %295
  %586 = load i32, i32* %3, align 4
  store i32 %586, i32* %4, align 4
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %326
  %587 = load i32, i32* %3, align 4
  %588 = icmp ne i32 %587, 0
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %350
  %589 = load i32, i32* %3, align 4
  %590 = call i32 @have_insn_for(i32 47, i32 %589)
  %591 = icmp ne i32 %590, 0
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %379
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %427
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 944, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.apply_args_size, i32 0, i32 0)) #6
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %444
  %592 = load i32, i32* %3, align 4
  %593 = call i32 @get_mode_alignment(i32 %592)
  %_80 = sub i32 0, %593
  %gen81 = add i32 %_80, 8
  %_82 = shl i32 %593, 8
  %_83 = sub i32 %593, 8
  %gen84 = mul i32 %_83, 8
  %_85 = sub i32 %593, 8
  %gen86 = mul i32 %_85, 8
  %_87 = sub i32 %593, 8
  %gen88 = mul i32 %_87, 8
  %_89 = shl i32 %593, 8
  %_90 = shl i32 %593, 8
  %_91 = sub i32 %593, 8
  %gen92 = mul i32 %_91, 8
  %_93 = sub i32 %593, 8
  %gen94 = mul i32 %_93, 8
  %594 = udiv i32 %593, 8
  store i32 %594, i32* %1, align 4
  %595 = load i32, i32* @apply_args_size.size, align 4
  %596 = load i32, i32* %1, align 4
  %597 = srem i32 %595, %596
  %598 = icmp ne i32 %597, 0
  br label %originalBB79

originalBB98alteredBB:                            ; preds = %originalBB98, %500
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %517
  %599 = load i32, i32* %2, align 4
  %_103 = sub i32 0, %599
  %gen104 = add i32 %_103, 1
  %_105 = shl i32 %599, 1
  %_106 = shl i32 %599, 1
  %600 = add i32 %599, 1
  store i32 %600, i32* %2, align 4
  br label %originalBB102

originalBB110alteredBB:                           ; preds = %originalBB110, %536
  br label %originalBB110
}

; Function Attrs: noinline nounwind uwtable
define %struct.rtx_def* @expand_builtin_saveregs() #0 {
  %1 = load i32, i32* @x.11
  %2 = load i32, i32* @y.12
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca %struct.rtx_def*, align 8
  %10 = alloca %struct.rtx_def*, align 8
  %11 = alloca %struct.rtx_def*, align 8
  %12 = load %struct.function*, %struct.function** @cfun, align 8
  %13 = getelementptr inbounds %struct.function, %struct.function* %12, i32 0, i32 2
  %14 = load %struct.expr_status*, %struct.expr_status** %13, align 8
  %15 = getelementptr inbounds %struct.expr_status, %struct.expr_status* %14, i32 0, i32 3
  %16 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %17 = icmp ne %struct.rtx_def* %16, null
  %18 = load i32, i32* @x.11
  %19 = load i32, i32* @y.12
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %48

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* @x.11
  %28 = load i32, i32* @y.12
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %26
  %35 = load %struct.function*, %struct.function** @cfun, align 8
  %36 = getelementptr inbounds %struct.function, %struct.function* %35, i32 0, i32 2
  %37 = load %struct.expr_status*, %struct.expr_status** %36, align 8
  %38 = getelementptr inbounds %struct.expr_status, %struct.expr_status* %37, i32 0, i32 3
  %39 = load %struct.rtx_def*, %struct.rtx_def** %38, align 8
  store %struct.rtx_def* %39, %struct.rtx_def** %9, align 8
  %40 = load i32, i32* @x.11
  %41 = load i32, i32* @y.12
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %60

; <label>:48:                                     ; preds = %originalBBpart2
  call void @start_sequence()
  call void (i8*, ...) @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.101, i32 0, i32 0))
  %49 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %49, %struct.rtx_def** %10, align 8
  %50 = call %struct.rtx_def* @get_insns()
  store %struct.rtx_def* %50, %struct.rtx_def** %11, align 8
  call void @end_sequence()
  %51 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %52 = load %struct.function*, %struct.function** @cfun, align 8
  %53 = getelementptr inbounds %struct.function, %struct.function* %52, i32 0, i32 2
  %54 = load %struct.expr_status*, %struct.expr_status** %53, align 8
  %55 = getelementptr inbounds %struct.expr_status, %struct.expr_status* %54, i32 0, i32 3
  store %struct.rtx_def* %51, %struct.rtx_def** %55, align 8
  call void @push_topmost_sequence()
  %56 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %57 = call %struct.rtx_def* @get_insns()
  %58 = call %struct.rtx_def* @emit_insns_after(%struct.rtx_def* %56, %struct.rtx_def* %57)
  call void @pop_topmost_sequence()
  %59 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  store %struct.rtx_def* %59, %struct.rtx_def** %9, align 8
  br label %60

; <label>:60:                                     ; preds = %48, %originalBBpart24
  %61 = load i32, i32* @x.11
  %62 = load i32, i32* @y.12
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %60
  %69 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %70 = load i32, i32* @x.11
  %71 = load i32, i32* @y.12
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret %struct.rtx_def* %69

originalBBalteredBB:                              ; preds = %originalBB, %0
  %78 = alloca %struct.rtx_def*, align 8
  %79 = alloca %struct.rtx_def*, align 8
  %80 = alloca %struct.rtx_def*, align 8
  %81 = load %struct.function*, %struct.function** @cfun, align 8
  %82 = getelementptr inbounds %struct.function, %struct.function* %81, i32 0, i32 2
  %83 = load %struct.expr_status*, %struct.expr_status** %82, align 8
  %84 = getelementptr inbounds %struct.expr_status, %struct.expr_status* %83, i32 0, i32 3
  %85 = load %struct.rtx_def*, %struct.rtx_def** %84, align 8
  %86 = icmp ne %struct.rtx_def* %85, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %87 = load %struct.function*, %struct.function** @cfun, align 8
  %88 = getelementptr inbounds %struct.function, %struct.function* %87, i32 0, i32 2
  %89 = load %struct.expr_status*, %struct.expr_status** %88, align 8
  %90 = getelementptr inbounds %struct.expr_status, %struct.expr_status* %89, i32 0, i32 3
  %91 = load %struct.rtx_def*, %struct.rtx_def** %90, align 8
  store %struct.rtx_def* %91, %struct.rtx_def** %9, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %60
  %92 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  br label %originalBB6
}

declare void @start_sequence() #1

declare void @error(i8*, ...) #1

declare %struct.rtx_def* @get_insns() #1

declare void @end_sequence() #1

declare void @push_topmost_sequence() #1

declare %struct.rtx_def* @emit_insns_after(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @pop_topmost_sequence() #1

; Function Attrs: noinline nounwind uwtable
define void @std_expand_builtin_va_start(i32, %union.tree_node*, %struct.rtx_def*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %union.tree_node*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store %union.tree_node* %1, %union.tree_node** %5, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %6, align 8
  %11 = load i32, i32* %4, align 4
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %65, label %13

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @target_flags, align 4
  %15 = and i32 %14, 33554432
  %16 = icmp ne i32 %15, 0
  %17 = select i1 %16, i32 64, i32 32
  %18 = sdiv i32 %17, 8
  store i32 %18, i32* %8, align 4
  %19 = load i32, i32* @target_flags, align 4
  %20 = and i32 %19, 33554432
  %21 = icmp ne i32 %20, 0
  %22 = select i1 %21, i32 8, i32 4
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %24 = bitcast %union.tree_node* %23 to %struct.tree_type*
  %25 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %24, i32 0, i32 6
  %26 = load i32, i32* %25, align 4
  %27 = lshr i32 %26, 9
  %28 = and i32 %27, 127
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = icmp sgt i32 %22, %32
  br i1 %33, label %34, label %39

; <label>:34:                                     ; preds = %13
  %35 = load i32, i32* @target_flags, align 4
  %36 = and i32 %35, 33554432
  %37 = icmp ne i32 %36, 0
  %38 = select i1 %37, i32 8, i32 4
  br label %50

; <label>:39:                                     ; preds = %13
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %41 = bitcast %union.tree_node* %40 to %struct.tree_type*
  %42 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %41, i32 0, i32 6
  %43 = load i32, i32* %42, align 4
  %44 = lshr i32 %43, 9
  %45 = and i32 %44, 127
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  br label %50

; <label>:50:                                     ; preds = %39, %34
  %51 = phi i32 [ %38, %34 ], [ %49, %39 ]
  store i32 %51, i32* %9, align 4
  %52 = load i32, i32* %9, align 4
  %53 = load i32, i32* %8, align 4
  %54 = add nsw i32 %52, %53
  %55 = sub nsw i32 %54, 1
  %56 = load i32, i32* %8, align 4
  %57 = sdiv i32 %55, %56
  %58 = load i32, i32* %8, align 4
  %59 = mul nsw i32 %57, %58
  store i32 %59, i32* %10, align 4
  %60 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %61 = load i32, i32* %10, align 4
  %62 = sub nsw i32 0, %61
  %63 = sext i32 %62 to i64
  %64 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %60, i64 %63)
  store %struct.rtx_def* %64, %struct.rtx_def** %6, align 8
  br label %65

; <label>:65:                                     ; preds = %50, %3
  %66 = load %union.tree_node*, %union.tree_node** %5, align 8
  %67 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %68 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %67, i32 0, i32 1
  %69 = load %union.tree_node*, %union.tree_node** %68, align 8
  %70 = load %union.tree_node*, %union.tree_node** %5, align 8
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 16
  %72 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %73 = call %union.tree_node* @make_tree(%union.tree_node* %71, %struct.rtx_def* %72)
  %74 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 48, %union.tree_node* %69, %union.tree_node* %70, %union.tree_node* %73)
  store %union.tree_node* %74, %union.tree_node** %7, align 8
  %75 = load %union.tree_node*, %union.tree_node** %7, align 8
  %76 = bitcast %union.tree_node* %75 to %struct.tree_common*
  %77 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %76, i32 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = and i32 %78, -257
  %80 = or i32 %79, 256
  store i32 %80, i32* %77, align 8
  %81 = load %union.tree_node*, %union.tree_node** %7, align 8
  %82 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %83 = call %struct.rtx_def* @expand_expr(%union.tree_node* %81, %struct.rtx_def* %82, i32 0, i32 0)
  ret void
}

declare %union.tree_node* @build(i32, %union.tree_node*, ...) #1

declare %union.tree_node* @make_tree(%union.tree_node*, %struct.rtx_def*) #1

declare %struct.rtx_def* @expand_expr(%union.tree_node*, %struct.rtx_def*, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define %struct.rtx_def* @std_expand_builtin_va_arg(%union.tree_node*, %union.tree_node*) #0 {
  %3 = alloca %union.tree_node*, align 8
  %4 = alloca %union.tree_node*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %union.tree_node*, align 8
  %7 = alloca %union.tree_node*, align 8
  %8 = alloca %union.tree_node*, align 8
  %9 = alloca %union.tree_node*, align 8
  %10 = alloca %union.tree_node*, align 8
  %11 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %3, align 8
  store %union.tree_node* %1, %union.tree_node** %4, align 8
  store %union.tree_node* null, %union.tree_node** %7, align 8
  %12 = load i32, i32* @target_flags, align 4
  %13 = and i32 %12, 33554432
  %14 = icmp ne i32 %13, 0
  %15 = select i1 %14, i32 64, i32 32
  %16 = sdiv i32 %15, 8
  %17 = sext i32 %16 to i64
  %18 = call %union.tree_node* @size_int_wide(i64 %17, i32 0)
  store %union.tree_node* %18, %union.tree_node** %8, align 8
  %19 = load i32, i32* @target_flags, align 4
  %20 = and i32 %19, 33554432
  %21 = icmp ne i32 %20, 0
  %22 = select i1 %21, i32 64, i32 32
  %23 = sdiv i32 %22, 8
  %24 = sub nsw i32 %23, 1
  %25 = sext i32 %24 to i64
  %26 = call %union.tree_node* @size_int_wide(i64 %25, i32 0)
  store %union.tree_node* %26, %union.tree_node** %9, align 8
  %27 = load %union.tree_node*, %union.tree_node** %4, align 8
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16
  %29 = icmp eq %union.tree_node* %27, %28
  br i1 %29, label %63, label %30

; <label>:30:                                     ; preds = %2
  %31 = load i32, i32* @x.15
  %32 = load i32, i32* @y.16
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %30
  %39 = load %union.tree_node*, %union.tree_node** %4, align 8
  %40 = bitcast %union.tree_node* %39 to %struct.tree_type*
  %41 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %40, i32 0, i32 15
  %42 = load %union.tree_node*, %union.tree_node** %41, align 8
  %43 = bitcast %union.tree_node* %42 to %struct.tree_type*
  %44 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %43, i32 0, i32 3
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8
  store %union.tree_node* %45, %union.tree_node** %7, align 8
  %46 = icmp eq %union.tree_node* %45, null
  %47 = load i32, i32* @x.15
  %48 = load i32, i32* @y.16
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %46, label %63, label %55

; <label>:55:                                     ; preds = %originalBBpart2
  %56 = load %union.tree_node*, %union.tree_node** %7, align 8
  %57 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %58 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %57, i32 0, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 19
  %61 = and i32 %60, 1
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %65

; <label>:63:                                     ; preds = %55, %originalBBpart2, %2
  %64 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8
  store %union.tree_node* %64, %union.tree_node** %10, align 8
  br label %79

; <label>:65:                                     ; preds = %55
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16
  %67 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16
  %69 = load %union.tree_node*, %union.tree_node** %7, align 8
  %70 = load %union.tree_node*, %union.tree_node** %9, align 8
  %71 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %68, %union.tree_node* %69, %union.tree_node* %70)
  %72 = call %union.tree_node* @fold(%union.tree_node* %71)
  %73 = load %union.tree_node*, %union.tree_node** %8, align 8
  %74 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 62, %union.tree_node* %67, %union.tree_node* %72, %union.tree_node* %73)
  %75 = call %union.tree_node* @fold(%union.tree_node* %74)
  %76 = load %union.tree_node*, %union.tree_node** %8, align 8
  %77 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 61, %union.tree_node* %66, %union.tree_node* %75, %union.tree_node* %76)
  %78 = call %union.tree_node* @fold(%union.tree_node* %77)
  store %union.tree_node* %78, %union.tree_node** %10, align 8
  br label %79

; <label>:79:                                     ; preds = %65, %63
  %80 = load %union.tree_node*, %union.tree_node** %3, align 8
  store %union.tree_node* %80, %union.tree_node** %5, align 8
  %81 = load %union.tree_node*, %union.tree_node** %5, align 8
  %82 = load i32, i32* @target_flags, align 4
  %83 = and i32 %82, 33554432
  %84 = icmp ne i32 %83, 0
  %85 = select i1 %84, i32 5, i32 4
  %86 = call %struct.rtx_def* @expand_expr(%union.tree_node* %81, %struct.rtx_def* null, i32 %85, i32 0)
  store %struct.rtx_def* %86, %struct.rtx_def** %11, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %88 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %87)
  store %struct.rtx_def* %88, %struct.rtx_def** %11, align 8
  %89 = load %union.tree_node*, %union.tree_node** %10, align 8
  %90 = call i32 @integer_zerop(%union.tree_node* %89)
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %115, label %92

; <label>:92:                                     ; preds = %79
  %93 = load %union.tree_node*, %union.tree_node** %3, align 8
  %94 = bitcast %union.tree_node* %93 to %struct.tree_common*
  %95 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %94, i32 0, i32 1
  %96 = load %union.tree_node*, %union.tree_node** %95, align 8
  %97 = load %union.tree_node*, %union.tree_node** %3, align 8
  %98 = load %union.tree_node*, %union.tree_node** %3, align 8
  %99 = bitcast %union.tree_node* %98 to %struct.tree_common*
  %100 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %99, i32 0, i32 1
  %101 = load %union.tree_node*, %union.tree_node** %100, align 8
  %102 = load %union.tree_node*, %union.tree_node** %3, align 8
  %103 = load %union.tree_node*, %union.tree_node** %10, align 8
  %104 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %101, %union.tree_node* %102, %union.tree_node* %103)
  %105 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 48, %union.tree_node* %96, %union.tree_node* %97, %union.tree_node* %104)
  store %union.tree_node* %105, %union.tree_node** %6, align 8
  %106 = load %union.tree_node*, %union.tree_node** %6, align 8
  %107 = bitcast %union.tree_node* %106 to %struct.tree_common*
  %108 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %107, i32 0, i32 2
  %109 = load i32, i32* %108, align 8
  %110 = and i32 %109, -257
  %111 = or i32 %110, 256
  store i32 %111, i32* %108, align 8
  %112 = load %union.tree_node*, %union.tree_node** %6, align 8
  %113 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %114 = call %struct.rtx_def* @expand_expr(%union.tree_node* %112, %struct.rtx_def* %113, i32 0, i32 0)
  br label %115

; <label>:115:                                    ; preds = %92, %79
  %116 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  ret %struct.rtx_def* %116

originalBBalteredBB:                              ; preds = %originalBB, %30
  %117 = load %union.tree_node*, %union.tree_node** %4, align 8
  %118 = bitcast %union.tree_node* %117 to %struct.tree_type*
  %119 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %118, i32 0, i32 15
  %120 = load %union.tree_node*, %union.tree_node** %119, align 8
  %121 = bitcast %union.tree_node* %120 to %struct.tree_type*
  %122 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %121, i32 0, i32 3
  %123 = load %union.tree_node*, %union.tree_node** %122, align 8
  store %union.tree_node* %123, %union.tree_node** %7, align 8
  %124 = icmp eq %union.tree_node* %123, null
  br label %originalBB
}

declare %union.tree_node* @size_int_wide(i64, i32) #1

declare %union.tree_node* @fold(%union.tree_node*) #1

declare i32 @integer_zerop(%union.tree_node*) #1

; Function Attrs: noinline nounwind uwtable
define %struct.rtx_def* @expand_builtin_va_arg(%union.tree_node*, %union.tree_node*) #0 {
  %3 = alloca %union.tree_node*, align 8
  %4 = alloca %union.tree_node*, align 8
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %union.tree_node*, align 8
  %8 = alloca %union.tree_node*, align 8
  %9 = alloca %union.tree_node*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  store %union.tree_node* %0, %union.tree_node** %3, align 8
  store %union.tree_node* %1, %union.tree_node** %4, align 8
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8
  store %union.tree_node* %12, %union.tree_node** %8, align 8
  %13 = load %union.tree_node*, %union.tree_node** %3, align 8
  %14 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %14, i32 0, i32 1
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8
  store %union.tree_node* %16, %union.tree_node** %9, align 8
  %17 = load %union.tree_node*, %union.tree_node** %8, align 8
  %18 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 255
  %22 = icmp eq i32 %21, 18
  br i1 %22, label %23, label %63

; <label>:23:                                     ; preds = %2
  %24 = load %union.tree_node*, %union.tree_node** %9, align 8
  %25 = bitcast %union.tree_node* %24 to %struct.tree_common*
  %26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %25, i32 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 255
  %29 = icmp eq i32 %28, 18
  br i1 %29, label %37, label %30

; <label>:30:                                     ; preds = %23
  %31 = load %union.tree_node*, %union.tree_node** %9, align 8
  %32 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %33 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %32, i32 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 255
  %36 = icmp eq i32 %35, 13
  br i1 %36, label %37, label %46

; <label>:37:                                     ; preds = %30, %23
  %38 = load %union.tree_node*, %union.tree_node** %8, align 8
  %39 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %39, i32 0, i32 1
  %41 = load %union.tree_node*, %union.tree_node** %40, align 8
  store %union.tree_node* %41, %union.tree_node** %8, align 8
  %42 = load %union.tree_node*, %union.tree_node** %9, align 8
  %43 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %44 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %43, i32 0, i32 1
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8
  store %union.tree_node* %45, %union.tree_node** %9, align 8
  br label %46

; <label>:46:                                     ; preds = %37, %30
  %47 = load i32, i32* @x.17
  %48 = load i32, i32* @y.18
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %46
  %55 = load i32, i32* @x.17
  %56 = load i32, i32* @y.18
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %63

; <label>:63:                                     ; preds = %originalBBpart2, %2
  %64 = load %union.tree_node*, %union.tree_node** %8, align 8
  %65 = bitcast %union.tree_node* %64 to %struct.tree_type*
  %66 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %65, i32 0, i32 15
  %67 = load %union.tree_node*, %union.tree_node** %66, align 8
  %68 = load %union.tree_node*, %union.tree_node** %9, align 8
  %69 = bitcast %union.tree_node* %68 to %struct.tree_type*
  %70 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %69, i32 0, i32 15
  %71 = load %union.tree_node*, %union.tree_node** %70, align 8
  %72 = icmp ne %union.tree_node* %67, %71
  br i1 %72, label %73, label %91

; <label>:73:                                     ; preds = %63
  %74 = load i32, i32* @x.17
  %75 = load i32, i32* @y.18
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %73
  call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.102, i32 0, i32 0))
  %82 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %82, %struct.rtx_def** %5, align 8
  %83 = load i32, i32* @x.17
  %84 = load i32, i32* @y.18
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %373

; <label>:91:                                     ; preds = %63
  %92 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** @lang_type_promotes_to, align 8
  %93 = load %union.tree_node*, %union.tree_node** %4, align 8
  %94 = call %union.tree_node* %92(%union.tree_node* %93)
  store %union.tree_node* %94, %union.tree_node** %7, align 8
  %95 = icmp ne %union.tree_node* %94, null
  br i1 %95, label %96, label %350

; <label>:96:                                     ; preds = %91
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.103, i32 0, i32 0), i8** %10, align 8
  store i8* null, i8** %11, align 8
  %97 = load %union.tree_node*, %union.tree_node** %4, align 8
  %98 = bitcast %union.tree_node* %97 to %struct.tree_type*
  %99 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %98, i32 0, i32 11
  %100 = load %union.tree_node*, %union.tree_node** %99, align 8
  %101 = icmp ne %union.tree_node* %100, null
  br i1 %101, label %102, label %218

; <label>:102:                                    ; preds = %96
  %103 = load i32, i32* @x.17
  %104 = load i32, i32* @y.18
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %102
  %111 = load %union.tree_node*, %union.tree_node** %4, align 8
  %112 = bitcast %union.tree_node* %111 to %struct.tree_type*
  %113 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %112, i32 0, i32 11
  %114 = load %union.tree_node*, %union.tree_node** %113, align 8
  %115 = bitcast %union.tree_node* %114 to %struct.tree_common*
  %116 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %115, i32 0, i32 2
  %117 = load i32, i32* %116, align 8
  %118 = and i32 %117, 255
  %119 = icmp eq i32 %118, 1
  %120 = load i32, i32* @x.17
  %121 = load i32, i32* @y.18
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart221, label %originalBB6alteredBB

originalBBpart221:                                ; preds = %originalBB6
  br i1 %119, label %128, label %137

; <label>:128:                                    ; preds = %originalBBpart221
  %129 = load %union.tree_node*, %union.tree_node** %4, align 8
  %130 = bitcast %union.tree_node* %129 to %struct.tree_type*
  %131 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %130, i32 0, i32 11
  %132 = load %union.tree_node*, %union.tree_node** %131, align 8
  %133 = bitcast %union.tree_node* %132 to %struct.tree_identifier*
  %134 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %133, i32 0, i32 1
  %135 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %134, i32 0, i32 1
  %136 = load i8*, i8** %135, align 8
  store i8* %136, i8** %10, align 8
  br label %217

; <label>:137:                                    ; preds = %originalBBpart221
  %138 = load %union.tree_node*, %union.tree_node** %4, align 8
  %139 = bitcast %union.tree_node* %138 to %struct.tree_type*
  %140 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %139, i32 0, i32 11
  %141 = load %union.tree_node*, %union.tree_node** %140, align 8
  %142 = bitcast %union.tree_node* %141 to %struct.tree_common*
  %143 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %142, i32 0, i32 2
  %144 = load i32, i32* %143, align 8
  %145 = and i32 %144, 255
  %146 = icmp eq i32 %145, 33
  br i1 %146, label %147, label %200

; <label>:147:                                    ; preds = %137
  %148 = load i32, i32* @x.17
  %149 = load i32, i32* @y.18
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %originalBB23alteredBB, %147
  %156 = load %union.tree_node*, %union.tree_node** %4, align 8
  %157 = bitcast %union.tree_node* %156 to %struct.tree_type*
  %158 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %157, i32 0, i32 11
  %159 = load %union.tree_node*, %union.tree_node** %158, align 8
  %160 = bitcast %union.tree_node* %159 to %struct.tree_decl*
  %161 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %160, i32 0, i32 8
  %162 = load %union.tree_node*, %union.tree_node** %161, align 8
  %163 = icmp ne %union.tree_node* %162, null
  %164 = load i32, i32* @x.17
  %165 = load i32, i32* @y.18
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br i1 %163, label %172, label %200

; <label>:172:                                    ; preds = %originalBBpart225
  %173 = load i32, i32* @x.17
  %174 = load i32, i32* @y.18
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %172
  %181 = load %union.tree_node*, %union.tree_node** %4, align 8
  %182 = bitcast %union.tree_node* %181 to %struct.tree_type*
  %183 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %182, i32 0, i32 11
  %184 = load %union.tree_node*, %union.tree_node** %183, align 8
  %185 = bitcast %union.tree_node* %184 to %struct.tree_decl*
  %186 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %185, i32 0, i32 8
  %187 = load %union.tree_node*, %union.tree_node** %186, align 8
  %188 = bitcast %union.tree_node* %187 to %struct.tree_identifier*
  %189 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %188, i32 0, i32 1
  %190 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %189, i32 0, i32 1
  %191 = load i8*, i8** %190, align 8
  store i8* %191, i8** %10, align 8
  %192 = load i32, i32* @x.17
  %193 = load i32, i32* @y.18
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %200

; <label>:200:                                    ; preds = %originalBBpart229, %originalBBpart225, %137
  %201 = load i32, i32* @x.17
  %202 = load i32, i32* @y.18
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %200
  %209 = load i32, i32* @x.17
  %210 = load i32, i32* @y.18
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %217

; <label>:217:                                    ; preds = %originalBBpart233, %128
  br label %218

; <label>:218:                                    ; preds = %217, %96
  %219 = load %union.tree_node*, %union.tree_node** %7, align 8
  %220 = bitcast %union.tree_node* %219 to %struct.tree_type*
  %221 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %220, i32 0, i32 11
  %222 = load %union.tree_node*, %union.tree_node** %221, align 8
  %223 = icmp ne %union.tree_node* %222, null
  br i1 %223, label %224, label %324

; <label>:224:                                    ; preds = %218
  %225 = load i32, i32* @x.17
  %226 = load i32, i32* @y.18
  %227 = sub i32 %225, 1
  %228 = mul i32 %225, %227
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %230, %231
  br i1 %232, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %224
  %233 = load %union.tree_node*, %union.tree_node** %7, align 8
  %234 = bitcast %union.tree_node* %233 to %struct.tree_type*
  %235 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %234, i32 0, i32 11
  %236 = load %union.tree_node*, %union.tree_node** %235, align 8
  %237 = bitcast %union.tree_node* %236 to %struct.tree_common*
  %238 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %237, i32 0, i32 2
  %239 = load i32, i32* %238, align 8
  %240 = and i32 %239, 255
  %241 = icmp eq i32 %240, 1
  %242 = load i32, i32* @x.17
  %243 = load i32, i32* @y.18
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBBpart246, label %originalBB35alteredBB

originalBBpart246:                                ; preds = %originalBB35
  br i1 %241, label %250, label %275

; <label>:250:                                    ; preds = %originalBBpart246
  %251 = load i32, i32* @x.17
  %252 = load i32, i32* @y.18
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %originalBB48alteredBB, %250
  %259 = load %union.tree_node*, %union.tree_node** %7, align 8
  %260 = bitcast %union.tree_node* %259 to %struct.tree_type*
  %261 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %260, i32 0, i32 11
  %262 = load %union.tree_node*, %union.tree_node** %261, align 8
  %263 = bitcast %union.tree_node* %262 to %struct.tree_identifier*
  %264 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %263, i32 0, i32 1
  %265 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %264, i32 0, i32 1
  %266 = load i8*, i8** %265, align 8
  store i8* %266, i8** %11, align 8
  %267 = load i32, i32* @x.17
  %268 = load i32, i32* @y.18
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br label %323

; <label>:275:                                    ; preds = %originalBBpart246
  %276 = load i32, i32* @x.17
  %277 = load i32, i32* @y.18
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %275
  %284 = load %union.tree_node*, %union.tree_node** %7, align 8
  %285 = bitcast %union.tree_node* %284 to %struct.tree_type*
  %286 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %285, i32 0, i32 11
  %287 = load %union.tree_node*, %union.tree_node** %286, align 8
  %288 = bitcast %union.tree_node* %287 to %struct.tree_common*
  %289 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %288, i32 0, i32 2
  %290 = load i32, i32* %289, align 8
  %291 = and i32 %290, 255
  %292 = icmp eq i32 %291, 33
  %293 = load i32, i32* @x.17
  %294 = load i32, i32* @y.18
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBBpart269, label %originalBB52alteredBB

originalBBpart269:                                ; preds = %originalBB52
  br i1 %292, label %301, label %322

; <label>:301:                                    ; preds = %originalBBpart269
  %302 = load %union.tree_node*, %union.tree_node** %7, align 8
  %303 = bitcast %union.tree_node* %302 to %struct.tree_type*
  %304 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %303, i32 0, i32 11
  %305 = load %union.tree_node*, %union.tree_node** %304, align 8
  %306 = bitcast %union.tree_node* %305 to %struct.tree_decl*
  %307 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %306, i32 0, i32 8
  %308 = load %union.tree_node*, %union.tree_node** %307, align 8
  %309 = icmp ne %union.tree_node* %308, null
  br i1 %309, label %310, label %322

; <label>:310:                                    ; preds = %301
  %311 = load %union.tree_node*, %union.tree_node** %7, align 8
  %312 = bitcast %union.tree_node* %311 to %struct.tree_type*
  %313 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %312, i32 0, i32 11
  %314 = load %union.tree_node*, %union.tree_node** %313, align 8
  %315 = bitcast %union.tree_node* %314 to %struct.tree_decl*
  %316 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %315, i32 0, i32 8
  %317 = load %union.tree_node*, %union.tree_node** %316, align 8
  %318 = bitcast %union.tree_node* %317 to %struct.tree_identifier*
  %319 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %318, i32 0, i32 1
  %320 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %319, i32 0, i32 1
  %321 = load i8*, i8** %320, align 8
  store i8* %321, i8** %11, align 8
  br label %322

; <label>:322:                                    ; preds = %310, %301, %originalBBpart269
  br label %323

; <label>:323:                                    ; preds = %322, %originalBBpart250
  br label %324

; <label>:324:                                    ; preds = %323, %218
  %325 = load i8*, i8** %10, align 8
  %326 = load i8*, i8** %11, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.104, i32 0, i32 0), i8* %325, i8* %326)
  %327 = load i8, i8* @expand_builtin_va_arg.gave_help, align 1
  %328 = trunc i8 %327 to i1
  br i1 %328, label %348, label %329

; <label>:329:                                    ; preds = %324
  %330 = load i32, i32* @x.17
  %331 = load i32, i32* @y.18
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %329
  store i8 1, i8* @expand_builtin_va_arg.gave_help, align 1
  %338 = load i8*, i8** %11, align 8
  %339 = load i8*, i8** %10, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.105, i32 0, i32 0), i8* %338, i8* %339)
  %340 = load i32, i32* @x.17
  %341 = load i32, i32* @y.18
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %348

; <label>:348:                                    ; preds = %originalBBpart273, %324
  call void @expand_builtin_trap()
  %349 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %349, %struct.rtx_def** %5, align 8
  br label %356

; <label>:350:                                    ; preds = %91
  %351 = load %union.tree_node*, %union.tree_node** %3, align 8
  %352 = call %union.tree_node* @stabilize_va_list(%union.tree_node* %351, i32 0)
  store %union.tree_node* %352, %union.tree_node** %3, align 8
  %353 = load %union.tree_node*, %union.tree_node** %3, align 8
  %354 = load %union.tree_node*, %union.tree_node** %4, align 8
  %355 = call %struct.rtx_def* @ix86_va_arg(%union.tree_node* %353, %union.tree_node* %354)
  store %struct.rtx_def* %355, %struct.rtx_def** %5, align 8
  br label %356

; <label>:356:                                    ; preds = %350, %348
  %357 = load i32, i32* @x.17
  %358 = load i32, i32* @y.18
  %359 = sub i32 %357, 1
  %360 = mul i32 %357, %359
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %362, %363
  br i1 %364, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %originalBB75alteredBB, %356
  %365 = load i32, i32* @x.17
  %366 = load i32, i32* @y.18
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br label %373

; <label>:373:                                    ; preds = %originalBBpart277, %originalBBpart24
  %374 = load i32, i32* @x.17
  %375 = load i32, i32* @y.18
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %originalBB79alteredBB, %373
  %382 = load %union.tree_node*, %union.tree_node** %4, align 8
  %383 = bitcast %union.tree_node* %382 to %struct.tree_type*
  %384 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %383, i32 0, i32 6
  %385 = load i32, i32* %384, align 4
  %386 = lshr i32 %385, 9
  %387 = and i32 %386, 127
  %388 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %389 = call %struct.rtx_def* @gen_rtx_MEM(i32 %387, %struct.rtx_def* %388)
  store %struct.rtx_def* %389, %struct.rtx_def** %6, align 8
  %390 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %391 = call i64 @get_varargs_alias_set()
  call void @set_mem_alias_set(%struct.rtx_def* %390, i64 %391)
  %392 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %393 = load i32, i32* @x.17
  %394 = load i32, i32* @y.18
  %395 = sub i32 %393, 1
  %396 = mul i32 %393, %395
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %398, %399
  br i1 %400, label %originalBBpart2100, label %originalBB79alteredBB

originalBBpart2100:                               ; preds = %originalBB79
  ret %struct.rtx_def* %392

originalBBalteredBB:                              ; preds = %originalBB, %46
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %73
  call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.102, i32 0, i32 0))
  %401 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %401, %struct.rtx_def** %5, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %102
  %402 = load %union.tree_node*, %union.tree_node** %4, align 8
  %403 = bitcast %union.tree_node* %402 to %struct.tree_type*
  %404 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %403, i32 0, i32 11
  %405 = load %union.tree_node*, %union.tree_node** %404, align 8
  %406 = bitcast %union.tree_node* %405 to %struct.tree_common*
  %407 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %406, i32 0, i32 2
  %408 = load i32, i32* %407, align 8
  %_ = sub i32 0, %408
  %gen = add i32 %_, 255
  %_7 = sub i32 %408, 255
  %gen8 = mul i32 %_7, 255
  %_9 = shl i32 %408, 255
  %_10 = sub i32 0, %408
  %gen11 = add i32 %_10, 255
  %_12 = sub i32 0, %408
  %gen13 = add i32 %_12, 255
  %_14 = sub i32 %408, 255
  %gen15 = mul i32 %_14, 255
  %_16 = shl i32 %408, 255
  %_17 = sub i32 0, %408
  %gen18 = add i32 %_17, 255
  %_19 = shl i32 %408, 255
  %409 = and i32 %408, 255
  %410 = icmp eq i32 %409, 1
  br label %originalBB6

originalBB23alteredBB:                            ; preds = %originalBB23, %147
  %411 = load %union.tree_node*, %union.tree_node** %4, align 8
  %412 = bitcast %union.tree_node* %411 to %struct.tree_type*
  %413 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %412, i32 0, i32 11
  %414 = load %union.tree_node*, %union.tree_node** %413, align 8
  %415 = bitcast %union.tree_node* %414 to %struct.tree_decl*
  %416 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %415, i32 0, i32 8
  %417 = load %union.tree_node*, %union.tree_node** %416, align 8
  %418 = icmp ne %union.tree_node* %417, null
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %172
  %419 = load %union.tree_node*, %union.tree_node** %4, align 8
  %420 = bitcast %union.tree_node* %419 to %struct.tree_type*
  %421 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %420, i32 0, i32 11
  %422 = load %union.tree_node*, %union.tree_node** %421, align 8
  %423 = bitcast %union.tree_node* %422 to %struct.tree_decl*
  %424 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %423, i32 0, i32 8
  %425 = load %union.tree_node*, %union.tree_node** %424, align 8
  %426 = bitcast %union.tree_node* %425 to %struct.tree_identifier*
  %427 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %426, i32 0, i32 1
  %428 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %427, i32 0, i32 1
  %429 = load i8*, i8** %428, align 8
  store i8* %429, i8** %10, align 8
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %200
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %224
  %430 = load %union.tree_node*, %union.tree_node** %7, align 8
  %431 = bitcast %union.tree_node* %430 to %struct.tree_type*
  %432 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %431, i32 0, i32 11
  %433 = load %union.tree_node*, %union.tree_node** %432, align 8
  %434 = bitcast %union.tree_node* %433 to %struct.tree_common*
  %435 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %434, i32 0, i32 2
  %436 = load i32, i32* %435, align 8
  %_36 = shl i32 %436, 255
  %_37 = sub i32 %436, 255
  %gen38 = mul i32 %_37, 255
  %_39 = shl i32 %436, 255
  %_40 = shl i32 %436, 255
  %_41 = sub i32 0, %436
  %gen42 = add i32 %_41, 255
  %_43 = sub i32 0, %436
  %gen44 = add i32 %_43, 255
  %437 = and i32 %436, 255
  %438 = icmp eq i32 %437, 1
  br label %originalBB35

originalBB48alteredBB:                            ; preds = %originalBB48, %250
  %439 = load %union.tree_node*, %union.tree_node** %7, align 8
  %440 = bitcast %union.tree_node* %439 to %struct.tree_type*
  %441 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %440, i32 0, i32 11
  %442 = load %union.tree_node*, %union.tree_node** %441, align 8
  %443 = bitcast %union.tree_node* %442 to %struct.tree_identifier*
  %444 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %443, i32 0, i32 1
  %445 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %444, i32 0, i32 1
  %446 = load i8*, i8** %445, align 8
  store i8* %446, i8** %11, align 8
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %275
  %447 = load %union.tree_node*, %union.tree_node** %7, align 8
  %448 = bitcast %union.tree_node* %447 to %struct.tree_type*
  %449 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %448, i32 0, i32 11
  %450 = load %union.tree_node*, %union.tree_node** %449, align 8
  %451 = bitcast %union.tree_node* %450 to %struct.tree_common*
  %452 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %451, i32 0, i32 2
  %453 = load i32, i32* %452, align 8
  %_53 = shl i32 %453, 255
  %_54 = sub i32 %453, 255
  %gen55 = mul i32 %_54, 255
  %_56 = sub i32 0, %453
  %gen57 = add i32 %_56, 255
  %_58 = sub i32 %453, 255
  %gen59 = mul i32 %_58, 255
  %_60 = sub i32 %453, 255
  %gen61 = mul i32 %_60, 255
  %_62 = sub i32 %453, 255
  %gen63 = mul i32 %_62, 255
  %_64 = sub i32 %453, 255
  %gen65 = mul i32 %_64, 255
  %_66 = sub i32 %453, 255
  %gen67 = mul i32 %_66, 255
  %454 = and i32 %453, 255
  %455 = icmp eq i32 %454, 33
  br label %originalBB52

originalBB71alteredBB:                            ; preds = %originalBB71, %329
  store i8 1, i8* @expand_builtin_va_arg.gave_help, align 1
  %456 = load i8*, i8** %11, align 8
  %457 = load i8*, i8** %10, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.105, i32 0, i32 0), i8* %456, i8* %457)
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %356
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %373
  %458 = load %union.tree_node*, %union.tree_node** %4, align 8
  %459 = bitcast %union.tree_node* %458 to %struct.tree_type*
  %460 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %459, i32 0, i32 6
  %461 = load i32, i32* %460, align 4
  %_80 = sub i32 0, %461
  %gen81 = add i32 %_80, 9
  %_82 = sub i32 0, %461
  %gen83 = add i32 %_82, 9
  %_84 = shl i32 %461, 9
  %462 = lshr i32 %461, 9
  %_85 = sub i32 0, %462
  %gen86 = add i32 %_85, 127
  %_87 = shl i32 %462, 127
  %_88 = sub i32 %462, 127
  %gen89 = mul i32 %_88, 127
  %_90 = sub i32 0, %462
  %gen91 = add i32 %_90, 127
  %_92 = sub i32 %462, 127
  %gen93 = mul i32 %_92, 127
  %_94 = shl i32 %462, 127
  %_95 = sub i32 %462, 127
  %gen96 = mul i32 %_95, 127
  %_97 = sub i32 0, %462
  %gen98 = add i32 %_97, 127
  %463 = and i32 %462, 127
  %464 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %465 = call %struct.rtx_def* @gen_rtx_MEM(i32 %463, %struct.rtx_def* %464)
  store %struct.rtx_def* %465, %struct.rtx_def** %6, align 8
  %466 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %467 = call i64 @get_varargs_alias_set()
  call void @set_mem_alias_set(%struct.rtx_def* %466, i64 %467)
  %468 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  br label %originalBB79
}

declare void @warning(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define void @expand_builtin_trap() #0 {
  %1 = call %struct.rtx_def* @gen_trap()
  %2 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %1)
  %3 = call %struct.rtx_def* @emit_barrier()
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %union.tree_node* @stabilize_va_list(%union.tree_node*, i32) #0 {
  %3 = alloca %union.tree_node*, align 8
  %4 = alloca %union.tree_node*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %union.tree_node*, align 8
  %7 = alloca %union.tree_node*, align 8
  %8 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %4, align 8
  store i32 %1, i32* %5, align 4
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8
  %10 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 255
  %14 = icmp eq i32 %13, 18
  br i1 %14, label %15, label %68

; <label>:15:                                     ; preds = %2
  %16 = load %union.tree_node*, %union.tree_node** %4, align 8
  %17 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %17, i32 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, 1
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %26

; <label>:23:                                     ; preds = %15
  %24 = load %union.tree_node*, %union.tree_node** %4, align 8
  %25 = call %union.tree_node* @save_expr(%union.tree_node* %24)
  store %union.tree_node* %25, %union.tree_node** %4, align 8
  br label %26

; <label>:26:                                     ; preds = %23, %15
  %27 = load %union.tree_node*, %union.tree_node** %4, align 8
  %28 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %28, i32 0, i32 1
  %30 = load %union.tree_node*, %union.tree_node** %29, align 8
  %31 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %31, i32 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 255
  %35 = icmp eq i32 %34, 18
  br i1 %35, label %36, label %67

; <label>:36:                                     ; preds = %26
  %37 = load i32, i32* @x.21
  %38 = load i32, i32* @y.22
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %36
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8
  %46 = bitcast %union.tree_node* %45 to %struct.tree_common*
  %47 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %46, i32 0, i32 1
  %48 = load %union.tree_node*, %union.tree_node** %47, align 8
  %49 = call %union.tree_node* @build_pointer_type(%union.tree_node* %48)
  store %union.tree_node* %49, %union.tree_node** %6, align 8
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8
  %51 = call %union.tree_node* @build_pointer_type(%union.tree_node* %50)
  store %union.tree_node* %51, %union.tree_node** %7, align 8
  %52 = load %union.tree_node*, %union.tree_node** %7, align 8
  %53 = load %union.tree_node*, %union.tree_node** %4, align 8
  %54 = call %union.tree_node* @build1(i32 121, %union.tree_node* %52, %union.tree_node* %53)
  store %union.tree_node* %54, %union.tree_node** %4, align 8
  %55 = load %union.tree_node*, %union.tree_node** %6, align 8
  %56 = load %union.tree_node*, %union.tree_node** %4, align 8
  %57 = call %union.tree_node* @build1(i32 115, %union.tree_node* %55, %union.tree_node* %56)
  %58 = call %union.tree_node* @fold(%union.tree_node* %57)
  store %union.tree_node* %58, %union.tree_node** %4, align 8
  %59 = load i32, i32* @x.21
  %60 = load i32, i32* @y.22
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %67

; <label>:67:                                     ; preds = %originalBBpart2, %26
  br label %148

; <label>:68:                                     ; preds = %2
  %69 = load i32, i32* %5, align 4
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %126, label %71

; <label>:71:                                     ; preds = %68
  %72 = load i32, i32* @x.21
  %73 = load i32, i32* @y.22
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %71
  %80 = load %union.tree_node*, %union.tree_node** %4, align 8
  %81 = bitcast %union.tree_node* %80 to %struct.tree_common*
  %82 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %81, i32 0, i32 2
  %83 = load i32, i32* %82, align 8
  %84 = lshr i32 %83, 8
  %85 = and i32 %84, 1
  %86 = icmp ne i32 %85, 0
  %87 = load i32, i32* @x.21
  %88 = load i32, i32* @y.22
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart213, label %originalBB1alteredBB

originalBBpart213:                                ; preds = %originalBB1
  br i1 %86, label %97, label %95

; <label>:95:                                     ; preds = %originalBBpart213
  %96 = load %union.tree_node*, %union.tree_node** %4, align 8
  store %union.tree_node* %96, %union.tree_node** %3, align 8
  br label %166

; <label>:97:                                     ; preds = %originalBBpart213
  %98 = load i32, i32* @x.21
  %99 = load i32, i32* @y.22
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %originalBB15alteredBB, %97
  %106 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8
  %107 = call %union.tree_node* @build_pointer_type(%union.tree_node* %106)
  store %union.tree_node* %107, %union.tree_node** %8, align 8
  %108 = load %union.tree_node*, %union.tree_node** %8, align 8
  %109 = load %union.tree_node*, %union.tree_node** %4, align 8
  %110 = call %union.tree_node* @build1(i32 121, %union.tree_node* %108, %union.tree_node* %109)
  %111 = call %union.tree_node* @fold(%union.tree_node* %110)
  store %union.tree_node* %111, %union.tree_node** %4, align 8
  %112 = load %union.tree_node*, %union.tree_node** %4, align 8
  %113 = bitcast %union.tree_node* %112 to %struct.tree_common*
  %114 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %113, i32 0, i32 2
  %115 = load i32, i32* %114, align 8
  %116 = and i32 %115, -257
  %117 = or i32 %116, 256
  store i32 %117, i32* %114, align 8
  %118 = load i32, i32* @x.21
  %119 = load i32, i32* @y.22
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart230, label %originalBB15alteredBB

originalBBpart230:                                ; preds = %originalBB15
  br label %126

; <label>:126:                                    ; preds = %originalBBpart230, %68
  %127 = load %union.tree_node*, %union.tree_node** %4, align 8
  %128 = bitcast %union.tree_node* %127 to %struct.tree_common*
  %129 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %128, i32 0, i32 2
  %130 = load i32, i32* %129, align 8
  %131 = lshr i32 %130, 8
  %132 = and i32 %131, 1
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %134, label %137

; <label>:134:                                    ; preds = %126
  %135 = load %union.tree_node*, %union.tree_node** %4, align 8
  %136 = call %union.tree_node* @save_expr(%union.tree_node* %135)
  store %union.tree_node* %136, %union.tree_node** %4, align 8
  br label %137

; <label>:137:                                    ; preds = %134, %126
  %138 = load %union.tree_node*, %union.tree_node** %4, align 8
  %139 = bitcast %union.tree_node* %138 to %struct.tree_common*
  %140 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %139, i32 0, i32 1
  %141 = load %union.tree_node*, %union.tree_node** %140, align 8
  %142 = bitcast %union.tree_node* %141 to %struct.tree_common*
  %143 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %142, i32 0, i32 1
  %144 = load %union.tree_node*, %union.tree_node** %143, align 8
  %145 = load %union.tree_node*, %union.tree_node** %4, align 8
  %146 = call %union.tree_node* @build1(i32 41, %union.tree_node* %144, %union.tree_node* %145)
  %147 = call %union.tree_node* @fold(%union.tree_node* %146)
  store %union.tree_node* %147, %union.tree_node** %4, align 8
  br label %148

; <label>:148:                                    ; preds = %137, %67
  %149 = load i32, i32* @x.21
  %150 = load i32, i32* @y.22
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB32, label %originalBB32alteredBB

originalBB32:                                     ; preds = %originalBB32alteredBB, %148
  %157 = load %union.tree_node*, %union.tree_node** %4, align 8
  store %union.tree_node* %157, %union.tree_node** %3, align 8
  %158 = load i32, i32* @x.21
  %159 = load i32, i32* @y.22
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart234, label %originalBB32alteredBB

originalBBpart234:                                ; preds = %originalBB32
  br label %166

; <label>:166:                                    ; preds = %originalBBpart234, %95
  %167 = load %union.tree_node*, %union.tree_node** %3, align 8
  ret %union.tree_node* %167

originalBBalteredBB:                              ; preds = %originalBB, %36
  %168 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8
  %169 = bitcast %union.tree_node* %168 to %struct.tree_common*
  %170 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %169, i32 0, i32 1
  %171 = load %union.tree_node*, %union.tree_node** %170, align 8
  %172 = call %union.tree_node* @build_pointer_type(%union.tree_node* %171)
  store %union.tree_node* %172, %union.tree_node** %6, align 8
  %173 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8
  %174 = call %union.tree_node* @build_pointer_type(%union.tree_node* %173)
  store %union.tree_node* %174, %union.tree_node** %7, align 8
  %175 = load %union.tree_node*, %union.tree_node** %7, align 8
  %176 = load %union.tree_node*, %union.tree_node** %4, align 8
  %177 = call %union.tree_node* @build1(i32 121, %union.tree_node* %175, %union.tree_node* %176)
  store %union.tree_node* %177, %union.tree_node** %4, align 8
  %178 = load %union.tree_node*, %union.tree_node** %6, align 8
  %179 = load %union.tree_node*, %union.tree_node** %4, align 8
  %180 = call %union.tree_node* @build1(i32 115, %union.tree_node* %178, %union.tree_node* %179)
  %181 = call %union.tree_node* @fold(%union.tree_node* %180)
  store %union.tree_node* %181, %union.tree_node** %4, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %71
  %182 = load %union.tree_node*, %union.tree_node** %4, align 8
  %183 = bitcast %union.tree_node* %182 to %struct.tree_common*
  %184 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %183, i32 0, i32 2
  %185 = load i32, i32* %184, align 8
  %_ = sub i32 %185, 8
  %gen = mul i32 %_, 8
  %_2 = sub i32 %185, 8
  %gen3 = mul i32 %_2, 8
  %_4 = sub i32 %185, 8
  %gen5 = mul i32 %_4, 8
  %_6 = shl i32 %185, 8
  %186 = lshr i32 %185, 8
  %_7 = sub i32 0, %186
  %gen8 = add i32 %_7, 1
  %_9 = sub i32 %186, 1
  %gen10 = mul i32 %_9, 1
  %_11 = shl i32 %186, 1
  %187 = and i32 %186, 1
  %188 = icmp ne i32 %187, 0
  br label %originalBB1

originalBB15alteredBB:                            ; preds = %originalBB15, %97
  %189 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8
  %190 = call %union.tree_node* @build_pointer_type(%union.tree_node* %189)
  store %union.tree_node* %190, %union.tree_node** %8, align 8
  %191 = load %union.tree_node*, %union.tree_node** %8, align 8
  %192 = load %union.tree_node*, %union.tree_node** %4, align 8
  %193 = call %union.tree_node* @build1(i32 121, %union.tree_node* %191, %union.tree_node* %192)
  %194 = call %union.tree_node* @fold(%union.tree_node* %193)
  store %union.tree_node* %194, %union.tree_node** %4, align 8
  %195 = load %union.tree_node*, %union.tree_node** %4, align 8
  %196 = bitcast %union.tree_node* %195 to %struct.tree_common*
  %197 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %196, i32 0, i32 2
  %198 = load i32, i32* %197, align 8
  %_16 = sub i32 %198, -257
  %gen17 = mul i32 %_16, -257
  %_18 = sub i32 0, %198
  %gen19 = add i32 %_18, -257
  %_20 = shl i32 %198, -257
  %_21 = shl i32 %198, -257
  %_22 = shl i32 %198, -257
  %_23 = shl i32 %198, -257
  %199 = and i32 %198, -257
  %_24 = sub i32 0, %199
  %gen25 = add i32 %_24, 256
  %_26 = shl i32 %199, 256
  %_27 = sub i32 %199, 256
  %gen28 = mul i32 %_27, 256
  %200 = or i32 %199, 256
  store i32 %200, i32* %197, align 8
  br label %originalBB15

originalBB32alteredBB:                            ; preds = %originalBB32, %148
  %201 = load %union.tree_node*, %union.tree_node** %4, align 8
  store %union.tree_node* %201, %union.tree_node** %3, align 8
  br label %originalBB32
}

declare %struct.rtx_def* @ix86_va_arg(%union.tree_node*, %union.tree_node*) #1

declare i64 @get_varargs_alias_set() #1

; Function Attrs: noinline nounwind uwtable
define %struct.rtx_def* @expand_builtin_expect_jump(%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca %union.tree_node*, align 8
  %9 = alloca %union.tree_node*, align 8
  %10 = alloca %union.tree_node*, align 8
  %11 = alloca %struct.rtx_def*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca %struct.rtx_def*, align 8
  %16 = alloca %struct.rtx_def*, align 8
  %17 = alloca %struct.rtx_def*, align 8
  %18 = alloca i32, align 4
  store %union.tree_node* %0, %union.tree_node** %5, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %6, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %7, align 8
  %19 = load %union.tree_node*, %union.tree_node** %5, align 8
  %20 = bitcast %union.tree_node* %19 to %struct.tree_exp*
  %21 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %20, i32 0, i32 2
  %22 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %21, i64 0, i64 1
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8
  store %union.tree_node* %23, %union.tree_node** %8, align 8
  %24 = load %union.tree_node*, %union.tree_node** %8, align 8
  %25 = bitcast %union.tree_node* %24 to %struct.tree_list*
  %26 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %25, i32 0, i32 2
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8
  store %union.tree_node* %27, %union.tree_node** %9, align 8
  %28 = load %union.tree_node*, %union.tree_node** %8, align 8
  %29 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %29, i32 0, i32 0
  %31 = load %union.tree_node*, %union.tree_node** %30, align 8
  %32 = bitcast %union.tree_node* %31 to %struct.tree_list*
  %33 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %32, i32 0, i32 2
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8
  store %union.tree_node* %34, %union.tree_node** %10, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %11, align 8
  %35 = load %union.tree_node*, %union.tree_node** %10, align 8
  %36 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %36, i32 0, i32 1
  %38 = load %union.tree_node*, %union.tree_node** %37, align 8
  %39 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %39, i32 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 255
  %43 = icmp eq i32 %42, 6
  br i1 %43, label %44, label %456

; <label>:44:                                     ; preds = %3
  %45 = load i32, i32* @x.23
  %46 = load i32, i32* @y.24
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %44
  %53 = load %union.tree_node*, %union.tree_node** %10, align 8
  %54 = call i32 @integer_zerop(%union.tree_node* %53)
  %55 = icmp ne i32 %54, 0
  %56 = load i32, i32* @x.23
  %57 = load i32, i32* @y.24
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %55, label %68, label %64

; <label>:64:                                     ; preds = %originalBBpart2
  %65 = load %union.tree_node*, %union.tree_node** %10, align 8
  %66 = call i32 @integer_onep(%union.tree_node* %65)
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %456

; <label>:68:                                     ; preds = %64, %originalBBpart2
  store i32 0, i32* %13, align 4
  %69 = load %union.tree_node*, %union.tree_node** %9, align 8
  %70 = call i32 @unsafe_for_reeval(%union.tree_node* %69)
  switch i32 %70, label %76 [
    i32 0, label %71
    i32 1, label %72
    i32 2, label %75
  ]

; <label>:71:                                     ; preds = %68
  br label %76

; <label>:72:                                     ; preds = %68
  %73 = load %union.tree_node*, %union.tree_node** %9, align 8
  %74 = call %union.tree_node* @unsave_expr(%union.tree_node* %73)
  store %union.tree_node* %74, %union.tree_node** %9, align 8
  br label %76

; <label>:75:                                     ; preds = %68
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %474

; <label>:76:                                     ; preds = %72, %71, %68
  %77 = load i32, i32* @x.23
  %78 = load i32, i32* @y.24
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %76
  call void @start_sequence()
  %85 = load %union.tree_node*, %union.tree_node** %9, align 8
  %86 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  call void @do_jump(%union.tree_node* %85, %struct.rtx_def* %86, %struct.rtx_def* %87)
  %88 = call %struct.rtx_def* @gen_sequence()
  store %struct.rtx_def* %88, %struct.rtx_def** %11, align 8
  call void @end_sequence()
  store i32 0, i32* %12, align 4
  %89 = load i32, i32* @x.23
  %90 = load i32, i32* @y.24
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %97

; <label>:97:                                     ; preds = %originalBBpart279, %originalBBpart24
  %98 = load i32, i32* @x.23
  %99 = load i32, i32* @y.24
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %97
  %106 = load i32, i32* %12, align 4
  %107 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %108, i64 0, i64 0
  %110 = bitcast %union.rtunion_def* %109 to %struct.rtvec_def**
  %111 = load %struct.rtvec_def*, %struct.rtvec_def** %110, align 8
  %112 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %111, i32 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp slt i32 %106, %113
  %115 = load i32, i32* @x.23
  %116 = load i32, i32* @y.24
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %114, label %123, label %419

; <label>:123:                                    ; preds = %originalBBpart28
  %124 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %125, i64 0, i64 0
  %127 = bitcast %union.rtunion_def* %126 to %struct.rtvec_def**
  %128 = load %struct.rtvec_def*, %struct.rtvec_def** %127, align 8
  %129 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %128, i32 0, i32 1
  %130 = load i32, i32* %12, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %129, i64 0, i64 %131
  %133 = load %struct.rtx_def*, %struct.rtx_def** %132, align 8
  store %struct.rtx_def* %133, %struct.rtx_def** %14, align 8
  %134 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %135 = bitcast %struct.rtx_def* %134 to i32*
  %136 = load i32, i32* %135, align 8
  %137 = and i32 %136, 65535
  %138 = icmp eq i32 %137, 33
  br i1 %138, label %139, label %383

; <label>:139:                                    ; preds = %123
  %140 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %141 = call i32 @any_condjump_p(%struct.rtx_def* %140)
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %383

; <label>:143:                                    ; preds = %139
  %144 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %145 = call %struct.rtx_def* @pc_set(%struct.rtx_def* %144)
  store %struct.rtx_def* %145, %struct.rtx_def** %15, align 8
  %146 = icmp ne %struct.rtx_def* %145, null
  br i1 %146, label %147, label %383

; <label>:147:                                    ; preds = %143
  %148 = load i32, i32* @x.23
  %149 = load i32, i32* @y.24
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %147
  %156 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1
  %158 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %157, i64 0, i64 1
  %159 = bitcast %union.rtunion_def* %158 to %struct.rtx_def**
  %160 = load %struct.rtx_def*, %struct.rtx_def** %159, align 8
  store %struct.rtx_def* %160, %struct.rtx_def** %16, align 8
  %161 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %162 = bitcast %struct.rtx_def* %161 to i32*
  %163 = load i32, i32* %162, align 8
  %164 = and i32 %163, 65535
  %165 = icmp ne i32 %164, 72
  %166 = load i32, i32* @x.23
  %167 = load i32, i32* @y.24
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart224, label %originalBB10alteredBB

originalBBpart224:                                ; preds = %originalBB10
  br i1 %165, label %174, label %175

; <label>:174:                                    ; preds = %originalBBpart224
  br label %400

; <label>:175:                                    ; preds = %originalBBpart224
  %176 = load i32, i32* @x.23
  %177 = load i32, i32* @y.24
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %175
  %184 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %185 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %184, i32 0, i32 1
  %186 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %185, i64 0, i64 1
  %187 = bitcast %union.rtunion_def* %186 to %struct.rtx_def**
  %188 = load %struct.rtx_def*, %struct.rtx_def** %187, align 8
  %189 = bitcast %struct.rtx_def* %188 to i32*
  %190 = load i32, i32* %189, align 8
  %191 = and i32 %190, 65535
  %192 = icmp eq i32 %191, 67
  %193 = load i32, i32* @x.23
  %194 = load i32, i32* @y.24
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBBpart231, label %originalBB26alteredBB

originalBBpart231:                                ; preds = %originalBB26
  br i1 %192, label %201, label %211

; <label>:201:                                    ; preds = %originalBBpart231
  store i32 1, i32* %18, align 4
  %202 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1
  %204 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %203, i64 0, i64 1
  %205 = bitcast %union.rtunion_def* %204 to %struct.rtx_def**
  %206 = load %struct.rtx_def*, %struct.rtx_def** %205, align 8
  %207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1
  %208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %207, i64 0, i64 0
  %209 = bitcast %union.rtunion_def* %208 to %struct.rtx_def**
  %210 = load %struct.rtx_def*, %struct.rtx_def** %209, align 8
  store %struct.rtx_def* %210, %struct.rtx_def** %17, align 8
  br label %289

; <label>:211:                                    ; preds = %originalBBpart231
  %212 = load i32, i32* @x.23
  %213 = load i32, i32* @y.24
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %211
  %220 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %220, i32 0, i32 1
  %222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %221, i64 0, i64 2
  %223 = bitcast %union.rtunion_def* %222 to %struct.rtx_def**
  %224 = load %struct.rtx_def*, %struct.rtx_def** %223, align 8
  %225 = bitcast %struct.rtx_def* %224 to i32*
  %226 = load i32, i32* %225, align 8
  %227 = and i32 %226, 65535
  %228 = icmp eq i32 %227, 67
  %229 = load i32, i32* @x.23
  %230 = load i32, i32* @y.24
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBBpart240, label %originalBB33alteredBB

originalBBpart240:                                ; preds = %originalBB33
  br i1 %228, label %237, label %263

; <label>:237:                                    ; preds = %originalBBpart240
  %238 = load i32, i32* @x.23
  %239 = load i32, i32* @y.24
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %237
  store i32 0, i32* %18, align 4
  %246 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %246, i32 0, i32 1
  %248 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %247, i64 0, i64 2
  %249 = bitcast %union.rtunion_def* %248 to %struct.rtx_def**
  %250 = load %struct.rtx_def*, %struct.rtx_def** %249, align 8
  %251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1
  %252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %251, i64 0, i64 0
  %253 = bitcast %union.rtunion_def* %252 to %struct.rtx_def**
  %254 = load %struct.rtx_def*, %struct.rtx_def** %253, align 8
  store %struct.rtx_def* %254, %struct.rtx_def** %17, align 8
  %255 = load i32, i32* @x.23
  %256 = load i32, i32* @y.24
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %288

; <label>:263:                                    ; preds = %originalBBpart240
  %264 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %265 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %264, i32 0, i32 1
  %266 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %265, i64 0, i64 1
  %267 = bitcast %union.rtunion_def* %266 to %struct.rtx_def**
  %268 = load %struct.rtx_def*, %struct.rtx_def** %267, align 8
  %269 = bitcast %struct.rtx_def* %268 to i32*
  %270 = load i32, i32* %269, align 8
  %271 = and i32 %270, 65535
  %272 = icmp eq i32 %271, 51
  br i1 %272, label %273, label %274

; <label>:273:                                    ; preds = %263
  store i32 1, i32* %18, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %17, align 8
  br label %287

; <label>:274:                                    ; preds = %263
  %275 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %275, i32 0, i32 1
  %277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %276, i64 0, i64 2
  %278 = bitcast %union.rtunion_def* %277 to %struct.rtx_def**
  %279 = load %struct.rtx_def*, %struct.rtx_def** %278, align 8
  %280 = bitcast %struct.rtx_def* %279 to i32*
  %281 = load i32, i32* %280, align 8
  %282 = and i32 %281, 65535
  %283 = icmp eq i32 %282, 51
  br i1 %283, label %284, label %285

; <label>:284:                                    ; preds = %274
  store i32 0, i32* %18, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %17, align 8
  br label %286

; <label>:285:                                    ; preds = %274
  br label %400

; <label>:286:                                    ; preds = %284
  br label %287

; <label>:287:                                    ; preds = %286, %273
  br label %288

; <label>:288:                                    ; preds = %287, %originalBBpart244
  br label %289

; <label>:289:                                    ; preds = %288, %201
  %290 = load %union.tree_node*, %union.tree_node** %10, align 8
  %291 = call i32 @integer_zerop(%union.tree_node* %290)
  %292 = icmp ne i32 %291, 0
  br i1 %292, label %293, label %296

; <label>:293:                                    ; preds = %289
  %294 = load i32, i32* %18, align 4
  %295 = sub nsw i32 1, %294
  store i32 %295, i32* %18, align 4
  br label %296

; <label>:296:                                    ; preds = %293, %289
  %297 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8
  %298 = icmp eq %struct.rtx_def* %297, null
  br i1 %298, label %299, label %300

; <label>:299:                                    ; preds = %296
  br label %378

; <label>:300:                                    ; preds = %296
  %301 = load i32, i32* @x.23
  %302 = load i32, i32* @y.24
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %300
  %309 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8
  %310 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %311 = icmp eq %struct.rtx_def* %309, %310
  %312 = load i32, i32* @x.23
  %313 = load i32, i32* @y.24
  %314 = sub i32 %312, 1
  %315 = mul i32 %312, %314
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %317, %318
  br i1 %319, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %311, label %320, label %323

; <label>:320:                                    ; preds = %originalBBpart248
  %321 = load i32, i32* %18, align 4
  %322 = sub nsw i32 1, %321
  store i32 %322, i32* %18, align 4
  br label %361

; <label>:323:                                    ; preds = %originalBBpart248
  %324 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8
  %325 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %326 = icmp ne %struct.rtx_def* %324, %325
  br i1 %326, label %327, label %344

; <label>:327:                                    ; preds = %323
  %328 = load i32, i32* @x.23
  %329 = load i32, i32* @y.24
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %327
  %336 = load i32, i32* @x.23
  %337 = load i32, i32* @y.24
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %400

; <label>:344:                                    ; preds = %323
  %345 = load i32, i32* @x.23
  %346 = load i32, i32* @y.24
  %347 = sub i32 %345, 1
  %348 = mul i32 %345, %347
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %350, %351
  br i1 %352, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %344
  %353 = load i32, i32* @x.23
  %354 = load i32, i32* @y.24
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %361

; <label>:361:                                    ; preds = %originalBBpart256, %320
  %362 = load i32, i32* @x.23
  %363 = load i32, i32* @y.24
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %361
  %370 = load i32, i32* @x.23
  %371 = load i32, i32* @y.24
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %378

; <label>:378:                                    ; preds = %originalBBpart260, %299
  %379 = load i32, i32* %13, align 4
  %380 = add nsw i32 %379, 1
  store i32 %380, i32* %13, align 4
  %381 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %382 = load i32, i32* %18, align 4
  call void @predict_insn_def(%struct.rtx_def* %381, i32 6, i32 %382)
  br label %383

; <label>:383:                                    ; preds = %378, %143, %139, %123
  %384 = load i32, i32* @x.23
  %385 = load i32, i32* @y.24
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %383
  %392 = load i32, i32* @x.23
  %393 = load i32, i32* @y.24
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %400

; <label>:400:                                    ; preds = %originalBBpart264, %originalBBpart252, %285, %174
  %401 = load i32, i32* @x.23
  %402 = load i32, i32* @y.24
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %400
  %409 = load i32, i32* %12, align 4
  %410 = add nsw i32 %409, 1
  store i32 %410, i32* %12, align 4
  %411 = load i32, i32* @x.23
  %412 = load i32, i32* @y.24
  %413 = sub i32 %411, 1
  %414 = mul i32 %411, %413
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %412, 10
  %418 = or i1 %416, %417
  br i1 %418, label %originalBBpart279, label %originalBB66alteredBB

originalBBpart279:                                ; preds = %originalBB66
  br label %97

; <label>:419:                                    ; preds = %originalBBpart28
  %420 = load i32, i32* @x.23
  %421 = load i32, i32* @y.24
  %422 = sub i32 %420, 1
  %423 = mul i32 %420, %422
  %424 = urem i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %425, %426
  br i1 %427, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %originalBB81alteredBB, %419
  %428 = load i32, i32* %13, align 4
  %429 = icmp eq i32 %428, 0
  %430 = load i32, i32* @x.23
  %431 = load i32, i32* @y.24
  %432 = sub i32 %430, 1
  %433 = mul i32 %430, %432
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %435, %436
  br i1 %437, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br i1 %429, label %438, label %455

; <label>:438:                                    ; preds = %originalBBpart283
  %439 = load i32, i32* @x.23
  %440 = load i32, i32* @y.24
  %441 = sub i32 %439, 1
  %442 = mul i32 %439, %441
  %443 = urem i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = icmp slt i32 %440, 10
  %446 = or i1 %444, %445
  br i1 %446, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %originalBB85alteredBB, %438
  store %struct.rtx_def* null, %struct.rtx_def** %11, align 8
  %447 = load i32, i32* @x.23
  %448 = load i32, i32* @y.24
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br label %455

; <label>:455:                                    ; preds = %originalBBpart287, %originalBBpart283
  br label %456

; <label>:456:                                    ; preds = %455, %64, %3
  %457 = load i32, i32* @x.23
  %458 = load i32, i32* @y.24
  %459 = sub i32 %457, 1
  %460 = mul i32 %457, %459
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %462, %463
  br i1 %464, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %originalBB89alteredBB, %456
  %465 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  store %struct.rtx_def* %465, %struct.rtx_def** %4, align 8
  %466 = load i32, i32* @x.23
  %467 = load i32, i32* @y.24
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br label %474

; <label>:474:                                    ; preds = %originalBBpart291, %75
  %475 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  ret %struct.rtx_def* %475

originalBBalteredBB:                              ; preds = %originalBB, %44
  %476 = load %union.tree_node*, %union.tree_node** %10, align 8
  %477 = call i32 @integer_zerop(%union.tree_node* %476)
  %478 = icmp ne i32 %477, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %76
  call void @start_sequence()
  %479 = load %union.tree_node*, %union.tree_node** %9, align 8
  %480 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %481 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  call void @do_jump(%union.tree_node* %479, %struct.rtx_def* %480, %struct.rtx_def* %481)
  %482 = call %struct.rtx_def* @gen_sequence()
  store %struct.rtx_def* %482, %struct.rtx_def** %11, align 8
  call void @end_sequence()
  store i32 0, i32* %12, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %97
  %483 = load i32, i32* %12, align 4
  %484 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %485 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %484, i32 0, i32 1
  %486 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %485, i64 0, i64 0
  %487 = bitcast %union.rtunion_def* %486 to %struct.rtvec_def**
  %488 = load %struct.rtvec_def*, %struct.rtvec_def** %487, align 8
  %489 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %488, i32 0, i32 0
  %490 = load i32, i32* %489, align 8
  %491 = icmp slt i32 %483, %490
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %147
  %492 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %493 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %492, i32 0, i32 1
  %494 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %493, i64 0, i64 1
  %495 = bitcast %union.rtunion_def* %494 to %struct.rtx_def**
  %496 = load %struct.rtx_def*, %struct.rtx_def** %495, align 8
  store %struct.rtx_def* %496, %struct.rtx_def** %16, align 8
  %497 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %498 = bitcast %struct.rtx_def* %497 to i32*
  %499 = load i32, i32* %498, align 8
  %_ = sub i32 0, %499
  %gen = add i32 %_, 65535
  %_11 = sub i32 %499, 65535
  %gen12 = mul i32 %_11, 65535
  %_13 = sub i32 0, %499
  %gen14 = add i32 %_13, 65535
  %_15 = sub i32 0, %499
  %gen16 = add i32 %_15, 65535
  %_17 = sub i32 %499, 65535
  %gen18 = mul i32 %_17, 65535
  %_19 = shl i32 %499, 65535
  %_20 = shl i32 %499, 65535
  %_21 = sub i32 0, %499
  %gen22 = add i32 %_21, 65535
  %500 = and i32 %499, 65535
  %501 = icmp ne i32 %500, 72
  br label %originalBB10

originalBB26alteredBB:                            ; preds = %originalBB26, %175
  %502 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %503 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %502, i32 0, i32 1
  %504 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %503, i64 0, i64 1
  %505 = bitcast %union.rtunion_def* %504 to %struct.rtx_def**
  %506 = load %struct.rtx_def*, %struct.rtx_def** %505, align 8
  %507 = bitcast %struct.rtx_def* %506 to i32*
  %508 = load i32, i32* %507, align 8
  %_27 = shl i32 %508, 65535
  %_28 = sub i32 %508, 65535
  %gen29 = mul i32 %_28, 65535
  %509 = and i32 %508, 65535
  %510 = icmp eq i32 %509, 67
  br label %originalBB26

originalBB33alteredBB:                            ; preds = %originalBB33, %211
  %511 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %512 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %511, i32 0, i32 1
  %513 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %512, i64 0, i64 2
  %514 = bitcast %union.rtunion_def* %513 to %struct.rtx_def**
  %515 = load %struct.rtx_def*, %struct.rtx_def** %514, align 8
  %516 = bitcast %struct.rtx_def* %515 to i32*
  %517 = load i32, i32* %516, align 8
  %_34 = shl i32 %517, 65535
  %_35 = sub i32 0, %517
  %gen36 = add i32 %_35, 65535
  %_37 = sub i32 %517, 65535
  %gen38 = mul i32 %_37, 65535
  %518 = and i32 %517, 65535
  %519 = icmp eq i32 %518, 67
  br label %originalBB33

originalBB42alteredBB:                            ; preds = %originalBB42, %237
  store i32 0, i32* %18, align 4
  %520 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %521 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %520, i32 0, i32 1
  %522 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %521, i64 0, i64 2
  %523 = bitcast %union.rtunion_def* %522 to %struct.rtx_def**
  %524 = load %struct.rtx_def*, %struct.rtx_def** %523, align 8
  %525 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %524, i32 0, i32 1
  %526 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %525, i64 0, i64 0
  %527 = bitcast %union.rtunion_def* %526 to %struct.rtx_def**
  %528 = load %struct.rtx_def*, %struct.rtx_def** %527, align 8
  store %struct.rtx_def* %528, %struct.rtx_def** %17, align 8
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %300
  %529 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8
  %530 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %531 = icmp eq %struct.rtx_def* %529, %530
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %327
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %344
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %361
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %383
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %400
  %532 = load i32, i32* %12, align 4
  %_67 = sub i32 %532, 1
  %gen68 = mul i32 %_67, 1
  %_69 = shl i32 %532, 1
  %_70 = shl i32 %532, 1
  %_71 = shl i32 %532, 1
  %_72 = sub i32 %532, 1
  %gen73 = mul i32 %_72, 1
  %_74 = sub i32 %532, 1
  %gen75 = mul i32 %_74, 1
  %_76 = sub i32 0, %532
  %gen77 = add i32 %_76, 1
  %533 = add nsw i32 %532, 1
  store i32 %533, i32* %12, align 4
  br label %originalBB66

originalBB81alteredBB:                            ; preds = %originalBB81, %419
  %534 = load i32, i32* %13, align 4
  %535 = icmp eq i32 %534, 0
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %438
  store %struct.rtx_def* null, %struct.rtx_def** %11, align 8
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %456
  %536 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  store %struct.rtx_def* %536, %struct.rtx_def** %4, align 8
  br label %originalBB89
}

declare i32 @integer_onep(%union.tree_node*) #1

declare i32 @unsafe_for_reeval(%union.tree_node*) #1

declare %union.tree_node* @unsave_expr(%union.tree_node*) #1

declare void @do_jump(%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_sequence() #1

declare i32 @any_condjump_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @pc_set(%struct.rtx_def*) #1

declare void @predict_insn_def(%struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @gen_trap() #1

declare %struct.rtx_def* @emit_barrier() #1

; Function Attrs: noinline nounwind uwtable
define %struct.rtx_def* @expand_builtin(%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #0 {
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %union.tree_node*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  %9 = alloca %struct.rtx_def*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %union.tree_node*, align 8
  %13 = alloca %union.tree_node*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %union.tree_node*, align 8
  %17 = alloca [3 x %struct.rtx_def*], align 16
  %18 = alloca %struct.rtx_def*, align 8
  %19 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %7, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  %20 = load %union.tree_node*, %union.tree_node** %7, align 8
  %21 = bitcast %union.tree_node* %20 to %struct.tree_exp*
  %22 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %21, i32 0, i32 2
  %23 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %22, i64 0, i64 0
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8
  %25 = bitcast %union.tree_node* %24 to %struct.tree_exp*
  %26 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %25, i32 0, i32 2
  %27 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %26, i64 0, i64 0
  %28 = load %union.tree_node*, %union.tree_node** %27, align 8
  store %union.tree_node* %28, %union.tree_node** %12, align 8
  %29 = load %union.tree_node*, %union.tree_node** %7, align 8
  %30 = bitcast %union.tree_node* %29 to %struct.tree_exp*
  %31 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %30, i32 0, i32 2
  %32 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %31, i64 0, i64 1
  %33 = load %union.tree_node*, %union.tree_node** %32, align 8
  store %union.tree_node* %33, %union.tree_node** %13, align 8
  %34 = load %union.tree_node*, %union.tree_node** %12, align 8
  %35 = bitcast %union.tree_node* %34 to %struct.tree_decl*
  %36 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %35, i32 0, i32 6
  %37 = bitcast %union.anon* %36 to i32*
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %14, align 4
  %39 = load %union.tree_node*, %union.tree_node** %12, align 8
  %40 = bitcast %union.tree_node* %39 to %struct.tree_decl*
  %41 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %40, i32 0, i32 5
  %42 = bitcast i48* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = lshr i64 %43, 29
  %45 = and i64 %44, 3
  %46 = trunc i64 %45 to i32
  %47 = icmp eq i32 %46, 2
  br i1 %47, label %48, label %56

; <label>:48:                                     ; preds = %5
  %49 = load %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 11), align 8
  %50 = load %union.tree_node*, %union.tree_node** %7, align 8
  %51 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %52 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %53 = load i32, i32* %10, align 4
  %54 = load i32, i32* %11, align 4
  %55 = call %struct.rtx_def* %49(%union.tree_node* %50, %struct.rtx_def* %51, %struct.rtx_def* %52, i32 %53, i32 %54)
  store %struct.rtx_def* %55, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:56:                                     ; preds = %5
  %57 = load i32, i32* @optimize, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %79, label %59

; <label>:59:                                     ; preds = %56
  %60 = load %union.tree_node*, %union.tree_node** %12, align 8
  %61 = bitcast %union.tree_node* %60 to %struct.tree_decl*
  %62 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %61, i32 0, i32 8
  %63 = load %union.tree_node*, %union.tree_node** %62, align 8
  %64 = bitcast %union.tree_node* %63 to %struct.tree_identifier*
  %65 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %64, i32 0, i32 1
  %66 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %65, i32 0, i32 1
  %67 = load i8*, i8** %66, align 8
  %68 = call i32 @strncmp(i8* %67, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.106, i32 0, i32 0), i64 10) #7
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %79

; <label>:70:                                     ; preds = %59
  %71 = load i32, i32* %14, align 4
  switch i32 %71, label %77 [
    i32 39, label %72
    i32 40, label %72
    i32 38, label %72
    i32 41, label %72
    i32 44, label %72
    i32 24, label %72
    i32 22, label %72
    i32 23, label %72
    i32 18, label %72
    i32 17, label %72
    i32 20, label %72
    i32 21, label %72
    i32 36, label %72
    i32 37, label %72
    i32 31, label %72
    i32 27, label %72
    i32 28, label %72
    i32 30, label %72
    i32 32, label %72
    i32 33, label %72
    i32 25, label %72
    i32 26, label %72
    i32 34, label %72
    i32 35, label %72
    i32 29, label %72
    i32 19, label %72
    i32 62, label %72
    i32 63, label %72
    i32 64, label %72
    i32 65, label %72
    i32 66, label %72
    i32 67, label %72
    i32 69, label %72
    i32 70, label %72
    i32 71, label %72
    i32 72, label %72
    i32 73, label %72
    i32 74, label %72
  ]

; <label>:72:                                     ; preds = %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70
  %73 = load %union.tree_node*, %union.tree_node** %7, align 8
  %74 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %75 = load i32, i32* %11, align 4
  %76 = call %struct.rtx_def* @expand_call(%union.tree_node* %73, %struct.rtx_def* %74, i32 %75)
  store %struct.rtx_def* %76, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:77:                                     ; preds = %70
  br label %78

; <label>:78:                                     ; preds = %77
  br label %79

; <label>:79:                                     ; preds = %78, %59, %56
  %80 = load i32, i32* @x.25
  %81 = load i32, i32* @y.26
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %79
  %88 = load i32, i32* %14, align 4
  %89 = load i32, i32* @x.25
  %90 = load i32, i32* @y.26
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %88, label %1285 [
    i32 1, label %97
    i32 2, label %97
    i32 6, label %97
    i32 7, label %97
    i32 3, label %97
    i32 4, label %97
    i32 5, label %97
    i32 8, label %114
    i32 9, label %114
    i32 10, label %114
    i32 11, label %114
    i32 12, label %114
    i32 13, label %114
    i32 14, label %114
    i32 15, label %114
    i32 16, label %114
    i32 39, label %131
    i32 42, label %131
    i32 45, label %131
    i32 40, label %131
    i32 43, label %131
    i32 46, label %131
    i32 38, label %152
    i32 41, label %152
    i32 44, label %152
    i32 55, label %178
    i32 56, label %180
    i32 57, label %251
    i32 47, label %279
    i32 50, label %281
    i32 49, label %284
    i32 48, label %287
    i32 51, label %290
    i32 52, label %309
    i32 53, label %309
    i32 54, label %328
    i32 0, label %516
    i32 19, label %541
    i32 31, label %599
    i32 27, label %608
    i32 28, label %634
    i32 25, label %644
    i32 26, label %670
    i32 34, label %696
    i32 35, label %722
    i32 32, label %732
    i32 33, label %758
    i32 20, label %768
    i32 36, label %768
    i32 21, label %778
    i32 37, label %778
    i32 22, label %820
    i32 24, label %846
    i32 17, label %904
    i32 29, label %928
    i32 30, label %954
    i32 18, label %980
    i32 23, label %980
    i32 58, label %991
    i32 59, label %1048
    i32 60, label %1109
    i32 62, label %1111
    i32 63, label %1111
    i32 65, label %1111
    i32 67, label %1111
    i32 69, label %1111
    i32 70, label %1111
    i32 72, label %1111
    i32 74, label %1111
    i32 66, label %1112
    i32 73, label %1121
    i32 82, label %1130
    i32 83, label %1132
    i32 84, label %1134
    i32 85, label %1136
    i32 86, label %1142
    i32 87, label %1164
    i32 88, label %1170
    i32 89, label %1199
    i32 90, label %1202
    i32 91, label %1221
    i32 92, label %1240
    i32 93, label %1259
    i32 94, label %1262
    i32 61, label %1266
  ]

; <label>:97:                                     ; preds = %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2
  %98 = load i32, i32* @x.25
  %99 = load i32, i32* @y.26
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %97
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 3665, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.expand_builtin, i32 0, i32 0)) #6
  %106 = load i32, i32* @x.25
  %107 = load i32, i32* @y.26
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

; <label>:114:                                    ; preds = %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2
  %115 = load i32, i32* @x.25
  %116 = load i32, i32* @y.26
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %114
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 3678, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.expand_builtin, i32 0, i32 0)) #6
  %123 = load i32, i32* @x.25
  %124 = load i32, i32* @y.26
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

; <label>:131:                                    ; preds = %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2
  %132 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %135, label %134

; <label>:134:                                    ; preds = %131
  br label %1310

; <label>:135:                                    ; preds = %131
  %136 = load i32, i32* @x.25
  %137 = load i32, i32* @y.26
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %135
  %144 = load i32, i32* @x.25
  %145 = load i32, i32* @y.26
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %152

; <label>:152:                                    ; preds = %originalBBpart212, %originalBBpart2, %originalBBpart2, %originalBBpart2
  %153 = load %union.tree_node*, %union.tree_node** %7, align 8
  %154 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %155 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %156 = call %struct.rtx_def* @expand_builtin_mathfn(%union.tree_node* %153, %struct.rtx_def* %154, %struct.rtx_def* %155)
  store %struct.rtx_def* %156, %struct.rtx_def** %8, align 8
  %157 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %158 = icmp ne %struct.rtx_def* %157, null
  br i1 %158, label %159, label %161

; <label>:159:                                    ; preds = %152
  %160 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %160, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:161:                                    ; preds = %152
  %162 = load i32, i32* @x.25
  %163 = load i32, i32* @y.26
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %161
  %170 = load i32, i32* @x.25
  %171 = load i32, i32* @y.26
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %1310

; <label>:178:                                    ; preds = %originalBBpart2
  %179 = call %struct.rtx_def* @expand_builtin_apply_args()
  store %struct.rtx_def* %179, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:180:                                    ; preds = %originalBBpart2
  %181 = load i32, i32* @x.25
  %182 = load i32, i32* @y.26
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %180
  %189 = load %union.tree_node*, %union.tree_node** %13, align 8
  %190 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %189, i32 13, i32 13, i32 6, i32 5)
  %191 = icmp ne i32 %190, 0
  %192 = load i32, i32* @x.25
  %193 = load i32, i32* @y.26
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %191, label %222, label %200

; <label>:200:                                    ; preds = %originalBBpart220
  %201 = load i32, i32* @x.25
  %202 = load i32, i32* @y.26
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %200
  %209 = load %union.tree_node*, %union.tree_node** %13, align 8
  %210 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %209, i32 15, i32 13, i32 6, i32 5)
  %211 = icmp ne i32 %210, 0
  %212 = load i32, i32* @x.25
  %213 = load i32, i32* @y.26
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %211, label %222, label %220

; <label>:220:                                    ; preds = %originalBBpart224
  %221 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %221, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:222:                                    ; preds = %originalBBpart224, %originalBBpart220
  %223 = load %union.tree_node*, %union.tree_node** %13, align 8
  store %union.tree_node* %223, %union.tree_node** %16, align 8
  store i32 0, i32* %15, align 4
  br label %224

; <label>:224:                                    ; preds = %236, %222
  %225 = load %union.tree_node*, %union.tree_node** %16, align 8
  %226 = icmp ne %union.tree_node* %225, null
  br i1 %226, label %227, label %243

; <label>:227:                                    ; preds = %224
  %228 = load %union.tree_node*, %union.tree_node** %16, align 8
  %229 = bitcast %union.tree_node* %228 to %struct.tree_list*
  %230 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %229, i32 0, i32 2
  %231 = load %union.tree_node*, %union.tree_node** %230, align 8
  %232 = call %struct.rtx_def* @expand_expr(%union.tree_node* %231, %struct.rtx_def* null, i32 0, i32 0)
  %233 = load i32, i32* %15, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds [3 x %struct.rtx_def*], [3 x %struct.rtx_def*]* %17, i64 0, i64 %234
  store %struct.rtx_def* %232, %struct.rtx_def** %235, align 8
  br label %236

; <label>:236:                                    ; preds = %227
  %237 = load %union.tree_node*, %union.tree_node** %16, align 8
  %238 = bitcast %union.tree_node* %237 to %struct.tree_common*
  %239 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %238, i32 0, i32 0
  %240 = load %union.tree_node*, %union.tree_node** %239, align 8
  store %union.tree_node* %240, %union.tree_node** %16, align 8
  %241 = load i32, i32* %15, align 4
  %242 = add nsw i32 %241, 1
  store i32 %242, i32* %15, align 4
  br label %224

; <label>:243:                                    ; preds = %224
  %244 = getelementptr inbounds [3 x %struct.rtx_def*], [3 x %struct.rtx_def*]* %17, i64 0, i64 0
  %245 = load %struct.rtx_def*, %struct.rtx_def** %244, align 16
  %246 = getelementptr inbounds [3 x %struct.rtx_def*], [3 x %struct.rtx_def*]* %17, i64 0, i64 1
  %247 = load %struct.rtx_def*, %struct.rtx_def** %246, align 8
  %248 = getelementptr inbounds [3 x %struct.rtx_def*], [3 x %struct.rtx_def*]* %17, i64 0, i64 2
  %249 = load %struct.rtx_def*, %struct.rtx_def** %248, align 16
  %250 = call %struct.rtx_def* @expand_builtin_apply(%struct.rtx_def* %245, %struct.rtx_def* %247, %struct.rtx_def* %249)
  store %struct.rtx_def* %250, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:251:                                    ; preds = %originalBBpart2
  %252 = load %union.tree_node*, %union.tree_node** %13, align 8
  %253 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %252, i32 13, i32 5)
  %254 = icmp ne i32 %253, 0
  br i1 %254, label %255, label %277

; <label>:255:                                    ; preds = %251
  %256 = load i32, i32* @x.25
  %257 = load i32, i32* @y.26
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %255
  %264 = load %union.tree_node*, %union.tree_node** %13, align 8
  %265 = bitcast %union.tree_node* %264 to %struct.tree_list*
  %266 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %265, i32 0, i32 2
  %267 = load %union.tree_node*, %union.tree_node** %266, align 8
  %268 = call %struct.rtx_def* @expand_expr(%union.tree_node* %267, %struct.rtx_def* null, i32 0, i32 0)
  call void @expand_builtin_return(%struct.rtx_def* %268)
  %269 = load i32, i32* @x.25
  %270 = load i32, i32* @y.26
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %277

; <label>:277:                                    ; preds = %originalBBpart228, %251
  %278 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %278, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:279:                                    ; preds = %originalBBpart2
  %280 = call %struct.rtx_def* @expand_builtin_saveregs()
  store %struct.rtx_def* %280, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:281:                                    ; preds = %originalBBpart2
  %282 = load %union.tree_node*, %union.tree_node** %7, align 8
  %283 = call %struct.rtx_def* @expand_builtin_args_info(%union.tree_node* %282)
  store %struct.rtx_def* %283, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:284:                                    ; preds = %originalBBpart2
  %285 = load %union.tree_node*, %union.tree_node** %13, align 8
  %286 = call %struct.rtx_def* @expand_builtin_next_arg(%union.tree_node* %285)
  store %struct.rtx_def* %286, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:287:                                    ; preds = %originalBBpart2
  %288 = load %union.tree_node*, %union.tree_node** %13, align 8
  %289 = call %struct.rtx_def* @expand_builtin_classify_type(%union.tree_node* %288)
  store %struct.rtx_def* %289, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:290:                                    ; preds = %originalBBpart2
  %291 = load i32, i32* @x.25
  %292 = load i32, i32* @y.26
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %290
  %299 = load %union.tree_node*, %union.tree_node** %7, align 8
  %300 = call %struct.rtx_def* @expand_builtin_constant_p(%union.tree_node* %299)
  store %struct.rtx_def* %300, %struct.rtx_def** %6, align 8
  %301 = load i32, i32* @x.25
  %302 = load i32, i32* @y.26
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %1315

; <label>:309:                                    ; preds = %originalBBpart2, %originalBBpart2
  %310 = load i32, i32* @x.25
  %311 = load i32, i32* @y.26
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %309
  %318 = load %union.tree_node*, %union.tree_node** %7, align 8
  %319 = call %struct.rtx_def* @expand_builtin_frame_address(%union.tree_node* %318)
  store %struct.rtx_def* %319, %struct.rtx_def** %6, align 8
  %320 = load i32, i32* @x.25
  %321 = load i32, i32* @y.26
  %322 = sub i32 %320, 1
  %323 = mul i32 %320, %322
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %325, %326
  br i1 %327, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %1315

; <label>:328:                                    ; preds = %originalBBpart2
  %329 = load %union.tree_node*, %union.tree_node** %13, align 8
  %330 = icmp ne %union.tree_node* %329, null
  br i1 %330, label %463, label %331

; <label>:331:                                    ; preds = %328
  %332 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %333 = bitcast %union.tree_node* %332 to %struct.tree_common*
  %334 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %333, i32 0, i32 1
  %335 = load %union.tree_node*, %union.tree_node** %334, align 8
  %336 = bitcast %union.tree_node* %335 to %struct.tree_common*
  %337 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %336, i32 0, i32 1
  %338 = load %union.tree_node*, %union.tree_node** %337, align 8
  %339 = bitcast %union.tree_node* %338 to %struct.tree_common*
  %340 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %339, i32 0, i32 2
  %341 = load i32, i32* %340, align 8
  %342 = and i32 %341, 255
  %343 = icmp eq i32 %342, 18
  br i1 %343, label %428, label %344

; <label>:344:                                    ; preds = %331
  %345 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %346 = bitcast %union.tree_node* %345 to %struct.tree_common*
  %347 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %346, i32 0, i32 1
  %348 = load %union.tree_node*, %union.tree_node** %347, align 8
  %349 = bitcast %union.tree_node* %348 to %struct.tree_common*
  %350 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %349, i32 0, i32 1
  %351 = load %union.tree_node*, %union.tree_node** %350, align 8
  %352 = bitcast %union.tree_node* %351 to %struct.tree_common*
  %353 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %352, i32 0, i32 2
  %354 = load i32, i32* %353, align 8
  %355 = and i32 %354, 255
  %356 = icmp eq i32 %355, 20
  br i1 %356, label %428, label %357

; <label>:357:                                    ; preds = %344
  %358 = load i32, i32* @x.25
  %359 = load i32, i32* @y.26
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %357
  %366 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %367 = bitcast %union.tree_node* %366 to %struct.tree_common*
  %368 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %367, i32 0, i32 1
  %369 = load %union.tree_node*, %union.tree_node** %368, align 8
  %370 = bitcast %union.tree_node* %369 to %struct.tree_common*
  %371 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %370, i32 0, i32 1
  %372 = load %union.tree_node*, %union.tree_node** %371, align 8
  %373 = bitcast %union.tree_node* %372 to %struct.tree_common*
  %374 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %373, i32 0, i32 2
  %375 = load i32, i32* %374, align 8
  %376 = and i32 %375, 255
  %377 = icmp eq i32 %376, 21
  %378 = load i32, i32* @x.25
  %379 = load i32, i32* @y.26
  %380 = sub i32 %378, 1
  %381 = mul i32 %378, %380
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %383, %384
  br i1 %385, label %originalBBpart243, label %originalBB38alteredBB

originalBBpart243:                                ; preds = %originalBB38
  br i1 %377, label %428, label %386

; <label>:386:                                    ; preds = %originalBBpart243
  %387 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %388 = bitcast %union.tree_node* %387 to %struct.tree_common*
  %389 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %388, i32 0, i32 1
  %390 = load %union.tree_node*, %union.tree_node** %389, align 8
  %391 = bitcast %union.tree_node* %390 to %struct.tree_common*
  %392 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %391, i32 0, i32 1
  %393 = load %union.tree_node*, %union.tree_node** %392, align 8
  %394 = bitcast %union.tree_node* %393 to %struct.tree_common*
  %395 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %394, i32 0, i32 2
  %396 = load i32, i32* %395, align 8
  %397 = and i32 %396, 255
  %398 = icmp eq i32 %397, 22
  br i1 %398, label %428, label %399

; <label>:399:                                    ; preds = %386
  %400 = load i32, i32* @x.25
  %401 = load i32, i32* @y.26
  %402 = sub i32 %400, 1
  %403 = mul i32 %400, %402
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %405, %406
  br i1 %407, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %399
  %408 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %409 = bitcast %union.tree_node* %408 to %struct.tree_common*
  %410 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %409, i32 0, i32 1
  %411 = load %union.tree_node*, %union.tree_node** %410, align 8
  %412 = bitcast %union.tree_node* %411 to %struct.tree_common*
  %413 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %412, i32 0, i32 1
  %414 = load %union.tree_node*, %union.tree_node** %413, align 8
  %415 = bitcast %union.tree_node* %414 to %struct.tree_common*
  %416 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %415, i32 0, i32 2
  %417 = load i32, i32* %416, align 8
  %418 = and i32 %417, 255
  %419 = icmp eq i32 %418, 19
  %420 = load i32, i32* @x.25
  %421 = load i32, i32* @y.26
  %422 = sub i32 %420, 1
  %423 = mul i32 %420, %422
  %424 = urem i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %425, %426
  br i1 %427, label %originalBBpart253, label %originalBB45alteredBB

originalBBpart253:                                ; preds = %originalBB45
  br i1 %419, label %428, label %463

; <label>:428:                                    ; preds = %originalBBpart253, %386, %originalBBpart243, %344, %331
  %429 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %430 = bitcast %union.tree_node* %429 to %struct.tree_decl*
  %431 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %430, i32 0, i32 11
  %432 = load %union.tree_node*, %union.tree_node** %431, align 8
  %433 = bitcast %union.tree_node* %432 to %struct.tree_decl*
  %434 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %433, i32 0, i32 17
  %435 = load %struct.rtx_def*, %struct.rtx_def** %434, align 8
  %436 = icmp ne %struct.rtx_def* %435, null
  br i1 %436, label %437, label %445

; <label>:437:                                    ; preds = %428
  %438 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %439 = bitcast %union.tree_node* %438 to %struct.tree_decl*
  %440 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %439, i32 0, i32 11
  %441 = load %union.tree_node*, %union.tree_node** %440, align 8
  %442 = bitcast %union.tree_node* %441 to %struct.tree_decl*
  %443 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %442, i32 0, i32 17
  %444 = load %struct.rtx_def*, %struct.rtx_def** %443, align 8
  br label %457

; <label>:445:                                    ; preds = %428
  %446 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %447 = bitcast %union.tree_node* %446 to %struct.tree_decl*
  %448 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %447, i32 0, i32 11
  %449 = load %union.tree_node*, %union.tree_node** %448, align 8
  call void @make_decl_rtl(%union.tree_node* %449, i8* null)
  %450 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %451 = bitcast %union.tree_node* %450 to %struct.tree_decl*
  %452 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %451, i32 0, i32 11
  %453 = load %union.tree_node*, %union.tree_node** %452, align 8
  %454 = bitcast %union.tree_node* %453 to %struct.tree_decl*
  %455 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %454, i32 0, i32 17
  %456 = load %struct.rtx_def*, %struct.rtx_def** %455, align 8
  br label %457

; <label>:457:                                    ; preds = %445, %437
  %458 = phi %struct.rtx_def* [ %444, %437 ], [ %456, %445 ]
  %459 = bitcast %struct.rtx_def* %458 to i32*
  %460 = load i32, i32* %459, align 8
  %461 = and i32 %460, 65535
  %462 = icmp ne i32 %461, 66
  br i1 %462, label %463, label %465

; <label>:463:                                    ; preds = %457, %originalBBpart253, %328
  %464 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %464, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:465:                                    ; preds = %457
  %466 = load i32, i32* @x.25
  %467 = load i32, i32* @y.26
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %465
  %474 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %475 = bitcast %union.tree_node* %474 to %struct.tree_decl*
  %476 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %475, i32 0, i32 11
  %477 = load %union.tree_node*, %union.tree_node** %476, align 8
  %478 = bitcast %union.tree_node* %477 to %struct.tree_decl*
  %479 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %478, i32 0, i32 17
  %480 = load %struct.rtx_def*, %struct.rtx_def** %479, align 8
  %481 = icmp ne %struct.rtx_def* %480, null
  %482 = load i32, i32* @x.25
  %483 = load i32, i32* @y.26
  %484 = sub i32 %482, 1
  %485 = mul i32 %482, %484
  %486 = urem i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %483, 10
  %489 = or i1 %487, %488
  br i1 %489, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br i1 %481, label %490, label %498

; <label>:490:                                    ; preds = %originalBBpart257
  %491 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %492 = bitcast %union.tree_node* %491 to %struct.tree_decl*
  %493 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %492, i32 0, i32 11
  %494 = load %union.tree_node*, %union.tree_node** %493, align 8
  %495 = bitcast %union.tree_node* %494 to %struct.tree_decl*
  %496 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %495, i32 0, i32 17
  %497 = load %struct.rtx_def*, %struct.rtx_def** %496, align 8
  br label %510

; <label>:498:                                    ; preds = %originalBBpart257
  %499 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %500 = bitcast %union.tree_node* %499 to %struct.tree_decl*
  %501 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %500, i32 0, i32 11
  %502 = load %union.tree_node*, %union.tree_node** %501, align 8
  call void @make_decl_rtl(%union.tree_node* %502, i8* null)
  %503 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %504 = bitcast %union.tree_node* %503 to %struct.tree_decl*
  %505 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %504, i32 0, i32 11
  %506 = load %union.tree_node*, %union.tree_node** %505, align 8
  %507 = bitcast %union.tree_node* %506 to %struct.tree_decl*
  %508 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %507, i32 0, i32 17
  %509 = load %struct.rtx_def*, %struct.rtx_def** %508, align 8
  br label %510

; <label>:510:                                    ; preds = %498, %490
  %511 = phi %struct.rtx_def* [ %497, %490 ], [ %509, %498 ]
  %512 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %511, i32 0, i32 1
  %513 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %512, i64 0, i64 0
  %514 = bitcast %union.rtunion_def* %513 to %struct.rtx_def**
  %515 = load %struct.rtx_def*, %struct.rtx_def** %514, align 8
  store %struct.rtx_def* %515, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:516:                                    ; preds = %originalBBpart2
  %517 = load %union.tree_node*, %union.tree_node** %13, align 8
  %518 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %519 = call %struct.rtx_def* @expand_builtin_alloca(%union.tree_node* %517, %struct.rtx_def* %518)
  store %struct.rtx_def* %519, %struct.rtx_def** %8, align 8
  %520 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %521 = icmp ne %struct.rtx_def* %520, null
  br i1 %521, label %522, label %524

; <label>:522:                                    ; preds = %516
  %523 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %523, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:524:                                    ; preds = %516
  %525 = load i32, i32* @x.25
  %526 = load i32, i32* @y.26
  %527 = sub i32 %525, 1
  %528 = mul i32 %525, %527
  %529 = urem i32 %528, 2
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %526, 10
  %532 = or i1 %530, %531
  br i1 %532, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %524
  %533 = load i32, i32* @x.25
  %534 = load i32, i32* @y.26
  %535 = sub i32 %533, 1
  %536 = mul i32 %533, %535
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %534, 10
  %540 = or i1 %538, %539
  br i1 %540, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %1310

; <label>:541:                                    ; preds = %originalBBpart2
  %542 = load i32, i32* @x.25
  %543 = load i32, i32* @y.26
  %544 = sub i32 %542, 1
  %545 = mul i32 %542, %544
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %547, %548
  br i1 %549, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %originalBB63alteredBB, %541
  %550 = load %union.tree_node*, %union.tree_node** %13, align 8
  %551 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %552 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %553 = call %struct.rtx_def* @expand_builtin_ffs(%union.tree_node* %550, %struct.rtx_def* %551, %struct.rtx_def* %552)
  store %struct.rtx_def* %553, %struct.rtx_def** %8, align 8
  %554 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %555 = icmp ne %struct.rtx_def* %554, null
  %556 = load i32, i32* @x.25
  %557 = load i32, i32* @y.26
  %558 = sub i32 %556, 1
  %559 = mul i32 %556, %558
  %560 = urem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %557, 10
  %563 = or i1 %561, %562
  br i1 %563, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br i1 %555, label %564, label %582

; <label>:564:                                    ; preds = %originalBBpart265
  %565 = load i32, i32* @x.25
  %566 = load i32, i32* @y.26
  %567 = sub i32 %565, 1
  %568 = mul i32 %565, %567
  %569 = urem i32 %568, 2
  %570 = icmp eq i32 %569, 0
  %571 = icmp slt i32 %566, 10
  %572 = or i1 %570, %571
  br i1 %572, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %originalBB67alteredBB, %564
  %573 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %573, %struct.rtx_def** %6, align 8
  %574 = load i32, i32* @x.25
  %575 = load i32, i32* @y.26
  %576 = sub i32 %574, 1
  %577 = mul i32 %574, %576
  %578 = urem i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = icmp slt i32 %575, 10
  %581 = or i1 %579, %580
  br i1 %581, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %1315

; <label>:582:                                    ; preds = %originalBBpart265
  %583 = load i32, i32* @x.25
  %584 = load i32, i32* @y.26
  %585 = sub i32 %583, 1
  %586 = mul i32 %583, %585
  %587 = urem i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = icmp slt i32 %584, 10
  %590 = or i1 %588, %589
  br i1 %590, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %582
  %591 = load i32, i32* @x.25
  %592 = load i32, i32* @y.26
  %593 = sub i32 %591, 1
  %594 = mul i32 %591, %593
  %595 = urem i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %592, 10
  %598 = or i1 %596, %597
  br i1 %598, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %1310

; <label>:599:                                    ; preds = %originalBBpart2
  %600 = load %union.tree_node*, %union.tree_node** %7, align 8
  %601 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %602 = call %struct.rtx_def* @expand_builtin_strlen(%union.tree_node* %600, %struct.rtx_def* %601)
  store %struct.rtx_def* %602, %struct.rtx_def** %8, align 8
  %603 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %604 = icmp ne %struct.rtx_def* %603, null
  br i1 %604, label %605, label %607

; <label>:605:                                    ; preds = %599
  %606 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %606, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:607:                                    ; preds = %599
  br label %1310

; <label>:608:                                    ; preds = %originalBBpart2
  %609 = load %union.tree_node*, %union.tree_node** %7, align 8
  %610 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %611 = load i32, i32* %10, align 4
  %612 = call %struct.rtx_def* @expand_builtin_strcpy(%union.tree_node* %609, %struct.rtx_def* %610, i32 %611)
  store %struct.rtx_def* %612, %struct.rtx_def** %8, align 8
  %613 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %614 = icmp ne %struct.rtx_def* %613, null
  br i1 %614, label %615, label %617

; <label>:615:                                    ; preds = %608
  %616 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %616, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:617:                                    ; preds = %608
  %618 = load i32, i32* @x.25
  %619 = load i32, i32* @y.26
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %originalBB75alteredBB, %617
  %626 = load i32, i32* @x.25
  %627 = load i32, i32* @y.26
  %628 = sub i32 %626, 1
  %629 = mul i32 %626, %628
  %630 = urem i32 %629, 2
  %631 = icmp eq i32 %630, 0
  %632 = icmp slt i32 %627, 10
  %633 = or i1 %631, %632
  br i1 %633, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br label %1310

; <label>:634:                                    ; preds = %originalBBpart2
  %635 = load %union.tree_node*, %union.tree_node** %13, align 8
  %636 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %637 = load i32, i32* %10, align 4
  %638 = call %struct.rtx_def* @expand_builtin_strncpy(%union.tree_node* %635, %struct.rtx_def* %636, i32 %637)
  store %struct.rtx_def* %638, %struct.rtx_def** %8, align 8
  %639 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %640 = icmp ne %struct.rtx_def* %639, null
  br i1 %640, label %641, label %643

; <label>:641:                                    ; preds = %634
  %642 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %642, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:643:                                    ; preds = %634
  br label %1310

; <label>:644:                                    ; preds = %originalBBpart2
  %645 = load %union.tree_node*, %union.tree_node** %13, align 8
  %646 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %647 = load i32, i32* %10, align 4
  %648 = call %struct.rtx_def* @expand_builtin_strcat(%union.tree_node* %645, %struct.rtx_def* %646, i32 %647)
  store %struct.rtx_def* %648, %struct.rtx_def** %8, align 8
  %649 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %650 = icmp ne %struct.rtx_def* %649, null
  br i1 %650, label %651, label %653

; <label>:651:                                    ; preds = %644
  %652 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %652, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:653:                                    ; preds = %644
  %654 = load i32, i32* @x.25
  %655 = load i32, i32* @y.26
  %656 = sub i32 %654, 1
  %657 = mul i32 %654, %656
  %658 = urem i32 %657, 2
  %659 = icmp eq i32 %658, 0
  %660 = icmp slt i32 %655, 10
  %661 = or i1 %659, %660
  br i1 %661, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %originalBB79alteredBB, %653
  %662 = load i32, i32* @x.25
  %663 = load i32, i32* @y.26
  %664 = sub i32 %662, 1
  %665 = mul i32 %662, %664
  %666 = urem i32 %665, 2
  %667 = icmp eq i32 %666, 0
  %668 = icmp slt i32 %663, 10
  %669 = or i1 %667, %668
  br i1 %669, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br label %1310

; <label>:670:                                    ; preds = %originalBBpart2
  %671 = load %union.tree_node*, %union.tree_node** %13, align 8
  %672 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %673 = load i32, i32* %10, align 4
  %674 = call %struct.rtx_def* @expand_builtin_strncat(%union.tree_node* %671, %struct.rtx_def* %672, i32 %673)
  store %struct.rtx_def* %674, %struct.rtx_def** %8, align 8
  %675 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %676 = icmp ne %struct.rtx_def* %675, null
  br i1 %676, label %677, label %695

; <label>:677:                                    ; preds = %670
  %678 = load i32, i32* @x.25
  %679 = load i32, i32* @y.26
  %680 = sub i32 %678, 1
  %681 = mul i32 %678, %680
  %682 = urem i32 %681, 2
  %683 = icmp eq i32 %682, 0
  %684 = icmp slt i32 %679, 10
  %685 = or i1 %683, %684
  br i1 %685, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %originalBB83alteredBB, %677
  %686 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %686, %struct.rtx_def** %6, align 8
  %687 = load i32, i32* @x.25
  %688 = load i32, i32* @y.26
  %689 = sub i32 %687, 1
  %690 = mul i32 %687, %689
  %691 = urem i32 %690, 2
  %692 = icmp eq i32 %691, 0
  %693 = icmp slt i32 %688, 10
  %694 = or i1 %692, %693
  br i1 %694, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br label %1315

; <label>:695:                                    ; preds = %670
  br label %1310

; <label>:696:                                    ; preds = %originalBBpart2
  %697 = load %union.tree_node*, %union.tree_node** %13, align 8
  %698 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %699 = load i32, i32* %10, align 4
  %700 = call %struct.rtx_def* @expand_builtin_strspn(%union.tree_node* %697, %struct.rtx_def* %698, i32 %699)
  store %struct.rtx_def* %700, %struct.rtx_def** %8, align 8
  %701 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %702 = icmp ne %struct.rtx_def* %701, null
  br i1 %702, label %703, label %705

; <label>:703:                                    ; preds = %696
  %704 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %704, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:705:                                    ; preds = %696
  %706 = load i32, i32* @x.25
  %707 = load i32, i32* @y.26
  %708 = sub i32 %706, 1
  %709 = mul i32 %706, %708
  %710 = urem i32 %709, 2
  %711 = icmp eq i32 %710, 0
  %712 = icmp slt i32 %707, 10
  %713 = or i1 %711, %712
  br i1 %713, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %originalBB87alteredBB, %705
  %714 = load i32, i32* @x.25
  %715 = load i32, i32* @y.26
  %716 = sub i32 %714, 1
  %717 = mul i32 %714, %716
  %718 = urem i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = icmp slt i32 %715, 10
  %721 = or i1 %719, %720
  br i1 %721, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br label %1310

; <label>:722:                                    ; preds = %originalBBpart2
  %723 = load %union.tree_node*, %union.tree_node** %13, align 8
  %724 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %725 = load i32, i32* %10, align 4
  %726 = call %struct.rtx_def* @expand_builtin_strcspn(%union.tree_node* %723, %struct.rtx_def* %724, i32 %725)
  store %struct.rtx_def* %726, %struct.rtx_def** %8, align 8
  %727 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %728 = icmp ne %struct.rtx_def* %727, null
  br i1 %728, label %729, label %731

; <label>:729:                                    ; preds = %722
  %730 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %730, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:731:                                    ; preds = %722
  br label %1310

; <label>:732:                                    ; preds = %originalBBpart2
  %733 = load i32, i32* @x.25
  %734 = load i32, i32* @y.26
  %735 = sub i32 %733, 1
  %736 = mul i32 %733, %735
  %737 = urem i32 %736, 2
  %738 = icmp eq i32 %737, 0
  %739 = icmp slt i32 %734, 10
  %740 = or i1 %738, %739
  br i1 %740, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %originalBB91alteredBB, %732
  %741 = load %union.tree_node*, %union.tree_node** %13, align 8
  %742 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %743 = load i32, i32* %10, align 4
  %744 = call %struct.rtx_def* @expand_builtin_strstr(%union.tree_node* %741, %struct.rtx_def* %742, i32 %743)
  store %struct.rtx_def* %744, %struct.rtx_def** %8, align 8
  %745 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %746 = icmp ne %struct.rtx_def* %745, null
  %747 = load i32, i32* @x.25
  %748 = load i32, i32* @y.26
  %749 = sub i32 %747, 1
  %750 = mul i32 %747, %749
  %751 = urem i32 %750, 2
  %752 = icmp eq i32 %751, 0
  %753 = icmp slt i32 %748, 10
  %754 = or i1 %752, %753
  br i1 %754, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br i1 %746, label %755, label %757

; <label>:755:                                    ; preds = %originalBBpart293
  %756 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %756, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:757:                                    ; preds = %originalBBpart293
  br label %1310

; <label>:758:                                    ; preds = %originalBBpart2
  %759 = load %union.tree_node*, %union.tree_node** %13, align 8
  %760 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %761 = load i32, i32* %10, align 4
  %762 = call %struct.rtx_def* @expand_builtin_strpbrk(%union.tree_node* %759, %struct.rtx_def* %760, i32 %761)
  store %struct.rtx_def* %762, %struct.rtx_def** %8, align 8
  %763 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %764 = icmp ne %struct.rtx_def* %763, null
  br i1 %764, label %765, label %767

; <label>:765:                                    ; preds = %758
  %766 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %766, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:767:                                    ; preds = %758
  br label %1310

; <label>:768:                                    ; preds = %originalBBpart2, %originalBBpart2
  %769 = load %union.tree_node*, %union.tree_node** %13, align 8
  %770 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %771 = load i32, i32* %10, align 4
  %772 = call %struct.rtx_def* @expand_builtin_strchr(%union.tree_node* %769, %struct.rtx_def* %770, i32 %771)
  store %struct.rtx_def* %772, %struct.rtx_def** %8, align 8
  %773 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %774 = icmp ne %struct.rtx_def* %773, null
  br i1 %774, label %775, label %777

; <label>:775:                                    ; preds = %768
  %776 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %776, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:777:                                    ; preds = %768
  br label %1310

; <label>:778:                                    ; preds = %originalBBpart2, %originalBBpart2
  %779 = load i32, i32* @x.25
  %780 = load i32, i32* @y.26
  %781 = sub i32 %779, 1
  %782 = mul i32 %779, %781
  %783 = urem i32 %782, 2
  %784 = icmp eq i32 %783, 0
  %785 = icmp slt i32 %780, 10
  %786 = or i1 %784, %785
  br i1 %786, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %originalBB95alteredBB, %778
  %787 = load %union.tree_node*, %union.tree_node** %13, align 8
  %788 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %789 = load i32, i32* %10, align 4
  %790 = call %struct.rtx_def* @expand_builtin_strrchr(%union.tree_node* %787, %struct.rtx_def* %788, i32 %789)
  store %struct.rtx_def* %790, %struct.rtx_def** %8, align 8
  %791 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %792 = icmp ne %struct.rtx_def* %791, null
  %793 = load i32, i32* @x.25
  %794 = load i32, i32* @y.26
  %795 = sub i32 %793, 1
  %796 = mul i32 %793, %795
  %797 = urem i32 %796, 2
  %798 = icmp eq i32 %797, 0
  %799 = icmp slt i32 %794, 10
  %800 = or i1 %798, %799
  br i1 %800, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br i1 %792, label %801, label %819

; <label>:801:                                    ; preds = %originalBBpart297
  %802 = load i32, i32* @x.25
  %803 = load i32, i32* @y.26
  %804 = sub i32 %802, 1
  %805 = mul i32 %802, %804
  %806 = urem i32 %805, 2
  %807 = icmp eq i32 %806, 0
  %808 = icmp slt i32 %803, 10
  %809 = or i1 %807, %808
  br i1 %809, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %originalBB99alteredBB, %801
  %810 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %810, %struct.rtx_def** %6, align 8
  %811 = load i32, i32* @x.25
  %812 = load i32, i32* @y.26
  %813 = sub i32 %811, 1
  %814 = mul i32 %811, %813
  %815 = urem i32 %814, 2
  %816 = icmp eq i32 %815, 0
  %817 = icmp slt i32 %812, 10
  %818 = or i1 %816, %817
  br i1 %818, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br label %1315

; <label>:819:                                    ; preds = %originalBBpart297
  br label %1310

; <label>:820:                                    ; preds = %originalBBpart2
  %821 = load i32, i32* @x.25
  %822 = load i32, i32* @y.26
  %823 = sub i32 %821, 1
  %824 = mul i32 %821, %823
  %825 = urem i32 %824, 2
  %826 = icmp eq i32 %825, 0
  %827 = icmp slt i32 %822, 10
  %828 = or i1 %826, %827
  br i1 %828, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %originalBB103alteredBB, %820
  %829 = load %union.tree_node*, %union.tree_node** %13, align 8
  %830 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %831 = load i32, i32* %10, align 4
  %832 = call %struct.rtx_def* @expand_builtin_memcpy(%union.tree_node* %829, %struct.rtx_def* %830, i32 %831)
  store %struct.rtx_def* %832, %struct.rtx_def** %8, align 8
  %833 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %834 = icmp ne %struct.rtx_def* %833, null
  %835 = load i32, i32* @x.25
  %836 = load i32, i32* @y.26
  %837 = sub i32 %835, 1
  %838 = mul i32 %835, %837
  %839 = urem i32 %838, 2
  %840 = icmp eq i32 %839, 0
  %841 = icmp slt i32 %836, 10
  %842 = or i1 %840, %841
  br i1 %842, label %originalBBpart2105, label %originalBB103alteredBB

originalBBpart2105:                               ; preds = %originalBB103
  br i1 %834, label %843, label %845

; <label>:843:                                    ; preds = %originalBBpart2105
  %844 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %844, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:845:                                    ; preds = %originalBBpart2105
  br label %1310

; <label>:846:                                    ; preds = %originalBBpart2
  %847 = load i32, i32* @x.25
  %848 = load i32, i32* @y.26
  %849 = sub i32 %847, 1
  %850 = mul i32 %847, %849
  %851 = urem i32 %850, 2
  %852 = icmp eq i32 %851, 0
  %853 = icmp slt i32 %848, 10
  %854 = or i1 %852, %853
  br i1 %854, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %originalBB107alteredBB, %846
  %855 = load %union.tree_node*, %union.tree_node** %7, align 8
  %856 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %857 = load i32, i32* %10, align 4
  %858 = call %struct.rtx_def* @expand_builtin_memset(%union.tree_node* %855, %struct.rtx_def* %856, i32 %857)
  store %struct.rtx_def* %858, %struct.rtx_def** %8, align 8
  %859 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %860 = icmp ne %struct.rtx_def* %859, null
  %861 = load i32, i32* @x.25
  %862 = load i32, i32* @y.26
  %863 = sub i32 %861, 1
  %864 = mul i32 %861, %863
  %865 = urem i32 %864, 2
  %866 = icmp eq i32 %865, 0
  %867 = icmp slt i32 %862, 10
  %868 = or i1 %866, %867
  br i1 %868, label %originalBBpart2109, label %originalBB107alteredBB

originalBBpart2109:                               ; preds = %originalBB107
  br i1 %860, label %869, label %887

; <label>:869:                                    ; preds = %originalBBpart2109
  %870 = load i32, i32* @x.25
  %871 = load i32, i32* @y.26
  %872 = sub i32 %870, 1
  %873 = mul i32 %870, %872
  %874 = urem i32 %873, 2
  %875 = icmp eq i32 %874, 0
  %876 = icmp slt i32 %871, 10
  %877 = or i1 %875, %876
  br i1 %877, label %originalBB111, label %originalBB111alteredBB

originalBB111:                                    ; preds = %originalBB111alteredBB, %869
  %878 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %878, %struct.rtx_def** %6, align 8
  %879 = load i32, i32* @x.25
  %880 = load i32, i32* @y.26
  %881 = sub i32 %879, 1
  %882 = mul i32 %879, %881
  %883 = urem i32 %882, 2
  %884 = icmp eq i32 %883, 0
  %885 = icmp slt i32 %880, 10
  %886 = or i1 %884, %885
  br i1 %886, label %originalBBpart2113, label %originalBB111alteredBB

originalBBpart2113:                               ; preds = %originalBB111
  br label %1315

; <label>:887:                                    ; preds = %originalBBpart2109
  %888 = load i32, i32* @x.25
  %889 = load i32, i32* @y.26
  %890 = sub i32 %888, 1
  %891 = mul i32 %888, %890
  %892 = urem i32 %891, 2
  %893 = icmp eq i32 %892, 0
  %894 = icmp slt i32 %889, 10
  %895 = or i1 %893, %894
  br i1 %895, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %originalBB115alteredBB, %887
  %896 = load i32, i32* @x.25
  %897 = load i32, i32* @y.26
  %898 = sub i32 %896, 1
  %899 = mul i32 %896, %898
  %900 = urem i32 %899, 2
  %901 = icmp eq i32 %900, 0
  %902 = icmp slt i32 %897, 10
  %903 = or i1 %901, %902
  br i1 %903, label %originalBBpart2117, label %originalBB115alteredBB

originalBBpart2117:                               ; preds = %originalBB115
  br label %1310

; <label>:904:                                    ; preds = %originalBBpart2
  %905 = load %union.tree_node*, %union.tree_node** %7, align 8
  %906 = call %struct.rtx_def* @expand_builtin_bzero(%union.tree_node* %905)
  store %struct.rtx_def* %906, %struct.rtx_def** %8, align 8
  %907 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %908 = icmp ne %struct.rtx_def* %907, null
  br i1 %908, label %909, label %911

; <label>:909:                                    ; preds = %904
  %910 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %910, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:911:                                    ; preds = %904
  %912 = load i32, i32* @x.25
  %913 = load i32, i32* @y.26
  %914 = sub i32 %912, 1
  %915 = mul i32 %912, %914
  %916 = urem i32 %915, 2
  %917 = icmp eq i32 %916, 0
  %918 = icmp slt i32 %913, 10
  %919 = or i1 %917, %918
  br i1 %919, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %originalBB119alteredBB, %911
  %920 = load i32, i32* @x.25
  %921 = load i32, i32* @y.26
  %922 = sub i32 %920, 1
  %923 = mul i32 %920, %922
  %924 = urem i32 %923, 2
  %925 = icmp eq i32 %924, 0
  %926 = icmp slt i32 %921, 10
  %927 = or i1 %925, %926
  br i1 %927, label %originalBBpart2121, label %originalBB119alteredBB

originalBBpart2121:                               ; preds = %originalBB119
  br label %1310

; <label>:928:                                    ; preds = %originalBBpart2
  %929 = load %union.tree_node*, %union.tree_node** %7, align 8
  %930 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %931 = load i32, i32* %10, align 4
  %932 = call %struct.rtx_def* @expand_builtin_strcmp(%union.tree_node* %929, %struct.rtx_def* %930, i32 %931)
  store %struct.rtx_def* %932, %struct.rtx_def** %8, align 8
  %933 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %934 = icmp ne %struct.rtx_def* %933, null
  br i1 %934, label %935, label %937

; <label>:935:                                    ; preds = %928
  %936 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %936, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:937:                                    ; preds = %928
  %938 = load i32, i32* @x.25
  %939 = load i32, i32* @y.26
  %940 = sub i32 %938, 1
  %941 = mul i32 %938, %940
  %942 = urem i32 %941, 2
  %943 = icmp eq i32 %942, 0
  %944 = icmp slt i32 %939, 10
  %945 = or i1 %943, %944
  br i1 %945, label %originalBB123, label %originalBB123alteredBB

originalBB123:                                    ; preds = %originalBB123alteredBB, %937
  %946 = load i32, i32* @x.25
  %947 = load i32, i32* @y.26
  %948 = sub i32 %946, 1
  %949 = mul i32 %946, %948
  %950 = urem i32 %949, 2
  %951 = icmp eq i32 %950, 0
  %952 = icmp slt i32 %947, 10
  %953 = or i1 %951, %952
  br i1 %953, label %originalBBpart2125, label %originalBB123alteredBB

originalBBpart2125:                               ; preds = %originalBB123
  br label %1310

; <label>:954:                                    ; preds = %originalBBpart2
  %955 = load %union.tree_node*, %union.tree_node** %7, align 8
  %956 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %957 = load i32, i32* %10, align 4
  %958 = call %struct.rtx_def* @expand_builtin_strncmp(%union.tree_node* %955, %struct.rtx_def* %956, i32 %957)
  store %struct.rtx_def* %958, %struct.rtx_def** %8, align 8
  %959 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %960 = icmp ne %struct.rtx_def* %959, null
  br i1 %960, label %961, label %963

; <label>:961:                                    ; preds = %954
  %962 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %962, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:963:                                    ; preds = %954
  %964 = load i32, i32* @x.25
  %965 = load i32, i32* @y.26
  %966 = sub i32 %964, 1
  %967 = mul i32 %964, %966
  %968 = urem i32 %967, 2
  %969 = icmp eq i32 %968, 0
  %970 = icmp slt i32 %965, 10
  %971 = or i1 %969, %970
  br i1 %971, label %originalBB127, label %originalBB127alteredBB

originalBB127:                                    ; preds = %originalBB127alteredBB, %963
  %972 = load i32, i32* @x.25
  %973 = load i32, i32* @y.26
  %974 = sub i32 %972, 1
  %975 = mul i32 %972, %974
  %976 = urem i32 %975, 2
  %977 = icmp eq i32 %976, 0
  %978 = icmp slt i32 %973, 10
  %979 = or i1 %977, %978
  br i1 %979, label %originalBBpart2129, label %originalBB127alteredBB

originalBBpart2129:                               ; preds = %originalBB127
  br label %1310

; <label>:980:                                    ; preds = %originalBBpart2, %originalBBpart2
  %981 = load %union.tree_node*, %union.tree_node** %7, align 8
  %982 = load %union.tree_node*, %union.tree_node** %13, align 8
  %983 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %984 = load i32, i32* %10, align 4
  %985 = call %struct.rtx_def* @expand_builtin_memcmp(%union.tree_node* %981, %union.tree_node* %982, %struct.rtx_def* %983, i32 %984)
  store %struct.rtx_def* %985, %struct.rtx_def** %8, align 8
  %986 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %987 = icmp ne %struct.rtx_def* %986, null
  br i1 %987, label %988, label %990

; <label>:988:                                    ; preds = %980
  %989 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %989, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:990:                                    ; preds = %980
  br label %1310

; <label>:991:                                    ; preds = %originalBBpart2
  %992 = load i32, i32* @x.25
  %993 = load i32, i32* @y.26
  %994 = sub i32 %992, 1
  %995 = mul i32 %992, %994
  %996 = urem i32 %995, 2
  %997 = icmp eq i32 %996, 0
  %998 = icmp slt i32 %993, 10
  %999 = or i1 %997, %998
  br i1 %999, label %originalBB131, label %originalBB131alteredBB

originalBB131:                                    ; preds = %originalBB131alteredBB, %991
  %1000 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1001 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1002 = call %struct.rtx_def* @expand_builtin_setjmp(%union.tree_node* %1000, %struct.rtx_def* %1001)
  store %struct.rtx_def* %1002, %struct.rtx_def** %8, align 8
  %1003 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1004 = icmp ne %struct.rtx_def* %1003, null
  %1005 = load i32, i32* @x.25
  %1006 = load i32, i32* @y.26
  %1007 = sub i32 %1005, 1
  %1008 = mul i32 %1005, %1007
  %1009 = urem i32 %1008, 2
  %1010 = icmp eq i32 %1009, 0
  %1011 = icmp slt i32 %1006, 10
  %1012 = or i1 %1010, %1011
  br i1 %1012, label %originalBBpart2133, label %originalBB131alteredBB

originalBBpart2133:                               ; preds = %originalBB131
  br i1 %1004, label %1013, label %1031

; <label>:1013:                                   ; preds = %originalBBpart2133
  %1014 = load i32, i32* @x.25
  %1015 = load i32, i32* @y.26
  %1016 = sub i32 %1014, 1
  %1017 = mul i32 %1014, %1016
  %1018 = urem i32 %1017, 2
  %1019 = icmp eq i32 %1018, 0
  %1020 = icmp slt i32 %1015, 10
  %1021 = or i1 %1019, %1020
  br i1 %1021, label %originalBB135, label %originalBB135alteredBB

originalBB135:                                    ; preds = %originalBB135alteredBB, %1013
  %1022 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %1022, %struct.rtx_def** %6, align 8
  %1023 = load i32, i32* @x.25
  %1024 = load i32, i32* @y.26
  %1025 = sub i32 %1023, 1
  %1026 = mul i32 %1023, %1025
  %1027 = urem i32 %1026, 2
  %1028 = icmp eq i32 %1027, 0
  %1029 = icmp slt i32 %1024, 10
  %1030 = or i1 %1028, %1029
  br i1 %1030, label %originalBBpart2137, label %originalBB135alteredBB

originalBBpart2137:                               ; preds = %originalBB135
  br label %1315

; <label>:1031:                                   ; preds = %originalBBpart2133
  %1032 = load i32, i32* @x.25
  %1033 = load i32, i32* @y.26
  %1034 = sub i32 %1032, 1
  %1035 = mul i32 %1032, %1034
  %1036 = urem i32 %1035, 2
  %1037 = icmp eq i32 %1036, 0
  %1038 = icmp slt i32 %1033, 10
  %1039 = or i1 %1037, %1038
  br i1 %1039, label %originalBB139, label %originalBB139alteredBB

originalBB139:                                    ; preds = %originalBB139alteredBB, %1031
  %1040 = load i32, i32* @x.25
  %1041 = load i32, i32* @y.26
  %1042 = sub i32 %1040, 1
  %1043 = mul i32 %1040, %1042
  %1044 = urem i32 %1043, 2
  %1045 = icmp eq i32 %1044, 0
  %1046 = icmp slt i32 %1041, 10
  %1047 = or i1 %1045, %1046
  br i1 %1047, label %originalBBpart2141, label %originalBB139alteredBB

originalBBpart2141:                               ; preds = %originalBB139
  br label %1310

; <label>:1048:                                   ; preds = %originalBBpart2
  %1049 = load i32, i32* @x.25
  %1050 = load i32, i32* @y.26
  %1051 = sub i32 %1049, 1
  %1052 = mul i32 %1049, %1051
  %1053 = urem i32 %1052, 2
  %1054 = icmp eq i32 %1053, 0
  %1055 = icmp slt i32 %1050, 10
  %1056 = or i1 %1054, %1055
  br i1 %1056, label %originalBB143, label %originalBB143alteredBB

originalBB143:                                    ; preds = %originalBB143alteredBB, %1048
  %1057 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1058 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %1057, i32 13, i32 6, i32 5)
  %1059 = icmp ne i32 %1058, 0
  %1060 = load i32, i32* @x.25
  %1061 = load i32, i32* @y.26
  %1062 = sub i32 %1060, 1
  %1063 = mul i32 %1060, %1062
  %1064 = urem i32 %1063, 2
  %1065 = icmp eq i32 %1064, 0
  %1066 = icmp slt i32 %1061, 10
  %1067 = or i1 %1065, %1066
  br i1 %1067, label %originalBBpart2145, label %originalBB143alteredBB

originalBBpart2145:                               ; preds = %originalBB143
  br i1 %1059, label %1085, label %1068

; <label>:1068:                                   ; preds = %originalBBpart2145
  %1069 = load i32, i32* @x.25
  %1070 = load i32, i32* @y.26
  %1071 = sub i32 %1069, 1
  %1072 = mul i32 %1069, %1071
  %1073 = urem i32 %1072, 2
  %1074 = icmp eq i32 %1073, 0
  %1075 = icmp slt i32 %1070, 10
  %1076 = or i1 %1074, %1075
  br i1 %1076, label %originalBB147, label %originalBB147alteredBB

originalBB147:                                    ; preds = %originalBB147alteredBB, %1068
  %1077 = load i32, i32* @x.25
  %1078 = load i32, i32* @y.26
  %1079 = sub i32 %1077, 1
  %1080 = mul i32 %1077, %1079
  %1081 = urem i32 %1080, 2
  %1082 = icmp eq i32 %1081, 0
  %1083 = icmp slt i32 %1078, 10
  %1084 = or i1 %1082, %1083
  br i1 %1084, label %originalBBpart2149, label %originalBB147alteredBB

originalBBpart2149:                               ; preds = %originalBB147
  br label %1310

; <label>:1085:                                   ; preds = %originalBBpart2145
  %1086 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1087 = bitcast %union.tree_node* %1086 to %struct.tree_list*
  %1088 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1087, i32 0, i32 2
  %1089 = load %union.tree_node*, %union.tree_node** %1088, align 8
  %1090 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %1091 = call %struct.rtx_def* @expand_expr(%union.tree_node* %1089, %struct.rtx_def* %1090, i32 0, i32 0)
  store %struct.rtx_def* %1091, %struct.rtx_def** %18, align 8
  %1092 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1093 = bitcast %union.tree_node* %1092 to %struct.tree_common*
  %1094 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1093, i32 0, i32 0
  %1095 = load %union.tree_node*, %union.tree_node** %1094, align 8
  %1096 = bitcast %union.tree_node* %1095 to %struct.tree_list*
  %1097 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1096, i32 0, i32 2
  %1098 = load %union.tree_node*, %union.tree_node** %1097, align 8
  %1099 = call %struct.rtx_def* @expand_expr(%union.tree_node* %1098, %struct.rtx_def* null, i32 0, i32 0)
  store %struct.rtx_def* %1099, %struct.rtx_def** %19, align 8
  %1100 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %1101 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8
  %1102 = icmp ne %struct.rtx_def* %1100, %1101
  br i1 %1102, label %1103, label %1105

; <label>:1103:                                   ; preds = %1085
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.107, i32 0, i32 0))
  %1104 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %1104, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:1105:                                   ; preds = %1085
  %1106 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %1107 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  call void @expand_builtin_longjmp(%struct.rtx_def* %1106, %struct.rtx_def* %1107)
  %1108 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %1108, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:1109:                                   ; preds = %originalBBpart2
  call void @expand_builtin_trap()
  %1110 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %1110, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:1111:                                   ; preds = %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2
  br label %1310

; <label>:1112:                                   ; preds = %originalBBpart2
  %1113 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1114 = load i32, i32* %11, align 4
  %1115 = call %struct.rtx_def* @expand_builtin_fputs(%union.tree_node* %1113, i32 %1114, i32 0)
  store %struct.rtx_def* %1115, %struct.rtx_def** %8, align 8
  %1116 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1117 = icmp ne %struct.rtx_def* %1116, null
  br i1 %1117, label %1118, label %1120

; <label>:1118:                                   ; preds = %1112
  %1119 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %1119, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:1120:                                   ; preds = %1112
  br label %1310

; <label>:1121:                                   ; preds = %originalBBpart2
  %1122 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1123 = load i32, i32* %11, align 4
  %1124 = call %struct.rtx_def* @expand_builtin_fputs(%union.tree_node* %1122, i32 %1123, i32 1)
  store %struct.rtx_def* %1124, %struct.rtx_def** %8, align 8
  %1125 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1126 = icmp ne %struct.rtx_def* %1125, null
  br i1 %1126, label %1127, label %1129

; <label>:1127:                                   ; preds = %1121
  %1128 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %1128, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:1129:                                   ; preds = %1121
  br label %1310

; <label>:1130:                                   ; preds = %originalBBpart2
  call void @expand_builtin_unwind_init()
  %1131 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %1131, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:1132:                                   ; preds = %originalBBpart2
  %1133 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 10), align 16
  store %struct.rtx_def* %1133, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:1134:                                   ; preds = %originalBBpart2
  %1135 = call %struct.rtx_def* @expand_builtin_dwarf_fp_regnum()
  store %struct.rtx_def* %1135, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:1136:                                   ; preds = %originalBBpart2
  %1137 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1138 = bitcast %union.tree_node* %1137 to %struct.tree_list*
  %1139 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1138, i32 0, i32 2
  %1140 = load %union.tree_node*, %union.tree_node** %1139, align 8
  call void @expand_builtin_init_dwarf_reg_sizes(%union.tree_node* %1140)
  %1141 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %1141, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:1142:                                   ; preds = %originalBBpart2
  %1143 = load i32, i32* @x.25
  %1144 = load i32, i32* @y.26
  %1145 = sub i32 %1143, 1
  %1146 = mul i32 %1143, %1145
  %1147 = urem i32 %1146, 2
  %1148 = icmp eq i32 %1147, 0
  %1149 = icmp slt i32 %1144, 10
  %1150 = or i1 %1148, %1149
  br i1 %1150, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %originalBB151alteredBB, %1142
  %1151 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1152 = bitcast %union.tree_node* %1151 to %struct.tree_list*
  %1153 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1152, i32 0, i32 2
  %1154 = load %union.tree_node*, %union.tree_node** %1153, align 8
  %1155 = call %struct.rtx_def* @expand_builtin_frob_return_addr(%union.tree_node* %1154)
  store %struct.rtx_def* %1155, %struct.rtx_def** %6, align 8
  %1156 = load i32, i32* @x.25
  %1157 = load i32, i32* @y.26
  %1158 = sub i32 %1156, 1
  %1159 = mul i32 %1156, %1158
  %1160 = urem i32 %1159, 2
  %1161 = icmp eq i32 %1160, 0
  %1162 = icmp slt i32 %1157, 10
  %1163 = or i1 %1161, %1162
  br i1 %1163, label %originalBBpart2153, label %originalBB151alteredBB

originalBBpart2153:                               ; preds = %originalBB151
  br label %1315

; <label>:1164:                                   ; preds = %originalBBpart2
  %1165 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1166 = bitcast %union.tree_node* %1165 to %struct.tree_list*
  %1167 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1166, i32 0, i32 2
  %1168 = load %union.tree_node*, %union.tree_node** %1167, align 8
  %1169 = call %struct.rtx_def* @expand_builtin_extract_return_addr(%union.tree_node* %1168)
  store %struct.rtx_def* %1169, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:1170:                                   ; preds = %originalBBpart2
  %1171 = load i32, i32* @x.25
  %1172 = load i32, i32* @y.26
  %1173 = sub i32 %1171, 1
  %1174 = mul i32 %1171, %1173
  %1175 = urem i32 %1174, 2
  %1176 = icmp eq i32 %1175, 0
  %1177 = icmp slt i32 %1172, 10
  %1178 = or i1 %1176, %1177
  br i1 %1178, label %originalBB155, label %originalBB155alteredBB

originalBB155:                                    ; preds = %originalBB155alteredBB, %1170
  %1179 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1180 = bitcast %union.tree_node* %1179 to %struct.tree_list*
  %1181 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1180, i32 0, i32 2
  %1182 = load %union.tree_node*, %union.tree_node** %1181, align 8
  %1183 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1184 = bitcast %union.tree_node* %1183 to %struct.tree_common*
  %1185 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1184, i32 0, i32 0
  %1186 = load %union.tree_node*, %union.tree_node** %1185, align 8
  %1187 = bitcast %union.tree_node* %1186 to %struct.tree_list*
  %1188 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1187, i32 0, i32 2
  %1189 = load %union.tree_node*, %union.tree_node** %1188, align 8
  call void @expand_builtin_eh_return(%union.tree_node* %1182, %union.tree_node* %1189)
  %1190 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %1190, %struct.rtx_def** %6, align 8
  %1191 = load i32, i32* @x.25
  %1192 = load i32, i32* @y.26
  %1193 = sub i32 %1191, 1
  %1194 = mul i32 %1191, %1193
  %1195 = urem i32 %1194, 2
  %1196 = icmp eq i32 %1195, 0
  %1197 = icmp slt i32 %1192, 10
  %1198 = or i1 %1196, %1197
  br i1 %1198, label %originalBBpart2157, label %originalBB155alteredBB

originalBBpart2157:                               ; preds = %originalBB155
  br label %1315

; <label>:1199:                                   ; preds = %originalBBpart2
  %1200 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1201 = call %struct.rtx_def* @expand_builtin_eh_return_data_regno(%union.tree_node* %1200)
  store %struct.rtx_def* %1201, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:1202:                                   ; preds = %originalBBpart2
  %1203 = load i32, i32* @x.25
  %1204 = load i32, i32* @y.26
  %1205 = sub i32 %1203, 1
  %1206 = mul i32 %1203, %1205
  %1207 = urem i32 %1206, 2
  %1208 = icmp eq i32 %1207, 0
  %1209 = icmp slt i32 %1204, 10
  %1210 = or i1 %1208, %1209
  br i1 %1210, label %originalBB159, label %originalBB159alteredBB

originalBB159:                                    ; preds = %originalBB159alteredBB, %1202
  %1211 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1212 = call %struct.rtx_def* @expand_builtin_va_start(i32 0, %union.tree_node* %1211)
  store %struct.rtx_def* %1212, %struct.rtx_def** %6, align 8
  %1213 = load i32, i32* @x.25
  %1214 = load i32, i32* @y.26
  %1215 = sub i32 %1213, 1
  %1216 = mul i32 %1213, %1215
  %1217 = urem i32 %1216, 2
  %1218 = icmp eq i32 %1217, 0
  %1219 = icmp slt i32 %1214, 10
  %1220 = or i1 %1218, %1219
  br i1 %1220, label %originalBBpart2161, label %originalBB159alteredBB

originalBBpart2161:                               ; preds = %originalBB159
  br label %1315

; <label>:1221:                                   ; preds = %originalBBpart2
  %1222 = load i32, i32* @x.25
  %1223 = load i32, i32* @y.26
  %1224 = sub i32 %1222, 1
  %1225 = mul i32 %1222, %1224
  %1226 = urem i32 %1225, 2
  %1227 = icmp eq i32 %1226, 0
  %1228 = icmp slt i32 %1223, 10
  %1229 = or i1 %1227, %1228
  br i1 %1229, label %originalBB163, label %originalBB163alteredBB

originalBB163:                                    ; preds = %originalBB163alteredBB, %1221
  %1230 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1231 = call %struct.rtx_def* @expand_builtin_va_start(i32 1, %union.tree_node* %1230)
  store %struct.rtx_def* %1231, %struct.rtx_def** %6, align 8
  %1232 = load i32, i32* @x.25
  %1233 = load i32, i32* @y.26
  %1234 = sub i32 %1232, 1
  %1235 = mul i32 %1232, %1234
  %1236 = urem i32 %1235, 2
  %1237 = icmp eq i32 %1236, 0
  %1238 = icmp slt i32 %1233, 10
  %1239 = or i1 %1237, %1238
  br i1 %1239, label %originalBBpart2165, label %originalBB163alteredBB

originalBBpart2165:                               ; preds = %originalBB163
  br label %1315

; <label>:1240:                                   ; preds = %originalBBpart2
  %1241 = load i32, i32* @x.25
  %1242 = load i32, i32* @y.26
  %1243 = sub i32 %1241, 1
  %1244 = mul i32 %1241, %1243
  %1245 = urem i32 %1244, 2
  %1246 = icmp eq i32 %1245, 0
  %1247 = icmp slt i32 %1242, 10
  %1248 = or i1 %1246, %1247
  br i1 %1248, label %originalBB167, label %originalBB167alteredBB

originalBB167:                                    ; preds = %originalBB167alteredBB, %1240
  %1249 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1250 = call %struct.rtx_def* @expand_builtin_va_end(%union.tree_node* %1249)
  store %struct.rtx_def* %1250, %struct.rtx_def** %6, align 8
  %1251 = load i32, i32* @x.25
  %1252 = load i32, i32* @y.26
  %1253 = sub i32 %1251, 1
  %1254 = mul i32 %1251, %1253
  %1255 = urem i32 %1254, 2
  %1256 = icmp eq i32 %1255, 0
  %1257 = icmp slt i32 %1252, 10
  %1258 = or i1 %1256, %1257
  br i1 %1258, label %originalBBpart2169, label %originalBB167alteredBB

originalBBpart2169:                               ; preds = %originalBB167
  br label %1315

; <label>:1259:                                   ; preds = %originalBBpart2
  %1260 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1261 = call %struct.rtx_def* @expand_builtin_va_copy(%union.tree_node* %1260)
  store %struct.rtx_def* %1261, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:1262:                                   ; preds = %originalBBpart2
  %1263 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1264 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1265 = call %struct.rtx_def* @expand_builtin_expect(%union.tree_node* %1263, %struct.rtx_def* %1264)
  store %struct.rtx_def* %1265, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:1266:                                   ; preds = %originalBBpart2
  %1267 = load i32, i32* @x.25
  %1268 = load i32, i32* @y.26
  %1269 = sub i32 %1267, 1
  %1270 = mul i32 %1267, %1269
  %1271 = urem i32 %1270, 2
  %1272 = icmp eq i32 %1271, 0
  %1273 = icmp slt i32 %1268, 10
  %1274 = or i1 %1272, %1273
  br i1 %1274, label %originalBB171, label %originalBB171alteredBB

originalBB171:                                    ; preds = %originalBB171alteredBB, %1266
  %1275 = load %union.tree_node*, %union.tree_node** %13, align 8
  call void @expand_builtin_prefetch(%union.tree_node* %1275)
  %1276 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %1276, %struct.rtx_def** %6, align 8
  %1277 = load i32, i32* @x.25
  %1278 = load i32, i32* @y.26
  %1279 = sub i32 %1277, 1
  %1280 = mul i32 %1277, %1279
  %1281 = urem i32 %1280, 2
  %1282 = icmp eq i32 %1281, 0
  %1283 = icmp slt i32 %1278, 10
  %1284 = or i1 %1282, %1283
  br i1 %1284, label %originalBBpart2173, label %originalBB171alteredBB

originalBBpart2173:                               ; preds = %originalBB171
  br label %1315

; <label>:1285:                                   ; preds = %originalBBpart2
  %1286 = load i32, i32* @x.25
  %1287 = load i32, i32* @y.26
  %1288 = sub i32 %1286, 1
  %1289 = mul i32 %1286, %1288
  %1290 = urem i32 %1289, 2
  %1291 = icmp eq i32 %1290, 0
  %1292 = icmp slt i32 %1287, 10
  %1293 = or i1 %1291, %1292
  br i1 %1293, label %originalBB175, label %originalBB175alteredBB

originalBB175:                                    ; preds = %originalBB175alteredBB, %1285
  %1294 = load %union.tree_node*, %union.tree_node** %12, align 8
  %1295 = bitcast %union.tree_node* %1294 to %struct.tree_decl*
  %1296 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %1295, i32 0, i32 8
  %1297 = load %union.tree_node*, %union.tree_node** %1296, align 8
  %1298 = bitcast %union.tree_node* %1297 to %struct.tree_identifier*
  %1299 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %1298, i32 0, i32 1
  %1300 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %1299, i32 0, i32 1
  %1301 = load i8*, i8** %1300, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.108, i32 0, i32 0), i8* %1301)
  %1302 = load i32, i32* @x.25
  %1303 = load i32, i32* @y.26
  %1304 = sub i32 %1302, 1
  %1305 = mul i32 %1302, %1304
  %1306 = urem i32 %1305, 2
  %1307 = icmp eq i32 %1306, 0
  %1308 = icmp slt i32 %1303, 10
  %1309 = or i1 %1307, %1308
  br i1 %1309, label %originalBBpart2177, label %originalBB175alteredBB

originalBBpart2177:                               ; preds = %originalBB175
  br label %1310

; <label>:1310:                                   ; preds = %originalBBpart2177, %1129, %1120, %1111, %originalBBpart2149, %originalBBpart2141, %990, %originalBBpart2129, %originalBBpart2125, %originalBBpart2121, %originalBBpart2117, %845, %819, %777, %767, %757, %731, %originalBBpart289, %695, %originalBBpart281, %643, %originalBBpart277, %607, %originalBBpart273, %originalBBpart261, %originalBBpart216, %134
  %1311 = load %union.tree_node*, %union.tree_node** %7, align 8
  %1312 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1313 = load i32, i32* %11, align 4
  %1314 = call %struct.rtx_def* @expand_call(%union.tree_node* %1311, %struct.rtx_def* %1312, i32 %1313)
  store %struct.rtx_def* %1314, %struct.rtx_def** %6, align 8
  br label %1315

; <label>:1315:                                   ; preds = %1310, %originalBBpart2173, %1262, %1259, %originalBBpart2169, %originalBBpart2165, %originalBBpart2161, %1199, %originalBBpart2157, %1164, %originalBBpart2153, %1136, %1134, %1132, %1130, %1127, %1118, %1109, %1105, %1103, %originalBBpart2137, %988, %961, %935, %909, %originalBBpart2113, %843, %originalBBpart2101, %775, %765, %755, %729, %703, %originalBBpart285, %651, %641, %615, %605, %originalBBpart269, %522, %510, %463, %originalBBpart236, %originalBBpart232, %287, %284, %281, %279, %277, %243, %220, %178, %159, %72, %48
  %1316 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  ret %struct.rtx_def* %1316

originalBBalteredBB:                              ; preds = %originalBB, %79
  %1317 = load i32, i32* %14, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %97
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 3665, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.expand_builtin, i32 0, i32 0)) #6
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %114
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 3678, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.expand_builtin, i32 0, i32 0)) #6
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %135
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %161
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %180
  %1318 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1319 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %1318, i32 13, i32 13, i32 6, i32 5)
  %1320 = icmp ne i32 %1319, 0
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %200
  %1321 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1322 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %1321, i32 15, i32 13, i32 6, i32 5)
  %1323 = icmp ne i32 %1322, 0
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %255
  %1324 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1325 = bitcast %union.tree_node* %1324 to %struct.tree_list*
  %1326 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1325, i32 0, i32 2
  %1327 = load %union.tree_node*, %union.tree_node** %1326, align 8
  %1328 = call %struct.rtx_def* @expand_expr(%union.tree_node* %1327, %struct.rtx_def* null, i32 0, i32 0)
  call void @expand_builtin_return(%struct.rtx_def* %1328)
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %290
  %1329 = load %union.tree_node*, %union.tree_node** %7, align 8
  %1330 = call %struct.rtx_def* @expand_builtin_constant_p(%union.tree_node* %1329)
  store %struct.rtx_def* %1330, %struct.rtx_def** %6, align 8
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %309
  %1331 = load %union.tree_node*, %union.tree_node** %7, align 8
  %1332 = call %struct.rtx_def* @expand_builtin_frame_address(%union.tree_node* %1331)
  store %struct.rtx_def* %1332, %struct.rtx_def** %6, align 8
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %357
  %1333 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %1334 = bitcast %union.tree_node* %1333 to %struct.tree_common*
  %1335 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1334, i32 0, i32 1
  %1336 = load %union.tree_node*, %union.tree_node** %1335, align 8
  %1337 = bitcast %union.tree_node* %1336 to %struct.tree_common*
  %1338 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1337, i32 0, i32 1
  %1339 = load %union.tree_node*, %union.tree_node** %1338, align 8
  %1340 = bitcast %union.tree_node* %1339 to %struct.tree_common*
  %1341 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1340, i32 0, i32 2
  %1342 = load i32, i32* %1341, align 8
  %_ = sub i32 0, %1342
  %gen = add i32 %_, 255
  %_39 = sub i32 0, %1342
  %gen40 = add i32 %_39, 255
  %_41 = shl i32 %1342, 255
  %1343 = and i32 %1342, 255
  %1344 = icmp eq i32 %1343, 21
  br label %originalBB38

originalBB45alteredBB:                            ; preds = %originalBB45, %399
  %1345 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %1346 = bitcast %union.tree_node* %1345 to %struct.tree_common*
  %1347 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1346, i32 0, i32 1
  %1348 = load %union.tree_node*, %union.tree_node** %1347, align 8
  %1349 = bitcast %union.tree_node* %1348 to %struct.tree_common*
  %1350 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1349, i32 0, i32 1
  %1351 = load %union.tree_node*, %union.tree_node** %1350, align 8
  %1352 = bitcast %union.tree_node* %1351 to %struct.tree_common*
  %1353 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1352, i32 0, i32 2
  %1354 = load i32, i32* %1353, align 8
  %_46 = shl i32 %1354, 255
  %_47 = shl i32 %1354, 255
  %_48 = shl i32 %1354, 255
  %_49 = shl i32 %1354, 255
  %_50 = sub i32 %1354, 255
  %gen51 = mul i32 %_50, 255
  %1355 = and i32 %1354, 255
  %1356 = icmp eq i32 %1355, 19
  br label %originalBB45

originalBB55alteredBB:                            ; preds = %originalBB55, %465
  %1357 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %1358 = bitcast %union.tree_node* %1357 to %struct.tree_decl*
  %1359 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %1358, i32 0, i32 11
  %1360 = load %union.tree_node*, %union.tree_node** %1359, align 8
  %1361 = bitcast %union.tree_node* %1360 to %struct.tree_decl*
  %1362 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %1361, i32 0, i32 17
  %1363 = load %struct.rtx_def*, %struct.rtx_def** %1362, align 8
  %1364 = icmp ne %struct.rtx_def* %1363, null
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %524
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %541
  %1365 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1366 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1367 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %1368 = call %struct.rtx_def* @expand_builtin_ffs(%union.tree_node* %1365, %struct.rtx_def* %1366, %struct.rtx_def* %1367)
  store %struct.rtx_def* %1368, %struct.rtx_def** %8, align 8
  %1369 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1370 = icmp ne %struct.rtx_def* %1369, null
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %564
  %1371 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %1371, %struct.rtx_def** %6, align 8
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %582
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %617
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %653
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %677
  %1372 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %1372, %struct.rtx_def** %6, align 8
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %705
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %732
  %1373 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1374 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1375 = load i32, i32* %10, align 4
  %1376 = call %struct.rtx_def* @expand_builtin_strstr(%union.tree_node* %1373, %struct.rtx_def* %1374, i32 %1375)
  store %struct.rtx_def* %1376, %struct.rtx_def** %8, align 8
  %1377 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1378 = icmp ne %struct.rtx_def* %1377, null
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %778
  %1379 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1380 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1381 = load i32, i32* %10, align 4
  %1382 = call %struct.rtx_def* @expand_builtin_strrchr(%union.tree_node* %1379, %struct.rtx_def* %1380, i32 %1381)
  store %struct.rtx_def* %1382, %struct.rtx_def** %8, align 8
  %1383 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1384 = icmp ne %struct.rtx_def* %1383, null
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %801
  %1385 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %1385, %struct.rtx_def** %6, align 8
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %820
  %1386 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1387 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1388 = load i32, i32* %10, align 4
  %1389 = call %struct.rtx_def* @expand_builtin_memcpy(%union.tree_node* %1386, %struct.rtx_def* %1387, i32 %1388)
  store %struct.rtx_def* %1389, %struct.rtx_def** %8, align 8
  %1390 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1391 = icmp ne %struct.rtx_def* %1390, null
  br label %originalBB103

originalBB107alteredBB:                           ; preds = %originalBB107, %846
  %1392 = load %union.tree_node*, %union.tree_node** %7, align 8
  %1393 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1394 = load i32, i32* %10, align 4
  %1395 = call %struct.rtx_def* @expand_builtin_memset(%union.tree_node* %1392, %struct.rtx_def* %1393, i32 %1394)
  store %struct.rtx_def* %1395, %struct.rtx_def** %8, align 8
  %1396 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1397 = icmp ne %struct.rtx_def* %1396, null
  br label %originalBB107

originalBB111alteredBB:                           ; preds = %originalBB111, %869
  %1398 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %1398, %struct.rtx_def** %6, align 8
  br label %originalBB111

originalBB115alteredBB:                           ; preds = %originalBB115, %887
  br label %originalBB115

originalBB119alteredBB:                           ; preds = %originalBB119, %911
  br label %originalBB119

originalBB123alteredBB:                           ; preds = %originalBB123, %937
  br label %originalBB123

originalBB127alteredBB:                           ; preds = %originalBB127, %963
  br label %originalBB127

originalBB131alteredBB:                           ; preds = %originalBB131, %991
  %1399 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1400 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1401 = call %struct.rtx_def* @expand_builtin_setjmp(%union.tree_node* %1399, %struct.rtx_def* %1400)
  store %struct.rtx_def* %1401, %struct.rtx_def** %8, align 8
  %1402 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %1403 = icmp ne %struct.rtx_def* %1402, null
  br label %originalBB131

originalBB135alteredBB:                           ; preds = %originalBB135, %1013
  %1404 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %1404, %struct.rtx_def** %6, align 8
  br label %originalBB135

originalBB139alteredBB:                           ; preds = %originalBB139, %1031
  br label %originalBB139

originalBB143alteredBB:                           ; preds = %originalBB143, %1048
  %1405 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1406 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %1405, i32 13, i32 6, i32 5)
  %1407 = icmp ne i32 %1406, 0
  br label %originalBB143

originalBB147alteredBB:                           ; preds = %originalBB147, %1068
  br label %originalBB147

originalBB151alteredBB:                           ; preds = %originalBB151, %1142
  %1408 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1409 = bitcast %union.tree_node* %1408 to %struct.tree_list*
  %1410 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1409, i32 0, i32 2
  %1411 = load %union.tree_node*, %union.tree_node** %1410, align 8
  %1412 = call %struct.rtx_def* @expand_builtin_frob_return_addr(%union.tree_node* %1411)
  store %struct.rtx_def* %1412, %struct.rtx_def** %6, align 8
  br label %originalBB151

originalBB155alteredBB:                           ; preds = %originalBB155, %1170
  %1413 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1414 = bitcast %union.tree_node* %1413 to %struct.tree_list*
  %1415 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1414, i32 0, i32 2
  %1416 = load %union.tree_node*, %union.tree_node** %1415, align 8
  %1417 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1418 = bitcast %union.tree_node* %1417 to %struct.tree_common*
  %1419 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1418, i32 0, i32 0
  %1420 = load %union.tree_node*, %union.tree_node** %1419, align 8
  %1421 = bitcast %union.tree_node* %1420 to %struct.tree_list*
  %1422 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1421, i32 0, i32 2
  %1423 = load %union.tree_node*, %union.tree_node** %1422, align 8
  call void @expand_builtin_eh_return(%union.tree_node* %1416, %union.tree_node* %1423)
  %1424 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %1424, %struct.rtx_def** %6, align 8
  br label %originalBB155

originalBB159alteredBB:                           ; preds = %originalBB159, %1202
  %1425 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1426 = call %struct.rtx_def* @expand_builtin_va_start(i32 0, %union.tree_node* %1425)
  store %struct.rtx_def* %1426, %struct.rtx_def** %6, align 8
  br label %originalBB159

originalBB163alteredBB:                           ; preds = %originalBB163, %1221
  %1427 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1428 = call %struct.rtx_def* @expand_builtin_va_start(i32 1, %union.tree_node* %1427)
  store %struct.rtx_def* %1428, %struct.rtx_def** %6, align 8
  br label %originalBB163

originalBB167alteredBB:                           ; preds = %originalBB167, %1240
  %1429 = load %union.tree_node*, %union.tree_node** %13, align 8
  %1430 = call %struct.rtx_def* @expand_builtin_va_end(%union.tree_node* %1429)
  store %struct.rtx_def* %1430, %struct.rtx_def** %6, align 8
  br label %originalBB167

originalBB171alteredBB:                           ; preds = %originalBB171, %1266
  %1431 = load %union.tree_node*, %union.tree_node** %13, align 8
  call void @expand_builtin_prefetch(%union.tree_node* %1431)
  %1432 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %1432, %struct.rtx_def** %6, align 8
  br label %originalBB171

originalBB175alteredBB:                           ; preds = %originalBB175, %1285
  %1433 = load %union.tree_node*, %union.tree_node** %12, align 8
  %1434 = bitcast %union.tree_node* %1433 to %struct.tree_decl*
  %1435 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %1434, i32 0, i32 8
  %1436 = load %union.tree_node*, %union.tree_node** %1435, align 8
  %1437 = bitcast %union.tree_node* %1436 to %struct.tree_identifier*
  %1438 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %1437, i32 0, i32 1
  %1439 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %1438, i32 0, i32 1
  %1440 = load i8*, i8** %1439, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.108, i32 0, i32 0), i8* %1440)
  br label %originalBB175
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #3

declare %struct.rtx_def* @expand_call(%union.tree_node*, %struct.rtx_def*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_mathfn(%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*) #0 {
  %4 = load i32, i32* @x.27
  %5 = load i32, i32* @y.28
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %union.tree_node*, align 8
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca %struct.rtx_def*, align 8
  %16 = alloca %struct.optab*, align 8
  %17 = alloca %struct.rtx_def*, align 8
  %18 = alloca %struct.rtx_def*, align 8
  %19 = alloca %union.tree_node*, align 8
  %20 = alloca %union.tree_node*, align 8
  %21 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %13, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %14, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %15, align 8
  %22 = load %union.tree_node*, %union.tree_node** %13, align 8
  %23 = bitcast %union.tree_node* %22 to %struct.tree_exp*
  %24 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %23, i32 0, i32 2
  %25 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %24, i64 0, i64 0
  %26 = load %union.tree_node*, %union.tree_node** %25, align 8
  %27 = bitcast %union.tree_node* %26 to %struct.tree_exp*
  %28 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %27, i32 0, i32 2
  %29 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %28, i64 0, i64 0
  %30 = load %union.tree_node*, %union.tree_node** %29, align 8
  store %union.tree_node* %30, %union.tree_node** %19, align 8
  %31 = load %union.tree_node*, %union.tree_node** %13, align 8
  %32 = bitcast %union.tree_node* %31 to %struct.tree_exp*
  %33 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %32, i32 0, i32 2
  %34 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %33, i64 0, i64 1
  %35 = load %union.tree_node*, %union.tree_node** %34, align 8
  store %union.tree_node* %35, %union.tree_node** %20, align 8
  %36 = load %union.tree_node*, %union.tree_node** %20, align 8
  %37 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %36, i32 7, i32 5)
  %38 = icmp ne i32 %37, 0
  %39 = load i32, i32* @x.27
  %40 = load i32, i32* @y.28
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %38, label %64, label %47

; <label>:47:                                     ; preds = %originalBBpart2
  %48 = load i32, i32* @x.27
  %49 = load i32, i32* @y.28
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %47
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  %56 = load i32, i32* @x.27
  %57 = load i32, i32* @y.28
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %221

; <label>:64:                                     ; preds = %originalBBpart2
  %65 = load i32, i32* @x.27
  %66 = load i32, i32* @y.28
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %64
  %73 = load %union.tree_node*, %union.tree_node** %20, align 8
  %74 = bitcast %union.tree_node* %73 to %struct.tree_list*
  %75 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %74, i32 0, i32 2
  %76 = load %union.tree_node*, %union.tree_node** %75, align 8
  %77 = bitcast %union.tree_node* %76 to %struct.tree_common*
  %78 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %77, i32 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 255
  %81 = icmp ne i32 %80, 34
  %82 = load i32, i32* @x.27
  %83 = load i32, i32* @y.28
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart29, label %originalBB6alteredBB

originalBBpart29:                                 ; preds = %originalBB6
  br i1 %81, label %90, label %118

; <label>:90:                                     ; preds = %originalBBpart29
  %91 = load %union.tree_node*, %union.tree_node** %20, align 8
  %92 = bitcast %union.tree_node* %91 to %struct.tree_list*
  %93 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %92, i32 0, i32 2
  %94 = load %union.tree_node*, %union.tree_node** %93, align 8
  %95 = bitcast %union.tree_node* %94 to %struct.tree_common*
  %96 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %95, i32 0, i32 2
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 255
  %99 = icmp ne i32 %98, 35
  br i1 %99, label %100, label %118

; <label>:100:                                    ; preds = %90
  %101 = load %union.tree_node*, %union.tree_node** %13, align 8
  %102 = call %union.tree_node* @copy_node(%union.tree_node* %101)
  store %union.tree_node* %102, %union.tree_node** %13, align 8
  %103 = load %union.tree_node*, %union.tree_node** %20, align 8
  %104 = load %union.tree_node*, %union.tree_node** %13, align 8
  %105 = bitcast %union.tree_node* %104 to %struct.tree_exp*
  %106 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %105, i32 0, i32 2
  %107 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %106, i64 0, i64 1
  store %union.tree_node* %103, %union.tree_node** %107, align 8
  %108 = load %union.tree_node*, %union.tree_node** %20, align 8
  %109 = bitcast %union.tree_node* %108 to %struct.tree_list*
  %110 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %109, i32 0, i32 2
  %111 = load %union.tree_node*, %union.tree_node** %110, align 8
  %112 = call %union.tree_node* @save_expr(%union.tree_node* %111)
  %113 = load %union.tree_node*, %union.tree_node** %20, align 8
  %114 = bitcast %union.tree_node* %113 to %struct.tree_list*
  %115 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %114, i32 0, i32 2
  store %union.tree_node* %112, %union.tree_node** %115, align 8
  %116 = load %union.tree_node*, %union.tree_node** %20, align 8
  %117 = call %union.tree_node* @copy_node(%union.tree_node* %116)
  store %union.tree_node* %117, %union.tree_node** %20, align 8
  br label %118

; <label>:118:                                    ; preds = %100, %90, %originalBBpart29
  %119 = load %union.tree_node*, %union.tree_node** %20, align 8
  %120 = bitcast %union.tree_node* %119 to %struct.tree_list*
  %121 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %120, i32 0, i32 2
  %122 = load %union.tree_node*, %union.tree_node** %121, align 8
  %123 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %124 = call %struct.rtx_def* @expand_expr(%union.tree_node* %122, %struct.rtx_def* %123, i32 0, i32 0)
  store %struct.rtx_def* %124, %struct.rtx_def** %17, align 8
  %125 = load %union.tree_node*, %union.tree_node** %13, align 8
  %126 = bitcast %union.tree_node* %125 to %struct.tree_common*
  %127 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %126, i32 0, i32 1
  %128 = load %union.tree_node*, %union.tree_node** %127, align 8
  %129 = bitcast %union.tree_node* %128 to %struct.tree_type*
  %130 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %129, i32 0, i32 6
  %131 = load i32, i32* %130, align 4
  %132 = lshr i32 %131, 9
  %133 = and i32 %132, 127
  %134 = call %struct.rtx_def* @gen_reg_rtx(i32 %133)
  store %struct.rtx_def* %134, %struct.rtx_def** %14, align 8
  call void @emit_queue()
  call void @start_sequence()
  %135 = load %union.tree_node*, %union.tree_node** %19, align 8
  %136 = bitcast %union.tree_node* %135 to %struct.tree_decl*
  %137 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %136, i32 0, i32 6
  %138 = bitcast %union.anon* %137 to i32*
  %139 = load i32, i32* %138, align 8
  switch i32 %139, label %146 [
    i32 39, label %140
    i32 42, label %140
    i32 45, label %140
    i32 40, label %142
    i32 43, label %142
    i32 46, label %142
    i32 38, label %144
    i32 41, label %144
    i32 44, label %144
  ]

; <label>:140:                                    ; preds = %118, %118, %118
  %141 = load %struct.optab*, %struct.optab** getelementptr inbounds ([49 x %struct.optab*], [49 x %struct.optab*]* @optab_table, i64 0, i64 39), align 8
  store %struct.optab* %141, %struct.optab** %16, align 8
  br label %147

; <label>:142:                                    ; preds = %118, %118, %118
  %143 = load %struct.optab*, %struct.optab** getelementptr inbounds ([49 x %struct.optab*], [49 x %struct.optab*]* @optab_table, i64 0, i64 40), align 16
  store %struct.optab* %143, %struct.optab** %16, align 8
  br label %147

; <label>:144:                                    ; preds = %118, %118, %118
  %145 = load %struct.optab*, %struct.optab** getelementptr inbounds ([49 x %struct.optab*], [49 x %struct.optab*]* @optab_table, i64 0, i64 38), align 16
  store %struct.optab* %145, %struct.optab** %16, align 8
  br label %147

; <label>:146:                                    ; preds = %118
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 1516, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.expand_builtin_mathfn, i32 0, i32 0)) #6
  unreachable

; <label>:147:                                    ; preds = %144, %142, %140
  %148 = load %union.tree_node*, %union.tree_node** %20, align 8
  %149 = bitcast %union.tree_node* %148 to %struct.tree_list*
  %150 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %149, i32 0, i32 2
  %151 = load %union.tree_node*, %union.tree_node** %150, align 8
  %152 = bitcast %union.tree_node* %151 to %struct.tree_common*
  %153 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %152, i32 0, i32 1
  %154 = load %union.tree_node*, %union.tree_node** %153, align 8
  %155 = bitcast %union.tree_node* %154 to %struct.tree_type*
  %156 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %155, i32 0, i32 6
  %157 = load i32, i32* %156, align 4
  %158 = lshr i32 %157, 9
  %159 = and i32 %158, 127
  %160 = load %struct.optab*, %struct.optab** %16, align 8
  %161 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8
  %162 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %163 = call %struct.rtx_def* @expand_unop(i32 %159, %struct.optab* %160, %struct.rtx_def* %161, %struct.rtx_def* %162, i32 0)
  store %struct.rtx_def* %163, %struct.rtx_def** %14, align 8
  %164 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %165 = icmp eq %struct.rtx_def* %164, null
  br i1 %165, label %166, label %167

; <label>:166:                                    ; preds = %147
  call void @end_sequence()
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %221

; <label>:167:                                    ; preds = %147
  %168 = load i32, i32* @flag_errno_math, align 4
  %169 = icmp ne i32 %168, 0
  br i1 %169, label %170, label %216

; <label>:170:                                    ; preds = %167
  %171 = load i32, i32* @x.27
  %172 = load i32, i32* @y.28
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %170
  %179 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %180 = icmp ne i32 %179, 0
  %181 = load i32, i32* @x.27
  %182 = load i32, i32* @y.28
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br i1 %180, label %216, label %189

; <label>:189:                                    ; preds = %originalBBpart213
  %190 = call %struct.rtx_def* @gen_label_rtx()
  store %struct.rtx_def* %190, %struct.rtx_def** %21, align 8
  %191 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %192 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %193 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %194 = bitcast %struct.rtx_def* %193 to i32*
  %195 = load i32, i32* %194, align 8
  %196 = lshr i32 %195, 16
  %197 = and i32 %196, 255
  %198 = load %struct.rtx_def*, %struct.rtx_def** %21, align 8
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %191, %struct.rtx_def* %192, i32 103, %struct.rtx_def* null, i32 %197, i32 0, %struct.rtx_def* %198)
  %199 = load %struct.function*, %struct.function** @cfun, align 8
  %200 = getelementptr inbounds %struct.function, %struct.function* %199, i32 0, i32 2
  %201 = load %struct.expr_status*, %struct.expr_status** %200, align 8
  %202 = getelementptr inbounds %struct.expr_status, %struct.expr_status* %201, i32 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %202, align 4
  %205 = load %union.tree_node*, %union.tree_node** %13, align 8
  %206 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %207 = call %struct.rtx_def* @expand_call(%union.tree_node* %205, %struct.rtx_def* %206, i32 0)
  %208 = load %struct.function*, %struct.function** @cfun, align 8
  %209 = getelementptr inbounds %struct.function, %struct.function* %208, i32 0, i32 2
  %210 = load %struct.expr_status*, %struct.expr_status** %209, align 8
  %211 = getelementptr inbounds %struct.expr_status, %struct.expr_status* %210, i32 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = sub nsw i32 %212, 1
  store i32 %213, i32* %211, align 4
  %214 = load %struct.rtx_def*, %struct.rtx_def** %21, align 8
  %215 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %214)
  br label %216

; <label>:216:                                    ; preds = %189, %originalBBpart213, %167
  %217 = call %struct.rtx_def* @get_insns()
  store %struct.rtx_def* %217, %struct.rtx_def** %18, align 8
  call void @end_sequence()
  %218 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %219 = call %struct.rtx_def* @emit_insns(%struct.rtx_def* %218)
  %220 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  store %struct.rtx_def* %220, %struct.rtx_def** %12, align 8
  br label %221

; <label>:221:                                    ; preds = %216, %166, %originalBBpart24
  %222 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  ret %struct.rtx_def* %222

originalBBalteredBB:                              ; preds = %originalBB, %3
  %223 = alloca %struct.rtx_def*, align 8
  %224 = alloca %union.tree_node*, align 8
  %225 = alloca %struct.rtx_def*, align 8
  %226 = alloca %struct.rtx_def*, align 8
  %227 = alloca %struct.optab*, align 8
  %228 = alloca %struct.rtx_def*, align 8
  %229 = alloca %struct.rtx_def*, align 8
  %230 = alloca %union.tree_node*, align 8
  %231 = alloca %union.tree_node*, align 8
  %232 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %224, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %225, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %226, align 8
  %233 = load %union.tree_node*, %union.tree_node** %224, align 8
  %234 = bitcast %union.tree_node* %233 to %struct.tree_exp*
  %235 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %234, i32 0, i32 2
  %236 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %235, i64 0, i64 0
  %237 = load %union.tree_node*, %union.tree_node** %236, align 8
  %238 = bitcast %union.tree_node* %237 to %struct.tree_exp*
  %239 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %238, i32 0, i32 2
  %240 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %239, i64 0, i64 0
  %241 = load %union.tree_node*, %union.tree_node** %240, align 8
  store %union.tree_node* %241, %union.tree_node** %230, align 8
  %242 = load %union.tree_node*, %union.tree_node** %224, align 8
  %243 = bitcast %union.tree_node* %242 to %struct.tree_exp*
  %244 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %243, i32 0, i32 2
  %245 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %244, i64 0, i64 1
  %246 = load %union.tree_node*, %union.tree_node** %245, align 8
  store %union.tree_node* %246, %union.tree_node** %231, align 8
  %247 = load %union.tree_node*, %union.tree_node** %231, align 8
  %248 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %247, i32 7, i32 5)
  %249 = icmp ne i32 %248, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  %250 = load %union.tree_node*, %union.tree_node** %20, align 8
  %251 = bitcast %union.tree_node* %250 to %struct.tree_list*
  %252 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %251, i32 0, i32 2
  %253 = load %union.tree_node*, %union.tree_node** %252, align 8
  %254 = bitcast %union.tree_node* %253 to %struct.tree_common*
  %255 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %254, i32 0, i32 2
  %256 = load i32, i32* %255, align 8
  %_ = sub i32 0, %256
  %gen = add i32 %_, 255
  %_7 = shl i32 %256, 255
  %257 = and i32 %256, 255
  %258 = icmp ne i32 %257, 34
  br label %originalBB6

originalBB11alteredBB:                            ; preds = %originalBB11, %170
  %259 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %260 = icmp ne i32 %259, 0
  br label %originalBB11
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_apply_args() #0 {
  %1 = alloca %struct.rtx_def*, align 8
  %2 = alloca %struct.rtx_def*, align 8
  %3 = alloca %struct.rtx_def*, align 8
  %4 = load %struct.function*, %struct.function** @cfun, align 8
  %5 = getelementptr inbounds %struct.function, %struct.function* %4, i32 0, i32 2
  %6 = load %struct.expr_status*, %struct.expr_status** %5, align 8
  %7 = getelementptr inbounds %struct.expr_status, %struct.expr_status* %6, i32 0, i32 4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %9 = icmp ne %struct.rtx_def* %8, null
  br i1 %9, label %10, label %16

; <label>:10:                                     ; preds = %0
  %11 = load %struct.function*, %struct.function** @cfun, align 8
  %12 = getelementptr inbounds %struct.function, %struct.function* %11, i32 0, i32 2
  %13 = load %struct.expr_status*, %struct.expr_status** %12, align 8
  %14 = getelementptr inbounds %struct.expr_status, %struct.expr_status* %13, i32 0, i32 4
  %15 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  store %struct.rtx_def* %15, %struct.rtx_def** %1, align 8
  br label %32

; <label>:16:                                     ; preds = %0
  call void @start_sequence()
  %17 = call %struct.rtx_def* @expand_builtin_apply_args_1()
  store %struct.rtx_def* %17, %struct.rtx_def** %2, align 8
  %18 = call %struct.rtx_def* @get_insns()
  store %struct.rtx_def* %18, %struct.rtx_def** %3, align 8
  call void @end_sequence()
  %19 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %20 = load %struct.function*, %struct.function** @cfun, align 8
  %21 = getelementptr inbounds %struct.function, %struct.function* %20, i32 0, i32 2
  %22 = load %struct.expr_status*, %struct.expr_status** %21, align 8
  %23 = getelementptr inbounds %struct.expr_status, %struct.expr_status* %22, i32 0, i32 4
  store %struct.rtx_def* %19, %struct.rtx_def** %23, align 8
  call void @push_topmost_sequence()
  %24 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  %25 = call %struct.rtx_def* @get_insns()
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %26, i64 0, i64 2
  %28 = bitcast %union.rtunion_def* %27 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8
  %30 = call %struct.rtx_def* @emit_insns_before(%struct.rtx_def* %24, %struct.rtx_def* %29)
  call void @pop_topmost_sequence()
  %31 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  store %struct.rtx_def* %31, %struct.rtx_def** %1, align 8
  br label %32

; <label>:32:                                     ; preds = %16, %10
  %33 = load %struct.rtx_def*, %struct.rtx_def** %1, align 8
  ret %struct.rtx_def* %33
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @validate_arglist(%union.tree_node*, ...) #0 {
  %2 = load i32, i32* @x.31
  %3 = load i32, i32* @y.32
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %union.tree_node*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [1 x %struct.__va_list_tag], align 16
  store %union.tree_node* %0, %union.tree_node** %10, align 8
  store i32 0, i32* %12, align 4
  %14 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %13, i32 0, i32 0
  %15 = bitcast %struct.__va_list_tag* %14 to i8*
  call void @llvm.va_start(i8* %15)
  %16 = load i32, i32* @x.31
  %17 = load i32, i32* @y.32
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %24

; <label>:24:                                     ; preds = %121, %originalBBpart2
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %13, i32 0, i32 0
  %26 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 16
  %28 = icmp ule i32 %27, 40
  br i1 %28, label %29, label %35

; <label>:29:                                     ; preds = %24
  %30 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %25, i32 0, i32 3
  %31 = load i8*, i8** %30, align 16
  %32 = getelementptr i8, i8* %31, i32 %27
  %33 = bitcast i8* %32 to i32*
  %34 = add i32 %27, 8
  store i32 %34, i32* %26, align 16
  br label %56

; <label>:35:                                     ; preds = %24
  %36 = load i32, i32* @x.31
  %37 = load i32, i32* @y.32
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %35
  %44 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %25, i32 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to i32*
  %47 = getelementptr i8, i8* %45, i32 8
  store i8* %47, i8** %44, align 8
  %48 = load i32, i32* @x.31
  %49 = load i32, i32* @y.32
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %56

; <label>:56:                                     ; preds = %originalBBpart24, %29
  %57 = phi i32* [ %33, %29 ], [ %46, %originalBBpart24 ]
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %11, align 4
  %59 = load i32, i32* %11, align 4
  switch i32 %59, label %81 [
    i32 0, label %60
    i32 5, label %61
  ]

; <label>:60:                                     ; preds = %56
  store i32 1, i32* %12, align 4
  br label %139

; <label>:61:                                     ; preds = %56
  %62 = load i32, i32* @x.31
  %63 = load i32, i32* @y.32
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %61
  %70 = load %union.tree_node*, %union.tree_node** %10, align 8
  %71 = icmp eq %union.tree_node* %70, null
  %72 = zext i1 %71 to i32
  store i32 %72, i32* %12, align 4
  %73 = load i32, i32* @x.31
  %74 = load i32, i32* @y.32
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %139

; <label>:81:                                     ; preds = %56
  %82 = load %union.tree_node*, %union.tree_node** %10, align 8
  %83 = icmp eq %union.tree_node* %82, null
  br i1 %83, label %98, label %84

; <label>:84:                                     ; preds = %81
  %85 = load i32, i32* %11, align 4
  %86 = load %union.tree_node*, %union.tree_node** %10, align 8
  %87 = bitcast %union.tree_node* %86 to %struct.tree_list*
  %88 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %87, i32 0, i32 2
  %89 = load %union.tree_node*, %union.tree_node** %88, align 8
  %90 = bitcast %union.tree_node* %89 to %struct.tree_common*
  %91 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %90, i32 0, i32 1
  %92 = load %union.tree_node*, %union.tree_node** %91, align 8
  %93 = bitcast %union.tree_node* %92 to %struct.tree_common*
  %94 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %93, i32 0, i32 2
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 255
  %97 = icmp ne i32 %85, %96
  br i1 %97, label %98, label %99

; <label>:98:                                     ; preds = %84, %81
  br label %139

; <label>:99:                                     ; preds = %84
  br label %100

; <label>:100:                                    ; preds = %99
  %101 = load i32, i32* @x.31
  %102 = load i32, i32* @y.32
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %100
  %109 = load %union.tree_node*, %union.tree_node** %10, align 8
  %110 = bitcast %union.tree_node* %109 to %struct.tree_common*
  %111 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %110, i32 0, i32 0
  %112 = load %union.tree_node*, %union.tree_node** %111, align 8
  store %union.tree_node* %112, %union.tree_node** %10, align 8
  %113 = load i32, i32* @x.31
  %114 = load i32, i32* @y.32
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %121

; <label>:121:                                    ; preds = %originalBBpart212
  br i1 true, label %24, label %122

; <label>:122:                                    ; preds = %121
  %123 = load i32, i32* @x.31
  %124 = load i32, i32* @y.32
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %122
  %131 = load i32, i32* @x.31
  %132 = load i32, i32* @y.32
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %139

; <label>:139:                                    ; preds = %originalBBpart216, %98, %originalBBpart28, %60
  %140 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %13, i32 0, i32 0
  %141 = bitcast %struct.__va_list_tag* %140 to i8*
  call void @llvm.va_end(i8* %141)
  %142 = load i32, i32* %12, align 4
  ret i32 %142

originalBBalteredBB:                              ; preds = %originalBB, %1
  %143 = alloca %union.tree_node*, align 8
  %144 = alloca i32, align 4
  %145 = alloca i32, align 4
  %146 = alloca [1 x %struct.__va_list_tag], align 16
  store %union.tree_node* %0, %union.tree_node** %143, align 8
  store i32 0, i32* %145, align 4
  %147 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %146, i32 0, i32 0
  %148 = bitcast %struct.__va_list_tag* %147 to i8*
  call void @llvm.va_start(i8* %148)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %149 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %25, i32 0, i32 2
  %150 = load i8*, i8** %149, align 8
  %151 = bitcast i8* %150 to i32*
  %152 = getelementptr i8, i8* %150, i32 8
  store i8* %152, i8** %149, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %61
  %153 = load %union.tree_node*, %union.tree_node** %10, align 8
  %154 = icmp eq %union.tree_node* %153, null
  %155 = zext i1 %154 to i32
  store i32 %155, i32* %12, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %100
  %156 = load %union.tree_node*, %union.tree_node** %10, align 8
  %157 = bitcast %union.tree_node* %156 to %struct.tree_common*
  %158 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %157, i32 0, i32 0
  %159 = load %union.tree_node*, %union.tree_node** %158, align 8
  store %union.tree_node* %159, %union.tree_node** %10, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %122
  br label %originalBB14
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_apply(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.rtx_def*, align 8
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %struct.rtx_def*, align 8
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca %struct.rtx_def*, align 8
  %16 = alloca %struct.rtx_def*, align 8
  %17 = alloca %struct.rtx_def*, align 8
  %18 = alloca %struct.rtx_def*, align 8
  %19 = alloca %struct.rtx_def*, align 8
  %20 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %4, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %5, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %6, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %17, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %18, align 8
  %21 = call i32 @apply_result_size()
  %22 = sext i32 %21 to i64
  %23 = call %struct.rtx_def* @assign_stack_local(i32 51, i64 %22, i32 -1)
  store %struct.rtx_def* %23, %struct.rtx_def** %12, align 8
  %24 = load i32, i32* @target_flags, align 4
  %25 = and i32 %24, 33554432
  %26 = icmp ne i32 %25, 0
  %27 = select i1 %26, i32 5, i32 4
  %28 = call %struct.rtx_def* @gen_reg_rtx(i32 %27)
  store %struct.rtx_def* %28, %struct.rtx_def** %11, align 8
  %29 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %30 = load i32, i32* @target_flags, align 4
  %31 = and i32 %30, 33554432
  %32 = icmp ne i32 %31, 0
  %33 = select i1 %32, i32 5, i32 4
  %34 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %35 = call %struct.rtx_def* @gen_rtx_MEM(i32 %33, %struct.rtx_def* %34)
  %36 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %29, %struct.rtx_def* %35)
  call void @emit_queue()
  call void @do_pending_stack_adjust()
  %37 = load %struct.function*, %struct.function** @cfun, align 8
  %38 = getelementptr inbounds %struct.function, %struct.function* %37, i32 0, i32 2
  %39 = load %struct.expr_status*, %struct.expr_status** %38, align 8
  %40 = getelementptr inbounds %struct.expr_status, %struct.expr_status* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %40, align 4
  call void @emit_stack_save(i32 0, %struct.rtx_def** %17, %struct.rtx_def* null)
  %43 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %44 = call %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def* %43, %struct.rtx_def* null, i32 8)
  store %struct.rtx_def* %44, %struct.rtx_def** %14, align 8
  %45 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %46 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %45)
  store %struct.rtx_def* %46, %struct.rtx_def** %14, align 8
  %47 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %48 = load i32, i32* @target_flags, align 4
  %49 = and i32 %48, 33554432
  %50 = icmp ne i32 %49, 0
  %51 = select i1 %50, i32 64, i32 32
  call void @set_mem_align(%struct.rtx_def* %47, i32 %51)
  %52 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %53 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %52)
  store %struct.rtx_def* %53, %struct.rtx_def** %15, align 8
  %54 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %55 = load i32, i32* @target_flags, align 4
  %56 = and i32 %55, 33554432
  %57 = icmp ne i32 %56, 0
  %58 = select i1 %57, i32 64, i32 32
  call void @set_mem_align(%struct.rtx_def* %54, i32 %58)
  %59 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %61 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %62 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %59, %struct.rtx_def* %60, %struct.rtx_def* %61)
  %63 = call i32 @apply_args_size()
  %64 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %65 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %64)
  store %struct.rtx_def* %65, %struct.rtx_def** %5, align 8
  %66 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %67 = load i32, i32* @target_flags, align 4
  %68 = and i32 %67, 33554432
  %69 = icmp ne i32 %68, 0
  %70 = select i1 %69, i32 64, i32 32
  call void @set_mem_align(%struct.rtx_def* %66, i32 %70)
  %71 = load i32, i32* @target_flags, align 4
  %72 = and i32 %71, 33554432
  %73 = icmp ne i32 %72, 0
  %74 = select i1 %73, i32 5, i32 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  store i32 %78, i32* %7, align 4
  %79 = load %struct.rtx_def*, %struct.rtx_def** @struct_value_rtx, align 8
  %80 = icmp ne %struct.rtx_def* %79, null
  br i1 %80, label %81, label %92

; <label>:81:                                     ; preds = %3
  %82 = load i32, i32* @target_flags, align 4
  %83 = and i32 %82, 33554432
  %84 = icmp ne i32 %83, 0
  %85 = select i1 %84, i32 5, i32 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = load i32, i32* %7, align 4
  %91 = add nsw i32 %90, %89
  store i32 %91, i32* %7, align 4
  br label %92

; <label>:92:                                     ; preds = %81, %3
  %93 = load i32, i32* @x.33
  %94 = load i32, i32* @y.34
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %92
  store i32 0, i32* %9, align 4
  %101 = load i32, i32* @x.33
  %102 = load i32, i32* @y.34
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %109

; <label>:109:                                    ; preds = %171, %originalBBpart2
  %110 = load i32, i32* @x.33
  %111 = load i32, i32* @y.34
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %109
  %118 = load i32, i32* %9, align 4
  %119 = icmp slt i32 %118, 53
  %120 = load i32, i32* @x.33
  %121 = load i32, i32* @y.34
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %119, label %128, label %174

; <label>:128:                                    ; preds = %originalBBpart24
  %129 = load i32, i32* %9, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [53 x i32], [53 x i32]* @apply_args_mode, i64 0, i64 %130
  %132 = load i32, i32* %131, align 4
  store i32 %132, i32* %10, align 4
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %134, label %170

; <label>:134:                                    ; preds = %128
  %135 = load i32, i32* %10, align 4
  %136 = call i32 @get_mode_alignment(i32 %135)
  %137 = udiv i32 %136, 8
  store i32 %137, i32* %8, align 4
  %138 = load i32, i32* %7, align 4
  %139 = load i32, i32* %8, align 4
  %140 = srem i32 %138, %139
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %142, label %151

; <label>:142:                                    ; preds = %134
  %143 = load i32, i32* %7, align 4
  %144 = load i32, i32* %8, align 4
  %145 = add nsw i32 %143, %144
  %146 = sub nsw i32 %145, 1
  %147 = load i32, i32* %8, align 4
  %148 = sdiv i32 %146, %147
  %149 = load i32, i32* %8, align 4
  %150 = mul nsw i32 %148, %149
  store i32 %150, i32* %7, align 4
  br label %151

; <label>:151:                                    ; preds = %142, %134
  %152 = load i32, i32* %10, align 4
  %153 = load i32, i32* %9, align 4
  %154 = call %struct.rtx_def* @gen_rtx_REG(i32 %152, i32 %153)
  store %struct.rtx_def* %154, %struct.rtx_def** %13, align 8
  %155 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %156 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %157 = load i32, i32* %10, align 4
  %158 = load i32, i32* %7, align 4
  %159 = sext i32 %158 to i64
  %160 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %156, i32 %157, i64 %159, i32 1, i32 1)
  %161 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %155, %struct.rtx_def* %160)
  %162 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  call void @use_reg(%struct.rtx_def** %18, %struct.rtx_def* %162)
  %163 = load i32, i32* %10, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  %168 = load i32, i32* %7, align 4
  %169 = add nsw i32 %168, %167
  store i32 %169, i32* %7, align 4
  br label %170

; <label>:170:                                    ; preds = %151, %128
  br label %171

; <label>:171:                                    ; preds = %170
  %172 = load i32, i32* %9, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %9, align 4
  br label %109

; <label>:174:                                    ; preds = %originalBBpart24
  %175 = load i32, i32* @target_flags, align 4
  %176 = and i32 %175, 33554432
  %177 = icmp ne i32 %176, 0
  %178 = select i1 %177, i32 5, i32 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %179
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  store i32 %182, i32* %7, align 4
  %183 = load %struct.rtx_def*, %struct.rtx_def** @struct_value_rtx, align 8
  %184 = icmp ne %struct.rtx_def* %183, null
  br i1 %184, label %185, label %254

; <label>:185:                                    ; preds = %174
  %186 = load i32, i32* @x.33
  %187 = load i32, i32* @y.34
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %185
  %194 = load i32, i32* @target_flags, align 4
  %195 = and i32 %194, 33554432
  %196 = icmp ne i32 %195, 0
  %197 = select i1 %196, i32 5, i32 4
  %198 = call %struct.rtx_def* @gen_reg_rtx(i32 %197)
  store %struct.rtx_def* %198, %struct.rtx_def** %19, align 8
  %199 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %200 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %201 = load i32, i32* @target_flags, align 4
  %202 = and i32 %201, 33554432
  %203 = icmp ne i32 %202, 0
  %204 = select i1 %203, i32 5, i32 4
  %205 = load i32, i32* %7, align 4
  %206 = sext i32 %205 to i64
  %207 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %200, i32 %204, i64 %206, i32 1, i32 1)
  %208 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %199, %struct.rtx_def* %207)
  %209 = load %struct.rtx_def*, %struct.rtx_def** @struct_value_rtx, align 8
  %210 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %211 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %209, %struct.rtx_def* %210)
  %212 = load %struct.rtx_def*, %struct.rtx_def** @struct_value_rtx, align 8
  %213 = bitcast %struct.rtx_def* %212 to i32*
  %214 = load i32, i32* %213, align 8
  %215 = and i32 %214, 65535
  %216 = icmp eq i32 %215, 61
  %217 = load i32, i32* @x.33
  %218 = load i32, i32* @y.34
  %219 = sub i32 %217, 1
  %220 = mul i32 %217, %219
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %222, %223
  br i1 %224, label %originalBBpart235, label %originalBB6alteredBB

originalBBpart235:                                ; preds = %originalBB6
  br i1 %216, label %225, label %227

; <label>:225:                                    ; preds = %originalBBpart235
  %226 = load %struct.rtx_def*, %struct.rtx_def** @struct_value_rtx, align 8
  call void @use_reg(%struct.rtx_def** %18, %struct.rtx_def* %226)
  br label %227

; <label>:227:                                    ; preds = %225, %originalBBpart235
  %228 = load i32, i32* @x.33
  %229 = load i32, i32* @y.34
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %227
  %236 = load i32, i32* @target_flags, align 4
  %237 = and i32 %236, 33554432
  %238 = icmp ne i32 %237, 0
  %239 = select i1 %238, i32 5, i32 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i32
  %244 = load i32, i32* %7, align 4
  %245 = add nsw i32 %244, %243
  store i32 %245, i32* %7, align 4
  %246 = load i32, i32* @x.33
  %247 = load i32, i32* @y.34
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBBpart258, label %originalBB37alteredBB

originalBBpart258:                                ; preds = %originalBB37
  br label %254

; <label>:254:                                    ; preds = %originalBBpart258, %174
  %255 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %256 = call %struct.rtx_def* @prepare_call_address(%struct.rtx_def* %255, %union.tree_node* null, %struct.rtx_def** %18, i32 0, i32 0)
  store %struct.rtx_def* %256, %struct.rtx_def** %4, align 8
  %257 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %258 = bitcast %struct.rtx_def* %257 to i32*
  %259 = load i32, i32* %258, align 8
  %260 = and i32 %259, 65535
  %261 = icmp ne i32 %260, 68
  br i1 %261, label %262, label %265

; <label>:262:                                    ; preds = %254
  %263 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %264 = call %struct.rtx_def* @memory_address(i32 2, %struct.rtx_def* %263)
  store %struct.rtx_def* %264, %struct.rtx_def** %4, align 8
  br label %265

; <label>:265:                                    ; preds = %262, %254
  %266 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %267 = call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %266)
  %268 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %269 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %270 = call %struct.rtx_def* @result_vector(i32 1, %struct.rtx_def* %269)
  %271 = call %struct.rtx_def* @gen_untyped_call(%struct.rtx_def* %267, %struct.rtx_def* %268, %struct.rtx_def* %270)
  %272 = call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %271)
  %273 = call %struct.rtx_def* @get_last_insn()
  store %struct.rtx_def* %273, %struct.rtx_def** %16, align 8
  br label %274

; <label>:274:                                    ; preds = %302, %265
  %275 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %276 = icmp ne %struct.rtx_def* %275, null
  br i1 %276, label %277, label %283

; <label>:277:                                    ; preds = %274
  %278 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %279 = bitcast %struct.rtx_def* %278 to i32*
  %280 = load i32, i32* %279, align 8
  %281 = and i32 %280, 65535
  %282 = icmp ne i32 %281, 34
  br label %283

; <label>:283:                                    ; preds = %277, %274
  %284 = phi i1 [ false, %274 ], [ %282, %277 ]
  br i1 %284, label %285, label %308

; <label>:285:                                    ; preds = %283
  %286 = load i32, i32* @x.33
  %287 = load i32, i32* @y.34
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %originalBB60alteredBB, %285
  %294 = load i32, i32* @x.33
  %295 = load i32, i32* @y.34
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br label %302

; <label>:302:                                    ; preds = %originalBBpart262
  %303 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %304 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %303, i32 0, i32 1
  %305 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %304, i64 0, i64 1
  %306 = bitcast %union.rtunion_def* %305 to %struct.rtx_def**
  %307 = load %struct.rtx_def*, %struct.rtx_def** %306, align 8
  store %struct.rtx_def* %307, %struct.rtx_def** %16, align 8
  br label %274

; <label>:308:                                    ; preds = %283
  %309 = load i32, i32* @x.33
  %310 = load i32, i32* @y.34
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %originalBB64alteredBB, %308
  %317 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %318 = icmp ne %struct.rtx_def* %317, null
  %319 = load i32, i32* @x.33
  %320 = load i32, i32* @y.34
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br i1 %318, label %328, label %327

; <label>:327:                                    ; preds = %originalBBpart266
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 1306, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.expand_builtin_apply, i32 0, i32 0)) #6
  unreachable

; <label>:328:                                    ; preds = %originalBBpart266
  %329 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %330 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %329, i32 0, i32 1
  %331 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %330, i64 0, i64 7
  %332 = bitcast %union.rtunion_def* %331 to %struct.rtx_def**
  %333 = load %struct.rtx_def*, %struct.rtx_def** %332, align 8
  %334 = icmp ne %struct.rtx_def* %333, null
  br i1 %334, label %335, label %425

; <label>:335:                                    ; preds = %328
  %336 = load i32, i32* @x.33
  %337 = load i32, i32* @y.34
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %originalBB68alteredBB, %335
  %344 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %345 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1
  %346 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %345, i64 0, i64 7
  %347 = bitcast %union.rtunion_def* %346 to %struct.rtx_def**
  %348 = load %struct.rtx_def*, %struct.rtx_def** %347, align 8
  store %struct.rtx_def* %348, %struct.rtx_def** %20, align 8
  %349 = load i32, i32* @x.33
  %350 = load i32, i32* @y.34
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  br label %357

; <label>:357:                                    ; preds = %originalBBpart278, %originalBBpart270
  %358 = load i32, i32* @x.33
  %359 = load i32, i32* @y.34
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %originalBB72alteredBB, %357
  %366 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %367 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %366, i32 0, i32 1
  %368 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %367, i64 0, i64 1
  %369 = bitcast %union.rtunion_def* %368 to %struct.rtx_def**
  %370 = load %struct.rtx_def*, %struct.rtx_def** %369, align 8
  %371 = icmp ne %struct.rtx_def* %370, null
  %372 = load i32, i32* @x.33
  %373 = load i32, i32* @y.34
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br i1 %371, label %380, label %403

; <label>:380:                                    ; preds = %originalBBpart274
  br label %381

; <label>:381:                                    ; preds = %380
  %382 = load i32, i32* @x.33
  %383 = load i32, i32* @y.34
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %originalBB76alteredBB, %381
  %390 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %391 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %390, i32 0, i32 1
  %392 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %391, i64 0, i64 1
  %393 = bitcast %union.rtunion_def* %392 to %struct.rtx_def**
  %394 = load %struct.rtx_def*, %struct.rtx_def** %393, align 8
  store %struct.rtx_def* %394, %struct.rtx_def** %20, align 8
  %395 = load i32, i32* @x.33
  %396 = load i32, i32* @y.34
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br label %357

; <label>:403:                                    ; preds = %originalBBpart274
  %404 = load i32, i32* @x.33
  %405 = load i32, i32* @y.34
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %originalBB80alteredBB, %403
  %412 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %413 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %414 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %413, i32 0, i32 1
  %415 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %414, i64 0, i64 1
  %416 = bitcast %union.rtunion_def* %415 to %struct.rtx_def**
  store %struct.rtx_def* %412, %struct.rtx_def** %416, align 8
  %417 = load i32, i32* @x.33
  %418 = load i32, i32* @y.34
  %419 = sub i32 %417, 1
  %420 = mul i32 %417, %419
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %422, %423
  br i1 %424, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br label %431

; <label>:425:                                    ; preds = %328
  %426 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %427 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %428 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %427, i32 0, i32 1
  %429 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %428, i64 0, i64 7
  %430 = bitcast %union.rtunion_def* %429 to %struct.rtx_def**
  store %struct.rtx_def* %426, %struct.rtx_def** %430, align 8
  br label %431

; <label>:431:                                    ; preds = %425, %originalBBpart282
  %432 = load i32, i32* @x.33
  %433 = load i32, i32* @y.34
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %originalBB84alteredBB, %431
  %440 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8
  call void @emit_stack_restore(i32 0, %struct.rtx_def* %440, %struct.rtx_def* null)
  %441 = load %struct.function*, %struct.function** @cfun, align 8
  %442 = getelementptr inbounds %struct.function, %struct.function* %441, i32 0, i32 2
  %443 = load %struct.expr_status*, %struct.expr_status** %442, align 8
  %444 = getelementptr inbounds %struct.expr_status, %struct.expr_status* %443, i32 0, i32 1
  %445 = load i32, i32* %444, align 4
  %446 = sub nsw i32 %445, 1
  store i32 %446, i32* %444, align 4
  %447 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %448 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %447, i32 0, i32 1
  %449 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %448, i64 0, i64 0
  %450 = bitcast %union.rtunion_def* %449 to %struct.rtx_def**
  %451 = load %struct.rtx_def*, %struct.rtx_def** %450, align 8
  %452 = call %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def* %451)
  %453 = load i32, i32* @x.33
  %454 = load i32, i32* @y.34
  %455 = sub i32 %453, 1
  %456 = mul i32 %453, %455
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %458, %459
  br i1 %460, label %originalBBpart292, label %originalBB84alteredBB

originalBBpart292:                                ; preds = %originalBB84
  ret %struct.rtx_def* %452

originalBBalteredBB:                              ; preds = %originalBB, %92
  store i32 0, i32* %9, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %109
  %461 = load i32, i32* %9, align 4
  %462 = icmp slt i32 %461, 53
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %185
  %463 = load i32, i32* @target_flags, align 4
  %_ = sub i32 0, %463
  %gen = add i32 %_, 33554432
  %_7 = shl i32 %463, 33554432
  %_8 = shl i32 %463, 33554432
  %_9 = sub i32 0, %463
  %gen10 = add i32 %_9, 33554432
  %_11 = sub i32 0, %463
  %gen12 = add i32 %_11, 33554432
  %_13 = sub i32 %463, 33554432
  %gen14 = mul i32 %_13, 33554432
  %_15 = shl i32 %463, 33554432
  %_16 = sub i32 %463, 33554432
  %gen17 = mul i32 %_16, 33554432
  %464 = and i32 %463, 33554432
  %465 = icmp ne i32 %464, 0
  %466 = select i1 %465, i32 5, i32 4
  %467 = call %struct.rtx_def* @gen_reg_rtx(i32 %466)
  store %struct.rtx_def* %467, %struct.rtx_def** %19, align 8
  %468 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %469 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %470 = load i32, i32* @target_flags, align 4
  %_18 = sub i32 %470, 33554432
  %gen19 = mul i32 %_18, 33554432
  %_20 = sub i32 0, %470
  %gen21 = add i32 %_20, 33554432
  %_22 = sub i32 0, %470
  %gen23 = add i32 %_22, 33554432
  %_24 = sub i32 %470, 33554432
  %gen25 = mul i32 %_24, 33554432
  %471 = and i32 %470, 33554432
  %472 = icmp ne i32 %471, 0
  %473 = select i1 %472, i32 5, i32 4
  %474 = load i32, i32* %7, align 4
  %475 = sext i32 %474 to i64
  %476 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %469, i32 %473, i64 %475, i32 1, i32 1)
  %477 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %468, %struct.rtx_def* %476)
  %478 = load %struct.rtx_def*, %struct.rtx_def** @struct_value_rtx, align 8
  %479 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %480 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %478, %struct.rtx_def* %479)
  %481 = load %struct.rtx_def*, %struct.rtx_def** @struct_value_rtx, align 8
  %482 = bitcast %struct.rtx_def* %481 to i32*
  %483 = load i32, i32* %482, align 8
  %_26 = sub i32 0, %483
  %gen27 = add i32 %_26, 65535
  %_28 = sub i32 %483, 65535
  %gen29 = mul i32 %_28, 65535
  %_30 = sub i32 0, %483
  %gen31 = add i32 %_30, 65535
  %_32 = sub i32 %483, 65535
  %gen33 = mul i32 %_32, 65535
  %484 = and i32 %483, 65535
  %485 = icmp eq i32 %484, 61
  br label %originalBB6

originalBB37alteredBB:                            ; preds = %originalBB37, %227
  %486 = load i32, i32* @target_flags, align 4
  %_38 = shl i32 %486, 33554432
  %_39 = sub i32 %486, 33554432
  %gen40 = mul i32 %_39, 33554432
  %_41 = sub i32 %486, 33554432
  %gen42 = mul i32 %_41, 33554432
  %_43 = sub i32 0, %486
  %gen44 = add i32 %_43, 33554432
  %_45 = sub i32 0, %486
  %gen46 = add i32 %_45, 33554432
  %_47 = sub i32 0, %486
  %gen48 = add i32 %_47, 33554432
  %_49 = sub i32 0, %486
  %gen50 = add i32 %_49, 33554432
  %487 = and i32 %486, 33554432
  %488 = icmp ne i32 %487, 0
  %489 = select i1 %488, i32 5, i32 4
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %490
  %492 = load i8, i8* %491, align 1
  %493 = zext i8 %492 to i32
  %494 = load i32, i32* %7, align 4
  %_51 = shl i32 %494, %493
  %_52 = sub i32 %494, %493
  %gen53 = mul i32 %_52, %493
  %_54 = sub i32 %494, %493
  %gen55 = mul i32 %_54, %493
  %_56 = shl i32 %494, %493
  %495 = add nsw i32 %494, %493
  store i32 %495, i32* %7, align 4
  br label %originalBB37

originalBB60alteredBB:                            ; preds = %originalBB60, %285
  br label %originalBB60

originalBB64alteredBB:                            ; preds = %originalBB64, %308
  %496 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %497 = icmp ne %struct.rtx_def* %496, null
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %335
  %498 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %499 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %498, i32 0, i32 1
  %500 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %499, i64 0, i64 7
  %501 = bitcast %union.rtunion_def* %500 to %struct.rtx_def**
  %502 = load %struct.rtx_def*, %struct.rtx_def** %501, align 8
  store %struct.rtx_def* %502, %struct.rtx_def** %20, align 8
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %357
  %503 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %504 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %503, i32 0, i32 1
  %505 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %504, i64 0, i64 1
  %506 = bitcast %union.rtunion_def* %505 to %struct.rtx_def**
  %507 = load %struct.rtx_def*, %struct.rtx_def** %506, align 8
  %508 = icmp ne %struct.rtx_def* %507, null
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %381
  %509 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %510 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %509, i32 0, i32 1
  %511 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %510, i64 0, i64 1
  %512 = bitcast %union.rtunion_def* %511 to %struct.rtx_def**
  %513 = load %struct.rtx_def*, %struct.rtx_def** %512, align 8
  store %struct.rtx_def* %513, %struct.rtx_def** %20, align 8
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %403
  %514 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %515 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8
  %516 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %515, i32 0, i32 1
  %517 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %516, i64 0, i64 1
  %518 = bitcast %union.rtunion_def* %517 to %struct.rtx_def**
  store %struct.rtx_def* %514, %struct.rtx_def** %518, align 8
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %431
  %519 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8
  call void @emit_stack_restore(i32 0, %struct.rtx_def* %519, %struct.rtx_def* null)
  %520 = load %struct.function*, %struct.function** @cfun, align 8
  %521 = getelementptr inbounds %struct.function, %struct.function* %520, i32 0, i32 2
  %522 = load %struct.expr_status*, %struct.expr_status** %521, align 8
  %523 = getelementptr inbounds %struct.expr_status, %struct.expr_status* %522, i32 0, i32 1
  %524 = load i32, i32* %523, align 4
  %_85 = sub i32 0, %524
  %gen86 = add i32 %_85, 1
  %_87 = shl i32 %524, 1
  %_88 = sub i32 0, %524
  %gen89 = add i32 %_88, 1
  %_90 = shl i32 %524, 1
  %525 = sub nsw i32 %524, 1
  store i32 %525, i32* %523, align 4
  %526 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %527 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %526, i32 0, i32 1
  %528 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %527, i64 0, i64 0
  %529 = bitcast %union.rtunion_def* %528 to %struct.rtx_def**
  %530 = load %struct.rtx_def*, %struct.rtx_def** %529, align 8
  %531 = call %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def* %530)
  br label %originalBB84
}

; Function Attrs: noinline nounwind uwtable
define internal void @expand_builtin_return(%struct.rtx_def*) #0 {
  %2 = alloca %struct.rtx_def*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %2, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %8, align 8
  %9 = call i32 @apply_result_size()
  %10 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %11 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %10)
  store %struct.rtx_def* %11, %struct.rtx_def** %2, align 8
  store i32 0, i32* %3, align 4
  store i32 0, i32* %5, align 4
  br label %12

; <label>:12:                                     ; preds = %94, %1
  %13 = load i32, i32* %5, align 4
  %14 = icmp slt i32 %13, 53
  br i1 %14, label %15, label %97

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* @x.35
  %17 = load i32, i32* @y.36
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %15
  %24 = load i32, i32* %5, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [53 x i32], [53 x i32]* @apply_result_mode, i64 0, i64 %25
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %6, align 4
  %28 = icmp ne i32 %27, 0
  %29 = load i32, i32* @x.35
  %30 = load i32, i32* @y.36
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %37, label %93

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load i32, i32* @x.35
  %39 = load i32, i32* @y.36
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %37
  %46 = load i32, i32* %6, align 4
  %47 = call i32 @get_mode_alignment(i32 %46)
  %48 = udiv i32 %47, 8
  store i32 %48, i32* %4, align 4
  %49 = load i32, i32* %3, align 4
  %50 = load i32, i32* %4, align 4
  %51 = srem i32 %49, %50
  %52 = icmp ne i32 %51, 0
  %53 = load i32, i32* @x.35
  %54 = load i32, i32* @y.36
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  br i1 %52, label %61, label %70

; <label>:61:                                     ; preds = %originalBBpart29
  %62 = load i32, i32* %3, align 4
  %63 = load i32, i32* %4, align 4
  %64 = add nsw i32 %62, %63
  %65 = sub nsw i32 %64, 1
  %66 = load i32, i32* %4, align 4
  %67 = sdiv i32 %65, %66
  %68 = load i32, i32* %4, align 4
  %69 = mul nsw i32 %67, %68
  store i32 %69, i32* %3, align 4
  br label %70

; <label>:70:                                     ; preds = %61, %originalBBpart29
  %71 = load i32, i32* %6, align 4
  %72 = load i32, i32* %5, align 4
  %73 = call %struct.rtx_def* @gen_rtx_REG(i32 %71, i32 %72)
  store %struct.rtx_def* %73, %struct.rtx_def** %7, align 8
  %74 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %75 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %76 = load i32, i32* %6, align 4
  %77 = load i32, i32* %3, align 4
  %78 = sext i32 %77 to i64
  %79 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %75, i32 %76, i64 %78, i32 1, i32 1)
  %80 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %74, %struct.rtx_def* %79)
  %81 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  call void @push_to_sequence(%struct.rtx_def* %81)
  %82 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %83 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %82)
  %84 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %83)
  %85 = call %struct.rtx_def* @get_insns()
  store %struct.rtx_def* %85, %struct.rtx_def** %8, align 8
  call void @end_sequence()
  %86 = load i32, i32* %6, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = load i32, i32* %3, align 4
  %92 = add nsw i32 %91, %90
  store i32 %92, i32* %3, align 4
  br label %93

; <label>:93:                                     ; preds = %70, %originalBBpart2
  br label %94

; <label>:94:                                     ; preds = %93
  %95 = load i32, i32* %5, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %5, align 4
  br label %12

; <label>:97:                                     ; preds = %12
  %98 = load i32, i32* @x.35
  %99 = load i32, i32* @y.36
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %97
  %106 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %107 = call %struct.rtx_def* @emit_insns(%struct.rtx_def* %106)
  call void @expand_null_return()
  %108 = load i32, i32* @x.35
  %109 = load i32, i32* @y.36
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %15
  %116 = load i32, i32* %5, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [53 x i32], [53 x i32]* @apply_result_mode, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  store i32 %119, i32* %6, align 4
  %120 = icmp ne i32 %119, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %121 = load i32, i32* %6, align 4
  %122 = call i32 @get_mode_alignment(i32 %121)
  %_ = sub i32 0, %122
  %gen = add i32 %_, 8
  %_2 = sub i32 %122, 8
  %gen3 = mul i32 %_2, 8
  %_4 = sub i32 0, %122
  %gen5 = add i32 %_4, 8
  %123 = udiv i32 %122, 8
  store i32 %123, i32* %4, align 4
  %124 = load i32, i32* %3, align 4
  %125 = load i32, i32* %4, align 4
  %_6 = sub i32 %124, %125
  %gen7 = mul i32 %_6, %125
  %126 = srem i32 %124, %125
  %127 = icmp ne i32 %126, 0
  br label %originalBB1

originalBB11alteredBB:                            ; preds = %originalBB11, %97
  %128 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %129 = call %struct.rtx_def* @emit_insns(%struct.rtx_def* %128)
  call void @expand_null_return()
  br label %originalBB11
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_args_info(%union.tree_node*) #0 {
  %2 = load i32, i32* @x.37
  %3 = load i32, i32* @y.38
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %struct.rtx_def*, align 8
  %11 = alloca %union.tree_node*, align 8
  %12 = alloca %union.tree_node*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32*, align 8
  %15 = alloca i64, align 8
  store %union.tree_node* %0, %union.tree_node** %11, align 8
  %16 = load %union.tree_node*, %union.tree_node** %11, align 8
  %17 = bitcast %union.tree_node* %16 to %struct.tree_exp*
  %18 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %17, i32 0, i32 2
  %19 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %18, i64 0, i64 1
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8
  store %union.tree_node* %20, %union.tree_node** %12, align 8
  store i32 7, i32* %13, align 4
  %21 = load %struct.function*, %struct.function** @cfun, align 8
  %22 = getelementptr inbounds %struct.function, %struct.function* %21, i32 0, i32 13
  %23 = bitcast %struct.ix86_args* %22 to i32*
  store i32* %23, i32** %14, align 8
  %24 = load %union.tree_node*, %union.tree_node** %12, align 8
  %25 = icmp ne %union.tree_node* %24, null
  %26 = load i32, i32* @x.37
  %27 = load i32, i32* @y.38
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %25, label %34, label %97

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load %union.tree_node*, %union.tree_node** %12, align 8
  %36 = bitcast %union.tree_node* %35 to %struct.tree_list*
  %37 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %36, i32 0, i32 2
  %38 = load %union.tree_node*, %union.tree_node** %37, align 8
  %39 = call i32 @host_integerp(%union.tree_node* %38, i32 0)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %42, label %41

; <label>:41:                                     ; preds = %34
  call void (i8*, ...) @error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.109, i32 0, i32 0))
  br label %96

; <label>:42:                                     ; preds = %34
  %43 = load %union.tree_node*, %union.tree_node** %12, align 8
  %44 = bitcast %union.tree_node* %43 to %struct.tree_list*
  %45 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %44, i32 0, i32 2
  %46 = load %union.tree_node*, %union.tree_node** %45, align 8
  %47 = call i64 @tree_low_cst(%union.tree_node* %46, i32 0)
  store i64 %47, i64* %15, align 8
  %48 = load i64, i64* %15, align 8
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %55, label %50

; <label>:50:                                     ; preds = %42
  %51 = load i64, i64* %15, align 8
  %52 = load i32, i32* %13, align 4
  %53 = sext i32 %52 to i64
  %54 = icmp sge i64 %51, %53
  br i1 %54, label %55, label %72

; <label>:55:                                     ; preds = %50, %42
  %56 = load i32, i32* @x.37
  %57 = load i32, i32* @y.38
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %55
  call void (i8*, ...) @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.110, i32 0, i32 0))
  %64 = load i32, i32* @x.37
  %65 = load i32, i32* @y.38
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %95

; <label>:72:                                     ; preds = %50
  %73 = load i32, i32* @x.37
  %74 = load i32, i32* @y.38
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %72
  %81 = load i32*, i32** %14, align 8
  %82 = load i64, i64* %15, align 8
  %83 = getelementptr inbounds i32, i32* %81, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = sext i32 %84 to i64
  %86 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %85)
  store %struct.rtx_def* %86, %struct.rtx_def** %10, align 8
  %87 = load i32, i32* @x.37
  %88 = load i32, i32* @y.38
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %100

; <label>:95:                                     ; preds = %originalBBpart24
  br label %96

; <label>:96:                                     ; preds = %95, %41
  br label %98

; <label>:97:                                     ; preds = %originalBBpart2
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.111, i32 0, i32 0))
  br label %98

; <label>:98:                                     ; preds = %97, %96
  %99 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %99, %struct.rtx_def** %10, align 8
  br label %100

; <label>:100:                                    ; preds = %98, %originalBBpart28
  %101 = load i32, i32* @x.37
  %102 = load i32, i32* @y.38
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %100
  %109 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %110 = load i32, i32* @x.37
  %111 = load i32, i32* @y.38
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret %struct.rtx_def* %109

originalBBalteredBB:                              ; preds = %originalBB, %1
  %118 = alloca %struct.rtx_def*, align 8
  %119 = alloca %union.tree_node*, align 8
  %120 = alloca %union.tree_node*, align 8
  %121 = alloca i32, align 4
  %122 = alloca i32*, align 8
  %123 = alloca i64, align 8
  store %union.tree_node* %0, %union.tree_node** %119, align 8
  %124 = load %union.tree_node*, %union.tree_node** %119, align 8
  %125 = bitcast %union.tree_node* %124 to %struct.tree_exp*
  %126 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %125, i32 0, i32 2
  %127 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %126, i64 0, i64 1
  %128 = load %union.tree_node*, %union.tree_node** %127, align 8
  store %union.tree_node* %128, %union.tree_node** %120, align 8
  store i32 7, i32* %121, align 4
  %129 = load %struct.function*, %struct.function** @cfun, align 8
  %130 = getelementptr inbounds %struct.function, %struct.function* %129, i32 0, i32 13
  %131 = bitcast %struct.ix86_args* %130 to i32*
  store i32* %131, i32** %122, align 8
  %132 = load %union.tree_node*, %union.tree_node** %120, align 8
  %133 = icmp ne %union.tree_node* %132, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %55
  call void (i8*, ...) @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.110, i32 0, i32 0))
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %72
  %134 = load i32*, i32** %14, align 8
  %135 = load i64, i64* %15, align 8
  %136 = getelementptr inbounds i32, i32* %134, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = sext i32 %137 to i64
  %139 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %138)
  store %struct.rtx_def* %139, %struct.rtx_def** %10, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %100
  %140 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_next_arg(%union.tree_node*) #0 {
  %2 = load i32, i32* @x.39
  %3 = load i32, i32* @y.40
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %struct.rtx_def*, align 8
  %11 = alloca %union.tree_node*, align 8
  %12 = alloca %union.tree_node*, align 8
  %13 = alloca %union.tree_node*, align 8
  %14 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %11, align 8
  %15 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %16 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %16, i32 0, i32 1
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8
  store %union.tree_node* %18, %union.tree_node** %12, align 8
  %19 = load %union.tree_node*, %union.tree_node** %12, align 8
  %20 = bitcast %union.tree_node* %19 to %struct.tree_type*
  %21 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %20, i32 0, i32 1
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8
  %23 = icmp eq %union.tree_node* %22, null
  %24 = load i32, i32* @x.39
  %25 = load i32, i32* @y.40
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %43, label %32

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load %union.tree_node*, %union.tree_node** %12, align 8
  %34 = bitcast %union.tree_node* %33 to %struct.tree_type*
  %35 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %34, i32 0, i32 1
  %36 = load %union.tree_node*, %union.tree_node** %35, align 8
  %37 = call %union.tree_node* @tree_last(%union.tree_node* %36)
  %38 = bitcast %union.tree_node* %37 to %struct.tree_list*
  %39 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %38, i32 0, i32 2
  %40 = load %union.tree_node*, %union.tree_node** %39, align 8
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8
  %42 = icmp eq %union.tree_node* %40, %41
  br i1 %42, label %43, label %69

; <label>:43:                                     ; preds = %32, %originalBBpart2
  %44 = load %struct.function*, %struct.function** @cfun, align 8
  %45 = getelementptr inbounds %struct.function, %struct.function* %44, i32 0, i32 56
  %46 = bitcast i24* %45 to i32*
  %47 = load i32, i32* %46, align 8
  %48 = lshr i32 %47, 16
  %49 = and i32 %48, 1
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %69, label %51

; <label>:51:                                     ; preds = %43
  %52 = load i32, i32* @x.39
  %53 = load i32, i32* @y.40
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %51
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.112, i32 0, i32 0))
  %60 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %60, %struct.rtx_def** %10, align 8
  %61 = load i32, i32* @x.39
  %62 = load i32, i32* @y.40
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %275

; <label>:69:                                     ; preds = %43, %32
  %70 = load %union.tree_node*, %union.tree_node** %11, align 8
  %71 = icmp ne %union.tree_node* %70, null
  br i1 %71, label %72, label %220

; <label>:72:                                     ; preds = %69
  %73 = load i32, i32* @x.39
  %74 = load i32, i32* @y.40
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %72
  %81 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %82 = bitcast %union.tree_node* %81 to %struct.tree_decl*
  %83 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %82, i32 0, i32 10
  %84 = load %union.tree_node*, %union.tree_node** %83, align 8
  %85 = call %union.tree_node* @tree_last(%union.tree_node* %84)
  store %union.tree_node* %85, %union.tree_node** %13, align 8
  %86 = load %union.tree_node*, %union.tree_node** %11, align 8
  %87 = bitcast %union.tree_node* %86 to %struct.tree_list*
  %88 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %87, i32 0, i32 2
  %89 = load %union.tree_node*, %union.tree_node** %88, align 8
  store %union.tree_node* %89, %union.tree_node** %14, align 8
  %90 = load i32, i32* @x.39
  %91 = load i32, i32* @y.40
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %98

; <label>:98:                                     ; preds = %originalBBpart219, %originalBBpart28
  %99 = load i32, i32* @x.39
  %100 = load i32, i32* @y.40
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %98
  %107 = load %union.tree_node*, %union.tree_node** %14, align 8
  %108 = bitcast %union.tree_node* %107 to %struct.tree_common*
  %109 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %108, i32 0, i32 2
  %110 = load i32, i32* %109, align 8
  %111 = and i32 %110, 255
  %112 = icmp eq i32 %111, 115
  %113 = load i32, i32* @x.39
  %114 = load i32, i32* @y.40
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart215, label %originalBB10alteredBB

originalBBpart215:                                ; preds = %originalBB10
  br i1 %112, label %142, label %121

; <label>:121:                                    ; preds = %originalBBpart215
  %122 = load %union.tree_node*, %union.tree_node** %14, align 8
  %123 = bitcast %union.tree_node* %122 to %struct.tree_common*
  %124 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %123, i32 0, i32 2
  %125 = load i32, i32* %124, align 8
  %126 = and i32 %125, 255
  %127 = icmp eq i32 %126, 114
  br i1 %127, label %142, label %128

; <label>:128:                                    ; preds = %121
  %129 = load %union.tree_node*, %union.tree_node** %14, align 8
  %130 = bitcast %union.tree_node* %129 to %struct.tree_common*
  %131 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %130, i32 0, i32 2
  %132 = load i32, i32* %131, align 8
  %133 = and i32 %132, 255
  %134 = icmp eq i32 %133, 116
  br i1 %134, label %142, label %135

; <label>:135:                                    ; preds = %128
  %136 = load %union.tree_node*, %union.tree_node** %14, align 8
  %137 = bitcast %union.tree_node* %136 to %struct.tree_common*
  %138 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %137, i32 0, i32 2
  %139 = load i32, i32* %138, align 8
  %140 = and i32 %139, 255
  %141 = icmp eq i32 %140, 41
  br label %142

; <label>:142:                                    ; preds = %135, %128, %121, %originalBBpart215
  %143 = phi i1 [ true, %128 ], [ true, %121 ], [ true, %originalBBpart215 ], [ %141, %135 ]
  br i1 %143, label %144, label %166

; <label>:144:                                    ; preds = %142
  %145 = load i32, i32* @x.39
  %146 = load i32, i32* @y.40
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %144
  %153 = load %union.tree_node*, %union.tree_node** %14, align 8
  %154 = bitcast %union.tree_node* %153 to %struct.tree_exp*
  %155 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %154, i32 0, i32 2
  %156 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %155, i64 0, i64 0
  %157 = load %union.tree_node*, %union.tree_node** %156, align 8
  store %union.tree_node* %157, %union.tree_node** %14, align 8
  %158 = load i32, i32* @x.39
  %159 = load i32, i32* @y.40
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %98

; <label>:166:                                    ; preds = %142
  %167 = load i32, i32* @x.39
  %168 = load i32, i32* @y.40
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %originalBB21alteredBB, %166
  %175 = load %union.tree_node*, %union.tree_node** %14, align 8
  %176 = load %union.tree_node*, %union.tree_node** %13, align 8
  %177 = icmp ne %union.tree_node* %175, %176
  %178 = load i32, i32* @x.39
  %179 = load i32, i32* @y.40
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br i1 %177, label %186, label %203

; <label>:186:                                    ; preds = %originalBBpart223
  %187 = load i32, i32* @x.39
  %188 = load i32, i32* @y.40
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %originalBB25alteredBB, %186
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.113, i32 0, i32 0))
  %195 = load i32, i32* @x.39
  %196 = load i32, i32* @y.40
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br label %203

; <label>:203:                                    ; preds = %originalBBpart227, %originalBBpart223
  %204 = load i32, i32* @x.39
  %205 = load i32, i32* @y.40
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %203
  %212 = load i32, i32* @x.39
  %213 = load i32, i32* @y.40
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %262

; <label>:220:                                    ; preds = %69
  %221 = load i32, i32* @x.39
  %222 = load i32, i32* @y.40
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %220
  %229 = load %struct.function*, %struct.function** @cfun, align 8
  %230 = getelementptr inbounds %struct.function, %struct.function* %229, i32 0, i32 56
  %231 = bitcast i24* %230 to i32*
  %232 = load i32, i32* %231, align 8
  %233 = lshr i32 %232, 16
  %234 = and i32 %233, 1
  %235 = icmp ne i32 %234, 0
  %236 = load i32, i32* @x.39
  %237 = load i32, i32* @y.40
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBBpart245, label %originalBB33alteredBB

originalBBpart245:                                ; preds = %originalBB33
  br i1 %235, label %261, label %244

; <label>:244:                                    ; preds = %originalBBpart245
  %245 = load i32, i32* @x.39
  %246 = load i32, i32* @y.40
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %244
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.114, i32 0, i32 0))
  %253 = load i32, i32* @x.39
  %254 = load i32, i32* @y.40
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %261

; <label>:261:                                    ; preds = %originalBBpart249, %originalBBpart245
  br label %262

; <label>:262:                                    ; preds = %261, %originalBBpart231
  %263 = load i32, i32* @target_flags, align 4
  %264 = and i32 %263, 33554432
  %265 = icmp ne i32 %264, 0
  %266 = select i1 %265, i32 5, i32 4
  %267 = load %struct.optab*, %struct.optab** getelementptr inbounds ([49 x %struct.optab*], [49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 16
  %268 = load %struct.function*, %struct.function** @cfun, align 8
  %269 = getelementptr inbounds %struct.function, %struct.function* %268, i32 0, i32 15
  %270 = load %struct.rtx_def*, %struct.rtx_def** %269, align 8
  %271 = load %struct.function*, %struct.function** @cfun, align 8
  %272 = getelementptr inbounds %struct.function, %struct.function* %271, i32 0, i32 12
  %273 = load %struct.rtx_def*, %struct.rtx_def** %272, align 8
  %274 = call %struct.rtx_def* @expand_binop(i32 %266, %struct.optab* %267, %struct.rtx_def* %270, %struct.rtx_def* %273, %struct.rtx_def* null, i32 0, i32 3)
  store %struct.rtx_def* %274, %struct.rtx_def** %10, align 8
  br label %275

; <label>:275:                                    ; preds = %262, %originalBBpart24
  %276 = load i32, i32* @x.39
  %277 = load i32, i32* @y.40
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %275
  %284 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %285 = load i32, i32* @x.39
  %286 = load i32, i32* @y.40
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  ret %struct.rtx_def* %284

originalBBalteredBB:                              ; preds = %originalBB, %1
  %293 = alloca %struct.rtx_def*, align 8
  %294 = alloca %union.tree_node*, align 8
  %295 = alloca %union.tree_node*, align 8
  %296 = alloca %union.tree_node*, align 8
  %297 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %294, align 8
  %298 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %299 = bitcast %union.tree_node* %298 to %struct.tree_common*
  %300 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %299, i32 0, i32 1
  %301 = load %union.tree_node*, %union.tree_node** %300, align 8
  store %union.tree_node* %301, %union.tree_node** %295, align 8
  %302 = load %union.tree_node*, %union.tree_node** %295, align 8
  %303 = bitcast %union.tree_node* %302 to %struct.tree_type*
  %304 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %303, i32 0, i32 1
  %305 = load %union.tree_node*, %union.tree_node** %304, align 8
  %306 = icmp eq %union.tree_node* %305, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %51
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.112, i32 0, i32 0))
  %307 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %307, %struct.rtx_def** %10, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %72
  %308 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %309 = bitcast %union.tree_node* %308 to %struct.tree_decl*
  %310 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %309, i32 0, i32 10
  %311 = load %union.tree_node*, %union.tree_node** %310, align 8
  %312 = call %union.tree_node* @tree_last(%union.tree_node* %311)
  store %union.tree_node* %312, %union.tree_node** %13, align 8
  %313 = load %union.tree_node*, %union.tree_node** %11, align 8
  %314 = bitcast %union.tree_node* %313 to %struct.tree_list*
  %315 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %314, i32 0, i32 2
  %316 = load %union.tree_node*, %union.tree_node** %315, align 8
  store %union.tree_node* %316, %union.tree_node** %14, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %98
  %317 = load %union.tree_node*, %union.tree_node** %14, align 8
  %318 = bitcast %union.tree_node* %317 to %struct.tree_common*
  %319 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %318, i32 0, i32 2
  %320 = load i32, i32* %319, align 8
  %_ = shl i32 %320, 255
  %_11 = sub i32 0, %320
  %gen = add i32 %_11, 255
  %_12 = sub i32 0, %320
  %gen13 = add i32 %_12, 255
  %321 = and i32 %320, 255
  %322 = icmp eq i32 %321, 115
  br label %originalBB10

originalBB17alteredBB:                            ; preds = %originalBB17, %144
  %323 = load %union.tree_node*, %union.tree_node** %14, align 8
  %324 = bitcast %union.tree_node* %323 to %struct.tree_exp*
  %325 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %324, i32 0, i32 2
  %326 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %325, i64 0, i64 0
  %327 = load %union.tree_node*, %union.tree_node** %326, align 8
  store %union.tree_node* %327, %union.tree_node** %14, align 8
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %166
  %328 = load %union.tree_node*, %union.tree_node** %14, align 8
  %329 = load %union.tree_node*, %union.tree_node** %13, align 8
  %330 = icmp ne %union.tree_node* %328, %329
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %186
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.113, i32 0, i32 0))
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %203
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %220
  %331 = load %struct.function*, %struct.function** @cfun, align 8
  %332 = getelementptr inbounds %struct.function, %struct.function* %331, i32 0, i32 56
  %333 = bitcast i24* %332 to i32*
  %334 = load i32, i32* %333, align 8
  %_34 = sub i32 0, %334
  %gen35 = add i32 %_34, 16
  %_36 = sub i32 0, %334
  %gen37 = add i32 %_36, 16
  %335 = lshr i32 %334, 16
  %_38 = sub i32 %335, 1
  %gen39 = mul i32 %_38, 1
  %_40 = shl i32 %335, 1
  %_41 = shl i32 %335, 1
  %_42 = shl i32 %335, 1
  %_43 = shl i32 %335, 1
  %336 = and i32 %335, 1
  %337 = icmp ne i32 %336, 0
  br label %originalBB33

originalBB47alteredBB:                            ; preds = %originalBB47, %244
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.114, i32 0, i32 0))
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %275
  %338 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  br label %originalBB51
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_classify_type(%union.tree_node*) #0 {
  %2 = load i32, i32* @x.41
  %3 = load i32, i32* @y.42
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %struct.rtx_def*, align 8
  %11 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %11, align 8
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8
  %13 = icmp ne %union.tree_node* %12, null
  %14 = load i32, i32* @x.41
  %15 = load i32, i32* @y.42
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %13, label %22, label %49

; <label>:22:                                     ; preds = %originalBBpart2
  %23 = load i32, i32* @x.41
  %24 = load i32, i32* @y.42
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %22
  %31 = load %union.tree_node*, %union.tree_node** %11, align 8
  %32 = bitcast %union.tree_node* %31 to %struct.tree_list*
  %33 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %32, i32 0, i32 2
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8
  %35 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %36 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %35, i32 0, i32 1
  %37 = load %union.tree_node*, %union.tree_node** %36, align 8
  %38 = call i32 @type_to_class(%union.tree_node* %37)
  %39 = sext i32 %38 to i64
  %40 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %39)
  store %struct.rtx_def* %40, %struct.rtx_def** %10, align 8
  %41 = load i32, i32* @x.41
  %42 = load i32, i32* @y.42
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %51

; <label>:49:                                     ; preds = %originalBBpart2
  %50 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -1)
  store %struct.rtx_def* %50, %struct.rtx_def** %10, align 8
  br label %51

; <label>:51:                                     ; preds = %49, %originalBBpart24
  %52 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  ret %struct.rtx_def* %52

originalBBalteredBB:                              ; preds = %originalBB, %1
  %53 = alloca %struct.rtx_def*, align 8
  %54 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %54, align 8
  %55 = load %union.tree_node*, %union.tree_node** %54, align 8
  %56 = icmp ne %union.tree_node* %55, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  %57 = load %union.tree_node*, %union.tree_node** %11, align 8
  %58 = bitcast %union.tree_node* %57 to %struct.tree_list*
  %59 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %58, i32 0, i32 2
  %60 = load %union.tree_node*, %union.tree_node** %59, align 8
  %61 = bitcast %union.tree_node* %60 to %struct.tree_common*
  %62 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %61, i32 0, i32 1
  %63 = load %union.tree_node*, %union.tree_node** %62, align 8
  %64 = call i32 @type_to_class(%union.tree_node* %63)
  %65 = sext i32 %64 to i64
  %66 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %65)
  store %struct.rtx_def* %66, %struct.rtx_def** %10, align 8
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_constant_p(%union.tree_node*) #0 {
  %2 = load i32, i32* @x.43
  %3 = load i32, i32* @y.44
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %struct.rtx_def*, align 8
  %11 = alloca %union.tree_node*, align 8
  %12 = alloca %union.tree_node*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %11, align 8
  %15 = load %union.tree_node*, %union.tree_node** %11, align 8
  %16 = bitcast %union.tree_node* %15 to %struct.tree_exp*
  %17 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %16, i32 0, i32 2
  %18 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %17, i64 0, i64 1
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8
  store %union.tree_node* %19, %union.tree_node** %12, align 8
  %20 = load %union.tree_node*, %union.tree_node** %11, align 8
  %21 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %21, i32 0, i32 1
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8
  %24 = bitcast %union.tree_node* %23 to %struct.tree_type*
  %25 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %24, i32 0, i32 6
  %26 = load i32, i32* %25, align 4
  %27 = lshr i32 %26, 9
  %28 = and i32 %27, 127
  store i32 %28, i32* %13, align 4
  %29 = load %union.tree_node*, %union.tree_node** %12, align 8
  %30 = icmp eq %union.tree_node* %29, null
  %31 = load i32, i32* @x.43
  %32 = load i32, i32* @y.44
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %30, label %39, label %41

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %40, %struct.rtx_def** %10, align 8
  br label %52

; <label>:41:                                     ; preds = %originalBBpart2
  %42 = load %union.tree_node*, %union.tree_node** %12, align 8
  %43 = bitcast %union.tree_node* %42 to %struct.tree_list*
  %44 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %43, i32 0, i32 2
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8
  store %union.tree_node* %45, %union.tree_node** %12, align 8
  %46 = load %union.tree_node*, %union.tree_node** %12, align 8
  %47 = call %struct.rtx_def* @expand_expr(%union.tree_node* %46, %struct.rtx_def* null, i32 0, i32 0)
  store %struct.rtx_def* %47, %struct.rtx_def** %14, align 8
  %48 = load i32, i32* %13, align 4
  %49 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %50 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 140, i32 %48, %struct.rtx_def* %49)
  store %struct.rtx_def* %50, %struct.rtx_def** %14, align 8
  %51 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  store %struct.rtx_def* %51, %struct.rtx_def** %10, align 8
  br label %52

; <label>:52:                                     ; preds = %41, %39
  %53 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  ret %struct.rtx_def* %53

originalBBalteredBB:                              ; preds = %originalBB, %1
  %54 = alloca %struct.rtx_def*, align 8
  %55 = alloca %union.tree_node*, align 8
  %56 = alloca %union.tree_node*, align 8
  %57 = alloca i32, align 4
  %58 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %55, align 8
  %59 = load %union.tree_node*, %union.tree_node** %55, align 8
  %60 = bitcast %union.tree_node* %59 to %struct.tree_exp*
  %61 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %60, i32 0, i32 2
  %62 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %61, i64 0, i64 1
  %63 = load %union.tree_node*, %union.tree_node** %62, align 8
  store %union.tree_node* %63, %union.tree_node** %56, align 8
  %64 = load %union.tree_node*, %union.tree_node** %55, align 8
  %65 = bitcast %union.tree_node* %64 to %struct.tree_common*
  %66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %65, i32 0, i32 1
  %67 = load %union.tree_node*, %union.tree_node** %66, align 8
  %68 = bitcast %union.tree_node* %67 to %struct.tree_type*
  %69 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %68, i32 0, i32 6
  %70 = load i32, i32* %69, align 4
  %_ = sub i32 0, %70
  %gen = add i32 %_, 9
  %71 = lshr i32 %70, 9
  %_1 = shl i32 %71, 127
  %_2 = sub i32 %71, 127
  %gen3 = mul i32 %_2, 127
  %_4 = shl i32 %71, 127
  %_5 = sub i32 0, %71
  %gen6 = add i32 %_5, 127
  %_7 = sub i32 %71, 127
  %gen8 = mul i32 %_7, 127
  %_9 = sub i32 %71, 127
  %gen10 = mul i32 %_9, 127
  %72 = and i32 %71, 127
  store i32 %72, i32* %57, align 4
  %73 = load %union.tree_node*, %union.tree_node** %56, align 8
  %74 = icmp eq %union.tree_node* %73, null
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_frame_address(%union.tree_node*) #0 {
  %2 = alloca %struct.rtx_def*, align 8
  %3 = alloca %union.tree_node*, align 8
  %4 = alloca %union.tree_node*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %3, align 8
  %7 = load %union.tree_node*, %union.tree_node** %3, align 8
  %8 = bitcast %union.tree_node* %7 to %struct.tree_exp*
  %9 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %8, i32 0, i32 2
  %10 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %9, i64 0, i64 0
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8
  %12 = bitcast %union.tree_node* %11 to %struct.tree_exp*
  %13 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %12, i32 0, i32 2
  %14 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %13, i64 0, i64 0
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8
  store %union.tree_node* %15, %union.tree_node** %4, align 8
  %16 = load %union.tree_node*, %union.tree_node** %3, align 8
  %17 = bitcast %union.tree_node* %16 to %struct.tree_exp*
  %18 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %17, i32 0, i32 2
  %19 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %18, i64 0, i64 1
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8
  store %union.tree_node* %20, %union.tree_node** %5, align 8
  %21 = load %union.tree_node*, %union.tree_node** %5, align 8
  %22 = icmp eq %union.tree_node* %21, null
  br i1 %22, label %23, label %41

; <label>:23:                                     ; preds = %1
  %24 = load i32, i32* @x.45
  %25 = load i32, i32* @y.46
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %23
  %32 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %32, %struct.rtx_def** %2, align 8
  %33 = load i32, i32* @x.45
  %34 = load i32, i32* @y.46
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %254

; <label>:41:                                     ; preds = %1
  %42 = load %union.tree_node*, %union.tree_node** %5, align 8
  %43 = bitcast %union.tree_node* %42 to %struct.tree_list*
  %44 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %43, i32 0, i32 2
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8
  %46 = call i32 @host_integerp(%union.tree_node* %45, i32 1)
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %91, label %48

; <label>:48:                                     ; preds = %41
  %49 = load %union.tree_node*, %union.tree_node** %4, align 8
  %50 = bitcast %union.tree_node* %49 to %struct.tree_decl*
  %51 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %50, i32 0, i32 6
  %52 = bitcast %union.anon* %51 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 52
  br i1 %54, label %55, label %56

; <label>:55:                                     ; preds = %48
  call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.115, i32 0, i32 0))
  br label %73

; <label>:56:                                     ; preds = %48
  %57 = load i32, i32* @x.45
  %58 = load i32, i32* @y.46
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %56
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.116, i32 0, i32 0))
  %65 = load i32, i32* @x.45
  %66 = load i32, i32* @y.46
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %73

; <label>:73:                                     ; preds = %originalBBpart24, %55
  %74 = load i32, i32* @x.45
  %75 = load i32, i32* @y.46
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %73
  %82 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %82, %struct.rtx_def** %2, align 8
  %83 = load i32, i32* @x.45
  %84 = load i32, i32* @y.46
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %254

; <label>:91:                                     ; preds = %41
  %92 = load %union.tree_node*, %union.tree_node** %4, align 8
  %93 = bitcast %union.tree_node* %92 to %struct.tree_decl*
  %94 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %93, i32 0, i32 6
  %95 = bitcast %union.anon* %94 to i32*
  %96 = load i32, i32* %95, align 8
  %97 = load %union.tree_node*, %union.tree_node** %5, align 8
  %98 = bitcast %union.tree_node* %97 to %struct.tree_list*
  %99 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %98, i32 0, i32 2
  %100 = load %union.tree_node*, %union.tree_node** %99, align 8
  %101 = call i64 @tree_low_cst(%union.tree_node* %100, i32 1)
  %102 = trunc i64 %101 to i32
  %103 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16
  %104 = call %struct.rtx_def* @expand_builtin_return_addr(i32 %96, i32 %102, %struct.rtx_def* %103)
  store %struct.rtx_def* %104, %struct.rtx_def** %6, align 8
  %105 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %106 = icmp eq %struct.rtx_def* %105, null
  br i1 %106, label %107, label %150

; <label>:107:                                    ; preds = %91
  %108 = load %union.tree_node*, %union.tree_node** %4, align 8
  %109 = bitcast %union.tree_node* %108 to %struct.tree_decl*
  %110 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %109, i32 0, i32 6
  %111 = bitcast %union.anon* %110 to i32*
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 52
  br i1 %113, label %114, label %115

; <label>:114:                                    ; preds = %107
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.117, i32 0, i32 0))
  br label %132

; <label>:115:                                    ; preds = %107
  %116 = load i32, i32* @x.45
  %117 = load i32, i32* @y.46
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %115
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.118, i32 0, i32 0))
  %124 = load i32, i32* @x.45
  %125 = load i32, i32* @y.46
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %132

; <label>:132:                                    ; preds = %originalBBpart212, %114
  %133 = load i32, i32* @x.45
  %134 = load i32, i32* @y.46
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %132
  %141 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %141, %struct.rtx_def** %2, align 8
  %142 = load i32, i32* @x.45
  %143 = load i32, i32* @y.46
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %254

; <label>:150:                                    ; preds = %91
  %151 = load %union.tree_node*, %union.tree_node** %4, align 8
  %152 = bitcast %union.tree_node* %151 to %struct.tree_decl*
  %153 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %152, i32 0, i32 6
  %154 = bitcast %union.anon* %153 to i32*
  %155 = load i32, i32* %154, align 8
  %156 = icmp eq i32 %155, 52
  br i1 %156, label %157, label %159

; <label>:157:                                    ; preds = %150
  %158 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  store %struct.rtx_def* %158, %struct.rtx_def** %2, align 8
  br label %254

; <label>:159:                                    ; preds = %150
  %160 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %161 = bitcast %struct.rtx_def* %160 to i32*
  %162 = load i32, i32* %161, align 8
  %163 = and i32 %162, 65535
  %164 = icmp ne i32 %163, 61
  br i1 %164, label %165, label %252

; <label>:165:                                    ; preds = %159
  %166 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %167 = bitcast %struct.rtx_def* %166 to i32*
  %168 = load i32, i32* %167, align 8
  %169 = and i32 %168, 65535
  %170 = icmp eq i32 %169, 67
  br i1 %170, label %252, label %171

; <label>:171:                                    ; preds = %165
  %172 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %173 = bitcast %struct.rtx_def* %172 to i32*
  %174 = load i32, i32* %173, align 8
  %175 = and i32 %174, 65535
  %176 = icmp eq i32 %175, 68
  br i1 %176, label %252, label %177

; <label>:177:                                    ; preds = %171
  %178 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %179 = bitcast %struct.rtx_def* %178 to i32*
  %180 = load i32, i32* %179, align 8
  %181 = and i32 %180, 65535
  %182 = icmp eq i32 %181, 54
  br i1 %182, label %252, label %183

; <label>:183:                                    ; preds = %177
  %184 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %185 = bitcast %struct.rtx_def* %184 to i32*
  %186 = load i32, i32* %185, align 8
  %187 = and i32 %186, 65535
  %188 = icmp eq i32 %187, 55
  br i1 %188, label %252, label %189

; <label>:189:                                    ; preds = %183
  %190 = load i32, i32* @x.45
  %191 = load i32, i32* @y.46
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %189
  %198 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %199 = bitcast %struct.rtx_def* %198 to i32*
  %200 = load i32, i32* %199, align 8
  %201 = and i32 %200, 65535
  %202 = icmp eq i32 %201, 58
  %203 = load i32, i32* @x.45
  %204 = load i32, i32* @y.46
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart222, label %originalBB18alteredBB

originalBBpart222:                                ; preds = %originalBB18
  br i1 %202, label %252, label %211

; <label>:211:                                    ; preds = %originalBBpart222
  %212 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %213 = bitcast %struct.rtx_def* %212 to i32*
  %214 = load i32, i32* %213, align 8
  %215 = and i32 %214, 65535
  %216 = icmp eq i32 %215, 134
  br i1 %216, label %252, label %217

; <label>:217:                                    ; preds = %211
  %218 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %219 = bitcast %struct.rtx_def* %218 to i32*
  %220 = load i32, i32* %219, align 8
  %221 = and i32 %220, 65535
  %222 = icmp eq i32 %221, 56
  br i1 %222, label %252, label %223

; <label>:223:                                    ; preds = %217
  %224 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %225 = bitcast %struct.rtx_def* %224 to i32*
  %226 = load i32, i32* %225, align 8
  %227 = and i32 %226, 65535
  %228 = icmp eq i32 %227, 140
  br i1 %228, label %252, label %229

; <label>:229:                                    ; preds = %223
  %230 = load i32, i32* @x.45
  %231 = load i32, i32* @y.46
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %originalBB24alteredBB, %229
  %238 = load i32, i32* @target_flags, align 4
  %239 = and i32 %238, 33554432
  %240 = icmp ne i32 %239, 0
  %241 = select i1 %240, i32 5, i32 4
  %242 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %243 = call %struct.rtx_def* @copy_to_mode_reg(i32 %241, %struct.rtx_def* %242)
  store %struct.rtx_def* %243, %struct.rtx_def** %6, align 8
  %244 = load i32, i32* @x.45
  %245 = load i32, i32* @y.46
  %246 = sub i32 %244, 1
  %247 = mul i32 %244, %246
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %249, %250
  br i1 %251, label %originalBBpart231, label %originalBB24alteredBB

originalBBpart231:                                ; preds = %originalBB24
  br label %252

; <label>:252:                                    ; preds = %originalBBpart231, %223, %217, %211, %originalBBpart222, %183, %177, %171, %165, %159
  %253 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  store %struct.rtx_def* %253, %struct.rtx_def** %2, align 8
  br label %254

; <label>:254:                                    ; preds = %252, %157, %originalBBpart216, %originalBBpart28, %originalBBpart2
  %255 = load i32, i32* @x.45
  %256 = load i32, i32* @y.46
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %254
  %263 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %264 = load i32, i32* @x.45
  %265 = load i32, i32* @y.46
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  ret %struct.rtx_def* %263

originalBBalteredBB:                              ; preds = %originalBB, %23
  %272 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %272, %struct.rtx_def** %2, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %56
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.116, i32 0, i32 0))
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %73
  %273 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %273, %struct.rtx_def** %2, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %115
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.118, i32 0, i32 0))
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %132
  %274 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %274, %struct.rtx_def** %2, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %189
  %275 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %276 = bitcast %struct.rtx_def* %275 to i32*
  %277 = load i32, i32* %276, align 8
  %_ = sub i32 %277, 65535
  %gen = mul i32 %_, 65535
  %_19 = shl i32 %277, 65535
  %_20 = shl i32 %277, 65535
  %278 = and i32 %277, 65535
  %279 = icmp eq i32 %278, 58
  br label %originalBB18

originalBB24alteredBB:                            ; preds = %originalBB24, %229
  %280 = load i32, i32* @target_flags, align 4
  %_25 = sub i32 0, %280
  %gen26 = add i32 %_25, 33554432
  %_27 = sub i32 %280, 33554432
  %gen28 = mul i32 %_27, 33554432
  %281 = and i32 %280, 33554432
  %282 = icmp ne i32 %281, 0
  %283 = select i1 %282, i32 5, i32 4
  %284 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %285 = call %struct.rtx_def* @copy_to_mode_reg(i32 %283, %struct.rtx_def* %284)
  store %struct.rtx_def* %285, %struct.rtx_def** %6, align 8
  br label %originalBB24

originalBB33alteredBB:                            ; preds = %originalBB33, %254
  %286 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  br label %originalBB33
}

declare void @make_decl_rtl(%union.tree_node*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_alloca(%union.tree_node*, %struct.rtx_def*) #0 {
  %3 = alloca %struct.rtx_def*, align 8
  %4 = alloca %union.tree_node*, align 8
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %4, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %5, align 8
  %8 = load %union.tree_node*, %union.tree_node** %4, align 8
  %9 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %8, i32 6, i32 5)
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %12, label %11

; <label>:11:                                     ; preds = %2
  store %struct.rtx_def* null, %struct.rtx_def** %3, align 8
  br label %38

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.47
  %14 = load i32, i32* @y.48
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %12
  %21 = load %union.tree_node*, %union.tree_node** %4, align 8
  %22 = bitcast %union.tree_node* %21 to %struct.tree_list*
  %23 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %22, i32 0, i32 2
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8
  %25 = call %struct.rtx_def* @expand_expr(%union.tree_node* %24, %struct.rtx_def* null, i32 0, i32 0)
  store %struct.rtx_def* %25, %struct.rtx_def** %6, align 8
  %26 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %27 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %28 = call %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def* %26, %struct.rtx_def* %27, i32 8)
  store %struct.rtx_def* %28, %struct.rtx_def** %7, align 8
  %29 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  store %struct.rtx_def* %29, %struct.rtx_def** %3, align 8
  %30 = load i32, i32* @x.47
  %31 = load i32, i32* @y.48
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %38

; <label>:38:                                     ; preds = %originalBBpart2, %11
  %39 = load i32, i32* @x.47
  %40 = load i32, i32* @y.48
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %38
  %47 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  %48 = load i32, i32* @x.47
  %49 = load i32, i32* @y.48
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret %struct.rtx_def* %47

originalBBalteredBB:                              ; preds = %originalBB, %12
  %56 = load %union.tree_node*, %union.tree_node** %4, align 8
  %57 = bitcast %union.tree_node* %56 to %struct.tree_list*
  %58 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %57, i32 0, i32 2
  %59 = load %union.tree_node*, %union.tree_node** %58, align 8
  %60 = call %struct.rtx_def* @expand_expr(%union.tree_node* %59, %struct.rtx_def* null, i32 0, i32 0)
  store %struct.rtx_def* %60, %struct.rtx_def** %6, align 8
  %61 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %62 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %63 = call %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def* %61, %struct.rtx_def* %62, i32 8)
  store %struct.rtx_def* %63, %struct.rtx_def** %7, align 8
  %64 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  store %struct.rtx_def* %64, %struct.rtx_def** %3, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  %65 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_ffs(%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*) #0 {
  %4 = load i32, i32* @x.49
  %5 = load i32, i32* @y.50
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %union.tree_node*, align 8
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca %struct.rtx_def*, align 8
  %16 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %13, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %14, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %15, align 8
  %17 = load %union.tree_node*, %union.tree_node** %13, align 8
  %18 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %17, i32 6, i32 5)
  %19 = icmp ne i32 %18, 0
  %20 = load i32, i32* @x.49
  %21 = load i32, i32* @y.50
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %29, label %28

; <label>:28:                                     ; preds = %originalBBpart2
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %89

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i32, i32* @x.49
  %31 = load i32, i32* @y.50
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %29
  %38 = load %union.tree_node*, %union.tree_node** %13, align 8
  %39 = bitcast %union.tree_node* %38 to %struct.tree_list*
  %40 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %39, i32 0, i32 2
  %41 = load %union.tree_node*, %union.tree_node** %40, align 8
  %42 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %43 = call %struct.rtx_def* @expand_expr(%union.tree_node* %41, %struct.rtx_def* %42, i32 0, i32 0)
  store %struct.rtx_def* %43, %struct.rtx_def** %16, align 8
  %44 = load %union.tree_node*, %union.tree_node** %13, align 8
  %45 = bitcast %union.tree_node* %44 to %struct.tree_list*
  %46 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %45, i32 0, i32 2
  %47 = load %union.tree_node*, %union.tree_node** %46, align 8
  %48 = bitcast %union.tree_node* %47 to %struct.tree_common*
  %49 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %48, i32 0, i32 1
  %50 = load %union.tree_node*, %union.tree_node** %49, align 8
  %51 = bitcast %union.tree_node* %50 to %struct.tree_type*
  %52 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %51, i32 0, i32 6
  %53 = load i32, i32* %52, align 4
  %54 = lshr i32 %53, 9
  %55 = and i32 %54, 127
  %56 = load %struct.optab*, %struct.optab** getelementptr inbounds ([49 x %struct.optab*], [49 x %struct.optab*]* @optab_table, i64 0, i64 37), align 8
  %57 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %58 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %59 = call %struct.rtx_def* @expand_unop(i32 %55, %struct.optab* %56, %struct.rtx_def* %57, %struct.rtx_def* %58, i32 1)
  store %struct.rtx_def* %59, %struct.rtx_def** %14, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %61 = icmp eq %struct.rtx_def* %60, null
  %62 = load i32, i32* @x.49
  %63 = load i32, i32* @y.50
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart227, label %originalBB1alteredBB

originalBBpart227:                                ; preds = %originalBB1
  br i1 %61, label %70, label %87

; <label>:70:                                     ; preds = %originalBBpart227
  %71 = load i32, i32* @x.49
  %72 = load i32, i32* @y.50
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %70
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 3325, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.expand_builtin_ffs, i32 0, i32 0)) #6
  %79 = load i32, i32* @x.49
  %80 = load i32, i32* @y.50
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  unreachable

; <label>:87:                                     ; preds = %originalBBpart227
  %88 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  store %struct.rtx_def* %88, %struct.rtx_def** %12, align 8
  br label %89

; <label>:89:                                     ; preds = %87, %28
  %90 = load i32, i32* @x.49
  %91 = load i32, i32* @y.50
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %89
  %98 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %99 = load i32, i32* @x.49
  %100 = load i32, i32* @y.50
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  ret %struct.rtx_def* %98

originalBBalteredBB:                              ; preds = %originalBB, %3
  %107 = alloca %struct.rtx_def*, align 8
  %108 = alloca %union.tree_node*, align 8
  %109 = alloca %struct.rtx_def*, align 8
  %110 = alloca %struct.rtx_def*, align 8
  %111 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %108, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %109, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %110, align 8
  %112 = load %union.tree_node*, %union.tree_node** %108, align 8
  %113 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %112, i32 6, i32 5)
  %114 = icmp ne i32 %113, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %115 = load %union.tree_node*, %union.tree_node** %13, align 8
  %116 = bitcast %union.tree_node* %115 to %struct.tree_list*
  %117 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %116, i32 0, i32 2
  %118 = load %union.tree_node*, %union.tree_node** %117, align 8
  %119 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %120 = call %struct.rtx_def* @expand_expr(%union.tree_node* %118, %struct.rtx_def* %119, i32 0, i32 0)
  store %struct.rtx_def* %120, %struct.rtx_def** %16, align 8
  %121 = load %union.tree_node*, %union.tree_node** %13, align 8
  %122 = bitcast %union.tree_node* %121 to %struct.tree_list*
  %123 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %122, i32 0, i32 2
  %124 = load %union.tree_node*, %union.tree_node** %123, align 8
  %125 = bitcast %union.tree_node* %124 to %struct.tree_common*
  %126 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %125, i32 0, i32 1
  %127 = load %union.tree_node*, %union.tree_node** %126, align 8
  %128 = bitcast %union.tree_node* %127 to %struct.tree_type*
  %129 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %128, i32 0, i32 6
  %130 = load i32, i32* %129, align 4
  %_ = sub i32 %130, 9
  %gen = mul i32 %_, 9
  %_2 = shl i32 %130, 9
  %_3 = sub i32 0, %130
  %gen4 = add i32 %_3, 9
  %_5 = sub i32 0, %130
  %gen6 = add i32 %_5, 9
  %_7 = sub i32 0, %130
  %gen8 = add i32 %_7, 9
  %_9 = sub i32 %130, 9
  %gen10 = mul i32 %_9, 9
  %_11 = sub i32 0, %130
  %gen12 = add i32 %_11, 9
  %_13 = sub i32 0, %130
  %gen14 = add i32 %_13, 9
  %131 = lshr i32 %130, 9
  %_15 = sub i32 0, %131
  %gen16 = add i32 %_15, 127
  %_17 = shl i32 %131, 127
  %_18 = shl i32 %131, 127
  %_19 = sub i32 0, %131
  %gen20 = add i32 %_19, 127
  %_21 = shl i32 %131, 127
  %_22 = sub i32 0, %131
  %gen23 = add i32 %_22, 127
  %_24 = shl i32 %131, 127
  %_25 = shl i32 %131, 127
  %132 = and i32 %131, 127
  %133 = load %struct.optab*, %struct.optab** getelementptr inbounds ([49 x %struct.optab*], [49 x %struct.optab*]* @optab_table, i64 0, i64 37), align 8
  %134 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %135 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %136 = call %struct.rtx_def* @expand_unop(i32 %132, %struct.optab* %133, %struct.rtx_def* %134, %struct.rtx_def* %135, i32 1)
  store %struct.rtx_def* %136, %struct.rtx_def** %14, align 8
  %137 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %138 = icmp eq %struct.rtx_def* %137, null
  br label %originalBB1

originalBB29alteredBB:                            ; preds = %originalBB29, %70
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 3325, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.expand_builtin_ffs, i32 0, i32 0)) #6
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %89
  %139 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  br label %originalBB33
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_strlen(%union.tree_node*, %struct.rtx_def*) #0 {
  %3 = alloca %struct.rtx_def*, align 8
  %4 = alloca %union.tree_node*, align 8
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca %union.tree_node*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.rtx_def*, align 8
  %9 = alloca %union.tree_node*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.rtx_def*, align 8
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %struct.rtx_def*, align 8
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %union.tree_node* %0, %union.tree_node** %4, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %5, align 8
  %18 = load %union.tree_node*, %union.tree_node** %4, align 8
  %19 = bitcast %union.tree_node* %18 to %struct.tree_exp*
  %20 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %19, i32 0, i32 2
  %21 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %20, i64 0, i64 1
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8
  store %union.tree_node* %22, %union.tree_node** %6, align 8
  %23 = load %union.tree_node*, %union.tree_node** %4, align 8
  %24 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %24, i32 0, i32 1
  %26 = load %union.tree_node*, %union.tree_node** %25, align 8
  %27 = bitcast %union.tree_node* %26 to %struct.tree_type*
  %28 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %27, i32 0, i32 6
  %29 = load i32, i32* %28, align 4
  %30 = lshr i32 %29, 9
  %31 = and i32 %30, 127
  store i32 %31, i32* %7, align 4
  %32 = load %union.tree_node*, %union.tree_node** %6, align 8
  %33 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %32, i32 13, i32 5)
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %36, label %35

; <label>:35:                                     ; preds = %2
  store %struct.rtx_def* null, %struct.rtx_def** %3, align 8
  br label %377

; <label>:36:                                     ; preds = %2
  %37 = load %union.tree_node*, %union.tree_node** %6, align 8
  %38 = bitcast %union.tree_node* %37 to %struct.tree_list*
  %39 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %38, i32 0, i32 2
  %40 = load %union.tree_node*, %union.tree_node** %39, align 8
  store %union.tree_node* %40, %union.tree_node** %9, align 8
  %41 = load %union.tree_node*, %union.tree_node** %9, align 8
  %42 = call i32 @get_pointer_alignment(%union.tree_node* %41, i32 128)
  %43 = sdiv i32 %42, 8
  store i32 %43, i32* %10, align 4
  %44 = load i32, i32* %7, align 4
  store i32 %44, i32* %15, align 4
  store i32 1317, i32* %17, align 4
  %45 = load i32, i32* %10, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %64

; <label>:47:                                     ; preds = %36
  %48 = load i32, i32* @x.51
  %49 = load i32, i32* @y.52
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %47
  store %struct.rtx_def* null, %struct.rtx_def** %3, align 8
  %56 = load i32, i32* @x.51
  %57 = load i32, i32* @y.52
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %377

; <label>:64:                                     ; preds = %36
  br label %65

; <label>:65:                                     ; preds = %79, %64
  %66 = load i32, i32* %15, align 4
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %85

; <label>:68:                                     ; preds = %65
  %69 = load %struct.optab*, %struct.optab** getelementptr inbounds ([49 x %struct.optab*], [49 x %struct.optab*]* @optab_table, i64 0, i64 44), align 16
  %70 = getelementptr inbounds %struct.optab, %struct.optab* %69, i32 0, i32 1
  %71 = load i32, i32* %15, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [59 x %struct.anon.3], [59 x %struct.anon.3]* %70, i64 0, i64 %72
  %74 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %73, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  store i32 %75, i32* %17, align 4
  %76 = load i32, i32* %17, align 4
  %77 = icmp ne i32 %76, 1317
  br i1 %77, label %78, label %79

; <label>:78:                                     ; preds = %68
  br label %85

; <label>:79:                                     ; preds = %68
  %80 = load i32, i32* %15, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i64 0, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  store i32 %84, i32* %15, align 4
  br label %65

; <label>:85:                                     ; preds = %78, %65
  %86 = load i32, i32* %15, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

; <label>:88:                                     ; preds = %85
  store %struct.rtx_def* null, %struct.rtx_def** %3, align 8
  br label %377

; <label>:89:                                     ; preds = %85
  %90 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  store %struct.rtx_def* %90, %struct.rtx_def** %11, align 8
  %91 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %92 = icmp ne %struct.rtx_def* %91, null
  br i1 %92, label %93, label %130

; <label>:93:                                     ; preds = %89
  %94 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %95 = bitcast %struct.rtx_def* %94 to i32*
  %96 = load i32, i32* %95, align 8
  %97 = and i32 %96, 65535
  %98 = icmp eq i32 %97, 61
  br i1 %98, label %99, label %130

; <label>:99:                                     ; preds = %93
  %100 = load i32, i32* @x.51
  %101 = load i32, i32* @y.52
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %99
  %108 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %109 = bitcast %struct.rtx_def* %108 to i32*
  %110 = load i32, i32* %109, align 8
  %111 = lshr i32 %110, 16
  %112 = and i32 %111, 255
  %113 = load i32, i32* %15, align 4
  %114 = icmp eq i32 %112, %113
  %115 = load i32, i32* @x.51
  %116 = load i32, i32* @y.52
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart216, label %originalBB1alteredBB

originalBBpart216:                                ; preds = %originalBB1
  br i1 %114, label %123, label %130

; <label>:123:                                    ; preds = %originalBBpart216
  %124 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %125, i64 0, i64 0
  %127 = bitcast %union.rtunion_def* %126 to i32*
  %128 = load i32, i32* %127, align 8
  %129 = icmp uge i32 %128, 53
  br i1 %129, label %133, label %130

; <label>:130:                                    ; preds = %123, %originalBBpart216, %93, %89
  %131 = load i32, i32* %15, align 4
  %132 = call %struct.rtx_def* @gen_reg_rtx(i32 %131)
  store %struct.rtx_def* %132, %struct.rtx_def** %11, align 8
  br label %133

; <label>:133:                                    ; preds = %130, %123
  %134 = load i32, i32* @x.51
  %135 = load i32, i32* @y.52
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %133
  %142 = load i32, i32* @target_flags, align 4
  %143 = and i32 %142, 33554432
  %144 = icmp ne i32 %143, 0
  %145 = select i1 %144, i32 5, i32 4
  %146 = call %struct.rtx_def* @gen_reg_rtx(i32 %145)
  store %struct.rtx_def* %146, %struct.rtx_def** %12, align 8
  %147 = call %struct.rtx_def* @get_last_insn()
  store %struct.rtx_def* %147, %struct.rtx_def** %14, align 8
  %148 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %148, %struct.rtx_def** %13, align 8
  %149 = load i32, i32* %17, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %150
  %152 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %151, i32 0, i32 3
  %153 = load %struct.insn_operand_data*, %struct.insn_operand_data** %152, align 8
  %154 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %153, i64 2
  %155 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %154, i32 0, i32 2
  %156 = load i16, i16* %155, align 8
  %157 = zext i16 %156 to i32
  store i32 %157, i32* %16, align 4
  %158 = load i32, i32* %17, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %159
  %161 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %160, i32 0, i32 3
  %162 = load %struct.insn_operand_data*, %struct.insn_operand_data** %161, align 8
  %163 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %162, i64 2
  %164 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %163, i32 0, i32 0
  %165 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %164, align 8
  %166 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %167 = load i32, i32* %16, align 4
  %168 = call i32 %165(%struct.rtx_def* %166, i32 %167)
  %169 = icmp ne i32 %168, 0
  %170 = load i32, i32* @x.51
  %171 = load i32, i32* @y.52
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart229, label %originalBB18alteredBB

originalBBpart229:                                ; preds = %originalBB18
  br i1 %169, label %182, label %178

; <label>:178:                                    ; preds = %originalBBpart229
  %179 = load i32, i32* %16, align 4
  %180 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %181 = call %struct.rtx_def* @copy_to_mode_reg(i32 %179, %struct.rtx_def* %180)
  store %struct.rtx_def* %181, %struct.rtx_def** %13, align 8
  br label %182

; <label>:182:                                    ; preds = %178, %originalBBpart229
  %183 = load i32, i32* %17, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %184
  %186 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %185, i32 0, i32 2
  %187 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %186, align 8
  %188 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %189 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %190 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %189)
  %191 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %192 = load i32, i32* %10, align 4
  %193 = sext i32 %192 to i64
  %194 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %193)
  %195 = call %struct.rtx_def* (%struct.rtx_def*, ...) %187(%struct.rtx_def* %188, %struct.rtx_def* %190, %struct.rtx_def* %191, %struct.rtx_def* %194)
  store %struct.rtx_def* %195, %struct.rtx_def** %8, align 8
  %196 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %197 = icmp ne %struct.rtx_def* %196, null
  br i1 %197, label %215, label %198

; <label>:198:                                    ; preds = %182
  %199 = load i32, i32* @x.51
  %200 = load i32, i32* @y.52
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %originalBB31alteredBB, %198
  store %struct.rtx_def* null, %struct.rtx_def** %3, align 8
  %207 = load i32, i32* @x.51
  %208 = load i32, i32* @y.52
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %377

; <label>:215:                                    ; preds = %182
  %216 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %217 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %216)
  call void @start_sequence()
  %218 = load %union.tree_node*, %union.tree_node** %9, align 8
  %219 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %220 = load i32, i32* @ptr_mode, align 4
  %221 = call %struct.rtx_def* @expand_expr(%union.tree_node* %218, %struct.rtx_def* %219, i32 %220, i32 1)
  %222 = call %struct.rtx_def* @memory_address(i32 51, %struct.rtx_def* %221)
  store %struct.rtx_def* %222, %struct.rtx_def** %8, align 8
  %223 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %224 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %225 = icmp ne %struct.rtx_def* %223, %224
  br i1 %225, label %226, label %230

; <label>:226:                                    ; preds = %215
  %227 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %228 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %229 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %227, %struct.rtx_def* %228)
  br label %230

; <label>:230:                                    ; preds = %226, %215
  %231 = load i32, i32* @x.51
  %232 = load i32, i32* @y.52
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %230
  %239 = call %struct.rtx_def* @gen_sequence()
  store %struct.rtx_def* %239, %struct.rtx_def** %8, align 8
  call void @end_sequence()
  %240 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %241 = icmp ne %struct.rtx_def* %240, null
  %242 = load i32, i32* @x.51
  %243 = load i32, i32* @y.52
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br i1 %241, label %250, label %270

; <label>:250:                                    ; preds = %originalBBpart237
  %251 = load i32, i32* @x.51
  %252 = load i32, i32* @y.52
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %250
  %259 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %260 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %261 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %259, %struct.rtx_def* %260)
  %262 = load i32, i32* @x.51
  %263 = load i32, i32* @y.52
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br label %290

; <label>:270:                                    ; preds = %originalBBpart237
  %271 = load i32, i32* @x.51
  %272 = load i32, i32* @y.52
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %originalBB43alteredBB, %270
  %279 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %280 = call %struct.rtx_def* @get_insns()
  %281 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %279, %struct.rtx_def* %280)
  %282 = load i32, i32* @x.51
  %283 = load i32, i32* @y.52
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %290

; <label>:290:                                    ; preds = %originalBBpart245, %originalBBpart241
  %291 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %292 = bitcast %struct.rtx_def* %291 to i32*
  %293 = load i32, i32* %292, align 8
  %294 = lshr i32 %293, 16
  %295 = and i32 %294, 255
  %296 = load i32, i32* %7, align 4
  %297 = icmp eq i32 %295, %296
  br i1 %297, label %298, label %300

; <label>:298:                                    ; preds = %290
  %299 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  store %struct.rtx_def* %299, %struct.rtx_def** %5, align 8
  br label %359

; <label>:300:                                    ; preds = %290
  %301 = load i32, i32* @x.51
  %302 = load i32, i32* @y.52
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %300
  %309 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %310 = icmp ne %struct.rtx_def* %309, null
  %311 = load i32, i32* @x.51
  %312 = load i32, i32* @y.52
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br i1 %310, label %319, label %338

; <label>:319:                                    ; preds = %originalBBpart249
  %320 = load i32, i32* @x.51
  %321 = load i32, i32* @y.52
  %322 = sub i32 %320, 1
  %323 = mul i32 %320, %322
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %325, %326
  br i1 %327, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %319
  %328 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %329 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  call void @convert_move(%struct.rtx_def* %328, %struct.rtx_def* %329, i32 0)
  %330 = load i32, i32* @x.51
  %331 = load i32, i32* @y.52
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %342

; <label>:338:                                    ; preds = %originalBBpart249
  %339 = load i32, i32* %7, align 4
  %340 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %341 = call %struct.rtx_def* @convert_to_mode(i32 %339, %struct.rtx_def* %340, i32 0)
  store %struct.rtx_def* %341, %struct.rtx_def** %5, align 8
  br label %342

; <label>:342:                                    ; preds = %338, %originalBBpart253
  %343 = load i32, i32* @x.51
  %344 = load i32, i32* @y.52
  %345 = sub i32 %343, 1
  %346 = mul i32 %343, %345
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %348, %349
  br i1 %350, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %342
  %351 = load i32, i32* @x.51
  %352 = load i32, i32* @y.52
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %359

; <label>:359:                                    ; preds = %originalBBpart257, %298
  %360 = load i32, i32* @x.51
  %361 = load i32, i32* @y.52
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %359
  %368 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  store %struct.rtx_def* %368, %struct.rtx_def** %3, align 8
  %369 = load i32, i32* @x.51
  %370 = load i32, i32* @y.52
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %377

; <label>:377:                                    ; preds = %originalBBpart261, %originalBBpart233, %88, %originalBBpart2, %35
  %378 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  ret %struct.rtx_def* %378

originalBBalteredBB:                              ; preds = %originalBB, %47
  store %struct.rtx_def* null, %struct.rtx_def** %3, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %99
  %379 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %380 = bitcast %struct.rtx_def* %379 to i32*
  %381 = load i32, i32* %380, align 8
  %_ = shl i32 %381, 16
  %_2 = sub i32 0, %381
  %gen = add i32 %_2, 16
  %382 = lshr i32 %381, 16
  %_3 = shl i32 %382, 255
  %_4 = sub i32 %382, 255
  %gen5 = mul i32 %_4, 255
  %_6 = sub i32 %382, 255
  %gen7 = mul i32 %_6, 255
  %_8 = sub i32 0, %382
  %gen9 = add i32 %_8, 255
  %_10 = shl i32 %382, 255
  %_11 = sub i32 %382, 255
  %gen12 = mul i32 %_11, 255
  %_13 = sub i32 %382, 255
  %gen14 = mul i32 %_13, 255
  %383 = and i32 %382, 255
  %384 = load i32, i32* %15, align 4
  %385 = icmp eq i32 %383, %384
  br label %originalBB1

originalBB18alteredBB:                            ; preds = %originalBB18, %133
  %386 = load i32, i32* @target_flags, align 4
  %_19 = sub i32 %386, 33554432
  %gen20 = mul i32 %_19, 33554432
  %_21 = sub i32 0, %386
  %gen22 = add i32 %_21, 33554432
  %_23 = sub i32 0, %386
  %gen24 = add i32 %_23, 33554432
  %_25 = shl i32 %386, 33554432
  %_26 = sub i32 0, %386
  %gen27 = add i32 %_26, 33554432
  %387 = and i32 %386, 33554432
  %388 = icmp ne i32 %387, 0
  %389 = select i1 %388, i32 5, i32 4
  %390 = call %struct.rtx_def* @gen_reg_rtx(i32 %389)
  store %struct.rtx_def* %390, %struct.rtx_def** %12, align 8
  %391 = call %struct.rtx_def* @get_last_insn()
  store %struct.rtx_def* %391, %struct.rtx_def** %14, align 8
  %392 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %392, %struct.rtx_def** %13, align 8
  %393 = load i32, i32* %17, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %394
  %396 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %395, i32 0, i32 3
  %397 = load %struct.insn_operand_data*, %struct.insn_operand_data** %396, align 8
  %398 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %397, i64 2
  %399 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %398, i32 0, i32 2
  %400 = load i16, i16* %399, align 8
  %401 = zext i16 %400 to i32
  store i32 %401, i32* %16, align 4
  %402 = load i32, i32* %17, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %403
  %405 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %404, i32 0, i32 3
  %406 = load %struct.insn_operand_data*, %struct.insn_operand_data** %405, align 8
  %407 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %406, i64 2
  %408 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %407, i32 0, i32 0
  %409 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %408, align 8
  %410 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %411 = load i32, i32* %16, align 4
  %412 = call i32 %409(%struct.rtx_def* %410, i32 %411)
  %413 = icmp ne i32 %412, 0
  br label %originalBB18

originalBB31alteredBB:                            ; preds = %originalBB31, %198
  store %struct.rtx_def* null, %struct.rtx_def** %3, align 8
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %230
  %414 = call %struct.rtx_def* @gen_sequence()
  store %struct.rtx_def* %414, %struct.rtx_def** %8, align 8
  call void @end_sequence()
  %415 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %416 = icmp ne %struct.rtx_def* %415, null
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %250
  %417 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %418 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %419 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %417, %struct.rtx_def* %418)
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %270
  %420 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %421 = call %struct.rtx_def* @get_insns()
  %422 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %420, %struct.rtx_def* %421)
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %300
  %423 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %424 = icmp ne %struct.rtx_def* %423, null
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %319
  %425 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %426 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  call void @convert_move(%struct.rtx_def* %425, %struct.rtx_def* %426, i32 0)
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %342
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %359
  %427 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  store %struct.rtx_def* %427, %struct.rtx_def** %3, align 8
  br label %originalBB59
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_strcpy(%union.tree_node*, %struct.rtx_def*, i32) #0 {
  %4 = load i32, i32* @x.53
  %5 = load i32, i32* @y.54
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %union.tree_node*, align 8
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %union.tree_node*, align 8
  %17 = alloca %union.tree_node*, align 8
  %18 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %13, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %14, align 8
  store i32 %2, i32* %15, align 4
  %19 = load %union.tree_node*, %union.tree_node** %13, align 8
  %20 = bitcast %union.tree_node* %19 to %struct.tree_exp*
  %21 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %20, i32 0, i32 2
  %22 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %21, i64 0, i64 1
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8
  store %union.tree_node* %23, %union.tree_node** %16, align 8
  %24 = load %union.tree_node*, %union.tree_node** %16, align 8
  %25 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %24, i32 13, i32 13, i32 5)
  %26 = icmp ne i32 %25, 0
  %27 = load i32, i32* @x.53
  %28 = load i32, i32* @y.54
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %52, label %35

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load i32, i32* @x.53
  %37 = load i32, i32* @y.54
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %35
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  %44 = load i32, i32* @x.53
  %45 = load i32, i32* @y.54
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %131

; <label>:52:                                     ; preds = %originalBBpart2
  %53 = load i32, i32* @x.53
  %54 = load i32, i32* @y.54
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %52
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 22), align 16
  store %union.tree_node* %61, %union.tree_node** %17, align 8
  %62 = load %union.tree_node*, %union.tree_node** %17, align 8
  %63 = icmp ne %union.tree_node* %62, null
  %64 = load i32, i32* @x.53
  %65 = load i32, i32* @y.54
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %63, label %89, label %72

; <label>:72:                                     ; preds = %originalBBpart28
  %73 = load i32, i32* @x.53
  %74 = load i32, i32* @y.54
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %72
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  %81 = load i32, i32* @x.53
  %82 = load i32, i32* @y.54
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %131

; <label>:89:                                     ; preds = %originalBBpart28
  %90 = load %union.tree_node*, %union.tree_node** %16, align 8
  %91 = bitcast %union.tree_node* %90 to %struct.tree_common*
  %92 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %91, i32 0, i32 0
  %93 = load %union.tree_node*, %union.tree_node** %92, align 8
  %94 = bitcast %union.tree_node* %93 to %struct.tree_list*
  %95 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %94, i32 0, i32 2
  %96 = load %union.tree_node*, %union.tree_node** %95, align 8
  %97 = call %union.tree_node* @c_strlen(%union.tree_node* %96)
  store %union.tree_node* %97, %union.tree_node** %18, align 8
  %98 = load %union.tree_node*, %union.tree_node** %18, align 8
  %99 = icmp eq %union.tree_node* %98, null
  br i1 %99, label %100, label %101

; <label>:100:                                    ; preds = %89
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %131

; <label>:101:                                    ; preds = %89
  %102 = load i32, i32* @x.53
  %103 = load i32, i32* @y.54
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %101
  %110 = load %union.tree_node*, %union.tree_node** %18, align 8
  %111 = call %union.tree_node* @size_int_wide(i64 1, i32 1)
  %112 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %110, %union.tree_node* %111)
  store %union.tree_node* %112, %union.tree_node** %18, align 8
  %113 = load %union.tree_node*, %union.tree_node** %16, align 8
  %114 = load %union.tree_node*, %union.tree_node** %18, align 8
  %115 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %114)
  %116 = call %union.tree_node* @chainon(%union.tree_node* %113, %union.tree_node* %115)
  %117 = load %union.tree_node*, %union.tree_node** %17, align 8
  %118 = load %union.tree_node*, %union.tree_node** %16, align 8
  %119 = call %union.tree_node* @build_function_call_expr(%union.tree_node* %117, %union.tree_node* %118)
  %120 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %121 = load i32, i32* %15, align 4
  %122 = call %struct.rtx_def* @expand_expr(%union.tree_node* %119, %struct.rtx_def* %120, i32 %121, i32 0)
  store %struct.rtx_def* %122, %struct.rtx_def** %12, align 8
  %123 = load i32, i32* @x.53
  %124 = load i32, i32* @y.54
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %131

; <label>:131:                                    ; preds = %originalBBpart216, %100, %originalBBpart212, %originalBBpart24
  %132 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  ret %struct.rtx_def* %132

originalBBalteredBB:                              ; preds = %originalBB, %3
  %133 = alloca %struct.rtx_def*, align 8
  %134 = alloca %union.tree_node*, align 8
  %135 = alloca %struct.rtx_def*, align 8
  %136 = alloca i32, align 4
  %137 = alloca %union.tree_node*, align 8
  %138 = alloca %union.tree_node*, align 8
  %139 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %134, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %135, align 8
  store i32 %2, i32* %136, align 4
  %140 = load %union.tree_node*, %union.tree_node** %134, align 8
  %141 = bitcast %union.tree_node* %140 to %struct.tree_exp*
  %142 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %141, i32 0, i32 2
  %143 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %142, i64 0, i64 1
  %144 = load %union.tree_node*, %union.tree_node** %143, align 8
  store %union.tree_node* %144, %union.tree_node** %137, align 8
  %145 = load %union.tree_node*, %union.tree_node** %137, align 8
  %146 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %145, i32 13, i32 13, i32 5)
  %147 = icmp ne i32 %146, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  %148 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 22), align 16
  store %union.tree_node* %148, %union.tree_node** %17, align 8
  %149 = load %union.tree_node*, %union.tree_node** %17, align 8
  %150 = icmp ne %union.tree_node* %149, null
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %72
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %101
  %151 = load %union.tree_node*, %union.tree_node** %18, align 8
  %152 = call %union.tree_node* @size_int_wide(i64 1, i32 1)
  %153 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %151, %union.tree_node* %152)
  store %union.tree_node* %153, %union.tree_node** %18, align 8
  %154 = load %union.tree_node*, %union.tree_node** %16, align 8
  %155 = load %union.tree_node*, %union.tree_node** %18, align 8
  %156 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %155)
  %157 = call %union.tree_node* @chainon(%union.tree_node* %154, %union.tree_node* %156)
  %158 = load %union.tree_node*, %union.tree_node** %17, align 8
  %159 = load %union.tree_node*, %union.tree_node** %16, align 8
  %160 = call %union.tree_node* @build_function_call_expr(%union.tree_node* %158, %union.tree_node* %159)
  %161 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %162 = load i32, i32* %15, align 4
  %163 = call %struct.rtx_def* @expand_expr(%union.tree_node* %160, %struct.rtx_def* %161, i32 %162, i32 0)
  store %struct.rtx_def* %163, %struct.rtx_def** %12, align 8
  br label %originalBB14
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_strncpy(%union.tree_node*, %struct.rtx_def*, i32) #0 {
  %4 = load i32, i32* @x.55
  %5 = load i32, i32* @y.56
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %union.tree_node*, align 8
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %union.tree_node*, align 8
  %17 = alloca %union.tree_node*, align 8
  %18 = alloca %union.tree_node*, align 8
  %19 = alloca %union.tree_node*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %13, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %14, align 8
  store i32 %2, i32* %15, align 4
  %23 = load %union.tree_node*, %union.tree_node** %13, align 8
  %24 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %23, i32 13, i32 13, i32 6, i32 5)
  %25 = icmp ne i32 %24, 0
  %26 = load i32, i32* @x.55
  %27 = load i32, i32* @y.56
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %25, label %35, label %34

; <label>:34:                                     ; preds = %originalBBpart2
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %255

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load i32, i32* @x.55
  %37 = load i32, i32* @y.56
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %35
  %44 = load %union.tree_node*, %union.tree_node** %13, align 8
  %45 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %46 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %45, i32 0, i32 0
  %47 = load %union.tree_node*, %union.tree_node** %46, align 8
  %48 = bitcast %union.tree_node* %47 to %struct.tree_list*
  %49 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %48, i32 0, i32 2
  %50 = load %union.tree_node*, %union.tree_node** %49, align 8
  %51 = call %union.tree_node* @c_strlen(%union.tree_node* %50)
  store %union.tree_node* %51, %union.tree_node** %16, align 8
  %52 = load %union.tree_node*, %union.tree_node** %13, align 8
  %53 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %54 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %53, i32 0, i32 0
  %55 = load %union.tree_node*, %union.tree_node** %54, align 8
  %56 = bitcast %union.tree_node* %55 to %struct.tree_common*
  %57 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %56, i32 0, i32 0
  %58 = load %union.tree_node*, %union.tree_node** %57, align 8
  %59 = bitcast %union.tree_node* %58 to %struct.tree_list*
  %60 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %59, i32 0, i32 2
  %61 = load %union.tree_node*, %union.tree_node** %60, align 8
  store %union.tree_node* %61, %union.tree_node** %17, align 8
  %62 = load %union.tree_node*, %union.tree_node** %17, align 8
  %63 = bitcast %union.tree_node* %62 to %struct.tree_common*
  %64 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %63, i32 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 255
  %67 = icmp ne i32 %66, 25
  %68 = load i32, i32* @x.55
  %69 = load i32, i32* @y.56
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %67, label %76, label %77

; <label>:76:                                     ; preds = %originalBBpart24
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %255

; <label>:77:                                     ; preds = %originalBBpart24
  %78 = load %union.tree_node*, %union.tree_node** %17, align 8
  %79 = call i32 @integer_zerop(%union.tree_node* %78)
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %114

; <label>:81:                                     ; preds = %77
  %82 = load i32, i32* @x.55
  %83 = load i32, i32* @y.56
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %81
  %90 = load %union.tree_node*, %union.tree_node** %13, align 8
  %91 = bitcast %union.tree_node* %90 to %struct.tree_common*
  %92 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %91, i32 0, i32 0
  %93 = load %union.tree_node*, %union.tree_node** %92, align 8
  %94 = bitcast %union.tree_node* %93 to %struct.tree_list*
  %95 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %94, i32 0, i32 2
  %96 = load %union.tree_node*, %union.tree_node** %95, align 8
  %97 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %98 = call %struct.rtx_def* @expand_expr(%union.tree_node* %96, %struct.rtx_def* %97, i32 0, i32 0)
  %99 = load %union.tree_node*, %union.tree_node** %13, align 8
  %100 = bitcast %union.tree_node* %99 to %struct.tree_list*
  %101 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %100, i32 0, i32 2
  %102 = load %union.tree_node*, %union.tree_node** %101, align 8
  %103 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %104 = load i32, i32* %15, align 4
  %105 = call %struct.rtx_def* @expand_expr(%union.tree_node* %102, %struct.rtx_def* %103, i32 %104, i32 0)
  store %struct.rtx_def* %105, %struct.rtx_def** %12, align 8
  %106 = load i32, i32* @x.55
  %107 = load i32, i32* @y.56
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %255

; <label>:114:                                    ; preds = %77
  %115 = load i32, i32* @x.55
  %116 = load i32, i32* @y.56
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %114
  %123 = load %union.tree_node*, %union.tree_node** %16, align 8
  %124 = icmp eq %union.tree_node* %123, null
  %125 = load i32, i32* @x.55
  %126 = load i32, i32* @y.56
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %124, label %140, label %133

; <label>:133:                                    ; preds = %originalBBpart212
  %134 = load %union.tree_node*, %union.tree_node** %16, align 8
  %135 = bitcast %union.tree_node* %134 to %struct.tree_common*
  %136 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %135, i32 0, i32 2
  %137 = load i32, i32* %136, align 8
  %138 = and i32 %137, 255
  %139 = icmp ne i32 %138, 25
  br i1 %139, label %140, label %141

; <label>:140:                                    ; preds = %133, %originalBBpart212
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %255

; <label>:141:                                    ; preds = %133
  %142 = load %union.tree_node*, %union.tree_node** %16, align 8
  %143 = call %union.tree_node* @size_int_wide(i64 1, i32 1)
  %144 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %142, %union.tree_node* %143)
  store %union.tree_node* %144, %union.tree_node** %16, align 8
  %145 = load %union.tree_node*, %union.tree_node** %16, align 8
  %146 = load %union.tree_node*, %union.tree_node** %17, align 8
  %147 = call i32 @tree_int_cst_lt(%union.tree_node* %145, %union.tree_node* %146)
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %227

; <label>:149:                                    ; preds = %141
  %150 = load i32, i32* @x.55
  %151 = load i32, i32* @y.56
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %149
  %158 = load %union.tree_node*, %union.tree_node** %13, align 8
  %159 = bitcast %union.tree_node* %158 to %struct.tree_list*
  %160 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %159, i32 0, i32 2
  %161 = load %union.tree_node*, %union.tree_node** %160, align 8
  store %union.tree_node* %161, %union.tree_node** %19, align 8
  %162 = load %union.tree_node*, %union.tree_node** %19, align 8
  %163 = call i32 @get_pointer_alignment(%union.tree_node* %162, i32 128)
  store i32 %163, i32* %20, align 4
  %164 = load %union.tree_node*, %union.tree_node** %13, align 8
  %165 = bitcast %union.tree_node* %164 to %struct.tree_common*
  %166 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %165, i32 0, i32 0
  %167 = load %union.tree_node*, %union.tree_node** %166, align 8
  %168 = bitcast %union.tree_node* %167 to %struct.tree_list*
  %169 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %168, i32 0, i32 2
  %170 = load %union.tree_node*, %union.tree_node** %169, align 8
  %171 = call i8* @c_getstr(%union.tree_node* %170)
  store i8* %171, i8** %21, align 8
  %172 = load i8*, i8** %21, align 8
  %173 = icmp ne i8* %172, null
  %174 = load i32, i32* @x.55
  %175 = load i32, i32* @y.56
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %173, label %182, label %196

; <label>:182:                                    ; preds = %originalBBpart216
  %183 = load i32, i32* %20, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %196, label %185

; <label>:185:                                    ; preds = %182
  %186 = load %union.tree_node*, %union.tree_node** %17, align 8
  %187 = call i32 @host_integerp(%union.tree_node* %186, i32 1)
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %189, label %196

; <label>:189:                                    ; preds = %185
  %190 = load %union.tree_node*, %union.tree_node** %17, align 8
  %191 = call i64 @tree_low_cst(%union.tree_node* %190, i32 1)
  %192 = load i8*, i8** %21, align 8
  %193 = load i32, i32* %20, align 4
  %194 = call i32 @can_store_by_pieces(i64 %191, %struct.rtx_def* (i8*, i64, i32)* @builtin_strncpy_read_str, i8* %192, i32 %193)
  %195 = icmp ne i32 %194, 0
  br i1 %195, label %213, label %196

; <label>:196:                                    ; preds = %189, %185, %182, %originalBBpart216
  %197 = load i32, i32* @x.55
  %198 = load i32, i32* @y.56
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %196
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  %205 = load i32, i32* @x.55
  %206 = load i32, i32* @y.56
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %255

; <label>:213:                                    ; preds = %189
  %214 = load %union.tree_node*, %union.tree_node** %19, align 8
  %215 = call %struct.rtx_def* @get_memory_rtx(%union.tree_node* %214)
  store %struct.rtx_def* %215, %struct.rtx_def** %22, align 8
  %216 = load %struct.rtx_def*, %struct.rtx_def** %22, align 8
  %217 = load %union.tree_node*, %union.tree_node** %17, align 8
  %218 = call i64 @tree_low_cst(%union.tree_node* %217, i32 1)
  %219 = load i8*, i8** %21, align 8
  %220 = load i32, i32* %20, align 4
  call void @store_by_pieces(%struct.rtx_def* %216, i64 %218, %struct.rtx_def* (i8*, i64, i32)* @builtin_strncpy_read_str, i8* %219, i32 %220)
  %221 = load %struct.rtx_def*, %struct.rtx_def** %22, align 8
  %222 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %221, i32 0, i32 1
  %223 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %222, i64 0, i64 0
  %224 = bitcast %union.rtunion_def* %223 to %struct.rtx_def**
  %225 = load %struct.rtx_def*, %struct.rtx_def** %224, align 8
  %226 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %225, %struct.rtx_def* null)
  store %struct.rtx_def* %226, %struct.rtx_def** %12, align 8
  br label %255

; <label>:227:                                    ; preds = %141
  %228 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 22), align 16
  store %union.tree_node* %228, %union.tree_node** %18, align 8
  %229 = load %union.tree_node*, %union.tree_node** %18, align 8
  %230 = icmp ne %union.tree_node* %229, null
  br i1 %230, label %232, label %231

; <label>:231:                                    ; preds = %227
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %255

; <label>:232:                                    ; preds = %227
  %233 = load i32, i32* @x.55
  %234 = load i32, i32* @y.56
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %232
  %241 = load %union.tree_node*, %union.tree_node** %18, align 8
  %242 = load %union.tree_node*, %union.tree_node** %13, align 8
  %243 = call %union.tree_node* @build_function_call_expr(%union.tree_node* %241, %union.tree_node* %242)
  %244 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %245 = load i32, i32* %15, align 4
  %246 = call %struct.rtx_def* @expand_expr(%union.tree_node* %243, %struct.rtx_def* %244, i32 %245, i32 0)
  store %struct.rtx_def* %246, %struct.rtx_def** %12, align 8
  %247 = load i32, i32* @x.55
  %248 = load i32, i32* @y.56
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %255

; <label>:255:                                    ; preds = %originalBBpart224, %231, %213, %originalBBpart220, %140, %originalBBpart28, %76, %34
  %256 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  ret %struct.rtx_def* %256

originalBBalteredBB:                              ; preds = %originalBB, %3
  %257 = alloca %struct.rtx_def*, align 8
  %258 = alloca %union.tree_node*, align 8
  %259 = alloca %struct.rtx_def*, align 8
  %260 = alloca i32, align 4
  %261 = alloca %union.tree_node*, align 8
  %262 = alloca %union.tree_node*, align 8
  %263 = alloca %union.tree_node*, align 8
  %264 = alloca %union.tree_node*, align 8
  %265 = alloca i32, align 4
  %266 = alloca i8*, align 8
  %267 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %258, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %259, align 8
  store i32 %2, i32* %260, align 4
  %268 = load %union.tree_node*, %union.tree_node** %258, align 8
  %269 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %268, i32 13, i32 13, i32 6, i32 5)
  %270 = icmp ne i32 %269, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %271 = load %union.tree_node*, %union.tree_node** %13, align 8
  %272 = bitcast %union.tree_node* %271 to %struct.tree_common*
  %273 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %272, i32 0, i32 0
  %274 = load %union.tree_node*, %union.tree_node** %273, align 8
  %275 = bitcast %union.tree_node* %274 to %struct.tree_list*
  %276 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %275, i32 0, i32 2
  %277 = load %union.tree_node*, %union.tree_node** %276, align 8
  %278 = call %union.tree_node* @c_strlen(%union.tree_node* %277)
  store %union.tree_node* %278, %union.tree_node** %16, align 8
  %279 = load %union.tree_node*, %union.tree_node** %13, align 8
  %280 = bitcast %union.tree_node* %279 to %struct.tree_common*
  %281 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %280, i32 0, i32 0
  %282 = load %union.tree_node*, %union.tree_node** %281, align 8
  %283 = bitcast %union.tree_node* %282 to %struct.tree_common*
  %284 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %283, i32 0, i32 0
  %285 = load %union.tree_node*, %union.tree_node** %284, align 8
  %286 = bitcast %union.tree_node* %285 to %struct.tree_list*
  %287 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %286, i32 0, i32 2
  %288 = load %union.tree_node*, %union.tree_node** %287, align 8
  store %union.tree_node* %288, %union.tree_node** %17, align 8
  %289 = load %union.tree_node*, %union.tree_node** %17, align 8
  %290 = bitcast %union.tree_node* %289 to %struct.tree_common*
  %291 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %290, i32 0, i32 2
  %292 = load i32, i32* %291, align 8
  %293 = and i32 %292, 255
  %294 = icmp ne i32 %293, 25
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %81
  %295 = load %union.tree_node*, %union.tree_node** %13, align 8
  %296 = bitcast %union.tree_node* %295 to %struct.tree_common*
  %297 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %296, i32 0, i32 0
  %298 = load %union.tree_node*, %union.tree_node** %297, align 8
  %299 = bitcast %union.tree_node* %298 to %struct.tree_list*
  %300 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %299, i32 0, i32 2
  %301 = load %union.tree_node*, %union.tree_node** %300, align 8
  %302 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %303 = call %struct.rtx_def* @expand_expr(%union.tree_node* %301, %struct.rtx_def* %302, i32 0, i32 0)
  %304 = load %union.tree_node*, %union.tree_node** %13, align 8
  %305 = bitcast %union.tree_node* %304 to %struct.tree_list*
  %306 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %305, i32 0, i32 2
  %307 = load %union.tree_node*, %union.tree_node** %306, align 8
  %308 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %309 = load i32, i32* %15, align 4
  %310 = call %struct.rtx_def* @expand_expr(%union.tree_node* %307, %struct.rtx_def* %308, i32 %309, i32 0)
  store %struct.rtx_def* %310, %struct.rtx_def** %12, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %114
  %311 = load %union.tree_node*, %union.tree_node** %16, align 8
  %312 = icmp eq %union.tree_node* %311, null
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %149
  %313 = load %union.tree_node*, %union.tree_node** %13, align 8
  %314 = bitcast %union.tree_node* %313 to %struct.tree_list*
  %315 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %314, i32 0, i32 2
  %316 = load %union.tree_node*, %union.tree_node** %315, align 8
  store %union.tree_node* %316, %union.tree_node** %19, align 8
  %317 = load %union.tree_node*, %union.tree_node** %19, align 8
  %318 = call i32 @get_pointer_alignment(%union.tree_node* %317, i32 128)
  store i32 %318, i32* %20, align 4
  %319 = load %union.tree_node*, %union.tree_node** %13, align 8
  %320 = bitcast %union.tree_node* %319 to %struct.tree_common*
  %321 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %320, i32 0, i32 0
  %322 = load %union.tree_node*, %union.tree_node** %321, align 8
  %323 = bitcast %union.tree_node* %322 to %struct.tree_list*
  %324 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %323, i32 0, i32 2
  %325 = load %union.tree_node*, %union.tree_node** %324, align 8
  %326 = call i8* @c_getstr(%union.tree_node* %325)
  store i8* %326, i8** %21, align 8
  %327 = load i8*, i8** %21, align 8
  %328 = icmp ne i8* %327, null
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %196
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %232
  %329 = load %union.tree_node*, %union.tree_node** %18, align 8
  %330 = load %union.tree_node*, %union.tree_node** %13, align 8
  %331 = call %union.tree_node* @build_function_call_expr(%union.tree_node* %329, %union.tree_node* %330)
  %332 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %333 = load i32, i32* %15, align 4
  %334 = call %struct.rtx_def* @expand_expr(%union.tree_node* %331, %struct.rtx_def* %332, i32 %333, i32 0)
  store %struct.rtx_def* %334, %struct.rtx_def** %12, align 8
  br label %originalBB22
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_strcat(%union.tree_node*, %struct.rtx_def*, i32) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %union.tree_node*, align 8
  %9 = alloca %union.tree_node*, align 8
  %10 = alloca i8*, align 8
  store %union.tree_node* %0, %union.tree_node** %5, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %6, align 8
  store i32 %2, i32* %7, align 4
  %11 = load %union.tree_node*, %union.tree_node** %5, align 8
  %12 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %11, i32 13, i32 13, i32 5)
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %15, label %14

; <label>:14:                                     ; preds = %3
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %58

; <label>:15:                                     ; preds = %3
  %16 = load %union.tree_node*, %union.tree_node** %5, align 8
  %17 = bitcast %union.tree_node* %16 to %struct.tree_list*
  %18 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %17, i32 0, i32 2
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8
  store %union.tree_node* %19, %union.tree_node** %8, align 8
  %20 = load %union.tree_node*, %union.tree_node** %5, align 8
  %21 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %21, i32 0, i32 0
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8
  %24 = bitcast %union.tree_node* %23 to %struct.tree_list*
  %25 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %24, i32 0, i32 2
  %26 = load %union.tree_node*, %union.tree_node** %25, align 8
  store %union.tree_node* %26, %union.tree_node** %9, align 8
  %27 = load %union.tree_node*, %union.tree_node** %9, align 8
  %28 = call i8* @c_getstr(%union.tree_node* %27)
  store i8* %28, i8** %10, align 8
  %29 = load i8*, i8** %10, align 8
  %30 = icmp ne i8* %29, null
  br i1 %30, label %31, label %57

; <label>:31:                                     ; preds = %15
  %32 = load i8*, i8** %10, align 8
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %57

; <label>:36:                                     ; preds = %31
  %37 = load i32, i32* @x.57
  %38 = load i32, i32* @y.58
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %36
  %45 = load %union.tree_node*, %union.tree_node** %8, align 8
  %46 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %47 = load i32, i32* %7, align 4
  %48 = call %struct.rtx_def* @expand_expr(%union.tree_node* %45, %struct.rtx_def* %46, i32 %47, i32 0)
  store %struct.rtx_def* %48, %struct.rtx_def** %4, align 8
  %49 = load i32, i32* @x.57
  %50 = load i32, i32* @y.58
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %58

; <label>:57:                                     ; preds = %31, %15
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %58

; <label>:58:                                     ; preds = %57, %originalBBpart2, %14
  %59 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  ret %struct.rtx_def* %59

originalBBalteredBB:                              ; preds = %originalBB, %36
  %60 = load %union.tree_node*, %union.tree_node** %8, align 8
  %61 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %62 = load i32, i32* %7, align 4
  %63 = call %struct.rtx_def* @expand_expr(%union.tree_node* %60, %struct.rtx_def* %61, i32 %62, i32 0)
  store %struct.rtx_def* %63, %struct.rtx_def** %4, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_strncat(%union.tree_node*, %struct.rtx_def*, i32) #0 {
  %4 = load i32, i32* @x.59
  %5 = load i32, i32* @y.60
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %union.tree_node*, align 8
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %union.tree_node*, align 8
  %17 = alloca %union.tree_node*, align 8
  %18 = alloca %union.tree_node*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca %union.tree_node*, align 8
  %21 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %13, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %14, align 8
  store i32 %2, i32* %15, align 4
  %22 = load %union.tree_node*, %union.tree_node** %13, align 8
  %23 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %22, i32 13, i32 13, i32 6, i32 5)
  %24 = icmp ne i32 %23, 0
  %25 = load i32, i32* @x.59
  %26 = load i32, i32* @y.60
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %34, label %33

; <label>:33:                                     ; preds = %originalBBpart2
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %145

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load %union.tree_node*, %union.tree_node** %13, align 8
  %36 = bitcast %union.tree_node* %35 to %struct.tree_list*
  %37 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %36, i32 0, i32 2
  %38 = load %union.tree_node*, %union.tree_node** %37, align 8
  store %union.tree_node* %38, %union.tree_node** %16, align 8
  %39 = load %union.tree_node*, %union.tree_node** %13, align 8
  %40 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %40, i32 0, i32 0
  %42 = load %union.tree_node*, %union.tree_node** %41, align 8
  %43 = bitcast %union.tree_node* %42 to %struct.tree_list*
  %44 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %43, i32 0, i32 2
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8
  store %union.tree_node* %45, %union.tree_node** %17, align 8
  %46 = load %union.tree_node*, %union.tree_node** %13, align 8
  %47 = bitcast %union.tree_node* %46 to %struct.tree_common*
  %48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %47, i32 0, i32 0
  %49 = load %union.tree_node*, %union.tree_node** %48, align 8
  %50 = bitcast %union.tree_node* %49 to %struct.tree_common*
  %51 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %50, i32 0, i32 0
  %52 = load %union.tree_node*, %union.tree_node** %51, align 8
  %53 = bitcast %union.tree_node* %52 to %struct.tree_list*
  %54 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %53, i32 0, i32 2
  %55 = load %union.tree_node*, %union.tree_node** %54, align 8
  store %union.tree_node* %55, %union.tree_node** %18, align 8
  %56 = load %union.tree_node*, %union.tree_node** %17, align 8
  %57 = call i8* @c_getstr(%union.tree_node* %56)
  store i8* %57, i8** %19, align 8
  %58 = load %union.tree_node*, %union.tree_node** %18, align 8
  %59 = call i32 @integer_zerop(%union.tree_node* %58)
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %85, label %61

; <label>:61:                                     ; preds = %34
  %62 = load i32, i32* @x.59
  %63 = load i32, i32* @y.60
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %61
  %70 = load i8*, i8** %19, align 8
  %71 = icmp ne i8* %70, null
  %72 = load i32, i32* @x.59
  %73 = load i32, i32* @y.60
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %71, label %80, label %96

; <label>:80:                                     ; preds = %originalBBpart24
  %81 = load i8*, i8** %19, align 8
  %82 = load i8, i8* %81, align 1
  %83 = sext i8 %82 to i32
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %96

; <label>:85:                                     ; preds = %80, %34
  %86 = load %union.tree_node*, %union.tree_node** %17, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %88 = call %struct.rtx_def* @expand_expr(%union.tree_node* %86, %struct.rtx_def* %87, i32 0, i32 0)
  %89 = load %union.tree_node*, %union.tree_node** %18, align 8
  %90 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %91 = call %struct.rtx_def* @expand_expr(%union.tree_node* %89, %struct.rtx_def* %90, i32 0, i32 0)
  %92 = load %union.tree_node*, %union.tree_node** %16, align 8
  %93 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %94 = load i32, i32* %15, align 4
  %95 = call %struct.rtx_def* @expand_expr(%union.tree_node* %92, %struct.rtx_def* %93, i32 %94, i32 0)
  store %struct.rtx_def* %95, %struct.rtx_def** %12, align 8
  br label %145

; <label>:96:                                     ; preds = %80, %originalBBpart24
  %97 = load %union.tree_node*, %union.tree_node** %18, align 8
  %98 = bitcast %union.tree_node* %97 to %struct.tree_common*
  %99 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %98, i32 0, i32 2
  %100 = load i32, i32* %99, align 8
  %101 = and i32 %100, 255
  %102 = icmp eq i32 %101, 25
  br i1 %102, label %103, label %144

; <label>:103:                                    ; preds = %96
  %104 = load i8*, i8** %19, align 8
  %105 = icmp ne i8* %104, null
  br i1 %105, label %106, label %144

; <label>:106:                                    ; preds = %103
  %107 = load i32, i32* @x.59
  %108 = load i32, i32* @y.60
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %106
  %115 = load %union.tree_node*, %union.tree_node** %18, align 8
  %116 = load i8*, i8** %19, align 8
  %117 = call i64 @strlen(i8* %116) #7
  %118 = call i32 @compare_tree_int(%union.tree_node* %115, i64 %117)
  %119 = icmp sge i32 %118, 0
  %120 = load i32, i32* @x.59
  %121 = load i32, i32* @y.60
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %119, label %128, label %144

; <label>:128:                                    ; preds = %originalBBpart28
  %129 = load %union.tree_node*, %union.tree_node** %16, align 8
  %130 = load %union.tree_node*, %union.tree_node** %17, align 8
  %131 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %130)
  %132 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %129, %union.tree_node* %131)
  store %union.tree_node* %132, %union.tree_node** %20, align 8
  %133 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 25), align 8
  store %union.tree_node* %133, %union.tree_node** %21, align 8
  %134 = load %union.tree_node*, %union.tree_node** %21, align 8
  %135 = icmp ne %union.tree_node* %134, null
  br i1 %135, label %137, label %136

; <label>:136:                                    ; preds = %128
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %145

; <label>:137:                                    ; preds = %128
  %138 = load %union.tree_node*, %union.tree_node** %21, align 8
  %139 = load %union.tree_node*, %union.tree_node** %20, align 8
  %140 = call %union.tree_node* @build_function_call_expr(%union.tree_node* %138, %union.tree_node* %139)
  %141 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %142 = load i32, i32* %15, align 4
  %143 = call %struct.rtx_def* @expand_expr(%union.tree_node* %140, %struct.rtx_def* %141, i32 %142, i32 0)
  store %struct.rtx_def* %143, %struct.rtx_def** %12, align 8
  br label %145

; <label>:144:                                    ; preds = %originalBBpart28, %103, %96
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %145

; <label>:145:                                    ; preds = %144, %137, %136, %85, %33
  %146 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  ret %struct.rtx_def* %146

originalBBalteredBB:                              ; preds = %originalBB, %3
  %147 = alloca %struct.rtx_def*, align 8
  %148 = alloca %union.tree_node*, align 8
  %149 = alloca %struct.rtx_def*, align 8
  %150 = alloca i32, align 4
  %151 = alloca %union.tree_node*, align 8
  %152 = alloca %union.tree_node*, align 8
  %153 = alloca %union.tree_node*, align 8
  %154 = alloca i8*, align 8
  %155 = alloca %union.tree_node*, align 8
  %156 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %148, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %149, align 8
  store i32 %2, i32* %150, align 4
  %157 = load %union.tree_node*, %union.tree_node** %148, align 8
  %158 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %157, i32 13, i32 13, i32 6, i32 5)
  %159 = icmp ne i32 %158, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %61
  %160 = load i8*, i8** %19, align 8
  %161 = icmp ne i8* %160, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %106
  %162 = load %union.tree_node*, %union.tree_node** %18, align 8
  %163 = load i8*, i8** %19, align 8
  %164 = call i64 @strlen(i8* %163) #7
  %165 = call i32 @compare_tree_int(%union.tree_node* %162, i64 %164)
  %166 = icmp sge i32 %165, 0
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_strspn(%union.tree_node*, %struct.rtx_def*, i32) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %union.tree_node*, align 8
  %9 = alloca %union.tree_node*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  store %union.tree_node* %0, %union.tree_node** %5, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %6, align 8
  store i32 %2, i32* %7, align 4
  %13 = load %union.tree_node*, %union.tree_node** %5, align 8
  %14 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %13, i32 13, i32 13, i32 5)
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %33, label %16

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.61
  %18 = load i32, i32* @y.62
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %16
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  %25 = load i32, i32* @x.61
  %26 = load i32, i32* @y.62
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %136

; <label>:33:                                     ; preds = %3
  %34 = load %union.tree_node*, %union.tree_node** %5, align 8
  %35 = bitcast %union.tree_node* %34 to %struct.tree_list*
  %36 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %35, i32 0, i32 2
  %37 = load %union.tree_node*, %union.tree_node** %36, align 8
  store %union.tree_node* %37, %union.tree_node** %8, align 8
  %38 = load %union.tree_node*, %union.tree_node** %5, align 8
  %39 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %39, i32 0, i32 0
  %41 = load %union.tree_node*, %union.tree_node** %40, align 8
  %42 = bitcast %union.tree_node* %41 to %struct.tree_list*
  %43 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %42, i32 0, i32 2
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8
  store %union.tree_node* %44, %union.tree_node** %9, align 8
  %45 = load %union.tree_node*, %union.tree_node** %8, align 8
  %46 = call i8* @c_getstr(%union.tree_node* %45)
  store i8* %46, i8** %10, align 8
  %47 = load %union.tree_node*, %union.tree_node** %9, align 8
  %48 = call i8* @c_getstr(%union.tree_node* %47)
  store i8* %48, i8** %11, align 8
  %49 = load i8*, i8** %10, align 8
  %50 = icmp ne i8* %49, null
  br i1 %50, label %51, label %79

; <label>:51:                                     ; preds = %33
  %52 = load i32, i32* @x.61
  %53 = load i32, i32* @y.62
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %51
  %60 = load i8*, i8** %11, align 8
  %61 = icmp ne i8* %60, null
  %62 = load i32, i32* @x.61
  %63 = load i32, i32* @y.62
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %61, label %70, label %79

; <label>:70:                                     ; preds = %originalBBpart24
  %71 = load i8*, i8** %10, align 8
  %72 = load i8*, i8** %11, align 8
  %73 = call i64 @strspn(i8* %71, i8* %72) #7
  store i64 %73, i64* %12, align 8
  %74 = load i64, i64* %12, align 8
  %75 = call %union.tree_node* @size_int_wide(i64 %74, i32 0)
  %76 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %77 = load i32, i32* %7, align 4
  %78 = call %struct.rtx_def* @expand_expr(%union.tree_node* %75, %struct.rtx_def* %76, i32 %77, i32 0)
  store %struct.rtx_def* %78, %struct.rtx_def** %4, align 8
  br label %136

; <label>:79:                                     ; preds = %originalBBpart24, %33
  %80 = load i8*, i8** %10, align 8
  %81 = icmp ne i8* %80, null
  br i1 %81, label %82, label %103

; <label>:82:                                     ; preds = %79
  %83 = load i32, i32* @x.61
  %84 = load i32, i32* @y.62
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %82
  %91 = load i8*, i8** %10, align 8
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i32
  %94 = icmp eq i32 %93, 0
  %95 = load i32, i32* @x.61
  %96 = load i32, i32* @y.62
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %94, label %127, label %103

; <label>:103:                                    ; preds = %originalBBpart28, %79
  %104 = load i32, i32* @x.61
  %105 = load i32, i32* @y.62
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %103
  %112 = load i8*, i8** %11, align 8
  %113 = icmp ne i8* %112, null
  %114 = load i32, i32* @x.61
  %115 = load i32, i32* @y.62
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %113, label %122, label %135

; <label>:122:                                    ; preds = %originalBBpart212
  %123 = load i8*, i8** %11, align 8
  %124 = load i8, i8* %123, align 1
  %125 = sext i8 %124 to i32
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %135

; <label>:127:                                    ; preds = %122, %originalBBpart28
  %128 = load %union.tree_node*, %union.tree_node** %8, align 8
  %129 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %130 = call %struct.rtx_def* @expand_expr(%union.tree_node* %128, %struct.rtx_def* %129, i32 0, i32 0)
  %131 = load %union.tree_node*, %union.tree_node** %9, align 8
  %132 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %133 = call %struct.rtx_def* @expand_expr(%union.tree_node* %131, %struct.rtx_def* %132, i32 0, i32 0)
  %134 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %134, %struct.rtx_def** %4, align 8
  br label %136

; <label>:135:                                    ; preds = %122, %originalBBpart212
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %136

; <label>:136:                                    ; preds = %135, %127, %70, %originalBBpart2
  %137 = load i32, i32* @x.61
  %138 = load i32, i32* @y.62
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %136
  %145 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %146 = load i32, i32* @x.61
  %147 = load i32, i32* @y.62
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret %struct.rtx_def* %145

originalBBalteredBB:                              ; preds = %originalBB, %16
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %51
  %154 = load i8*, i8** %11, align 8
  %155 = icmp ne i8* %154, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %82
  %156 = load i8*, i8** %10, align 8
  %157 = load i8, i8* %156, align 1
  %158 = sext i8 %157 to i32
  %159 = icmp eq i32 %158, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %103
  %160 = load i8*, i8** %11, align 8
  %161 = icmp ne i8* %160, null
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %136
  %162 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  br label %originalBB14
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_strcspn(%union.tree_node*, %struct.rtx_def*, i32) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %union.tree_node*, align 8
  %9 = alloca %union.tree_node*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %union.tree_node*, align 8
  %14 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %5, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %6, align 8
  store i32 %2, i32* %7, align 4
  %15 = load %union.tree_node*, %union.tree_node** %5, align 8
  %16 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %15, i32 13, i32 13, i32 5)
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %35, label %18

; <label>:18:                                     ; preds = %3
  %19 = load i32, i32* @x.63
  %20 = load i32, i32* @y.64
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %18
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  %27 = load i32, i32* @x.63
  %28 = load i32, i32* @y.64
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %197

; <label>:35:                                     ; preds = %3
  %36 = load %union.tree_node*, %union.tree_node** %5, align 8
  %37 = bitcast %union.tree_node* %36 to %struct.tree_list*
  %38 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %37, i32 0, i32 2
  %39 = load %union.tree_node*, %union.tree_node** %38, align 8
  store %union.tree_node* %39, %union.tree_node** %8, align 8
  %40 = load %union.tree_node*, %union.tree_node** %5, align 8
  %41 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %42 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %41, i32 0, i32 0
  %43 = load %union.tree_node*, %union.tree_node** %42, align 8
  %44 = bitcast %union.tree_node* %43 to %struct.tree_list*
  %45 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %44, i32 0, i32 2
  %46 = load %union.tree_node*, %union.tree_node** %45, align 8
  store %union.tree_node* %46, %union.tree_node** %9, align 8
  %47 = load %union.tree_node*, %union.tree_node** %8, align 8
  %48 = call i8* @c_getstr(%union.tree_node* %47)
  store i8* %48, i8** %10, align 8
  %49 = load %union.tree_node*, %union.tree_node** %9, align 8
  %50 = call i8* @c_getstr(%union.tree_node* %49)
  store i8* %50, i8** %11, align 8
  %51 = load i8*, i8** %10, align 8
  %52 = icmp ne i8* %51, null
  br i1 %52, label %53, label %97

; <label>:53:                                     ; preds = %35
  %54 = load i32, i32* @x.63
  %55 = load i32, i32* @y.64
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %53
  %62 = load i8*, i8** %11, align 8
  %63 = icmp ne i8* %62, null
  %64 = load i32, i32* @x.63
  %65 = load i32, i32* @y.64
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %63, label %72, label %97

; <label>:72:                                     ; preds = %originalBBpart24
  %73 = load i32, i32* @x.63
  %74 = load i32, i32* @y.64
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %72
  %81 = load i8*, i8** %10, align 8
  %82 = load i8*, i8** %11, align 8
  %83 = call i64 @strcspn(i8* %81, i8* %82) #7
  store i64 %83, i64* %12, align 8
  %84 = load i64, i64* %12, align 8
  %85 = call %union.tree_node* @size_int_wide(i64 %84, i32 0)
  %86 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %87 = load i32, i32* %7, align 4
  %88 = call %struct.rtx_def* @expand_expr(%union.tree_node* %85, %struct.rtx_def* %86, i32 %87, i32 0)
  store %struct.rtx_def* %88, %struct.rtx_def** %4, align 8
  %89 = load i32, i32* @x.63
  %90 = load i32, i32* @y.64
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %197

; <label>:97:                                     ; preds = %originalBBpart24, %35
  %98 = load i8*, i8** %10, align 8
  %99 = icmp ne i8* %98, null
  br i1 %99, label %100, label %110

; <label>:100:                                    ; preds = %97
  %101 = load i8*, i8** %10, align 8
  %102 = load i8, i8* %101, align 1
  %103 = sext i8 %102 to i32
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %110

; <label>:105:                                    ; preds = %100
  %106 = load %union.tree_node*, %union.tree_node** %9, align 8
  %107 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %108 = call %struct.rtx_def* @expand_expr(%union.tree_node* %106, %struct.rtx_def* %107, i32 0, i32 0)
  %109 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %109, %struct.rtx_def** %4, align 8
  br label %197

; <label>:110:                                    ; preds = %100, %97
  %111 = load i32, i32* @x.63
  %112 = load i32, i32* @y.64
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %110
  %119 = load i8*, i8** %11, align 8
  %120 = icmp ne i8* %119, null
  %121 = load i32, i32* @x.63
  %122 = load i32, i32* @y.64
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %120, label %129, label %180

; <label>:129:                                    ; preds = %originalBBpart212
  %130 = load i8*, i8** %11, align 8
  %131 = load i8, i8* %130, align 1
  %132 = sext i8 %131 to i32
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %180

; <label>:134:                                    ; preds = %129
  %135 = load i32, i32* @x.63
  %136 = load i32, i32* @y.64
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %134
  %143 = load %union.tree_node*, %union.tree_node** %8, align 8
  %144 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %143)
  store %union.tree_node* %144, %union.tree_node** %13, align 8
  %145 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 31), align 8
  store %union.tree_node* %145, %union.tree_node** %14, align 8
  %146 = load %union.tree_node*, %union.tree_node** %14, align 8
  %147 = icmp ne %union.tree_node* %146, null
  %148 = load i32, i32* @x.63
  %149 = load i32, i32* @y.64
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %147, label %157, label %156

; <label>:156:                                    ; preds = %originalBBpart216
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %197

; <label>:157:                                    ; preds = %originalBBpart216
  %158 = load i32, i32* @x.63
  %159 = load i32, i32* @y.64
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %157
  %166 = load %union.tree_node*, %union.tree_node** %14, align 8
  %167 = load %union.tree_node*, %union.tree_node** %13, align 8
  %168 = call %union.tree_node* @build_function_call_expr(%union.tree_node* %166, %union.tree_node* %167)
  %169 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %170 = load i32, i32* %7, align 4
  %171 = call %struct.rtx_def* @expand_expr(%union.tree_node* %168, %struct.rtx_def* %169, i32 %170, i32 0)
  store %struct.rtx_def* %171, %struct.rtx_def** %4, align 8
  %172 = load i32, i32* @x.63
  %173 = load i32, i32* @y.64
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %197

; <label>:180:                                    ; preds = %129, %originalBBpart212
  %181 = load i32, i32* @x.63
  %182 = load i32, i32* @y.64
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %180
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  %189 = load i32, i32* @x.63
  %190 = load i32, i32* @y.64
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %197

; <label>:197:                                    ; preds = %originalBBpart224, %originalBBpart220, %156, %105, %originalBBpart28, %originalBBpart2
  %198 = load i32, i32* @x.63
  %199 = load i32, i32* @y.64
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %197
  %206 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %207 = load i32, i32* @x.63
  %208 = load i32, i32* @y.64
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret %struct.rtx_def* %206

originalBBalteredBB:                              ; preds = %originalBB, %18
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %53
  %215 = load i8*, i8** %11, align 8
  %216 = icmp ne i8* %215, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %72
  %217 = load i8*, i8** %10, align 8
  %218 = load i8*, i8** %11, align 8
  %219 = call i64 @strcspn(i8* %217, i8* %218) #7
  store i64 %219, i64* %12, align 8
  %220 = load i64, i64* %12, align 8
  %221 = call %union.tree_node* @size_int_wide(i64 %220, i32 0)
  %222 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %223 = load i32, i32* %7, align 4
  %224 = call %struct.rtx_def* @expand_expr(%union.tree_node* %221, %struct.rtx_def* %222, i32 %223, i32 0)
  store %struct.rtx_def* %224, %struct.rtx_def** %4, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %110
  %225 = load i8*, i8** %11, align 8
  %226 = icmp ne i8* %225, null
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %134
  %227 = load %union.tree_node*, %union.tree_node** %8, align 8
  %228 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %227)
  store %union.tree_node* %228, %union.tree_node** %13, align 8
  %229 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 31), align 8
  store %union.tree_node* %229, %union.tree_node** %14, align 8
  %230 = load %union.tree_node*, %union.tree_node** %14, align 8
  %231 = icmp ne %union.tree_node* %230, null
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %157
  %232 = load %union.tree_node*, %union.tree_node** %14, align 8
  %233 = load %union.tree_node*, %union.tree_node** %13, align 8
  %234 = call %union.tree_node* @build_function_call_expr(%union.tree_node* %232, %union.tree_node* %233)
  %235 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %236 = load i32, i32* %7, align 4
  %237 = call %struct.rtx_def* @expand_expr(%union.tree_node* %234, %struct.rtx_def* %235, i32 %236, i32 0)
  store %struct.rtx_def* %237, %struct.rtx_def** %4, align 8
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %180
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %197
  %238 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  br label %originalBB26
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_strstr(%union.tree_node*, %struct.rtx_def*, i32) #0 {
  %4 = load i32, i32* @x.65
  %5 = load i32, i32* @y.66
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %union.tree_node*, align 8
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %union.tree_node*, align 8
  %17 = alloca %union.tree_node*, align 8
  %18 = alloca %union.tree_node*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  store %union.tree_node* %0, %union.tree_node** %13, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %14, align 8
  store i32 %2, i32* %15, align 4
  %22 = load %union.tree_node*, %union.tree_node** %13, align 8
  %23 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %22, i32 13, i32 13, i32 5)
  %24 = icmp ne i32 %23, 0
  %25 = load i32, i32* @x.65
  %26 = load i32, i32* @y.66
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %34, label %33

; <label>:33:                                     ; preds = %originalBBpart2
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %168

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load %union.tree_node*, %union.tree_node** %13, align 8
  %36 = bitcast %union.tree_node* %35 to %struct.tree_list*
  %37 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %36, i32 0, i32 2
  %38 = load %union.tree_node*, %union.tree_node** %37, align 8
  store %union.tree_node* %38, %union.tree_node** %16, align 8
  %39 = load %union.tree_node*, %union.tree_node** %13, align 8
  %40 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %40, i32 0, i32 0
  %42 = load %union.tree_node*, %union.tree_node** %41, align 8
  %43 = bitcast %union.tree_node* %42 to %struct.tree_list*
  %44 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %43, i32 0, i32 2
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8
  store %union.tree_node* %45, %union.tree_node** %17, align 8
  %46 = load %union.tree_node*, %union.tree_node** %17, align 8
  %47 = call i8* @c_getstr(%union.tree_node* %46)
  store i8* %47, i8** %20, align 8
  %48 = load i8*, i8** %20, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %51

; <label>:50:                                     ; preds = %34
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %168

; <label>:51:                                     ; preds = %34
  %52 = load %union.tree_node*, %union.tree_node** %16, align 8
  %53 = call i8* @c_getstr(%union.tree_node* %52)
  store i8* %53, i8** %19, align 8
  %54 = load i8*, i8** %19, align 8
  %55 = icmp ne i8* %54, null
  br i1 %55, label %56, label %97

; <label>:56:                                     ; preds = %51
  %57 = load i8*, i8** %19, align 8
  %58 = load i8*, i8** %20, align 8
  %59 = call i8* @strstr(i8* %57, i8* %58) #7
  store i8* %59, i8** %21, align 8
  %60 = load i8*, i8** %21, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %64

; <label>:62:                                     ; preds = %56
  %63 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %63, %struct.rtx_def** %12, align 8
  br label %168

; <label>:64:                                     ; preds = %56
  %65 = load i32, i32* @x.65
  %66 = load i32, i32* @y.66
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %64
  %73 = load %union.tree_node*, %union.tree_node** %16, align 8
  %74 = bitcast %union.tree_node* %73 to %struct.tree_common*
  %75 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %74, i32 0, i32 1
  %76 = load %union.tree_node*, %union.tree_node** %75, align 8
  %77 = load %union.tree_node*, %union.tree_node** %16, align 8
  %78 = load i8*, i8** %21, align 8
  %79 = load i8*, i8** %19, align 8
  %80 = ptrtoint i8* %78 to i64
  %81 = ptrtoint i8* %79 to i64
  %82 = sub i64 %80, %81
  %83 = call %union.tree_node* @size_int_wide(i64 %82, i32 1)
  %84 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %76, %union.tree_node* %77, %union.tree_node* %83)
  %85 = call %union.tree_node* @fold(%union.tree_node* %84)
  %86 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %87 = load i32, i32* %15, align 4
  %88 = call %struct.rtx_def* @expand_expr(%union.tree_node* %85, %struct.rtx_def* %86, i32 %87, i32 0)
  store %struct.rtx_def* %88, %struct.rtx_def** %12, align 8
  %89 = load i32, i32* @x.65
  %90 = load i32, i32* @y.66
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %168

; <label>:97:                                     ; preds = %51
  %98 = load i8*, i8** %20, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 0
  %100 = load i8, i8* %99, align 1
  %101 = sext i8 %100 to i32
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %108

; <label>:103:                                    ; preds = %97
  %104 = load %union.tree_node*, %union.tree_node** %16, align 8
  %105 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %106 = load i32, i32* %15, align 4
  %107 = call %struct.rtx_def* @expand_expr(%union.tree_node* %104, %struct.rtx_def* %105, i32 %106, i32 0)
  store %struct.rtx_def* %107, %struct.rtx_def** %12, align 8
  br label %168

; <label>:108:                                    ; preds = %97
  %109 = load i8*, i8** %20, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 1
  %111 = load i8, i8* %110, align 1
  %112 = sext i8 %111 to i32
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %131

; <label>:114:                                    ; preds = %108
  %115 = load i32, i32* @x.65
  %116 = load i32, i32* @y.66
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %114
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  %123 = load i32, i32* @x.65
  %124 = load i32, i32* @y.66
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %168

; <label>:131:                                    ; preds = %108
  %132 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 36), align 16
  store %union.tree_node* %132, %union.tree_node** %18, align 8
  %133 = load %union.tree_node*, %union.tree_node** %18, align 8
  %134 = icmp ne %union.tree_node* %133, null
  br i1 %134, label %152, label %135

; <label>:135:                                    ; preds = %131
  %136 = load i32, i32* @x.65
  %137 = load i32, i32* @y.66
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %135
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  %144 = load i32, i32* @x.65
  %145 = load i32, i32* @y.66
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %168

; <label>:152:                                    ; preds = %131
  %153 = load i8*, i8** %20, align 8
  %154 = getelementptr inbounds i8, i8* %153, i64 0
  %155 = load i8, i8* %154, align 1
  %156 = sext i8 %155 to i64
  %157 = call %union.tree_node* @build_int_2_wide(i64 %156, i64 0)
  %158 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %157)
  store %union.tree_node* %158, %union.tree_node** %13, align 8
  %159 = load %union.tree_node*, %union.tree_node** %16, align 8
  %160 = load %union.tree_node*, %union.tree_node** %13, align 8
  %161 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %159, %union.tree_node* %160)
  store %union.tree_node* %161, %union.tree_node** %13, align 8
  %162 = load %union.tree_node*, %union.tree_node** %18, align 8
  %163 = load %union.tree_node*, %union.tree_node** %13, align 8
  %164 = call %union.tree_node* @build_function_call_expr(%union.tree_node* %162, %union.tree_node* %163)
  %165 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %166 = load i32, i32* %15, align 4
  %167 = call %struct.rtx_def* @expand_expr(%union.tree_node* %164, %struct.rtx_def* %165, i32 %166, i32 0)
  store %struct.rtx_def* %167, %struct.rtx_def** %12, align 8
  br label %168

; <label>:168:                                    ; preds = %152, %originalBBpart212, %originalBBpart28, %103, %originalBBpart24, %62, %50, %33
  %169 = load i32, i32* @x.65
  %170 = load i32, i32* @y.66
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %168
  %177 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %178 = load i32, i32* @x.65
  %179 = load i32, i32* @y.66
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret %struct.rtx_def* %177

originalBBalteredBB:                              ; preds = %originalBB, %3
  %186 = alloca %struct.rtx_def*, align 8
  %187 = alloca %union.tree_node*, align 8
  %188 = alloca %struct.rtx_def*, align 8
  %189 = alloca i32, align 4
  %190 = alloca %union.tree_node*, align 8
  %191 = alloca %union.tree_node*, align 8
  %192 = alloca %union.tree_node*, align 8
  %193 = alloca i8*, align 8
  %194 = alloca i8*, align 8
  %195 = alloca i8*, align 8
  store %union.tree_node* %0, %union.tree_node** %187, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %188, align 8
  store i32 %2, i32* %189, align 4
  %196 = load %union.tree_node*, %union.tree_node** %187, align 8
  %197 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %196, i32 13, i32 13, i32 5)
  %198 = icmp ne i32 %197, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %64
  %199 = load %union.tree_node*, %union.tree_node** %16, align 8
  %200 = bitcast %union.tree_node* %199 to %struct.tree_common*
  %201 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %200, i32 0, i32 1
  %202 = load %union.tree_node*, %union.tree_node** %201, align 8
  %203 = load %union.tree_node*, %union.tree_node** %16, align 8
  %204 = load i8*, i8** %21, align 8
  %205 = load i8*, i8** %19, align 8
  %206 = ptrtoint i8* %204 to i64
  %207 = ptrtoint i8* %205 to i64
  %_ = sub i64 %206, %207
  %gen = mul i64 %_, %207
  %_2 = shl i64 %206, %207
  %208 = sub i64 %206, %207
  %209 = call %union.tree_node* @size_int_wide(i64 %208, i32 1)
  %210 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %202, %union.tree_node* %203, %union.tree_node* %209)
  %211 = call %union.tree_node* @fold(%union.tree_node* %210)
  %212 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %213 = load i32, i32* %15, align 4
  %214 = call %struct.rtx_def* @expand_expr(%union.tree_node* %211, %struct.rtx_def* %212, i32 %213, i32 0)
  store %struct.rtx_def* %214, %struct.rtx_def** %12, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %114
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %135
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %168
  %215 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  br label %originalBB14
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_strpbrk(%union.tree_node*, %struct.rtx_def*, i32) #0 {
  %4 = load i32, i32* @x.67
  %5 = load i32, i32* @y.68
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %union.tree_node*, align 8
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %union.tree_node*, align 8
  %17 = alloca %union.tree_node*, align 8
  %18 = alloca %union.tree_node*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  store %union.tree_node* %0, %union.tree_node** %13, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %14, align 8
  store i32 %2, i32* %15, align 4
  %22 = load %union.tree_node*, %union.tree_node** %13, align 8
  %23 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %22, i32 13, i32 13, i32 5)
  %24 = icmp ne i32 %23, 0
  %25 = load i32, i32* @x.67
  %26 = load i32, i32* @y.68
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %34, label %33

; <label>:33:                                     ; preds = %originalBBpart2
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %200

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i32, i32* @x.67
  %36 = load i32, i32* @y.68
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %34
  %43 = load %union.tree_node*, %union.tree_node** %13, align 8
  %44 = bitcast %union.tree_node* %43 to %struct.tree_list*
  %45 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %44, i32 0, i32 2
  %46 = load %union.tree_node*, %union.tree_node** %45, align 8
  store %union.tree_node* %46, %union.tree_node** %16, align 8
  %47 = load %union.tree_node*, %union.tree_node** %13, align 8
  %48 = bitcast %union.tree_node* %47 to %struct.tree_common*
  %49 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %48, i32 0, i32 0
  %50 = load %union.tree_node*, %union.tree_node** %49, align 8
  %51 = bitcast %union.tree_node* %50 to %struct.tree_list*
  %52 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %51, i32 0, i32 2
  %53 = load %union.tree_node*, %union.tree_node** %52, align 8
  store %union.tree_node* %53, %union.tree_node** %17, align 8
  %54 = load %union.tree_node*, %union.tree_node** %17, align 8
  %55 = call i8* @c_getstr(%union.tree_node* %54)
  store i8* %55, i8** %20, align 8
  %56 = load i8*, i8** %20, align 8
  %57 = icmp eq i8* %56, null
  %58 = load i32, i32* @x.67
  %59 = load i32, i32* @y.68
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %57, label %66, label %67

; <label>:66:                                     ; preds = %originalBBpart24
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %200

; <label>:67:                                     ; preds = %originalBBpart24
  %68 = load %union.tree_node*, %union.tree_node** %16, align 8
  %69 = call i8* @c_getstr(%union.tree_node* %68)
  store i8* %69, i8** %19, align 8
  %70 = load i8*, i8** %19, align 8
  %71 = icmp ne i8* %70, null
  br i1 %71, label %72, label %113

; <label>:72:                                     ; preds = %67
  %73 = load i8*, i8** %19, align 8
  %74 = load i8*, i8** %20, align 8
  %75 = call i8* @strpbrk(i8* %73, i8* %74) #7
  store i8* %75, i8** %21, align 8
  %76 = load i8*, i8** %21, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %78, label %96

; <label>:78:                                     ; preds = %72
  %79 = load i32, i32* @x.67
  %80 = load i32, i32* @y.68
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %78
  %87 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %87, %struct.rtx_def** %12, align 8
  %88 = load i32, i32* @x.67
  %89 = load i32, i32* @y.68
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %200

; <label>:96:                                     ; preds = %72
  %97 = load %union.tree_node*, %union.tree_node** %16, align 8
  %98 = bitcast %union.tree_node* %97 to %struct.tree_common*
  %99 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %98, i32 0, i32 1
  %100 = load %union.tree_node*, %union.tree_node** %99, align 8
  %101 = load %union.tree_node*, %union.tree_node** %16, align 8
  %102 = load i8*, i8** %21, align 8
  %103 = load i8*, i8** %19, align 8
  %104 = ptrtoint i8* %102 to i64
  %105 = ptrtoint i8* %103 to i64
  %106 = sub i64 %104, %105
  %107 = call %union.tree_node* @size_int_wide(i64 %106, i32 1)
  %108 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %100, %union.tree_node* %101, %union.tree_node* %107)
  %109 = call %union.tree_node* @fold(%union.tree_node* %108)
  %110 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %111 = load i32, i32* %15, align 4
  %112 = call %struct.rtx_def* @expand_expr(%union.tree_node* %109, %struct.rtx_def* %110, i32 %111, i32 0)
  store %struct.rtx_def* %112, %struct.rtx_def** %12, align 8
  br label %200

; <label>:113:                                    ; preds = %67
  %114 = load i8*, i8** %20, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 0
  %116 = load i8, i8* %115, align 1
  %117 = sext i8 %116 to i32
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %140

; <label>:119:                                    ; preds = %113
  %120 = load i32, i32* @x.67
  %121 = load i32, i32* @y.68
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %119
  %128 = load %union.tree_node*, %union.tree_node** %16, align 8
  %129 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %130 = call %struct.rtx_def* @expand_expr(%union.tree_node* %128, %struct.rtx_def* %129, i32 0, i32 0)
  %131 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %131, %struct.rtx_def** %12, align 8
  %132 = load i32, i32* @x.67
  %133 = load i32, i32* @y.68
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %200

; <label>:140:                                    ; preds = %113
  %141 = load i32, i32* @x.67
  %142 = load i32, i32* @y.68
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %140
  %149 = load i8*, i8** %20, align 8
  %150 = getelementptr inbounds i8, i8* %149, i64 1
  %151 = load i8, i8* %150, align 1
  %152 = sext i8 %151 to i32
  %153 = icmp ne i32 %152, 0
  %154 = load i32, i32* @x.67
  %155 = load i32, i32* @y.68
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %153, label %162, label %163

; <label>:162:                                    ; preds = %originalBBpart216
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %200

; <label>:163:                                    ; preds = %originalBBpart216
  %164 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 36), align 16
  store %union.tree_node* %164, %union.tree_node** %18, align 8
  %165 = load %union.tree_node*, %union.tree_node** %18, align 8
  %166 = icmp ne %union.tree_node* %165, null
  br i1 %166, label %184, label %167

; <label>:167:                                    ; preds = %163
  %168 = load i32, i32* @x.67
  %169 = load i32, i32* @y.68
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %167
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  %176 = load i32, i32* @x.67
  %177 = load i32, i32* @y.68
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %200

; <label>:184:                                    ; preds = %163
  %185 = load i8*, i8** %20, align 8
  %186 = getelementptr inbounds i8, i8* %185, i64 0
  %187 = load i8, i8* %186, align 1
  %188 = sext i8 %187 to i64
  %189 = call %union.tree_node* @build_int_2_wide(i64 %188, i64 0)
  %190 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %189)
  store %union.tree_node* %190, %union.tree_node** %13, align 8
  %191 = load %union.tree_node*, %union.tree_node** %16, align 8
  %192 = load %union.tree_node*, %union.tree_node** %13, align 8
  %193 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %191, %union.tree_node* %192)
  store %union.tree_node* %193, %union.tree_node** %13, align 8
  %194 = load %union.tree_node*, %union.tree_node** %18, align 8
  %195 = load %union.tree_node*, %union.tree_node** %13, align 8
  %196 = call %union.tree_node* @build_function_call_expr(%union.tree_node* %194, %union.tree_node* %195)
  %197 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %198 = load i32, i32* %15, align 4
  %199 = call %struct.rtx_def* @expand_expr(%union.tree_node* %196, %struct.rtx_def* %197, i32 %198, i32 0)
  store %struct.rtx_def* %199, %struct.rtx_def** %12, align 8
  br label %200

; <label>:200:                                    ; preds = %184, %originalBBpart220, %162, %originalBBpart212, %96, %originalBBpart28, %66, %33
  %201 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  ret %struct.rtx_def* %201

originalBBalteredBB:                              ; preds = %originalBB, %3
  %202 = alloca %struct.rtx_def*, align 8
  %203 = alloca %union.tree_node*, align 8
  %204 = alloca %struct.rtx_def*, align 8
  %205 = alloca i32, align 4
  %206 = alloca %union.tree_node*, align 8
  %207 = alloca %union.tree_node*, align 8
  %208 = alloca %union.tree_node*, align 8
  %209 = alloca i8*, align 8
  %210 = alloca i8*, align 8
  %211 = alloca i8*, align 8
  store %union.tree_node* %0, %union.tree_node** %203, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %204, align 8
  store i32 %2, i32* %205, align 4
  %212 = load %union.tree_node*, %union.tree_node** %203, align 8
  %213 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %212, i32 13, i32 13, i32 5)
  %214 = icmp ne i32 %213, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %215 = load %union.tree_node*, %union.tree_node** %13, align 8
  %216 = bitcast %union.tree_node* %215 to %struct.tree_list*
  %217 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %216, i32 0, i32 2
  %218 = load %union.tree_node*, %union.tree_node** %217, align 8
  store %union.tree_node* %218, %union.tree_node** %16, align 8
  %219 = load %union.tree_node*, %union.tree_node** %13, align 8
  %220 = bitcast %union.tree_node* %219 to %struct.tree_common*
  %221 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %220, i32 0, i32 0
  %222 = load %union.tree_node*, %union.tree_node** %221, align 8
  %223 = bitcast %union.tree_node* %222 to %struct.tree_list*
  %224 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %223, i32 0, i32 2
  %225 = load %union.tree_node*, %union.tree_node** %224, align 8
  store %union.tree_node* %225, %union.tree_node** %17, align 8
  %226 = load %union.tree_node*, %union.tree_node** %17, align 8
  %227 = call i8* @c_getstr(%union.tree_node* %226)
  store i8* %227, i8** %20, align 8
  %228 = load i8*, i8** %20, align 8
  %229 = icmp eq i8* %228, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %78
  %230 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %230, %struct.rtx_def** %12, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %119
  %231 = load %union.tree_node*, %union.tree_node** %16, align 8
  %232 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %233 = call %struct.rtx_def* @expand_expr(%union.tree_node* %231, %struct.rtx_def* %232, i32 0, i32 0)
  %234 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %234, %struct.rtx_def** %12, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %140
  %235 = load i8*, i8** %20, align 8
  %236 = getelementptr inbounds i8, i8* %235, i64 1
  %237 = load i8, i8* %236, align 1
  %238 = sext i8 %237 to i32
  %239 = icmp ne i32 %238, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %167
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %originalBB18
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_strchr(%union.tree_node*, %struct.rtx_def*, i32) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %union.tree_node*, align 8
  %9 = alloca %union.tree_node*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i8*, align 8
  store %union.tree_node* %0, %union.tree_node** %5, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %6, align 8
  store i32 %2, i32* %7, align 4
  %13 = load %union.tree_node*, %union.tree_node** %5, align 8
  %14 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %13, i32 13, i32 6, i32 5)
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %17, label %16

; <label>:16:                                     ; preds = %3
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %121

; <label>:17:                                     ; preds = %3
  %18 = load %union.tree_node*, %union.tree_node** %5, align 8
  %19 = bitcast %union.tree_node* %18 to %struct.tree_list*
  %20 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %19, i32 0, i32 2
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8
  store %union.tree_node* %21, %union.tree_node** %8, align 8
  %22 = load %union.tree_node*, %union.tree_node** %5, align 8
  %23 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %23, i32 0, i32 0
  %25 = load %union.tree_node*, %union.tree_node** %24, align 8
  %26 = bitcast %union.tree_node* %25 to %struct.tree_list*
  %27 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %26, i32 0, i32 2
  %28 = load %union.tree_node*, %union.tree_node** %27, align 8
  store %union.tree_node* %28, %union.tree_node** %9, align 8
  %29 = load %union.tree_node*, %union.tree_node** %9, align 8
  %30 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %30, i32 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 255
  %34 = icmp ne i32 %33, 25
  br i1 %34, label %35, label %36

; <label>:35:                                     ; preds = %17
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %121

; <label>:36:                                     ; preds = %17
  %37 = load i32, i32* @x.69
  %38 = load i32, i32* @y.70
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %36
  %45 = load %union.tree_node*, %union.tree_node** %8, align 8
  %46 = call i8* @c_getstr(%union.tree_node* %45)
  store i8* %46, i8** %10, align 8
  %47 = load i8*, i8** %10, align 8
  %48 = icmp ne i8* %47, null
  %49 = load i32, i32* @x.69
  %50 = load i32, i32* @y.70
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %48, label %57, label %104

; <label>:57:                                     ; preds = %originalBBpart2
  %58 = load %union.tree_node*, %union.tree_node** %9, align 8
  %59 = call i32 @target_char_cast(%union.tree_node* %58, i8* %11)
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %62

; <label>:61:                                     ; preds = %57
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %121

; <label>:62:                                     ; preds = %57
  %63 = load i8*, i8** %10, align 8
  %64 = load i8, i8* %11, align 1
  %65 = sext i8 %64 to i32
  %66 = call i8* @strchr(i8* %63, i32 %65) #7
  store i8* %66, i8** %12, align 8
  %67 = load i8*, i8** %12, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %69, label %87

; <label>:69:                                     ; preds = %62
  %70 = load i32, i32* @x.69
  %71 = load i32, i32* @y.70
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %69
  %78 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %78, %struct.rtx_def** %4, align 8
  %79 = load i32, i32* @x.69
  %80 = load i32, i32* @y.70
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %121

; <label>:87:                                     ; preds = %62
  %88 = load %union.tree_node*, %union.tree_node** %8, align 8
  %89 = bitcast %union.tree_node* %88 to %struct.tree_common*
  %90 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %89, i32 0, i32 1
  %91 = load %union.tree_node*, %union.tree_node** %90, align 8
  %92 = load %union.tree_node*, %union.tree_node** %8, align 8
  %93 = load i8*, i8** %12, align 8
  %94 = load i8*, i8** %10, align 8
  %95 = ptrtoint i8* %93 to i64
  %96 = ptrtoint i8* %94 to i64
  %97 = sub i64 %95, %96
  %98 = call %union.tree_node* @size_int_wide(i64 %97, i32 1)
  %99 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %91, %union.tree_node* %92, %union.tree_node* %98)
  %100 = call %union.tree_node* @fold(%union.tree_node* %99)
  %101 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %102 = load i32, i32* %7, align 4
  %103 = call %struct.rtx_def* @expand_expr(%union.tree_node* %100, %struct.rtx_def* %101, i32 %102, i32 0)
  store %struct.rtx_def* %103, %struct.rtx_def** %4, align 8
  br label %121

; <label>:104:                                    ; preds = %originalBBpart2
  %105 = load i32, i32* @x.69
  %106 = load i32, i32* @y.70
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %104
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  %113 = load i32, i32* @x.69
  %114 = load i32, i32* @y.70
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %121

; <label>:121:                                    ; preds = %originalBBpart28, %87, %originalBBpart24, %61, %35, %16
  %122 = load i32, i32* @x.69
  %123 = load i32, i32* @y.70
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %121
  %130 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %131 = load i32, i32* @x.69
  %132 = load i32, i32* @y.70
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret %struct.rtx_def* %130

originalBBalteredBB:                              ; preds = %originalBB, %36
  %139 = load %union.tree_node*, %union.tree_node** %8, align 8
  %140 = call i8* @c_getstr(%union.tree_node* %139)
  store i8* %140, i8** %10, align 8
  %141 = load i8*, i8** %10, align 8
  %142 = icmp ne i8* %141, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %69
  %143 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %143, %struct.rtx_def** %4, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %104
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %121
  %144 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_strrchr(%union.tree_node*, %struct.rtx_def*, i32) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %union.tree_node*, align 8
  %9 = alloca %union.tree_node*, align 8
  %10 = alloca %union.tree_node*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8*, align 8
  store %union.tree_node* %0, %union.tree_node** %5, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %6, align 8
  store i32 %2, i32* %7, align 4
  %14 = load %union.tree_node*, %union.tree_node** %5, align 8
  %15 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %14, i32 13, i32 6, i32 5)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %18, label %17

; <label>:17:                                     ; preds = %3
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %170

; <label>:18:                                     ; preds = %3
  %19 = load %union.tree_node*, %union.tree_node** %5, align 8
  %20 = bitcast %union.tree_node* %19 to %struct.tree_list*
  %21 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %20, i32 0, i32 2
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8
  store %union.tree_node* %22, %union.tree_node** %8, align 8
  %23 = load %union.tree_node*, %union.tree_node** %5, align 8
  %24 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %24, i32 0, i32 0
  %26 = load %union.tree_node*, %union.tree_node** %25, align 8
  %27 = bitcast %union.tree_node* %26 to %struct.tree_list*
  %28 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %27, i32 0, i32 2
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8
  store %union.tree_node* %29, %union.tree_node** %9, align 8
  %30 = load %union.tree_node*, %union.tree_node** %9, align 8
  %31 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %31, i32 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 255
  %35 = icmp ne i32 %34, 25
  br i1 %35, label %36, label %53

; <label>:36:                                     ; preds = %18
  %37 = load i32, i32* @x.71
  %38 = load i32, i32* @y.72
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %36
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  %45 = load i32, i32* @x.71
  %46 = load i32, i32* @y.72
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %170

; <label>:53:                                     ; preds = %18
  %54 = load %union.tree_node*, %union.tree_node** %8, align 8
  %55 = call i8* @c_getstr(%union.tree_node* %54)
  store i8* %55, i8** %11, align 8
  %56 = load i8*, i8** %11, align 8
  %57 = icmp ne i8* %56, null
  br i1 %57, label %58, label %121

; <label>:58:                                     ; preds = %53
  %59 = load %union.tree_node*, %union.tree_node** %9, align 8
  %60 = call i32 @target_char_cast(%union.tree_node* %59, i8* %12)
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %79

; <label>:62:                                     ; preds = %58
  %63 = load i32, i32* @x.71
  %64 = load i32, i32* @y.72
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %62
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  %71 = load i32, i32* @x.71
  %72 = load i32, i32* @y.72
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %170

; <label>:79:                                     ; preds = %58
  %80 = load i8*, i8** %11, align 8
  %81 = load i8, i8* %12, align 1
  %82 = sext i8 %81 to i32
  %83 = call i8* @strrchr(i8* %80, i32 %82) #7
  store i8* %83, i8** %13, align 8
  %84 = load i8*, i8** %13, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %86, label %104

; <label>:86:                                     ; preds = %79
  %87 = load i32, i32* @x.71
  %88 = load i32, i32* @y.72
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %86
  %95 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %95, %struct.rtx_def** %4, align 8
  %96 = load i32, i32* @x.71
  %97 = load i32, i32* @y.72
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %170

; <label>:104:                                    ; preds = %79
  %105 = load %union.tree_node*, %union.tree_node** %8, align 8
  %106 = bitcast %union.tree_node* %105 to %struct.tree_common*
  %107 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %106, i32 0, i32 1
  %108 = load %union.tree_node*, %union.tree_node** %107, align 8
  %109 = load %union.tree_node*, %union.tree_node** %8, align 8
  %110 = load i8*, i8** %13, align 8
  %111 = load i8*, i8** %11, align 8
  %112 = ptrtoint i8* %110 to i64
  %113 = ptrtoint i8* %111 to i64
  %114 = sub i64 %112, %113
  %115 = call %union.tree_node* @size_int_wide(i64 %114, i32 1)
  %116 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %108, %union.tree_node* %109, %union.tree_node* %115)
  %117 = call %union.tree_node* @fold(%union.tree_node* %116)
  %118 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %119 = load i32, i32* %7, align 4
  %120 = call %struct.rtx_def* @expand_expr(%union.tree_node* %117, %struct.rtx_def* %118, i32 %119, i32 0)
  store %struct.rtx_def* %120, %struct.rtx_def** %4, align 8
  br label %170

; <label>:121:                                    ; preds = %53
  %122 = load i32, i32* @x.71
  %123 = load i32, i32* @y.72
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %121
  %130 = load %union.tree_node*, %union.tree_node** %9, align 8
  %131 = call i32 @integer_zerop(%union.tree_node* %130)
  %132 = icmp ne i32 %131, 0
  %133 = load i32, i32* @x.71
  %134 = load i32, i32* @y.72
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %132, label %142, label %141

; <label>:141:                                    ; preds = %originalBBpart212
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %170

; <label>:142:                                    ; preds = %originalBBpart212
  %143 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 36), align 16
  store %union.tree_node* %143, %union.tree_node** %10, align 8
  %144 = load %union.tree_node*, %union.tree_node** %10, align 8
  %145 = icmp ne %union.tree_node* %144, null
  br i1 %145, label %147, label %146

; <label>:146:                                    ; preds = %142
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %170

; <label>:147:                                    ; preds = %142
  %148 = load i32, i32* @x.71
  %149 = load i32, i32* @y.72
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %147
  %156 = load %union.tree_node*, %union.tree_node** %10, align 8
  %157 = load %union.tree_node*, %union.tree_node** %5, align 8
  %158 = call %union.tree_node* @build_function_call_expr(%union.tree_node* %156, %union.tree_node* %157)
  %159 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %160 = load i32, i32* %7, align 4
  %161 = call %struct.rtx_def* @expand_expr(%union.tree_node* %158, %struct.rtx_def* %159, i32 %160, i32 0)
  store %struct.rtx_def* %161, %struct.rtx_def** %4, align 8
  %162 = load i32, i32* @x.71
  %163 = load i32, i32* @y.72
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %170

; <label>:170:                                    ; preds = %originalBBpart216, %146, %141, %104, %originalBBpart28, %originalBBpart24, %originalBBpart2, %17
  %171 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  ret %struct.rtx_def* %171

originalBBalteredBB:                              ; preds = %originalBB, %36
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %62
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %86
  %172 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %172, %struct.rtx_def** %4, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %121
  %173 = load %union.tree_node*, %union.tree_node** %9, align 8
  %174 = call i32 @integer_zerop(%union.tree_node* %173)
  %175 = icmp ne i32 %174, 0
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %147
  %176 = load %union.tree_node*, %union.tree_node** %10, align 8
  %177 = load %union.tree_node*, %union.tree_node** %5, align 8
  %178 = call %union.tree_node* @build_function_call_expr(%union.tree_node* %176, %union.tree_node* %177)
  %179 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %180 = load i32, i32* %7, align 4
  %181 = call %struct.rtx_def* @expand_expr(%union.tree_node* %178, %struct.rtx_def* %179, i32 %180, i32 0)
  store %struct.rtx_def* %181, %struct.rtx_def** %4, align 8
  br label %originalBB14
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_memcpy(%union.tree_node*, %struct.rtx_def*, i32) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %union.tree_node*, align 8
  %9 = alloca %union.tree_node*, align 8
  %10 = alloca %union.tree_node*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca %struct.rtx_def*, align 8
  %16 = alloca %struct.rtx_def*, align 8
  %17 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %5, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %6, align 8
  store i32 %2, i32* %7, align 4
  %18 = load %union.tree_node*, %union.tree_node** %5, align 8
  %19 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %18, i32 13, i32 13, i32 6, i32 5)
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %38, label %21

; <label>:21:                                     ; preds = %3
  %22 = load i32, i32* @x.73
  %23 = load i32, i32* @y.74
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %21
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  %30 = load i32, i32* @x.73
  %31 = load i32, i32* @y.74
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %191

; <label>:38:                                     ; preds = %3
  %39 = load %union.tree_node*, %union.tree_node** %5, align 8
  %40 = bitcast %union.tree_node* %39 to %struct.tree_list*
  %41 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %40, i32 0, i32 2
  %42 = load %union.tree_node*, %union.tree_node** %41, align 8
  store %union.tree_node* %42, %union.tree_node** %8, align 8
  %43 = load %union.tree_node*, %union.tree_node** %5, align 8
  %44 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %45 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %44, i32 0, i32 0
  %46 = load %union.tree_node*, %union.tree_node** %45, align 8
  %47 = bitcast %union.tree_node* %46 to %struct.tree_list*
  %48 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %47, i32 0, i32 2
  %49 = load %union.tree_node*, %union.tree_node** %48, align 8
  store %union.tree_node* %49, %union.tree_node** %9, align 8
  %50 = load %union.tree_node*, %union.tree_node** %5, align 8
  %51 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %52 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %51, i32 0, i32 0
  %53 = load %union.tree_node*, %union.tree_node** %52, align 8
  %54 = bitcast %union.tree_node* %53 to %struct.tree_common*
  %55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %54, i32 0, i32 0
  %56 = load %union.tree_node*, %union.tree_node** %55, align 8
  %57 = bitcast %union.tree_node* %56 to %struct.tree_list*
  %58 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %57, i32 0, i32 2
  %59 = load %union.tree_node*, %union.tree_node** %58, align 8
  store %union.tree_node* %59, %union.tree_node** %10, align 8
  %60 = load %union.tree_node*, %union.tree_node** %9, align 8
  %61 = call i32 @get_pointer_alignment(%union.tree_node* %60, i32 128)
  store i32 %61, i32* %12, align 4
  %62 = load %union.tree_node*, %union.tree_node** %8, align 8
  %63 = call i32 @get_pointer_alignment(%union.tree_node* %62, i32 128)
  store i32 %63, i32* %13, align 4
  %64 = load i32, i32* %13, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

; <label>:66:                                     ; preds = %38
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %191

; <label>:67:                                     ; preds = %38
  %68 = load %union.tree_node*, %union.tree_node** %10, align 8
  %69 = call i32 @host_integerp(%union.tree_node* %68, i32 1)
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %99

; <label>:71:                                     ; preds = %67
  %72 = load %union.tree_node*, %union.tree_node** %10, align 8
  %73 = call i64 @tree_low_cst(%union.tree_node* %72, i32 1)
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %99

; <label>:75:                                     ; preds = %71
  %76 = load i32, i32* @x.73
  %77 = load i32, i32* @y.74
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %75
  %84 = load %union.tree_node*, %union.tree_node** %9, align 8
  %85 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %86 = call %struct.rtx_def* @expand_expr(%union.tree_node* %84, %struct.rtx_def* %85, i32 0, i32 0)
  %87 = load %union.tree_node*, %union.tree_node** %8, align 8
  %88 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %89 = load i32, i32* %7, align 4
  %90 = call %struct.rtx_def* @expand_expr(%union.tree_node* %87, %struct.rtx_def* %88, i32 %89, i32 0)
  store %struct.rtx_def* %90, %struct.rtx_def** %4, align 8
  %91 = load i32, i32* @x.73
  %92 = load i32, i32* @y.74
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %191

; <label>:99:                                     ; preds = %71, %67
  %100 = load i32, i32* @x.73
  %101 = load i32, i32* @y.74
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %99
  %108 = load i32, i32* %12, align 4
  %109 = icmp eq i32 %108, 0
  %110 = load i32, i32* @x.73
  %111 = load i32, i32* @y.74
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %109, label %118, label %119

; <label>:118:                                    ; preds = %originalBBpart28
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %191

; <label>:119:                                    ; preds = %originalBBpart28
  %120 = load %union.tree_node*, %union.tree_node** %8, align 8
  %121 = call %struct.rtx_def* @get_memory_rtx(%union.tree_node* %120)
  store %struct.rtx_def* %121, %struct.rtx_def** %14, align 8
  %122 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %123 = load i32, i32* %13, align 4
  call void @set_mem_align(%struct.rtx_def* %122, i32 %123)
  %124 = load %union.tree_node*, %union.tree_node** %10, align 8
  %125 = call %struct.rtx_def* @expand_expr(%union.tree_node* %124, %struct.rtx_def* null, i32 0, i32 0)
  store %struct.rtx_def* %125, %struct.rtx_def** %17, align 8
  %126 = load %union.tree_node*, %union.tree_node** %9, align 8
  %127 = call i8* @c_getstr(%union.tree_node* %126)
  store i8* %127, i8** %11, align 8
  %128 = load i8*, i8** %11, align 8
  %129 = icmp ne i8* %128, null
  br i1 %129, label %130, label %171

; <label>:130:                                    ; preds = %119
  %131 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8
  %132 = bitcast %struct.rtx_def* %131 to i32*
  %133 = load i32, i32* %132, align 8
  %134 = and i32 %133, 65535
  %135 = icmp eq i32 %134, 54
  br i1 %135, label %136, label %171

; <label>:136:                                    ; preds = %130
  %137 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8
  %138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1
  %139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %138, i64 0, i64 0
  %140 = bitcast %union.rtunion_def* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = load i8*, i8** %11, align 8
  %143 = call i64 @strlen(i8* %142) #7
  %144 = add i64 %143, 1
  %145 = icmp ule i64 %141, %144
  br i1 %145, label %146, label %171

; <label>:146:                                    ; preds = %136
  %147 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8
  %148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1
  %149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %148, i64 0, i64 0
  %150 = bitcast %union.rtunion_def* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = load i8*, i8** %11, align 8
  %153 = load i32, i32* %13, align 4
  %154 = call i32 @can_store_by_pieces(i64 %151, %struct.rtx_def* (i8*, i64, i32)* @builtin_memcpy_read_str, i8* %152, i32 %153)
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %156, label %171

; <label>:156:                                    ; preds = %146
  %157 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %158 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8
  %159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %159, i64 0, i64 0
  %161 = bitcast %union.rtunion_def* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = load i8*, i8** %11, align 8
  %164 = load i32, i32* %13, align 4
  call void @store_by_pieces(%struct.rtx_def* %157, i64 %162, %struct.rtx_def* (i8*, i64, i32)* @builtin_memcpy_read_str, i8* %163, i32 %164)
  %165 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1
  %167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %166, i64 0, i64 0
  %168 = bitcast %union.rtunion_def* %167 to %struct.rtx_def**
  %169 = load %struct.rtx_def*, %struct.rtx_def** %168, align 8
  %170 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %169, %struct.rtx_def* null)
  store %struct.rtx_def* %170, %struct.rtx_def** %4, align 8
  br label %191

; <label>:171:                                    ; preds = %146, %136, %130, %119
  %172 = load %union.tree_node*, %union.tree_node** %9, align 8
  %173 = call %struct.rtx_def* @get_memory_rtx(%union.tree_node* %172)
  store %struct.rtx_def* %173, %struct.rtx_def** %15, align 8
  %174 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %175 = load i32, i32* %12, align 4
  call void @set_mem_align(%struct.rtx_def* %174, i32 %175)
  %176 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %177 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %178 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8
  %179 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %176, %struct.rtx_def* %177, %struct.rtx_def* %178)
  store %struct.rtx_def* %179, %struct.rtx_def** %16, align 8
  %180 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %181 = icmp eq %struct.rtx_def* %180, null
  br i1 %181, label %182, label %189

; <label>:182:                                    ; preds = %171
  %183 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1
  %185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %184, i64 0, i64 0
  %186 = bitcast %union.rtunion_def* %185 to %struct.rtx_def**
  %187 = load %struct.rtx_def*, %struct.rtx_def** %186, align 8
  %188 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %187, %struct.rtx_def* null)
  store %struct.rtx_def* %188, %struct.rtx_def** %16, align 8
  br label %189

; <label>:189:                                    ; preds = %182, %171
  %190 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  store %struct.rtx_def* %190, %struct.rtx_def** %4, align 8
  br label %191

; <label>:191:                                    ; preds = %189, %156, %118, %originalBBpart24, %66, %originalBBpart2
  %192 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  ret %struct.rtx_def* %192

originalBBalteredBB:                              ; preds = %originalBB, %21
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %75
  %193 = load %union.tree_node*, %union.tree_node** %9, align 8
  %194 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %195 = call %struct.rtx_def* @expand_expr(%union.tree_node* %193, %struct.rtx_def* %194, i32 0, i32 0)
  %196 = load %union.tree_node*, %union.tree_node** %8, align 8
  %197 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %198 = load i32, i32* %7, align 4
  %199 = call %struct.rtx_def* @expand_expr(%union.tree_node* %196, %struct.rtx_def* %197, i32 %198, i32 0)
  store %struct.rtx_def* %199, %struct.rtx_def** %4, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %99
  %200 = load i32, i32* %12, align 4
  %201 = icmp eq i32 %200, 0
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_memset(%union.tree_node*, %struct.rtx_def*, i32) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %union.tree_node*, align 8
  %9 = alloca %union.tree_node*, align 8
  %10 = alloca %union.tree_node*, align 8
  %11 = alloca %union.tree_node*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca %struct.rtx_def*, align 8
  %16 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %5, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %6, align 8
  store i32 %2, i32* %7, align 4
  %17 = load %union.tree_node*, %union.tree_node** %5, align 8
  %18 = bitcast %union.tree_node* %17 to %struct.tree_exp*
  %19 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %18, i32 0, i32 2
  %20 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %19, i64 0, i64 1
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8
  store %union.tree_node* %21, %union.tree_node** %8, align 8
  %22 = load %union.tree_node*, %union.tree_node** %8, align 8
  %23 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %22, i32 13, i32 6, i32 6, i32 5)
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %26, label %25

; <label>:25:                                     ; preds = %3
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %259

; <label>:26:                                     ; preds = %3
  %27 = load %union.tree_node*, %union.tree_node** %8, align 8
  %28 = bitcast %union.tree_node* %27 to %struct.tree_list*
  %29 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %28, i32 0, i32 2
  %30 = load %union.tree_node*, %union.tree_node** %29, align 8
  store %union.tree_node* %30, %union.tree_node** %9, align 8
  %31 = load %union.tree_node*, %union.tree_node** %8, align 8
  %32 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %33 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %32, i32 0, i32 0
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8
  %35 = bitcast %union.tree_node* %34 to %struct.tree_list*
  %36 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %35, i32 0, i32 2
  %37 = load %union.tree_node*, %union.tree_node** %36, align 8
  store %union.tree_node* %37, %union.tree_node** %10, align 8
  %38 = load %union.tree_node*, %union.tree_node** %8, align 8
  %39 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %39, i32 0, i32 0
  %41 = load %union.tree_node*, %union.tree_node** %40, align 8
  %42 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %43 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %42, i32 0, i32 0
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8
  %45 = bitcast %union.tree_node* %44 to %struct.tree_list*
  %46 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %45, i32 0, i32 2
  %47 = load %union.tree_node*, %union.tree_node** %46, align 8
  store %union.tree_node* %47, %union.tree_node** %11, align 8
  %48 = load %union.tree_node*, %union.tree_node** %9, align 8
  %49 = call i32 @get_pointer_alignment(%union.tree_node* %48, i32 128)
  store i32 %49, i32* %13, align 4
  %50 = load i32, i32* %13, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

; <label>:52:                                     ; preds = %26
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %259

; <label>:53:                                     ; preds = %26
  %54 = load %union.tree_node*, %union.tree_node** %11, align 8
  %55 = call i32 @host_integerp(%union.tree_node* %54, i32 1)
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %101

; <label>:57:                                     ; preds = %53
  %58 = load i32, i32* @x.75
  %59 = load i32, i32* @y.76
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %57
  %66 = load %union.tree_node*, %union.tree_node** %11, align 8
  %67 = call i64 @tree_low_cst(%union.tree_node* %66, i32 1)
  %68 = icmp eq i64 %67, 0
  %69 = load i32, i32* @x.75
  %70 = load i32, i32* @y.76
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %68, label %77, label %101

; <label>:77:                                     ; preds = %originalBBpart2
  %78 = load i32, i32* @x.75
  %79 = load i32, i32* @y.76
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %77
  %86 = load %union.tree_node*, %union.tree_node** %10, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %88 = call %struct.rtx_def* @expand_expr(%union.tree_node* %86, %struct.rtx_def* %87, i32 0, i32 0)
  %89 = load %union.tree_node*, %union.tree_node** %9, align 8
  %90 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %91 = load i32, i32* %7, align 4
  %92 = call %struct.rtx_def* @expand_expr(%union.tree_node* %89, %struct.rtx_def* %90, i32 %91, i32 0)
  store %struct.rtx_def* %92, %struct.rtx_def** %4, align 8
  %93 = load i32, i32* @x.75
  %94 = load i32, i32* @y.76
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %259

; <label>:101:                                    ; preds = %originalBBpart2, %53
  %102 = load i32, i32* @x.75
  %103 = load i32, i32* @y.76
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %101
  %110 = load %union.tree_node*, %union.tree_node** %10, align 8
  %111 = bitcast %union.tree_node* %110 to %struct.tree_common*
  %112 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %111, i32 0, i32 2
  %113 = load i32, i32* %112, align 8
  %114 = and i32 %113, 255
  %115 = icmp ne i32 %114, 25
  %116 = load i32, i32* @x.75
  %117 = load i32, i32* @y.76
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart212, label %originalBB6alteredBB

originalBBpart212:                                ; preds = %originalBB6
  br i1 %115, label %124, label %141

; <label>:124:                                    ; preds = %originalBBpart212
  %125 = load i32, i32* @x.75
  %126 = load i32, i32* @y.76
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %124
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  %133 = load i32, i32* @x.75
  %134 = load i32, i32* @y.76
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %259

; <label>:141:                                    ; preds = %originalBBpart212
  %142 = load i32, i32* @x.75
  %143 = load i32, i32* @y.76
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %141
  %150 = load %union.tree_node*, %union.tree_node** %10, align 8
  %151 = call i32 @target_char_cast(%union.tree_node* %150, i8* %12)
  %152 = icmp ne i32 %151, 0
  %153 = load i32, i32* @x.75
  %154 = load i32, i32* @y.76
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %152, label %161, label %178

; <label>:161:                                    ; preds = %originalBBpart220
  %162 = load i32, i32* @x.75
  %163 = load i32, i32* @y.76
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %161
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  %170 = load i32, i32* @x.75
  %171 = load i32, i32* @y.76
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %259

; <label>:178:                                    ; preds = %originalBBpart220
  %179 = load i8, i8* %12, align 1
  %180 = icmp ne i8 %179, 0
  br i1 %180, label %181, label %222

; <label>:181:                                    ; preds = %178
  %182 = load %union.tree_node*, %union.tree_node** %11, align 8
  %183 = call i32 @host_integerp(%union.tree_node* %182, i32 1)
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %186, label %185

; <label>:185:                                    ; preds = %181
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %259

; <label>:186:                                    ; preds = %181
  %187 = load i32, i32* @x.75
  %188 = load i32, i32* @y.76
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %186
  %195 = load %union.tree_node*, %union.tree_node** %11, align 8
  %196 = call i64 @tree_low_cst(%union.tree_node* %195, i32 1)
  %197 = load i32, i32* %13, align 4
  %198 = call i32 @can_store_by_pieces(i64 %196, %struct.rtx_def* (i8*, i64, i32)* @builtin_memset_read_str, i8* %12, i32 %197)
  %199 = icmp ne i32 %198, 0
  %200 = load i32, i32* @x.75
  %201 = load i32, i32* @y.76
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %199, label %209, label %208

; <label>:208:                                    ; preds = %originalBBpart228
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %259

; <label>:209:                                    ; preds = %originalBBpart228
  %210 = load %union.tree_node*, %union.tree_node** %9, align 8
  %211 = call %struct.rtx_def* @get_memory_rtx(%union.tree_node* %210)
  store %struct.rtx_def* %211, %struct.rtx_def** %14, align 8
  %212 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %213 = load %union.tree_node*, %union.tree_node** %11, align 8
  %214 = call i64 @tree_low_cst(%union.tree_node* %213, i32 1)
  %215 = load i32, i32* %13, align 4
  call void @store_by_pieces(%struct.rtx_def* %212, i64 %214, %struct.rtx_def* (i8*, i64, i32)* @builtin_memset_read_str, i8* %12, i32 %215)
  %216 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %217 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1
  %218 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %217, i64 0, i64 0
  %219 = bitcast %union.rtunion_def* %218 to %struct.rtx_def**
  %220 = load %struct.rtx_def*, %struct.rtx_def** %219, align 8
  %221 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %220, %struct.rtx_def* null)
  store %struct.rtx_def* %221, %struct.rtx_def** %4, align 8
  br label %259

; <label>:222:                                    ; preds = %178
  %223 = load %union.tree_node*, %union.tree_node** %11, align 8
  %224 = call %struct.rtx_def* @expand_expr(%union.tree_node* %223, %struct.rtx_def* null, i32 0, i32 0)
  store %struct.rtx_def* %224, %struct.rtx_def** %16, align 8
  %225 = load %union.tree_node*, %union.tree_node** %9, align 8
  %226 = call %struct.rtx_def* @get_memory_rtx(%union.tree_node* %225)
  store %struct.rtx_def* %226, %struct.rtx_def** %14, align 8
  %227 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %228 = load i32, i32* %13, align 4
  call void @set_mem_align(%struct.rtx_def* %227, i32 %228)
  %229 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %230 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %231 = call %struct.rtx_def* @clear_storage(%struct.rtx_def* %229, %struct.rtx_def* %230)
  store %struct.rtx_def* %231, %struct.rtx_def** %15, align 8
  %232 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  %233 = icmp eq %struct.rtx_def* %232, null
  br i1 %233, label %234, label %241

; <label>:234:                                    ; preds = %222
  %235 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %235, i32 0, i32 1
  %237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %236, i64 0, i64 0
  %238 = bitcast %union.rtunion_def* %237 to %struct.rtx_def**
  %239 = load %struct.rtx_def*, %struct.rtx_def** %238, align 8
  %240 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %239, %struct.rtx_def* null)
  store %struct.rtx_def* %240, %struct.rtx_def** %15, align 8
  br label %241

; <label>:241:                                    ; preds = %234, %222
  %242 = load i32, i32* @x.75
  %243 = load i32, i32* @y.76
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %241
  %250 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  store %struct.rtx_def* %250, %struct.rtx_def** %4, align 8
  %251 = load i32, i32* @x.75
  %252 = load i32, i32* @y.76
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %259

; <label>:259:                                    ; preds = %originalBBpart232, %209, %208, %185, %originalBBpart224, %originalBBpart216, %originalBBpart24, %52, %25
  %260 = load i32, i32* @x.75
  %261 = load i32, i32* @y.76
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %259
  %268 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %269 = load i32, i32* @x.75
  %270 = load i32, i32* @y.76
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  ret %struct.rtx_def* %268

originalBBalteredBB:                              ; preds = %originalBB, %57
  %277 = load %union.tree_node*, %union.tree_node** %11, align 8
  %278 = call i64 @tree_low_cst(%union.tree_node* %277, i32 1)
  %279 = icmp eq i64 %278, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %77
  %280 = load %union.tree_node*, %union.tree_node** %10, align 8
  %281 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %282 = call %struct.rtx_def* @expand_expr(%union.tree_node* %280, %struct.rtx_def* %281, i32 0, i32 0)
  %283 = load %union.tree_node*, %union.tree_node** %9, align 8
  %284 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %285 = load i32, i32* %7, align 4
  %286 = call %struct.rtx_def* @expand_expr(%union.tree_node* %283, %struct.rtx_def* %284, i32 %285, i32 0)
  store %struct.rtx_def* %286, %struct.rtx_def** %4, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %101
  %287 = load %union.tree_node*, %union.tree_node** %10, align 8
  %288 = bitcast %union.tree_node* %287 to %struct.tree_common*
  %289 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %288, i32 0, i32 2
  %290 = load i32, i32* %289, align 8
  %_ = sub i32 0, %290
  %gen = add i32 %_, 255
  %_7 = sub i32 0, %290
  %gen8 = add i32 %_7, 255
  %_9 = sub i32 0, %290
  %gen10 = add i32 %_9, 255
  %291 = and i32 %290, 255
  %292 = icmp ne i32 %291, 25
  br label %originalBB6

originalBB14alteredBB:                            ; preds = %originalBB14, %124
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %141
  %293 = load %union.tree_node*, %union.tree_node** %10, align 8
  %294 = call i32 @target_char_cast(%union.tree_node* %293, i8* %12)
  %295 = icmp ne i32 %294, 0
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %161
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %186
  %296 = load %union.tree_node*, %union.tree_node** %11, align 8
  %297 = call i64 @tree_low_cst(%union.tree_node* %296, i32 1)
  %298 = load i32, i32* %13, align 4
  %299 = call i32 @can_store_by_pieces(i64 %297, %struct.rtx_def* (i8*, i64, i32)* @builtin_memset_read_str, i8* %12, i32 %298)
  %300 = icmp ne i32 %299, 0
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %241
  %301 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8
  store %struct.rtx_def* %301, %struct.rtx_def** %4, align 8
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %259
  %302 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  br label %originalBB34
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_bzero(%union.tree_node*) #0 {
  %2 = alloca %struct.rtx_def*, align 8
  %3 = alloca %union.tree_node*, align 8
  %4 = alloca %union.tree_node*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %union.tree_node*, align 8
  %7 = alloca %union.tree_node*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %3, align 8
  %9 = load %union.tree_node*, %union.tree_node** %3, align 8
  %10 = bitcast %union.tree_node* %9 to %struct.tree_exp*
  %11 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %10, i32 0, i32 2
  %12 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %11, i64 0, i64 1
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8
  store %union.tree_node* %13, %union.tree_node** %4, align 8
  %14 = load %union.tree_node*, %union.tree_node** %4, align 8
  %15 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %14, i32 13, i32 6, i32 5)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %34, label %17

; <label>:17:                                     ; preds = %1
  %18 = load i32, i32* @x.77
  %19 = load i32, i32* @y.78
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %17
  store %struct.rtx_def* null, %struct.rtx_def** %2, align 8
  %26 = load i32, i32* @x.77
  %27 = load i32, i32* @y.78
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %70

; <label>:34:                                     ; preds = %1
  %35 = load %union.tree_node*, %union.tree_node** %4, align 8
  %36 = bitcast %union.tree_node* %35 to %struct.tree_list*
  %37 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %36, i32 0, i32 2
  %38 = load %union.tree_node*, %union.tree_node** %37, align 8
  store %union.tree_node* %38, %union.tree_node** %5, align 8
  %39 = load %union.tree_node*, %union.tree_node** %4, align 8
  %40 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %40, i32 0, i32 0
  %42 = load %union.tree_node*, %union.tree_node** %41, align 8
  %43 = bitcast %union.tree_node* %42 to %struct.tree_list*
  %44 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %43, i32 0, i32 2
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8
  store %union.tree_node* %45, %union.tree_node** %6, align 8
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16
  %47 = load %union.tree_node*, %union.tree_node** %6, align 8
  %48 = call %union.tree_node* @convert(%union.tree_node* %46, %union.tree_node* %47)
  %49 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %48)
  store %union.tree_node* %49, %union.tree_node** %7, align 8
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8
  %51 = load %union.tree_node*, %union.tree_node** %7, align 8
  %52 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %50, %union.tree_node* %51)
  store %union.tree_node* %52, %union.tree_node** %7, align 8
  %53 = load %union.tree_node*, %union.tree_node** %5, align 8
  %54 = load %union.tree_node*, %union.tree_node** %7, align 8
  %55 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %53, %union.tree_node* %54)
  store %union.tree_node* %55, %union.tree_node** %7, align 8
  %56 = load %union.tree_node*, %union.tree_node** %7, align 8
  %57 = load %union.tree_node*, %union.tree_node** %3, align 8
  %58 = bitcast %union.tree_node* %57 to %struct.tree_exp*
  %59 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %58, i32 0, i32 2
  %60 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %59, i64 0, i64 1
  store %union.tree_node* %56, %union.tree_node** %60, align 8
  %61 = load %union.tree_node*, %union.tree_node** %3, align 8
  %62 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %63 = call %struct.rtx_def* @expand_builtin_memset(%union.tree_node* %61, %struct.rtx_def* %62, i32 0)
  store %struct.rtx_def* %63, %struct.rtx_def** %8, align 8
  %64 = load %union.tree_node*, %union.tree_node** %4, align 8
  %65 = load %union.tree_node*, %union.tree_node** %3, align 8
  %66 = bitcast %union.tree_node* %65 to %struct.tree_exp*
  %67 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %66, i32 0, i32 2
  %68 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %67, i64 0, i64 1
  store %union.tree_node* %64, %union.tree_node** %68, align 8
  %69 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  store %struct.rtx_def* %69, %struct.rtx_def** %2, align 8
  br label %70

; <label>:70:                                     ; preds = %34, %originalBBpart2
  %71 = load i32, i32* @x.77
  %72 = load i32, i32* @y.78
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %70
  %79 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %80 = load i32, i32* @x.77
  %81 = load i32, i32* @y.78
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret %struct.rtx_def* %79

originalBBalteredBB:                              ; preds = %originalBB, %17
  store %struct.rtx_def* null, %struct.rtx_def** %2, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %70
  %88 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_strcmp(%union.tree_node*, %struct.rtx_def*, i32) #0 {
  %4 = load i32, i32* @x.79
  %5 = load i32, i32* @y.80
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca %union.tree_node*, align 8
  %14 = alloca %struct.rtx_def*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %union.tree_node*, align 8
  %17 = alloca %union.tree_node*, align 8
  %18 = alloca %union.tree_node*, align 8
  %19 = alloca %union.tree_node*, align 8
  %20 = alloca %union.tree_node*, align 8
  %21 = alloca %union.tree_node*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  %25 = alloca %union.tree_node*, align 8
  %26 = alloca %union.tree_node*, align 8
  %27 = alloca %union.tree_node*, align 8
  %28 = alloca %union.tree_node*, align 8
  %29 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %13, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %14, align 8
  store i32 %2, i32* %15, align 4
  %30 = load %union.tree_node*, %union.tree_node** %13, align 8
  %31 = bitcast %union.tree_node* %30 to %struct.tree_exp*
  %32 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %31, i32 0, i32 2
  %33 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %32, i64 0, i64 1
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8
  store %union.tree_node* %34, %union.tree_node** %16, align 8
  %35 = load %union.tree_node*, %union.tree_node** %16, align 8
  %36 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %35, i32 13, i32 13, i32 5)
  %37 = icmp ne i32 %36, 0
  %38 = load i32, i32* @x.79
  %39 = load i32, i32* @y.80
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %47, label %46

; <label>:46:                                     ; preds = %originalBBpart2
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %383

; <label>:47:                                     ; preds = %originalBBpart2
  %48 = load %union.tree_node*, %union.tree_node** %16, align 8
  %49 = bitcast %union.tree_node* %48 to %struct.tree_list*
  %50 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %49, i32 0, i32 2
  %51 = load %union.tree_node*, %union.tree_node** %50, align 8
  store %union.tree_node* %51, %union.tree_node** %17, align 8
  %52 = load %union.tree_node*, %union.tree_node** %16, align 8
  %53 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %54 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %53, i32 0, i32 0
  %55 = load %union.tree_node*, %union.tree_node** %54, align 8
  %56 = bitcast %union.tree_node* %55 to %struct.tree_list*
  %57 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %56, i32 0, i32 2
  %58 = load %union.tree_node*, %union.tree_node** %57, align 8
  store %union.tree_node* %58, %union.tree_node** %18, align 8
  %59 = load %union.tree_node*, %union.tree_node** %17, align 8
  %60 = call i8* @c_getstr(%union.tree_node* %59)
  store i8* %60, i8** %22, align 8
  %61 = load %union.tree_node*, %union.tree_node** %18, align 8
  %62 = call i8* @c_getstr(%union.tree_node* %61)
  store i8* %62, i8** %23, align 8
  %63 = load i8*, i8** %22, align 8
  %64 = icmp ne i8* %63, null
  br i1 %64, label %65, label %119

; <label>:65:                                     ; preds = %47
  %66 = load i8*, i8** %23, align 8
  %67 = icmp ne i8* %66, null
  br i1 %67, label %68, label %119

; <label>:68:                                     ; preds = %65
  %69 = load i32, i32* @x.79
  %70 = load i32, i32* @y.80
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %68
  %77 = load i8*, i8** %22, align 8
  %78 = load i8*, i8** %23, align 8
  %79 = call i32 @strcmp(i8* %77, i8* %78) #7
  store i32 %79, i32* %24, align 4
  %80 = load i32, i32* %24, align 4
  %81 = icmp slt i32 %80, 0
  %82 = load i32, i32* @x.79
  %83 = load i32, i32* @y.80
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %81, label %90, label %92

; <label>:90:                                     ; preds = %originalBBpart24
  %91 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8
  br label %117

; <label>:92:                                     ; preds = %originalBBpart24
  %93 = load i32, i32* %24, align 4
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %95, label %113

; <label>:95:                                     ; preds = %92
  %96 = load i32, i32* @x.79
  %97 = load i32, i32* @y.80
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %95
  %104 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8
  %105 = load i32, i32* @x.79
  %106 = load i32, i32* @y.80
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %115

; <label>:113:                                    ; preds = %92
  %114 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  br label %115

; <label>:115:                                    ; preds = %113, %originalBBpart28
  %116 = phi %struct.rtx_def* [ %104, %originalBBpart28 ], [ %114, %113 ]
  br label %117

; <label>:117:                                    ; preds = %115, %90
  %118 = phi %struct.rtx_def* [ %91, %90 ], [ %116, %115 ]
  store %struct.rtx_def* %118, %struct.rtx_def** %12, align 8
  br label %383

; <label>:119:                                    ; preds = %65, %47
  %120 = load i32, i32* @x.79
  %121 = load i32, i32* @y.80
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %119
  %128 = load i8*, i8** %22, align 8
  %129 = icmp ne i8* %128, null
  %130 = load i32, i32* @x.79
  %131 = load i32, i32* @y.80
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %129, label %138, label %159

; <label>:138:                                    ; preds = %originalBBpart212
  %139 = load i32, i32* @x.79
  %140 = load i32, i32* @y.80
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %138
  %147 = load i8*, i8** %22, align 8
  %148 = load i8, i8* %147, align 1
  %149 = sext i8 %148 to i32
  %150 = icmp eq i32 %149, 0
  %151 = load i32, i32* @x.79
  %152 = load i32, i32* @y.80
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %150, label %167, label %159

; <label>:159:                                    ; preds = %originalBBpart216, %originalBBpart212
  %160 = load i8*, i8** %23, align 8
  %161 = icmp ne i8* %160, null
  br i1 %161, label %162, label %197

; <label>:162:                                    ; preds = %159
  %163 = load i8*, i8** %23, align 8
  %164 = load i8, i8* %163, align 1
  %165 = sext i8 %164 to i32
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %197

; <label>:167:                                    ; preds = %162, %originalBBpart216
  %168 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16
  %169 = call %union.tree_node* @build_qualified_type(%union.tree_node* %168, i32 1)
  store %union.tree_node* %169, %union.tree_node** %25, align 8
  %170 = load %union.tree_node*, %union.tree_node** %25, align 8
  %171 = call %union.tree_node* @build_pointer_type(%union.tree_node* %170)
  store %union.tree_node* %171, %union.tree_node** %26, align 8
  %172 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %173 = load %union.tree_node*, %union.tree_node** %25, align 8
  %174 = load %union.tree_node*, %union.tree_node** %26, align 8
  %175 = load %union.tree_node*, %union.tree_node** %17, align 8
  %176 = call %union.tree_node* @build1(i32 115, %union.tree_node* %174, %union.tree_node* %175)
  %177 = call %union.tree_node* @build1(i32 41, %union.tree_node* %173, %union.tree_node* %176)
  %178 = call %union.tree_node* @build1(i32 114, %union.tree_node* %172, %union.tree_node* %177)
  %179 = call %union.tree_node* @fold(%union.tree_node* %178)
  store %union.tree_node* %179, %union.tree_node** %27, align 8
  %180 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %181 = load %union.tree_node*, %union.tree_node** %25, align 8
  %182 = load %union.tree_node*, %union.tree_node** %26, align 8
  %183 = load %union.tree_node*, %union.tree_node** %18, align 8
  %184 = call %union.tree_node* @build1(i32 115, %union.tree_node* %182, %union.tree_node* %183)
  %185 = call %union.tree_node* @build1(i32 41, %union.tree_node* %181, %union.tree_node* %184)
  %186 = call %union.tree_node* @build1(i32 114, %union.tree_node* %180, %union.tree_node* %185)
  %187 = call %union.tree_node* @fold(%union.tree_node* %186)
  store %union.tree_node* %187, %union.tree_node** %28, align 8
  %188 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %189 = load %union.tree_node*, %union.tree_node** %27, align 8
  %190 = load %union.tree_node*, %union.tree_node** %28, align 8
  %191 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %188, %union.tree_node* %189, %union.tree_node* %190)
  %192 = call %union.tree_node* @fold(%union.tree_node* %191)
  store %union.tree_node* %192, %union.tree_node** %29, align 8
  %193 = load %union.tree_node*, %union.tree_node** %29, align 8
  %194 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %195 = load i32, i32* %15, align 4
  %196 = call %struct.rtx_def* @expand_expr(%union.tree_node* %193, %struct.rtx_def* %194, i32 %195, i32 0)
  store %struct.rtx_def* %196, %struct.rtx_def** %12, align 8
  br label %383

; <label>:197:                                    ; preds = %162, %159
  %198 = load i32, i32* @x.79
  %199 = load i32, i32* @y.80
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %197
  %206 = load %union.tree_node*, %union.tree_node** %17, align 8
  %207 = call %union.tree_node* @c_strlen(%union.tree_node* %206)
  store %union.tree_node* %207, %union.tree_node** %19, align 8
  %208 = load %union.tree_node*, %union.tree_node** %18, align 8
  %209 = call %union.tree_node* @c_strlen(%union.tree_node* %208)
  store %union.tree_node* %209, %union.tree_node** %20, align 8
  %210 = load %union.tree_node*, %union.tree_node** %19, align 8
  %211 = icmp ne %union.tree_node* %210, null
  %212 = load i32, i32* @x.79
  %213 = load i32, i32* @y.80
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %211, label %220, label %240

; <label>:220:                                    ; preds = %originalBBpart220
  %221 = load i32, i32* @x.79
  %222 = load i32, i32* @y.80
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %220
  %229 = call %union.tree_node* @size_int_wide(i64 1, i32 1)
  %230 = load %union.tree_node*, %union.tree_node** %19, align 8
  %231 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %229, %union.tree_node* %230)
  store %union.tree_node* %231, %union.tree_node** %19, align 8
  %232 = load i32, i32* @x.79
  %233 = load i32, i32* @y.80
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %240

; <label>:240:                                    ; preds = %originalBBpart224, %originalBBpart220
  %241 = load %union.tree_node*, %union.tree_node** %20, align 8
  %242 = icmp ne %union.tree_node* %241, null
  br i1 %242, label %243, label %247

; <label>:243:                                    ; preds = %240
  %244 = call %union.tree_node* @size_int_wide(i64 1, i32 1)
  %245 = load %union.tree_node*, %union.tree_node** %20, align 8
  %246 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %244, %union.tree_node* %245)
  store %union.tree_node* %246, %union.tree_node** %20, align 8
  br label %247

; <label>:247:                                    ; preds = %243, %240
  %248 = load %union.tree_node*, %union.tree_node** %19, align 8
  %249 = icmp ne %union.tree_node* %248, null
  br i1 %249, label %250, label %257

; <label>:250:                                    ; preds = %247
  %251 = load %union.tree_node*, %union.tree_node** %19, align 8
  %252 = bitcast %union.tree_node* %251 to %struct.tree_common*
  %253 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %252, i32 0, i32 2
  %254 = load i32, i32* %253, align 8
  %255 = and i32 %254, 255
  %256 = icmp ne i32 %255, 25
  br i1 %256, label %257, label %324

; <label>:257:                                    ; preds = %250, %247
  %258 = load %union.tree_node*, %union.tree_node** %20, align 8
  %259 = icmp ne %union.tree_node* %258, null
  br i1 %259, label %260, label %286

; <label>:260:                                    ; preds = %257
  %261 = load %union.tree_node*, %union.tree_node** %20, align 8
  %262 = bitcast %union.tree_node* %261 to %struct.tree_common*
  %263 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %262, i32 0, i32 2
  %264 = load i32, i32* %263, align 8
  %265 = lshr i32 %264, 8
  %266 = and i32 %265, 1
  %267 = icmp ne i32 %266, 0
  br i1 %267, label %286, label %268

; <label>:268:                                    ; preds = %260
  %269 = load i32, i32* @x.79
  %270 = load i32, i32* @y.80
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %268
  %277 = load %union.tree_node*, %union.tree_node** %20, align 8
  store %union.tree_node* %277, %union.tree_node** %19, align 8
  %278 = load i32, i32* @x.79
  %279 = load i32, i32* @y.80
  %280 = sub i32 %278, 1
  %281 = mul i32 %278, %280
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %283, %284
  br i1 %285, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %323

; <label>:286:                                    ; preds = %260, %257
  %287 = load %union.tree_node*, %union.tree_node** %19, align 8
  %288 = icmp eq %union.tree_node* %287, null
  br i1 %288, label %289, label %306

; <label>:289:                                    ; preds = %286
  %290 = load i32, i32* @x.79
  %291 = load i32, i32* @y.80
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %289
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  %298 = load i32, i32* @x.79
  %299 = load i32, i32* @y.80
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %383

; <label>:306:                                    ; preds = %286
  %307 = load i32, i32* @x.79
  %308 = load i32, i32* @y.80
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %306
  %315 = load i32, i32* @x.79
  %316 = load i32, i32* @y.80
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %323

; <label>:323:                                    ; preds = %originalBBpart236, %originalBBpart228
  br label %342

; <label>:324:                                    ; preds = %250
  %325 = load %union.tree_node*, %union.tree_node** %20, align 8
  %326 = icmp ne %union.tree_node* %325, null
  br i1 %326, label %327, label %341

; <label>:327:                                    ; preds = %324
  %328 = load %union.tree_node*, %union.tree_node** %20, align 8
  %329 = bitcast %union.tree_node* %328 to %struct.tree_common*
  %330 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %329, i32 0, i32 2
  %331 = load i32, i32* %330, align 8
  %332 = and i32 %331, 255
  %333 = icmp eq i32 %332, 25
  br i1 %333, label %334, label %341

; <label>:334:                                    ; preds = %327
  %335 = load %union.tree_node*, %union.tree_node** %20, align 8
  %336 = load %union.tree_node*, %union.tree_node** %19, align 8
  %337 = call i32 @tree_int_cst_lt(%union.tree_node* %335, %union.tree_node* %336)
  %338 = icmp ne i32 %337, 0
  br i1 %338, label %339, label %341

; <label>:339:                                    ; preds = %334
  %340 = load %union.tree_node*, %union.tree_node** %20, align 8
  store %union.tree_node* %340, %union.tree_node** %19, align 8
  br label %341

; <label>:341:                                    ; preds = %339, %334, %327, %324
  br label %342

; <label>:342:                                    ; preds = %341, %323
  %343 = load i32, i32* @x.79
  %344 = load i32, i32* @y.80
  %345 = sub i32 %343, 1
  %346 = mul i32 %343, %345
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %348, %349
  br i1 %350, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %342
  %351 = load %union.tree_node*, %union.tree_node** %19, align 8
  %352 = bitcast %union.tree_node* %351 to %struct.tree_common*
  %353 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %352, i32 0, i32 2
  %354 = load i32, i32* %353, align 8
  %355 = lshr i32 %354, 8
  %356 = and i32 %355, 1
  %357 = icmp ne i32 %356, 0
  %358 = load i32, i32* @x.79
  %359 = load i32, i32* @y.80
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBBpart248, label %originalBB38alteredBB

originalBBpart248:                                ; preds = %originalBB38
  br i1 %357, label %366, label %367

; <label>:366:                                    ; preds = %originalBBpart248
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %383

; <label>:367:                                    ; preds = %originalBBpart248
  %368 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 23), align 8
  store %union.tree_node* %368, %union.tree_node** %21, align 8
  %369 = load %union.tree_node*, %union.tree_node** %21, align 8
  %370 = icmp ne %union.tree_node* %369, null
  br i1 %370, label %372, label %371

; <label>:371:                                    ; preds = %367
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %383

; <label>:372:                                    ; preds = %367
  %373 = load %union.tree_node*, %union.tree_node** %16, align 8
  %374 = load %union.tree_node*, %union.tree_node** %19, align 8
  %375 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %374)
  %376 = call %union.tree_node* @chainon(%union.tree_node* %373, %union.tree_node* %375)
  %377 = load %union.tree_node*, %union.tree_node** %21, align 8
  %378 = load %union.tree_node*, %union.tree_node** %16, align 8
  %379 = call %union.tree_node* @build_function_call_expr(%union.tree_node* %377, %union.tree_node* %378)
  %380 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %381 = load i32, i32* %15, align 4
  %382 = call %struct.rtx_def* @expand_expr(%union.tree_node* %379, %struct.rtx_def* %380, i32 %381, i32 0)
  store %struct.rtx_def* %382, %struct.rtx_def** %12, align 8
  br label %383

; <label>:383:                                    ; preds = %372, %371, %366, %originalBBpart232, %167, %117, %46
  %384 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  ret %struct.rtx_def* %384

originalBBalteredBB:                              ; preds = %originalBB, %3
  %385 = alloca %struct.rtx_def*, align 8
  %386 = alloca %union.tree_node*, align 8
  %387 = alloca %struct.rtx_def*, align 8
  %388 = alloca i32, align 4
  %389 = alloca %union.tree_node*, align 8
  %390 = alloca %union.tree_node*, align 8
  %391 = alloca %union.tree_node*, align 8
  %392 = alloca %union.tree_node*, align 8
  %393 = alloca %union.tree_node*, align 8
  %394 = alloca %union.tree_node*, align 8
  %395 = alloca i8*, align 8
  %396 = alloca i8*, align 8
  %397 = alloca i32, align 4
  %398 = alloca %union.tree_node*, align 8
  %399 = alloca %union.tree_node*, align 8
  %400 = alloca %union.tree_node*, align 8
  %401 = alloca %union.tree_node*, align 8
  %402 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %386, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %387, align 8
  store i32 %2, i32* %388, align 4
  %403 = load %union.tree_node*, %union.tree_node** %386, align 8
  %404 = bitcast %union.tree_node* %403 to %struct.tree_exp*
  %405 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %404, i32 0, i32 2
  %406 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %405, i64 0, i64 1
  %407 = load %union.tree_node*, %union.tree_node** %406, align 8
  store %union.tree_node* %407, %union.tree_node** %389, align 8
  %408 = load %union.tree_node*, %union.tree_node** %389, align 8
  %409 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %408, i32 13, i32 13, i32 5)
  %410 = icmp ne i32 %409, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %68
  %411 = load i8*, i8** %22, align 8
  %412 = load i8*, i8** %23, align 8
  %413 = call i32 @strcmp(i8* %411, i8* %412) #7
  store i32 %413, i32* %24, align 4
  %414 = load i32, i32* %24, align 4
  %415 = icmp slt i32 %414, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %95
  %416 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %119
  %417 = load i8*, i8** %22, align 8
  %418 = icmp ne i8* %417, null
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %138
  %419 = load i8*, i8** %22, align 8
  %420 = load i8, i8* %419, align 1
  %421 = sext i8 %420 to i32
  %422 = icmp eq i32 %421, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %197
  %423 = load %union.tree_node*, %union.tree_node** %17, align 8
  %424 = call %union.tree_node* @c_strlen(%union.tree_node* %423)
  store %union.tree_node* %424, %union.tree_node** %19, align 8
  %425 = load %union.tree_node*, %union.tree_node** %18, align 8
  %426 = call %union.tree_node* @c_strlen(%union.tree_node* %425)
  store %union.tree_node* %426, %union.tree_node** %20, align 8
  %427 = load %union.tree_node*, %union.tree_node** %19, align 8
  %428 = icmp ne %union.tree_node* %427, null
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %220
  %429 = call %union.tree_node* @size_int_wide(i64 1, i32 1)
  %430 = load %union.tree_node*, %union.tree_node** %19, align 8
  %431 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %429, %union.tree_node* %430)
  store %union.tree_node* %431, %union.tree_node** %19, align 8
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %268
  %432 = load %union.tree_node*, %union.tree_node** %20, align 8
  store %union.tree_node* %432, %union.tree_node** %19, align 8
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %289
  store %struct.rtx_def* null, %struct.rtx_def** %12, align 8
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %306
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %342
  %433 = load %union.tree_node*, %union.tree_node** %19, align 8
  %434 = bitcast %union.tree_node* %433 to %struct.tree_common*
  %435 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %434, i32 0, i32 2
  %436 = load i32, i32* %435, align 8
  %_ = shl i32 %436, 8
  %_39 = shl i32 %436, 8
  %437 = lshr i32 %436, 8
  %_40 = shl i32 %437, 1
  %_41 = sub i32 %437, 1
  %gen = mul i32 %_41, 1
  %_42 = sub i32 0, %437
  %gen43 = add i32 %_42, 1
  %_44 = sub i32 %437, 1
  %gen45 = mul i32 %_44, 1
  %_46 = shl i32 %437, 1
  %438 = and i32 %437, 1
  %439 = icmp ne i32 %438, 0
  br label %originalBB38
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_strncmp(%union.tree_node*, %struct.rtx_def*, i32) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %union.tree_node*, align 8
  %9 = alloca %union.tree_node*, align 8
  %10 = alloca %union.tree_node*, align 8
  %11 = alloca %union.tree_node*, align 8
  %12 = alloca %union.tree_node*, align 8
  %13 = alloca %union.tree_node*, align 8
  %14 = alloca %union.tree_node*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %union.tree_node*, align 8
  %19 = alloca %union.tree_node*, align 8
  %20 = alloca %union.tree_node*, align 8
  %21 = alloca %union.tree_node*, align 8
  %22 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %5, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %6, align 8
  store i32 %2, i32* %7, align 4
  %23 = load %union.tree_node*, %union.tree_node** %5, align 8
  %24 = bitcast %union.tree_node* %23 to %struct.tree_exp*
  %25 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %24, i32 0, i32 2
  %26 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %25, i64 0, i64 1
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8
  store %union.tree_node* %27, %union.tree_node** %8, align 8
  store %union.tree_node* null, %union.tree_node** %11, align 8
  %28 = load %union.tree_node*, %union.tree_node** %8, align 8
  %29 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %28, i32 13, i32 13, i32 6, i32 5)
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %32, label %31

; <label>:31:                                     ; preds = %3
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %415

; <label>:32:                                     ; preds = %3
  %33 = load %union.tree_node*, %union.tree_node** %8, align 8
  %34 = bitcast %union.tree_node* %33 to %struct.tree_list*
  %35 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %34, i32 0, i32 2
  %36 = load %union.tree_node*, %union.tree_node** %35, align 8
  store %union.tree_node* %36, %union.tree_node** %12, align 8
  %37 = load %union.tree_node*, %union.tree_node** %8, align 8
  %38 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %39 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %38, i32 0, i32 0
  %40 = load %union.tree_node*, %union.tree_node** %39, align 8
  %41 = bitcast %union.tree_node* %40 to %struct.tree_list*
  %42 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %41, i32 0, i32 2
  %43 = load %union.tree_node*, %union.tree_node** %42, align 8
  store %union.tree_node* %43, %union.tree_node** %13, align 8
  %44 = load %union.tree_node*, %union.tree_node** %8, align 8
  %45 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %46 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %45, i32 0, i32 0
  %47 = load %union.tree_node*, %union.tree_node** %46, align 8
  %48 = bitcast %union.tree_node* %47 to %struct.tree_common*
  %49 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %48, i32 0, i32 0
  %50 = load %union.tree_node*, %union.tree_node** %49, align 8
  %51 = bitcast %union.tree_node* %50 to %struct.tree_list*
  %52 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %51, i32 0, i32 2
  %53 = load %union.tree_node*, %union.tree_node** %52, align 8
  store %union.tree_node* %53, %union.tree_node** %14, align 8
  %54 = load %union.tree_node*, %union.tree_node** %14, align 8
  %55 = call i32 @host_integerp(%union.tree_node* %54, i32 1)
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %69

; <label>:57:                                     ; preds = %32
  %58 = load %union.tree_node*, %union.tree_node** %14, align 8
  %59 = call i64 @tree_low_cst(%union.tree_node* %58, i32 1)
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %69

; <label>:61:                                     ; preds = %57
  %62 = load %union.tree_node*, %union.tree_node** %12, align 8
  %63 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %64 = call %struct.rtx_def* @expand_expr(%union.tree_node* %62, %struct.rtx_def* %63, i32 0, i32 0)
  %65 = load %union.tree_node*, %union.tree_node** %13, align 8
  %66 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %67 = call %struct.rtx_def* @expand_expr(%union.tree_node* %65, %struct.rtx_def* %66, i32 0, i32 0)
  %68 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %68, %struct.rtx_def** %4, align 8
  br label %415

; <label>:69:                                     ; preds = %57, %32
  %70 = load %union.tree_node*, %union.tree_node** %12, align 8
  %71 = call i8* @c_getstr(%union.tree_node* %70)
  store i8* %71, i8** %15, align 8
  %72 = load %union.tree_node*, %union.tree_node** %13, align 8
  %73 = call i8* @c_getstr(%union.tree_node* %72)
  store i8* %73, i8** %16, align 8
  %74 = load %union.tree_node*, %union.tree_node** %14, align 8
  %75 = call i32 @host_integerp(%union.tree_node* %74, i32 1)
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %168

; <label>:77:                                     ; preds = %69
  %78 = load i32, i32* @x.81
  %79 = load i32, i32* @y.82
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %77
  %86 = load i8*, i8** %15, align 8
  %87 = icmp ne i8* %86, null
  %88 = load i32, i32* @x.81
  %89 = load i32, i32* @y.82
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %87, label %96, label %168

; <label>:96:                                     ; preds = %originalBBpart2
  %97 = load i8*, i8** %16, align 8
  %98 = icmp ne i8* %97, null
  br i1 %98, label %99, label %168

; <label>:99:                                     ; preds = %96
  %100 = load i32, i32* @x.81
  %101 = load i32, i32* @y.82
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %99
  %108 = load i8*, i8** %15, align 8
  %109 = load i8*, i8** %16, align 8
  %110 = load %union.tree_node*, %union.tree_node** %14, align 8
  %111 = call i64 @tree_low_cst(%union.tree_node* %110, i32 1)
  %112 = call i32 @strncmp(i8* %108, i8* %109, i64 %111) #7
  store i32 %112, i32* %17, align 4
  %113 = load i32, i32* %17, align 4
  %114 = icmp slt i32 %113, 0
  %115 = load i32, i32* @x.81
  %116 = load i32, i32* @y.82
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %114, label %123, label %125

; <label>:123:                                    ; preds = %originalBBpart24
  %124 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8
  br label %150

; <label>:125:                                    ; preds = %originalBBpart24
  %126 = load i32, i32* %17, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %130

; <label>:128:                                    ; preds = %125
  %129 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8
  br label %148

; <label>:130:                                    ; preds = %125
  %131 = load i32, i32* @x.81
  %132 = load i32, i32* @y.82
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %130
  %139 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %140 = load i32, i32* @x.81
  %141 = load i32, i32* @y.82
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %148

; <label>:148:                                    ; preds = %originalBBpart28, %128
  %149 = phi %struct.rtx_def* [ %129, %128 ], [ %139, %originalBBpart28 ]
  br label %150

; <label>:150:                                    ; preds = %148, %123
  %151 = phi %struct.rtx_def* [ %124, %123 ], [ %149, %148 ]
  %152 = load i32, i32* @x.81
  %153 = load i32, i32* @y.82
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %150
  store %struct.rtx_def* %151, %struct.rtx_def** %4, align 8
  %160 = load i32, i32* @x.81
  %161 = load i32, i32* @y.82
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %415

; <label>:168:                                    ; preds = %96, %originalBBpart2, %69
  %169 = load %union.tree_node*, %union.tree_node** %14, align 8
  %170 = call i32 @host_integerp(%union.tree_node* %169, i32 1)
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %172, label %290

; <label>:172:                                    ; preds = %168
  %173 = load i32, i32* @x.81
  %174 = load i32, i32* @y.82
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %172
  %181 = load %union.tree_node*, %union.tree_node** %14, align 8
  %182 = call i64 @tree_low_cst(%union.tree_node* %181, i32 1)
  %183 = icmp eq i64 %182, 1
  %184 = load i32, i32* @x.81
  %185 = load i32, i32* @y.82
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %183, label %244, label %192

; <label>:192:                                    ; preds = %originalBBpart216
  %193 = load %union.tree_node*, %union.tree_node** %14, align 8
  %194 = call i64 @tree_low_cst(%union.tree_node* %193, i32 1)
  %195 = icmp sgt i64 %194, 1
  br i1 %195, label %196, label %290

; <label>:196:                                    ; preds = %192
  %197 = load i32, i32* @x.81
  %198 = load i32, i32* @y.82
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %196
  %205 = load i8*, i8** %15, align 8
  %206 = icmp ne i8* %205, null
  %207 = load i32, i32* @x.81
  %208 = load i32, i32* @y.82
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %206, label %215, label %220

; <label>:215:                                    ; preds = %originalBBpart220
  %216 = load i8*, i8** %15, align 8
  %217 = load i8, i8* %216, align 1
  %218 = sext i8 %217 to i32
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %244, label %220

; <label>:220:                                    ; preds = %215, %originalBBpart220
  %221 = load i32, i32* @x.81
  %222 = load i32, i32* @y.82
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %220
  %229 = load i8*, i8** %16, align 8
  %230 = icmp ne i8* %229, null
  %231 = load i32, i32* @x.81
  %232 = load i32, i32* @y.82
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %230, label %239, label %290

; <label>:239:                                    ; preds = %originalBBpart224
  %240 = load i8*, i8** %16, align 8
  %241 = load i8, i8* %240, align 1
  %242 = sext i8 %241 to i32
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %290

; <label>:244:                                    ; preds = %239, %215, %originalBBpart216
  %245 = load i32, i32* @x.81
  %246 = load i32, i32* @y.82
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %244
  %253 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16
  %254 = call %union.tree_node* @build_qualified_type(%union.tree_node* %253, i32 1)
  store %union.tree_node* %254, %union.tree_node** %18, align 8
  %255 = load %union.tree_node*, %union.tree_node** %18, align 8
  %256 = call %union.tree_node* @build_pointer_type(%union.tree_node* %255)
  store %union.tree_node* %256, %union.tree_node** %19, align 8
  %257 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %258 = load %union.tree_node*, %union.tree_node** %18, align 8
  %259 = load %union.tree_node*, %union.tree_node** %19, align 8
  %260 = load %union.tree_node*, %union.tree_node** %12, align 8
  %261 = call %union.tree_node* @build1(i32 115, %union.tree_node* %259, %union.tree_node* %260)
  %262 = call %union.tree_node* @build1(i32 41, %union.tree_node* %258, %union.tree_node* %261)
  %263 = call %union.tree_node* @build1(i32 114, %union.tree_node* %257, %union.tree_node* %262)
  %264 = call %union.tree_node* @fold(%union.tree_node* %263)
  store %union.tree_node* %264, %union.tree_node** %20, align 8
  %265 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %266 = load %union.tree_node*, %union.tree_node** %18, align 8
  %267 = load %union.tree_node*, %union.tree_node** %19, align 8
  %268 = load %union.tree_node*, %union.tree_node** %13, align 8
  %269 = call %union.tree_node* @build1(i32 115, %union.tree_node* %267, %union.tree_node* %268)
  %270 = call %union.tree_node* @build1(i32 41, %union.tree_node* %266, %union.tree_node* %269)
  %271 = call %union.tree_node* @build1(i32 114, %union.tree_node* %265, %union.tree_node* %270)
  %272 = call %union.tree_node* @fold(%union.tree_node* %271)
  store %union.tree_node* %272, %union.tree_node** %21, align 8
  %273 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %274 = load %union.tree_node*, %union.tree_node** %20, align 8
  %275 = load %union.tree_node*, %union.tree_node** %21, align 8
  %276 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %273, %union.tree_node* %274, %union.tree_node* %275)
  %277 = call %union.tree_node* @fold(%union.tree_node* %276)
  store %union.tree_node* %277, %union.tree_node** %22, align 8
  %278 = load %union.tree_node*, %union.tree_node** %22, align 8
  %279 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %280 = load i32, i32* %7, align 4
  %281 = call %struct.rtx_def* @expand_expr(%union.tree_node* %278, %struct.rtx_def* %279, i32 %280, i32 0)
  store %struct.rtx_def* %281, %struct.rtx_def** %4, align 8
  %282 = load i32, i32* @x.81
  %283 = load i32, i32* @y.82
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %415

; <label>:290:                                    ; preds = %239, %originalBBpart224, %192, %168
  %291 = load i8*, i8** %15, align 8
  %292 = icmp ne i8* %291, null
  br i1 %292, label %293, label %296

; <label>:293:                                    ; preds = %290
  %294 = load %union.tree_node*, %union.tree_node** %12, align 8
  %295 = call %union.tree_node* @c_strlen(%union.tree_node* %294)
  store %union.tree_node* %295, %union.tree_node** %11, align 8
  br label %319

; <label>:296:                                    ; preds = %290
  %297 = load i32, i32* @x.81
  %298 = load i32, i32* @y.82
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %296
  %305 = load i8*, i8** %16, align 8
  %306 = icmp ne i8* %305, null
  %307 = load i32, i32* @x.81
  %308 = load i32, i32* @y.82
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %306, label %315, label %318

; <label>:315:                                    ; preds = %originalBBpart232
  %316 = load %union.tree_node*, %union.tree_node** %13, align 8
  %317 = call %union.tree_node* @c_strlen(%union.tree_node* %316)
  store %union.tree_node* %317, %union.tree_node** %11, align 8
  br label %318

; <label>:318:                                    ; preds = %315, %originalBBpart232
  br label %319

; <label>:319:                                    ; preds = %318, %293
  %320 = load %union.tree_node*, %union.tree_node** %11, align 8
  %321 = icmp ne %union.tree_node* %320, null
  br i1 %321, label %349, label %322

; <label>:322:                                    ; preds = %319
  %323 = load %union.tree_node*, %union.tree_node** %12, align 8
  %324 = bitcast %union.tree_node* %323 to %struct.tree_common*
  %325 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %324, i32 0, i32 2
  %326 = load i32, i32* %325, align 8
  %327 = lshr i32 %326, 8
  %328 = and i32 %327, 1
  %329 = icmp ne i32 %328, 0
  br i1 %329, label %349, label %330

; <label>:330:                                    ; preds = %322
  %331 = load i32, i32* @x.81
  %332 = load i32, i32* @y.82
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %330
  %339 = load %union.tree_node*, %union.tree_node** %12, align 8
  %340 = call %union.tree_node* @c_strlen(%union.tree_node* %339)
  store %union.tree_node* %340, %union.tree_node** %11, align 8
  %341 = load i32, i32* @x.81
  %342 = load i32, i32* @y.82
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %349

; <label>:349:                                    ; preds = %originalBBpart236, %322, %319
  %350 = load %union.tree_node*, %union.tree_node** %11, align 8
  %351 = icmp ne %union.tree_node* %350, null
  br i1 %351, label %363, label %352

; <label>:352:                                    ; preds = %349
  %353 = load %union.tree_node*, %union.tree_node** %13, align 8
  %354 = bitcast %union.tree_node* %353 to %struct.tree_common*
  %355 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %354, i32 0, i32 2
  %356 = load i32, i32* %355, align 8
  %357 = lshr i32 %356, 8
  %358 = and i32 %357, 1
  %359 = icmp ne i32 %358, 0
  br i1 %359, label %363, label %360

; <label>:360:                                    ; preds = %352
  %361 = load %union.tree_node*, %union.tree_node** %13, align 8
  %362 = call %union.tree_node* @c_strlen(%union.tree_node* %361)
  store %union.tree_node* %362, %union.tree_node** %11, align 8
  br label %363

; <label>:363:                                    ; preds = %360, %352, %349
  %364 = load %union.tree_node*, %union.tree_node** %11, align 8
  %365 = icmp ne %union.tree_node* %364, null
  br i1 %365, label %367, label %366

; <label>:366:                                    ; preds = %363
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %415

; <label>:367:                                    ; preds = %363
  %368 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 23), align 8
  store %union.tree_node* %368, %union.tree_node** %9, align 8
  %369 = load %union.tree_node*, %union.tree_node** %9, align 8
  %370 = icmp ne %union.tree_node* %369, null
  br i1 %370, label %388, label %371

; <label>:371:                                    ; preds = %367
  %372 = load i32, i32* @x.81
  %373 = load i32, i32* @y.82
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %371
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  %380 = load i32, i32* @x.81
  %381 = load i32, i32* @y.82
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %415

; <label>:388:                                    ; preds = %367
  %389 = load %union.tree_node*, %union.tree_node** %11, align 8
  %390 = call %union.tree_node* @size_int_wide(i64 1, i32 1)
  %391 = call %union.tree_node* @size_binop(i32 59, %union.tree_node* %389, %union.tree_node* %390)
  %392 = call %union.tree_node* @fold(%union.tree_node* %391)
  store %union.tree_node* %392, %union.tree_node** %11, align 8
  %393 = load %union.tree_node*, %union.tree_node** %11, align 8
  %394 = bitcast %union.tree_node* %393 to %struct.tree_common*
  %395 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %394, i32 0, i32 1
  %396 = load %union.tree_node*, %union.tree_node** %395, align 8
  %397 = load %union.tree_node*, %union.tree_node** %11, align 8
  %398 = load %union.tree_node*, %union.tree_node** %14, align 8
  %399 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 78, %union.tree_node* %396, %union.tree_node* %397, %union.tree_node* %398)
  %400 = call %union.tree_node* @fold(%union.tree_node* %399)
  store %union.tree_node* %400, %union.tree_node** %11, align 8
  %401 = load %union.tree_node*, %union.tree_node** %11, align 8
  %402 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %401)
  store %union.tree_node* %402, %union.tree_node** %10, align 8
  %403 = load %union.tree_node*, %union.tree_node** %13, align 8
  %404 = load %union.tree_node*, %union.tree_node** %10, align 8
  %405 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %403, %union.tree_node* %404)
  store %union.tree_node* %405, %union.tree_node** %10, align 8
  %406 = load %union.tree_node*, %union.tree_node** %12, align 8
  %407 = load %union.tree_node*, %union.tree_node** %10, align 8
  %408 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %406, %union.tree_node* %407)
  store %union.tree_node* %408, %union.tree_node** %10, align 8
  %409 = load %union.tree_node*, %union.tree_node** %9, align 8
  %410 = load %union.tree_node*, %union.tree_node** %10, align 8
  %411 = call %union.tree_node* @build_function_call_expr(%union.tree_node* %409, %union.tree_node* %410)
  %412 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %413 = load i32, i32* %7, align 4
  %414 = call %struct.rtx_def* @expand_expr(%union.tree_node* %411, %struct.rtx_def* %412, i32 %413, i32 0)
  store %struct.rtx_def* %414, %struct.rtx_def** %4, align 8
  br label %415

; <label>:415:                                    ; preds = %388, %originalBBpart240, %366, %originalBBpart228, %originalBBpart212, %61, %31
  %416 = load i32, i32* @x.81
  %417 = load i32, i32* @y.82
  %418 = sub i32 %416, 1
  %419 = mul i32 %416, %418
  %420 = urem i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %421, %422
  br i1 %423, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %415
  %424 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %425 = load i32, i32* @x.81
  %426 = load i32, i32* @y.82
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  ret %struct.rtx_def* %424

originalBBalteredBB:                              ; preds = %originalBB, %77
  %433 = load i8*, i8** %15, align 8
  %434 = icmp ne i8* %433, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %99
  %435 = load i8*, i8** %15, align 8
  %436 = load i8*, i8** %16, align 8
  %437 = load %union.tree_node*, %union.tree_node** %14, align 8
  %438 = call i64 @tree_low_cst(%union.tree_node* %437, i32 1)
  %439 = call i32 @strncmp(i8* %435, i8* %436, i64 %438) #7
  store i32 %439, i32* %17, align 4
  %440 = load i32, i32* %17, align 4
  %441 = icmp slt i32 %440, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %130
  %442 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %150
  store %struct.rtx_def* %151, %struct.rtx_def** %4, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %172
  %443 = load %union.tree_node*, %union.tree_node** %14, align 8
  %444 = call i64 @tree_low_cst(%union.tree_node* %443, i32 1)
  %445 = icmp eq i64 %444, 1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %196
  %446 = load i8*, i8** %15, align 8
  %447 = icmp ne i8* %446, null
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %220
  %448 = load i8*, i8** %16, align 8
  %449 = icmp ne i8* %448, null
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %244
  %450 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16
  %451 = call %union.tree_node* @build_qualified_type(%union.tree_node* %450, i32 1)
  store %union.tree_node* %451, %union.tree_node** %18, align 8
  %452 = load %union.tree_node*, %union.tree_node** %18, align 8
  %453 = call %union.tree_node* @build_pointer_type(%union.tree_node* %452)
  store %union.tree_node* %453, %union.tree_node** %19, align 8
  %454 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %455 = load %union.tree_node*, %union.tree_node** %18, align 8
  %456 = load %union.tree_node*, %union.tree_node** %19, align 8
  %457 = load %union.tree_node*, %union.tree_node** %12, align 8
  %458 = call %union.tree_node* @build1(i32 115, %union.tree_node* %456, %union.tree_node* %457)
  %459 = call %union.tree_node* @build1(i32 41, %union.tree_node* %455, %union.tree_node* %458)
  %460 = call %union.tree_node* @build1(i32 114, %union.tree_node* %454, %union.tree_node* %459)
  %461 = call %union.tree_node* @fold(%union.tree_node* %460)
  store %union.tree_node* %461, %union.tree_node** %20, align 8
  %462 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %463 = load %union.tree_node*, %union.tree_node** %18, align 8
  %464 = load %union.tree_node*, %union.tree_node** %19, align 8
  %465 = load %union.tree_node*, %union.tree_node** %13, align 8
  %466 = call %union.tree_node* @build1(i32 115, %union.tree_node* %464, %union.tree_node* %465)
  %467 = call %union.tree_node* @build1(i32 41, %union.tree_node* %463, %union.tree_node* %466)
  %468 = call %union.tree_node* @build1(i32 114, %union.tree_node* %462, %union.tree_node* %467)
  %469 = call %union.tree_node* @fold(%union.tree_node* %468)
  store %union.tree_node* %469, %union.tree_node** %21, align 8
  %470 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %471 = load %union.tree_node*, %union.tree_node** %20, align 8
  %472 = load %union.tree_node*, %union.tree_node** %21, align 8
  %473 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %470, %union.tree_node* %471, %union.tree_node* %472)
  %474 = call %union.tree_node* @fold(%union.tree_node* %473)
  store %union.tree_node* %474, %union.tree_node** %22, align 8
  %475 = load %union.tree_node*, %union.tree_node** %22, align 8
  %476 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %477 = load i32, i32* %7, align 4
  %478 = call %struct.rtx_def* @expand_expr(%union.tree_node* %475, %struct.rtx_def* %476, i32 %477, i32 0)
  store %struct.rtx_def* %478, %struct.rtx_def** %4, align 8
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %296
  %479 = load i8*, i8** %16, align 8
  %480 = icmp ne i8* %479, null
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %330
  %481 = load %union.tree_node*, %union.tree_node** %12, align 8
  %482 = call %union.tree_node* @c_strlen(%union.tree_node* %481)
  store %union.tree_node* %482, %union.tree_node** %11, align 8
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %371
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %415
  %483 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  br label %originalBB42
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_memcmp(%union.tree_node*, %union.tree_node*, %struct.rtx_def*, i32) #0 {
  %5 = load i32, i32* @x.83
  %6 = load i32, i32* @y.84
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %4
  %13 = alloca %struct.rtx_def*, align 8
  %14 = alloca %union.tree_node*, align 8
  %15 = alloca %union.tree_node*, align 8
  %16 = alloca %struct.rtx_def*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %union.tree_node*, align 8
  %19 = alloca %union.tree_node*, align 8
  %20 = alloca %union.tree_node*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca %union.tree_node*, align 8
  %25 = alloca %union.tree_node*, align 8
  %26 = alloca %union.tree_node*, align 8
  %27 = alloca %union.tree_node*, align 8
  %28 = alloca %union.tree_node*, align 8
  %29 = alloca %struct.rtx_def*, align 8
  %30 = alloca %struct.rtx_def*, align 8
  %31 = alloca %struct.rtx_def*, align 8
  %32 = alloca %struct.rtx_def*, align 8
  %33 = alloca %struct.rtx_def*, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  store %union.tree_node* %0, %union.tree_node** %14, align 8
  store %union.tree_node* %1, %union.tree_node** %15, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %16, align 8
  store i32 %3, i32* %17, align 4
  %37 = load %union.tree_node*, %union.tree_node** %15, align 8
  %38 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %37, i32 13, i32 13, i32 6, i32 5)
  %39 = icmp ne i32 %38, 0
  %40 = load i32, i32* @x.83
  %41 = load i32, i32* @y.84
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %39, label %49, label %48

; <label>:48:                                     ; preds = %originalBBpart2
  store %struct.rtx_def* null, %struct.rtx_def** %13, align 8
  br label %437

; <label>:49:                                     ; preds = %originalBBpart2
  %50 = load %union.tree_node*, %union.tree_node** %15, align 8
  %51 = bitcast %union.tree_node* %50 to %struct.tree_list*
  %52 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %51, i32 0, i32 2
  %53 = load %union.tree_node*, %union.tree_node** %52, align 8
  store %union.tree_node* %53, %union.tree_node** %18, align 8
  %54 = load %union.tree_node*, %union.tree_node** %15, align 8
  %55 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %56 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %55, i32 0, i32 0
  %57 = load %union.tree_node*, %union.tree_node** %56, align 8
  %58 = bitcast %union.tree_node* %57 to %struct.tree_list*
  %59 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %58, i32 0, i32 2
  %60 = load %union.tree_node*, %union.tree_node** %59, align 8
  store %union.tree_node* %60, %union.tree_node** %19, align 8
  %61 = load %union.tree_node*, %union.tree_node** %15, align 8
  %62 = bitcast %union.tree_node* %61 to %struct.tree_common*
  %63 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %62, i32 0, i32 0
  %64 = load %union.tree_node*, %union.tree_node** %63, align 8
  %65 = bitcast %union.tree_node* %64 to %struct.tree_common*
  %66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %65, i32 0, i32 0
  %67 = load %union.tree_node*, %union.tree_node** %66, align 8
  %68 = bitcast %union.tree_node* %67 to %struct.tree_list*
  %69 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %68, i32 0, i32 2
  %70 = load %union.tree_node*, %union.tree_node** %69, align 8
  store %union.tree_node* %70, %union.tree_node** %20, align 8
  %71 = load %union.tree_node*, %union.tree_node** %20, align 8
  %72 = call i32 @host_integerp(%union.tree_node* %71, i32 1)
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %102

; <label>:74:                                     ; preds = %49
  %75 = load i32, i32* @x.83
  %76 = load i32, i32* @y.84
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %74
  %83 = load %union.tree_node*, %union.tree_node** %20, align 8
  %84 = call i64 @tree_low_cst(%union.tree_node* %83, i32 1)
  %85 = icmp eq i64 %84, 0
  %86 = load i32, i32* @x.83
  %87 = load i32, i32* @y.84
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %85, label %94, label %102

; <label>:94:                                     ; preds = %originalBBpart24
  %95 = load %union.tree_node*, %union.tree_node** %18, align 8
  %96 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %97 = call %struct.rtx_def* @expand_expr(%union.tree_node* %95, %struct.rtx_def* %96, i32 0, i32 0)
  %98 = load %union.tree_node*, %union.tree_node** %19, align 8
  %99 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %100 = call %struct.rtx_def* @expand_expr(%union.tree_node* %98, %struct.rtx_def* %99, i32 0, i32 0)
  %101 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %101, %struct.rtx_def** %13, align 8
  br label %437

; <label>:102:                                    ; preds = %originalBBpart24, %49
  %103 = load %union.tree_node*, %union.tree_node** %18, align 8
  %104 = call i8* @c_getstr(%union.tree_node* %103)
  store i8* %104, i8** %21, align 8
  %105 = load %union.tree_node*, %union.tree_node** %19, align 8
  %106 = call i8* @c_getstr(%union.tree_node* %105)
  store i8* %106, i8** %22, align 8
  %107 = load %union.tree_node*, %union.tree_node** %20, align 8
  %108 = call i32 @host_integerp(%union.tree_node* %107, i32 1)
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %110, label %167

; <label>:110:                                    ; preds = %102
  %111 = load i8*, i8** %21, align 8
  %112 = icmp ne i8* %111, null
  br i1 %112, label %113, label %167

; <label>:113:                                    ; preds = %110
  %114 = load i8*, i8** %22, align 8
  %115 = icmp ne i8* %114, null
  br i1 %115, label %116, label %167

; <label>:116:                                    ; preds = %113
  %117 = load i32, i32* @x.83
  %118 = load i32, i32* @y.84
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %116
  %125 = load %union.tree_node*, %union.tree_node** %20, align 8
  %126 = load i8*, i8** %21, align 8
  %127 = call i64 @strlen(i8* %126) #7
  %128 = add i64 %127, 1
  %129 = call i32 @compare_tree_int(%union.tree_node* %125, i64 %128)
  %130 = icmp sle i32 %129, 0
  %131 = load i32, i32* @x.83
  %132 = load i32, i32* @y.84
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %130, label %139, label %167

; <label>:139:                                    ; preds = %originalBBpart28
  %140 = load %union.tree_node*, %union.tree_node** %20, align 8
  %141 = load i8*, i8** %22, align 8
  %142 = call i64 @strlen(i8* %141) #7
  %143 = add i64 %142, 1
  %144 = call i32 @compare_tree_int(%union.tree_node* %140, i64 %143)
  %145 = icmp sle i32 %144, 0
  br i1 %145, label %146, label %167

; <label>:146:                                    ; preds = %139
  %147 = load i8*, i8** %21, align 8
  %148 = load i8*, i8** %22, align 8
  %149 = load %union.tree_node*, %union.tree_node** %20, align 8
  %150 = call i64 @tree_low_cst(%union.tree_node* %149, i32 1)
  %151 = call i32 @memcmp(i8* %147, i8* %148, i64 %150) #7
  store i32 %151, i32* %23, align 4
  %152 = load i32, i32* %23, align 4
  %153 = icmp slt i32 %152, 0
  br i1 %153, label %154, label %156

; <label>:154:                                    ; preds = %146
  %155 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8
  br label %165

; <label>:156:                                    ; preds = %146
  %157 = load i32, i32* %23, align 4
  %158 = icmp sgt i32 %157, 0
  br i1 %158, label %159, label %161

; <label>:159:                                    ; preds = %156
  %160 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8
  br label %163

; <label>:161:                                    ; preds = %156
  %162 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  br label %163

; <label>:163:                                    ; preds = %161, %159
  %164 = phi %struct.rtx_def* [ %160, %159 ], [ %162, %161 ]
  br label %165

; <label>:165:                                    ; preds = %163, %154
  %166 = phi %struct.rtx_def* [ %155, %154 ], [ %164, %163 ]
  store %struct.rtx_def* %166, %struct.rtx_def** %13, align 8
  br label %437

; <label>:167:                                    ; preds = %139, %originalBBpart28, %113, %110, %102
  %168 = load %union.tree_node*, %union.tree_node** %20, align 8
  %169 = call i32 @host_integerp(%union.tree_node* %168, i32 1)
  %170 = icmp ne i32 %169, 0
  br i1 %170, label %171, label %237

; <label>:171:                                    ; preds = %167
  %172 = load i32, i32* @x.83
  %173 = load i32, i32* @y.84
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %171
  %180 = load %union.tree_node*, %union.tree_node** %20, align 8
  %181 = call i64 @tree_low_cst(%union.tree_node* %180, i32 1)
  %182 = icmp eq i64 %181, 1
  %183 = load i32, i32* @x.83
  %184 = load i32, i32* @y.84
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %182, label %191, label %237

; <label>:191:                                    ; preds = %originalBBpart212
  %192 = load i32, i32* @x.83
  %193 = load i32, i32* @y.84
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %191
  %200 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16
  %201 = call %union.tree_node* @build_qualified_type(%union.tree_node* %200, i32 1)
  store %union.tree_node* %201, %union.tree_node** %24, align 8
  %202 = load %union.tree_node*, %union.tree_node** %24, align 8
  %203 = call %union.tree_node* @build_pointer_type(%union.tree_node* %202)
  store %union.tree_node* %203, %union.tree_node** %25, align 8
  %204 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %205 = load %union.tree_node*, %union.tree_node** %24, align 8
  %206 = load %union.tree_node*, %union.tree_node** %25, align 8
  %207 = load %union.tree_node*, %union.tree_node** %18, align 8
  %208 = call %union.tree_node* @build1(i32 115, %union.tree_node* %206, %union.tree_node* %207)
  %209 = call %union.tree_node* @build1(i32 41, %union.tree_node* %205, %union.tree_node* %208)
  %210 = call %union.tree_node* @build1(i32 114, %union.tree_node* %204, %union.tree_node* %209)
  %211 = call %union.tree_node* @fold(%union.tree_node* %210)
  store %union.tree_node* %211, %union.tree_node** %26, align 8
  %212 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %213 = load %union.tree_node*, %union.tree_node** %24, align 8
  %214 = load %union.tree_node*, %union.tree_node** %25, align 8
  %215 = load %union.tree_node*, %union.tree_node** %19, align 8
  %216 = call %union.tree_node* @build1(i32 115, %union.tree_node* %214, %union.tree_node* %215)
  %217 = call %union.tree_node* @build1(i32 41, %union.tree_node* %213, %union.tree_node* %216)
  %218 = call %union.tree_node* @build1(i32 114, %union.tree_node* %212, %union.tree_node* %217)
  %219 = call %union.tree_node* @fold(%union.tree_node* %218)
  store %union.tree_node* %219, %union.tree_node** %27, align 8
  %220 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %221 = load %union.tree_node*, %union.tree_node** %26, align 8
  %222 = load %union.tree_node*, %union.tree_node** %27, align 8
  %223 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %220, %union.tree_node* %221, %union.tree_node* %222)
  %224 = call %union.tree_node* @fold(%union.tree_node* %223)
  store %union.tree_node* %224, %union.tree_node** %28, align 8
  %225 = load %union.tree_node*, %union.tree_node** %28, align 8
  %226 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %227 = load i32, i32* %17, align 4
  %228 = call %struct.rtx_def* @expand_expr(%union.tree_node* %225, %struct.rtx_def* %226, i32 %227, i32 0)
  store %struct.rtx_def* %228, %struct.rtx_def** %13, align 8
  %229 = load i32, i32* @x.83
  %230 = load i32, i32* @y.84
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %437

; <label>:237:                                    ; preds = %originalBBpart212, %167
  %238 = load %union.tree_node*, %union.tree_node** %18, align 8
  %239 = call i32 @get_pointer_alignment(%union.tree_node* %238, i32 128)
  %240 = sdiv i32 %239, 8
  store i32 %240, i32* %34, align 4
  %241 = load %union.tree_node*, %union.tree_node** %19, align 8
  %242 = call i32 @get_pointer_alignment(%union.tree_node* %241, i32 128)
  %243 = sdiv i32 %242, 8
  store i32 %243, i32* %35, align 4
  %244 = load %struct.insn_operand_data*, %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 1203, i32 3), align 8
  %245 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %244, i64 0
  %246 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %245, i32 0, i32 2
  %247 = load i16, i16* %246, align 8
  %248 = zext i16 %247 to i32
  store i32 %248, i32* %36, align 4
  %249 = load i32, i32* %34, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %254, label %251

; <label>:251:                                    ; preds = %237
  %252 = load i32, i32* %35, align 4
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

; <label>:254:                                    ; preds = %251, %237
  store %struct.rtx_def* null, %struct.rtx_def** %13, align 8
  br label %437

; <label>:255:                                    ; preds = %251
  %256 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  store %struct.rtx_def* %256, %struct.rtx_def** %32, align 8
  %257 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %258 = icmp ne %struct.rtx_def* %257, null
  br i1 %258, label %259, label %296

; <label>:259:                                    ; preds = %255
  %260 = load i32, i32* @x.83
  %261 = load i32, i32* @y.84
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %259
  %268 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %269 = bitcast %struct.rtx_def* %268 to i32*
  %270 = load i32, i32* %269, align 8
  %271 = and i32 %270, 65535
  %272 = icmp eq i32 %271, 61
  %273 = load i32, i32* @x.83
  %274 = load i32, i32* @y.84
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBBpart227, label %originalBB18alteredBB

originalBBpart227:                                ; preds = %originalBB18
  br i1 %272, label %281, label %296

; <label>:281:                                    ; preds = %originalBBpart227
  %282 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %283 = bitcast %struct.rtx_def* %282 to i32*
  %284 = load i32, i32* %283, align 8
  %285 = lshr i32 %284, 16
  %286 = and i32 %285, 255
  %287 = load i32, i32* %36, align 4
  %288 = icmp eq i32 %286, %287
  br i1 %288, label %289, label %296

; <label>:289:                                    ; preds = %281
  %290 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %291 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %290, i32 0, i32 1
  %292 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %291, i64 0, i64 0
  %293 = bitcast %union.rtunion_def* %292 to i32*
  %294 = load i32, i32* %293, align 8
  %295 = icmp uge i32 %294, 53
  br i1 %295, label %299, label %296

; <label>:296:                                    ; preds = %289, %281, %originalBBpart227, %255
  %297 = load i32, i32* %36, align 4
  %298 = call %struct.rtx_def* @gen_reg_rtx(i32 %297)
  store %struct.rtx_def* %298, %struct.rtx_def** %32, align 8
  br label %299

; <label>:299:                                    ; preds = %296, %289
  %300 = load %union.tree_node*, %union.tree_node** %18, align 8
  %301 = call %struct.rtx_def* @get_memory_rtx(%union.tree_node* %300)
  store %struct.rtx_def* %301, %struct.rtx_def** %29, align 8
  %302 = load %union.tree_node*, %union.tree_node** %19, align 8
  %303 = call %struct.rtx_def* @get_memory_rtx(%union.tree_node* %302)
  store %struct.rtx_def* %303, %struct.rtx_def** %30, align 8
  %304 = load %union.tree_node*, %union.tree_node** %20, align 8
  %305 = call %struct.rtx_def* @expand_expr(%union.tree_node* %304, %struct.rtx_def* null, i32 0, i32 0)
  store %struct.rtx_def* %305, %struct.rtx_def** %31, align 8
  %306 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %307 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %308 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %309 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %310 = load i32, i32* %34, align 4
  %311 = load i32, i32* %35, align 4
  %312 = icmp slt i32 %310, %311
  br i1 %312, label %313, label %315

; <label>:313:                                    ; preds = %299
  %314 = load i32, i32* %34, align 4
  br label %317

; <label>:315:                                    ; preds = %299
  %316 = load i32, i32* %35, align 4
  br label %317

; <label>:317:                                    ; preds = %315, %313
  %318 = phi i32 [ %314, %313 ], [ %316, %315 ]
  %319 = load i32, i32* @x.83
  %320 = load i32, i32* @y.84
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %317
  %327 = sext i32 %318 to i64
  %328 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %327)
  %329 = call %struct.rtx_def* @gen_cmpstrsi(%struct.rtx_def* %306, %struct.rtx_def* %307, %struct.rtx_def* %308, %struct.rtx_def* %309, %struct.rtx_def* %328)
  store %struct.rtx_def* %329, %struct.rtx_def** %33, align 8
  %330 = load %struct.rtx_def*, %struct.rtx_def** %33, align 8
  %331 = icmp ne %struct.rtx_def* %330, null
  %332 = load i32, i32* @x.83
  %333 = load i32, i32* @y.84
  %334 = sub i32 %332, 1
  %335 = mul i32 %332, %334
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %337, %338
  br i1 %339, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %331, label %340, label %343

; <label>:340:                                    ; preds = %originalBBpart231
  %341 = load %struct.rtx_def*, %struct.rtx_def** %33, align 8
  %342 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %341)
  br label %391

; <label>:343:                                    ; preds = %originalBBpart231
  %344 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*], [97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 14), align 16
  %345 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %346 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %347 = bitcast %union.tree_node* %346 to %struct.tree_type*
  %348 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %347, i32 0, i32 6
  %349 = load i32, i32* %348, align 4
  %350 = lshr i32 %349, 9
  %351 = and i32 %350, 127
  %352 = load %struct.rtx_def*, %struct.rtx_def** %29, align 8
  %353 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %352, i32 0, i32 1
  %354 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %353, i64 0, i64 0
  %355 = bitcast %union.rtunion_def* %354 to %struct.rtx_def**
  %356 = load %struct.rtx_def*, %struct.rtx_def** %355, align 8
  %357 = load i32, i32* @target_flags, align 4
  %358 = and i32 %357, 33554432
  %359 = icmp ne i32 %358, 0
  %360 = select i1 %359, i32 5, i32 4
  %361 = load %struct.rtx_def*, %struct.rtx_def** %30, align 8
  %362 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %361, i32 0, i32 1
  %363 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %362, i64 0, i64 0
  %364 = bitcast %union.rtunion_def* %363 to %struct.rtx_def**
  %365 = load %struct.rtx_def*, %struct.rtx_def** %364, align 8
  %366 = load i32, i32* @target_flags, align 4
  %367 = and i32 %366, 33554432
  %368 = icmp ne i32 %367, 0
  %369 = select i1 %368, i32 5, i32 4
  %370 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16
  %371 = bitcast %union.tree_node* %370 to %struct.tree_type*
  %372 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %371, i32 0, i32 6
  %373 = load i32, i32* %372, align 4
  %374 = lshr i32 %373, 9
  %375 = and i32 %374, 127
  %376 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %377 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16
  %378 = bitcast %union.tree_node* %377 to %struct.tree_common*
  %379 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %378, i32 0, i32 2
  %380 = load i32, i32* %379, align 8
  %381 = lshr i32 %380, 13
  %382 = and i32 %381, 1
  %383 = call %struct.rtx_def* @convert_to_mode(i32 %375, %struct.rtx_def* %376, i32 %382)
  %384 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16
  %385 = bitcast %union.tree_node* %384 to %struct.tree_type*
  %386 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %385, i32 0, i32 6
  %387 = load i32, i32* %386, align 4
  %388 = lshr i32 %387, 9
  %389 = and i32 %388, 127
  %390 = call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) @emit_library_call_value(%struct.rtx_def* %344, %struct.rtx_def* %345, i32 4, i32 %351, i32 3, %struct.rtx_def* %356, i32 %360, %struct.rtx_def* %365, i32 %369, %struct.rtx_def* %383, i32 %389)
  br label %391

; <label>:391:                                    ; preds = %343, %340
  %392 = load i32, i32* @x.83
  %393 = load i32, i32* @y.84
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %391
  %400 = load %union.tree_node*, %union.tree_node** %14, align 8
  %401 = bitcast %union.tree_node* %400 to %struct.tree_common*
  %402 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %401, i32 0, i32 1
  %403 = load %union.tree_node*, %union.tree_node** %402, align 8
  %404 = bitcast %union.tree_node* %403 to %struct.tree_type*
  %405 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %404, i32 0, i32 6
  %406 = load i32, i32* %405, align 4
  %407 = lshr i32 %406, 9
  %408 = and i32 %407, 127
  store i32 %408, i32* %17, align 4
  %409 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %410 = bitcast %struct.rtx_def* %409 to i32*
  %411 = load i32, i32* %410, align 8
  %412 = lshr i32 %411, 16
  %413 = and i32 %412, 255
  %414 = load i32, i32* %17, align 4
  %415 = icmp eq i32 %413, %414
  %416 = load i32, i32* @x.83
  %417 = load i32, i32* @y.84
  %418 = sub i32 %416, 1
  %419 = mul i32 %416, %418
  %420 = urem i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %421, %422
  br i1 %423, label %originalBBpart263, label %originalBB33alteredBB

originalBBpart263:                                ; preds = %originalBB33
  br i1 %415, label %424, label %426

; <label>:424:                                    ; preds = %originalBBpart263
  %425 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  store %struct.rtx_def* %425, %struct.rtx_def** %13, align 8
  br label %437

; <label>:426:                                    ; preds = %originalBBpart263
  %427 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %428 = icmp ne %struct.rtx_def* %427, null
  br i1 %428, label %429, label %433

; <label>:429:                                    ; preds = %426
  %430 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %431 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  call void @convert_move(%struct.rtx_def* %430, %struct.rtx_def* %431, i32 0)
  %432 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  store %struct.rtx_def* %432, %struct.rtx_def** %13, align 8
  br label %437

; <label>:433:                                    ; preds = %426
  %434 = load i32, i32* %17, align 4
  %435 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %436 = call %struct.rtx_def* @convert_to_mode(i32 %434, %struct.rtx_def* %435, i32 0)
  store %struct.rtx_def* %436, %struct.rtx_def** %13, align 8
  br label %437

; <label>:437:                                    ; preds = %433, %429, %424, %254, %originalBBpart216, %165, %94, %48
  %438 = load i32, i32* @x.83
  %439 = load i32, i32* @y.84
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %originalBB65alteredBB, %437
  %446 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  %447 = load i32, i32* @x.83
  %448 = load i32, i32* @y.84
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  ret %struct.rtx_def* %446

originalBBalteredBB:                              ; preds = %originalBB, %4
  %455 = alloca %struct.rtx_def*, align 8
  %456 = alloca %union.tree_node*, align 8
  %457 = alloca %union.tree_node*, align 8
  %458 = alloca %struct.rtx_def*, align 8
  %459 = alloca i32, align 4
  %460 = alloca %union.tree_node*, align 8
  %461 = alloca %union.tree_node*, align 8
  %462 = alloca %union.tree_node*, align 8
  %463 = alloca i8*, align 8
  %464 = alloca i8*, align 8
  %465 = alloca i32, align 4
  %466 = alloca %union.tree_node*, align 8
  %467 = alloca %union.tree_node*, align 8
  %468 = alloca %union.tree_node*, align 8
  %469 = alloca %union.tree_node*, align 8
  %470 = alloca %union.tree_node*, align 8
  %471 = alloca %struct.rtx_def*, align 8
  %472 = alloca %struct.rtx_def*, align 8
  %473 = alloca %struct.rtx_def*, align 8
  %474 = alloca %struct.rtx_def*, align 8
  %475 = alloca %struct.rtx_def*, align 8
  %476 = alloca i32, align 4
  %477 = alloca i32, align 4
  %478 = alloca i32, align 4
  store %union.tree_node* %0, %union.tree_node** %456, align 8
  store %union.tree_node* %1, %union.tree_node** %457, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %458, align 8
  store i32 %3, i32* %459, align 4
  %479 = load %union.tree_node*, %union.tree_node** %457, align 8
  %480 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %479, i32 13, i32 13, i32 6, i32 5)
  %481 = icmp ne i32 %480, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %74
  %482 = load %union.tree_node*, %union.tree_node** %20, align 8
  %483 = call i64 @tree_low_cst(%union.tree_node* %482, i32 1)
  %484 = icmp eq i64 %483, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %116
  %485 = load %union.tree_node*, %union.tree_node** %20, align 8
  %486 = load i8*, i8** %21, align 8
  %487 = call i64 @strlen(i8* %486) #7
  %_ = sub i64 %487, 1
  %gen = mul i64 %_, 1
  %488 = add i64 %487, 1
  %489 = call i32 @compare_tree_int(%union.tree_node* %485, i64 %488)
  %490 = icmp sle i32 %489, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %171
  %491 = load %union.tree_node*, %union.tree_node** %20, align 8
  %492 = call i64 @tree_low_cst(%union.tree_node* %491, i32 1)
  %493 = icmp eq i64 %492, 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %191
  %494 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16
  %495 = call %union.tree_node* @build_qualified_type(%union.tree_node* %494, i32 1)
  store %union.tree_node* %495, %union.tree_node** %24, align 8
  %496 = load %union.tree_node*, %union.tree_node** %24, align 8
  %497 = call %union.tree_node* @build_pointer_type(%union.tree_node* %496)
  store %union.tree_node* %497, %union.tree_node** %25, align 8
  %498 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %499 = load %union.tree_node*, %union.tree_node** %24, align 8
  %500 = load %union.tree_node*, %union.tree_node** %25, align 8
  %501 = load %union.tree_node*, %union.tree_node** %18, align 8
  %502 = call %union.tree_node* @build1(i32 115, %union.tree_node* %500, %union.tree_node* %501)
  %503 = call %union.tree_node* @build1(i32 41, %union.tree_node* %499, %union.tree_node* %502)
  %504 = call %union.tree_node* @build1(i32 114, %union.tree_node* %498, %union.tree_node* %503)
  %505 = call %union.tree_node* @fold(%union.tree_node* %504)
  store %union.tree_node* %505, %union.tree_node** %26, align 8
  %506 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %507 = load %union.tree_node*, %union.tree_node** %24, align 8
  %508 = load %union.tree_node*, %union.tree_node** %25, align 8
  %509 = load %union.tree_node*, %union.tree_node** %19, align 8
  %510 = call %union.tree_node* @build1(i32 115, %union.tree_node* %508, %union.tree_node* %509)
  %511 = call %union.tree_node* @build1(i32 41, %union.tree_node* %507, %union.tree_node* %510)
  %512 = call %union.tree_node* @build1(i32 114, %union.tree_node* %506, %union.tree_node* %511)
  %513 = call %union.tree_node* @fold(%union.tree_node* %512)
  store %union.tree_node* %513, %union.tree_node** %27, align 8
  %514 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %515 = load %union.tree_node*, %union.tree_node** %26, align 8
  %516 = load %union.tree_node*, %union.tree_node** %27, align 8
  %517 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %514, %union.tree_node* %515, %union.tree_node* %516)
  %518 = call %union.tree_node* @fold(%union.tree_node* %517)
  store %union.tree_node* %518, %union.tree_node** %28, align 8
  %519 = load %union.tree_node*, %union.tree_node** %28, align 8
  %520 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8
  %521 = load i32, i32* %17, align 4
  %522 = call %struct.rtx_def* @expand_expr(%union.tree_node* %519, %struct.rtx_def* %520, i32 %521, i32 0)
  store %struct.rtx_def* %522, %struct.rtx_def** %13, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %259
  %523 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %524 = bitcast %struct.rtx_def* %523 to i32*
  %525 = load i32, i32* %524, align 8
  %_19 = sub i32 %525, 65535
  %gen20 = mul i32 %_19, 65535
  %_21 = sub i32 %525, 65535
  %gen22 = mul i32 %_21, 65535
  %_23 = sub i32 %525, 65535
  %gen24 = mul i32 %_23, 65535
  %_25 = shl i32 %525, 65535
  %526 = and i32 %525, 65535
  %527 = icmp eq i32 %526, 61
  br label %originalBB18

originalBB29alteredBB:                            ; preds = %originalBB29, %317
  %528 = sext i32 %318 to i64
  %529 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %528)
  %530 = call %struct.rtx_def* @gen_cmpstrsi(%struct.rtx_def* %306, %struct.rtx_def* %307, %struct.rtx_def* %308, %struct.rtx_def* %309, %struct.rtx_def* %529)
  store %struct.rtx_def* %530, %struct.rtx_def** %33, align 8
  %531 = load %struct.rtx_def*, %struct.rtx_def** %33, align 8
  %532 = icmp ne %struct.rtx_def* %531, null
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %391
  %533 = load %union.tree_node*, %union.tree_node** %14, align 8
  %534 = bitcast %union.tree_node* %533 to %struct.tree_common*
  %535 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %534, i32 0, i32 1
  %536 = load %union.tree_node*, %union.tree_node** %535, align 8
  %537 = bitcast %union.tree_node* %536 to %struct.tree_type*
  %538 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %537, i32 0, i32 6
  %539 = load i32, i32* %538, align 4
  %_34 = shl i32 %539, 9
  %540 = lshr i32 %539, 9
  %_35 = shl i32 %540, 127
  %_36 = shl i32 %540, 127
  %_37 = sub i32 %540, 127
  %gen38 = mul i32 %_37, 127
  %_39 = sub i32 0, %540
  %gen40 = add i32 %_39, 127
  %_41 = sub i32 0, %540
  %gen42 = add i32 %_41, 127
  %_43 = shl i32 %540, 127
  %_44 = sub i32 0, %540
  %gen45 = add i32 %_44, 127
  %_46 = sub i32 0, %540
  %gen47 = add i32 %_46, 127
  %_48 = sub i32 0, %540
  %gen49 = add i32 %_48, 127
  %_50 = sub i32 0, %540
  %gen51 = add i32 %_50, 127
  %541 = and i32 %540, 127
  store i32 %541, i32* %17, align 4
  %542 = load %struct.rtx_def*, %struct.rtx_def** %32, align 8
  %543 = bitcast %struct.rtx_def* %542 to i32*
  %544 = load i32, i32* %543, align 8
  %_52 = shl i32 %544, 16
  %545 = lshr i32 %544, 16
  %_53 = sub i32 %545, 255
  %gen54 = mul i32 %_53, 255
  %_55 = shl i32 %545, 255
  %_56 = shl i32 %545, 255
  %_57 = sub i32 %545, 255
  %gen58 = mul i32 %_57, 255
  %_59 = sub i32 %545, 255
  %gen60 = mul i32 %_59, 255
  %_61 = shl i32 %545, 255
  %546 = and i32 %545, 255
  %547 = load i32, i32* %17, align 4
  %548 = icmp eq i32 %546, %547
  br label %originalBB33

originalBB65alteredBB:                            ; preds = %originalBB65, %437
  %549 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8
  br label %originalBB65
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_setjmp(%union.tree_node*, %struct.rtx_def*) #0 {
  %3 = alloca %struct.rtx_def*, align 8
  %4 = alloca %union.tree_node*, align 8
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %4, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %5, align 8
  %9 = load %union.tree_node*, %union.tree_node** %4, align 8
  %10 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %9, i32 13, i32 5)
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %13, label %12

; <label>:12:                                     ; preds = %2
  store %struct.rtx_def* null, %struct.rtx_def** %3, align 8
  br label %140

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.85
  %15 = load i32, i32* @y.86
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %13
  %22 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %23 = icmp eq %struct.rtx_def* %22, null
  %24 = load i32, i32* @x.85
  %25 = load i32, i32* @y.86
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %61, label %32

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 65535
  %37 = icmp ne i32 %36, 61
  br i1 %37, label %61, label %38

; <label>:38:                                     ; preds = %32
  %39 = load i32, i32* @x.85
  %40 = load i32, i32* @y.86
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %38
  %47 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %48, i64 0, i64 0
  %50 = bitcast %union.rtunion_def* %49 to i32*
  %51 = load i32, i32* %50, align 8
  %52 = icmp ult i32 %51, 53
  %53 = load i32, i32* @x.85
  %54 = load i32, i32* @y.86
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %52, label %61, label %85

; <label>:61:                                     ; preds = %originalBBpart24, %32, %originalBBpart2
  %62 = load i32, i32* @x.85
  %63 = load i32, i32* @y.86
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %61
  %70 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %71 = bitcast %union.tree_node* %70 to %struct.tree_type*
  %72 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %71, i32 0, i32 6
  %73 = load i32, i32* %72, align 4
  %74 = lshr i32 %73, 9
  %75 = and i32 %74, 127
  %76 = call %struct.rtx_def* @gen_reg_rtx(i32 %75)
  store %struct.rtx_def* %76, %struct.rtx_def** %5, align 8
  %77 = load i32, i32* @x.85
  %78 = load i32, i32* @y.86
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart212, label %originalBB6alteredBB

originalBBpart212:                                ; preds = %originalBB6
  br label %85

; <label>:85:                                     ; preds = %originalBBpart212, %originalBBpart24
  %86 = load i32, i32* @x.85
  %87 = load i32, i32* @y.86
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %85
  %94 = load %union.tree_node*, %union.tree_node** %4, align 8
  %95 = bitcast %union.tree_node* %94 to %struct.tree_list*
  %96 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %95, i32 0, i32 2
  %97 = load %union.tree_node*, %union.tree_node** %96, align 8
  %98 = call %struct.rtx_def* @expand_expr(%union.tree_node* %97, %struct.rtx_def* null, i32 0, i32 0)
  store %struct.rtx_def* %98, %struct.rtx_def** %6, align 8
  %99 = call %struct.rtx_def* @gen_label_rtx()
  store %struct.rtx_def* %99, %struct.rtx_def** %7, align 8
  %100 = call %struct.rtx_def* @gen_label_rtx()
  store %struct.rtx_def* %100, %struct.rtx_def** %8, align 8
  %101 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %102 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  call void @expand_builtin_setjmp_setup(%struct.rtx_def* %101, %struct.rtx_def* %102)
  %103 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %104 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %105 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %103, %struct.rtx_def* %104)
  %106 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %107 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %106)
  %108 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %107)
  %109 = call %struct.rtx_def* @emit_barrier()
  %110 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %111 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %110)
  %112 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  call void @expand_builtin_setjmp_receiver(%struct.rtx_def* %112)
  %113 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %114 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8
  %115 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %113, %struct.rtx_def* %114)
  %116 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %117 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %116)
  %118 = load %struct.function*, %struct.function** @cfun, align 8
  %119 = getelementptr inbounds %struct.function, %struct.function* %118, i32 0, i32 56
  %120 = bitcast i24* %119 to i32*
  %121 = load i32, i32* %120, align 8
  %122 = and i32 %121, -257
  %123 = or i32 %122, 256
  store i32 %123, i32* %120, align 8
  %124 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %125 = load %struct.function*, %struct.function** @cfun, align 8
  %126 = getelementptr inbounds %struct.function, %struct.function* %125, i32 0, i32 21
  %127 = load %struct.rtx_def*, %struct.rtx_def** %126, align 8
  %128 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %124, %struct.rtx_def* %127)
  %129 = load %struct.function*, %struct.function** @cfun, align 8
  %130 = getelementptr inbounds %struct.function, %struct.function* %129, i32 0, i32 21
  store %struct.rtx_def* %128, %struct.rtx_def** %130, align 8
  %131 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  store %struct.rtx_def* %131, %struct.rtx_def** %3, align 8
  %132 = load i32, i32* @x.85
  %133 = load i32, i32* @y.86
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart232, label %originalBB14alteredBB

originalBBpart232:                                ; preds = %originalBB14
  br label %140

; <label>:140:                                    ; preds = %originalBBpart232, %12
  %141 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  ret %struct.rtx_def* %141

originalBBalteredBB:                              ; preds = %originalBB, %13
  %142 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %143 = icmp eq %struct.rtx_def* %142, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  %144 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1
  %146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %145, i64 0, i64 0
  %147 = bitcast %union.rtunion_def* %146 to i32*
  %148 = load i32, i32* %147, align 8
  %149 = icmp ult i32 %148, 53
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %61
  %150 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %151 = bitcast %union.tree_node* %150 to %struct.tree_type*
  %152 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %151, i32 0, i32 6
  %153 = load i32, i32* %152, align 4
  %_ = shl i32 %153, 9
  %_7 = shl i32 %153, 9
  %154 = lshr i32 %153, 9
  %_8 = shl i32 %154, 127
  %_9 = sub i32 0, %154
  %gen = add i32 %_9, 127
  %_10 = shl i32 %154, 127
  %155 = and i32 %154, 127
  %156 = call %struct.rtx_def* @gen_reg_rtx(i32 %155)
  store %struct.rtx_def* %156, %struct.rtx_def** %5, align 8
  br label %originalBB6

originalBB14alteredBB:                            ; preds = %originalBB14, %85
  %157 = load %union.tree_node*, %union.tree_node** %4, align 8
  %158 = bitcast %union.tree_node* %157 to %struct.tree_list*
  %159 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %158, i32 0, i32 2
  %160 = load %union.tree_node*, %union.tree_node** %159, align 8
  %161 = call %struct.rtx_def* @expand_expr(%union.tree_node* %160, %struct.rtx_def* null, i32 0, i32 0)
  store %struct.rtx_def* %161, %struct.rtx_def** %6, align 8
  %162 = call %struct.rtx_def* @gen_label_rtx()
  store %struct.rtx_def* %162, %struct.rtx_def** %7, align 8
  %163 = call %struct.rtx_def* @gen_label_rtx()
  store %struct.rtx_def* %163, %struct.rtx_def** %8, align 8
  %164 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %165 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  call void @expand_builtin_setjmp_setup(%struct.rtx_def* %164, %struct.rtx_def* %165)
  %166 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %167 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %168 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %166, %struct.rtx_def* %167)
  %169 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %170 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %169)
  %171 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %170)
  %172 = call %struct.rtx_def* @emit_barrier()
  %173 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %174 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %173)
  %175 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  call void @expand_builtin_setjmp_receiver(%struct.rtx_def* %175)
  %176 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %177 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8
  %178 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %176, %struct.rtx_def* %177)
  %179 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %180 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %179)
  %181 = load %struct.function*, %struct.function** @cfun, align 8
  %182 = getelementptr inbounds %struct.function, %struct.function* %181, i32 0, i32 56
  %183 = bitcast i24* %182 to i32*
  %184 = load i32, i32* %183, align 8
  %_15 = sub i32 0, %184
  %gen16 = add i32 %_15, -257
  %_17 = shl i32 %184, -257
  %_18 = sub i32 %184, -257
  %gen19 = mul i32 %_18, -257
  %_20 = sub i32 0, %184
  %gen21 = add i32 %_20, -257
  %185 = and i32 %184, -257
  %_22 = sub i32 0, %185
  %gen23 = add i32 %_22, 256
  %_24 = shl i32 %185, 256
  %_25 = sub i32 %185, 256
  %gen26 = mul i32 %_25, 256
  %_27 = sub i32 0, %185
  %gen28 = add i32 %_27, 256
  %_29 = sub i32 %185, 256
  %gen30 = mul i32 %_29, 256
  %186 = or i32 %185, 256
  store i32 %186, i32* %183, align 8
  %187 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %188 = load %struct.function*, %struct.function** @cfun, align 8
  %189 = getelementptr inbounds %struct.function, %struct.function* %188, i32 0, i32 21
  %190 = load %struct.rtx_def*, %struct.rtx_def** %189, align 8
  %191 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %187, %struct.rtx_def* %190)
  %192 = load %struct.function*, %struct.function** @cfun, align 8
  %193 = getelementptr inbounds %struct.function, %struct.function* %192, i32 0, i32 21
  store %struct.rtx_def* %191, %struct.rtx_def** %193, align 8
  %194 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  store %struct.rtx_def* %194, %struct.rtx_def** %3, align 8
  br label %originalBB14
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_fputs(%union.tree_node*, i32, i32) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %union.tree_node*, align 8
  %9 = alloca %union.tree_node*, align 8
  %10 = alloca %union.tree_node*, align 8
  %11 = alloca %union.tree_node*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %14 = load i32, i32* %7, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %18

; <label>:16:                                     ; preds = %3
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 72), align 16
  br label %20

; <label>:18:                                     ; preds = %3
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 65), align 8
  br label %20

; <label>:20:                                     ; preds = %18, %16
  %21 = phi %union.tree_node* [ %17, %16 ], [ %19, %18 ]
  store %union.tree_node* %21, %union.tree_node** %10, align 8
  %22 = load i32, i32* %7, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %26

; <label>:24:                                     ; preds = %20
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 74), align 16
  br label %28

; <label>:26:                                     ; preds = %20
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i64 0, i64 67), align 8
  br label %28

; <label>:28:                                     ; preds = %26, %24
  %29 = phi %union.tree_node* [ %25, %24 ], [ %27, %26 ]
  store %union.tree_node* %29, %union.tree_node** %11, align 8
  %30 = load i32, i32* %6, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %38

; <label>:32:                                     ; preds = %28
  %33 = load %union.tree_node*, %union.tree_node** %10, align 8
  %34 = icmp ne %union.tree_node* %33, null
  br i1 %34, label %35, label %38

; <label>:35:                                     ; preds = %32
  %36 = load %union.tree_node*, %union.tree_node** %11, align 8
  %37 = icmp ne %union.tree_node* %36, null
  br i1 %37, label %55, label %38

; <label>:38:                                     ; preds = %35, %32, %28
  %39 = load i32, i32* @x.87
  %40 = load i32, i32* @y.88
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %38
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  %47 = load i32, i32* @x.87
  %48 = load i32, i32* @y.88
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %231

; <label>:55:                                     ; preds = %35
  %56 = load %union.tree_node*, %union.tree_node** %5, align 8
  %57 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %56, i32 13, i32 13, i32 5)
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %60, label %59

; <label>:59:                                     ; preds = %55
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %231

; <label>:60:                                     ; preds = %55
  %61 = load %union.tree_node*, %union.tree_node** %5, align 8
  %62 = bitcast %union.tree_node* %61 to %struct.tree_list*
  %63 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %62, i32 0, i32 2
  %64 = load %union.tree_node*, %union.tree_node** %63, align 8
  %65 = call %union.tree_node* @c_strlen(%union.tree_node* %64)
  store %union.tree_node* %65, %union.tree_node** %8, align 8
  %66 = icmp ne %union.tree_node* %65, null
  br i1 %66, label %67, label %90

; <label>:67:                                     ; preds = %60
  %68 = load i32, i32* @x.87
  %69 = load i32, i32* @y.88
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %67
  %76 = load %union.tree_node*, %union.tree_node** %8, align 8
  %77 = bitcast %union.tree_node* %76 to %struct.tree_common*
  %78 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %77, i32 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 255
  %81 = icmp ne i32 %80, 25
  %82 = load i32, i32* @x.87
  %83 = load i32, i32* @y.88
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart214, label %originalBB1alteredBB

originalBBpart214:                                ; preds = %originalBB1
  br i1 %81, label %90, label %91

; <label>:90:                                     ; preds = %originalBBpart214, %60
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %231

; <label>:91:                                     ; preds = %originalBBpart214
  %92 = load %union.tree_node*, %union.tree_node** %8, align 8
  %93 = call i32 @compare_tree_int(%union.tree_node* %92, i64 1)
  switch i32 %93, label %202 [
    i32 -1, label %94
    i32 0, label %121
    i32 1, label %163
  ]

; <label>:94:                                     ; preds = %91
  %95 = load i32, i32* @x.87
  %96 = load i32, i32* @y.88
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %originalBB16alteredBB, %94
  %103 = load %union.tree_node*, %union.tree_node** %5, align 8
  %104 = bitcast %union.tree_node* %103 to %struct.tree_common*
  %105 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %104, i32 0, i32 0
  %106 = load %union.tree_node*, %union.tree_node** %105, align 8
  %107 = bitcast %union.tree_node* %106 to %struct.tree_list*
  %108 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %107, i32 0, i32 2
  %109 = load %union.tree_node*, %union.tree_node** %108, align 8
  %110 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %111 = call %struct.rtx_def* @expand_expr(%union.tree_node* %109, %struct.rtx_def* %110, i32 0, i32 0)
  %112 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %112, %struct.rtx_def** %4, align 8
  %113 = load i32, i32* @x.87
  %114 = load i32, i32* @y.88
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %231

; <label>:121:                                    ; preds = %91
  %122 = load i32, i32* @x.87
  %123 = load i32, i32* @y.88
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %121
  %130 = load %union.tree_node*, %union.tree_node** %5, align 8
  %131 = bitcast %union.tree_node* %130 to %struct.tree_list*
  %132 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %131, i32 0, i32 2
  %133 = load %union.tree_node*, %union.tree_node** %132, align 8
  %134 = call i8* @c_getstr(%union.tree_node* %133)
  store i8* %134, i8** %12, align 8
  %135 = load i8*, i8** %12, align 8
  %136 = icmp ne i8* %135, null
  %137 = load i32, i32* @x.87
  %138 = load i32, i32* @y.88
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br i1 %136, label %145, label %162

; <label>:145:                                    ; preds = %originalBBpart222
  %146 = load %union.tree_node*, %union.tree_node** %5, align 8
  %147 = bitcast %union.tree_node* %146 to %struct.tree_common*
  %148 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %147, i32 0, i32 0
  %149 = load %union.tree_node*, %union.tree_node** %148, align 8
  %150 = bitcast %union.tree_node* %149 to %struct.tree_list*
  %151 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %150, i32 0, i32 2
  %152 = load %union.tree_node*, %union.tree_node** %151, align 8
  %153 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %152)
  store %union.tree_node* %153, %union.tree_node** %5, align 8
  %154 = load i8*, i8** %12, align 8
  %155 = getelementptr inbounds i8, i8* %154, i64 0
  %156 = load i8, i8* %155, align 1
  %157 = sext i8 %156 to i64
  %158 = call %union.tree_node* @build_int_2_wide(i64 %157, i64 0)
  %159 = load %union.tree_node*, %union.tree_node** %5, align 8
  %160 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %158, %union.tree_node* %159)
  store %union.tree_node* %160, %union.tree_node** %5, align 8
  %161 = load %union.tree_node*, %union.tree_node** %10, align 8
  store %union.tree_node* %161, %union.tree_node** %9, align 8
  br label %203

; <label>:162:                                    ; preds = %originalBBpart222
  br label %163

; <label>:163:                                    ; preds = %162, %91
  %164 = load i32, i32* @x.87
  %165 = load i32, i32* @y.88
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %originalBB24alteredBB, %163
  %172 = load %union.tree_node*, %union.tree_node** %5, align 8
  %173 = bitcast %union.tree_node* %172 to %struct.tree_list*
  %174 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %173, i32 0, i32 2
  %175 = load %union.tree_node*, %union.tree_node** %174, align 8
  store %union.tree_node* %175, %union.tree_node** %13, align 8
  %176 = load %union.tree_node*, %union.tree_node** %5, align 8
  %177 = bitcast %union.tree_node* %176 to %struct.tree_common*
  %178 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %177, i32 0, i32 0
  %179 = load %union.tree_node*, %union.tree_node** %178, align 8
  %180 = bitcast %union.tree_node* %179 to %struct.tree_list*
  %181 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %180, i32 0, i32 2
  %182 = load %union.tree_node*, %union.tree_node** %181, align 8
  %183 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %182)
  store %union.tree_node* %183, %union.tree_node** %5, align 8
  %184 = load %union.tree_node*, %union.tree_node** %8, align 8
  %185 = load %union.tree_node*, %union.tree_node** %5, align 8
  %186 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %184, %union.tree_node* %185)
  store %union.tree_node* %186, %union.tree_node** %5, align 8
  %187 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16
  %188 = load %union.tree_node*, %union.tree_node** %5, align 8
  %189 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %187, %union.tree_node* %188)
  store %union.tree_node* %189, %union.tree_node** %5, align 8
  %190 = load %union.tree_node*, %union.tree_node** %13, align 8
  %191 = load %union.tree_node*, %union.tree_node** %5, align 8
  %192 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %190, %union.tree_node* %191)
  store %union.tree_node* %192, %union.tree_node** %5, align 8
  %193 = load %union.tree_node*, %union.tree_node** %11, align 8
  store %union.tree_node* %193, %union.tree_node** %9, align 8
  %194 = load i32, i32* @x.87
  %195 = load i32, i32* @y.88
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart226, label %originalBB24alteredBB

originalBBpart226:                                ; preds = %originalBB24
  br label %203

; <label>:202:                                    ; preds = %91
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 3400, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.expand_builtin_fputs, i32 0, i32 0)) #6
  unreachable

; <label>:203:                                    ; preds = %originalBBpart226, %145
  %204 = load %union.tree_node*, %union.tree_node** %9, align 8
  %205 = load %union.tree_node*, %union.tree_node** %5, align 8
  %206 = call %union.tree_node* @build_function_call_expr(%union.tree_node* %204, %union.tree_node* %205)
  %207 = load i32, i32* %6, align 4
  %208 = icmp ne i32 %207, 0
  br i1 %208, label %209, label %211

; <label>:209:                                    ; preds = %203
  %210 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  br label %228

; <label>:211:                                    ; preds = %203
  %212 = load i32, i32* @x.87
  %213 = load i32, i32* @y.88
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %originalBB28alteredBB, %211
  %220 = load i32, i32* @x.87
  %221 = load i32, i32* @y.88
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart230, label %originalBB28alteredBB

originalBBpart230:                                ; preds = %originalBB28
  br label %228

; <label>:228:                                    ; preds = %originalBBpart230, %209
  %229 = phi %struct.rtx_def* [ %210, %209 ], [ null, %originalBBpart230 ]
  %230 = call %struct.rtx_def* @expand_expr(%union.tree_node* %206, %struct.rtx_def* %229, i32 0, i32 0)
  store %struct.rtx_def* %230, %struct.rtx_def** %4, align 8
  br label %231

; <label>:231:                                    ; preds = %228, %originalBBpart218, %90, %59, %originalBBpart2
  %232 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  ret %struct.rtx_def* %232

originalBBalteredBB:                              ; preds = %originalBB, %38
  store %struct.rtx_def* null, %struct.rtx_def** %4, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %67
  %233 = load %union.tree_node*, %union.tree_node** %8, align 8
  %234 = bitcast %union.tree_node* %233 to %struct.tree_common*
  %235 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %234, i32 0, i32 2
  %236 = load i32, i32* %235, align 8
  %_ = sub i32 %236, 255
  %gen = mul i32 %_, 255
  %_2 = sub i32 0, %236
  %gen3 = add i32 %_2, 255
  %_4 = sub i32 0, %236
  %gen5 = add i32 %_4, 255
  %_6 = shl i32 %236, 255
  %_7 = sub i32 %236, 255
  %gen8 = mul i32 %_7, 255
  %_9 = shl i32 %236, 255
  %_10 = shl i32 %236, 255
  %_11 = sub i32 %236, 255
  %gen12 = mul i32 %_11, 255
  %237 = and i32 %236, 255
  %238 = icmp ne i32 %237, 25
  br label %originalBB1

originalBB16alteredBB:                            ; preds = %originalBB16, %94
  %239 = load %union.tree_node*, %union.tree_node** %5, align 8
  %240 = bitcast %union.tree_node* %239 to %struct.tree_common*
  %241 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %240, i32 0, i32 0
  %242 = load %union.tree_node*, %union.tree_node** %241, align 8
  %243 = bitcast %union.tree_node* %242 to %struct.tree_list*
  %244 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %243, i32 0, i32 2
  %245 = load %union.tree_node*, %union.tree_node** %244, align 8
  %246 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %247 = call %struct.rtx_def* @expand_expr(%union.tree_node* %245, %struct.rtx_def* %246, i32 0, i32 0)
  %248 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %248, %struct.rtx_def** %4, align 8
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %121
  %249 = load %union.tree_node*, %union.tree_node** %5, align 8
  %250 = bitcast %union.tree_node* %249 to %struct.tree_list*
  %251 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %250, i32 0, i32 2
  %252 = load %union.tree_node*, %union.tree_node** %251, align 8
  %253 = call i8* @c_getstr(%union.tree_node* %252)
  store i8* %253, i8** %12, align 8
  %254 = load i8*, i8** %12, align 8
  %255 = icmp ne i8* %254, null
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %163
  %256 = load %union.tree_node*, %union.tree_node** %5, align 8
  %257 = bitcast %union.tree_node* %256 to %struct.tree_list*
  %258 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %257, i32 0, i32 2
  %259 = load %union.tree_node*, %union.tree_node** %258, align 8
  store %union.tree_node* %259, %union.tree_node** %13, align 8
  %260 = load %union.tree_node*, %union.tree_node** %5, align 8
  %261 = bitcast %union.tree_node* %260 to %struct.tree_common*
  %262 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %261, i32 0, i32 0
  %263 = load %union.tree_node*, %union.tree_node** %262, align 8
  %264 = bitcast %union.tree_node* %263 to %struct.tree_list*
  %265 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %264, i32 0, i32 2
  %266 = load %union.tree_node*, %union.tree_node** %265, align 8
  %267 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %266)
  store %union.tree_node* %267, %union.tree_node** %5, align 8
  %268 = load %union.tree_node*, %union.tree_node** %8, align 8
  %269 = load %union.tree_node*, %union.tree_node** %5, align 8
  %270 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %268, %union.tree_node* %269)
  store %union.tree_node* %270, %union.tree_node** %5, align 8
  %271 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16
  %272 = load %union.tree_node*, %union.tree_node** %5, align 8
  %273 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %271, %union.tree_node* %272)
  store %union.tree_node* %273, %union.tree_node** %5, align 8
  %274 = load %union.tree_node*, %union.tree_node** %13, align 8
  %275 = load %union.tree_node*, %union.tree_node** %5, align 8
  %276 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %274, %union.tree_node* %275)
  store %union.tree_node* %276, %union.tree_node** %5, align 8
  %277 = load %union.tree_node*, %union.tree_node** %11, align 8
  store %union.tree_node* %277, %union.tree_node** %9, align 8
  br label %originalBB24

originalBB28alteredBB:                            ; preds = %originalBB28, %211
  br label %originalBB28
}

declare void @expand_builtin_unwind_init() #1

declare %struct.rtx_def* @expand_builtin_dwarf_fp_regnum() #1

declare void @expand_builtin_init_dwarf_reg_sizes(%union.tree_node*) #1

declare %struct.rtx_def* @expand_builtin_frob_return_addr(%union.tree_node*) #1

declare %struct.rtx_def* @expand_builtin_extract_return_addr(%union.tree_node*) #1

declare void @expand_builtin_eh_return(%union.tree_node*, %union.tree_node*) #1

declare %struct.rtx_def* @expand_builtin_eh_return_data_regno(%union.tree_node*) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_va_start(i32, %union.tree_node*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %union.tree_node*, align 8
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca %union.tree_node*, align 8
  %7 = alloca %union.tree_node*, align 8
  store i32 %0, i32* %3, align 4
  store %union.tree_node* %1, %union.tree_node** %4, align 8
  %8 = load %union.tree_node*, %union.tree_node** %4, align 8
  store %union.tree_node* %8, %union.tree_node** %6, align 8
  %9 = load i32, i32* %3, align 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %17

; <label>:11:                                     ; preds = %2
  %12 = load %union.tree_node*, %union.tree_node** %4, align 8
  %13 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i32 0, i32 0
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8
  store %union.tree_node* %15, %union.tree_node** %6, align 8
  %16 = call %struct.rtx_def* @expand_builtin_next_arg(%union.tree_node* %15)
  store %struct.rtx_def* %16, %struct.rtx_def** %5, align 8
  br label %19

; <label>:17:                                     ; preds = %2
  %18 = call %struct.rtx_def* @expand_builtin_next_arg(%union.tree_node* null)
  store %struct.rtx_def* %18, %struct.rtx_def** %5, align 8
  br label %19

; <label>:19:                                     ; preds = %17, %11
  %20 = load i32, i32* @x.89
  %21 = load i32, i32* @y.90
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %19
  %28 = load %union.tree_node*, %union.tree_node** %6, align 8
  %29 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %29, i32 0, i32 0
  %31 = load %union.tree_node*, %union.tree_node** %30, align 8
  %32 = icmp ne %union.tree_node* %31, null
  %33 = load i32, i32* @x.89
  %34 = load i32, i32* @y.90
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %32, label %41, label %42

; <label>:41:                                     ; preds = %originalBBpart2
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.119, i32 0, i32 0))
  br label %42

; <label>:42:                                     ; preds = %41, %originalBBpart2
  %43 = load %union.tree_node*, %union.tree_node** %4, align 8
  %44 = bitcast %union.tree_node* %43 to %struct.tree_list*
  %45 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %44, i32 0, i32 2
  %46 = load %union.tree_node*, %union.tree_node** %45, align 8
  %47 = call %union.tree_node* @stabilize_va_list(%union.tree_node* %46, i32 1)
  store %union.tree_node* %47, %union.tree_node** %7, align 8
  %48 = load i32, i32* %3, align 4
  %49 = load %union.tree_node*, %union.tree_node** %7, align 8
  %50 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  call void @ix86_va_start(i32 %48, %union.tree_node* %49, %struct.rtx_def* %50)
  %51 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  ret %struct.rtx_def* %51

originalBBalteredBB:                              ; preds = %originalBB, %19
  %52 = load %union.tree_node*, %union.tree_node** %6, align 8
  %53 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %54 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %53, i32 0, i32 0
  %55 = load %union.tree_node*, %union.tree_node** %54, align 8
  %56 = icmp ne %union.tree_node* %55, null
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_va_end(%union.tree_node*) #0 {
  %2 = load i32, i32* @x.91
  %3 = load i32, i32* @y.92
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %union.tree_node*, align 8
  %11 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %10, align 8
  %12 = load %union.tree_node*, %union.tree_node** %10, align 8
  %13 = bitcast %union.tree_node* %12 to %struct.tree_list*
  %14 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %13, i32 0, i32 2
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8
  store %union.tree_node* %15, %union.tree_node** %11, align 8
  %16 = load %union.tree_node*, %union.tree_node** %11, align 8
  %17 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %17, i32 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, 1
  %22 = icmp ne i32 %21, 0
  %23 = load i32, i32* @x.91
  %24 = load i32, i32* @y.92
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %51

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load i32, i32* @x.91
  %33 = load i32, i32* @y.92
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %31
  %40 = load %union.tree_node*, %union.tree_node** %11, align 8
  %41 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %42 = call %struct.rtx_def* @expand_expr(%union.tree_node* %40, %struct.rtx_def* %41, i32 0, i32 0)
  %43 = load i32, i32* @x.91
  %44 = load i32, i32* @y.92
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %51

; <label>:51:                                     ; preds = %originalBBpart28, %originalBBpart2
  %52 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  ret %struct.rtx_def* %52

originalBBalteredBB:                              ; preds = %originalBB, %1
  %53 = alloca %union.tree_node*, align 8
  %54 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %53, align 8
  %55 = load %union.tree_node*, %union.tree_node** %53, align 8
  %56 = bitcast %union.tree_node* %55 to %struct.tree_list*
  %57 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %56, i32 0, i32 2
  %58 = load %union.tree_node*, %union.tree_node** %57, align 8
  store %union.tree_node* %58, %union.tree_node** %54, align 8
  %59 = load %union.tree_node*, %union.tree_node** %54, align 8
  %60 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %61 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %60, i32 0, i32 2
  %62 = load i32, i32* %61, align 8
  %_ = sub i32 0, %62
  %gen = add i32 %_, 8
  %63 = lshr i32 %62, 8
  %_1 = sub i32 0, %63
  %gen2 = add i32 %_1, 1
  %_3 = shl i32 %63, 1
  %_4 = sub i32 %63, 1
  %gen5 = mul i32 %_4, 1
  %64 = and i32 %63, 1
  %65 = icmp ne i32 %64, 0
  br label %originalBB

originalBB6alteredBB:                             ; preds = %originalBB6, %31
  %66 = load %union.tree_node*, %union.tree_node** %11, align 8
  %67 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %68 = call %struct.rtx_def* @expand_expr(%union.tree_node* %66, %struct.rtx_def* %67, i32 0, i32 0)
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_va_copy(%union.tree_node*) #0 {
  %2 = alloca %union.tree_node*, align 8
  %3 = alloca %union.tree_node*, align 8
  %4 = alloca %union.tree_node*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %2, align 8
  %9 = load %union.tree_node*, %union.tree_node** %2, align 8
  %10 = bitcast %union.tree_node* %9 to %struct.tree_list*
  %11 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %10, i32 0, i32 2
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8
  store %union.tree_node* %12, %union.tree_node** %3, align 8
  %13 = load %union.tree_node*, %union.tree_node** %2, align 8
  %14 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %14, i32 0, i32 0
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8
  %17 = bitcast %union.tree_node* %16 to %struct.tree_list*
  %18 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %17, i32 0, i32 2
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8
  store %union.tree_node* %19, %union.tree_node** %4, align 8
  %20 = load %union.tree_node*, %union.tree_node** %3, align 8
  %21 = call %union.tree_node* @stabilize_va_list(%union.tree_node* %20, i32 1)
  store %union.tree_node* %21, %union.tree_node** %3, align 8
  %22 = load %union.tree_node*, %union.tree_node** %4, align 8
  %23 = call %union.tree_node* @stabilize_va_list(%union.tree_node* %22, i32 0)
  store %union.tree_node* %23, %union.tree_node** %4, align 8
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8
  %25 = bitcast %union.tree_node* %24 to %struct.tree_common*
  %26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %25, i32 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 255
  %29 = icmp ne i32 %28, 18
  br i1 %29, label %30, label %44

; <label>:30:                                     ; preds = %1
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8
  %32 = load %union.tree_node*, %union.tree_node** %3, align 8
  %33 = load %union.tree_node*, %union.tree_node** %4, align 8
  %34 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 48, %union.tree_node* %31, %union.tree_node* %32, %union.tree_node* %33)
  store %union.tree_node* %34, %union.tree_node** %5, align 8
  %35 = load %union.tree_node*, %union.tree_node** %5, align 8
  %36 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %36, i32 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, -257
  %40 = or i32 %39, 256
  store i32 %40, i32* %37, align 8
  %41 = load %union.tree_node*, %union.tree_node** %5, align 8
  %42 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %43 = call %struct.rtx_def* @expand_expr(%union.tree_node* %41, %struct.rtx_def* %42, i32 0, i32 0)
  br label %98

; <label>:44:                                     ; preds = %1
  %45 = load %union.tree_node*, %union.tree_node** %3, align 8
  %46 = load i32, i32* @target_flags, align 4
  %47 = and i32 %46, 33554432
  %48 = icmp ne i32 %47, 0
  %49 = select i1 %48, i32 5, i32 4
  %50 = call %struct.rtx_def* @expand_expr(%union.tree_node* %45, %struct.rtx_def* null, i32 %49, i32 0)
  store %struct.rtx_def* %50, %struct.rtx_def** %6, align 8
  %51 = load %union.tree_node*, %union.tree_node** %4, align 8
  %52 = load i32, i32* @target_flags, align 4
  %53 = and i32 %52, 33554432
  %54 = icmp ne i32 %53, 0
  %55 = select i1 %54, i32 5, i32 4
  %56 = call %struct.rtx_def* @expand_expr(%union.tree_node* %51, %struct.rtx_def* null, i32 %55, i32 0)
  store %struct.rtx_def* %56, %struct.rtx_def** %7, align 8
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8
  %58 = bitcast %union.tree_node* %57 to %struct.tree_type*
  %59 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %58, i32 0, i32 3
  %60 = load %union.tree_node*, %union.tree_node** %59, align 8
  %61 = call %struct.rtx_def* @expand_expr(%union.tree_node* %60, %struct.rtx_def* null, i32 0, i32 0)
  store %struct.rtx_def* %61, %struct.rtx_def** %8, align 8
  %62 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %63 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %62)
  store %struct.rtx_def* %63, %struct.rtx_def** %6, align 8
  %64 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %65 = load %union.tree_node*, %union.tree_node** %3, align 8
  %66 = bitcast %union.tree_node* %65 to %struct.tree_common*
  %67 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %66, i32 0, i32 1
  %68 = load %union.tree_node*, %union.tree_node** %67, align 8
  %69 = bitcast %union.tree_node* %68 to %struct.tree_common*
  %70 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %69, i32 0, i32 1
  %71 = load %union.tree_node*, %union.tree_node** %70, align 8
  %72 = call i64 @get_alias_set(%union.tree_node* %71)
  call void @set_mem_alias_set(%struct.rtx_def* %64, i64 %72)
  %73 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %74 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8
  %75 = bitcast %union.tree_node* %74 to %struct.tree_type*
  %76 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %75, i32 0, i32 7
  %77 = load i32, i32* %76, align 8
  call void @set_mem_align(%struct.rtx_def* %73, i32 %77)
  %78 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %79 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %78)
  store %struct.rtx_def* %79, %struct.rtx_def** %7, align 8
  %80 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %81 = load %union.tree_node*, %union.tree_node** %4, align 8
  %82 = bitcast %union.tree_node* %81 to %struct.tree_common*
  %83 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %82, i32 0, i32 1
  %84 = load %union.tree_node*, %union.tree_node** %83, align 8
  %85 = bitcast %union.tree_node* %84 to %struct.tree_common*
  %86 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %85, i32 0, i32 1
  %87 = load %union.tree_node*, %union.tree_node** %86, align 8
  %88 = call i64 @get_alias_set(%union.tree_node* %87)
  call void @set_mem_alias_set(%struct.rtx_def* %80, i64 %88)
  %89 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %90 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8
  %91 = bitcast %union.tree_node* %90 to %struct.tree_type*
  %92 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %91, i32 0, i32 7
  %93 = load i32, i32* %92, align 8
  call void @set_mem_align(%struct.rtx_def* %89, i32 %93)
  %94 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %95 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %96 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %97 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %94, %struct.rtx_def* %95, %struct.rtx_def* %96)
  br label %98

; <label>:98:                                     ; preds = %44, %30
  %99 = load i32, i32* @x.93
  %100 = load i32, i32* @y.94
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %98
  %107 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  %108 = load i32, i32* @x.93
  %109 = load i32, i32* @y.94
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %struct.rtx_def* %107

originalBBalteredBB:                              ; preds = %originalBB, %98
  %116 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_expect(%union.tree_node*, %struct.rtx_def*) #0 {
  %3 = alloca %struct.rtx_def*, align 8
  %4 = alloca %union.tree_node*, align 8
  %5 = alloca %struct.rtx_def*, align 8
  %6 = alloca %union.tree_node*, align 8
  %7 = alloca %union.tree_node*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  %9 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %4, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %5, align 8
  %10 = load %union.tree_node*, %union.tree_node** %4, align 8
  %11 = icmp eq %union.tree_node* %10, null
  br i1 %11, label %18, label %12

; <label>:12:                                     ; preds = %2
  %13 = load %union.tree_node*, %union.tree_node** %4, align 8
  %14 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %14, i32 0, i32 0
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8
  %17 = icmp eq %union.tree_node* %16, null
  br i1 %17, label %18, label %36

; <label>:18:                                     ; preds = %12, %2
  %19 = load i32, i32* @x.95
  %20 = load i32, i32* @y.96
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %18
  %27 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %27, %struct.rtx_def** %3, align 8
  %28 = load i32, i32* @x.95
  %29 = load i32, i32* @y.96
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %122

; <label>:36:                                     ; preds = %12
  %37 = load %union.tree_node*, %union.tree_node** %4, align 8
  %38 = bitcast %union.tree_node* %37 to %struct.tree_list*
  %39 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %38, i32 0, i32 2
  %40 = load %union.tree_node*, %union.tree_node** %39, align 8
  store %union.tree_node* %40, %union.tree_node** %6, align 8
  %41 = load %union.tree_node*, %union.tree_node** %4, align 8
  %42 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %43 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %42, i32 0, i32 0
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8
  %45 = bitcast %union.tree_node* %44 to %struct.tree_list*
  %46 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %45, i32 0, i32 2
  %47 = load %union.tree_node*, %union.tree_node** %46, align 8
  store %union.tree_node* %47, %union.tree_node** %7, align 8
  %48 = load %union.tree_node*, %union.tree_node** %7, align 8
  %49 = bitcast %union.tree_node* %48 to %struct.tree_common*
  %50 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %49, i32 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 255
  %53 = icmp ne i32 %52, 25
  br i1 %53, label %54, label %56

; <label>:54:                                     ; preds = %36
  call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.120, i32 0, i32 0))
  %55 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8
  store %union.tree_node* %55, %union.tree_node** %7, align 8
  br label %56

; <label>:56:                                     ; preds = %54, %36
  %57 = load i32, i32* @x.95
  %58 = load i32, i32* @y.96
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %56
  %65 = load %union.tree_node*, %union.tree_node** %6, align 8
  %66 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %67 = call %struct.rtx_def* @expand_expr(%union.tree_node* %65, %struct.rtx_def* %66, i32 0, i32 0)
  store %struct.rtx_def* %67, %struct.rtx_def** %5, align 8
  %68 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 65535
  %72 = icmp ne i32 %71, 54
  %73 = load i32, i32* @x.95
  %74 = load i32, i32* @y.96
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart28, label %originalBB1alteredBB

originalBBpart28:                                 ; preds = %originalBB1
  br i1 %72, label %81, label %120

; <label>:81:                                     ; preds = %originalBBpart28
  %82 = load i32, i32* @x.95
  %83 = load i32, i32* @y.96
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %81
  %90 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %91 = bitcast %struct.rtx_def* %90 to i32*
  %92 = load i32, i32* %91, align 8
  %93 = lshr i32 %92, 16
  %94 = and i32 %93, 255
  %95 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %96 = call %struct.rtx_def* @force_reg(i32 %94, %struct.rtx_def* %95)
  store %struct.rtx_def* %96, %struct.rtx_def** %5, align 8
  %97 = load %union.tree_node*, %union.tree_node** %7, align 8
  %98 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %100 = load i32, i32* %99, align 8
  %101 = lshr i32 %100, 16
  %102 = and i32 %101, 255
  %103 = call %struct.rtx_def* @expand_expr(%union.tree_node* %97, %struct.rtx_def* null, i32 %102, i32 0)
  store %struct.rtx_def* %103, %struct.rtx_def** %9, align 8
  %104 = call %struct.rtx_def* @emit_note(i8* null, i32 -79)
  store %struct.rtx_def* %104, %struct.rtx_def** %8, align 8
  %105 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %106 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %107 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 0, %struct.rtx_def* %105, %struct.rtx_def* %106)
  %108 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %109, i64 0, i64 3
  %111 = bitcast %union.rtunion_def* %110 to %struct.rtx_def**
  store %struct.rtx_def* %107, %struct.rtx_def** %111, align 8
  %112 = load i32, i32* @x.95
  %113 = load i32, i32* @y.96
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart247, label %originalBB10alteredBB

originalBBpart247:                                ; preds = %originalBB10
  br label %120

; <label>:120:                                    ; preds = %originalBBpart247, %originalBBpart28
  %121 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  store %struct.rtx_def* %121, %struct.rtx_def** %3, align 8
  br label %122

; <label>:122:                                    ; preds = %120, %originalBBpart2
  %123 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  ret %struct.rtx_def* %123

originalBBalteredBB:                              ; preds = %originalBB, %18
  %124 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %124, %struct.rtx_def** %3, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %56
  %125 = load %union.tree_node*, %union.tree_node** %6, align 8
  %126 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %127 = call %struct.rtx_def* @expand_expr(%union.tree_node* %125, %struct.rtx_def* %126, i32 0, i32 0)
  store %struct.rtx_def* %127, %struct.rtx_def** %5, align 8
  %128 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %129 = bitcast %struct.rtx_def* %128 to i32*
  %130 = load i32, i32* %129, align 8
  %_ = sub i32 0, %130
  %gen = add i32 %_, 65535
  %_2 = shl i32 %130, 65535
  %_3 = sub i32 %130, 65535
  %gen4 = mul i32 %_3, 65535
  %_5 = shl i32 %130, 65535
  %_6 = shl i32 %130, 65535
  %131 = and i32 %130, 65535
  %132 = icmp ne i32 %131, 54
  br label %originalBB1

originalBB10alteredBB:                            ; preds = %originalBB10, %81
  %133 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %134 = bitcast %struct.rtx_def* %133 to i32*
  %135 = load i32, i32* %134, align 8
  %_11 = sub i32 0, %135
  %gen12 = add i32 %_11, 16
  %_13 = sub i32 %135, 16
  %gen14 = mul i32 %_13, 16
  %_15 = sub i32 0, %135
  %gen16 = add i32 %_15, 16
  %_17 = sub i32 %135, 16
  %gen18 = mul i32 %_17, 16
  %_19 = sub i32 %135, 16
  %gen20 = mul i32 %_19, 16
  %_21 = sub i32 %135, 16
  %gen22 = mul i32 %_21, 16
  %_23 = shl i32 %135, 16
  %136 = lshr i32 %135, 16
  %_24 = sub i32 %136, 255
  %gen25 = mul i32 %_24, 255
  %_26 = sub i32 0, %136
  %gen27 = add i32 %_26, 255
  %_28 = shl i32 %136, 255
  %_29 = sub i32 0, %136
  %gen30 = add i32 %_29, 255
  %_31 = sub i32 0, %136
  %gen32 = add i32 %_31, 255
  %137 = and i32 %136, 255
  %138 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %139 = call %struct.rtx_def* @force_reg(i32 %137, %struct.rtx_def* %138)
  store %struct.rtx_def* %139, %struct.rtx_def** %5, align 8
  %140 = load %union.tree_node*, %union.tree_node** %7, align 8
  %141 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %142 = bitcast %struct.rtx_def* %141 to i32*
  %143 = load i32, i32* %142, align 8
  %_33 = sub i32 0, %143
  %gen34 = add i32 %_33, 16
  %144 = lshr i32 %143, 16
  %_35 = shl i32 %144, 255
  %_36 = shl i32 %144, 255
  %_37 = sub i32 0, %144
  %gen38 = add i32 %_37, 255
  %_39 = sub i32 0, %144
  %gen40 = add i32 %_39, 255
  %_41 = shl i32 %144, 255
  %_42 = sub i32 0, %144
  %gen43 = add i32 %_42, 255
  %_44 = sub i32 0, %144
  %gen45 = add i32 %_44, 255
  %145 = and i32 %144, 255
  %146 = call %struct.rtx_def* @expand_expr(%union.tree_node* %140, %struct.rtx_def* null, i32 %145, i32 0)
  store %struct.rtx_def* %146, %struct.rtx_def** %9, align 8
  %147 = call %struct.rtx_def* @emit_note(i8* null, i32 -79)
  store %struct.rtx_def* %147, %struct.rtx_def** %8, align 8
  %148 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %149 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %150 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 0, %struct.rtx_def* %148, %struct.rtx_def* %149)
  %151 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %152, i64 0, i64 3
  %154 = bitcast %union.rtunion_def* %153 to %struct.rtx_def**
  store %struct.rtx_def* %150, %struct.rtx_def** %154, align 8
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define internal void @expand_builtin_prefetch(%union.tree_node*) #0 {
  %2 = alloca %union.tree_node*, align 8
  %3 = alloca %union.tree_node*, align 8
  %4 = alloca %union.tree_node*, align 8
  %5 = alloca %union.tree_node*, align 8
  %6 = alloca %struct.rtx_def*, align 8
  %7 = alloca %struct.rtx_def*, align 8
  %8 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %2, align 8
  %9 = load %union.tree_node*, %union.tree_node** %2, align 8
  %10 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %9, i32 13, i32 0)
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %13, label %12

; <label>:12:                                     ; preds = %1
  br label %277

; <label>:13:                                     ; preds = %1
  %14 = load %union.tree_node*, %union.tree_node** %2, align 8
  %15 = bitcast %union.tree_node* %14 to %struct.tree_list*
  %16 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %15, i32 0, i32 2
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8
  store %union.tree_node* %17, %union.tree_node** %3, align 8
  %18 = load %union.tree_node*, %union.tree_node** %2, align 8
  %19 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %19, i32 0, i32 0
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8
  %22 = icmp ne %union.tree_node* %21, null
  br i1 %22, label %23, label %85

; <label>:23:                                     ; preds = %13
  %24 = load i32, i32* @x.97
  %25 = load i32, i32* @y.98
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %23
  %32 = load %union.tree_node*, %union.tree_node** %2, align 8
  %33 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %34 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %33, i32 0, i32 0
  %35 = load %union.tree_node*, %union.tree_node** %34, align 8
  %36 = bitcast %union.tree_node* %35 to %struct.tree_list*
  %37 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %36, i32 0, i32 2
  %38 = load %union.tree_node*, %union.tree_node** %37, align 8
  store %union.tree_node* %38, %union.tree_node** %4, align 8
  %39 = load %union.tree_node*, %union.tree_node** %2, align 8
  %40 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %40, i32 0, i32 0
  %42 = load %union.tree_node*, %union.tree_node** %41, align 8
  %43 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %44 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %43, i32 0, i32 0
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8
  %46 = icmp ne %union.tree_node* %45, null
  %47 = load i32, i32* @x.97
  %48 = load i32, i32* @y.98
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %46, label %55, label %66

; <label>:55:                                     ; preds = %originalBBpart2
  %56 = load %union.tree_node*, %union.tree_node** %2, align 8
  %57 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %58 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %57, i32 0, i32 0
  %59 = load %union.tree_node*, %union.tree_node** %58, align 8
  %60 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %61 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %60, i32 0, i32 0
  %62 = load %union.tree_node*, %union.tree_node** %61, align 8
  %63 = bitcast %union.tree_node* %62 to %struct.tree_list*
  %64 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %63, i32 0, i32 2
  %65 = load %union.tree_node*, %union.tree_node** %64, align 8
  store %union.tree_node* %65, %union.tree_node** %5, align 8
  br label %84

; <label>:66:                                     ; preds = %originalBBpart2
  %67 = load i32, i32* @x.97
  %68 = load i32, i32* @y.98
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %66
  %75 = call %union.tree_node* @build_int_2_wide(i64 3, i64 0)
  store %union.tree_node* %75, %union.tree_node** %5, align 8
  %76 = load i32, i32* @x.97
  %77 = load i32, i32* @y.98
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %84

; <label>:84:                                     ; preds = %originalBBpart24, %55
  br label %88

; <label>:85:                                     ; preds = %13
  %86 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8
  store %union.tree_node* %86, %union.tree_node** %4, align 8
  %87 = call %union.tree_node* @build_int_2_wide(i64 3, i64 0)
  store %union.tree_node* %87, %union.tree_node** %5, align 8
  br label %88

; <label>:88:                                     ; preds = %85, %84
  %89 = load %union.tree_node*, %union.tree_node** %3, align 8
  %90 = load i32, i32* @target_flags, align 4
  %91 = and i32 %90, 33554432
  %92 = icmp ne i32 %91, 0
  %93 = select i1 %92, i32 5, i32 4
  %94 = call %struct.rtx_def* @expand_expr(%union.tree_node* %89, %struct.rtx_def* null, i32 %93, i32 0)
  store %struct.rtx_def* %94, %struct.rtx_def** %6, align 8
  %95 = load %union.tree_node*, %union.tree_node** %4, align 8
  %96 = bitcast %union.tree_node* %95 to %struct.tree_common*
  %97 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %96, i32 0, i32 2
  %98 = load i32, i32* %97, align 8
  %99 = and i32 %98, 255
  %100 = icmp ne i32 %99, 25
  br i1 %100, label %101, label %103

; <label>:101:                                    ; preds = %88
  call void (i8*, ...) @error(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.121, i32 0, i32 0))
  %102 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8
  store %union.tree_node* %102, %union.tree_node** %4, align 8
  br label %103

; <label>:103:                                    ; preds = %101, %88
  %104 = load %union.tree_node*, %union.tree_node** %4, align 8
  %105 = call %struct.rtx_def* @expand_expr(%union.tree_node* %104, %struct.rtx_def* null, i32 0, i32 0)
  store %struct.rtx_def* %105, %struct.rtx_def** %7, align 8
  %106 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1
  %108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %107, i64 0, i64 0
  %109 = bitcast %union.rtunion_def* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = icmp ne i64 %110, 0
  br i1 %111, label %112, label %137

; <label>:112:                                    ; preds = %103
  %113 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1
  %115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %114, i64 0, i64 0
  %116 = bitcast %union.rtunion_def* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = icmp ne i64 %117, 1
  br i1 %118, label %119, label %137

; <label>:119:                                    ; preds = %112
  %120 = load i32, i32* @x.97
  %121 = load i32, i32* @y.98
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %119
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.122, i32 0, i32 0))
  %128 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %128, %struct.rtx_def** %7, align 8
  %129 = load i32, i32* @x.97
  %130 = load i32, i32* @y.98
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %137

; <label>:137:                                    ; preds = %originalBBpart28, %112, %103
  %138 = load %union.tree_node*, %union.tree_node** %5, align 8
  %139 = bitcast %union.tree_node* %138 to %struct.tree_common*
  %140 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %139, i32 0, i32 2
  %141 = load i32, i32* %140, align 8
  %142 = and i32 %141, 255
  %143 = icmp ne i32 %142, 25
  br i1 %143, label %144, label %146

; <label>:144:                                    ; preds = %137
  call void (i8*, ...) @error(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.123, i32 0, i32 0))
  %145 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8
  store %union.tree_node* %145, %union.tree_node** %5, align 8
  br label %146

; <label>:146:                                    ; preds = %144, %137
  %147 = load %union.tree_node*, %union.tree_node** %5, align 8
  %148 = call %struct.rtx_def* @expand_expr(%union.tree_node* %147, %struct.rtx_def* null, i32 0, i32 0)
  store %struct.rtx_def* %148, %struct.rtx_def** %8, align 8
  %149 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i32 0, i32 1
  %151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %150, i64 0, i64 0
  %152 = bitcast %union.rtunion_def* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = icmp slt i64 %153, 0
  br i1 %154, label %178, label %155

; <label>:155:                                    ; preds = %146
  %156 = load i32, i32* @x.97
  %157 = load i32, i32* @y.98
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %155
  %164 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %165 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1
  %166 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %165, i64 0, i64 0
  %167 = bitcast %union.rtunion_def* %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = icmp sgt i64 %168, 3
  %170 = load i32, i32* @x.97
  %171 = load i32, i32* @y.98
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %169, label %178, label %180

; <label>:178:                                    ; preds = %originalBBpart212, %146
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.124, i32 0, i32 0))
  %179 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %179, %struct.rtx_def** %8, align 8
  br label %180

; <label>:180:                                    ; preds = %178, %originalBBpart212
  %181 = load i32, i32* @x86_prefetch_sse, align 4
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %203, label %183

; <label>:183:                                    ; preds = %180
  %184 = load i32, i32* @x.97
  %185 = load i32, i32* @y.98
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %183
  %192 = load i32, i32* @target_flags, align 4
  %193 = and i32 %192, 1048576
  %194 = icmp ne i32 %193, 0
  %195 = load i32, i32* @x.97
  %196 = load i32, i32* @y.98
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart224, label %originalBB14alteredBB

originalBBpart224:                                ; preds = %originalBB14
  br i1 %194, label %203, label %245

; <label>:203:                                    ; preds = %originalBBpart224, %180
  %204 = load %struct.insn_operand_data*, %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 1316, i32 3), align 8
  %205 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %204, i64 0
  %206 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %205, i32 0, i32 0
  %207 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %206, align 8
  %208 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %209 = load %struct.insn_operand_data*, %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 1316, i32 3), align 8
  %210 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %209, i64 0
  %211 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %210, i32 0, i32 2
  %212 = load i16, i16* %211, align 8
  %213 = zext i16 %212 to i32
  %214 = call i32 %207(%struct.rtx_def* %208, i32 %213)
  %215 = icmp ne i32 %214, 0
  br i1 %215, label %239, label %216

; <label>:216:                                    ; preds = %203
  %217 = load i32, i32* @x.97
  %218 = load i32, i32* @y.98
  %219 = sub i32 %217, 1
  %220 = mul i32 %217, %219
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %222, %223
  br i1 %224, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %216
  %225 = load i32, i32* @target_flags, align 4
  %226 = and i32 %225, 33554432
  %227 = icmp ne i32 %226, 0
  %228 = select i1 %227, i32 5, i32 4
  %229 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %230 = call %struct.rtx_def* @force_reg(i32 %228, %struct.rtx_def* %229)
  store %struct.rtx_def* %230, %struct.rtx_def** %6, align 8
  %231 = load i32, i32* @x.97
  %232 = load i32, i32* @y.98
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart235, label %originalBB26alteredBB

originalBBpart235:                                ; preds = %originalBB26
  br label %239

; <label>:239:                                    ; preds = %originalBBpart235, %203
  %240 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %241 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8
  %242 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %243 = call %struct.rtx_def* @gen_prefetch(%struct.rtx_def* %240, %struct.rtx_def* %241, %struct.rtx_def* %242)
  %244 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %243)
  br label %248

; <label>:245:                                    ; preds = %originalBBpart224
  %246 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %247 = call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %246, i32 0)
  store %struct.rtx_def* %247, %struct.rtx_def** %6, align 8
  br label %248

; <label>:248:                                    ; preds = %245, %239
  %249 = load i32, i32* @x.97
  %250 = load i32, i32* @y.98
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %248
  %257 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %258 = bitcast %struct.rtx_def* %257 to i32*
  %259 = load i32, i32* %258, align 8
  %260 = and i32 %259, 65535
  %261 = icmp ne i32 %260, 66
  %262 = load i32, i32* @x.97
  %263 = load i32, i32* @y.98
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBBpart241, label %originalBB37alteredBB

originalBBpart241:                                ; preds = %originalBB37
  br i1 %261, label %270, label %277

; <label>:270:                                    ; preds = %originalBBpart241
  %271 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %272 = call i32 @side_effects_p(%struct.rtx_def* %271)
  %273 = icmp ne i32 %272, 0
  br i1 %273, label %274, label %277

; <label>:274:                                    ; preds = %270
  %275 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %276 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %275)
  br label %277

; <label>:277:                                    ; preds = %274, %270, %originalBBpart241, %12
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %23
  %278 = load %union.tree_node*, %union.tree_node** %2, align 8
  %279 = bitcast %union.tree_node* %278 to %struct.tree_common*
  %280 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %279, i32 0, i32 0
  %281 = load %union.tree_node*, %union.tree_node** %280, align 8
  %282 = bitcast %union.tree_node* %281 to %struct.tree_list*
  %283 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %282, i32 0, i32 2
  %284 = load %union.tree_node*, %union.tree_node** %283, align 8
  store %union.tree_node* %284, %union.tree_node** %4, align 8
  %285 = load %union.tree_node*, %union.tree_node** %2, align 8
  %286 = bitcast %union.tree_node* %285 to %struct.tree_common*
  %287 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %286, i32 0, i32 0
  %288 = load %union.tree_node*, %union.tree_node** %287, align 8
  %289 = bitcast %union.tree_node* %288 to %struct.tree_common*
  %290 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %289, i32 0, i32 0
  %291 = load %union.tree_node*, %union.tree_node** %290, align 8
  %292 = icmp ne %union.tree_node* %291, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %66
  %293 = call %union.tree_node* @build_int_2_wide(i64 3, i64 0)
  store %union.tree_node* %293, %union.tree_node** %5, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %119
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.122, i32 0, i32 0))
  %294 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %294, %struct.rtx_def** %7, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %155
  %295 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %296 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %295, i32 0, i32 1
  %297 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %296, i64 0, i64 0
  %298 = bitcast %union.rtunion_def* %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = icmp sgt i64 %299, 3
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %183
  %301 = load i32, i32* @target_flags, align 4
  %_ = sub i32 %301, 1048576
  %gen = mul i32 %_, 1048576
  %_15 = shl i32 %301, 1048576
  %_16 = shl i32 %301, 1048576
  %_17 = shl i32 %301, 1048576
  %_18 = sub i32 0, %301
  %gen19 = add i32 %_18, 1048576
  %_20 = shl i32 %301, 1048576
  %_21 = sub i32 %301, 1048576
  %gen22 = mul i32 %_21, 1048576
  %302 = and i32 %301, 1048576
  %303 = icmp ne i32 %302, 0
  br label %originalBB14

originalBB26alteredBB:                            ; preds = %originalBB26, %216
  %304 = load i32, i32* @target_flags, align 4
  %_27 = sub i32 0, %304
  %gen28 = add i32 %_27, 33554432
  %_29 = shl i32 %304, 33554432
  %_30 = sub i32 %304, 33554432
  %gen31 = mul i32 %_30, 33554432
  %_32 = sub i32 %304, 33554432
  %gen33 = mul i32 %_32, 33554432
  %305 = and i32 %304, 33554432
  %306 = icmp ne i32 %305, 0
  %307 = select i1 %306, i32 5, i32 4
  %308 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %309 = call %struct.rtx_def* @force_reg(i32 %307, %struct.rtx_def* %308)
  store %struct.rtx_def* %309, %struct.rtx_def** %6, align 8
  br label %originalBB26

originalBB37alteredBB:                            ; preds = %originalBB37, %248
  %310 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %311 = bitcast %struct.rtx_def* %310 to i32*
  %312 = load i32, i32* %311, align 8
  %_38 = sub i32 0, %312
  %gen39 = add i32 %_38, 65535
  %313 = and i32 %312, 65535
  %314 = icmp ne i32 %313, 66
  br label %originalBB37
}

; Function Attrs: noinline nounwind uwtable
define %union.tree_node* @fold_builtin(%union.tree_node*) #0 {
  %2 = load i32, i32* @x.99
  %3 = load i32, i32* @y.100
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %union.tree_node*, align 8
  %11 = alloca %union.tree_node*, align 8
  %12 = alloca %union.tree_node*, align 8
  %13 = alloca %union.tree_node*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %11, align 8
  %16 = load %union.tree_node*, %union.tree_node** %11, align 8
  %17 = bitcast %union.tree_node* %16 to %struct.tree_exp*
  %18 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %17, i32 0, i32 2
  %19 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %18, i64 0, i64 0
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8
  %21 = bitcast %union.tree_node* %20 to %struct.tree_exp*
  %22 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %21, i32 0, i32 2
  %23 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %22, i64 0, i64 0
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8
  store %union.tree_node* %24, %union.tree_node** %12, align 8
  %25 = load %union.tree_node*, %union.tree_node** %11, align 8
  %26 = bitcast %union.tree_node* %25 to %struct.tree_exp*
  %27 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %26, i32 0, i32 2
  %28 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %27, i64 0, i64 1
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8
  store %union.tree_node* %29, %union.tree_node** %13, align 8
  %30 = load %union.tree_node*, %union.tree_node** %12, align 8
  %31 = bitcast %union.tree_node* %30 to %struct.tree_decl*
  %32 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %31, i32 0, i32 6
  %33 = bitcast %union.anon* %32 to i32*
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %14, align 4
  %35 = load %union.tree_node*, %union.tree_node** %12, align 8
  %36 = bitcast %union.tree_node* %35 to %struct.tree_decl*
  %37 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %36, i32 0, i32 5
  %38 = bitcast i48* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = lshr i64 %39, 29
  %41 = and i64 %40, 3
  %42 = trunc i64 %41 to i32
  %43 = icmp eq i32 %42, 2
  %44 = load i32, i32* @x.99
  %45 = load i32, i32* @y.100
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %43, label %52, label %69

; <label>:52:                                     ; preds = %originalBBpart2
  %53 = load i32, i32* @x.99
  %54 = load i32, i32* @y.100
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %52
  store %union.tree_node* null, %union.tree_node** %10, align 8
  %61 = load i32, i32* @x.99
  %62 = load i32, i32* @y.100
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %159

; <label>:69:                                     ; preds = %originalBBpart2
  %70 = load i32, i32* %14, align 4
  switch i32 %70, label %157 [
    i32 51, label %71
    i32 48, label %90
    i32 31, label %109
  ]

; <label>:71:                                     ; preds = %69
  %72 = load i32, i32* @x.99
  %73 = load i32, i32* @y.100
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %71
  %80 = load %union.tree_node*, %union.tree_node** %13, align 8
  %81 = call %union.tree_node* @fold_builtin_constant_p(%union.tree_node* %80)
  store %union.tree_node* %81, %union.tree_node** %10, align 8
  %82 = load i32, i32* @x.99
  %83 = load i32, i32* @y.100
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %159

; <label>:90:                                     ; preds = %69
  %91 = load i32, i32* @x.99
  %92 = load i32, i32* @y.100
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %90
  %99 = load %union.tree_node*, %union.tree_node** %13, align 8
  %100 = call %union.tree_node* @fold_builtin_classify_type(%union.tree_node* %99)
  store %union.tree_node* %100, %union.tree_node** %10, align 8
  %101 = load i32, i32* @x.99
  %102 = load i32, i32* @y.100
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %159

; <label>:109:                                    ; preds = %69
  %110 = load i32, i32* @x.99
  %111 = load i32, i32* @y.100
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %109
  %118 = load %union.tree_node*, %union.tree_node** %13, align 8
  %119 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %118, i32 13, i32 5)
  %120 = icmp ne i32 %119, 0
  %121 = load i32, i32* @x.99
  %122 = load i32, i32* @y.100
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %120, label %129, label %156

; <label>:129:                                    ; preds = %originalBBpart220
  %130 = load i32, i32* @x.99
  %131 = load i32, i32* @y.100
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %129
  %138 = load %union.tree_node*, %union.tree_node** %13, align 8
  %139 = bitcast %union.tree_node* %138 to %struct.tree_list*
  %140 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %139, i32 0, i32 2
  %141 = load %union.tree_node*, %union.tree_node** %140, align 8
  %142 = call %union.tree_node* @c_strlen(%union.tree_node* %141)
  store %union.tree_node* %142, %union.tree_node** %15, align 8
  %143 = load %union.tree_node*, %union.tree_node** %15, align 8
  %144 = icmp ne %union.tree_node* %143, null
  %145 = load i32, i32* @x.99
  %146 = load i32, i32* @y.100
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %144, label %153, label %155

; <label>:153:                                    ; preds = %originalBBpart224
  %154 = load %union.tree_node*, %union.tree_node** %15, align 8
  store %union.tree_node* %154, %union.tree_node** %10, align 8
  br label %159

; <label>:155:                                    ; preds = %originalBBpart224
  br label %156

; <label>:156:                                    ; preds = %155, %originalBBpart220
  br label %158

; <label>:157:                                    ; preds = %69
  br label %158

; <label>:158:                                    ; preds = %157, %156
  store %union.tree_node* null, %union.tree_node** %10, align 8
  br label %159

; <label>:159:                                    ; preds = %158, %153, %originalBBpart216, %originalBBpart212, %originalBBpart28
  %160 = load %union.tree_node*, %union.tree_node** %10, align 8
  ret %union.tree_node* %160

originalBBalteredBB:                              ; preds = %originalBB, %1
  %161 = alloca %union.tree_node*, align 8
  %162 = alloca %union.tree_node*, align 8
  %163 = alloca %union.tree_node*, align 8
  %164 = alloca %union.tree_node*, align 8
  %165 = alloca i32, align 4
  %166 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %162, align 8
  %167 = load %union.tree_node*, %union.tree_node** %162, align 8
  %168 = bitcast %union.tree_node* %167 to %struct.tree_exp*
  %169 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %168, i32 0, i32 2
  %170 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %169, i64 0, i64 0
  %171 = load %union.tree_node*, %union.tree_node** %170, align 8
  %172 = bitcast %union.tree_node* %171 to %struct.tree_exp*
  %173 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %172, i32 0, i32 2
  %174 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %173, i64 0, i64 0
  %175 = load %union.tree_node*, %union.tree_node** %174, align 8
  store %union.tree_node* %175, %union.tree_node** %163, align 8
  %176 = load %union.tree_node*, %union.tree_node** %162, align 8
  %177 = bitcast %union.tree_node* %176 to %struct.tree_exp*
  %178 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %177, i32 0, i32 2
  %179 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %178, i64 0, i64 1
  %180 = load %union.tree_node*, %union.tree_node** %179, align 8
  store %union.tree_node* %180, %union.tree_node** %164, align 8
  %181 = load %union.tree_node*, %union.tree_node** %163, align 8
  %182 = bitcast %union.tree_node* %181 to %struct.tree_decl*
  %183 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %182, i32 0, i32 6
  %184 = bitcast %union.anon* %183 to i32*
  %185 = load i32, i32* %184, align 8
  store i32 %185, i32* %165, align 4
  %186 = load %union.tree_node*, %union.tree_node** %163, align 8
  %187 = bitcast %union.tree_node* %186 to %struct.tree_decl*
  %188 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %187, i32 0, i32 5
  %189 = bitcast i48* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %_ = shl i64 %190, 29
  %191 = lshr i64 %190, 29
  %_1 = sub i64 0, %191
  %gen = add i64 %_1, 3
  %_2 = sub i64 0, %191
  %gen3 = add i64 %_2, 3
  %_4 = shl i64 %191, 3
  %_5 = shl i64 %191, 3
  %192 = and i64 %191, 3
  %193 = trunc i64 %192 to i32
  %194 = icmp eq i32 %193, 2
  br label %originalBB

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  store %union.tree_node* null, %union.tree_node** %10, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %71
  %195 = load %union.tree_node*, %union.tree_node** %13, align 8
  %196 = call %union.tree_node* @fold_builtin_constant_p(%union.tree_node* %195)
  store %union.tree_node* %196, %union.tree_node** %10, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %90
  %197 = load %union.tree_node*, %union.tree_node** %13, align 8
  %198 = call %union.tree_node* @fold_builtin_classify_type(%union.tree_node* %197)
  store %union.tree_node* %198, %union.tree_node** %10, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %109
  %199 = load %union.tree_node*, %union.tree_node** %13, align 8
  %200 = call i32 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %199, i32 13, i32 5)
  %201 = icmp ne i32 %200, 0
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %129
  %202 = load %union.tree_node*, %union.tree_node** %13, align 8
  %203 = bitcast %union.tree_node* %202 to %struct.tree_list*
  %204 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %203, i32 0, i32 2
  %205 = load %union.tree_node*, %union.tree_node** %204, align 8
  %206 = call %union.tree_node* @c_strlen(%union.tree_node* %205)
  store %union.tree_node* %206, %union.tree_node** %15, align 8
  %207 = load %union.tree_node*, %union.tree_node** %15, align 8
  %208 = icmp ne %union.tree_node* %207, null
  br label %originalBB22
}

; Function Attrs: noinline nounwind uwtable
define internal %union.tree_node* @fold_builtin_constant_p(%union.tree_node*) #0 {
  %2 = load i32, i32* @x.101
  %3 = load i32, i32* @y.102
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %union.tree_node*, align 8
  %11 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %11, align 8
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8
  %13 = icmp eq %union.tree_node* %12, null
  %14 = load i32, i32* @x.101
  %15 = load i32, i32* @y.102
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %13, label %22, label %39

; <label>:22:                                     ; preds = %originalBBpart2
  %23 = load i32, i32* @x.101
  %24 = load i32, i32* @y.102
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %22
  store %union.tree_node* null, %union.tree_node** %10, align 8
  %31 = load i32, i32* @x.101
  %32 = load i32, i32* @y.102
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %318

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = load i32, i32* @x.101
  %41 = load i32, i32* @y.102
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %39
  %48 = load %union.tree_node*, %union.tree_node** %11, align 8
  %49 = bitcast %union.tree_node* %48 to %struct.tree_list*
  %50 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %49, i32 0, i32 2
  %51 = load %union.tree_node*, %union.tree_node** %50, align 8
  store %union.tree_node* %51, %union.tree_node** %11, align 8
  %52 = load i32, i32* @x.101
  %53 = load i32, i32* @y.102
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %60

; <label>:60:                                     ; preds = %131, %originalBBpart28
  %61 = load %union.tree_node*, %union.tree_node** %11, align 8
  %62 = bitcast %union.tree_node* %61 to %struct.tree_common*
  %63 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %62, i32 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 255
  %66 = icmp eq i32 %65, 115
  br i1 %66, label %97, label %67

; <label>:67:                                     ; preds = %60
  %68 = load %union.tree_node*, %union.tree_node** %11, align 8
  %69 = bitcast %union.tree_node* %68 to %struct.tree_common*
  %70 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %69, i32 0, i32 2
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, 255
  %73 = icmp eq i32 %72, 114
  br i1 %73, label %97, label %74

; <label>:74:                                     ; preds = %67
  %75 = load i32, i32* @x.101
  %76 = load i32, i32* @y.102
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %74
  %83 = load %union.tree_node*, %union.tree_node** %11, align 8
  %84 = bitcast %union.tree_node* %83 to %struct.tree_common*
  %85 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %84, i32 0, i32 2
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, 255
  %88 = icmp eq i32 %87, 116
  %89 = load i32, i32* @x.101
  %90 = load i32, i32* @y.102
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart227, label %originalBB10alteredBB

originalBBpart227:                                ; preds = %originalBB10
  br i1 %88, label %97, label %129

; <label>:97:                                     ; preds = %originalBBpart227, %67, %60
  %98 = load %union.tree_node*, %union.tree_node** %11, align 8
  %99 = bitcast %union.tree_node* %98 to %struct.tree_exp*
  %100 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %99, i32 0, i32 2
  %101 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %100, i64 0, i64 0
  %102 = load %union.tree_node*, %union.tree_node** %101, align 8
  %103 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16
  %104 = icmp ne %union.tree_node* %102, %103
  br i1 %104, label %105, label %129

; <label>:105:                                    ; preds = %97
  %106 = load %union.tree_node*, %union.tree_node** %11, align 8
  %107 = bitcast %union.tree_node* %106 to %struct.tree_common*
  %108 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %107, i32 0, i32 1
  %109 = load %union.tree_node*, %union.tree_node** %108, align 8
  %110 = bitcast %union.tree_node* %109 to %struct.tree_type*
  %111 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %110, i32 0, i32 6
  %112 = load i32, i32* %111, align 4
  %113 = lshr i32 %112, 9
  %114 = and i32 %113, 127
  %115 = load %union.tree_node*, %union.tree_node** %11, align 8
  %116 = bitcast %union.tree_node* %115 to %struct.tree_exp*
  %117 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %116, i32 0, i32 2
  %118 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %117, i64 0, i64 0
  %119 = load %union.tree_node*, %union.tree_node** %118, align 8
  %120 = bitcast %union.tree_node* %119 to %struct.tree_common*
  %121 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %120, i32 0, i32 1
  %122 = load %union.tree_node*, %union.tree_node** %121, align 8
  %123 = bitcast %union.tree_node* %122 to %struct.tree_type*
  %124 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %123, i32 0, i32 6
  %125 = load i32, i32* %124, align 4
  %126 = lshr i32 %125, 9
  %127 = and i32 %126, 127
  %128 = icmp eq i32 %114, %127
  br label %129

; <label>:129:                                    ; preds = %105, %97, %originalBBpart227
  %130 = phi i1 [ false, %97 ], [ false, %originalBBpart227 ], [ %128, %105 ]
  br i1 %130, label %131, label %137

; <label>:131:                                    ; preds = %129
  %132 = load %union.tree_node*, %union.tree_node** %11, align 8
  %133 = bitcast %union.tree_node* %132 to %struct.tree_exp*
  %134 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %133, i32 0, i32 2
  %135 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %134, i64 0, i64 0
  %136 = load %union.tree_node*, %union.tree_node** %135, align 8
  store %union.tree_node* %136, %union.tree_node** %11, align 8
  br label %60

; <label>:137:                                    ; preds = %129
  %138 = load %union.tree_node*, %union.tree_node** %11, align 8
  %139 = bitcast %union.tree_node* %138 to %struct.tree_common*
  %140 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %139, i32 0, i32 2
  %141 = load i32, i32* %140, align 8
  %142 = and i32 %141, 255
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i64 0, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = sext i8 %145 to i32
  %147 = icmp eq i32 %146, 99
  br i1 %147, label %197, label %148

; <label>:148:                                    ; preds = %137
  %149 = load %union.tree_node*, %union.tree_node** %11, align 8
  %150 = bitcast %union.tree_node* %149 to %struct.tree_common*
  %151 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %150, i32 0, i32 2
  %152 = load i32, i32* %151, align 8
  %153 = and i32 %152, 255
  %154 = icmp eq i32 %153, 46
  br i1 %154, label %155, label %163

; <label>:155:                                    ; preds = %148
  %156 = load %union.tree_node*, %union.tree_node** %11, align 8
  %157 = bitcast %union.tree_node* %156 to %struct.tree_common*
  %158 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %157, i32 0, i32 2
  %159 = load i32, i32* %158, align 8
  %160 = lshr i32 %159, 9
  %161 = and i32 %160, 1
  %162 = icmp ne i32 %161, 0
  br i1 %162, label %197, label %163

; <label>:163:                                    ; preds = %155, %148
  %164 = load i32, i32* @x.101
  %165 = load i32, i32* @y.102
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %originalBB29alteredBB, %163
  %172 = load %union.tree_node*, %union.tree_node** %11, align 8
  %173 = bitcast %union.tree_node* %172 to %struct.tree_common*
  %174 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %173, i32 0, i32 2
  %175 = load i32, i32* %174, align 8
  %176 = and i32 %175, 255
  %177 = icmp eq i32 %176, 121
  %178 = load i32, i32* @x.101
  %179 = load i32, i32* @y.102
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart236, label %originalBB29alteredBB

originalBBpart236:                                ; preds = %originalBB29
  br i1 %177, label %186, label %199

; <label>:186:                                    ; preds = %originalBBpart236
  %187 = load %union.tree_node*, %union.tree_node** %11, align 8
  %188 = bitcast %union.tree_node* %187 to %struct.tree_exp*
  %189 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %188, i32 0, i32 2
  %190 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %189, i64 0, i64 0
  %191 = load %union.tree_node*, %union.tree_node** %190, align 8
  %192 = bitcast %union.tree_node* %191 to %struct.tree_common*
  %193 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %192, i32 0, i32 2
  %194 = load i32, i32* %193, align 8
  %195 = and i32 %194, 255
  %196 = icmp eq i32 %195, 29
  br i1 %196, label %197, label %199

; <label>:197:                                    ; preds = %186, %155, %137
  %198 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 16
  store %union.tree_node* %198, %union.tree_node** %10, align 8
  br label %318

; <label>:199:                                    ; preds = %186, %originalBBpart236
  %200 = load %union.tree_node*, %union.tree_node** %11, align 8
  %201 = bitcast %union.tree_node* %200 to %struct.tree_common*
  %202 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %201, i32 0, i32 2
  %203 = load i32, i32* %202, align 8
  %204 = lshr i32 %203, 8
  %205 = and i32 %204, 1
  %206 = icmp ne i32 %205, 0
  br i1 %206, label %315, label %207

; <label>:207:                                    ; preds = %199
  %208 = load i32, i32* @x.101
  %209 = load i32, i32* @y.102
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %207
  %216 = load i32, i32* @cse_not_expected, align 4
  %217 = icmp ne i32 %216, 0
  %218 = load i32, i32* @x.101
  %219 = load i32, i32* @y.102
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %217, label %315, label %226

; <label>:226:                                    ; preds = %originalBBpart240
  %227 = load %union.tree_node*, %union.tree_node** %11, align 8
  %228 = bitcast %union.tree_node* %227 to %struct.tree_common*
  %229 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %228, i32 0, i32 1
  %230 = load %union.tree_node*, %union.tree_node** %229, align 8
  %231 = bitcast %union.tree_node* %230 to %struct.tree_common*
  %232 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %231, i32 0, i32 2
  %233 = load i32, i32* %232, align 8
  %234 = and i32 %233, 255
  %235 = icmp eq i32 %234, 18
  br i1 %235, label %315, label %236

; <label>:236:                                    ; preds = %226
  %237 = load %union.tree_node*, %union.tree_node** %11, align 8
  %238 = bitcast %union.tree_node* %237 to %struct.tree_common*
  %239 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %238, i32 0, i32 1
  %240 = load %union.tree_node*, %union.tree_node** %239, align 8
  %241 = bitcast %union.tree_node* %240 to %struct.tree_common*
  %242 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %241, i32 0, i32 2
  %243 = load i32, i32* %242, align 8
  %244 = and i32 %243, 255
  %245 = icmp eq i32 %244, 20
  br i1 %245, label %315, label %246

; <label>:246:                                    ; preds = %236
  %247 = load %union.tree_node*, %union.tree_node** %11, align 8
  %248 = bitcast %union.tree_node* %247 to %struct.tree_common*
  %249 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %248, i32 0, i32 1
  %250 = load %union.tree_node*, %union.tree_node** %249, align 8
  %251 = bitcast %union.tree_node* %250 to %struct.tree_common*
  %252 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %251, i32 0, i32 2
  %253 = load i32, i32* %252, align 8
  %254 = and i32 %253, 255
  %255 = icmp eq i32 %254, 21
  br i1 %255, label %315, label %256

; <label>:256:                                    ; preds = %246
  %257 = load %union.tree_node*, %union.tree_node** %11, align 8
  %258 = bitcast %union.tree_node* %257 to %struct.tree_common*
  %259 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %258, i32 0, i32 1
  %260 = load %union.tree_node*, %union.tree_node** %259, align 8
  %261 = bitcast %union.tree_node* %260 to %struct.tree_common*
  %262 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %261, i32 0, i32 2
  %263 = load i32, i32* %262, align 8
  %264 = and i32 %263, 255
  %265 = icmp eq i32 %264, 22
  br i1 %265, label %315, label %266

; <label>:266:                                    ; preds = %256
  %267 = load %union.tree_node*, %union.tree_node** %11, align 8
  %268 = bitcast %union.tree_node* %267 to %struct.tree_common*
  %269 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %268, i32 0, i32 1
  %270 = load %union.tree_node*, %union.tree_node** %269, align 8
  %271 = bitcast %union.tree_node* %270 to %struct.tree_common*
  %272 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %271, i32 0, i32 2
  %273 = load i32, i32* %272, align 8
  %274 = and i32 %273, 255
  %275 = icmp eq i32 %274, 19
  br i1 %275, label %315, label %276

; <label>:276:                                    ; preds = %266
  %277 = load i32, i32* @x.101
  %278 = load i32, i32* @y.102
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %276
  %285 = load %union.tree_node*, %union.tree_node** %11, align 8
  %286 = bitcast %union.tree_node* %285 to %struct.tree_common*
  %287 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %286, i32 0, i32 1
  %288 = load %union.tree_node*, %union.tree_node** %287, align 8
  %289 = bitcast %union.tree_node* %288 to %struct.tree_common*
  %290 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %289, i32 0, i32 2
  %291 = load i32, i32* %290, align 8
  %292 = and i32 %291, 255
  %293 = icmp eq i32 %292, 13
  %294 = load i32, i32* @x.101
  %295 = load i32, i32* @y.102
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBBpart256, label %originalBB42alteredBB

originalBBpart256:                                ; preds = %originalBB42
  br i1 %293, label %315, label %302

; <label>:302:                                    ; preds = %originalBBpart256
  %303 = load %union.tree_node*, %union.tree_node** %11, align 8
  %304 = bitcast %union.tree_node* %303 to %struct.tree_common*
  %305 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %304, i32 0, i32 1
  %306 = load %union.tree_node*, %union.tree_node** %305, align 8
  %307 = bitcast %union.tree_node* %306 to %struct.tree_common*
  %308 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %307, i32 0, i32 2
  %309 = load i32, i32* %308, align 8
  %310 = and i32 %309, 255
  %311 = icmp eq i32 %310, 15
  br i1 %311, label %315, label %312

; <label>:312:                                    ; preds = %302
  %313 = load %struct.function*, %struct.function** @cfun, align 8
  %314 = icmp eq %struct.function* %313, null
  br i1 %314, label %315, label %317

; <label>:315:                                    ; preds = %312, %302, %originalBBpart256, %266, %256, %246, %236, %226, %originalBBpart240, %199
  %316 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8
  store %union.tree_node* %316, %union.tree_node** %10, align 8
  br label %318

; <label>:317:                                    ; preds = %312
  store %union.tree_node* null, %union.tree_node** %10, align 8
  br label %318

; <label>:318:                                    ; preds = %317, %315, %197, %originalBBpart24
  %319 = load %union.tree_node*, %union.tree_node** %10, align 8
  ret %union.tree_node* %319

originalBBalteredBB:                              ; preds = %originalBB, %1
  %320 = alloca %union.tree_node*, align 8
  %321 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %321, align 8
  %322 = load %union.tree_node*, %union.tree_node** %321, align 8
  %323 = icmp eq %union.tree_node* %322, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  store %union.tree_node* null, %union.tree_node** %10, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %39
  %324 = load %union.tree_node*, %union.tree_node** %11, align 8
  %325 = bitcast %union.tree_node* %324 to %struct.tree_list*
  %326 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %325, i32 0, i32 2
  %327 = load %union.tree_node*, %union.tree_node** %326, align 8
  store %union.tree_node* %327, %union.tree_node** %11, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %74
  %328 = load %union.tree_node*, %union.tree_node** %11, align 8
  %329 = bitcast %union.tree_node* %328 to %struct.tree_common*
  %330 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %329, i32 0, i32 2
  %331 = load i32, i32* %330, align 8
  %_ = sub i32 0, %331
  %gen = add i32 %_, 255
  %_11 = sub i32 0, %331
  %gen12 = add i32 %_11, 255
  %_13 = sub i32 %331, 255
  %gen14 = mul i32 %_13, 255
  %_15 = sub i32 0, %331
  %gen16 = add i32 %_15, 255
  %_17 = sub i32 %331, 255
  %gen18 = mul i32 %_17, 255
  %_19 = sub i32 0, %331
  %gen20 = add i32 %_19, 255
  %_21 = sub i32 %331, 255
  %gen22 = mul i32 %_21, 255
  %_23 = sub i32 %331, 255
  %gen24 = mul i32 %_23, 255
  %332 = and i32 %331, 255
  %333 = icmp eq i32 %332, 116
  br label %originalBB10

originalBB29alteredBB:                            ; preds = %originalBB29, %163
  %334 = load %union.tree_node*, %union.tree_node** %11, align 8
  %335 = bitcast %union.tree_node* %334 to %struct.tree_common*
  %336 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %335, i32 0, i32 2
  %337 = load i32, i32* %336, align 8
  %_30 = shl i32 %337, 255
  %_31 = sub i32 %337, 255
  %gen32 = mul i32 %_31, 255
  %_33 = sub i32 %337, 255
  %gen34 = mul i32 %_33, 255
  %338 = and i32 %337, 255
  %339 = icmp eq i32 %338, 121
  br label %originalBB29

originalBB38alteredBB:                            ; preds = %originalBB38, %207
  %340 = load i32, i32* @cse_not_expected, align 4
  %341 = icmp ne i32 %340, 0
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %276
  %342 = load %union.tree_node*, %union.tree_node** %11, align 8
  %343 = bitcast %union.tree_node* %342 to %struct.tree_common*
  %344 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %343, i32 0, i32 1
  %345 = load %union.tree_node*, %union.tree_node** %344, align 8
  %346 = bitcast %union.tree_node* %345 to %struct.tree_common*
  %347 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %346, i32 0, i32 2
  %348 = load i32, i32* %347, align 8
  %_43 = sub i32 0, %348
  %gen44 = add i32 %_43, 255
  %_45 = sub i32 0, %348
  %gen46 = add i32 %_45, 255
  %_47 = sub i32 %348, 255
  %gen48 = mul i32 %_47, 255
  %_49 = sub i32 0, %348
  %gen50 = add i32 %_49, 255
  %_51 = sub i32 0, %348
  %gen52 = add i32 %_51, 255
  %_53 = shl i32 %348, 255
  %_54 = shl i32 %348, 255
  %349 = and i32 %348, 255
  %350 = icmp eq i32 %349, 13
  br label %originalBB42
}

; Function Attrs: noinline nounwind uwtable
define internal %union.tree_node* @fold_builtin_classify_type(%union.tree_node*) #0 {
  %2 = alloca %union.tree_node*, align 8
  %3 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %3, align 8
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8
  %5 = icmp eq %union.tree_node* %4, null
  br i1 %5, label %6, label %8

; <label>:6:                                      ; preds = %1
  %7 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 0)
  store %union.tree_node* %7, %union.tree_node** %2, align 8
  br label %19

; <label>:8:                                      ; preds = %1
  %9 = load %union.tree_node*, %union.tree_node** %3, align 8
  %10 = bitcast %union.tree_node* %9 to %struct.tree_list*
  %11 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %10, i32 0, i32 2
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8
  %13 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8
  %16 = call i32 @type_to_class(%union.tree_node* %15)
  %17 = sext i32 %16 to i64
  %18 = call %union.tree_node* @build_int_2_wide(i64 %17, i64 0)
  store %union.tree_node* %18, %union.tree_node** %2, align 8
  br label %19

; <label>:19:                                     ; preds = %8, %6
  %20 = load %union.tree_node*, %union.tree_node** %2, align 8
  ret %union.tree_node* %20
}

; Function Attrs: noinline nounwind uwtable
define internal %union.tree_node* @c_strlen(%union.tree_node*) #0 {
  %2 = alloca %union.tree_node*, align 8
  %3 = alloca %union.tree_node*, align 8
  %4 = alloca %union.tree_node*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store %union.tree_node* %0, %union.tree_node** %3, align 8
  %9 = load %union.tree_node*, %union.tree_node** %3, align 8
  %10 = call %union.tree_node* @string_constant(%union.tree_node* %9, %union.tree_node** %4)
  store %union.tree_node* %10, %union.tree_node** %3, align 8
  %11 = load %union.tree_node*, %union.tree_node** %3, align 8
  %12 = icmp eq %union.tree_node* %11, null
  br i1 %12, label %13, label %30

; <label>:13:                                     ; preds = %1
  %14 = load i32, i32* @x.105
  %15 = load i32, i32* @y.106
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %13
  store %union.tree_node* null, %union.tree_node** %2, align 8
  %22 = load i32, i32* @x.105
  %23 = load i32, i32* @y.106
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %181

; <label>:30:                                     ; preds = %1
  %31 = load %union.tree_node*, %union.tree_node** %3, align 8
  %32 = bitcast %union.tree_node* %31 to %struct.tree_string*
  %33 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %32, i32 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = sub nsw i32 %34, 1
  store i32 %35, i32* %6, align 4
  %36 = load %union.tree_node*, %union.tree_node** %3, align 8
  %37 = bitcast %union.tree_node* %36 to %struct.tree_string*
  %38 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %37, i32 0, i32 3
  %39 = load i8*, i8** %38, align 8
  store i8* %39, i8** %7, align 8
  %40 = load %union.tree_node*, %union.tree_node** %4, align 8
  %41 = icmp ne %union.tree_node* %40, null
  br i1 %41, label %42, label %105

; <label>:42:                                     ; preds = %30
  %43 = load %union.tree_node*, %union.tree_node** %4, align 8
  %44 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %45 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %44, i32 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 255
  %48 = icmp ne i32 %47, 25
  br i1 %48, label %49, label %105

; <label>:49:                                     ; preds = %42
  %50 = load i32, i32* @x.105
  %51 = load i32, i32* @y.106
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %49
  store i32 0, i32* %8, align 4
  %58 = load i32, i32* @x.105
  %59 = load i32, i32* @y.106
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %66

; <label>:66:                                     ; preds = %96, %originalBBpart24
  %67 = load i32, i32* %8, align 4
  %68 = load i32, i32* %6, align 4
  %69 = icmp slt i32 %67, %68
  br i1 %69, label %70, label %99

; <label>:70:                                     ; preds = %66
  %71 = load i8*, i8** %7, align 8
  %72 = load i32, i32* %8, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %71, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = sext i8 %75 to i32
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

; <label>:78:                                     ; preds = %70
  store %union.tree_node* null, %union.tree_node** %2, align 8
  br label %181

; <label>:79:                                     ; preds = %70
  %80 = load i32, i32* @x.105
  %81 = load i32, i32* @y.106
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %79
  %88 = load i32, i32* @x.105
  %89 = load i32, i32* @y.106
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %96

; <label>:96:                                     ; preds = %originalBBpart28
  %97 = load i32, i32* %8, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %8, align 4
  br label %66

; <label>:99:                                     ; preds = %66
  %100 = load i32, i32* %6, align 4
  %101 = sext i32 %100 to i64
  %102 = call %union.tree_node* @size_int_wide(i64 %101, i32 0)
  %103 = load %union.tree_node*, %union.tree_node** %4, align 8
  %104 = call %union.tree_node* @size_diffop(%union.tree_node* %102, %union.tree_node* %103)
  store %union.tree_node* %104, %union.tree_node** %2, align 8
  br label %181

; <label>:105:                                    ; preds = %42, %30
  %106 = load %union.tree_node*, %union.tree_node** %4, align 8
  %107 = icmp eq %union.tree_node* %106, null
  br i1 %107, label %108, label %109

; <label>:108:                                    ; preds = %105
  store i64 0, i64* %5, align 8
  br label %150

; <label>:109:                                    ; preds = %105
  %110 = load %union.tree_node*, %union.tree_node** %4, align 8
  %111 = call i32 @host_integerp(%union.tree_node* %110, i32 0)
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %130, label %113

; <label>:113:                                    ; preds = %109
  %114 = load i32, i32* @x.105
  %115 = load i32, i32* @y.106
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %113
  store i64 -1, i64* %5, align 8
  %122 = load i32, i32* @x.105
  %123 = load i32, i32* @y.106
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %149

; <label>:130:                                    ; preds = %109
  %131 = load i32, i32* @x.105
  %132 = load i32, i32* @y.106
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %130
  %139 = load %union.tree_node*, %union.tree_node** %4, align 8
  %140 = call i64 @tree_low_cst(%union.tree_node* %139, i32 0)
  store i64 %140, i64* %5, align 8
  %141 = load i32, i32* @x.105
  %142 = load i32, i32* @y.106
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %149

; <label>:149:                                    ; preds = %originalBBpart216, %originalBBpart212
  br label %150

; <label>:150:                                    ; preds = %149, %108
  %151 = load i64, i64* %5, align 8
  %152 = icmp slt i64 %151, 0
  br i1 %152, label %158, label %153

; <label>:153:                                    ; preds = %150
  %154 = load i64, i64* %5, align 8
  %155 = load i32, i32* %6, align 4
  %156 = sext i32 %155 to i64
  %157 = icmp sgt i64 %154, %156
  br i1 %157, label %158, label %159

; <label>:158:                                    ; preds = %153, %150
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.125, i32 0, i32 0))
  store %union.tree_node* null, %union.tree_node** %2, align 8
  br label %181

; <label>:159:                                    ; preds = %153
  %160 = load i32, i32* @x.105
  %161 = load i32, i32* @y.106
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %159
  %168 = load i8*, i8** %7, align 8
  %169 = load i64, i64* %5, align 8
  %170 = getelementptr inbounds i8, i8* %168, i64 %169
  %171 = call i64 @strlen(i8* %170) #7
  %172 = call %union.tree_node* @size_int_wide(i64 %171, i32 1)
  store %union.tree_node* %172, %union.tree_node** %2, align 8
  %173 = load i32, i32* @x.105
  %174 = load i32, i32* @y.106
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %181

; <label>:181:                                    ; preds = %originalBBpart220, %158, %99, %78, %originalBBpart2
  %182 = load %union.tree_node*, %union.tree_node** %2, align 8
  ret %union.tree_node* %182

originalBBalteredBB:                              ; preds = %originalBB, %13
  store %union.tree_node* null, %union.tree_node** %2, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %49
  store i32 0, i32* %8, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %79
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %113
  store i64 -1, i64* %5, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %130
  %183 = load %union.tree_node*, %union.tree_node** %4, align 8
  %184 = call i64 @tree_low_cst(%union.tree_node* %183, i32 0)
  store i64 %184, i64* %5, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %159
  %185 = load i8*, i8** %7, align 8
  %186 = load i64, i64* %5, align 8
  %187 = getelementptr inbounds i8, i8* %185, i64 %186
  %188 = call i64 @strlen(i8* %187) #7
  %189 = call %union.tree_node* @size_int_wide(i64 %188, i32 1)
  store %union.tree_node* %189, %union.tree_node** %2, align 8
  br label %originalBB18
}

; Function Attrs: noinline nounwind uwtable
define void @default_init_builtins() #0 {
  %1 = load i32, i32* @x.107
  %2 = load i32, i32* @y.108
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = load i32, i32* @x.107
  %10 = load i32, i32* @y.108
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define %struct.rtx_def* @default_expand_builtin(%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #0 {
  %6 = load i32, i32* @x.109
  %7 = load i32, i32* @y.110
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %5
  %14 = alloca %union.tree_node*, align 8
  %15 = alloca %struct.rtx_def*, align 8
  %16 = alloca %struct.rtx_def*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %union.tree_node* %0, %union.tree_node** %14, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %15, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %16, align 8
  store i32 %3, i32* %17, align 4
  store i32 %4, i32* %18, align 4
  %19 = load i32, i32* @x.109
  %20 = load i32, i32* @y.110
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %struct.rtx_def* null

originalBBalteredBB:                              ; preds = %originalBB, %5
  %27 = alloca %union.tree_node*, align 8
  %28 = alloca %struct.rtx_def*, align 8
  %29 = alloca %struct.rtx_def*, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  store %union.tree_node* %0, %union.tree_node** %27, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %28, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** %29, align 8
  store i32 %3, i32* %30, align 4
  store i32 %4, i32* %31, align 4
  br label %originalBB
}

declare zeroext i1 @ix86_function_arg_regno_p(i32) #1

declare i32 @ix86_hard_regno_mode_ok(i32, i32) #1

declare i32 @have_insn_for(i32, i32) #1

declare i32 @get_mode_alignment(i32) #1

declare %union.tree_node* @save_expr(%union.tree_node*) #1

declare %union.tree_node* @build_pointer_type(%union.tree_node*) #1

declare %union.tree_node* @build1(i32, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @copy_node(%union.tree_node*) #1

declare %struct.rtx_def* @gen_reg_rtx(i32) #1

declare %struct.rtx_def* @expand_unop(i32, %struct.optab*, %struct.rtx_def*, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @gen_label_rtx() #1

declare void @emit_cmp_and_jump_insns(%struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_label(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insns(%struct.rtx_def*) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @expand_builtin_apply_args_1() #0 {
  %1 = alloca %struct.rtx_def*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.rtx_def*, align 8
  %7 = call i32 @apply_args_size()
  %8 = sext i32 %7 to i64
  %9 = call %struct.rtx_def* @assign_stack_local(i32 51, i64 %8, i32 -1)
  store %struct.rtx_def* %9, %struct.rtx_def** %1, align 8
  %10 = load i32, i32* @target_flags, align 4
  %11 = and i32 %10, 33554432
  %12 = icmp ne i32 %11, 0
  %13 = select i1 %12, i32 5, i32 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  store i32 %17, i32* %2, align 4
  %18 = load %struct.rtx_def*, %struct.rtx_def** @struct_value_rtx, align 8
  %19 = icmp ne %struct.rtx_def* %18, null
  br i1 %19, label %20, label %31

; <label>:20:                                     ; preds = %0
  %21 = load i32, i32* @target_flags, align 4
  %22 = and i32 %21, 33554432
  %23 = icmp ne i32 %22, 0
  %24 = select i1 %23, i32 5, i32 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = load i32, i32* %2, align 4
  %30 = add nsw i32 %29, %28
  store i32 %30, i32* %2, align 4
  br label %31

; <label>:31:                                     ; preds = %20, %0
  %32 = load i32, i32* @x.111
  %33 = load i32, i32* @y.112
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %31
  store i32 0, i32* %4, align 4
  %40 = load i32, i32* @x.111
  %41 = load i32, i32* @y.112
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %48

; <label>:48:                                     ; preds = %93, %originalBBpart2
  %49 = load i32, i32* %4, align 4
  %50 = icmp slt i32 %49, 53
  br i1 %50, label %51, label %96

; <label>:51:                                     ; preds = %48
  %52 = load i32, i32* %4, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [53 x i32], [53 x i32]* @apply_args_mode, i64 0, i64 %53
  %55 = load i32, i32* %54, align 4
  store i32 %55, i32* %5, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %92

; <label>:57:                                     ; preds = %51
  %58 = load i32, i32* %5, align 4
  %59 = call i32 @get_mode_alignment(i32 %58)
  %60 = udiv i32 %59, 8
  store i32 %60, i32* %3, align 4
  %61 = load i32, i32* %2, align 4
  %62 = load i32, i32* %3, align 4
  %63 = srem i32 %61, %62
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %74

; <label>:65:                                     ; preds = %57
  %66 = load i32, i32* %2, align 4
  %67 = load i32, i32* %3, align 4
  %68 = add nsw i32 %66, %67
  %69 = sub nsw i32 %68, 1
  %70 = load i32, i32* %3, align 4
  %71 = sdiv i32 %69, %70
  %72 = load i32, i32* %3, align 4
  %73 = mul nsw i32 %71, %72
  store i32 %73, i32* %2, align 4
  br label %74

; <label>:74:                                     ; preds = %65, %57
  %75 = load i32, i32* %5, align 4
  %76 = load i32, i32* %4, align 4
  %77 = call %struct.rtx_def* @gen_rtx_REG(i32 %75, i32 %76)
  store %struct.rtx_def* %77, %struct.rtx_def** %6, align 8
  %78 = load %struct.rtx_def*, %struct.rtx_def** %1, align 8
  %79 = load i32, i32* %5, align 4
  %80 = load i32, i32* %2, align 4
  %81 = sext i32 %80 to i64
  %82 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %78, i32 %79, i64 %81, i32 1, i32 1)
  %83 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8
  %84 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %82, %struct.rtx_def* %83)
  %85 = load i32, i32* %5, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = load i32, i32* %2, align 4
  %91 = add nsw i32 %90, %89
  store i32 %91, i32* %2, align 4
  br label %92

; <label>:92:                                     ; preds = %74, %51
  br label %93

; <label>:93:                                     ; preds = %92
  %94 = load i32, i32* %4, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %4, align 4
  br label %48

; <label>:96:                                     ; preds = %48
  %97 = load %struct.rtx_def*, %struct.rtx_def** %1, align 8
  %98 = load i32, i32* @target_flags, align 4
  %99 = and i32 %98, 33554432
  %100 = icmp ne i32 %99, 0
  %101 = select i1 %100, i32 5, i32 4
  %102 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %97, i32 %101, i64 0, i32 1, i32 1)
  %103 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 16
  %104 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %103)
  %105 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %102, %struct.rtx_def* %104)
  %106 = load i32, i32* @target_flags, align 4
  %107 = and i32 %106, 33554432
  %108 = icmp ne i32 %107, 0
  %109 = select i1 %108, i32 5, i32 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %110
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  store i32 %113, i32* %2, align 4
  %114 = load %struct.rtx_def*, %struct.rtx_def** @struct_value_incoming_rtx, align 8
  %115 = icmp ne %struct.rtx_def* %114, null
  br i1 %115, label %116, label %138

; <label>:116:                                    ; preds = %96
  %117 = load %struct.rtx_def*, %struct.rtx_def** %1, align 8
  %118 = load i32, i32* @target_flags, align 4
  %119 = and i32 %118, 33554432
  %120 = icmp ne i32 %119, 0
  %121 = select i1 %120, i32 5, i32 4
  %122 = load i32, i32* %2, align 4
  %123 = sext i32 %122 to i64
  %124 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %117, i32 %121, i64 %123, i32 1, i32 1)
  %125 = load %struct.rtx_def*, %struct.rtx_def** @struct_value_incoming_rtx, align 8
  %126 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %125)
  %127 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %124, %struct.rtx_def* %126)
  %128 = load i32, i32* @target_flags, align 4
  %129 = and i32 %128, 33554432
  %130 = icmp ne i32 %129, 0
  %131 = select i1 %130, i32 5, i32 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = load i32, i32* %2, align 4
  %137 = add nsw i32 %136, %135
  store i32 %137, i32* %2, align 4
  br label %138

; <label>:138:                                    ; preds = %116, %96
  %139 = load %struct.rtx_def*, %struct.rtx_def** %1, align 8
  %140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1
  %141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %140, i64 0, i64 0
  %142 = bitcast %union.rtunion_def* %141 to %struct.rtx_def**
  %143 = load %struct.rtx_def*, %struct.rtx_def** %142, align 8
  %144 = call %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def* %143)
  ret %struct.rtx_def* %144

originalBBalteredBB:                              ; preds = %originalBB, %31
  store i32 0, i32* %4, align 4
  br label %originalBB
}

declare %struct.rtx_def* @emit_insns_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @assign_stack_local(i32, i64, i32) #1

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

declare %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #1

declare %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @apply_result_size() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* @apply_result_size.size, align 4
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %397

; <label>:7:                                      ; preds = %0
  store i32 0, i32* @apply_result_size.size, align 4
  store i32 0, i32* %2, align 4
  br label %8

; <label>:8:                                      ; preds = %377, %7
  %9 = load i32, i32* %2, align 4
  %10 = icmp slt i32 %9, 53
  br i1 %10, label %11, label %380

; <label>:11:                                     ; preds = %8
  %12 = load i32, i32* @x.113
  %13 = load i32, i32* @y.114
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %11
  %20 = load i32, i32* %2, align 4
  %21 = call zeroext i1 @ix86_function_value_regno_p(i32 %20)
  %22 = load i32, i32* @x.113
  %23 = load i32, i32* @y.114
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %356

; <label>:30:                                     ; preds = %originalBBpart2
  store i32 0, i32* %4, align 4
  %31 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4
  store i32 %31, i32* %3, align 4
  br label %32

; <label>:32:                                     ; preds = %originalBBpart28, %30
  %33 = load i32, i32* %3, align 4
  %34 = icmp ne i32 %33, 6
  br i1 %34, label %35, label %81

; <label>:35:                                     ; preds = %32
  %36 = load i32, i32* %2, align 4
  %37 = load i32, i32* %3, align 4
  %38 = call i32 @ix86_hard_regno_mode_ok(i32 %36, i32 %37)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %58

; <label>:40:                                     ; preds = %35
  %41 = load i32, i32* @x.113
  %42 = load i32, i32* @y.114
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %40
  %49 = load i32, i32* %3, align 4
  store i32 %49, i32* %4, align 4
  %50 = load i32, i32* @x.113
  %51 = load i32, i32* @y.114
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %58

; <label>:58:                                     ; preds = %originalBBpart24, %35
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* @x.113
  %61 = load i32, i32* @y.114
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %59
  %68 = load i32, i32* %3, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i64 0, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  store i32 %72, i32* %3, align 4
  %73 = load i32, i32* @x.113
  %74 = load i32, i32* @y.114
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %32

; <label>:81:                                     ; preds = %32
  %82 = load i32, i32* %4, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %140

; <label>:84:                                     ; preds = %81
  %85 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @class_narrowest_mode, i64 0, i64 2), align 8
  store i32 %85, i32* %3, align 4
  br label %86

; <label>:86:                                     ; preds = %133, %84
  %87 = load i32, i32* %3, align 4
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %139

; <label>:89:                                     ; preds = %86
  %90 = load i32, i32* @x.113
  %91 = load i32, i32* @y.114
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %89
  %98 = load i32, i32* %2, align 4
  %99 = load i32, i32* %3, align 4
  %100 = call i32 @ix86_hard_regno_mode_ok(i32 %98, i32 %99)
  %101 = icmp ne i32 %100, 0
  %102 = load i32, i32* @x.113
  %103 = load i32, i32* @y.114
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %101, label %110, label %116

; <label>:110:                                    ; preds = %originalBBpart212
  %111 = load i32, i32* %3, align 4
  %112 = call i32 @have_insn_for(i32 47, i32 %111)
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %116

; <label>:114:                                    ; preds = %110
  %115 = load i32, i32* %3, align 4
  store i32 %115, i32* %4, align 4
  br label %116

; <label>:116:                                    ; preds = %114, %110, %originalBBpart212
  %117 = load i32, i32* @x.113
  %118 = load i32, i32* @y.114
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %116
  %125 = load i32, i32* @x.113
  %126 = load i32, i32* @y.114
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %133

; <label>:133:                                    ; preds = %originalBBpart216
  %134 = load i32, i32* %3, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i64 0, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  store i32 %138, i32* %3, align 4
  br label %86

; <label>:139:                                    ; preds = %86
  br label %140

; <label>:140:                                    ; preds = %139, %81
  %141 = load i32, i32* %4, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %183

; <label>:143:                                    ; preds = %140
  %144 = load i32, i32* @x.113
  %145 = load i32, i32* @y.114
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %143
  %152 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @class_narrowest_mode, i64 0, i64 8), align 16
  store i32 %152, i32* %3, align 4
  %153 = load i32, i32* @x.113
  %154 = load i32, i32* @y.114
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %161

; <label>:161:                                    ; preds = %176, %originalBBpart220
  %162 = load i32, i32* %3, align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %164, label %182

; <label>:164:                                    ; preds = %161
  %165 = load i32, i32* %2, align 4
  %166 = load i32, i32* %3, align 4
  %167 = call i32 @ix86_hard_regno_mode_ok(i32 %165, i32 %166)
  %168 = icmp ne i32 %167, 0
  br i1 %168, label %169, label %175

; <label>:169:                                    ; preds = %164
  %170 = load i32, i32* %3, align 4
  %171 = call i32 @have_insn_for(i32 47, i32 %170)
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %175

; <label>:173:                                    ; preds = %169
  %174 = load i32, i32* %3, align 4
  store i32 %174, i32* %4, align 4
  br label %175

; <label>:175:                                    ; preds = %173, %169, %164
  br label %176

; <label>:176:                                    ; preds = %175
  %177 = load i32, i32* %3, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i64 0, i64 %178
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i32
  store i32 %181, i32* %3, align 4
  br label %161

; <label>:182:                                    ; preds = %161
  br label %183

; <label>:183:                                    ; preds = %182, %140
  %184 = load i32, i32* %4, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %258

; <label>:186:                                    ; preds = %183
  %187 = load i32, i32* @x.113
  %188 = load i32, i32* @y.114
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %186
  %195 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @class_narrowest_mode, i64 0, i64 7), align 4
  store i32 %195, i32* %3, align 4
  %196 = load i32, i32* @x.113
  %197 = load i32, i32* @y.114
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %204

; <label>:204:                                    ; preds = %235, %originalBBpart224
  %205 = load i32, i32* %3, align 4
  %206 = icmp ne i32 %205, 0
  br i1 %206, label %207, label %241

; <label>:207:                                    ; preds = %204
  %208 = load i32, i32* %2, align 4
  %209 = load i32, i32* %3, align 4
  %210 = call i32 @ix86_hard_regno_mode_ok(i32 %208, i32 %209)
  %211 = icmp ne i32 %210, 0
  br i1 %211, label %212, label %218

; <label>:212:                                    ; preds = %207
  %213 = load i32, i32* %3, align 4
  %214 = call i32 @have_insn_for(i32 47, i32 %213)
  %215 = icmp ne i32 %214, 0
  br i1 %215, label %216, label %218

; <label>:216:                                    ; preds = %212
  %217 = load i32, i32* %3, align 4
  store i32 %217, i32* %4, align 4
  br label %218

; <label>:218:                                    ; preds = %216, %212, %207
  %219 = load i32, i32* @x.113
  %220 = load i32, i32* @y.114
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %218
  %227 = load i32, i32* @x.113
  %228 = load i32, i32* @y.114
  %229 = sub i32 %227, 1
  %230 = mul i32 %227, %229
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %232, %233
  br i1 %234, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %235

; <label>:235:                                    ; preds = %originalBBpart228
  %236 = load i32, i32* %3, align 4
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i64 0, i64 %237
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i32
  store i32 %240, i32* %3, align 4
  br label %204

; <label>:241:                                    ; preds = %204
  %242 = load i32, i32* @x.113
  %243 = load i32, i32* @y.114
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %241
  %250 = load i32, i32* @x.113
  %251 = load i32, i32* @y.114
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %258

; <label>:258:                                    ; preds = %originalBBpart232, %183
  %259 = load i32, i32* %4, align 4
  store i32 %259, i32* %3, align 4
  %260 = load i32, i32* %3, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %279

; <label>:262:                                    ; preds = %258
  %263 = load i32, i32* @x.113
  %264 = load i32, i32* @y.114
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %262
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 1016, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.apply_result_size, i32 0, i32 0)) #6
  %271 = load i32, i32* @x.113
  %272 = load i32, i32* @y.114
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  unreachable

; <label>:279:                                    ; preds = %258
  %280 = load i32, i32* @x.113
  %281 = load i32, i32* @y.114
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %279
  %288 = load i32, i32* %3, align 4
  %289 = call i32 @get_mode_alignment(i32 %288)
  %290 = udiv i32 %289, 8
  store i32 %290, i32* %1, align 4
  %291 = load i32, i32* @apply_result_size.size, align 4
  %292 = load i32, i32* %1, align 4
  %293 = srem i32 %291, %292
  %294 = icmp ne i32 %293, 0
  %295 = load i32, i32* @x.113
  %296 = load i32, i32* @y.114
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBBpart250, label %originalBB38alteredBB

originalBBpart250:                                ; preds = %originalBB38
  br i1 %294, label %303, label %328

; <label>:303:                                    ; preds = %originalBBpart250
  %304 = load i32, i32* @x.113
  %305 = load i32, i32* @y.114
  %306 = sub i32 %304, 1
  %307 = mul i32 %304, %306
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %309, %310
  br i1 %311, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %303
  %312 = load i32, i32* @apply_result_size.size, align 4
  %313 = load i32, i32* %1, align 4
  %314 = add nsw i32 %312, %313
  %315 = sub nsw i32 %314, 1
  %316 = load i32, i32* %1, align 4
  %317 = sdiv i32 %315, %316
  %318 = load i32, i32* %1, align 4
  %319 = mul nsw i32 %317, %318
  store i32 %319, i32* @apply_result_size.size, align 4
  %320 = load i32, i32* @x.113
  %321 = load i32, i32* @y.114
  %322 = sub i32 %320, 1
  %323 = mul i32 %320, %322
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %325, %326
  br i1 %327, label %originalBBpart292, label %originalBB52alteredBB

originalBBpart292:                                ; preds = %originalBB52
  br label %328

; <label>:328:                                    ; preds = %originalBBpart292, %originalBBpart250
  %329 = load i32, i32* @x.113
  %330 = load i32, i32* @y.114
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %originalBB94alteredBB, %328
  %337 = load i32, i32* %3, align 4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %338
  %340 = load i8, i8* %339, align 1
  %341 = zext i8 %340 to i32
  %342 = load i32, i32* @apply_result_size.size, align 4
  %343 = add nsw i32 %342, %341
  store i32 %343, i32* @apply_result_size.size, align 4
  %344 = load i32, i32* %3, align 4
  %345 = load i32, i32* %2, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds [53 x i32], [53 x i32]* @apply_result_mode, i64 0, i64 %346
  store i32 %344, i32* %347, align 4
  %348 = load i32, i32* @x.113
  %349 = load i32, i32* @y.114
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %376

; <label>:356:                                    ; preds = %originalBBpart2
  %357 = load i32, i32* @x.113
  %358 = load i32, i32* @y.114
  %359 = sub i32 %357, 1
  %360 = mul i32 %357, %359
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %362, %363
  br i1 %364, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %originalBB98alteredBB, %356
  %365 = load i32, i32* %2, align 4
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds [53 x i32], [53 x i32]* @apply_result_mode, i64 0, i64 %366
  store i32 0, i32* %367, align 4
  %368 = load i32, i32* @x.113
  %369 = load i32, i32* @y.114
  %370 = sub i32 %368, 1
  %371 = mul i32 %368, %370
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %373, %374
  br i1 %375, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br label %376

; <label>:376:                                    ; preds = %originalBBpart2100, %originalBBpart296
  br label %377

; <label>:377:                                    ; preds = %376
  %378 = load i32, i32* %2, align 4
  %379 = add nsw i32 %378, 1
  store i32 %379, i32* %2, align 4
  br label %8

; <label>:380:                                    ; preds = %8
  %381 = load i32, i32* @x.113
  %382 = load i32, i32* @y.114
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %originalBB102alteredBB, %380
  store i32 116, i32* @apply_result_size.size, align 4
  %389 = load i32, i32* @x.113
  %390 = load i32, i32* @y.114
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br label %397

; <label>:397:                                    ; preds = %originalBBpart2104, %0
  %398 = load i32, i32* @apply_result_size.size, align 4
  ret i32 %398

originalBBalteredBB:                              ; preds = %originalBB, %11
  %399 = load i32, i32* %2, align 4
  %400 = call zeroext i1 @ix86_function_value_regno_p(i32 %399)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %401 = load i32, i32* %3, align 4
  store i32 %401, i32* %4, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  %402 = load i32, i32* %3, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i64 0, i64 %403
  %405 = load i8, i8* %404, align 1
  %406 = zext i8 %405 to i32
  store i32 %406, i32* %3, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %89
  %407 = load i32, i32* %2, align 4
  %408 = load i32, i32* %3, align 4
  %409 = call i32 @ix86_hard_regno_mode_ok(i32 %407, i32 %408)
  %410 = icmp ne i32 %409, 0
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %116
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %143
  %411 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @class_narrowest_mode, i64 0, i64 8), align 16
  store i32 %411, i32* %3, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %186
  %412 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @class_narrowest_mode, i64 0, i64 7), align 4
  store i32 %412, i32* %3, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %218
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %241
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %262
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 1016, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.apply_result_size, i32 0, i32 0)) #6
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %279
  %413 = load i32, i32* %3, align 4
  %414 = call i32 @get_mode_alignment(i32 %413)
  %_ = shl i32 %414, 8
  %_39 = shl i32 %414, 8
  %_40 = sub i32 %414, 8
  %gen = mul i32 %_40, 8
  %_41 = sub i32 0, %414
  %gen42 = add i32 %_41, 8
  %_43 = sub i32 %414, 8
  %gen44 = mul i32 %_43, 8
  %415 = udiv i32 %414, 8
  store i32 %415, i32* %1, align 4
  %416 = load i32, i32* @apply_result_size.size, align 4
  %417 = load i32, i32* %1, align 4
  %_45 = sub i32 0, %416
  %gen46 = add i32 %_45, %417
  %_47 = sub i32 0, %416
  %gen48 = add i32 %_47, %417
  %418 = srem i32 %416, %417
  %419 = icmp ne i32 %418, 0
  br label %originalBB38

originalBB52alteredBB:                            ; preds = %originalBB52, %303
  %420 = load i32, i32* @apply_result_size.size, align 4
  %421 = load i32, i32* %1, align 4
  %_53 = sub i32 %420, %421
  %gen54 = mul i32 %_53, %421
  %_55 = sub i32 %420, %421
  %gen56 = mul i32 %_55, %421
  %_57 = sub i32 0, %420
  %gen58 = add i32 %_57, %421
  %_59 = shl i32 %420, %421
  %_60 = sub i32 0, %420
  %gen61 = add i32 %_60, %421
  %_62 = sub i32 %420, %421
  %gen63 = mul i32 %_62, %421
  %_64 = sub i32 0, %420
  %gen65 = add i32 %_64, %421
  %_66 = sub i32 0, %420
  %gen67 = add i32 %_66, %421
  %422 = add nsw i32 %420, %421
  %_68 = sub i32 %422, 1
  %gen69 = mul i32 %_68, 1
  %423 = sub nsw i32 %422, 1
  %424 = load i32, i32* %1, align 4
  %_70 = shl i32 %423, %424
  %_71 = sub i32 %423, %424
  %gen72 = mul i32 %_71, %424
  %_73 = sub i32 0, %423
  %gen74 = add i32 %_73, %424
  %_75 = sub i32 0, %423
  %gen76 = add i32 %_75, %424
  %_77 = shl i32 %423, %424
  %_78 = shl i32 %423, %424
  %425 = sdiv i32 %423, %424
  %426 = load i32, i32* %1, align 4
  %_79 = shl i32 %425, %426
  %_80 = shl i32 %425, %426
  %_81 = sub i32 0, %425
  %gen82 = add i32 %_81, %426
  %_83 = sub i32 %425, %426
  %gen84 = mul i32 %_83, %426
  %_85 = sub i32 %425, %426
  %gen86 = mul i32 %_85, %426
  %_87 = shl i32 %425, %426
  %_88 = sub i32 %425, %426
  %gen89 = mul i32 %_88, %426
  %_90 = shl i32 %425, %426
  %427 = mul nsw i32 %425, %426
  store i32 %427, i32* @apply_result_size.size, align 4
  br label %originalBB52

originalBB94alteredBB:                            ; preds = %originalBB94, %328
  %428 = load i32, i32* %3, align 4
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %429
  %431 = load i8, i8* %430, align 1
  %432 = zext i8 %431 to i32
  %433 = load i32, i32* @apply_result_size.size, align 4
  %434 = add nsw i32 %433, %432
  store i32 %434, i32* @apply_result_size.size, align 4
  %435 = load i32, i32* %3, align 4
  %436 = load i32, i32* %2, align 4
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds [53 x i32], [53 x i32]* @apply_result_mode, i64 0, i64 %437
  store i32 %435, i32* %438, align 4
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %356
  %439 = load i32, i32* %2, align 4
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds [53 x i32], [53 x i32]* @apply_result_mode, i64 0, i64 %440
  store i32 0, i32* %441, align 4
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %380
  store i32 116, i32* @apply_result_size.size, align 4
  br label %originalBB102
}

declare void @do_pending_stack_adjust() #1

declare %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def*, %struct.rtx_def*, i32) #1

declare void @set_mem_align(%struct.rtx_def*, i32) #1

declare %struct.rtx_def* @emit_block_move(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare void @use_reg(%struct.rtx_def**, %struct.rtx_def*) #1

declare %struct.rtx_def* @prepare_call_address(%struct.rtx_def*, %union.tree_node*, %struct.rtx_def**, i32, i32) #1

declare %struct.rtx_def* @emit_call_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_untyped_call(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @result_vector(i32, %struct.rtx_def*) #0 {
  %3 = load i32, i32* @x.115
  %4 = load i32, i32* @y.116
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca %struct.rtx_def*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %struct.rtx_def*, align 8
  %19 = alloca %struct.rtx_def*, align 8
  %20 = alloca %struct.rtx_def**, align 8
  store i32 %0, i32* %11, align 4
  store %struct.rtx_def* %1, %struct.rtx_def** %12, align 8
  %21 = alloca i8, i64 424, align 16
  %22 = bitcast i8* %21 to %struct.rtx_def**
  store %struct.rtx_def** %22, %struct.rtx_def*** %20, align 8
  store i32 0, i32* %16, align 4
  store i32 0, i32* %14, align 4
  store i32 0, i32* %13, align 4
  %23 = load i32, i32* @x.115
  %24 = load i32, i32* @y.116
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %130, %originalBBpart2
  %32 = load i32, i32* @x.115
  %33 = load i32, i32* @y.116
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %31
  %40 = load i32, i32* %13, align 4
  %41 = icmp slt i32 %40, 53
  %42 = load i32, i32* @x.115
  %43 = load i32, i32* @y.116
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %41, label %50, label %133

; <label>:50:                                     ; preds = %originalBBpart24
  %51 = load i32, i32* %13, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [53 x i32], [53 x i32]* @apply_result_mode, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %17, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %129

; <label>:56:                                     ; preds = %50
  %57 = load i32, i32* %17, align 4
  %58 = call i32 @get_mode_alignment(i32 %57)
  %59 = udiv i32 %58, 8
  store i32 %59, i32* %15, align 4
  %60 = load i32, i32* %14, align 4
  %61 = load i32, i32* %15, align 4
  %62 = srem i32 %60, %61
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %73

; <label>:64:                                     ; preds = %56
  %65 = load i32, i32* %14, align 4
  %66 = load i32, i32* %15, align 4
  %67 = add nsw i32 %65, %66
  %68 = sub nsw i32 %67, 1
  %69 = load i32, i32* %15, align 4
  %70 = sdiv i32 %68, %69
  %71 = load i32, i32* %15, align 4
  %72 = mul nsw i32 %70, %71
  store i32 %72, i32* %14, align 4
  br label %73

; <label>:73:                                     ; preds = %64, %56
  %74 = load i32, i32* %17, align 4
  %75 = load i32, i32* %11, align 4
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %79

; <label>:77:                                     ; preds = %73
  %78 = load i32, i32* %13, align 4
  br label %81

; <label>:79:                                     ; preds = %73
  %80 = load i32, i32* %13, align 4
  br label %81

; <label>:81:                                     ; preds = %79, %77
  %82 = phi i32 [ %78, %77 ], [ %80, %79 ]
  %83 = call %struct.rtx_def* @gen_rtx_REG(i32 %74, i32 %82)
  store %struct.rtx_def* %83, %struct.rtx_def** %18, align 8
  %84 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %85 = load i32, i32* %17, align 4
  %86 = load i32, i32* %14, align 4
  %87 = sext i32 %86 to i64
  %88 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %84, i32 %85, i64 %87, i32 1, i32 1)
  store %struct.rtx_def* %88, %struct.rtx_def** %19, align 8
  %89 = load i32, i32* %11, align 4
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %95

; <label>:91:                                     ; preds = %81
  %92 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %93 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %94 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %92, %struct.rtx_def* %93)
  br label %115

; <label>:95:                                     ; preds = %81
  %96 = load i32, i32* @x.115
  %97 = load i32, i32* @y.116
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %95
  %104 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %105 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %106 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %104, %struct.rtx_def* %105)
  %107 = load i32, i32* @x.115
  %108 = load i32, i32* @y.116
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %115

; <label>:115:                                    ; preds = %originalBBpart28, %91
  %116 = phi %struct.rtx_def* [ %94, %91 ], [ %106, %originalBBpart28 ]
  %117 = load %struct.rtx_def**, %struct.rtx_def*** %20, align 8
  %118 = load i32, i32* %16, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %16, align 4
  %120 = sext i32 %118 to i64
  %121 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %117, i64 %120
  store %struct.rtx_def* %116, %struct.rtx_def** %121, align 8
  %122 = load i32, i32* %17, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = load i32, i32* %14, align 4
  %128 = add nsw i32 %127, %126
  store i32 %128, i32* %14, align 4
  br label %129

; <label>:129:                                    ; preds = %115, %50
  br label %130

; <label>:130:                                    ; preds = %129
  %131 = load i32, i32* %13, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %13, align 4
  br label %31

; <label>:133:                                    ; preds = %originalBBpart24
  %134 = load i32, i32* %16, align 4
  %135 = load %struct.rtx_def**, %struct.rtx_def*** %20, align 8
  %136 = call %struct.rtvec_def* @gen_rtvec_v(i32 %134, %struct.rtx_def** %135)
  %137 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %136)
  ret %struct.rtx_def* %137

originalBBalteredBB:                              ; preds = %originalBB, %2
  %138 = alloca i32, align 4
  %139 = alloca %struct.rtx_def*, align 8
  %140 = alloca i32, align 4
  %141 = alloca i32, align 4
  %142 = alloca i32, align 4
  %143 = alloca i32, align 4
  %144 = alloca i32, align 4
  %145 = alloca %struct.rtx_def*, align 8
  %146 = alloca %struct.rtx_def*, align 8
  %147 = alloca %struct.rtx_def**, align 8
  store i32 %0, i32* %138, align 4
  store %struct.rtx_def* %1, %struct.rtx_def** %139, align 8
  %148 = alloca i8, i64 424, align 16
  %149 = bitcast i8* %148 to %struct.rtx_def**
  store %struct.rtx_def** %149, %struct.rtx_def*** %147, align 8
  store i32 0, i32* %143, align 4
  store i32 0, i32* %141, align 4
  store i32 0, i32* %140, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %150 = load i32, i32* %13, align 4
  %151 = icmp slt i32 %150, 53
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %95
  %152 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8
  %153 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8
  %154 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %152, %struct.rtx_def* %153)
  br label %originalBB6
}

declare zeroext i1 @ix86_function_value_regno_p(i32) #1

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_E(i32, i32, %struct.rtvec_def*) #1

declare %struct.rtvec_def* @gen_rtvec_v(i32, %struct.rtx_def**) #1

declare void @push_to_sequence(%struct.rtx_def*) #1

declare void @expand_null_return() #1

declare i32 @host_integerp(%union.tree_node*, i32) #1

declare i64 @tree_low_cst(%union.tree_node*, i32) #1

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

declare %union.tree_node* @tree_last(%union.tree_node*) #1

declare %struct.rtx_def* @expand_binop(i32, %struct.optab*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @type_to_class(%union.tree_node*) #0 {
  %2 = load i32, i32* @x.117
  %3 = load i32, i32* @y.118
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca i32, align 4
  %11 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %11, align 8
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8
  %13 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i32 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 255
  %17 = load i32, i32* @x.117
  %18 = load i32, i32* @y.118
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %16, label %99 [
    i32 5, label %25
    i32 6, label %26
    i32 12, label %43
    i32 10, label %44
    i32 11, label %45
    i32 13, label %46
    i32 15, label %63
    i32 14, label %64
    i32 7, label %65
    i32 8, label %66
    i32 23, label %67
    i32 16, label %84
    i32 20, label %85
    i32 21, label %86
    i32 22, label %86
    i32 18, label %87
    i32 19, label %96
    i32 17, label %97
    i32 24, label %98
  ]

; <label>:25:                                     ; preds = %originalBBpart2
  store i32 0, i32* %10, align 4
  br label %100

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* @x.117
  %28 = load i32, i32* @y.118
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %originalBB3alteredBB, %26
  store i32 1, i32* %10, align 4
  %35 = load i32, i32* @x.117
  %36 = load i32, i32* @y.118
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart25, label %originalBB3alteredBB

originalBBpart25:                                 ; preds = %originalBB3
  br label %100

; <label>:43:                                     ; preds = %originalBBpart2
  store i32 2, i32* %10, align 4
  br label %100

; <label>:44:                                     ; preds = %originalBBpart2
  store i32 3, i32* %10, align 4
  br label %100

; <label>:45:                                     ; preds = %originalBBpart2
  store i32 4, i32* %10, align 4
  br label %100

; <label>:46:                                     ; preds = %originalBBpart2
  %47 = load i32, i32* @x.117
  %48 = load i32, i32* @y.118
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %originalBB7alteredBB, %46
  store i32 5, i32* %10, align 4
  %55 = load i32, i32* @x.117
  %56 = load i32, i32* @y.118
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  br label %100

; <label>:63:                                     ; preds = %originalBBpart2
  store i32 6, i32* %10, align 4
  br label %100

; <label>:64:                                     ; preds = %originalBBpart2
  store i32 7, i32* %10, align 4
  br label %100

; <label>:65:                                     ; preds = %originalBBpart2
  store i32 8, i32* %10, align 4
  br label %100

; <label>:66:                                     ; preds = %originalBBpart2
  store i32 9, i32* %10, align 4
  br label %100

; <label>:67:                                     ; preds = %originalBBpart2
  %68 = load i32, i32* @x.117
  %69 = load i32, i32* @y.118
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %67
  store i32 10, i32* %10, align 4
  %76 = load i32, i32* @x.117
  %77 = load i32, i32* @y.118
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br label %100

; <label>:84:                                     ; preds = %originalBBpart2
  store i32 11, i32* %10, align 4
  br label %100

; <label>:85:                                     ; preds = %originalBBpart2
  store i32 12, i32* %10, align 4
  br label %100

; <label>:86:                                     ; preds = %originalBBpart2, %originalBBpart2
  store i32 13, i32* %10, align 4
  br label %100

; <label>:87:                                     ; preds = %originalBBpart2
  %88 = load %union.tree_node*, %union.tree_node** %11, align 8
  %89 = bitcast %union.tree_node* %88 to %struct.tree_type*
  %90 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %89, i32 0, i32 6
  %91 = load i32, i32* %90, align 4
  %92 = lshr i32 %91, 16
  %93 = and i32 %92, 1
  %94 = icmp ne i32 %93, 0
  %95 = select i1 %94, i32 15, i32 14
  store i32 %95, i32* %10, align 4
  br label %100

; <label>:96:                                     ; preds = %originalBBpart2
  store i32 16, i32* %10, align 4
  br label %100

; <label>:97:                                     ; preds = %originalBBpart2
  store i32 17, i32* %10, align 4
  br label %100

; <label>:98:                                     ; preds = %originalBBpart2
  store i32 18, i32* %10, align 4
  br label %100

; <label>:99:                                     ; preds = %originalBBpart2
  store i32 -1, i32* %10, align 4
  br label %100

; <label>:100:                                    ; preds = %99, %98, %97, %96, %87, %86, %85, %84, %originalBBpart213, %66, %65, %64, %63, %originalBBpart29, %45, %44, %43, %originalBBpart25, %25
  %101 = load i32, i32* %10, align 4
  ret i32 %101

originalBBalteredBB:                              ; preds = %originalBB, %1
  %102 = alloca i32, align 4
  %103 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %103, align 8
  %104 = load %union.tree_node*, %union.tree_node** %103, align 8
  %105 = bitcast %union.tree_node* %104 to %struct.tree_common*
  %106 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %105, i32 0, i32 2
  %107 = load i32, i32* %106, align 8
  %_ = sub i32 %107, 255
  %gen = mul i32 %_, 255
  %_1 = sub i32 0, %107
  %gen2 = add i32 %_1, 255
  %108 = and i32 %107, 255
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %26
  store i32 1, i32* %10, align 4
  br label %originalBB3

originalBB7alteredBB:                             ; preds = %originalBB7, %46
  store i32 5, i32* %10, align 4
  br label %originalBB7

originalBB11alteredBB:                            ; preds = %originalBB11, %67
  store i32 10, i32* %10, align 4
  br label %originalBB11
}

declare %struct.rtx_def* @copy_to_mode_reg(i32, %struct.rtx_def*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_pointer_alignment(%union.tree_node*, i32) #0 {
  %3 = load i32, i32* @x.119
  %4 = load i32, i32* @y.120
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca %union.tree_node*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %union.tree_node* %0, %union.tree_node** %12, align 8
  store i32 %1, i32* %13, align 4
  %16 = load %union.tree_node*, %union.tree_node** %12, align 8
  %17 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %17, i32 0, i32 1
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8
  %20 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %21 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %20, i32 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 255
  %24 = icmp ne i32 %23, 13
  %25 = load i32, i32* @x.119
  %26 = load i32, i32* @y.120
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %33, label %34

; <label>:33:                                     ; preds = %originalBBpart2
  store i32 0, i32* %11, align 4
  br label %368

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i32, i32* @x.119
  %36 = load i32, i32* @y.120
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %originalBB3alteredBB, %34
  %43 = load %union.tree_node*, %union.tree_node** %12, align 8
  %44 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %45 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %44, i32 0, i32 1
  %46 = load %union.tree_node*, %union.tree_node** %45, align 8
  %47 = bitcast %union.tree_node* %46 to %struct.tree_common*
  %48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %47, i32 0, i32 1
  %49 = load %union.tree_node*, %union.tree_node** %48, align 8
  %50 = bitcast %union.tree_node* %49 to %struct.tree_type*
  %51 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %50, i32 0, i32 7
  %52 = load i32, i32* %51, align 8
  store i32 %52, i32* %14, align 4
  %53 = load i32, i32* %14, align 4
  %54 = load i32, i32* %13, align 4
  %55 = icmp ult i32 %53, %54
  %56 = load i32, i32* @x.119
  %57 = load i32, i32* @y.120
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart25, label %originalBB3alteredBB

originalBBpart25:                                 ; preds = %originalBB3
  br i1 %55, label %64, label %66

; <label>:64:                                     ; preds = %originalBBpart25
  %65 = load i32, i32* %14, align 4
  br label %68

; <label>:66:                                     ; preds = %originalBBpart25
  %67 = load i32, i32* %13, align 4
  br label %68

; <label>:68:                                     ; preds = %66, %64
  %69 = phi i32 [ %65, %64 ], [ %67, %66 ]
  store i32 %69, i32* %14, align 4
  br label %70

; <label>:70:                                     ; preds = %originalBBpart254, %68
  %71 = load %union.tree_node*, %union.tree_node** %12, align 8
  %72 = bitcast %union.tree_node* %71 to %struct.tree_common*
  %73 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %72, i32 0, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = and i32 %74, 255
  switch i32 %75, label %349 [
    i32 115, label %76
    i32 114, label %76
    i32 116, label %76
    i32 59, label %145
    i32 121, label %226
  ]

; <label>:76:                                     ; preds = %70, %70, %70
  %77 = load i32, i32* @x.119
  %78 = load i32, i32* @y.120
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %originalBB7alteredBB, %76
  %85 = load %union.tree_node*, %union.tree_node** %12, align 8
  %86 = bitcast %union.tree_node* %85 to %struct.tree_exp*
  %87 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %86, i32 0, i32 2
  %88 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %87, i64 0, i64 0
  %89 = load %union.tree_node*, %union.tree_node** %88, align 8
  store %union.tree_node* %89, %union.tree_node** %12, align 8
  %90 = load %union.tree_node*, %union.tree_node** %12, align 8
  %91 = bitcast %union.tree_node* %90 to %struct.tree_common*
  %92 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %91, i32 0, i32 1
  %93 = load %union.tree_node*, %union.tree_node** %92, align 8
  %94 = bitcast %union.tree_node* %93 to %struct.tree_common*
  %95 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %94, i32 0, i32 2
  %96 = load i32, i32* %95, align 8
  %97 = and i32 %96, 255
  %98 = icmp ne i32 %97, 13
  %99 = load i32, i32* @x.119
  %100 = load i32, i32* @y.120
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart215, label %originalBB7alteredBB

originalBBpart215:                                ; preds = %originalBB7
  br i1 %98, label %107, label %109

; <label>:107:                                    ; preds = %originalBBpart215
  %108 = load i32, i32* %14, align 4
  store i32 %108, i32* %11, align 4
  br label %368

; <label>:109:                                    ; preds = %originalBBpart215
  %110 = load %union.tree_node*, %union.tree_node** %12, align 8
  %111 = bitcast %union.tree_node* %110 to %struct.tree_common*
  %112 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %111, i32 0, i32 1
  %113 = load %union.tree_node*, %union.tree_node** %112, align 8
  %114 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %115 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %114, i32 0, i32 1
  %116 = load %union.tree_node*, %union.tree_node** %115, align 8
  %117 = bitcast %union.tree_node* %116 to %struct.tree_type*
  %118 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %117, i32 0, i32 7
  %119 = load i32, i32* %118, align 8
  store i32 %119, i32* %15, align 4
  %120 = load i32, i32* %15, align 4
  %121 = load i32, i32* %13, align 4
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %123, label %125

; <label>:123:                                    ; preds = %109
  %124 = load i32, i32* %15, align 4
  br label %143

; <label>:125:                                    ; preds = %109
  %126 = load i32, i32* @x.119
  %127 = load i32, i32* @y.120
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %125
  %134 = load i32, i32* %13, align 4
  %135 = load i32, i32* @x.119
  %136 = load i32, i32* @y.120
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %143

; <label>:143:                                    ; preds = %originalBBpart219, %123
  %144 = phi i32 [ %124, %123 ], [ %134, %originalBBpart219 ]
  store i32 %144, i32* %14, align 4
  br label %351

; <label>:145:                                    ; preds = %70
  %146 = load i32, i32* @x.119
  %147 = load i32, i32* @y.120
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %originalBB21alteredBB, %145
  %154 = load %union.tree_node*, %union.tree_node** %12, align 8
  %155 = bitcast %union.tree_node* %154 to %struct.tree_exp*
  %156 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %155, i32 0, i32 2
  %157 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %156, i64 0, i64 1
  %158 = load %union.tree_node*, %union.tree_node** %157, align 8
  %159 = call i32 @host_integerp(%union.tree_node* %158, i32 1)
  %160 = icmp ne i32 %159, 0
  %161 = load i32, i32* @x.119
  %162 = load i32, i32* @y.120
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br i1 %160, label %187, label %169

; <label>:169:                                    ; preds = %originalBBpart223
  %170 = load i32, i32* @x.119
  %171 = load i32, i32* @y.120
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %originalBB25alteredBB, %169
  %178 = load i32, i32* %14, align 4
  store i32 %178, i32* %11, align 4
  %179 = load i32, i32* @x.119
  %180 = load i32, i32* @y.120
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBBpart228, label %originalBB25alteredBB

originalBBpart228:                                ; preds = %originalBB25
  br label %368

; <label>:187:                                    ; preds = %originalBBpart223
  %188 = load i32, i32* @x.119
  %189 = load i32, i32* @y.120
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %187
  %196 = load i32, i32* @x.119
  %197 = load i32, i32* @y.120
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %204

; <label>:204:                                    ; preds = %217, %originalBBpart232
  %205 = load %union.tree_node*, %union.tree_node** %12, align 8
  %206 = bitcast %union.tree_node* %205 to %struct.tree_exp*
  %207 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %206, i32 0, i32 2
  %208 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %207, i64 0, i64 1
  %209 = load %union.tree_node*, %union.tree_node** %208, align 8
  %210 = call i64 @tree_low_cst(%union.tree_node* %209, i32 1)
  %211 = load i32, i32* %13, align 4
  %212 = udiv i32 %211, 8
  %213 = sub i32 %212, 1
  %214 = zext i32 %213 to i64
  %215 = and i64 %210, %214
  %216 = icmp ne i64 %215, 0
  br i1 %216, label %217, label %220

; <label>:217:                                    ; preds = %204
  %218 = load i32, i32* %13, align 4
  %219 = lshr i32 %218, 1
  store i32 %219, i32* %13, align 4
  br label %204

; <label>:220:                                    ; preds = %204
  %221 = load %union.tree_node*, %union.tree_node** %12, align 8
  %222 = bitcast %union.tree_node* %221 to %struct.tree_exp*
  %223 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %222, i32 0, i32 2
  %224 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %223, i64 0, i64 0
  %225 = load %union.tree_node*, %union.tree_node** %224, align 8
  store %union.tree_node* %225, %union.tree_node** %12, align 8
  br label %351

; <label>:226:                                    ; preds = %70
  %227 = load %union.tree_node*, %union.tree_node** %12, align 8
  %228 = bitcast %union.tree_node* %227 to %struct.tree_exp*
  %229 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %228, i32 0, i32 2
  %230 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %229, i64 0, i64 0
  %231 = load %union.tree_node*, %union.tree_node** %230, align 8
  store %union.tree_node* %231, %union.tree_node** %12, align 8
  %232 = load %union.tree_node*, %union.tree_node** %12, align 8
  %233 = bitcast %union.tree_node* %232 to %struct.tree_common*
  %234 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %233, i32 0, i32 2
  %235 = load i32, i32* %234, align 8
  %236 = and i32 %235, 255
  %237 = icmp eq i32 %236, 30
  br i1 %237, label %238, label %255

; <label>:238:                                    ; preds = %226
  %239 = load i32, i32* @x.119
  %240 = load i32, i32* @y.120
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %238
  store i32 16, i32* %14, align 4
  %247 = load i32, i32* @x.119
  %248 = load i32, i32* @y.120
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %339

; <label>:255:                                    ; preds = %226
  %256 = load %union.tree_node*, %union.tree_node** %12, align 8
  %257 = bitcast %union.tree_node* %256 to %struct.tree_common*
  %258 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %257, i32 0, i32 2
  %259 = load i32, i32* %258, align 8
  %260 = and i32 %259, 255
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i64 0, i64 %261
  %263 = load i8, i8* %262, align 1
  %264 = sext i8 %263 to i32
  %265 = icmp eq i32 %264, 100
  br i1 %265, label %266, label %290

; <label>:266:                                    ; preds = %255
  %267 = load i32, i32* @x.119
  %268 = load i32, i32* @y.120
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %266
  %275 = load %union.tree_node*, %union.tree_node** %12, align 8
  %276 = bitcast %union.tree_node* %275 to %struct.tree_decl*
  %277 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %276, i32 0, i32 6
  %278 = bitcast %union.anon* %277 to %struct.anon.0*
  %279 = bitcast %struct.anon.0* %278 to i32*
  %280 = load i32, i32* %279, align 8
  %281 = and i32 %280, 16777215
  store i32 %281, i32* %14, align 4
  %282 = load i32, i32* @x.119
  %283 = load i32, i32* @y.120
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBBpart242, label %originalBB38alteredBB

originalBBpart242:                                ; preds = %originalBB38
  br label %322

; <label>:290:                                    ; preds = %255
  %291 = load %union.tree_node*, %union.tree_node** %12, align 8
  %292 = bitcast %union.tree_node* %291 to %struct.tree_common*
  %293 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %292, i32 0, i32 2
  %294 = load i32, i32* %293, align 8
  %295 = and i32 %294, 255
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i64 0, i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = sext i8 %298 to i32
  %300 = icmp eq i32 %299, 99
  br i1 %300, label %301, label %321

; <label>:301:                                    ; preds = %290
  %302 = load i32, i32* @x.119
  %303 = load i32, i32* @y.120
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %originalBB44alteredBB, %301
  %310 = load %union.tree_node*, %union.tree_node** %12, align 8
  %311 = load i32, i32* %14, align 4
  %312 = call i32 @ix86_constant_alignment(%union.tree_node* %310, i32 %311)
  store i32 %312, i32* %14, align 4
  %313 = load i32, i32* @x.119
  %314 = load i32, i32* @y.120
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  br label %321

; <label>:321:                                    ; preds = %originalBBpart246, %290
  br label %322

; <label>:322:                                    ; preds = %321, %originalBBpart242
  %323 = load i32, i32* @x.119
  %324 = load i32, i32* @y.120
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %originalBB48alteredBB, %322
  %331 = load i32, i32* @x.119
  %332 = load i32, i32* @y.120
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br label %339

; <label>:339:                                    ; preds = %originalBBpart250, %originalBBpart236
  %340 = load i32, i32* %14, align 4
  %341 = load i32, i32* %13, align 4
  %342 = icmp ult i32 %340, %341
  br i1 %342, label %343, label %345

; <label>:343:                                    ; preds = %339
  %344 = load i32, i32* %14, align 4
  br label %347

; <label>:345:                                    ; preds = %339
  %346 = load i32, i32* %13, align 4
  br label %347

; <label>:347:                                    ; preds = %345, %343
  %348 = phi i32 [ %344, %343 ], [ %346, %345 ]
  store i32 %348, i32* %11, align 4
  br label %368

; <label>:349:                                    ; preds = %70
  %350 = load i32, i32* %14, align 4
  store i32 %350, i32* %11, align 4
  br label %368

; <label>:351:                                    ; preds = %220, %143
  %352 = load i32, i32* @x.119
  %353 = load i32, i32* @y.120
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %351
  %360 = load i32, i32* @x.119
  %361 = load i32, i32* @y.120
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br label %70

; <label>:368:                                    ; preds = %349, %347, %originalBBpart228, %107, %33
  %369 = load i32, i32* @x.119
  %370 = load i32, i32* @y.120
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %368
  %377 = load i32, i32* %11, align 4
  %378 = load i32, i32* @x.119
  %379 = load i32, i32* @y.120
  %380 = sub i32 %378, 1
  %381 = mul i32 %378, %380
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %383, %384
  br i1 %385, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  ret i32 %377

originalBBalteredBB:                              ; preds = %originalBB, %2
  %386 = alloca i32, align 4
  %387 = alloca %union.tree_node*, align 8
  %388 = alloca i32, align 4
  %389 = alloca i32, align 4
  %390 = alloca i32, align 4
  store %union.tree_node* %0, %union.tree_node** %387, align 8
  store i32 %1, i32* %388, align 4
  %391 = load %union.tree_node*, %union.tree_node** %387, align 8
  %392 = bitcast %union.tree_node* %391 to %struct.tree_common*
  %393 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %392, i32 0, i32 1
  %394 = load %union.tree_node*, %union.tree_node** %393, align 8
  %395 = bitcast %union.tree_node* %394 to %struct.tree_common*
  %396 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %395, i32 0, i32 2
  %397 = load i32, i32* %396, align 8
  %_ = sub i32 %397, 255
  %gen = mul i32 %_, 255
  %_1 = sub i32 0, %397
  %gen2 = add i32 %_1, 255
  %398 = and i32 %397, 255
  %399 = icmp ne i32 %398, 13
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %34
  %400 = load %union.tree_node*, %union.tree_node** %12, align 8
  %401 = bitcast %union.tree_node* %400 to %struct.tree_common*
  %402 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %401, i32 0, i32 1
  %403 = load %union.tree_node*, %union.tree_node** %402, align 8
  %404 = bitcast %union.tree_node* %403 to %struct.tree_common*
  %405 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %404, i32 0, i32 1
  %406 = load %union.tree_node*, %union.tree_node** %405, align 8
  %407 = bitcast %union.tree_node* %406 to %struct.tree_type*
  %408 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %407, i32 0, i32 7
  %409 = load i32, i32* %408, align 8
  store i32 %409, i32* %14, align 4
  %410 = load i32, i32* %14, align 4
  %411 = load i32, i32* %13, align 4
  %412 = icmp ult i32 %410, %411
  br label %originalBB3

originalBB7alteredBB:                             ; preds = %originalBB7, %76
  %413 = load %union.tree_node*, %union.tree_node** %12, align 8
  %414 = bitcast %union.tree_node* %413 to %struct.tree_exp*
  %415 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %414, i32 0, i32 2
  %416 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %415, i64 0, i64 0
  %417 = load %union.tree_node*, %union.tree_node** %416, align 8
  store %union.tree_node* %417, %union.tree_node** %12, align 8
  %418 = load %union.tree_node*, %union.tree_node** %12, align 8
  %419 = bitcast %union.tree_node* %418 to %struct.tree_common*
  %420 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %419, i32 0, i32 1
  %421 = load %union.tree_node*, %union.tree_node** %420, align 8
  %422 = bitcast %union.tree_node* %421 to %struct.tree_common*
  %423 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %422, i32 0, i32 2
  %424 = load i32, i32* %423, align 8
  %_8 = sub i32 %424, 255
  %gen9 = mul i32 %_8, 255
  %_10 = shl i32 %424, 255
  %_11 = sub i32 %424, 255
  %gen12 = mul i32 %_11, 255
  %_13 = shl i32 %424, 255
  %425 = and i32 %424, 255
  %426 = icmp ne i32 %425, 13
  br label %originalBB7

originalBB17alteredBB:                            ; preds = %originalBB17, %125
  %427 = load i32, i32* %13, align 4
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %145
  %428 = load %union.tree_node*, %union.tree_node** %12, align 8
  %429 = bitcast %union.tree_node* %428 to %struct.tree_exp*
  %430 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %429, i32 0, i32 2
  %431 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %430, i64 0, i64 1
  %432 = load %union.tree_node*, %union.tree_node** %431, align 8
  %433 = call i32 @host_integerp(%union.tree_node* %432, i32 1)
  %434 = icmp ne i32 %433, 0
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %169
  %435 = load i32, i32* %14, align 4
  store i32 %435, i32* %11, align 4
  br label %originalBB25

originalBB30alteredBB:                            ; preds = %originalBB30, %187
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %238
  store i32 16, i32* %14, align 4
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %266
  %436 = load %union.tree_node*, %union.tree_node** %12, align 8
  %437 = bitcast %union.tree_node* %436 to %struct.tree_decl*
  %438 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %437, i32 0, i32 6
  %439 = bitcast %union.anon* %438 to %struct.anon.0*
  %440 = bitcast %struct.anon.0* %439 to i32*
  %441 = load i32, i32* %440, align 8
  %_39 = sub i32 0, %441
  %gen40 = add i32 %_39, 16777215
  %442 = and i32 %441, 16777215
  store i32 %442, i32* %14, align 4
  br label %originalBB38

originalBB44alteredBB:                            ; preds = %originalBB44, %301
  %443 = load %union.tree_node*, %union.tree_node** %12, align 8
  %444 = load i32, i32* %14, align 4
  %445 = call i32 @ix86_constant_alignment(%union.tree_node* %443, i32 %444)
  store i32 %445, i32* %14, align 4
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %322
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %351
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %368
  %446 = load i32, i32* %11, align 4
  br label %originalBB56
}

declare %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @convert_move(%struct.rtx_def*, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @convert_to_mode(i32, %struct.rtx_def*, i32) #1

declare i32 @ix86_constant_alignment(%union.tree_node*, i32) #1

declare %union.tree_node* @size_binop(i32, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @chainon(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build_tree_list(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: noinline nounwind uwtable
define internal %union.tree_node* @build_function_call_expr(%union.tree_node*, %union.tree_node*) #0 {
  %3 = alloca %union.tree_node*, align 8
  %4 = alloca %union.tree_node*, align 8
  %5 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %3, align 8
  store %union.tree_node* %1, %union.tree_node** %4, align 8
  %6 = load %union.tree_node*, %union.tree_node** %3, align 8
  %7 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8
  %10 = call %union.tree_node* @build_pointer_type(%union.tree_node* %9)
  %11 = load %union.tree_node*, %union.tree_node** %3, align 8
  %12 = call %union.tree_node* @build1(i32 121, %union.tree_node* %10, %union.tree_node* %11)
  store %union.tree_node* %12, %union.tree_node** %5, align 8
  %13 = load %union.tree_node*, %union.tree_node** %3, align 8
  %14 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %14, i32 0, i32 1
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8
  %17 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %17, i32 0, i32 1
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8
  %20 = load %union.tree_node*, %union.tree_node** %5, align 8
  %21 = load %union.tree_node*, %union.tree_node** %4, align 8
  %22 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 53, %union.tree_node* %19, %union.tree_node* %20, %union.tree_node* %21)
  store %union.tree_node* %22, %union.tree_node** %5, align 8
  %23 = load %union.tree_node*, %union.tree_node** %5, align 8
  %24 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %24, i32 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, -257
  %28 = or i32 %27, 256
  store i32 %28, i32* %25, align 8
  %29 = load %union.tree_node*, %union.tree_node** %5, align 8
  %30 = call %union.tree_node* @fold(%union.tree_node* %29)
  ret %union.tree_node* %30
}

declare i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: noinline nounwind uwtable
define internal i8* @c_getstr(%union.tree_node*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %union.tree_node*, align 8
  %4 = alloca %union.tree_node*, align 8
  store %union.tree_node* %0, %union.tree_node** %3, align 8
  %5 = load %union.tree_node*, %union.tree_node** %3, align 8
  %6 = call %union.tree_node* @string_constant(%union.tree_node* %5, %union.tree_node** %4)
  store %union.tree_node* %6, %union.tree_node** %3, align 8
  %7 = load %union.tree_node*, %union.tree_node** %3, align 8
  %8 = icmp eq %union.tree_node* %7, null
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %1
  store i8* null, i8** %2, align 8
  br label %74

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @x.123
  %12 = load i32, i32* @y.124
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %10
  %19 = load %union.tree_node*, %union.tree_node** %4, align 8
  %20 = icmp eq %union.tree_node* %19, null
  %21 = load i32, i32* @x.123
  %22 = load i32, i32* @y.124
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %34

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load %union.tree_node*, %union.tree_node** %3, align 8
  %31 = bitcast %union.tree_node* %30 to %struct.tree_string*
  %32 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %31, i32 0, i32 3
  %33 = load i8*, i8** %32, align 8
  store i8* %33, i8** %2, align 8
  br label %74

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load %union.tree_node*, %union.tree_node** %4, align 8
  %36 = call i32 @host_integerp(%union.tree_node* %35, i32 1)
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %64

; <label>:38:                                     ; preds = %34
  %39 = load i32, i32* @x.123
  %40 = load i32, i32* @y.124
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %38
  %47 = load %union.tree_node*, %union.tree_node** %4, align 8
  %48 = load %union.tree_node*, %union.tree_node** %3, align 8
  %49 = bitcast %union.tree_node* %48 to %struct.tree_string*
  %50 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %49, i32 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = sub nsw i32 %51, 1
  %53 = sext i32 %52 to i64
  %54 = call i32 @compare_tree_int(%union.tree_node* %47, i64 %53)
  %55 = icmp sgt i32 %54, 0
  %56 = load i32, i32* @x.123
  %57 = load i32, i32* @y.124
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart215, label %originalBB1alteredBB

originalBBpart215:                                ; preds = %originalBB1
  br i1 %55, label %64, label %65

; <label>:64:                                     ; preds = %originalBBpart215, %34
  store i8* null, i8** %2, align 8
  br label %74

; <label>:65:                                     ; preds = %originalBBpart215
  br label %66

; <label>:66:                                     ; preds = %65
  %67 = load %union.tree_node*, %union.tree_node** %3, align 8
  %68 = bitcast %union.tree_node* %67 to %struct.tree_string*
  %69 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %68, i32 0, i32 3
  %70 = load i8*, i8** %69, align 8
  %71 = load %union.tree_node*, %union.tree_node** %4, align 8
  %72 = call i64 @tree_low_cst(%union.tree_node* %71, i32 1)
  %73 = getelementptr inbounds i8, i8* %70, i64 %72
  store i8* %73, i8** %2, align 8
  br label %74

; <label>:74:                                     ; preds = %66, %64, %29, %9
  %75 = load i8*, i8** %2, align 8
  ret i8* %75

originalBBalteredBB:                              ; preds = %originalBB, %10
  %76 = load %union.tree_node*, %union.tree_node** %4, align 8
  %77 = icmp eq %union.tree_node* %76, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  %78 = load %union.tree_node*, %union.tree_node** %4, align 8
  %79 = load %union.tree_node*, %union.tree_node** %3, align 8
  %80 = bitcast %union.tree_node* %79 to %struct.tree_string*
  %81 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %80, i32 0, i32 2
  %82 = load i32, i32* %81, align 8
  %_ = shl i32 %82, 1
  %_2 = sub i32 0, %82
  %gen = add i32 %_2, 1
  %_3 = sub i32 0, %82
  %gen4 = add i32 %_3, 1
  %_5 = sub i32 0, %82
  %gen6 = add i32 %_5, 1
  %_7 = shl i32 %82, 1
  %_8 = sub i32 0, %82
  %gen9 = add i32 %_8, 1
  %_10 = shl i32 %82, 1
  %_11 = sub i32 %82, 1
  %gen12 = mul i32 %_11, 1
  %_13 = shl i32 %82, 1
  %83 = sub nsw i32 %82, 1
  %84 = sext i32 %83 to i64
  %85 = call i32 @compare_tree_int(%union.tree_node* %78, i64 %84)
  %86 = icmp sgt i32 %85, 0
  br label %originalBB1
}

declare i32 @can_store_by_pieces(i64, %struct.rtx_def* (i8*, i64, i32)*, i8*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @builtin_strncpy_read_str(i8*, i64, i32) #0 {
  %4 = alloca %struct.rtx_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32 %2, i32* %7, align 4
  %9 = load i8*, i8** %5, align 8
  store i8* %9, i8** %8, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = call i64 @strlen(i8* %11) #7
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %16

; <label>:14:                                     ; preds = %3
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16
  store %struct.rtx_def* %15, %struct.rtx_def** %4, align 8
  br label %38

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.125
  %18 = load i32, i32* @y.126
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %16
  %25 = load i8*, i8** %8, align 8
  %26 = load i64, i64* %6, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = load i32, i32* %7, align 4
  %29 = call %struct.rtx_def* @c_readstr(i8* %27, i32 %28)
  store %struct.rtx_def* %29, %struct.rtx_def** %4, align 8
  %30 = load i32, i32* @x.125
  %31 = load i32, i32* @y.126
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %38

; <label>:38:                                     ; preds = %originalBBpart2, %14
  %39 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  ret %struct.rtx_def* %39

originalBBalteredBB:                              ; preds = %originalBB, %16
  %40 = load i8*, i8** %8, align 8
  %41 = load i64, i64* %6, align 8
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = load i32, i32* %7, align 4
  %44 = call %struct.rtx_def* @c_readstr(i8* %42, i32 %43)
  store %struct.rtx_def* %44, %struct.rtx_def** %4, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @get_memory_rtx(%union.tree_node*) #0 {
  %2 = alloca %union.tree_node*, align 8
  %3 = alloca %struct.rtx_def*, align 8
  %4 = alloca %struct.rtx_def*, align 8
  store %union.tree_node* %0, %union.tree_node** %2, align 8
  %5 = load %union.tree_node*, %union.tree_node** %2, align 8
  %6 = load i32, i32* @ptr_mode, align 4
  %7 = call %struct.rtx_def* @expand_expr(%union.tree_node* %5, %struct.rtx_def* null, i32 %6, i32 1)
  store %struct.rtx_def* %7, %struct.rtx_def** %3, align 8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8
  %9 = call %struct.rtx_def* @memory_address(i32 51, %struct.rtx_def* %8)
  %10 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %9)
  store %struct.rtx_def* %10, %struct.rtx_def** %4, align 8
  br label %11

; <label>:11:                                     ; preds = %originalBBpart217, %1
  %12 = load i32, i32* @x.127
  %13 = load i32, i32* @y.128
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %11
  %20 = load %union.tree_node*, %union.tree_node** %2, align 8
  %21 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %21, i32 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 255
  %25 = icmp eq i32 %24, 115
  %26 = load i32, i32* @x.127
  %27 = load i32, i32* @y.128
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %25, label %48, label %34

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load %union.tree_node*, %union.tree_node** %2, align 8
  %36 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %36, i32 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 255
  %40 = icmp eq i32 %39, 114
  br i1 %40, label %48, label %41

; <label>:41:                                     ; preds = %34
  %42 = load %union.tree_node*, %union.tree_node** %2, align 8
  %43 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %44 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %43, i32 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 255
  %47 = icmp eq i32 %46, 116
  br i1 %47, label %48, label %94

; <label>:48:                                     ; preds = %41, %34, %originalBBpart2
  %49 = load %union.tree_node*, %union.tree_node** %2, align 8
  %50 = bitcast %union.tree_node* %49 to %struct.tree_exp*
  %51 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %50, i32 0, i32 2
  %52 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %51, i64 0, i64 0
  %53 = load %union.tree_node*, %union.tree_node** %52, align 8
  %54 = bitcast %union.tree_node* %53 to %struct.tree_common*
  %55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %54, i32 0, i32 1
  %56 = load %union.tree_node*, %union.tree_node** %55, align 8
  %57 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %58 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %57, i32 0, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, 255
  %61 = icmp eq i32 %60, 13
  br i1 %61, label %76, label %62

; <label>:62:                                     ; preds = %48
  %63 = load %union.tree_node*, %union.tree_node** %2, align 8
  %64 = bitcast %union.tree_node* %63 to %struct.tree_exp*
  %65 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %64, i32 0, i32 2
  %66 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %65, i64 0, i64 0
  %67 = load %union.tree_node*, %union.tree_node** %66, align 8
  %68 = bitcast %union.tree_node* %67 to %struct.tree_common*
  %69 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %68, i32 0, i32 1
  %70 = load %union.tree_node*, %union.tree_node** %69, align 8
  %71 = bitcast %union.tree_node* %70 to %struct.tree_common*
  %72 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %71, i32 0, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = and i32 %73, 255
  %75 = icmp eq i32 %74, 15
  br label %76

; <label>:76:                                     ; preds = %62, %48
  %77 = phi i1 [ true, %48 ], [ %75, %62 ]
  %78 = load i32, i32* @x.127
  %79 = load i32, i32* @y.128
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %76
  %86 = load i32, i32* @x.127
  %87 = load i32, i32* @y.128
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br label %94

; <label>:94:                                     ; preds = %originalBBpart213, %41
  %95 = phi i1 [ false, %41 ], [ %77, %originalBBpart213 ]
  br i1 %95, label %96, label %118

; <label>:96:                                     ; preds = %94
  %97 = load i32, i32* @x.127
  %98 = load i32, i32* @y.128
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %originalBB15alteredBB, %96
  %105 = load %union.tree_node*, %union.tree_node** %2, align 8
  %106 = bitcast %union.tree_node* %105 to %struct.tree_exp*
  %107 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %106, i32 0, i32 2
  %108 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %107, i64 0, i64 0
  %109 = load %union.tree_node*, %union.tree_node** %108, align 8
  store %union.tree_node* %109, %union.tree_node** %2, align 8
  %110 = load i32, i32* @x.127
  %111 = load i32, i32* @y.128
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br label %11

; <label>:118:                                    ; preds = %94
  %119 = load i32, i32* @x.127
  %120 = load i32, i32* @y.128
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %originalBB19alteredBB, %118
  %127 = load %union.tree_node*, %union.tree_node** %2, align 8
  %128 = bitcast %union.tree_node* %127 to %struct.tree_common*
  %129 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %128, i32 0, i32 2
  %130 = load i32, i32* %129, align 8
  %131 = and i32 %130, 255
  %132 = icmp eq i32 %131, 121
  %133 = load i32, i32* @x.127
  %134 = load i32, i32* @y.128
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart225, label %originalBB19alteredBB

originalBBpart225:                                ; preds = %originalBB19
  br i1 %132, label %141, label %149

; <label>:141:                                    ; preds = %originalBBpart225
  %142 = load %union.tree_node*, %union.tree_node** %2, align 8
  %143 = bitcast %union.tree_node* %142 to %struct.tree_exp*
  %144 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %143, i32 0, i32 2
  %145 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %144, i64 0, i64 0
  %146 = load %union.tree_node*, %union.tree_node** %145, align 8
  store %union.tree_node* %146, %union.tree_node** %2, align 8
  %147 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %148 = load %union.tree_node*, %union.tree_node** %2, align 8
  call void @set_mem_attributes(%struct.rtx_def* %147, %union.tree_node* %148, i32 0)
  br label %213

; <label>:149:                                    ; preds = %originalBBpart225
  %150 = load %union.tree_node*, %union.tree_node** %2, align 8
  %151 = bitcast %union.tree_node* %150 to %struct.tree_common*
  %152 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %151, i32 0, i32 1
  %153 = load %union.tree_node*, %union.tree_node** %152, align 8
  %154 = bitcast %union.tree_node* %153 to %struct.tree_common*
  %155 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %154, i32 0, i32 2
  %156 = load i32, i32* %155, align 8
  %157 = and i32 %156, 255
  %158 = icmp eq i32 %157, 13
  br i1 %158, label %185, label %159

; <label>:159:                                    ; preds = %149
  %160 = load i32, i32* @x.127
  %161 = load i32, i32* @y.128
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %159
  %168 = load %union.tree_node*, %union.tree_node** %2, align 8
  %169 = bitcast %union.tree_node* %168 to %struct.tree_common*
  %170 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %169, i32 0, i32 1
  %171 = load %union.tree_node*, %union.tree_node** %170, align 8
  %172 = bitcast %union.tree_node* %171 to %struct.tree_common*
  %173 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %172, i32 0, i32 2
  %174 = load i32, i32* %173, align 8
  %175 = and i32 %174, 255
  %176 = icmp eq i32 %175, 15
  %177 = load i32, i32* @x.127
  %178 = load i32, i32* @y.128
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart234, label %originalBB27alteredBB

originalBBpart234:                                ; preds = %originalBB27
  br i1 %176, label %185, label %196

; <label>:185:                                    ; preds = %originalBBpart234, %149
  %186 = load %union.tree_node*, %union.tree_node** %2, align 8
  %187 = bitcast %union.tree_node* %186 to %struct.tree_common*
  %188 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %187, i32 0, i32 1
  %189 = load %union.tree_node*, %union.tree_node** %188, align 8
  %190 = bitcast %union.tree_node* %189 to %struct.tree_common*
  %191 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %190, i32 0, i32 1
  %192 = load %union.tree_node*, %union.tree_node** %191, align 8
  %193 = load %union.tree_node*, %union.tree_node** %2, align 8
  %194 = call %union.tree_node* @build1(i32 41, %union.tree_node* %192, %union.tree_node* %193)
  store %union.tree_node* %194, %union.tree_node** %2, align 8
  %195 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  call void @set_mem_alias_set(%struct.rtx_def* %195, i64 0)
  br label %196

; <label>:196:                                    ; preds = %185, %originalBBpart234
  %197 = load i32, i32* @x.127
  %198 = load i32, i32* @y.128
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %originalBB36alteredBB, %196
  %205 = load i32, i32* @x.127
  %206 = load i32, i32* @y.128
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart238, label %originalBB36alteredBB

originalBBpart238:                                ; preds = %originalBB36
  br label %213

; <label>:213:                                    ; preds = %originalBBpart238, %141
  %214 = load i32, i32* @x.127
  %215 = load i32, i32* @y.128
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %originalBB40alteredBB, %213
  %222 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %223 = load i32, i32* @x.127
  %224 = load i32, i32* @y.128
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart242, label %originalBB40alteredBB

originalBBpart242:                                ; preds = %originalBB40
  ret %struct.rtx_def* %222

originalBBalteredBB:                              ; preds = %originalBB, %11
  %231 = load %union.tree_node*, %union.tree_node** %2, align 8
  %232 = bitcast %union.tree_node* %231 to %struct.tree_common*
  %233 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %232, i32 0, i32 2
  %234 = load i32, i32* %233, align 8
  %_ = sub i32 %234, 255
  %gen = mul i32 %_, 255
  %_1 = sub i32 %234, 255
  %gen2 = mul i32 %_1, 255
  %_3 = sub i32 %234, 255
  %gen4 = mul i32 %_3, 255
  %_5 = sub i32 %234, 255
  %gen6 = mul i32 %_5, 255
  %_7 = sub i32 0, %234
  %gen8 = add i32 %_7, 255
  %_9 = shl i32 %234, 255
  %_10 = shl i32 %234, 255
  %235 = and i32 %234, 255
  %236 = icmp eq i32 %235, 115
  br label %originalBB

originalBB11alteredBB:                            ; preds = %originalBB11, %76
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %96
  %237 = load %union.tree_node*, %union.tree_node** %2, align 8
  %238 = bitcast %union.tree_node* %237 to %struct.tree_exp*
  %239 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %238, i32 0, i32 2
  %240 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %239, i64 0, i64 0
  %241 = load %union.tree_node*, %union.tree_node** %240, align 8
  store %union.tree_node* %241, %union.tree_node** %2, align 8
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %118
  %242 = load %union.tree_node*, %union.tree_node** %2, align 8
  %243 = bitcast %union.tree_node* %242 to %struct.tree_common*
  %244 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %243, i32 0, i32 2
  %245 = load i32, i32* %244, align 8
  %_20 = shl i32 %245, 255
  %_21 = shl i32 %245, 255
  %_22 = sub i32 0, %245
  %gen23 = add i32 %_22, 255
  %246 = and i32 %245, 255
  %247 = icmp eq i32 %246, 121
  br label %originalBB19

originalBB27alteredBB:                            ; preds = %originalBB27, %159
  %248 = load %union.tree_node*, %union.tree_node** %2, align 8
  %249 = bitcast %union.tree_node* %248 to %struct.tree_common*
  %250 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %249, i32 0, i32 1
  %251 = load %union.tree_node*, %union.tree_node** %250, align 8
  %252 = bitcast %union.tree_node* %251 to %struct.tree_common*
  %253 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %252, i32 0, i32 2
  %254 = load i32, i32* %253, align 8
  %_28 = shl i32 %254, 255
  %_29 = sub i32 0, %254
  %gen30 = add i32 %_29, 255
  %_31 = sub i32 %254, 255
  %gen32 = mul i32 %_31, 255
  %255 = and i32 %254, 255
  %256 = icmp eq i32 %255, 15
  br label %originalBB27

originalBB36alteredBB:                            ; preds = %originalBB36, %196
  br label %originalBB36

originalBB40alteredBB:                            ; preds = %originalBB40, %213
  %257 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  br label %originalBB40
}

declare void @store_by_pieces(%struct.rtx_def*, i64, %struct.rtx_def* (i8*, i64, i32)*, i8*, i32) #1

declare %union.tree_node* @string_constant(%union.tree_node*, %union.tree_node**) #1

declare i32 @compare_tree_int(%union.tree_node*, i64) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @c_readstr(i8*, i32) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [2 x i64], align 16
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %9 = load i32, i32* %4, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 1
  br i1 %13, label %14, label %31

; <label>:14:                                     ; preds = %2
  %15 = load i32, i32* @x.129
  %16 = load i32, i32* @y.130
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %14
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 330, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.c_readstr, i32 0, i32 0)) #6
  %23 = load i32, i32* @x.129
  %24 = load i32, i32* @y.130
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:31:                                     ; preds = %2
  %32 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 0
  store i64 0, i64* %32, align 16
  %33 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 1
  store i64 0, i64* %33, align 8
  store i64 1, i64* %6, align 8
  store i32 0, i32* %7, align 4
  br label %34

; <label>:34:                                     ; preds = %103, %31
  %35 = load i32, i32* %7, align 4
  %36 = load i32, i32* %4, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = icmp ult i32 %35, %40
  br i1 %41, label %42, label %106

; <label>:42:                                     ; preds = %34
  %43 = load i32, i32* %7, align 4
  store i32 %43, i32* %8, align 4
  %44 = load i32, i32* %8, align 4
  %45 = mul i32 %44, 8
  store i32 %45, i32* %8, align 4
  %46 = load i32, i32* %8, align 4
  %47 = icmp ugt i32 %46, 128
  br i1 %47, label %48, label %65

; <label>:48:                                     ; preds = %42
  %49 = load i32, i32* @x.129
  %50 = load i32, i32* @y.130
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %48
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 344, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.c_readstr, i32 0, i32 0)) #6
  %57 = load i32, i32* @x.129
  %58 = load i32, i32* @y.130
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

; <label>:65:                                     ; preds = %42
  %66 = load i32, i32* @x.129
  %67 = load i32, i32* @y.130
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %65
  %74 = load i64, i64* %6, align 8
  %75 = icmp ne i64 %74, 0
  %76 = load i32, i32* @x.129
  %77 = load i32, i32* @y.130
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %75, label %84, label %91

; <label>:84:                                     ; preds = %originalBBpart28
  %85 = load i8*, i8** %3, align 8
  %86 = load i32, i32* %7, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  store i64 %90, i64* %6, align 8
  br label %91

; <label>:91:                                     ; preds = %84, %originalBBpart28
  %92 = load i64, i64* %6, align 8
  %93 = load i32, i32* %8, align 4
  %94 = urem i32 %93, 64
  %95 = zext i32 %94 to i64
  %96 = shl i64 %92, %95
  %97 = load i32, i32* %8, align 4
  %98 = udiv i32 %97, 64
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 %99
  %101 = load i64, i64* %100, align 8
  %102 = or i64 %101, %96
  store i64 %102, i64* %100, align 8
  br label %103

; <label>:103:                                    ; preds = %91
  %104 = load i32, i32* %7, align 4
  %105 = add i32 %104, 1
  store i32 %105, i32* %7, align 4
  br label %34

; <label>:106:                                    ; preds = %34
  %107 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 0
  %108 = load i64, i64* %107, align 16
  %109 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 1
  %110 = load i64, i64* %109, align 8
  %111 = load i32, i32* %4, align 4
  %112 = call %struct.rtx_def* @immed_double_const(i64 %108, i64 %110, i32 %111)
  ret %struct.rtx_def* %112

originalBBalteredBB:                              ; preds = %originalBB, %14
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 330, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.c_readstr, i32 0, i32 0)) #6
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 344, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.c_readstr, i32 0, i32 0)) #6
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  %113 = load i64, i64* %6, align 8
  %114 = icmp ne i64 %113, 0
  br label %originalBB6
}

declare %struct.rtx_def* @immed_double_const(i64, i64, i32) #1

declare void @set_mem_attributes(%struct.rtx_def*, %union.tree_node*, i32) #1

declare %union.tree_node* @tree_cons(%union.tree_node*, %union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind readonly
declare i64 @strspn(i8*, i8*) #3

; Function Attrs: nounwind readonly
declare i64 @strcspn(i8*, i8*) #3

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #3

declare %union.tree_node* @build_int_2_wide(i64, i64) #1

; Function Attrs: nounwind readonly
declare i8* @strpbrk(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @target_char_cast(%union.tree_node*, i8*) #0 {
  %3 = load i32, i32* @x.131
  %4 = load i32, i32* @y.132
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca i32, align 4
  %12 = alloca %union.tree_node*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  store %union.tree_node* %0, %union.tree_node** %12, align 8
  store i8* %1, i8** %13, align 8
  %16 = load %union.tree_node*, %union.tree_node** %12, align 8
  %17 = call i32 @host_integerp(%union.tree_node* %16, i32 1)
  %18 = icmp ne i32 %17, 0
  %19 = load i32, i32* @x.131
  %20 = load i32, i32* @y.132
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %44, label %27

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.131
  %29 = load i32, i32* @y.132
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %27
  store i32 1, i32* %11, align 4
  %36 = load i32, i32* @x.131
  %37 = load i32, i32* @y.132
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %76

; <label>:44:                                     ; preds = %originalBBpart2
  %45 = load %union.tree_node*, %union.tree_node** %12, align 8
  %46 = call i64 @tree_low_cst(%union.tree_node* %45, i32 1)
  store i64 %46, i64* %14, align 8
  %47 = load i64, i64* %14, align 8
  %48 = and i64 %47, 255
  store i64 %48, i64* %14, align 8
  %49 = load i64, i64* %14, align 8
  store i64 %49, i64* %15, align 8
  %50 = load i64, i64* %15, align 8
  %51 = and i64 %50, 255
  store i64 %51, i64* %15, align 8
  %52 = load i64, i64* %14, align 8
  %53 = load i64, i64* %15, align 8
  %54 = icmp ne i64 %52, %53
  br i1 %54, label %55, label %56

; <label>:55:                                     ; preds = %44
  store i32 1, i32* %11, align 4
  br label %76

; <label>:56:                                     ; preds = %44
  %57 = load i32, i32* @x.131
  %58 = load i32, i32* @y.132
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %56
  %65 = load i64, i64* %15, align 8
  %66 = trunc i64 %65 to i8
  %67 = load i8*, i8** %13, align 8
  store i8 %66, i8* %67, align 1
  store i32 0, i32* %11, align 4
  %68 = load i32, i32* @x.131
  %69 = load i32, i32* @y.132
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %76

; <label>:76:                                     ; preds = %originalBBpart28, %55, %originalBBpart24
  %77 = load i32, i32* %11, align 4
  ret i32 %77

originalBBalteredBB:                              ; preds = %originalBB, %2
  %78 = alloca i32, align 4
  %79 = alloca %union.tree_node*, align 8
  %80 = alloca i8*, align 8
  %81 = alloca i64, align 8
  %82 = alloca i64, align 8
  store %union.tree_node* %0, %union.tree_node** %79, align 8
  store i8* %1, i8** %80, align 8
  %83 = load %union.tree_node*, %union.tree_node** %79, align 8
  %84 = call i32 @host_integerp(%union.tree_node* %83, i32 1)
  %85 = icmp ne i32 %84, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  store i32 1, i32* %11, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %86 = load i64, i64* %15, align 8
  %87 = trunc i64 %86 to i8
  %88 = load i8*, i8** %13, align 8
  store i8 %87, i8* %88, align 1
  store i32 0, i32* %11, align 4
  br label %originalBB6
}

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #3

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @builtin_memcpy_read_str(i8*, i64, i32) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load i8*, i8** %4, align 8
  store i8* %8, i8** %7, align 8
  %9 = load i64, i64* %5, align 8
  %10 = icmp slt i64 %9, 0
  br i1 %10, label %23, label %11

; <label>:11:                                     ; preds = %3
  %12 = load i64, i64* %5, align 8
  %13 = load i32, i32* %6, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = add i64 %12, %17
  %19 = load i8*, i8** %7, align 8
  %20 = call i64 @strlen(i8* %19) #7
  %21 = add i64 %20, 1
  %22 = icmp ugt i64 %18, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %11, %3
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i32 1912, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.builtin_memcpy_read_str, i32 0, i32 0)) #6
  unreachable

; <label>:24:                                     ; preds = %11
  %25 = load i8*, i8** %7, align 8
  %26 = load i64, i64* %5, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = load i32, i32* %6, align 4
  %29 = call %struct.rtx_def* @c_readstr(i8* %27, i32 %28)
  ret %struct.rtx_def* %29
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @builtin_memset_read_str(i8*, i64, i32) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load i8*, i8** %4, align 8
  store i8* %9, i8** %7, align 8
  %10 = load i32, i32* %6, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i64
  %15 = alloca i8, i64 %14, align 16
  store i8* %15, i8** %8, align 8
  %16 = load i8*, i8** %8, align 8
  %17 = load i8*, i8** %7, align 8
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = trunc i32 %19 to i8
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  call void @llvm.memset.p0i8.i64(i8* %16, i8 %20, i64 %25, i32 1, i1 false)
  %26 = load i8*, i8** %8, align 8
  %27 = load i32, i32* %6, align 4
  %28 = call %struct.rtx_def* @c_readstr(i8* %26, i32 %27)
  ret %struct.rtx_def* %28
}

declare %struct.rtx_def* @clear_storage(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

declare %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #3

declare %union.tree_node* @build_qualified_type(%union.tree_node*, i32) #1

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #3

declare %struct.rtx_def* @gen_cmpstrsi(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_library_call_value(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) #1

declare %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_jump(%struct.rtx_def*) #1

declare void @ix86_va_start(i32, %union.tree_node*, %struct.rtx_def*) #1

declare i64 @get_alias_set(%union.tree_node*) #1

declare %struct.rtx_def* @emit_note(i8*, i32) #1

declare %struct.rtx_def* @gen_prefetch(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @protect_from_queue(%struct.rtx_def*, i32) #1

declare i32 @side_effects_p(%struct.rtx_def*) #1

declare %union.tree_node* @size_diffop(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn }
attributes #7 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
