; ModuleID = '/home/ml4code/host/experimento_malware/spec_cpu_2006_range/bytecodes_llvm_4/dealII_fe_nedelec.ll'
source_filename = "fe_nedelec.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.FE_Nedelec = type { %class.FiniteElement.base, i32 }
%class.FiniteElement.base = type { %class.FiniteElementBase.base }
%class.FiniteElementBase.base = type <{ %class.Subscriptor, %class.FiniteElementData, [4 x i8], [8 x %class.FullMatrix], [8 x %class.FullMatrix], %class.FullMatrix, %"class.std::vector", %"class.std::vector", %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector", %"class.std::vector.7", %"class.std::vector.11", %"class.std::vector.16", %"class.std::vector.23", %"class.std::vector.28", i8 }>
%class.Subscriptor = type { i32 (...)**, i32, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.FiniteElementData = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%class.FullMatrix = type { %class.Table.base, [4 x i8] }
%class.Table.base = type { %class.TableBase.base }
%class.TableBase.base = type <{ %class.Subscriptor, double*, i32, %class.TableIndices }>
%class.TableIndices = type { %class.TableIndicesBase }
%class.TableIndicesBase = type { [2 x i32] }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl_data" = type { %"struct.std::pair.5"*, %"struct.std::pair.5"*, %"struct.std::pair.5"* }
%"struct.std::pair.5" = type { %"struct.std::pair", i32 }
%"struct.std::pair" = type { i32, i32 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data" = type { %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"* }
%"class.std::vector.7" = type { %"struct.std::_Bvector_base" }
%"struct.std::_Bvector_base" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" = type { %"struct.std::_Bit_iterator", %"struct.std::_Bit_iterator", i64* }
%"struct.std::_Bit_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::_Bit_iterator_base.base" = type <{ i64*, i32 }>
%"class.std::vector.11" = type { %"struct.std::_Vector_base.12" }
%"struct.std::_Vector_base.12" = type { %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl" }
%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data" = type { %class.Point*, %class.Point*, %class.Point* }
%class.Point = type { %class.Tensor }
%class.Tensor = type { [3 x double] }
%"class.std::vector.16" = type { %"struct.std::_Vector_base.17" }
%"struct.std::_Vector_base.17" = type { %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl" }
%"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data" = type { %class.Point.21*, %class.Point.21*, %class.Point.21* }
%class.Point.21 = type { %class.Tensor.22 }
%class.Tensor.22 = type { [2 x double] }
%"class.std::vector.23" = type { %"struct.std::_Vector_base.24" }
%"struct.std::_Vector_base.24" = type { %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data" = type { %"class.std::vector.7"*, %"class.std::vector.7"*, %"class.std::vector.7"* }
%"class.std::vector.28" = type { %"struct.std::_Vector_base.29" }
%"struct.std::_Vector_base.29" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" = type { i32*, i32*, i32* }
%class.Tensor.33 = type { [3 x %class.Tensor] }
%"class.std::allocator.34" = type { i8 }
%"class.std::allocator.25" = type { i8 }
%class.FiniteElement = type { %class.FiniteElementBase.base, [7 x i8] }
%class.FiniteElementBase = type <{ %class.Subscriptor, %class.FiniteElementData, [4 x i8], [8 x %class.FullMatrix], [8 x %class.FullMatrix], %class.FullMatrix, %"class.std::vector", %"class.std::vector", %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector", %"class.std::vector.7", %"class.std::vector.11", %"class.std::vector.16", %"class.std::vector.23", %"class.std::vector.28", i8, [7 x i8] }>
%"class.std::allocator.30" = type { i8 }
%"class.__gnu_cxx::new_allocator.35" = type { i8 }
%"class.__gnu_cxx::new_allocator.26" = type { i8 }
%class.TableBase = type <{ %class.Subscriptor, double*, i32, %class.TableIndices, [4 x i8] }>
%class.Table = type { %class.TableBase.base, [4 x i8] }
%"class.std::allocator" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::__cxx11::basic_ostringstream" = type { %"class.std::basic_ostream.base", %"class.std::__cxx11::basic_stringbuf", %"class.std::basic_ios" }
%"class.std::basic_ostream.base" = type { i32 (...)** }
%"class.std::__cxx11::basic_stringbuf" = type { %"class.std::basic_streambuf", i32, %"class.std::__cxx11::basic_string" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.Mapping<3>::InternalDataBase" = type <{ %class.Subscriptor, i32, i32, i32, i8, [3 x i8] }>
%class.Mapping = type { %class.Subscriptor }
%class.Quadrature = type { %class.Subscriptor, i32, %"class.std::vector.11", %"class.std::vector.40" }
%"class.std::vector.40" = type { %"struct.std::_Vector_base.41" }
%"struct.std::_Vector_base.41" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" = type { double*, double*, double* }
%"class.FE_Nedelec<3>::InternalData" = type { %"class.FiniteElementBase<3>::InternalDataBase", %class.Table.50, %class.Table.54 }
%"class.FiniteElementBase<3>::InternalDataBase" = type { %"class.Mapping<3>::InternalDataBase.base", %"class.std::vector.45" }
%"class.Mapping<3>::InternalDataBase.base" = type <{ %class.Subscriptor, i32, i32, i32, i8 }>
%"class.std::vector.45" = type { %"struct.std::_Vector_base.46" }
%"struct.std::_Vector_base.46" = type { %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl" }
%"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data" = type { %class.FEValues**, %class.FEValues**, %class.FEValues** }
%class.FEValues = type { %class.FEValuesBase, %class.Quadrature }
%class.FEValuesBase = type { %class.FEValuesData.base, i32, i32, %class.TriaIterator, %class.SmartPointer.127, %class.SmartPointer.118, %class.SmartPointer.128, %class.SmartPointer.128 }
%class.FEValuesData.base = type <{ %class.Table, %class.Table.50, %class.Table.54, %"class.std::vector.40", %"class.std::vector.11", %"class.std::vector.11", %"class.std::vector.59", %"class.std::vector.28", i32 }>
%"class.std::vector.59" = type { %"struct.std::_Vector_base.60" }
%"struct.std::_Vector_base.60" = type { %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data" = type { %class.Tensor*, %class.Tensor*, %class.Tensor* }
%class.TriaIterator = type { %class.TriaRawIterator }
%class.TriaRawIterator = type { %class.DoFCellAccessor }
%class.DoFCellAccessor = type { %class.DoFObjectAccessor }
%class.DoFObjectAccessor = type { %class.DoFAccessor, %class.CellAccessor }
%class.DoFAccessor = type { %class.DoFHandler* }
%class.DoFHandler = type { %class.Subscriptor, %class.SmartPointer, %class.SmartPointer.118, %"class.std::vector.119", i32, %"class.std::vector.28" }
%class.SmartPointer = type { %class.Triangulation* }
%class.Triangulation = type { %class.Subscriptor, %"class.std::vector.72", %"class.std::vector.11", %"class.std::vector.7", [255 x %class.Boundary*], i32, %struct.TriaNumberCache }
%"class.std::vector.72" = type { %"struct.std::_Vector_base.73" }
%"struct.std::_Vector_base.73" = type { %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl" }
%"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data" = type { %class.TriangulationLevel**, %class.TriangulationLevel**, %class.TriangulationLevel** }
%class.TriangulationLevel = type { %class.TriangulationLevel.77, %"struct.TriangulationLevel<3>::HexesData" }
%class.TriangulationLevel.77 = type { %class.TriangulationLevel.78, %"struct.TriangulationLevel<2>::QuadsData" }
%class.TriangulationLevel.78 = type { %class.TriangulationLevel.79, %"struct.TriangulationLevel<1>::LinesData" }
%class.TriangulationLevel.79 = type { %"class.std::vector.7", %"class.std::vector.7", %"class.std::vector.80", %"class.std::vector.28" }
%"class.std::vector.80" = type { %"struct.std::_Vector_base.81" }
%"struct.std::_Vector_base.81" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data" = type { %"struct.std::pair.85"*, %"struct.std::pair.85"*, %"struct.std::pair.85"* }
%"struct.std::pair.85" = type opaque
%"struct.TriangulationLevel<1>::LinesData" = type { %"class.std::vector.86", %"class.std::vector.91", %"class.std::vector.7", %"class.std::vector.7", %"class.std::vector.96", %"class.std::vector.101" }
%"class.std::vector.86" = type { %"struct.std::_Vector_base.87" }
%"struct.std::_Vector_base.87" = type { %"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl" }
%"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl" = type { %"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl_data" }
%"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl_data" = type { %class.Line*, %class.Line*, %class.Line* }
%class.Line = type { [2 x i32] }
%"class.std::vector.91" = type { %"struct.std::_Vector_base.92" }
%"struct.std::_Vector_base.92" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::vector.96" = type { %"struct.std::_Vector_base.97" }
%"struct.std::_Vector_base.97" = type { %"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl_data" = type { i8*, i8*, i8* }
%"class.std::vector.101" = type { %"struct.std::_Vector_base.102" }
%"struct.std::_Vector_base.102" = type { %"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl" }
%"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl" = type { %"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl_data" = type { i8**, i8**, i8** }
%"struct.TriangulationLevel<2>::QuadsData" = type { %"class.std::vector.106", %"class.std::vector.91", %"class.std::vector.7", %"class.std::vector.7", %"class.std::vector.96", %"class.std::vector.101" }
%"class.std::vector.106" = type { %"struct.std::_Vector_base.107" }
%"struct.std::_Vector_base.107" = type { %"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl" }
%"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl" = type { %"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl_data" }
%"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl_data" = type { %class.Quad*, %class.Quad*, %class.Quad* }
%class.Quad = type { [4 x i32] }
%"struct.TriangulationLevel<3>::HexesData" = type { %"class.std::vector.111", %"class.std::vector.91", %"class.std::vector.7", %"class.std::vector.7", %"class.std::vector.96", %"class.std::vector.101", %"class.std::vector.7" }
%"class.std::vector.111" = type { %"struct.std::_Vector_base.112" }
%"struct.std::_Vector_base.112" = type { %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl" }
%"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl" = type { %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data" }
%"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data" = type { %class.Hexahedron*, %class.Hexahedron*, %class.Hexahedron* }
%class.Hexahedron = type { [6 x i32] }
%class.Boundary = type opaque
%struct.TriaNumberCache = type { %struct.TriaNumberCache.116, i32, %"class.std::vector.28", i32, %"class.std::vector.28" }
%struct.TriaNumberCache.116 = type { %struct.TriaNumberCache.117, i32, %"class.std::vector.28", i32, %"class.std::vector.28" }
%struct.TriaNumberCache.117 = type { i32, %"class.std::vector.28", i32, %"class.std::vector.28" }
%"class.std::vector.119" = type { %"struct.std::_Vector_base.120" }
%"struct.std::_Vector_base.120" = type { %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl" }
%"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl_data" = type { %class.DoFLevel**, %class.DoFLevel**, %class.DoFLevel** }
%class.DoFLevel = type { %class.DoFLevel.124, %"class.std::vector.28" }
%class.DoFLevel.124 = type { %class.DoFLevel.125, %"class.std::vector.28" }
%class.DoFLevel.125 = type { %"class.std::vector.28" }
%class.CellAccessor = type { %class.TriaObjectAccessor }
%class.TriaObjectAccessor = type { %class.TriaAccessor }
%class.TriaAccessor = type { i32, i32, %class.Triangulation* }
%class.SmartPointer.127 = type { %class.Mapping* }
%class.SmartPointer.118 = type { %class.FiniteElement* }
%class.SmartPointer.128 = type { %"class.Mapping<3>::InternalDataBase"* }
%class.Table.50 = type { %class.TableBase.base.52, [4 x i8] }
%class.TableBase.base.52 = type <{ %class.Subscriptor, %class.Tensor*, i32, %class.TableIndices }>
%class.Table.54 = type { %class.TableBase.base.56, [4 x i8] }
%class.TableBase.base.56 = type <{ %class.Subscriptor, %class.Tensor.33*, i32, %class.TableIndices }>
%"class.internal::TableBaseAccessors::Accessor" = type { %class.TableBase.51*, %class.Tensor* }
%class.TableBase.51 = type <{ %class.Subscriptor, %class.Tensor*, i32, %class.TableIndices, [4 x i8] }>
%"class.internal::TableBaseAccessors::Accessor.58" = type { %class.TableBase.55*, %class.Tensor.33* }
%class.TableBase.55 = type <{ %class.Subscriptor, %class.Tensor.33*, i32, %class.TableIndices, [4 x i8] }>
%class.FEValuesData = type <{ %class.Table, %class.Table.50, %class.Table.54, %"class.std::vector.40", %"class.std::vector.11", %"class.std::vector.11", %"class.std::vector.59", %"class.std::vector.28", i32, [4 x i8] }>
%"class.std::allocator.61" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %class.Tensor* }
%"class.internal::TableBaseAccessors::Accessor.64" = type { %class.TableBase*, double* }
%"class.std::vector.65" = type { %"struct.std::_Vector_base.66" }
%"struct.std::_Vector_base.66" = type { %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data" = type { %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33* }
%"class.std::allocator.67" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.70" = type { %class.Tensor.33* }
%"class.QProjector<3>::DataSetDescriptor" = type { i32 }
%"class.__gnu_cxx::new_allocator.62" = type { i8 }
%"class.__gnu_cxx::new_allocator.68" = type { i8 }
%class.Quadrature.126 = type { %class.Subscriptor, i32, %"class.std::vector.16", %"class.std::vector.40" }
%"struct.std::_Bit_reference" = type { i64*, i64 }
%"class.__gnu_cxx::new_allocator.31" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.129" = type { %class.Point* }
%"class.__gnu_cxx::__normal_iterator.130" = type { %class.Point.21* }
%"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension" = type { %class.ExceptionBase }
%class.ExceptionBase = type { %"class.std::exception", i8*, i32, i8*, i8*, i8* }
%"class.std::exception" = type { i32 (...)** }
%"class.std::allocator.47" = type { i8 }
%"class.__gnu_cxx::new_allocator.48" = type { i8 }
%"class.std::allocator.8" = type { i8 }
%"struct.std::_Bit_iterator_base" = type <{ i64*, i32, [4 x i8] }>
%"class.__gnu_cxx::new_allocator.9" = type { i8 }
%"struct.std::iterator" = type { i8 }
%"struct.std::_Bit_const_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::allocator.13" = type { i8 }
%"class.__gnu_cxx::new_allocator.14" = type { i8 }
%"class.std::allocator.18" = type { i8 }
%"class.__gnu_cxx::new_allocator.19" = type { i8 }

$_ZNK5PointILi3EEclEj = comdat any

$_ZN6TensorILi1ELi3EEC2ERA3_Kd = comdat any

$_ZN6TensorILi1ELi3EEC2Eb = comdat any

$_ZN6TensorILi2ELi3EEC2ERA3_A3_Kd = comdat any

$_ZN6TensorILi2ELi3EEC2Ev = comdat any

$_ZN10FE_NedelecILi3EEC5Ej = comdat any

$_ZN10FE_NedelecILi3EE14get_dpo_vectorEj = comdat any

$_ZNSaIbEC2Ev = comdat any

$_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_ = comdat any

$_ZNSaISt6vectorIbSaIbEEEC2Ev = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSaISt6vectorIbSaIbEEED2Ev = comdat any

$_ZNSt6vectorIbSaIbEED2Ev = comdat any

$_ZNSaIbED2Ev = comdat any

$_ZNSt6vectorIjSaIjEED2Ev = comdat any

$_ZN10FE_NedelecILi3EE22initialize_constraintsEv = comdat any

$_ZN10FE_NedelecILi3EE20initialize_embeddingEv = comdat any

$_ZN10FE_NedelecILi3EE22initialize_restrictionEv = comdat any

$_ZN10FE_NedelecILi3EE30initialize_unit_support_pointsEv = comdat any

$_ZN10FE_NedelecILi3EE35initialize_unit_face_support_pointsEv = comdat any

$_ZNSt6vectorISt4pairIjjESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorISt4pairIjjESaIS1_EE4swapERS3_ = comdat any

$_ZNSt6vectorISt4pairIjjESaIS1_EED2Ev = comdat any

$_ZNK10FE_NedelecILi3EE8get_nameB5cxx11Ev = comdat any

$_ZNK10FE_NedelecILi3EE10get_degreeEv = comdat any

$_ZNK10FE_NedelecILi3EE15n_base_elementsEv = comdat any

$_ZNK10FE_NedelecILi3EE12base_elementEj = comdat any

$_ZNK10FE_NedelecILi3EE20element_multiplicityEj = comdat any

$_ZNK10FE_NedelecILi3EE19has_support_on_faceEjj = comdat any

$_ZNK10FE_NedelecILi3EE18memory_consumptionEv = comdat any

$_ZNK10FE_NedelecILi3EE5cloneEv = comdat any

$_ZNK10FE_NedelecILi3EE8get_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi3EE = comdat any

$_ZN10FE_NedelecILi3EE12InternalDataC2Ev = comdat any

$_Zor11UpdateFlagsS_ = comdat any

$_Zan11UpdateFlagsS_ = comdat any

$_ZN5TableILi2E6TensorILi1ELi3EEE6reinitEjj = comdat any

$_ZN5TableILi2E6TensorILi2ELi3EEE6reinitEjj = comdat any

$_ZN5TableILi2E6TensorILi1ELi3EEEixEj = comdat any

$_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi1ELi3EELb0ELj1EEixEj = comdat any

$_ZN6TensorILi1ELi3EEixEj = comdat any

$_ZN5TableILi2E6TensorILi2ELi3EEEixEj = comdat any

$_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi2ELi3EELb0ELj1EEixEj = comdat any

$_ZN6TensorILi2ELi3EEixEj = comdat any

$_ZN6TensorILi1ELi3EEaSERKS0_ = comdat any

$_ZNK10FE_NedelecILi3EE14fill_fe_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERNS2_16InternalDataBaseESG_R12FEValuesDataILi3EE = comdat any

$_ZNK7MappingILi3EE16InternalDataBase20current_update_flagsEv = comdat any

$_ZNSaI6TensorILi1ELi3EEEC2Ev = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSaI6TensorILi1ELi3EEED2Ev = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE5beginEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv = comdat any

$_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi1ELi3EELb0ELj1EE5beginEv = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEixEm = comdat any

$_ZN5TableILi2EdEixEj = comdat any

$_ZNK8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEixEj = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev = comdat any

$_ZNSaI6TensorILi2ELi3EEEC2Ev = comdat any

$_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSaI6TensorILi2ELi3EEED2Ev = comdat any

$_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE4sizeEv = comdat any

$_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi2ELi3EELb0ELj1EE5beginEv = comdat any

$_Z9transposeRK6TensorILi2ELi3EE = comdat any

$_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm = comdat any

$_ZN6TensorILi2ELi3EEaSERKS0_ = comdat any

$_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev = comdat any

$_ZNK10FE_NedelecILi3EE19fill_fe_face_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRK10QuadratureILi2EERNS2_16InternalDataBaseESG_R12FEValuesDataILi3EE = comdat any

$_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv = comdat any

$_ZNK18TriaObjectAccessorILi3ELi3EE16face_orientationEj = comdat any

$_ZNK10FE_NedelecILi3EE22fill_fe_subface_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjjRK10QuadratureILi2EERNS2_16InternalDataBaseESG_R12FEValuesDataILi3EE = comdat any

$_ZNSaIjEC2Ev = comdat any

$_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_ = comdat any

$_ZNSaIjED2Ev = comdat any

$_ZNSt6vectorIjSaIjEEixEm = comdat any

$_ZN9TableBaseILi2EdE6reinitERK12TableIndicesILi2EE = comdat any

$_ZN10FullMatrixIdE4fillIdEEvPKT_ = comdat any

$_ZN5TableILi2EdE6reinitEjj = comdat any

$_ZN5TableILi2EdEclEjj = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE6resizeEmS1_ = comdat any

$_ZN5PointILi3EEC2Ev = comdat any

$_ZN12GeometryInfoILi3EE25vertices_adjacent_to_lineEjj = comdat any

$_ZN12GeometryInfoILi3EE16unit_cell_vertexEj = comdat any

$_ZNK5PointILi3EEplERK6TensorILi1ELi3EE = comdat any

$_ZNK5PointILi3EEdvEd = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EEixEm = comdat any

$_ZN5PointILi3EEaSERKS0_ = comdat any

$_ZNSt6vectorI5PointILi2EESaIS1_EE6resizeEmS1_ = comdat any

$_ZN5PointILi2EEC2Ev = comdat any

$_ZN12GeometryInfoILi2EE25vertices_adjacent_to_lineEjj = comdat any

$_ZN12GeometryInfoILi2EE16unit_cell_vertexEj = comdat any

$_ZNK5PointILi2EEplERK6TensorILi1ELi2EE = comdat any

$_ZNK5PointILi2EEdvEd = comdat any

$_ZNSt6vectorI5PointILi2EESaIS1_EEixEm = comdat any

$_ZN5PointILi2EEaSERKS0_ = comdat any

$_ZNK10FE_NedelecILi3EE11update_onceE11UpdateFlags = comdat any

$_ZNK10FE_NedelecILi3EE11update_eachE11UpdateFlags = comdat any

$_ZoRR11UpdateFlagsS_ = comdat any

$_ZN10FE_NedelecILi3EED2Ev = comdat any

$_ZN10FE_NedelecILi3EED0Ev = comdat any

$_ZN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionD2Ev = comdat any

$_ZN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionD0Ev = comdat any

$_ZN17FiniteElementBaseILi3EE16InternalDataBaseC2Ev = comdat any

$_ZN5TableILi2E6TensorILi1ELi3EEEC2Ev = comdat any

$_ZN5TableILi2E6TensorILi2ELi3EEEC2Ev = comdat any

$_ZN5TableILi2E6TensorILi1ELi3EEED2Ev = comdat any

$_ZN10FE_NedelecILi3EE12InternalDataD2Ev = comdat any

$_ZN10FE_NedelecILi3EE12InternalDataD0Ev = comdat any

$_ZN7MappingILi3EE16InternalDataBase16clear_first_cellEv = comdat any

$_ZNSt6vectorIP8FEValuesILi3EESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIP8FEValuesILi3EESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIP8FEValuesILi3EESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaIP8FEValuesILi3EEEC2Ev = comdat any

$_ZNSt12_Vector_baseIP8FEValuesILi3EESaIS2_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSaIP8FEValuesILi3EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIP8FEValuesILi3EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIP8FEValuesILi3EEED2Ev = comdat any

$_ZN9TableBaseILi2E6TensorILi1ELi3EEEC2Ev = comdat any

$_ZN5TableILi2E6TensorILi1ELi3EEED0Ev = comdat any

$_ZN12TableIndicesILi2EEC2Ev = comdat any

$_ZN9TableBaseILi2E6TensorILi1ELi3EEED2Ev = comdat any

$_ZN9TableBaseILi2E6TensorILi1ELi3EEED0Ev = comdat any

$_ZN9TableBaseILi2E6TensorILi2ELi3EEEC2Ev = comdat any

$_ZN5TableILi2E6TensorILi2ELi3EEED2Ev = comdat any

$_ZN5TableILi2E6TensorILi2ELi3EEED0Ev = comdat any

$_ZN9TableBaseILi2E6TensorILi2ELi3EEED2Ev = comdat any

$_ZN9TableBaseILi2E6TensorILi2ELi3EEED0Ev = comdat any

$_ZNK6TensorILi2ELi3EEixEj = comdat any

$_ZNK6TensorILi1ELi3EEixEj = comdat any

$_ZN5PointILi3EEC2Eddd = comdat any

$_ZN5PointILi3EEC2ERKS0_ = comdat any

$_ZN5PointILi2EEC2Edd = comdat any

$_ZN5PointILi2EEC2ERKS0_ = comdat any

$_ZN6TensorILi1ELi2EEC2Eb = comdat any

$_ZN6TensorILi1ELi2EEC2ERKS0_ = comdat any

$_ZN6TensorILi1ELi2EEaSERKS0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIjEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIjED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIbEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIbED2Ev = comdat any

$_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIjSaIjEED2Ev = comdat any

$_ZSt8_DestroyIPjEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm = comdat any

$_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm = comdat any

$_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm = comdat any

$_ZNSt13_Bvector_baseISaIbEEC2ERKS0_ = comdat any

$_ZNSt6vectorIbSaIbEE13_M_initializeEm = comdat any

$_ZNSt6vectorIbSaIbEE19_M_initialize_valueEb = comdat any

$_ZNSt13_Bvector_baseISaIbEED2Ev = comdat any

$_ZNSaImEC2IbEERKSaIT_E = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2ERKSaImE = comdat any

$_ZNSaImED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorImEC2Ev = comdat any

$_ZNSaImEC2ERKS_ = comdat any

$_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_ = comdat any

$_ZNSt13_Bit_iteratorC2Ev = comdat any

$_ZNSt18_Bit_iterator_baseC2EPmj = comdat any

$_ZN9__gnu_cxx13new_allocatorImED2Ev = comdat any

$_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm = comdat any

$_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm = comdat any

$_ZSt11__addressofImEPT_RS0_ = comdat any

$_ZNSt13_Bit_iteratorC2EPmj = comdat any

$_ZNKSt13_Bit_iteratorplEl = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaImEmE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv = comdat any

$_ZNSt13_Bit_iteratorpLEl = comdat any

$_ZNSt18_Bit_iterator_base7_M_incrEl = comdat any

$_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaImEmE10deallocateERS1_Pmm = comdat any

$_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv = comdat any

$_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEED2Ev = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EE17_S_check_init_lenEmRKS2_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNSaISt6vectorIbSaIbEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8max_sizeERKS4_ = comdat any

$_ZSt3minImERKT_S2_S2_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8allocateEmPKv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIbSaIbEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIbSaIbEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIbSaIbEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIbSaIbEES2_EvPT_RKT0_ = comdat any

$_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt6vectorIbSaIbEEEvT_S4_ = comdat any

$_ZNSt6vectorIbSaIbEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaImEmE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv = comdat any

$_ZNSaIbEC2ImEERKSaIT_E = comdat any

$_ZNKSt6vectorIbSaIbEE4sizeEv = comdat any

$_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator = comdat any

$_ZNKSt6vectorIbSaIbEE5beginEv = comdat any

$_ZNKSt6vectorIbSaIbEE3endEv = comdat any

$_ZStmiRKSt18_Bit_iterator_baseS1_ = comdat any

$_ZSt4copyIPmS0_ET0_T_S2_S1_ = comdat any

$_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_ = comdat any

$_ZNSt19_Bit_const_iteratorC2EPmj = comdat any

$_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPmET_S1_ = comdat any

$_ZSt12__niter_wrapIPmET_RKS1_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPmET_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_ = comdat any

$_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_ = comdat any

$_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_ = comdat any

$_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_ = comdat any

$_ZSt12__niter_baseISt13_Bit_iteratorET_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_ = comdat any

$_ZNKSt19_Bit_const_iteratordeEv = comdat any

$_ZNKSt13_Bit_iteratordeEv = comdat any

$_ZNSt14_Bit_referenceaSEb = comdat any

$_ZNSt19_Bit_const_iteratorppEv = comdat any

$_ZNSt13_Bit_iteratorppEv = comdat any

$_ZNSt14_Bit_referenceC2EPmm = comdat any

$_ZNKSt14_Bit_referencecvbEv = comdat any

$_ZNSt18_Bit_iterator_base10_M_bump_upEv = comdat any

$_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIbSaIbEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIbSaIbEEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPSt6vectorIbSaIbEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt4pairIjjESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt4pairIjjEEC2Ev = comdat any

$_ZNSaISt4pairIjjEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIjjEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIjjEED2Ev = comdat any

$_ZSt8_DestroyIPSt4pairIjjES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt4pairIjjESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPSt4pairIjjEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIjjEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIjjEES2_E10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIjjEE10deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIjjEES2_E10_S_on_swapERS3_S5_ = comdat any

$_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_ = comdat any

$_ZNSt12__alloc_swapISaISt4pairIjjEELb1EE8_S_do_itERS2_S4_ = comdat any

$_ZN9TableBaseILi2E6TensorILi1ELi3EEE6reinitERK12TableIndicesILi2EE = comdat any

$_ZN12TableIndicesILi2EEC2Ejj = comdat any

$_ZNK9TableBaseILi2E6TensorILi1ELi3EEE10n_elementsEv = comdat any

$_ZN9TableBaseILi2E6TensorILi1ELi3EEE12reset_valuesEv = comdat any

$_ZNK16TableIndicesBaseILi2EEixEj = comdat any

$_ZSt6fill_nIP6TensorILi1ELi3EEjS1_ET_S3_T0_RKT1_ = comdat any

$_ZSt12__niter_wrapIP6TensorILi1ELi3EEET_RKS3_S3_ = comdat any

$_ZSt10__fill_n_aIP6TensorILi1ELi3EEjS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_ = comdat any

$_ZSt12__niter_baseIP6TensorILi1ELi3EEET_S3_ = comdat any

$_ZN9TableBaseILi2E6TensorILi2ELi3EEE6reinitERK12TableIndicesILi2EE = comdat any

$_ZNK9TableBaseILi2E6TensorILi2ELi3EEE10n_elementsEv = comdat any

$_ZN9TableBaseILi2E6TensorILi2ELi3EEE12reset_valuesEv = comdat any

$_ZSt6fill_nIP6TensorILi2ELi3EEjS1_ET_S3_T0_RKT1_ = comdat any

$_ZSt12__niter_wrapIP6TensorILi2ELi3EEET_RKS3_S3_ = comdat any

$_ZSt10__fill_n_aIP6TensorILi2ELi3EEjS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_ = comdat any

$_ZSt12__niter_baseIP6TensorILi2ELi3EEET_S3_ = comdat any

$_ZNK5TableILi2E6TensorILi1ELi3EEE6n_colsEv = comdat any

$_ZN8internal18TableBaseAccessors8AccessorILi2E6TensorILi1ELi3EELb0ELj1EEC2ERK9TableBaseILi2ES3_EPS3_ = comdat any

$_ZNK5TableILi2E6TensorILi2ELi3EEE6n_colsEv = comdat any

$_ZN8internal18TableBaseAccessors8AccessorILi2E6TensorILi2ELi3EELb0ELj1EEC2ERK9TableBaseILi2ES3_EPS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEED2Ev = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE17_S_check_init_lenEmRKS2_ = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EED2Ev = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNSaI6TensorILi1ELi3EEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8max_sizeERKS3_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEEC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8allocateEmPKv = comdat any

$_ZSt24__uninitialized_fill_n_aIP6TensorILi1ELi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIP6TensorILi1ELi3EEmS1_ET_S3_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6TensorILi1ELi3EEmS3_EET_S5_T0_RKT1_ = comdat any

$_ZSt10_ConstructI6TensorILi1ELi3EES1_EvPT_RKT0_ = comdat any

$_ZSt11__addressofI6TensorILi1ELi3EEEPT_RS2_ = comdat any

$_ZSt8_DestroyIP6TensorILi1ELi3EEEvT_S3_ = comdat any

$_ZN6TensorILi1ELi3EEC2ERKS0_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP6TensorILi1ELi3EEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE10deallocateEPS2_m = comdat any

$_ZSt8_DestroyIP6TensorILi1ELi3EES1_EvT_S3_RSaIT0_E = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNK5TableILi2EdE6n_colsEv = comdat any

$_ZN8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEC2ERK9TableBaseILi2EdEPd = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEED2Ev = comdat any

$_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE17_S_check_init_lenEmRKS2_ = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EED2Ev = comdat any

$_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNSaI6TensorILi2ELi3EEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi2ELi3EEES2_E8max_sizeERKS3_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEEC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi2ELi3EEES2_E8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE8allocateEmPKv = comdat any

$_ZSt24__uninitialized_fill_n_aIP6TensorILi2ELi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIP6TensorILi2ELi3EEmS1_ET_S3_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6TensorILi2ELi3EEmS3_EET_S5_T0_RKT1_ = comdat any

$_ZSt10_ConstructI6TensorILi2ELi3EES1_EvPT_RKT0_ = comdat any

$_ZSt11__addressofI6TensorILi2ELi3EEEPT_RS2_ = comdat any

$_ZSt8_DestroyIP6TensorILi2ELi3EEEvT_S3_ = comdat any

$_ZN6TensorILi2ELi3EEC2ERKS0_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP6TensorILi2ELi3EEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi2ELi3EEES2_E10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE10deallocateEPS2_m = comdat any

$_ZSt8_DestroyIP6TensorILi2ELi3EES1_EvT_S3_RSaIT0_E = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEdeEv = comdat any

$_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm = comdat any

$_ZNSt6vectorIbSaIbEEixEm = comdat any

$_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj = comdat any

$_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_ = comdat any

$_ZNSaIjEC2ERKS_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv = comdat any

$_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPjmjET_S1_T0_RKT1_ = comdat any

$_ZSt12__niter_wrapIPjET_RKS1_S1_ = comdat any

$_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPjET_S1_ = comdat any

$_ZNK9TableBaseILi2EdE10n_elementsEv = comdat any

$_ZN9TableBaseILi2EdE12reset_valuesEv = comdat any

$_ZSt6fill_nIPdjdET_S1_T0_RKT1_ = comdat any

$_ZSt12__niter_wrapIPdET_RKS1_S1_ = comdat any

$_ZSt10__fill_n_aIPdjdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPdET_S1_ = comdat any

$_ZN9TableBaseILi2EdE4fillIdEEvPKT_ = comdat any

$_ZSt4copyIPKdPdET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPKdET_S2_ = comdat any

$_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPKdET_S2_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_ = comdat any

$_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_ = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZSt22__uninitialized_move_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt13copy_backwardIP5PointILi3EES2_ET0_T_S4_S3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZSt4fillIP5PointILi3EES1_EvT_S3_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIP5PointILi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorI5PointILi3EESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE5beginEv = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZSt22__uninitialized_copy_aIP5PointILi3EES2_S1_ET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIP5PointILi3EES2_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5PointILi3EES4_EET0_T_S6_S5_ = comdat any

$_ZSt10_ConstructI5PointILi3EES1_EvPT_RKT0_ = comdat any

$_ZSt11__addressofI5PointILi3EEEPT_RS2_ = comdat any

$_ZSt8_DestroyIP5PointILi3EEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP5PointILi3EEEEvT_S5_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EP5PointILi3EES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIP5PointILi3EEET_S3_ = comdat any

$_ZSt12__niter_wrapIP5PointILi3EEET_RKS3_S3_ = comdat any

$_ZSt22__copy_move_backward_aILb0EP5PointILi3EES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIP5PointILi3EEET_S3_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5PointILi3EES5_EET0_T_S7_S6_ = comdat any

$_ZSt8__fill_aIP5PointILi3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_ = comdat any

$_ZSt20uninitialized_fill_nIP5PointILi3EEmS1_ET_S3_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5PointILi3EEmS3_EET_S5_T0_RKT1_ = comdat any

$_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8max_sizeERKS3_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorI5PointILi3EEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE8allocateEmPKv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE10deallocateEPS2_m = comdat any

$_ZN6TensorILi1ELi3EEpLERKS0_ = comdat any

$_ZN5PointILi3EEC2ERK6TensorILi1ELi3EE = comdat any

$_ZN6TensorILi1ELi3EEdVERKd = comdat any

$_ZNKSt6vectorI5PointILi2EESaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorI5PointILi2EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_ = comdat any

$_ZNSt6vectorI5PointILi2EESaIS1_EE3endEv = comdat any

$_ZNSt6vectorI5PointILi2EESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZN9__gnu_cxxmiIP5PointILi2EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZSt22__uninitialized_move_aIP5PointILi2EES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt13copy_backwardIP5PointILi2EES2_ET0_T_S4_S3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZSt4fillIP5PointILi2EES1_EvT_S3_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIP5PointILi2EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorI5PointILi2EESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorI5PointILi2EESaIS1_EE5beginEv = comdat any

$_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi2EES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZSt8_DestroyIP5PointILi2EES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZSt22__uninitialized_copy_aIP5PointILi2EES2_S1_ET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIP5PointILi2EES2_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5PointILi2EES4_EET0_T_S6_S5_ = comdat any

$_ZSt10_ConstructI5PointILi2EES1_EvPT_RKT0_ = comdat any

$_ZSt11__addressofI5PointILi2EEEPT_RS2_ = comdat any

$_ZSt8_DestroyIP5PointILi2EEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP5PointILi2EEEEvT_S5_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EP5PointILi2EES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIP5PointILi2EEET_S3_ = comdat any

$_ZSt12__niter_wrapIP5PointILi2EEET_RKS3_S3_ = comdat any

$_ZSt22__copy_move_backward_aILb0EP5PointILi2EES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIP5PointILi2EEET_S3_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5PointILi2EES5_EET0_T_S7_S6_ = comdat any

$_ZSt8__fill_aIP5PointILi2EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_ = comdat any

$_ZSt20uninitialized_fill_nIP5PointILi2EEmS1_ET_S3_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5PointILi2EEmS3_EET_S5_T0_RKT1_ = comdat any

$_ZNKSt6vectorI5PointILi2EESaIS1_EE8max_sizeEv = comdat any

$_ZNSt6vectorI5PointILi2EESaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi2EEES2_E8max_sizeERKS3_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorI5PointILi2EEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi2EEES2_E8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI5PointILi2EEE8allocateEmPKv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi2EEES2_E10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI5PointILi2EEE10deallocateEPS2_m = comdat any

$_ZN6TensorILi1ELi2EEpLERKS0_ = comdat any

$_ZN5PointILi2EEC2ERK6TensorILi1ELi2EE = comdat any

$_ZN6TensorILi1ELi2EEdVERKd = comdat any

$_ZTV10FE_NedelecILi3EE = comdat any

$_ZTSN7MappingILi3EE16InternalDataBaseE = comdat any

$_ZTIN7MappingILi3EE16InternalDataBaseE = comdat any

$_ZTSN10FE_NedelecILi3EE12InternalDataE = comdat any

$_ZTSN17FiniteElementBaseILi3EE16InternalDataBaseE = comdat any

$_ZTIN17FiniteElementBaseILi3EE16InternalDataBaseE = comdat any

$_ZTIN10FE_NedelecILi3EE12InternalDataE = comdat any

$_ZTS10FE_NedelecILi3EE = comdat any

$_ZTS13FiniteElementILi3EE = comdat any

$_ZTS17FiniteElementBaseILi3EE = comdat any

$_ZTS17FiniteElementDataILi3EE = comdat any

$_ZTI17FiniteElementDataILi3EE = comdat any

$_ZTI17FiniteElementBaseILi3EE = comdat any

$_ZTI13FiniteElementILi3EE = comdat any

$_ZTI10FE_NedelecILi3EE = comdat any

$_ZTVN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionE = comdat any

$_ZTSN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionE = comdat any

$_ZTIN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionE = comdat any

$_ZTVN10FE_NedelecILi3EE12InternalDataE = comdat any

$_ZTVN17FiniteElementBaseILi3EE16InternalDataBaseE = comdat any

$_ZTV5TableILi2E6TensorILi1ELi3EEE = comdat any

$_ZTS5TableILi2E6TensorILi1ELi3EEE = comdat any

$_ZTS9TableBaseILi2E6TensorILi1ELi3EEE = comdat any

$_ZTI9TableBaseILi2E6TensorILi1ELi3EEE = comdat any

$_ZTI5TableILi2E6TensorILi1ELi3EEE = comdat any

$_ZTV9TableBaseILi2E6TensorILi1ELi3EEE = comdat any

$_ZTV5TableILi2E6TensorILi2ELi3EEE = comdat any

$_ZTS5TableILi2E6TensorILi2ELi3EEE = comdat any

$_ZTS9TableBaseILi2E6TensorILi2ELi3EEE = comdat any

$_ZTI9TableBaseILi2E6TensorILi2ELi3EEE = comdat any

$_ZTI5TableILi2E6TensorILi2ELi3EEE = comdat any

$_ZTV9TableBaseILi2E6TensorILi2ELi3EEE = comdat any

$_ZZN12GeometryInfoILi3EE25vertices_adjacent_to_lineEjjE14vertex_indices = comdat any

$_ZZN12GeometryInfoILi2EE25vertices_adjacent_to_lineEjjE14vertex_indices = comdat any

@_ZZNK10FE_NedelecILi3EE25shape_grad_grad_componentEjRK5PointILi3EEjE15unit_grad_grads = internal constant [12 x [3 x [3 x [3 x double]]]] [[3 x [3 x [3 x double]]] [[3 x [3 x double]] [[3 x double] zeroinitializer, [3 x double] [double 0.000000e+00, double 0.000000e+00, double 1.000000e+00], [3 x double] [double 0.000000e+00, double 1.000000e+00, double 0.000000e+00]], [3 x [3 x double]] zeroinitializer, [3 x [3 x double]] zeroinitializer], [3 x [3 x [3 x double]]] [[3 x [3 x double]] zeroinitializer, [3 x [3 x double]] zeroinitializer, [3 x [3 x double]] [[3 x double] [double 0.000000e+00, double -1.000000e+00, double 0.000000e+00], [3 x double] [double -1.000000e+00, double 0.000000e+00, double 0.000000e+00], [3 x double] zeroinitializer]], [3 x [3 x [3 x double]]] [[3 x [3 x double]] [[3 x double] zeroinitializer, [3 x double] [double 0.000000e+00, double 0.000000e+00, double -1.000000e+00], [3 x double] [double 0.000000e+00, double -1.000000e+00, double 0.000000e+00]], [3 x [3 x double]] zeroinitializer, [3 x [3 x double]] zeroinitializer], [3 x [3 x [3 x double]]] [[3 x [3 x double]] zeroinitializer, [3 x [3 x double]] zeroinitializer, [3 x [3 x double]] [[3 x double] [double 0.000000e+00, double 1.000000e+00, double 0.000000e+00], [3 x double] [double 1.000000e+00, double 0.000000e+00, double 0.000000e+00], [3 x double] zeroinitializer]], [3 x [3 x [3 x double]]] [[3 x [3 x double]] [[3 x double] zeroinitializer, [3 x double] [double 0.000000e+00, double 0.000000e+00, double -1.000000e+00], [3 x double] [double 0.000000e+00, double -1.000000e+00, double 0.000000e+00]], [3 x [3 x double]] zeroinitializer, [3 x [3 x double]] zeroinitializer], [3 x [3 x [3 x double]]] [[3 x [3 x double]] zeroinitializer, [3 x [3 x double]] zeroinitializer, [3 x [3 x double]] [[3 x double] [double 0.000000e+00, double 1.000000e+00, double 0.000000e+00], [3 x double] [double 1.000000e+00, double 0.000000e+00, double 0.000000e+00], [3 x double] zeroinitializer]], [3 x [3 x [3 x double]]] [[3 x [3 x double]] [[3 x double] zeroinitializer, [3 x double] [double 0.000000e+00, double 0.000000e+00, double 1.000000e+00], [3 x double] [double 0.000000e+00, double 1.000000e+00, double 0.000000e+00]], [3 x [3 x double]] zeroinitializer, [3 x [3 x double]] zeroinitializer], [3 x [3 x [3 x double]]] [[3 x [3 x double]] zeroinitializer, [3 x [3 x double]] zeroinitializer, [3 x [3 x double]] [[3 x double] [double 0.000000e+00, double -1.000000e+00, double 0.000000e+00], [3 x double] [double -1.000000e+00, double 0.000000e+00, double 0.000000e+00], [3 x double] zeroinitializer]], [3 x [3 x [3 x double]]] [[3 x [3 x double]] zeroinitializer, [3 x [3 x double]] [[3 x double] [double 0.000000e+00, double 0.000000e+00, double 1.000000e+00], [3 x double] zeroinitializer, [3 x double] [double 1.000000e+00, double 0.000000e+00, double 0.000000e+00]], [3 x [3 x double]] zeroinitializer], [3 x [3 x [3 x double]]] [[3 x [3 x double]] zeroinitializer, [3 x [3 x double]] [[3 x double] [double 0.000000e+00, double 0.000000e+00, double -1.000000e+00], [3 x double] zeroinitializer, [3 x double] [double -1.000000e+00, double 0.000000e+00, double 0.000000e+00]], [3 x [3 x double]] zeroinitializer], [3 x [3 x [3 x double]]] [[3 x [3 x double]] zeroinitializer, [3 x [3 x double]] [[3 x double] [double 0.000000e+00, double 0.000000e+00, double 1.000000e+00], [3 x double] zeroinitializer, [3 x double] [double 1.000000e+00, double 0.000000e+00, double 0.000000e+00]], [3 x [3 x double]] zeroinitializer], [3 x [3 x [3 x double]]] [[3 x [3 x double]] zeroinitializer, [3 x [3 x double]] [[3 x double] [double 0.000000e+00, double 0.000000e+00, double -1.000000e+00], [3 x double] zeroinitializer, [3 x double] [double -1.000000e+00, double 0.000000e+00, double 0.000000e+00]], [3 x [3 x double]] zeroinitializer]], align 16
@_ZTV10FE_NedelecILi3EE = weak_odr unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10FE_NedelecILi3EE to i8*), i8* bitcast (void (%class.FE_Nedelec*)* @_ZN10FE_NedelecILi3EED2Ev to i8*), i8* bitcast (void (%class.FE_Nedelec*)* @_ZN10FE_NedelecILi3EED0Ev to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %class.FE_Nedelec*)* @_ZNK10FE_NedelecILi3EE8get_nameB5cxx11Ev to i8*), i8* bitcast (double (%class.FiniteElementBase*, i32, %class.Point*)* @_ZNK17FiniteElementBaseILi3EE11shape_valueEjRK5PointILi3EE to i8*), i8* bitcast (double (%class.FE_Nedelec*, i32, %class.Point*, i32)* @_ZNK10FE_NedelecILi3EE21shape_value_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.Tensor*, %class.FiniteElementBase*, i32, %class.Point*)* @_ZNK17FiniteElementBaseILi3EE10shape_gradEjRK5PointILi3EE to i8*), i8* bitcast (void (%class.Tensor*, %class.FE_Nedelec*, i32, %class.Point*, i32)* @_ZNK10FE_NedelecILi3EE20shape_grad_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.Tensor.33*, %class.FiniteElementBase*, i32, %class.Point*)* @_ZNK17FiniteElementBaseILi3EE15shape_grad_gradEjRK5PointILi3EE to i8*), i8* bitcast (void (%class.Tensor.33*, %class.FE_Nedelec*, i32, %class.Point*, i32)* @_ZNK10FE_NedelecILi3EE25shape_grad_grad_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.FiniteElementBase*, %class.FiniteElementBase*, %class.FullMatrix*)* @_ZNK17FiniteElementBaseILi3EE24get_interpolation_matrixERKS0_R10FullMatrixIdE to i8*), i8* bitcast (void (%class.Point*, %class.FiniteElementBase*, i32)* @_ZNK17FiniteElementBaseILi3EE18unit_support_pointEj to i8*), i8* bitcast (void (%class.Point.21*, %class.FiniteElementBase*, i32)* @_ZNK17FiniteElementBaseILi3EE23unit_face_support_pointEj to i8*), i8* bitcast (i32 (%class.FE_Nedelec*)* @_ZNK10FE_NedelecILi3EE15n_base_elementsEv to i8*), i8* bitcast (%class.FiniteElement* (%class.FE_Nedelec*, i32)* @_ZNK10FE_NedelecILi3EE12base_elementEj to i8*), i8* bitcast (i32 (%class.FE_Nedelec*, i32)* @_ZNK10FE_NedelecILi3EE20element_multiplicityEj to i8*), i8* bitcast (i1 (%class.FE_Nedelec*, i32, i32)* @_ZNK10FE_NedelecILi3EE19has_support_on_faceEjj to i8*), i8* bitcast (i32 (%class.FE_Nedelec*)* @_ZNK10FE_NedelecILi3EE18memory_consumptionEv to i8*), i8* bitcast (i32 (%class.FE_Nedelec*, i32)* @_ZNK10FE_NedelecILi3EE11update_onceE11UpdateFlags to i8*), i8* bitcast (i32 (%class.FE_Nedelec*, i32)* @_ZNK10FE_NedelecILi3EE11update_eachE11UpdateFlags to i8*), i8* bitcast (%class.FiniteElement* (%class.FE_Nedelec*)* @_ZNK10FE_NedelecILi3EE5cloneEv to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FE_Nedelec*, i32, %class.Mapping*, %class.Quadrature*)* @_ZNK10FE_NedelecILi3EE8get_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi3EE to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FiniteElement*, i32, %class.Mapping*, %class.Quadrature.126*)* @_ZNK13FiniteElementILi3EE13get_face_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FiniteElement*, i32, %class.Mapping*, %class.Quadrature.126*)* @_ZNK13FiniteElementILi3EE16get_subface_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE to i8*), i8* bitcast (void (%class.FE_Nedelec*, %class.Mapping*, %class.TriaIterator*, %class.Quadrature*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK10FE_NedelecILi3EE14fill_fe_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERNS2_16InternalDataBaseESG_R12FEValuesDataILi3EE to i8*), i8* bitcast (void (%class.FE_Nedelec*, %class.Mapping*, %class.TriaIterator*, i32, %class.Quadrature.126*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK10FE_NedelecILi3EE19fill_fe_face_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRK10QuadratureILi2EERNS2_16InternalDataBaseESG_R12FEValuesDataILi3EE to i8*), i8* bitcast (void (%class.FE_Nedelec*, %class.Mapping*, %class.TriaIterator*, i32, i32, %class.Quadrature.126*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK10FE_NedelecILi3EE22fill_fe_subface_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjjRK10QuadratureILi2EERNS2_16InternalDataBaseESG_R12FEValuesDataILi3EE to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [12 x i8] c"FE_Nedelec<\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c">(\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZZNK10FE_NedelecILi3EE19has_support_on_faceEjjE14opposite_faces = internal constant [12 x [2 x i32]] [[2 x i32] [i32 1, i32 4], [2 x i32] [i32 1, i32 5], [2 x i32] [i32 1, i32 2], [2 x i32] [i32 1, i32 3], [2 x i32] [i32 0, i32 4], [2 x i32] [i32 0, i32 5], [2 x i32] [i32 0, i32 2], [2 x i32] [i32 0, i32 3], [2 x i32] [i32 3, i32 4], [2 x i32] [i32 4, i32 5], [2 x i32] [i32 2, i32 5], [2 x i32] [i32 2, i32 3]], align 16
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN7MappingILi3EE16InternalDataBaseE = linkonce_odr constant [35 x i8] c"N7MappingILi3EE16InternalDataBaseE\00", comdat
@_ZTI11Subscriptor = external constant i8*
@_ZTIN7MappingILi3EE16InternalDataBaseE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZTSN7MappingILi3EE16InternalDataBaseE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@_ZTSN10FE_NedelecILi3EE12InternalDataE = linkonce_odr constant [35 x i8] c"N10FE_NedelecILi3EE12InternalDataE\00", comdat
@_ZTSN17FiniteElementBaseILi3EE16InternalDataBaseE = linkonce_odr constant [46 x i8] c"N17FiniteElementBaseILi3EE16InternalDataBaseE\00", comdat
@_ZTIN17FiniteElementBaseILi3EE16InternalDataBaseE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @_ZTSN17FiniteElementBaseILi3EE16InternalDataBaseE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*) }, comdat
@_ZTIN10FE_NedelecILi3EE12InternalDataE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZTSN10FE_NedelecILi3EE12InternalDataE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN17FiniteElementBaseILi3EE16InternalDataBaseE to i8*) }, comdat
@_ZN10FE_NedelecILi3EE8Matrices21n_constraint_matricesE = external constant i32, align 4
@_ZN10FE_NedelecILi3EE8Matrices19constraint_matricesE = external constant [0 x double*], align 8
@_ZN10FE_NedelecILi3EE8Matrices20n_embedding_matricesE = external constant i32, align 4
@_ZN10FE_NedelecILi3EE8Matrices9embeddingE = external constant [0 x [8 x double*]], align 8
@_ZTS10FE_NedelecILi3EE = weak_odr constant [19 x i8] c"10FE_NedelecILi3EE\00", comdat
@_ZTS13FiniteElementILi3EE = linkonce_odr constant [22 x i8] c"13FiniteElementILi3EE\00", comdat
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external global i8*
@_ZTS17FiniteElementBaseILi3EE = linkonce_odr constant [26 x i8] c"17FiniteElementBaseILi3EE\00", comdat
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTS17FiniteElementDataILi3EE = linkonce_odr constant [26 x i8] c"17FiniteElementDataILi3EE\00", comdat
@_ZTI17FiniteElementDataILi3EE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTS17FiniteElementDataILi3EE, i32 0, i32 0) }, comdat
@_ZTI17FiniteElementBaseILi3EE = linkonce_odr constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTS17FiniteElementBaseILi3EE, i32 0, i32 0), i32 0, i32 2, i8* bitcast (i8** @_ZTI11Subscriptor to i8*), i64 2, i8* bitcast ({ i8*, i8* }* @_ZTI17FiniteElementDataILi3EE to i8*), i64 6146 }, comdat
@_ZTI13FiniteElementILi3EE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZTS13FiniteElementILi3EE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTI17FiniteElementBaseILi3EE to i8*) }, comdat
@_ZTI10FE_NedelecILi3EE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTS10FE_NedelecILi3EE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13FiniteElementILi3EE to i8*) }, comdat
@_ZTVN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionE = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionE to i8*), i8* bitcast (void (%"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"*)* @_ZN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionD2Ev to i8*), i8* bitcast (void (%"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"*)* @_ZN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionD0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%class.ExceptionBase*, %"class.std::basic_ostream"*)* @_ZNK13ExceptionBase9PrintInfoERSo to i8*)] }, comdat, align 8
@_ZTSN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionE = weak_odr constant [50 x i8] c"N10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionE\00", comdat
@_ZTI13ExceptionBase = external constant i8*
@_ZTIN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @_ZTSN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionE, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTVN10FE_NedelecILi3EE12InternalDataE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10FE_NedelecILi3EE12InternalDataE to i8*), i8* bitcast (void (%"class.FE_Nedelec<3>::InternalData"*)* @_ZN10FE_NedelecILi3EE12InternalDataD2Ev to i8*), i8* bitcast (void (%"class.FE_Nedelec<3>::InternalData"*)* @_ZN10FE_NedelecILi3EE12InternalDataD0Ev to i8*), i8* bitcast (void (%"class.Mapping<3>::InternalDataBase"*)* @_ZN7MappingILi3EE16InternalDataBase16clear_first_cellEv to i8*), i8* bitcast (i32 (%"class.Mapping<3>::InternalDataBase"*)* @_ZNK7MappingILi3EE16InternalDataBase18memory_consumptionEv to i8*)] }, comdat, align 8
@_ZTVN17FiniteElementBaseILi3EE16InternalDataBaseE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN17FiniteElementBaseILi3EE16InternalDataBaseE to i8*), i8* bitcast (void (%"class.FiniteElementBase<3>::InternalDataBase"*)* @_ZN17FiniteElementBaseILi3EE16InternalDataBaseD1Ev to i8*), i8* bitcast (void (%"class.FiniteElementBase<3>::InternalDataBase"*)* @_ZN17FiniteElementBaseILi3EE16InternalDataBaseD0Ev to i8*), i8* bitcast (void (%"class.Mapping<3>::InternalDataBase"*)* @_ZN7MappingILi3EE16InternalDataBase16clear_first_cellEv to i8*), i8* bitcast (i32 (%"class.Mapping<3>::InternalDataBase"*)* @_ZNK7MappingILi3EE16InternalDataBase18memory_consumptionEv to i8*)] }, comdat, align 8
@_ZTV5TableILi2E6TensorILi1ELi3EEE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI5TableILi2E6TensorILi1ELi3EEE to i8*), i8* bitcast (void (%class.Table.50*)* @_ZN5TableILi2E6TensorILi1ELi3EEED2Ev to i8*), i8* bitcast (void (%class.Table.50*)* @_ZN5TableILi2E6TensorILi1ELi3EEED0Ev to i8*)] }, comdat, align 8
@_ZTS5TableILi2E6TensorILi1ELi3EEE = linkonce_odr constant [30 x i8] c"5TableILi2E6TensorILi1ELi3EEE\00", comdat
@_ZTS9TableBaseILi2E6TensorILi1ELi3EEE = linkonce_odr constant [34 x i8] c"9TableBaseILi2E6TensorILi1ELi3EEE\00", comdat
@_ZTI9TableBaseILi2E6TensorILi1ELi3EEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_ZTS9TableBaseILi2E6TensorILi1ELi3EEE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@_ZTI5TableILi2E6TensorILi1ELi3EEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @_ZTS5TableILi2E6TensorILi1ELi3EEE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2E6TensorILi1ELi3EEE to i8*) }, comdat
@_ZTV9TableBaseILi2E6TensorILi1ELi3EEE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2E6TensorILi1ELi3EEE to i8*), i8* bitcast (void (%class.TableBase.51*)* @_ZN9TableBaseILi2E6TensorILi1ELi3EEED2Ev to i8*), i8* bitcast (void (%class.TableBase.51*)* @_ZN9TableBaseILi2E6TensorILi1ELi3EEED0Ev to i8*)] }, comdat, align 8
@_ZTV5TableILi2E6TensorILi2ELi3EEE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI5TableILi2E6TensorILi2ELi3EEE to i8*), i8* bitcast (void (%class.Table.54*)* @_ZN5TableILi2E6TensorILi2ELi3EEED2Ev to i8*), i8* bitcast (void (%class.Table.54*)* @_ZN5TableILi2E6TensorILi2ELi3EEED0Ev to i8*)] }, comdat, align 8
@_ZTS5TableILi2E6TensorILi2ELi3EEE = linkonce_odr constant [30 x i8] c"5TableILi2E6TensorILi2ELi3EEE\00", comdat
@_ZTS9TableBaseILi2E6TensorILi2ELi3EEE = linkonce_odr constant [34 x i8] c"9TableBaseILi2E6TensorILi2ELi3EEE\00", comdat
@_ZTI9TableBaseILi2E6TensorILi2ELi3EEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_ZTS9TableBaseILi2E6TensorILi2ELi3EEE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@_ZTI5TableILi2E6TensorILi2ELi3EEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @_ZTS5TableILi2E6TensorILi2ELi3EEE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2E6TensorILi2ELi3EEE to i8*) }, comdat
@_ZTV9TableBaseILi2E6TensorILi2ELi3EEE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2E6TensorILi2ELi3EEE to i8*), i8* bitcast (void (%class.TableBase.55*)* @_ZN9TableBaseILi2E6TensorILi2ELi3EEED2Ev to i8*), i8* bitcast (void (%class.TableBase.55*)* @_ZN9TableBaseILi2E6TensorILi2ELi3EEED0Ev to i8*)] }, comdat, align 8
@_ZZN12GeometryInfoILi3EE25vertices_adjacent_to_lineEjjE14vertex_indices = linkonce_odr constant [12 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 1, i32 2], [2 x i32] [i32 3, i32 2], [2 x i32] [i32 0, i32 3], [2 x i32] [i32 4, i32 5], [2 x i32] [i32 5, i32 6], [2 x i32] [i32 7, i32 6], [2 x i32] [i32 4, i32 7], [2 x i32] [i32 0, i32 4], [2 x i32] [i32 1, i32 5], [2 x i32] [i32 2, i32 6], [2 x i32] [i32 3, i32 7]], comdat, align 16
@_ZZN12GeometryInfoILi2EE25vertices_adjacent_to_lineEjjE14vertex_indices = linkonce_odr constant [4 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 1, i32 2], [2 x i32] [i32 3, i32 2], [2 x i32] [i32 0, i32 3]], comdat, align 16
@.str.3 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0
@x.727 = common global i32 0
@y.728 = common global i32 0
@x.729 = common global i32 0
@y.730 = common global i32 0
@x.731 = common global i32 0
@y.732 = common global i32 0
@x.733 = common global i32 0
@y.734 = common global i32 0
@x.735 = common global i32 0
@y.736 = common global i32 0
@x.737 = common global i32 0
@y.738 = common global i32 0
@x.739 = common global i32 0
@y.740 = common global i32 0
@x.741 = common global i32 0
@y.742 = common global i32 0
@x.743 = common global i32 0
@y.744 = common global i32 0
@x.745 = common global i32 0
@y.746 = common global i32 0
@x.747 = common global i32 0
@y.748 = common global i32 0
@x.749 = common global i32 0
@y.750 = common global i32 0
@x.751 = common global i32 0
@y.752 = common global i32 0
@x.753 = common global i32 0
@y.754 = common global i32 0
@x.755 = common global i32 0
@y.756 = common global i32 0
@x.757 = common global i32 0
@y.758 = common global i32 0
@x.759 = common global i32 0
@y.760 = common global i32 0
@x.761 = common global i32 0
@y.762 = common global i32 0
@x.763 = common global i32 0
@y.764 = common global i32 0
@x.765 = common global i32 0
@y.766 = common global i32 0
@x.767 = common global i32 0
@y.768 = common global i32 0
@x.769 = common global i32 0
@y.770 = common global i32 0
@x.771 = common global i32 0
@y.772 = common global i32 0
@x.773 = common global i32 0
@y.774 = common global i32 0
@x.775 = common global i32 0
@y.776 = common global i32 0
@x.777 = common global i32 0
@y.778 = common global i32 0
@x.779 = common global i32 0
@y.780 = common global i32 0
@x.781 = common global i32 0
@y.782 = common global i32 0
@x.783 = common global i32 0
@y.784 = common global i32 0
@x.785 = common global i32 0
@y.786 = common global i32 0
@x.787 = common global i32 0
@y.788 = common global i32 0
@x.789 = common global i32 0
@y.790 = common global i32 0
@x.791 = common global i32 0
@y.792 = common global i32 0
@x.793 = common global i32 0
@y.794 = common global i32 0
@x.795 = common global i32 0
@y.796 = common global i32 0
@x.797 = common global i32 0
@y.798 = common global i32 0
@x.799 = common global i32 0
@y.800 = common global i32 0
@x.801 = common global i32 0
@y.802 = common global i32 0
@x.803 = common global i32 0
@y.804 = common global i32 0
@x.805 = common global i32 0
@y.806 = common global i32 0
@x.807 = common global i32 0
@y.808 = common global i32 0
@x.809 = common global i32 0
@y.810 = common global i32 0
@x.811 = common global i32 0
@y.812 = common global i32 0
@x.813 = common global i32 0
@y.814 = common global i32 0
@x.815 = common global i32 0
@y.816 = common global i32 0
@x.817 = common global i32 0
@y.818 = common global i32 0
@x.819 = common global i32 0
@y.820 = common global i32 0
@x.821 = common global i32 0
@y.822 = common global i32 0
@x.823 = common global i32 0
@y.824 = common global i32 0
@x.825 = common global i32 0
@y.826 = common global i32 0
@x.827 = common global i32 0
@y.828 = common global i32 0
@x.829 = common global i32 0
@y.830 = common global i32 0
@x.831 = common global i32 0
@y.832 = common global i32 0
@x.833 = common global i32 0
@y.834 = common global i32 0
@x.835 = common global i32 0
@y.836 = common global i32 0
@x.837 = common global i32 0
@y.838 = common global i32 0
@x.839 = common global i32 0
@y.840 = common global i32 0
@x.841 = common global i32 0
@y.842 = common global i32 0
@x.843 = common global i32 0
@y.844 = common global i32 0
@x.845 = common global i32 0
@y.846 = common global i32 0
@x.847 = common global i32 0
@y.848 = common global i32 0
@x.849 = common global i32 0
@y.850 = common global i32 0
@x.851 = common global i32 0
@y.852 = common global i32 0
@x.853 = common global i32 0
@y.854 = common global i32 0
@x.855 = common global i32 0
@y.856 = common global i32 0
@x.857 = common global i32 0
@y.858 = common global i32 0
@x.859 = common global i32 0
@y.860 = common global i32 0
@x.861 = common global i32 0
@y.862 = common global i32 0
@x.863 = common global i32 0
@y.864 = common global i32 0
@x.865 = common global i32 0
@y.866 = common global i32 0
@x.867 = common global i32 0
@y.868 = common global i32 0
@x.869 = common global i32 0
@y.870 = common global i32 0
@x.871 = common global i32 0
@y.872 = common global i32 0
@x.873 = common global i32 0
@y.874 = common global i32 0
@x.875 = common global i32 0
@y.876 = common global i32 0
@x.877 = common global i32 0
@y.878 = common global i32 0
@x.879 = common global i32 0
@y.880 = common global i32 0
@x.881 = common global i32 0
@y.882 = common global i32 0
@x.883 = common global i32 0
@y.884 = common global i32 0
@x.885 = common global i32 0
@y.886 = common global i32 0
@x.887 = common global i32 0
@y.888 = common global i32 0
@x.889 = common global i32 0
@y.890 = common global i32 0
@x.891 = common global i32 0
@y.892 = common global i32 0
@x.893 = common global i32 0
@y.894 = common global i32 0
@x.895 = common global i32 0
@y.896 = common global i32 0
@x.897 = common global i32 0
@y.898 = common global i32 0
@x.899 = common global i32 0
@y.900 = common global i32 0
@x.901 = common global i32 0
@y.902 = common global i32 0
@x.903 = common global i32 0
@y.904 = common global i32 0
@x.905 = common global i32 0
@y.906 = common global i32 0
@x.907 = common global i32 0
@y.908 = common global i32 0
@x.909 = common global i32 0
@y.910 = common global i32 0
@x.911 = common global i32 0
@y.912 = common global i32 0
@x.913 = common global i32 0
@y.914 = common global i32 0
@x.915 = common global i32 0
@y.916 = common global i32 0
@x.917 = common global i32 0
@y.918 = common global i32 0
@x.919 = common global i32 0
@y.920 = common global i32 0
@x.921 = common global i32 0
@y.922 = common global i32 0
@x.923 = common global i32 0
@y.924 = common global i32 0
@x.925 = common global i32 0
@y.926 = common global i32 0
@x.927 = common global i32 0
@y.928 = common global i32 0
@x.929 = common global i32 0
@y.930 = common global i32 0
@x.931 = common global i32 0
@y.932 = common global i32 0
@x.933 = common global i32 0
@y.934 = common global i32 0
@x.935 = common global i32 0
@y.936 = common global i32 0
@x.937 = common global i32 0
@y.938 = common global i32 0
@x.939 = common global i32 0
@y.940 = common global i32 0
@x.941 = common global i32 0
@y.942 = common global i32 0
@x.943 = common global i32 0
@y.944 = common global i32 0
@x.945 = common global i32 0
@y.946 = common global i32 0
@x.947 = common global i32 0
@y.948 = common global i32 0
@x.949 = common global i32 0
@y.950 = common global i32 0
@x.951 = common global i32 0
@y.952 = common global i32 0
@x.953 = common global i32 0
@y.954 = common global i32 0
@x.955 = common global i32 0
@y.956 = common global i32 0
@x.957 = common global i32 0
@y.958 = common global i32 0
@x.959 = common global i32 0
@y.960 = common global i32 0
@x.961 = common global i32 0
@y.962 = common global i32 0
@x.963 = common global i32 0
@y.964 = common global i32 0
@x.965 = common global i32 0
@y.966 = common global i32 0
@x.967 = common global i32 0
@y.968 = common global i32 0
@x.969 = common global i32 0
@y.970 = common global i32 0
@x.971 = common global i32 0
@y.972 = common global i32 0

@_ZN10FE_NedelecILi3EEC1Ej = weak_odr alias void (%class.FE_Nedelec*, i32), void (%class.FE_Nedelec*, i32)* @_ZN10FE_NedelecILi3EEC2Ej

; Function Attrs: noinline uwtable
define double @_ZNK10FE_NedelecILi3EE21shape_value_componentEjRK5PointILi3EEj(%class.FE_Nedelec*, i32, %class.Point* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %5 = alloca double, align 8
  %6 = alloca %class.FE_Nedelec*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %class.Point*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %6, align 8
  store i32 %1, i32* %7, align 4
  store %class.Point* %2, %class.Point** %8, align 8
  store i32 %3, i32* %9, align 4
  %14 = load %class.FE_Nedelec*, %class.FE_Nedelec** %6, align 8
  store i32 3, i32* %10, align 4
  %15 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  switch i32 %16, label %206 [
    i32 1, label %17
  ]

; <label>:17:                                     ; preds = %4
  %18 = load i32, i32* %7, align 4
  %19 = icmp ult i32 %18, 8
  br i1 %19, label %20, label %50

; <label>:20:                                     ; preds = %17
  %21 = load i32, i32* %7, align 4
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

; <label>:24:                                     ; preds = %20
  %25 = load i32, i32* %9, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %72, label %27

; <label>:27:                                     ; preds = %24, %20
  %28 = load i32, i32* %7, align 4
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %50

; <label>:31:                                     ; preds = %27
  %32 = load i32, i32* @x
  %33 = load i32, i32* @y
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %31, %originalBBalteredBB
  %40 = load i32, i32* %9, align 4
  %41 = icmp ne i32 %40, 2
  %42 = load i32, i32* @x
  %43 = load i32, i32* @y
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %41, label %72, label %50

; <label>:50:                                     ; preds = %originalBBpart2, %27, %17
  %51 = load i32, i32* %7, align 4
  %52 = icmp uge i32 %51, 8
  br i1 %52, label %53, label %89

; <label>:53:                                     ; preds = %50
  %54 = load i32, i32* @x
  %55 = load i32, i32* @y
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %53, %originalBB1alteredBB
  %62 = load i32, i32* %9, align 4
  %63 = icmp ne i32 %62, 1
  %64 = load i32, i32* @x
  %65 = load i32, i32* @y
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %63, label %72, label %89

; <label>:72:                                     ; preds = %originalBBpart24, %originalBBpart2, %24
  %73 = load i32, i32* @x
  %74 = load i32, i32* @y
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %72, %originalBB6alteredBB
  store double 0.000000e+00, double* %5, align 8
  %81 = load i32, i32* @x
  %82 = load i32, i32* @y
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %208

; <label>:89:                                     ; preds = %originalBBpart24, %50
  %90 = load %class.Point*, %class.Point** %8, align 8
  %91 = call double @_ZNK5PointILi3EEclEj(%class.Point* %90, i32 0)
  store double %91, double* %11, align 8
  %92 = load %class.Point*, %class.Point** %8, align 8
  %93 = call double @_ZNK5PointILi3EEclEj(%class.Point* %92, i32 1)
  store double %93, double* %12, align 8
  %94 = load %class.Point*, %class.Point** %8, align 8
  %95 = call double @_ZNK5PointILi3EEclEj(%class.Point* %94, i32 2)
  store double %95, double* %13, align 8
  %96 = load i32, i32* %7, align 4
  switch i32 %96, label %205 [
    i32 0, label %97
    i32 2, label %119
    i32 1, label %124
    i32 3, label %129
    i32 4, label %135
    i32 6, label %140
    i32 5, label %160
    i32 7, label %164
    i32 8, label %169
    i32 9, label %191
    i32 10, label %196
    i32 11, label %200
  ]

; <label>:97:                                     ; preds = %89
  %98 = load i32, i32* @x
  %99 = load i32, i32* @y
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %97, %originalBB10alteredBB
  %106 = load double, double* %12, align 8
  %107 = fsub double 1.000000e+00, %106
  %108 = load double, double* %13, align 8
  %109 = fsub double 1.000000e+00, %108
  %110 = fmul double %107, %109
  store double %110, double* %5, align 8
  %111 = load i32, i32* @x
  %112 = load i32, i32* @y
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart236, label %originalBB10alteredBB

originalBBpart236:                                ; preds = %originalBB10
  br label %208

; <label>:119:                                    ; preds = %89
  %120 = load double, double* %12, align 8
  %121 = fsub double 1.000000e+00, %120
  %122 = load double, double* %13, align 8
  %123 = fmul double %121, %122
  store double %123, double* %5, align 8
  br label %208

; <label>:124:                                    ; preds = %89
  %125 = load double, double* %11, align 8
  %126 = load double, double* %12, align 8
  %127 = fsub double 1.000000e+00, %126
  %128 = fmul double %125, %127
  store double %128, double* %5, align 8
  br label %208

; <label>:129:                                    ; preds = %89
  %130 = load double, double* %11, align 8
  %131 = fsub double 1.000000e+00, %130
  %132 = load double, double* %12, align 8
  %133 = fsub double 1.000000e+00, %132
  %134 = fmul double %131, %133
  store double %134, double* %5, align 8
  br label %208

; <label>:135:                                    ; preds = %89
  %136 = load double, double* %12, align 8
  %137 = load double, double* %13, align 8
  %138 = fsub double 1.000000e+00, %137
  %139 = fmul double %136, %138
  store double %139, double* %5, align 8
  br label %208

; <label>:140:                                    ; preds = %89
  %141 = load i32, i32* @x
  %142 = load i32, i32* @y
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %140, %originalBB38alteredBB
  %149 = load double, double* %12, align 8
  %150 = load double, double* %13, align 8
  %151 = fmul double %149, %150
  store double %151, double* %5, align 8
  %152 = load i32, i32* @x
  %153 = load i32, i32* @y
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBBpart246, label %originalBB38alteredBB

originalBBpart246:                                ; preds = %originalBB38
  br label %208

; <label>:160:                                    ; preds = %89
  %161 = load double, double* %11, align 8
  %162 = load double, double* %12, align 8
  %163 = fmul double %161, %162
  store double %163, double* %5, align 8
  br label %208

; <label>:164:                                    ; preds = %89
  %165 = load double, double* %11, align 8
  %166 = fsub double 1.000000e+00, %165
  %167 = load double, double* %12, align 8
  %168 = fmul double %166, %167
  store double %168, double* %5, align 8
  br label %208

; <label>:169:                                    ; preds = %89
  %170 = load i32, i32* @x
  %171 = load i32, i32* @y
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %169, %originalBB48alteredBB
  %178 = load double, double* %11, align 8
  %179 = fsub double 1.000000e+00, %178
  %180 = load double, double* %13, align 8
  %181 = fsub double 1.000000e+00, %180
  %182 = fmul double %179, %181
  store double %182, double* %5, align 8
  %183 = load i32, i32* @x
  %184 = load i32, i32* @y
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBBpart270, label %originalBB48alteredBB

originalBBpart270:                                ; preds = %originalBB48
  br label %208

; <label>:191:                                    ; preds = %89
  %192 = load double, double* %11, align 8
  %193 = load double, double* %13, align 8
  %194 = fsub double 1.000000e+00, %193
  %195 = fmul double %192, %194
  store double %195, double* %5, align 8
  br label %208

; <label>:196:                                    ; preds = %89
  %197 = load double, double* %11, align 8
  %198 = load double, double* %13, align 8
  %199 = fmul double %197, %198
  store double %199, double* %5, align 8
  br label %208

; <label>:200:                                    ; preds = %89
  %201 = load double, double* %11, align 8
  %202 = fsub double 1.000000e+00, %201
  %203 = load double, double* %13, align 8
  %204 = fmul double %202, %203
  store double %204, double* %5, align 8
  br label %208

; <label>:205:                                    ; preds = %89
  store double 0.000000e+00, double* %5, align 8
  br label %208

; <label>:206:                                    ; preds = %4
  br label %207

; <label>:207:                                    ; preds = %206
  store double 0.000000e+00, double* %5, align 8
  br label %208

; <label>:208:                                    ; preds = %207, %205, %200, %196, %191, %originalBBpart270, %164, %160, %originalBBpart246, %135, %129, %124, %119, %originalBBpart236, %originalBBpart28
  %209 = load i32, i32* @x
  %210 = load i32, i32* @y
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %208, %originalBB72alteredBB
  %217 = load double, double* %5, align 8
  %218 = load i32, i32* @x
  %219 = load i32, i32* @y
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  ret double %217

originalBBalteredBB:                              ; preds = %originalBB, %31
  %226 = load i32, i32* %9, align 4
  %227 = icmp ne i32 %226, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %53
  %228 = load i32, i32* %9, align 4
  %229 = icmp ne i32 %228, 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %72
  store double 0.000000e+00, double* %5, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %97
  %230 = load double, double* %12, align 8
  %_ = fsub double -0.000000e+00, 1.000000e+00
  %gen = fadd double %_, %230
  %_11 = fsub double -0.000000e+00, 1.000000e+00
  %gen12 = fadd double %_11, %230
  %_13 = fsub double -0.000000e+00, 1.000000e+00
  %gen14 = fadd double %_13, %230
  %_15 = fsub double -0.000000e+00, 1.000000e+00
  %gen16 = fadd double %_15, %230
  %_17 = fsub double 1.000000e+00, %230
  %gen18 = fmul double %_17, %230
  %_19 = fsub double -0.000000e+00, 1.000000e+00
  %gen20 = fadd double %_19, %230
  %_21 = fsub double -0.000000e+00, 1.000000e+00
  %gen22 = fadd double %_21, %230
  %_23 = fsub double -0.000000e+00, 1.000000e+00
  %gen24 = fadd double %_23, %230
  %231 = fsub double 1.000000e+00, %230
  %232 = load double, double* %13, align 8
  %_25 = fsub double -0.000000e+00, 1.000000e+00
  %gen26 = fadd double %_25, %232
  %_27 = fsub double -0.000000e+00, 1.000000e+00
  %gen28 = fadd double %_27, %232
  %_29 = fsub double 1.000000e+00, %232
  %gen30 = fmul double %_29, %232
  %_31 = fsub double -0.000000e+00, 1.000000e+00
  %gen32 = fadd double %_31, %232
  %233 = fsub double 1.000000e+00, %232
  %_33 = fsub double %231, %233
  %gen34 = fmul double %_33, %233
  %234 = fmul double %231, %233
  store double %234, double* %5, align 8
  br label %originalBB10

originalBB38alteredBB:                            ; preds = %originalBB38, %140
  %235 = load double, double* %12, align 8
  %236 = load double, double* %13, align 8
  %_39 = fsub double %235, %236
  %gen40 = fmul double %_39, %236
  %_41 = fsub double -0.000000e+00, %235
  %gen42 = fadd double %_41, %236
  %_43 = fsub double -0.000000e+00, %235
  %gen44 = fadd double %_43, %236
  %237 = fmul double %235, %236
  store double %237, double* %5, align 8
  br label %originalBB38

originalBB48alteredBB:                            ; preds = %originalBB48, %169
  %238 = load double, double* %11, align 8
  %_49 = fsub double 1.000000e+00, %238
  %gen50 = fmul double %_49, %238
  %_51 = fsub double 1.000000e+00, %238
  %gen52 = fmul double %_51, %238
  %_53 = fsub double 1.000000e+00, %238
  %gen54 = fmul double %_53, %238
  %239 = fsub double 1.000000e+00, %238
  %240 = load double, double* %13, align 8
  %_55 = fsub double 1.000000e+00, %240
  %gen56 = fmul double %_55, %240
  %_57 = fsub double 1.000000e+00, %240
  %gen58 = fmul double %_57, %240
  %241 = fsub double 1.000000e+00, %240
  %_59 = fsub double -0.000000e+00, %239
  %gen60 = fadd double %_59, %241
  %_61 = fsub double %239, %241
  %gen62 = fmul double %_61, %241
  %_63 = fsub double -0.000000e+00, %239
  %gen64 = fadd double %_63, %241
  %_65 = fsub double %239, %241
  %gen66 = fmul double %_65, %241
  %_67 = fsub double -0.000000e+00, %239
  %gen68 = fadd double %_67, %241
  %242 = fmul double %239, %241
  store double %242, double* %5, align 8
  br label %originalBB48

originalBB72alteredBB:                            ; preds = %originalBB72, %208
  %243 = load double, double* %5, align 8
  br label %originalBB72
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZNK5PointILi3EEclEj(%class.Point*, i32) #1 comdat align 2 {
  %3 = alloca %class.Point*, align 8
  %4 = alloca i32, align 4
  store %class.Point* %0, %class.Point** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Point*, %class.Point** %3, align 8
  %6 = bitcast %class.Point* %5 to %class.Tensor*
  %7 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 %9
  %11 = load double, double* %10, align 8
  ret double %11
}

; Function Attrs: noinline uwtable
define void @_ZNK10FE_NedelecILi3EE20shape_grad_componentEjRK5PointILi3EEj(%class.Tensor* noalias sret, %class.FE_Nedelec*, i32, %class.Point* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %6 = load i32, i32* @x.3
  %7 = load i32, i32* @y.4
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %class.FE_Nedelec*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %class.Point*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca [12 x [3 x [3 x double]]], align 16
  store %class.FE_Nedelec* %1, %class.FE_Nedelec** %14, align 8
  store i32 %2, i32* %15, align 4
  store %class.Point* %3, %class.Point** %16, align 8
  store i32 %4, i32* %17, align 4
  %23 = load %class.FE_Nedelec*, %class.FE_Nedelec** %14, align 8
  store i32 3, i32* %18, align 4
  %24 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = load i32, i32* @x.3
  %27 = load i32, i32* @y.4
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %25, label %267 [
    i32 1, label %34
  ]

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i32, i32* @x.3
  %36 = load i32, i32* @y.4
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load %class.Point*, %class.Point** %16, align 8
  %44 = call double @_ZNK5PointILi3EEclEj(%class.Point* %43, i32 0)
  store double %44, double* %19, align 8
  %45 = load %class.Point*, %class.Point** %16, align 8
  %46 = call double @_ZNK5PointILi3EEclEj(%class.Point* %45, i32 1)
  store double %46, double* %20, align 8
  %47 = load %class.Point*, %class.Point** %16, align 8
  %48 = call double @_ZNK5PointILi3EEclEj(%class.Point* %47, i32 2)
  store double %48, double* %21, align 8
  %49 = getelementptr inbounds [12 x [3 x [3 x double]]], [12 x [3 x [3 x double]]]* %22, i64 0, i64 0
  %50 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %49, i64 0, i64 0
  %51 = getelementptr inbounds [3 x double], [3 x double]* %50, i64 0, i64 0
  store double 0.000000e+00, double* %51, align 8
  %52 = getelementptr inbounds double, double* %51, i64 1
  %53 = load double, double* %21, align 8
  %54 = fsub double 1.000000e+00, %53
  %55 = fsub double -0.000000e+00, %54
  store double %55, double* %52, align 8
  %56 = getelementptr inbounds double, double* %52, i64 1
  %57 = load double, double* %20, align 8
  %58 = fsub double 1.000000e+00, %57
  %59 = fsub double -0.000000e+00, %58
  store double %59, double* %56, align 8
  %60 = getelementptr inbounds [3 x double], [3 x double]* %50, i64 1
  %61 = getelementptr inbounds [3 x double], [3 x double]* %60, i64 0, i64 0
  store double 0.000000e+00, double* %61, align 8
  %62 = getelementptr inbounds double, double* %61, i64 1
  store double 0.000000e+00, double* %62, align 8
  %63 = getelementptr inbounds double, double* %62, i64 1
  store double 0.000000e+00, double* %63, align 8
  %64 = getelementptr inbounds [3 x double], [3 x double]* %60, i64 1
  %65 = getelementptr inbounds [3 x double], [3 x double]* %64, i64 0, i64 0
  store double 0.000000e+00, double* %65, align 8
  %66 = getelementptr inbounds double, double* %65, i64 1
  store double 0.000000e+00, double* %66, align 8
  %67 = getelementptr inbounds double, double* %66, i64 1
  store double 0.000000e+00, double* %67, align 8
  %68 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %49, i64 1
  %69 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %68, i64 0, i64 0
  %70 = getelementptr inbounds [3 x double], [3 x double]* %69, i64 0, i64 0
  store double 0.000000e+00, double* %70, align 8
  %71 = getelementptr inbounds double, double* %70, i64 1
  store double 0.000000e+00, double* %71, align 8
  %72 = getelementptr inbounds double, double* %71, i64 1
  store double 0.000000e+00, double* %72, align 8
  %73 = getelementptr inbounds [3 x double], [3 x double]* %69, i64 1
  %74 = getelementptr inbounds [3 x double], [3 x double]* %73, i64 0, i64 0
  store double 0.000000e+00, double* %74, align 8
  %75 = getelementptr inbounds double, double* %74, i64 1
  store double 0.000000e+00, double* %75, align 8
  %76 = getelementptr inbounds double, double* %75, i64 1
  store double 0.000000e+00, double* %76, align 8
  %77 = getelementptr inbounds [3 x double], [3 x double]* %73, i64 1
  %78 = getelementptr inbounds [3 x double], [3 x double]* %77, i64 0, i64 0
  %79 = load double, double* %20, align 8
  %80 = fsub double 1.000000e+00, %79
  store double %80, double* %78, align 8
  %81 = getelementptr inbounds double, double* %78, i64 1
  %82 = load double, double* %19, align 8
  %83 = fsub double -0.000000e+00, %82
  store double %83, double* %81, align 8
  %84 = getelementptr inbounds double, double* %81, i64 1
  store double 0.000000e+00, double* %84, align 8
  %85 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %68, i64 1
  %86 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %85, i64 0, i64 0
  %87 = getelementptr inbounds [3 x double], [3 x double]* %86, i64 0, i64 0
  store double 0.000000e+00, double* %87, align 8
  %88 = getelementptr inbounds double, double* %87, i64 1
  %89 = load double, double* %21, align 8
  %90 = fsub double -0.000000e+00, %89
  store double %90, double* %88, align 8
  %91 = getelementptr inbounds double, double* %88, i64 1
  %92 = load double, double* %20, align 8
  %93 = fsub double 1.000000e+00, %92
  store double %93, double* %91, align 8
  %94 = getelementptr inbounds [3 x double], [3 x double]* %86, i64 1
  %95 = getelementptr inbounds [3 x double], [3 x double]* %94, i64 0, i64 0
  store double 0.000000e+00, double* %95, align 8
  %96 = getelementptr inbounds double, double* %95, i64 1
  store double 0.000000e+00, double* %96, align 8
  %97 = getelementptr inbounds double, double* %96, i64 1
  store double 0.000000e+00, double* %97, align 8
  %98 = getelementptr inbounds [3 x double], [3 x double]* %94, i64 1
  %99 = getelementptr inbounds [3 x double], [3 x double]* %98, i64 0, i64 0
  store double 0.000000e+00, double* %99, align 8
  %100 = getelementptr inbounds double, double* %99, i64 1
  store double 0.000000e+00, double* %100, align 8
  %101 = getelementptr inbounds double, double* %100, i64 1
  store double 0.000000e+00, double* %101, align 8
  %102 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %85, i64 1
  %103 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %102, i64 0, i64 0
  %104 = getelementptr inbounds [3 x double], [3 x double]* %103, i64 0, i64 0
  store double 0.000000e+00, double* %104, align 8
  %105 = getelementptr inbounds double, double* %104, i64 1
  store double 0.000000e+00, double* %105, align 8
  %106 = getelementptr inbounds double, double* %105, i64 1
  store double 0.000000e+00, double* %106, align 8
  %107 = getelementptr inbounds [3 x double], [3 x double]* %103, i64 1
  %108 = getelementptr inbounds [3 x double], [3 x double]* %107, i64 0, i64 0
  store double 0.000000e+00, double* %108, align 8
  %109 = getelementptr inbounds double, double* %108, i64 1
  store double 0.000000e+00, double* %109, align 8
  %110 = getelementptr inbounds double, double* %109, i64 1
  store double 0.000000e+00, double* %110, align 8
  %111 = getelementptr inbounds [3 x double], [3 x double]* %107, i64 1
  %112 = getelementptr inbounds [3 x double], [3 x double]* %111, i64 0, i64 0
  %113 = load double, double* %20, align 8
  %114 = fsub double 1.000000e+00, %113
  %115 = fsub double -0.000000e+00, %114
  store double %115, double* %112, align 8
  %116 = getelementptr inbounds double, double* %112, i64 1
  %117 = load double, double* %19, align 8
  %118 = fsub double 1.000000e+00, %117
  %119 = fsub double -0.000000e+00, %118
  store double %119, double* %116, align 8
  %120 = getelementptr inbounds double, double* %116, i64 1
  store double 0.000000e+00, double* %120, align 8
  %121 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %102, i64 1
  %122 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %121, i64 0, i64 0
  %123 = getelementptr inbounds [3 x double], [3 x double]* %122, i64 0, i64 0
  store double 0.000000e+00, double* %123, align 8
  %124 = getelementptr inbounds double, double* %123, i64 1
  %125 = load double, double* %21, align 8
  %126 = fsub double 1.000000e+00, %125
  store double %126, double* %124, align 8
  %127 = getelementptr inbounds double, double* %124, i64 1
  %128 = load double, double* %20, align 8
  %129 = fsub double -0.000000e+00, %128
  store double %129, double* %127, align 8
  %130 = getelementptr inbounds [3 x double], [3 x double]* %122, i64 1
  %131 = getelementptr inbounds [3 x double], [3 x double]* %130, i64 0, i64 0
  store double 0.000000e+00, double* %131, align 8
  %132 = getelementptr inbounds double, double* %131, i64 1
  store double 0.000000e+00, double* %132, align 8
  %133 = getelementptr inbounds double, double* %132, i64 1
  store double 0.000000e+00, double* %133, align 8
  %134 = getelementptr inbounds [3 x double], [3 x double]* %130, i64 1
  %135 = getelementptr inbounds [3 x double], [3 x double]* %134, i64 0, i64 0
  store double 0.000000e+00, double* %135, align 8
  %136 = getelementptr inbounds double, double* %135, i64 1
  store double 0.000000e+00, double* %136, align 8
  %137 = getelementptr inbounds double, double* %136, i64 1
  store double 0.000000e+00, double* %137, align 8
  %138 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %121, i64 1
  %139 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %138, i64 0, i64 0
  %140 = getelementptr inbounds [3 x double], [3 x double]* %139, i64 0, i64 0
  store double 0.000000e+00, double* %140, align 8
  %141 = getelementptr inbounds double, double* %140, i64 1
  store double 0.000000e+00, double* %141, align 8
  %142 = getelementptr inbounds double, double* %141, i64 1
  store double 0.000000e+00, double* %142, align 8
  %143 = getelementptr inbounds [3 x double], [3 x double]* %139, i64 1
  %144 = getelementptr inbounds [3 x double], [3 x double]* %143, i64 0, i64 0
  store double 0.000000e+00, double* %144, align 8
  %145 = getelementptr inbounds double, double* %144, i64 1
  store double 0.000000e+00, double* %145, align 8
  %146 = getelementptr inbounds double, double* %145, i64 1
  store double 0.000000e+00, double* %146, align 8
  %147 = getelementptr inbounds [3 x double], [3 x double]* %143, i64 1
  %148 = getelementptr inbounds [3 x double], [3 x double]* %147, i64 0, i64 0
  %149 = load double, double* %20, align 8
  store double %149, double* %148, align 8
  %150 = getelementptr inbounds double, double* %148, i64 1
  %151 = load double, double* %19, align 8
  store double %151, double* %150, align 8
  %152 = getelementptr inbounds double, double* %150, i64 1
  store double 0.000000e+00, double* %152, align 8
  %153 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %138, i64 1
  %154 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %153, i64 0, i64 0
  %155 = getelementptr inbounds [3 x double], [3 x double]* %154, i64 0, i64 0
  store double 0.000000e+00, double* %155, align 8
  %156 = getelementptr inbounds double, double* %155, i64 1
  %157 = load double, double* %21, align 8
  store double %157, double* %156, align 8
  %158 = getelementptr inbounds double, double* %156, i64 1
  %159 = load double, double* %20, align 8
  store double %159, double* %158, align 8
  %160 = getelementptr inbounds [3 x double], [3 x double]* %154, i64 1
  %161 = getelementptr inbounds [3 x double], [3 x double]* %160, i64 0, i64 0
  store double 0.000000e+00, double* %161, align 8
  %162 = getelementptr inbounds double, double* %161, i64 1
  store double 0.000000e+00, double* %162, align 8
  %163 = getelementptr inbounds double, double* %162, i64 1
  store double 0.000000e+00, double* %163, align 8
  %164 = getelementptr inbounds [3 x double], [3 x double]* %160, i64 1
  %165 = getelementptr inbounds [3 x double], [3 x double]* %164, i64 0, i64 0
  store double 0.000000e+00, double* %165, align 8
  %166 = getelementptr inbounds double, double* %165, i64 1
  store double 0.000000e+00, double* %166, align 8
  %167 = getelementptr inbounds double, double* %166, i64 1
  store double 0.000000e+00, double* %167, align 8
  %168 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %153, i64 1
  %169 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %168, i64 0, i64 0
  %170 = getelementptr inbounds [3 x double], [3 x double]* %169, i64 0, i64 0
  store double 0.000000e+00, double* %170, align 8
  %171 = getelementptr inbounds double, double* %170, i64 1
  store double 0.000000e+00, double* %171, align 8
  %172 = getelementptr inbounds double, double* %171, i64 1
  store double 0.000000e+00, double* %172, align 8
  %173 = getelementptr inbounds [3 x double], [3 x double]* %169, i64 1
  %174 = getelementptr inbounds [3 x double], [3 x double]* %173, i64 0, i64 0
  store double 0.000000e+00, double* %174, align 8
  %175 = getelementptr inbounds double, double* %174, i64 1
  store double 0.000000e+00, double* %175, align 8
  %176 = getelementptr inbounds double, double* %175, i64 1
  store double 0.000000e+00, double* %176, align 8
  %177 = getelementptr inbounds [3 x double], [3 x double]* %173, i64 1
  %178 = getelementptr inbounds [3 x double], [3 x double]* %177, i64 0, i64 0
  %179 = load double, double* %20, align 8
  %180 = fsub double -0.000000e+00, %179
  store double %180, double* %178, align 8
  %181 = getelementptr inbounds double, double* %178, i64 1
  %182 = load double, double* %19, align 8
  %183 = fsub double 1.000000e+00, %182
  store double %183, double* %181, align 8
  %184 = getelementptr inbounds double, double* %181, i64 1
  store double 0.000000e+00, double* %184, align 8
  %185 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %168, i64 1
  %186 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %185, i64 0, i64 0
  %187 = getelementptr inbounds [3 x double], [3 x double]* %186, i64 0, i64 0
  store double 0.000000e+00, double* %187, align 8
  %188 = getelementptr inbounds double, double* %187, i64 1
  store double 0.000000e+00, double* %188, align 8
  %189 = getelementptr inbounds double, double* %188, i64 1
  store double 0.000000e+00, double* %189, align 8
  %190 = getelementptr inbounds [3 x double], [3 x double]* %186, i64 1
  %191 = getelementptr inbounds [3 x double], [3 x double]* %190, i64 0, i64 0
  %192 = load double, double* %21, align 8
  %193 = fsub double 1.000000e+00, %192
  %194 = fsub double -0.000000e+00, %193
  store double %194, double* %191, align 8
  %195 = getelementptr inbounds double, double* %191, i64 1
  store double 0.000000e+00, double* %195, align 8
  %196 = getelementptr inbounds double, double* %195, i64 1
  %197 = load double, double* %19, align 8
  %198 = fsub double 1.000000e+00, %197
  %199 = fsub double -0.000000e+00, %198
  store double %199, double* %196, align 8
  %200 = getelementptr inbounds [3 x double], [3 x double]* %190, i64 1
  %201 = getelementptr inbounds [3 x double], [3 x double]* %200, i64 0, i64 0
  store double 0.000000e+00, double* %201, align 8
  %202 = getelementptr inbounds double, double* %201, i64 1
  store double 0.000000e+00, double* %202, align 8
  %203 = getelementptr inbounds double, double* %202, i64 1
  store double 0.000000e+00, double* %203, align 8
  %204 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %185, i64 1
  %205 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %204, i64 0, i64 0
  %206 = getelementptr inbounds [3 x double], [3 x double]* %205, i64 0, i64 0
  store double 0.000000e+00, double* %206, align 8
  %207 = getelementptr inbounds double, double* %206, i64 1
  store double 0.000000e+00, double* %207, align 8
  %208 = getelementptr inbounds double, double* %207, i64 1
  store double 0.000000e+00, double* %208, align 8
  %209 = getelementptr inbounds [3 x double], [3 x double]* %205, i64 1
  %210 = getelementptr inbounds [3 x double], [3 x double]* %209, i64 0, i64 0
  %211 = load double, double* %21, align 8
  %212 = fsub double 1.000000e+00, %211
  store double %212, double* %210, align 8
  %213 = getelementptr inbounds double, double* %210, i64 1
  store double 0.000000e+00, double* %213, align 8
  %214 = getelementptr inbounds double, double* %213, i64 1
  %215 = load double, double* %19, align 8
  %216 = fsub double -0.000000e+00, %215
  store double %216, double* %214, align 8
  %217 = getelementptr inbounds [3 x double], [3 x double]* %209, i64 1
  %218 = getelementptr inbounds [3 x double], [3 x double]* %217, i64 0, i64 0
  store double 0.000000e+00, double* %218, align 8
  %219 = getelementptr inbounds double, double* %218, i64 1
  store double 0.000000e+00, double* %219, align 8
  %220 = getelementptr inbounds double, double* %219, i64 1
  store double 0.000000e+00, double* %220, align 8
  %221 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %204, i64 1
  %222 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %221, i64 0, i64 0
  %223 = getelementptr inbounds [3 x double], [3 x double]* %222, i64 0, i64 0
  store double 0.000000e+00, double* %223, align 8
  %224 = getelementptr inbounds double, double* %223, i64 1
  store double 0.000000e+00, double* %224, align 8
  %225 = getelementptr inbounds double, double* %224, i64 1
  store double 0.000000e+00, double* %225, align 8
  %226 = getelementptr inbounds [3 x double], [3 x double]* %222, i64 1
  %227 = getelementptr inbounds [3 x double], [3 x double]* %226, i64 0, i64 0
  %228 = load double, double* %21, align 8
  store double %228, double* %227, align 8
  %229 = getelementptr inbounds double, double* %227, i64 1
  store double 0.000000e+00, double* %229, align 8
  %230 = getelementptr inbounds double, double* %229, i64 1
  %231 = load double, double* %19, align 8
  store double %231, double* %230, align 8
  %232 = getelementptr inbounds [3 x double], [3 x double]* %226, i64 1
  %233 = getelementptr inbounds [3 x double], [3 x double]* %232, i64 0, i64 0
  store double 0.000000e+00, double* %233, align 8
  %234 = getelementptr inbounds double, double* %233, i64 1
  store double 0.000000e+00, double* %234, align 8
  %235 = getelementptr inbounds double, double* %234, i64 1
  store double 0.000000e+00, double* %235, align 8
  %236 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %221, i64 1
  %237 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %236, i64 0, i64 0
  %238 = getelementptr inbounds [3 x double], [3 x double]* %237, i64 0, i64 0
  store double 0.000000e+00, double* %238, align 8
  %239 = getelementptr inbounds double, double* %238, i64 1
  store double 0.000000e+00, double* %239, align 8
  %240 = getelementptr inbounds double, double* %239, i64 1
  store double 0.000000e+00, double* %240, align 8
  %241 = getelementptr inbounds [3 x double], [3 x double]* %237, i64 1
  %242 = getelementptr inbounds [3 x double], [3 x double]* %241, i64 0, i64 0
  %243 = load double, double* %21, align 8
  %244 = fsub double -0.000000e+00, %243
  store double %244, double* %242, align 8
  %245 = getelementptr inbounds double, double* %242, i64 1
  store double 0.000000e+00, double* %245, align 8
  %246 = getelementptr inbounds double, double* %245, i64 1
  %247 = load double, double* %19, align 8
  %248 = fsub double 1.000000e+00, %247
  store double %248, double* %246, align 8
  %249 = getelementptr inbounds [3 x double], [3 x double]* %241, i64 1
  %250 = getelementptr inbounds [3 x double], [3 x double]* %249, i64 0, i64 0
  store double 0.000000e+00, double* %250, align 8
  %251 = getelementptr inbounds double, double* %250, i64 1
  store double 0.000000e+00, double* %251, align 8
  %252 = getelementptr inbounds double, double* %251, i64 1
  store double 0.000000e+00, double* %252, align 8
  %253 = load i32, i32* %15, align 4
  %254 = zext i32 %253 to i64
  %255 = getelementptr inbounds [12 x [3 x [3 x double]]], [12 x [3 x [3 x double]]]* %22, i64 0, i64 %254
  %256 = load i32, i32* %17, align 4
  %257 = zext i32 %256 to i64
  %258 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %255, i64 0, i64 %257
  call void @_ZN6TensorILi1ELi3EEC2ERA3_Kd(%class.Tensor* %0, [3 x double]* dereferenceable(24) %258)
  %259 = load i32, i32* @x.3
  %260 = load i32, i32* @y.4
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBBpart2145, label %originalBB1alteredBB

originalBBpart2145:                               ; preds = %originalBB1
  br label %285

; <label>:267:                                    ; preds = %originalBBpart2
  %268 = load i32, i32* @x.3
  %269 = load i32, i32* @y.4
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBB147, label %originalBB147alteredBB

originalBB147:                                    ; preds = %267, %originalBB147alteredBB
  %276 = load i32, i32* @x.3
  %277 = load i32, i32* @y.4
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBBpart2149, label %originalBB147alteredBB

originalBBpart2149:                               ; preds = %originalBB147
  br label %284

; <label>:284:                                    ; preds = %originalBBpart2149
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %0, i1 zeroext true)
  br label %285

; <label>:285:                                    ; preds = %284, %originalBBpart2145
  %286 = load i32, i32* @x.3
  %287 = load i32, i32* @y.4
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %285, %originalBB151alteredBB
  %294 = load i32, i32* @x.3
  %295 = load i32, i32* @y.4
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBBpart2153, label %originalBB151alteredBB

originalBBpart2153:                               ; preds = %originalBB151
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %302 = alloca %class.FE_Nedelec*, align 8
  %303 = alloca i32, align 4
  %304 = alloca %class.Point*, align 8
  %305 = alloca i32, align 4
  %306 = alloca i32, align 4
  %307 = alloca double, align 8
  %308 = alloca double, align 8
  %309 = alloca double, align 8
  %310 = alloca [12 x [3 x [3 x double]]], align 16
  store %class.FE_Nedelec* %1, %class.FE_Nedelec** %302, align 8
  store i32 %2, i32* %303, align 4
  store %class.Point* %3, %class.Point** %304, align 8
  store i32 %4, i32* %305, align 4
  %311 = load %class.FE_Nedelec*, %class.FE_Nedelec** %302, align 8
  store i32 3, i32* %306, align 4
  %312 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %311, i32 0, i32 1
  %313 = load i32, i32* %312, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %314 = load %class.Point*, %class.Point** %16, align 8
  %315 = call double @_ZNK5PointILi3EEclEj(%class.Point* %314, i32 0)
  store double %315, double* %19, align 8
  %316 = load %class.Point*, %class.Point** %16, align 8
  %317 = call double @_ZNK5PointILi3EEclEj(%class.Point* %316, i32 1)
  store double %317, double* %20, align 8
  %318 = load %class.Point*, %class.Point** %16, align 8
  %319 = call double @_ZNK5PointILi3EEclEj(%class.Point* %318, i32 2)
  store double %319, double* %21, align 8
  %320 = getelementptr inbounds [12 x [3 x [3 x double]]], [12 x [3 x [3 x double]]]* %22, i64 0, i64 0
  %321 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %320, i64 0, i64 0
  %322 = getelementptr inbounds [3 x double], [3 x double]* %321, i64 0, i64 0
  store double 0.000000e+00, double* %322, align 8
  %323 = getelementptr inbounds double, double* %322, i64 1
  %324 = load double, double* %21, align 8
  %_ = fsub double 1.000000e+00, %324
  %gen = fmul double %_, %324
  %325 = fsub double 1.000000e+00, %324
  %_2 = fsub double -0.000000e+00, -0.000000e+00
  %gen3 = fadd double %_2, %325
  %_4 = fsub double -0.000000e+00, %325
  %gen5 = fmul double %_4, %325
  %_6 = fsub double -0.000000e+00, -0.000000e+00
  %gen7 = fadd double %_6, %325
  %326 = fsub double -0.000000e+00, %325
  store double %326, double* %323, align 8
  %327 = getelementptr inbounds double, double* %323, i64 1
  %328 = load double, double* %20, align 8
  %_8 = fsub double -0.000000e+00, 1.000000e+00
  %gen9 = fadd double %_8, %328
  %_10 = fsub double 1.000000e+00, %328
  %gen11 = fmul double %_10, %328
  %_12 = fsub double 1.000000e+00, %328
  %gen13 = fmul double %_12, %328
  %_14 = fsub double 1.000000e+00, %328
  %gen15 = fmul double %_14, %328
  %329 = fsub double 1.000000e+00, %328
  %_16 = fsub double -0.000000e+00, -0.000000e+00
  %gen17 = fadd double %_16, %329
  %_18 = fsub double -0.000000e+00, -0.000000e+00
  %gen19 = fadd double %_18, %329
  %_20 = fsub double -0.000000e+00, -0.000000e+00
  %gen21 = fadd double %_20, %329
  %_22 = fsub double -0.000000e+00, %329
  %gen23 = fmul double %_22, %329
  %_24 = fsub double -0.000000e+00, -0.000000e+00
  %gen25 = fadd double %_24, %329
  %_26 = fsub double -0.000000e+00, %329
  %gen27 = fmul double %_26, %329
  %330 = fsub double -0.000000e+00, %329
  store double %330, double* %327, align 8
  %331 = getelementptr inbounds [3 x double], [3 x double]* %321, i64 1
  %332 = getelementptr inbounds [3 x double], [3 x double]* %331, i64 0, i64 0
  store double 0.000000e+00, double* %332, align 8
  %333 = getelementptr inbounds double, double* %332, i64 1
  store double 0.000000e+00, double* %333, align 8
  %334 = getelementptr inbounds double, double* %333, i64 1
  store double 0.000000e+00, double* %334, align 8
  %335 = getelementptr inbounds [3 x double], [3 x double]* %331, i64 1
  %336 = getelementptr inbounds [3 x double], [3 x double]* %335, i64 0, i64 0
  store double 0.000000e+00, double* %336, align 8
  %337 = getelementptr inbounds double, double* %336, i64 1
  store double 0.000000e+00, double* %337, align 8
  %338 = getelementptr inbounds double, double* %337, i64 1
  store double 0.000000e+00, double* %338, align 8
  %339 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %320, i64 1
  %340 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %339, i64 0, i64 0
  %341 = getelementptr inbounds [3 x double], [3 x double]* %340, i64 0, i64 0
  store double 0.000000e+00, double* %341, align 8
  %342 = getelementptr inbounds double, double* %341, i64 1
  store double 0.000000e+00, double* %342, align 8
  %343 = getelementptr inbounds double, double* %342, i64 1
  store double 0.000000e+00, double* %343, align 8
  %344 = getelementptr inbounds [3 x double], [3 x double]* %340, i64 1
  %345 = getelementptr inbounds [3 x double], [3 x double]* %344, i64 0, i64 0
  store double 0.000000e+00, double* %345, align 8
  %346 = getelementptr inbounds double, double* %345, i64 1
  store double 0.000000e+00, double* %346, align 8
  %347 = getelementptr inbounds double, double* %346, i64 1
  store double 0.000000e+00, double* %347, align 8
  %348 = getelementptr inbounds [3 x double], [3 x double]* %344, i64 1
  %349 = getelementptr inbounds [3 x double], [3 x double]* %348, i64 0, i64 0
  %350 = load double, double* %20, align 8
  %351 = fsub double 1.000000e+00, %350
  store double %351, double* %349, align 8
  %352 = getelementptr inbounds double, double* %349, i64 1
  %353 = load double, double* %19, align 8
  %_28 = fsub double -0.000000e+00, -0.000000e+00
  %gen29 = fadd double %_28, %353
  %354 = fsub double -0.000000e+00, %353
  store double %354, double* %352, align 8
  %355 = getelementptr inbounds double, double* %352, i64 1
  store double 0.000000e+00, double* %355, align 8
  %356 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %339, i64 1
  %357 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %356, i64 0, i64 0
  %358 = getelementptr inbounds [3 x double], [3 x double]* %357, i64 0, i64 0
  store double 0.000000e+00, double* %358, align 8
  %359 = getelementptr inbounds double, double* %358, i64 1
  %360 = load double, double* %21, align 8
  %_30 = fsub double -0.000000e+00, -0.000000e+00
  %gen31 = fadd double %_30, %360
  %_32 = fsub double -0.000000e+00, %360
  %gen33 = fmul double %_32, %360
  %361 = fsub double -0.000000e+00, %360
  store double %361, double* %359, align 8
  %362 = getelementptr inbounds double, double* %359, i64 1
  %363 = load double, double* %20, align 8
  %_34 = fsub double -0.000000e+00, 1.000000e+00
  %gen35 = fadd double %_34, %363
  %364 = fsub double 1.000000e+00, %363
  store double %364, double* %362, align 8
  %365 = getelementptr inbounds [3 x double], [3 x double]* %357, i64 1
  %366 = getelementptr inbounds [3 x double], [3 x double]* %365, i64 0, i64 0
  store double 0.000000e+00, double* %366, align 8
  %367 = getelementptr inbounds double, double* %366, i64 1
  store double 0.000000e+00, double* %367, align 8
  %368 = getelementptr inbounds double, double* %367, i64 1
  store double 0.000000e+00, double* %368, align 8
  %369 = getelementptr inbounds [3 x double], [3 x double]* %365, i64 1
  %370 = getelementptr inbounds [3 x double], [3 x double]* %369, i64 0, i64 0
  store double 0.000000e+00, double* %370, align 8
  %371 = getelementptr inbounds double, double* %370, i64 1
  store double 0.000000e+00, double* %371, align 8
  %372 = getelementptr inbounds double, double* %371, i64 1
  store double 0.000000e+00, double* %372, align 8
  %373 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %356, i64 1
  %374 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %373, i64 0, i64 0
  %375 = getelementptr inbounds [3 x double], [3 x double]* %374, i64 0, i64 0
  store double 0.000000e+00, double* %375, align 8
  %376 = getelementptr inbounds double, double* %375, i64 1
  store double 0.000000e+00, double* %376, align 8
  %377 = getelementptr inbounds double, double* %376, i64 1
  store double 0.000000e+00, double* %377, align 8
  %378 = getelementptr inbounds [3 x double], [3 x double]* %374, i64 1
  %379 = getelementptr inbounds [3 x double], [3 x double]* %378, i64 0, i64 0
  store double 0.000000e+00, double* %379, align 8
  %380 = getelementptr inbounds double, double* %379, i64 1
  store double 0.000000e+00, double* %380, align 8
  %381 = getelementptr inbounds double, double* %380, i64 1
  store double 0.000000e+00, double* %381, align 8
  %382 = getelementptr inbounds [3 x double], [3 x double]* %378, i64 1
  %383 = getelementptr inbounds [3 x double], [3 x double]* %382, i64 0, i64 0
  %384 = load double, double* %20, align 8
  %_36 = fsub double -0.000000e+00, 1.000000e+00
  %gen37 = fadd double %_36, %384
  %_38 = fsub double 1.000000e+00, %384
  %gen39 = fmul double %_38, %384
  %_40 = fsub double 1.000000e+00, %384
  %gen41 = fmul double %_40, %384
  %385 = fsub double 1.000000e+00, %384
  %_42 = fsub double -0.000000e+00, %385
  %gen43 = fmul double %_42, %385
  %_44 = fsub double -0.000000e+00, -0.000000e+00
  %gen45 = fadd double %_44, %385
  %386 = fsub double -0.000000e+00, %385
  store double %386, double* %383, align 8
  %387 = getelementptr inbounds double, double* %383, i64 1
  %388 = load double, double* %19, align 8
  %_46 = fsub double 1.000000e+00, %388
  %gen47 = fmul double %_46, %388
  %_48 = fsub double -0.000000e+00, 1.000000e+00
  %gen49 = fadd double %_48, %388
  %_50 = fsub double -0.000000e+00, 1.000000e+00
  %gen51 = fadd double %_50, %388
  %_52 = fsub double -0.000000e+00, 1.000000e+00
  %gen53 = fadd double %_52, %388
  %_54 = fsub double -0.000000e+00, 1.000000e+00
  %gen55 = fadd double %_54, %388
  %389 = fsub double 1.000000e+00, %388
  %_56 = fsub double -0.000000e+00, -0.000000e+00
  %gen57 = fadd double %_56, %389
  %_58 = fsub double -0.000000e+00, %389
  %gen59 = fmul double %_58, %389
  %390 = fsub double -0.000000e+00, %389
  store double %390, double* %387, align 8
  %391 = getelementptr inbounds double, double* %387, i64 1
  store double 0.000000e+00, double* %391, align 8
  %392 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %373, i64 1
  %393 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %392, i64 0, i64 0
  %394 = getelementptr inbounds [3 x double], [3 x double]* %393, i64 0, i64 0
  store double 0.000000e+00, double* %394, align 8
  %395 = getelementptr inbounds double, double* %394, i64 1
  %396 = load double, double* %21, align 8
  %_60 = fsub double -0.000000e+00, 1.000000e+00
  %gen61 = fadd double %_60, %396
  %_62 = fsub double -0.000000e+00, 1.000000e+00
  %gen63 = fadd double %_62, %396
  %_64 = fsub double -0.000000e+00, 1.000000e+00
  %gen65 = fadd double %_64, %396
  %_66 = fsub double 1.000000e+00, %396
  %gen67 = fmul double %_66, %396
  %_68 = fsub double 1.000000e+00, %396
  %gen69 = fmul double %_68, %396
  %397 = fsub double 1.000000e+00, %396
  store double %397, double* %395, align 8
  %398 = getelementptr inbounds double, double* %395, i64 1
  %399 = load double, double* %20, align 8
  %_70 = fsub double -0.000000e+00, -0.000000e+00
  %gen71 = fadd double %_70, %399
  %_72 = fsub double -0.000000e+00, -0.000000e+00
  %gen73 = fadd double %_72, %399
  %400 = fsub double -0.000000e+00, %399
  store double %400, double* %398, align 8
  %401 = getelementptr inbounds [3 x double], [3 x double]* %393, i64 1
  %402 = getelementptr inbounds [3 x double], [3 x double]* %401, i64 0, i64 0
  store double 0.000000e+00, double* %402, align 8
  %403 = getelementptr inbounds double, double* %402, i64 1
  store double 0.000000e+00, double* %403, align 8
  %404 = getelementptr inbounds double, double* %403, i64 1
  store double 0.000000e+00, double* %404, align 8
  %405 = getelementptr inbounds [3 x double], [3 x double]* %401, i64 1
  %406 = getelementptr inbounds [3 x double], [3 x double]* %405, i64 0, i64 0
  store double 0.000000e+00, double* %406, align 8
  %407 = getelementptr inbounds double, double* %406, i64 1
  store double 0.000000e+00, double* %407, align 8
  %408 = getelementptr inbounds double, double* %407, i64 1
  store double 0.000000e+00, double* %408, align 8
  %409 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %392, i64 1
  %410 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %409, i64 0, i64 0
  %411 = getelementptr inbounds [3 x double], [3 x double]* %410, i64 0, i64 0
  store double 0.000000e+00, double* %411, align 8
  %412 = getelementptr inbounds double, double* %411, i64 1
  store double 0.000000e+00, double* %412, align 8
  %413 = getelementptr inbounds double, double* %412, i64 1
  store double 0.000000e+00, double* %413, align 8
  %414 = getelementptr inbounds [3 x double], [3 x double]* %410, i64 1
  %415 = getelementptr inbounds [3 x double], [3 x double]* %414, i64 0, i64 0
  store double 0.000000e+00, double* %415, align 8
  %416 = getelementptr inbounds double, double* %415, i64 1
  store double 0.000000e+00, double* %416, align 8
  %417 = getelementptr inbounds double, double* %416, i64 1
  store double 0.000000e+00, double* %417, align 8
  %418 = getelementptr inbounds [3 x double], [3 x double]* %414, i64 1
  %419 = getelementptr inbounds [3 x double], [3 x double]* %418, i64 0, i64 0
  %420 = load double, double* %20, align 8
  store double %420, double* %419, align 8
  %421 = getelementptr inbounds double, double* %419, i64 1
  %422 = load double, double* %19, align 8
  store double %422, double* %421, align 8
  %423 = getelementptr inbounds double, double* %421, i64 1
  store double 0.000000e+00, double* %423, align 8
  %424 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %409, i64 1
  %425 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %424, i64 0, i64 0
  %426 = getelementptr inbounds [3 x double], [3 x double]* %425, i64 0, i64 0
  store double 0.000000e+00, double* %426, align 8
  %427 = getelementptr inbounds double, double* %426, i64 1
  %428 = load double, double* %21, align 8
  store double %428, double* %427, align 8
  %429 = getelementptr inbounds double, double* %427, i64 1
  %430 = load double, double* %20, align 8
  store double %430, double* %429, align 8
  %431 = getelementptr inbounds [3 x double], [3 x double]* %425, i64 1
  %432 = getelementptr inbounds [3 x double], [3 x double]* %431, i64 0, i64 0
  store double 0.000000e+00, double* %432, align 8
  %433 = getelementptr inbounds double, double* %432, i64 1
  store double 0.000000e+00, double* %433, align 8
  %434 = getelementptr inbounds double, double* %433, i64 1
  store double 0.000000e+00, double* %434, align 8
  %435 = getelementptr inbounds [3 x double], [3 x double]* %431, i64 1
  %436 = getelementptr inbounds [3 x double], [3 x double]* %435, i64 0, i64 0
  store double 0.000000e+00, double* %436, align 8
  %437 = getelementptr inbounds double, double* %436, i64 1
  store double 0.000000e+00, double* %437, align 8
  %438 = getelementptr inbounds double, double* %437, i64 1
  store double 0.000000e+00, double* %438, align 8
  %439 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %424, i64 1
  %440 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %439, i64 0, i64 0
  %441 = getelementptr inbounds [3 x double], [3 x double]* %440, i64 0, i64 0
  store double 0.000000e+00, double* %441, align 8
  %442 = getelementptr inbounds double, double* %441, i64 1
  store double 0.000000e+00, double* %442, align 8
  %443 = getelementptr inbounds double, double* %442, i64 1
  store double 0.000000e+00, double* %443, align 8
  %444 = getelementptr inbounds [3 x double], [3 x double]* %440, i64 1
  %445 = getelementptr inbounds [3 x double], [3 x double]* %444, i64 0, i64 0
  store double 0.000000e+00, double* %445, align 8
  %446 = getelementptr inbounds double, double* %445, i64 1
  store double 0.000000e+00, double* %446, align 8
  %447 = getelementptr inbounds double, double* %446, i64 1
  store double 0.000000e+00, double* %447, align 8
  %448 = getelementptr inbounds [3 x double], [3 x double]* %444, i64 1
  %449 = getelementptr inbounds [3 x double], [3 x double]* %448, i64 0, i64 0
  %450 = load double, double* %20, align 8
  %_74 = fsub double -0.000000e+00, %450
  %gen75 = fmul double %_74, %450
  %_76 = fsub double -0.000000e+00, -0.000000e+00
  %gen77 = fadd double %_76, %450
  %_78 = fsub double -0.000000e+00, -0.000000e+00
  %gen79 = fadd double %_78, %450
  %_80 = fsub double -0.000000e+00, %450
  %gen81 = fmul double %_80, %450
  %_82 = fsub double -0.000000e+00, %450
  %gen83 = fmul double %_82, %450
  %_84 = fsub double -0.000000e+00, %450
  %gen85 = fmul double %_84, %450
  %451 = fsub double -0.000000e+00, %450
  store double %451, double* %449, align 8
  %452 = getelementptr inbounds double, double* %449, i64 1
  %453 = load double, double* %19, align 8
  %_86 = fsub double -0.000000e+00, 1.000000e+00
  %gen87 = fadd double %_86, %453
  %454 = fsub double 1.000000e+00, %453
  store double %454, double* %452, align 8
  %455 = getelementptr inbounds double, double* %452, i64 1
  store double 0.000000e+00, double* %455, align 8
  %456 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %439, i64 1
  %457 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %456, i64 0, i64 0
  %458 = getelementptr inbounds [3 x double], [3 x double]* %457, i64 0, i64 0
  store double 0.000000e+00, double* %458, align 8
  %459 = getelementptr inbounds double, double* %458, i64 1
  store double 0.000000e+00, double* %459, align 8
  %460 = getelementptr inbounds double, double* %459, i64 1
  store double 0.000000e+00, double* %460, align 8
  %461 = getelementptr inbounds [3 x double], [3 x double]* %457, i64 1
  %462 = getelementptr inbounds [3 x double], [3 x double]* %461, i64 0, i64 0
  %463 = load double, double* %21, align 8
  %_88 = fsub double -0.000000e+00, 1.000000e+00
  %gen89 = fadd double %_88, %463
  %_90 = fsub double 1.000000e+00, %463
  %gen91 = fmul double %_90, %463
  %_92 = fsub double 1.000000e+00, %463
  %gen93 = fmul double %_92, %463
  %_94 = fsub double 1.000000e+00, %463
  %gen95 = fmul double %_94, %463
  %_96 = fsub double -0.000000e+00, 1.000000e+00
  %gen97 = fadd double %_96, %463
  %_98 = fsub double 1.000000e+00, %463
  %gen99 = fmul double %_98, %463
  %464 = fsub double 1.000000e+00, %463
  %_100 = fsub double -0.000000e+00, -0.000000e+00
  %gen101 = fadd double %_100, %464
  %_102 = fsub double -0.000000e+00, %464
  %gen103 = fmul double %_102, %464
  %_104 = fsub double -0.000000e+00, %464
  %gen105 = fmul double %_104, %464
  %_106 = fsub double -0.000000e+00, -0.000000e+00
  %gen107 = fadd double %_106, %464
  %_108 = fsub double -0.000000e+00, %464
  %gen109 = fmul double %_108, %464
  %465 = fsub double -0.000000e+00, %464
  store double %465, double* %462, align 8
  %466 = getelementptr inbounds double, double* %462, i64 1
  store double 0.000000e+00, double* %466, align 8
  %467 = getelementptr inbounds double, double* %466, i64 1
  %468 = load double, double* %19, align 8
  %_110 = fsub double -0.000000e+00, 1.000000e+00
  %gen111 = fadd double %_110, %468
  %_112 = fsub double 1.000000e+00, %468
  %gen113 = fmul double %_112, %468
  %469 = fsub double 1.000000e+00, %468
  %_114 = fsub double -0.000000e+00, %469
  %gen115 = fmul double %_114, %469
  %_116 = fsub double -0.000000e+00, %469
  %gen117 = fmul double %_116, %469
  %470 = fsub double -0.000000e+00, %469
  store double %470, double* %467, align 8
  %471 = getelementptr inbounds [3 x double], [3 x double]* %461, i64 1
  %472 = getelementptr inbounds [3 x double], [3 x double]* %471, i64 0, i64 0
  store double 0.000000e+00, double* %472, align 8
  %473 = getelementptr inbounds double, double* %472, i64 1
  store double 0.000000e+00, double* %473, align 8
  %474 = getelementptr inbounds double, double* %473, i64 1
  store double 0.000000e+00, double* %474, align 8
  %475 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %456, i64 1
  %476 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %475, i64 0, i64 0
  %477 = getelementptr inbounds [3 x double], [3 x double]* %476, i64 0, i64 0
  store double 0.000000e+00, double* %477, align 8
  %478 = getelementptr inbounds double, double* %477, i64 1
  store double 0.000000e+00, double* %478, align 8
  %479 = getelementptr inbounds double, double* %478, i64 1
  store double 0.000000e+00, double* %479, align 8
  %480 = getelementptr inbounds [3 x double], [3 x double]* %476, i64 1
  %481 = getelementptr inbounds [3 x double], [3 x double]* %480, i64 0, i64 0
  %482 = load double, double* %21, align 8
  %_118 = fsub double -0.000000e+00, 1.000000e+00
  %gen119 = fadd double %_118, %482
  %_120 = fsub double -0.000000e+00, 1.000000e+00
  %gen121 = fadd double %_120, %482
  %483 = fsub double 1.000000e+00, %482
  store double %483, double* %481, align 8
  %484 = getelementptr inbounds double, double* %481, i64 1
  store double 0.000000e+00, double* %484, align 8
  %485 = getelementptr inbounds double, double* %484, i64 1
  %486 = load double, double* %19, align 8
  %_122 = fsub double -0.000000e+00, -0.000000e+00
  %gen123 = fadd double %_122, %486
  %_124 = fsub double -0.000000e+00, -0.000000e+00
  %gen125 = fadd double %_124, %486
  %_126 = fsub double -0.000000e+00, %486
  %gen127 = fmul double %_126, %486
  %_128 = fsub double -0.000000e+00, %486
  %gen129 = fmul double %_128, %486
  %487 = fsub double -0.000000e+00, %486
  store double %487, double* %485, align 8
  %488 = getelementptr inbounds [3 x double], [3 x double]* %480, i64 1
  %489 = getelementptr inbounds [3 x double], [3 x double]* %488, i64 0, i64 0
  store double 0.000000e+00, double* %489, align 8
  %490 = getelementptr inbounds double, double* %489, i64 1
  store double 0.000000e+00, double* %490, align 8
  %491 = getelementptr inbounds double, double* %490, i64 1
  store double 0.000000e+00, double* %491, align 8
  %492 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %475, i64 1
  %493 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %492, i64 0, i64 0
  %494 = getelementptr inbounds [3 x double], [3 x double]* %493, i64 0, i64 0
  store double 0.000000e+00, double* %494, align 8
  %495 = getelementptr inbounds double, double* %494, i64 1
  store double 0.000000e+00, double* %495, align 8
  %496 = getelementptr inbounds double, double* %495, i64 1
  store double 0.000000e+00, double* %496, align 8
  %497 = getelementptr inbounds [3 x double], [3 x double]* %493, i64 1
  %498 = getelementptr inbounds [3 x double], [3 x double]* %497, i64 0, i64 0
  %499 = load double, double* %21, align 8
  store double %499, double* %498, align 8
  %500 = getelementptr inbounds double, double* %498, i64 1
  store double 0.000000e+00, double* %500, align 8
  %501 = getelementptr inbounds double, double* %500, i64 1
  %502 = load double, double* %19, align 8
  store double %502, double* %501, align 8
  %503 = getelementptr inbounds [3 x double], [3 x double]* %497, i64 1
  %504 = getelementptr inbounds [3 x double], [3 x double]* %503, i64 0, i64 0
  store double 0.000000e+00, double* %504, align 8
  %505 = getelementptr inbounds double, double* %504, i64 1
  store double 0.000000e+00, double* %505, align 8
  %506 = getelementptr inbounds double, double* %505, i64 1
  store double 0.000000e+00, double* %506, align 8
  %507 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %492, i64 1
  %508 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %507, i64 0, i64 0
  %509 = getelementptr inbounds [3 x double], [3 x double]* %508, i64 0, i64 0
  store double 0.000000e+00, double* %509, align 8
  %510 = getelementptr inbounds double, double* %509, i64 1
  store double 0.000000e+00, double* %510, align 8
  %511 = getelementptr inbounds double, double* %510, i64 1
  store double 0.000000e+00, double* %511, align 8
  %512 = getelementptr inbounds [3 x double], [3 x double]* %508, i64 1
  %513 = getelementptr inbounds [3 x double], [3 x double]* %512, i64 0, i64 0
  %514 = load double, double* %21, align 8
  %_130 = fsub double -0.000000e+00, -0.000000e+00
  %gen131 = fadd double %_130, %514
  %_132 = fsub double -0.000000e+00, -0.000000e+00
  %gen133 = fadd double %_132, %514
  %_134 = fsub double -0.000000e+00, -0.000000e+00
  %gen135 = fadd double %_134, %514
  %_136 = fsub double -0.000000e+00, %514
  %gen137 = fmul double %_136, %514
  %_138 = fsub double -0.000000e+00, %514
  %gen139 = fmul double %_138, %514
  %_140 = fsub double -0.000000e+00, %514
  %gen141 = fmul double %_140, %514
  %515 = fsub double -0.000000e+00, %514
  store double %515, double* %513, align 8
  %516 = getelementptr inbounds double, double* %513, i64 1
  store double 0.000000e+00, double* %516, align 8
  %517 = getelementptr inbounds double, double* %516, i64 1
  %518 = load double, double* %19, align 8
  %_142 = fsub double -0.000000e+00, 1.000000e+00
  %gen143 = fadd double %_142, %518
  %519 = fsub double 1.000000e+00, %518
  store double %519, double* %517, align 8
  %520 = getelementptr inbounds [3 x double], [3 x double]* %512, i64 1
  %521 = getelementptr inbounds [3 x double], [3 x double]* %520, i64 0, i64 0
  store double 0.000000e+00, double* %521, align 8
  %522 = getelementptr inbounds double, double* %521, i64 1
  store double 0.000000e+00, double* %522, align 8
  %523 = getelementptr inbounds double, double* %522, i64 1
  store double 0.000000e+00, double* %523, align 8
  %524 = load i32, i32* %15, align 4
  %525 = zext i32 %524 to i64
  %526 = getelementptr inbounds [12 x [3 x [3 x double]]], [12 x [3 x [3 x double]]]* %22, i64 0, i64 %525
  %527 = load i32, i32* %17, align 4
  %528 = zext i32 %527 to i64
  %529 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %526, i64 0, i64 %528
  call void @_ZN6TensorILi1ELi3EEC2ERA3_Kd(%class.Tensor* %0, [3 x double]* dereferenceable(24) %529)
  br label %originalBB1

originalBB147alteredBB:                           ; preds = %originalBB147, %267
  br label %originalBB147

originalBB151alteredBB:                           ; preds = %originalBB151, %285
  br label %originalBB151
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi1ELi3EEC2ERA3_Kd(%class.Tensor*, [3 x double]* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.5
  %4 = load i32, i32* @y.6
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Tensor*, align 8
  %12 = alloca [3 x double]*, align 8
  %13 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %11, align 8
  store [3 x double]* %1, [3 x double]** %12, align 8
  %14 = load %class.Tensor*, %class.Tensor** %11, align 8
  store i32 0, i32* %13, align 4
  %15 = load i32, i32* @x.5
  %16 = load i32, i32* @y.6
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %23

; <label>:23:                                     ; preds = %originalBBpart211, %originalBBpart2
  %24 = load i32, i32* %13, align 4
  %25 = icmp ult i32 %24, 3
  br i1 %25, label %26, label %71

; <label>:26:                                     ; preds = %23
  %27 = load i32, i32* @x.5
  %28 = load i32, i32* @y.6
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load [3 x double]*, [3 x double]** %12, align 8
  %36 = load i32, i32* %13, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [3 x double], [3 x double]* %35, i64 0, i64 %37
  %39 = load double, double* %38, align 8
  %40 = getelementptr inbounds %class.Tensor, %class.Tensor* %14, i32 0, i32 0
  %41 = load i32, i32* %13, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds [3 x double], [3 x double]* %40, i64 0, i64 %42
  store double %39, double* %43, align 8
  %44 = load i32, i32* @x.5
  %45 = load i32, i32* @y.6
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %52

; <label>:52:                                     ; preds = %originalBBpart24
  %53 = load i32, i32* @x.5
  %54 = load i32, i32* @y.6
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  %61 = load i32, i32* %13, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %13, align 4
  %63 = load i32, i32* @x.5
  %64 = load i32, i32* @y.6
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart211, label %originalBB6alteredBB

originalBBpart211:                                ; preds = %originalBB6
  br label %23

; <label>:71:                                     ; preds = %23
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %72 = alloca %class.Tensor*, align 8
  %73 = alloca [3 x double]*, align 8
  %74 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %72, align 8
  store [3 x double]* %1, [3 x double]** %73, align 8
  %75 = load %class.Tensor*, %class.Tensor** %72, align 8
  store i32 0, i32* %74, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %76 = load [3 x double]*, [3 x double]** %12, align 8
  %77 = load i32, i32* %13, align 4
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds [3 x double], [3 x double]* %76, i64 0, i64 %78
  %80 = load double, double* %79, align 8
  %81 = getelementptr inbounds %class.Tensor, %class.Tensor* %14, i32 0, i32 0
  %82 = load i32, i32* %13, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds [3 x double], [3 x double]* %81, i64 0, i64 %83
  store double %80, double* %84, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  %85 = load i32, i32* %13, align 4
  %_ = sub i32 %85, 1
  %gen = mul i32 %_, 1
  %_7 = shl i32 %85, 1
  %_8 = sub i32 %85, 1
  %gen9 = mul i32 %_8, 1
  %86 = add i32 %85, 1
  store i32 %86, i32* %13, align 4
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor*, i1 zeroext) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  %6 = zext i1 %1 to i8
  store i8 %6, i8* %4, align 1
  %7 = load %class.Tensor*, %class.Tensor** %3, align 8
  %8 = load i8, i8* %4, align 1
  %9 = trunc i8 %8 to i1
  br i1 %9, label %10, label %71

; <label>:10:                                     ; preds = %2
  store i32 0, i32* %5, align 4
  br label %11

; <label>:11:                                     ; preds = %originalBBpart215, %10
  %12 = load i32, i32* @x.7
  %13 = load i32, i32* @y.8
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* %5, align 4
  %21 = icmp ne i32 %20, 3
  %22 = load i32, i32* @x.7
  %23 = load i32, i32* @y.8
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %70

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x.7
  %32 = load i32, i32* @y.8
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = getelementptr inbounds %class.Tensor, %class.Tensor* %7, i32 0, i32 0
  %40 = load i32, i32* %5, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds [3 x double], [3 x double]* %39, i64 0, i64 %41
  store double 0.000000e+00, double* %42, align 8
  %43 = load i32, i32* @x.7
  %44 = load i32, i32* @y.8
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %51

; <label>:51:                                     ; preds = %originalBBpart24
  %52 = load i32, i32* @x.7
  %53 = load i32, i32* @y.8
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i32, i32* %5, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %5, align 4
  %62 = load i32, i32* @x.7
  %63 = load i32, i32* @y.8
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart215, label %originalBB6alteredBB

originalBBpart215:                                ; preds = %originalBB6
  br label %11

; <label>:70:                                     ; preds = %originalBBpart2
  br label %71

; <label>:71:                                     ; preds = %70, %2
  %72 = load i32, i32* @x.7
  %73 = load i32, i32* @y.8
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %71, %originalBB17alteredBB
  %80 = load i32, i32* @x.7
  %81 = load i32, i32* @y.8
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %88 = load i32, i32* %5, align 4
  %89 = icmp ne i32 %88, 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %90 = getelementptr inbounds %class.Tensor, %class.Tensor* %7, i32 0, i32 0
  %91 = load i32, i32* %5, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds [3 x double], [3 x double]* %90, i64 0, i64 %92
  store double 0.000000e+00, double* %93, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %94 = load i32, i32* %5, align 4
  %_ = shl i32 %94, 1
  %_7 = sub i32 %94, 1
  %gen = mul i32 %_7, 1
  %_8 = shl i32 %94, 1
  %_9 = shl i32 %94, 1
  %_10 = shl i32 %94, 1
  %_11 = sub i32 %94, 1
  %gen12 = mul i32 %_11, 1
  %_13 = shl i32 %94, 1
  %95 = add i32 %94, 1
  store i32 %95, i32* %5, align 4
  br label %originalBB6

originalBB17alteredBB:                            ; preds = %originalBB17, %71
  br label %originalBB17
}

; Function Attrs: noinline uwtable
define void @_ZNK10FE_NedelecILi3EE25shape_grad_grad_componentEjRK5PointILi3EEj(%class.Tensor.33* noalias sret, %class.FE_Nedelec*, i32, %class.Point* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %6 = load i32, i32* @x.9
  %7 = load i32, i32* @y.10
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %class.FE_Nedelec*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %class.Point*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %class.FE_Nedelec* %1, %class.FE_Nedelec** %14, align 8
  store i32 %2, i32* %15, align 4
  store %class.Point* %3, %class.Point** %16, align 8
  store i32 %4, i32* %17, align 4
  %19 = load %class.FE_Nedelec*, %class.FE_Nedelec** %14, align 8
  store i32 3, i32* %18, align 4
  %20 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = load i32, i32* @x.9
  %23 = load i32, i32* @y.10
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %21, label %37 [
    i32 1, label %30
  ]

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* %15, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds [12 x [3 x [3 x [3 x double]]]], [12 x [3 x [3 x [3 x double]]]]* @_ZZNK10FE_NedelecILi3EE25shape_grad_grad_componentEjRK5PointILi3EEjE15unit_grad_grads, i64 0, i64 %32
  %34 = load i32, i32* %17, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [3 x [3 x [3 x double]]], [3 x [3 x [3 x double]]]* %33, i64 0, i64 %35
  call void @_ZN6TensorILi2ELi3EEC2ERA3_A3_Kd(%class.Tensor.33* %0, [3 x [3 x double]]* dereferenceable(72) %36)
  br label %55

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load i32, i32* @x.9
  %39 = load i32, i32* @y.10
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load i32, i32* @x.9
  %47 = load i32, i32* @y.10
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %54

; <label>:54:                                     ; preds = %originalBBpart24
  call void @_ZN6TensorILi2ELi3EEC2Ev(%class.Tensor.33* %0)
  br label %55

; <label>:55:                                     ; preds = %54, %30
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %56 = alloca %class.FE_Nedelec*, align 8
  %57 = alloca i32, align 4
  %58 = alloca %class.Point*, align 8
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  store %class.FE_Nedelec* %1, %class.FE_Nedelec** %56, align 8
  store i32 %2, i32* %57, align 4
  store %class.Point* %3, %class.Point** %58, align 8
  store i32 %4, i32* %59, align 4
  %61 = load %class.FE_Nedelec*, %class.FE_Nedelec** %56, align 8
  store i32 3, i32* %60, align 4
  %62 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6TensorILi2ELi3EEC2ERA3_A3_Kd(%class.Tensor.33*, [3 x [3 x double]]* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Tensor.33*, align 8
  %4 = alloca [3 x [3 x double]]*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.Tensor, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %3, align 8
  store [3 x [3 x double]]* %1, [3 x [3 x double]]** %4, align 8
  %7 = load %class.Tensor.33*, %class.Tensor.33** %3, align 8
  %8 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %7, i32 0, i32 0
  %9 = getelementptr inbounds [3 x %class.Tensor], [3 x %class.Tensor]* %8, i32 0, i32 0
  %10 = getelementptr inbounds %class.Tensor, %class.Tensor* %9, i64 3
  br label %11

; <label>:11:                                     ; preds = %11, %2
  %12 = phi %class.Tensor* [ %9, %2 ], [ %13, %11 ]
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %12, i1 zeroext true)
  %13 = getelementptr inbounds %class.Tensor, %class.Tensor* %12, i64 1
  %14 = icmp eq %class.Tensor* %13, %10
  br i1 %14, label %15, label %11

; <label>:15:                                     ; preds = %11
  store i32 0, i32* %5, align 4
  br label %16

; <label>:16:                                     ; preds = %29, %15
  %17 = load i32, i32* %5, align 4
  %18 = icmp ult i32 %17, 3
  br i1 %18, label %19, label %32

; <label>:19:                                     ; preds = %16
  %20 = load [3 x [3 x double]]*, [3 x [3 x double]]** %4, align 8
  %21 = load i32, i32* %5, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %20, i64 0, i64 %22
  call void @_ZN6TensorILi1ELi3EEC2ERA3_Kd(%class.Tensor* %6, [3 x double]* dereferenceable(24) %23)
  %24 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %7, i32 0, i32 0
  %25 = load i32, i32* %5, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [3 x %class.Tensor], [3 x %class.Tensor]* %24, i64 0, i64 %26
  %28 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor* %27, %class.Tensor* dereferenceable(24) %6)
  br label %29

; <label>:29:                                     ; preds = %19
  %30 = load i32, i32* %5, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %5, align 4
  br label %16

; <label>:32:                                     ; preds = %16
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6TensorILi2ELi3EEC2Ev(%class.Tensor.33*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.13
  %3 = load i32, i32* @y.14
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Tensor.33*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %10, align 8
  %11 = load %class.Tensor.33*, %class.Tensor.33** %10, align 8
  %12 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %11, i32 0, i32 0
  %13 = getelementptr inbounds [3 x %class.Tensor], [3 x %class.Tensor]* %12, i32 0, i32 0
  %14 = getelementptr inbounds %class.Tensor, %class.Tensor* %13, i64 3
  %15 = load i32, i32* @x.13
  %16 = load i32, i32* @y.14
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %23

; <label>:23:                                     ; preds = %23, %originalBBpart2
  %24 = phi %class.Tensor* [ %13, %originalBBpart2 ], [ %25, %23 ]
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %24, i1 zeroext true)
  %25 = getelementptr inbounds %class.Tensor, %class.Tensor* %24, i64 1
  %26 = icmp eq %class.Tensor* %25, %14
  br i1 %26, label %27, label %23

; <label>:27:                                     ; preds = %23
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %28 = alloca %class.Tensor.33*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %28, align 8
  %29 = load %class.Tensor.33*, %class.Tensor.33** %28, align 8
  %30 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %29, i32 0, i32 0
  %31 = getelementptr inbounds [3 x %class.Tensor], [3 x %class.Tensor]* %30, i32 0, i32 0
  %32 = getelementptr inbounds %class.Tensor, %class.Tensor* %31, i64 3
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN10FE_NedelecILi3EEC2Ej(%class.FE_Nedelec*, i32) unnamed_addr #0 comdat($_ZN10FE_NedelecILi3EEC5Ej) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.15
  %4 = load i32, i32* @y.16
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.FE_Nedelec*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %class.FiniteElementData, align 4
  %14 = alloca %"class.std::vector.28", align 8
  %15 = alloca i8*
  %16 = alloca i32
  %17 = alloca %"class.std::vector.7", align 8
  %18 = alloca %class.FiniteElementData, align 4
  %19 = alloca %"class.std::vector.28", align 8
  %20 = alloca i8, align 1
  %21 = alloca %"class.std::allocator.34", align 1
  %22 = alloca %"class.std::vector.23", align 8
  %23 = alloca %class.FiniteElementData, align 4
  %24 = alloca %"class.std::vector.28", align 8
  %25 = alloca %"class.std::vector.7", align 8
  %26 = alloca i8, align 1
  %27 = alloca %"class.std::allocator.34", align 1
  %28 = alloca %"class.std::allocator.25", align 1
  %29 = alloca %"class.std::vector", align 8
  %30 = alloca %"class.std::vector", align 8
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %11, align 8
  store i32 %1, i32* %12, align 4
  %31 = load %class.FE_Nedelec*, %class.FE_Nedelec** %11, align 8
  %32 = bitcast %class.FE_Nedelec* %31 to %class.FiniteElement*
  %33 = load i32, i32* %12, align 4
  call void @_ZN10FE_NedelecILi3EE14get_dpo_vectorEj(%"class.std::vector.28"* sret %14, i32 %33)
  %34 = load i32, i32* @x.15
  %35 = load i32, i32* @y.16
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN17FiniteElementDataILi3EEC1ERKSt6vectorIjSaIjEEjj(%class.FiniteElementData* %13, %"class.std::vector.28"* dereferenceable(24) %14, i32 3, i32 -1)
          to label %42 unwind label %194

; <label>:42:                                     ; preds = %originalBBpart2
  %43 = load i32, i32* @x.15
  %44 = load i32, i32* @y.16
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load i32, i32* %12, align 4
  %52 = load i32, i32* @x.15
  %53 = load i32, i32* @y.16
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN10FE_NedelecILi3EE14get_dpo_vectorEj(%"class.std::vector.28"* sret %19, i32 %51)
          to label %60 unwind label %194

; <label>:60:                                     ; preds = %originalBBpart24
  invoke void @_ZN17FiniteElementDataILi3EEC1ERKSt6vectorIjSaIjEEjj(%class.FiniteElementData* %18, %"class.std::vector.28"* dereferenceable(24) %19, i32 3, i32 -1)
          to label %61 unwind label %198

; <label>:61:                                     ; preds = %60
  %62 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %18, i32 0, i32 10
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  store i8 0, i8* %20, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.34"* %21) #12
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.7"* %17, i64 %64, i8* dereferenceable(1) %20, %"class.std::allocator.34"* dereferenceable(1) %21)
          to label %65 unwind label %218

; <label>:65:                                     ; preds = %61
  %66 = load i32, i32* %12, align 4
  invoke void @_ZN10FE_NedelecILi3EE14get_dpo_vectorEj(%"class.std::vector.28"* sret %24, i32 %66)
          to label %67 unwind label %222

; <label>:67:                                     ; preds = %65
  invoke void @_ZN17FiniteElementDataILi3EEC1ERKSt6vectorIjSaIjEEjj(%class.FiniteElementData* %23, %"class.std::vector.28"* dereferenceable(24) %24, i32 3, i32 -1)
          to label %68 unwind label %242

; <label>:68:                                     ; preds = %67
  %69 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %23, i32 0, i32 10
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  store i8 1, i8* %26, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.34"* %27) #12
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.7"* %25, i64 3, i8* dereferenceable(1) %26, %"class.std::allocator.34"* dereferenceable(1) %27)
          to label %72 unwind label %246

; <label>:72:                                     ; preds = %68
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.25"* %28) #12
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.23"* %22, i64 %71, %"class.std::vector.7"* dereferenceable(40) %25, %"class.std::allocator.25"* dereferenceable(1) %28)
          to label %73 unwind label %250

; <label>:73:                                     ; preds = %72
  invoke void @_ZN13FiniteElementILi3EEC2ERK17FiniteElementDataILi3EERKSt6vectorIbSaIbEERKS5_IS7_SaIS7_EE(%class.FiniteElement* %32, %class.FiniteElementData* dereferenceable(52) %13, %"class.std::vector.7"* dereferenceable(40) %17, %"class.std::vector.23"* dereferenceable(24) %22)
          to label %74 unwind label %270

; <label>:74:                                     ; preds = %73
  %75 = load i32, i32* @x.15
  %76 = load i32, i32* @y.16
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %74, %originalBB6alteredBB
  %83 = load i32, i32* @x.15
  %84 = load i32, i32* @y.16
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.23"* %22)
          to label %91 unwind label %250

; <label>:91:                                     ; preds = %originalBBpart28
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"* %28) #12
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.7"* %25)
          to label %92 unwind label %246

; <label>:92:                                     ; preds = %91
  call void @_ZNSaIbED2Ev(%"class.std::allocator.34"* %27) #12
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %24)
          to label %93 unwind label %222

; <label>:93:                                     ; preds = %92
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.7"* %17)
          to label %94 unwind label %218

; <label>:94:                                     ; preds = %93
  %95 = load i32, i32* @x.15
  %96 = load i32, i32* @y.16
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %94, %originalBB10alteredBB
  call void @_ZNSaIbED2Ev(%"class.std::allocator.34"* %21) #12
  %103 = load i32, i32* @x.15
  %104 = load i32, i32* @y.16
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %19)
          to label %111 unwind label %194

; <label>:111:                                    ; preds = %originalBBpart212
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %14)
  %112 = bitcast %class.FE_Nedelec* %31 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV10FE_NedelecILi3EE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %112, align 8
  %113 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %31, i32 0, i32 1
  %114 = load i32, i32* %12, align 4
  store i32 %114, i32* %113, align 4
  invoke void @_ZN10FE_NedelecILi3EE22initialize_constraintsEv(%class.FE_Nedelec* %31)
          to label %115 unwind label %367

; <label>:115:                                    ; preds = %111
  invoke void @_ZN10FE_NedelecILi3EE20initialize_embeddingEv(%class.FE_Nedelec* %31)
          to label %116 unwind label %367

; <label>:116:                                    ; preds = %115
  invoke void @_ZN10FE_NedelecILi3EE22initialize_restrictionEv(%class.FE_Nedelec* %31)
          to label %117 unwind label %367

; <label>:117:                                    ; preds = %116
  invoke void @_ZN10FE_NedelecILi3EE30initialize_unit_support_pointsEv(%class.FE_Nedelec* %31)
          to label %118 unwind label %367

; <label>:118:                                    ; preds = %117
  %119 = load i32, i32* @x.15
  %120 = load i32, i32* @y.16
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %118, %originalBB14alteredBB
  %127 = load i32, i32* @x.15
  %128 = load i32, i32* @y.16
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZN10FE_NedelecILi3EE35initialize_unit_face_support_pointsEv(%class.FE_Nedelec* %31)
          to label %135 unwind label %367

; <label>:135:                                    ; preds = %originalBBpart216
  invoke void @_ZNSt6vectorISt4pairIjjESaIS1_EEC2Ev(%"class.std::vector"* %29)
          to label %136 unwind label %367

; <label>:136:                                    ; preds = %135
  invoke void @_ZNSt6vectorISt4pairIjjESaIS1_EEC2Ev(%"class.std::vector"* %30)
          to label %137 unwind label %371

; <label>:137:                                    ; preds = %136
  %138 = load i32, i32* @x.15
  %139 = load i32, i32* @y.16
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %137, %originalBB18alteredBB
  %146 = bitcast %class.FE_Nedelec* %31 to %class.FiniteElementBase*
  %147 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %146, i32 0, i32 6
  %148 = load i32, i32* @x.15
  %149 = load i32, i32* @y.16
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @_ZNSt6vectorISt4pairIjjESaIS1_EE4swapERS3_(%"class.std::vector"* %147, %"class.std::vector"* dereferenceable(24) %29)
          to label %156 unwind label %375

; <label>:156:                                    ; preds = %originalBBpart220
  %157 = bitcast %class.FE_Nedelec* %31 to %class.FiniteElementBase*
  %158 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %157, i32 0, i32 7
  invoke void @_ZNSt6vectorISt4pairIjjESaIS1_EE4swapERS3_(%"class.std::vector"* %158, %"class.std::vector"* dereferenceable(24) %30)
          to label %159 unwind label %375

; <label>:159:                                    ; preds = %156
  invoke void @_ZNSt6vectorISt4pairIjjESaIS1_EED2Ev(%"class.std::vector"* %30)
          to label %160 unwind label %371

; <label>:160:                                    ; preds = %159
  %161 = load i32, i32* @x.15
  %162 = load i32, i32* @y.16
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %160, %originalBB22alteredBB
  %169 = load i32, i32* @x.15
  %170 = load i32, i32* @y.16
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  invoke void @_ZNSt6vectorISt4pairIjjESaIS1_EED2Ev(%"class.std::vector"* %29)
          to label %177 unwind label %367

; <label>:177:                                    ; preds = %originalBBpart224
  %178 = load i32, i32* @x.15
  %179 = load i32, i32* @y.16
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %177, %originalBB26alteredBB
  %186 = load i32, i32* @x.15
  %187 = load i32, i32* @y.16
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret void

; <label>:194:                                    ; preds = %originalBBpart212, %originalBBpart24, %originalBBpart2
  %195 = landingpad { i8*, i32 }
          cleanup
  %196 = extractvalue { i8*, i32 } %195, 0
  store i8* %196, i8** %15, align 8
  %197 = extractvalue { i8*, i32 } %195, 1
  store i32 %197, i32* %16, align 4
  br label %365

; <label>:198:                                    ; preds = %60
  %199 = load i32, i32* @x.15
  %200 = load i32, i32* @y.16
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %198, %originalBB30alteredBB
  %207 = landingpad { i8*, i32 }
          cleanup
  %208 = extractvalue { i8*, i32 } %207, 0
  store i8* %208, i8** %15, align 8
  %209 = extractvalue { i8*, i32 } %207, 1
  store i32 %209, i32* %16, align 4
  %210 = load i32, i32* @x.15
  %211 = load i32, i32* @y.16
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %331

; <label>:218:                                    ; preds = %93, %61
  %219 = landingpad { i8*, i32 }
          cleanup
  %220 = extractvalue { i8*, i32 } %219, 0
  store i8* %220, i8** %15, align 8
  %221 = extractvalue { i8*, i32 } %219, 1
  store i32 %221, i32* %16, align 4
  br label %314

; <label>:222:                                    ; preds = %92, %65
  %223 = load i32, i32* @x.15
  %224 = load i32, i32* @y.16
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %222, %originalBB34alteredBB
  %231 = landingpad { i8*, i32 }
          cleanup
  %232 = extractvalue { i8*, i32 } %231, 0
  store i8* %232, i8** %15, align 8
  %233 = extractvalue { i8*, i32 } %231, 1
  store i32 %233, i32* %16, align 4
  %234 = load i32, i32* @x.15
  %235 = load i32, i32* @y.16
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %296

; <label>:242:                                    ; preds = %67
  %243 = landingpad { i8*, i32 }
          cleanup
  %244 = extractvalue { i8*, i32 } %243, 0
  store i8* %244, i8** %15, align 8
  %245 = extractvalue { i8*, i32 } %243, 1
  store i32 %245, i32* %16, align 4
  br label %294

; <label>:246:                                    ; preds = %91, %68
  %247 = landingpad { i8*, i32 }
          cleanup
  %248 = extractvalue { i8*, i32 } %247, 0
  store i8* %248, i8** %15, align 8
  %249 = extractvalue { i8*, i32 } %247, 1
  store i32 %249, i32* %16, align 4
  br label %293

; <label>:250:                                    ; preds = %originalBBpart28, %72
  %251 = load i32, i32* @x.15
  %252 = load i32, i32* @y.16
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %250, %originalBB38alteredBB
  %259 = landingpad { i8*, i32 }
          cleanup
  %260 = extractvalue { i8*, i32 } %259, 0
  store i8* %260, i8** %15, align 8
  %261 = extractvalue { i8*, i32 } %259, 1
  store i32 %261, i32* %16, align 4
  %262 = load i32, i32* @x.15
  %263 = load i32, i32* @y.16
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %275

; <label>:270:                                    ; preds = %73
  %271 = landingpad { i8*, i32 }
          cleanup
  %272 = extractvalue { i8*, i32 } %271, 0
  store i8* %272, i8** %15, align 8
  %273 = extractvalue { i8*, i32 } %271, 1
  store i32 %273, i32* %16, align 4
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.23"* %22)
          to label %274 unwind label %438

; <label>:274:                                    ; preds = %270
  br label %275

; <label>:275:                                    ; preds = %274, %originalBBpart240
  %276 = load i32, i32* @x.15
  %277 = load i32, i32* @y.16
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %275, %originalBB42alteredBB
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"* %28) #12
  %284 = load i32, i32* @x.15
  %285 = load i32, i32* @y.16
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.7"* %25)
          to label %292 unwind label %438

; <label>:292:                                    ; preds = %originalBBpart244
  br label %293

; <label>:293:                                    ; preds = %292, %246
  call void @_ZNSaIbED2Ev(%"class.std::allocator.34"* %27) #12
  br label %294

; <label>:294:                                    ; preds = %293, %242
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %24)
          to label %295 unwind label %438

; <label>:295:                                    ; preds = %294
  br label %296

; <label>:296:                                    ; preds = %295, %originalBBpart236
  %297 = load i32, i32* @x.15
  %298 = load i32, i32* @y.16
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %296, %originalBB46alteredBB
  %305 = load i32, i32* @x.15
  %306 = load i32, i32* @y.16
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.7"* %17)
          to label %313 unwind label %438

; <label>:313:                                    ; preds = %originalBBpart248
  br label %314

; <label>:314:                                    ; preds = %313, %218
  %315 = load i32, i32* @x.15
  %316 = load i32, i32* @y.16
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %314, %originalBB50alteredBB
  call void @_ZNSaIbED2Ev(%"class.std::allocator.34"* %21) #12
  %323 = load i32, i32* @x.15
  %324 = load i32, i32* @y.16
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %331

; <label>:331:                                    ; preds = %originalBBpart252, %originalBBpart232
  %332 = load i32, i32* @x.15
  %333 = load i32, i32* @y.16
  %334 = sub i32 %332, 1
  %335 = mul i32 %332, %334
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %337, %338
  br i1 %339, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %331, %originalBB54alteredBB
  %340 = load i32, i32* @x.15
  %341 = load i32, i32* @y.16
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %19)
          to label %348 unwind label %438

; <label>:348:                                    ; preds = %originalBBpart256
  %349 = load i32, i32* @x.15
  %350 = load i32, i32* @y.16
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %348, %originalBB58alteredBB
  %357 = load i32, i32* @x.15
  %358 = load i32, i32* @y.16
  %359 = sub i32 %357, 1
  %360 = mul i32 %357, %359
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %362, %363
  br i1 %364, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %365

; <label>:365:                                    ; preds = %originalBBpart260, %194
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %14)
          to label %366 unwind label %438

; <label>:366:                                    ; preds = %365
  br label %433

; <label>:367:                                    ; preds = %originalBBpart224, %135, %originalBBpart216, %117, %116, %115, %111
  %368 = landingpad { i8*, i32 }
          cleanup
  %369 = extractvalue { i8*, i32 } %368, 0
  store i8* %369, i8** %15, align 8
  %370 = extractvalue { i8*, i32 } %368, 1
  store i32 %370, i32* %16, align 4
  br label %430

; <label>:371:                                    ; preds = %159, %136
  %372 = landingpad { i8*, i32 }
          cleanup
  %373 = extractvalue { i8*, i32 } %372, 0
  store i8* %373, i8** %15, align 8
  %374 = extractvalue { i8*, i32 } %372, 1
  store i32 %374, i32* %16, align 4
  br label %396

; <label>:375:                                    ; preds = %156, %originalBBpart220
  %376 = landingpad { i8*, i32 }
          cleanup
  %377 = extractvalue { i8*, i32 } %376, 0
  store i8* %377, i8** %15, align 8
  %378 = extractvalue { i8*, i32 } %376, 1
  store i32 %378, i32* %16, align 4
  invoke void @_ZNSt6vectorISt4pairIjjESaIS1_EED2Ev(%"class.std::vector"* %30)
          to label %379 unwind label %438

; <label>:379:                                    ; preds = %375
  %380 = load i32, i32* @x.15
  %381 = load i32, i32* @y.16
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %379, %originalBB62alteredBB
  %388 = load i32, i32* @x.15
  %389 = load i32, i32* @y.16
  %390 = sub i32 %388, 1
  %391 = mul i32 %388, %390
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %393, %394
  br i1 %395, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %396

; <label>:396:                                    ; preds = %originalBBpart264, %371
  %397 = load i32, i32* @x.15
  %398 = load i32, i32* @y.16
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %396, %originalBB66alteredBB
  %405 = load i32, i32* @x.15
  %406 = load i32, i32* @y.16
  %407 = sub i32 %405, 1
  %408 = mul i32 %405, %407
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %410, %411
  br i1 %412, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  invoke void @_ZNSt6vectorISt4pairIjjESaIS1_EED2Ev(%"class.std::vector"* %29)
          to label %413 unwind label %438

; <label>:413:                                    ; preds = %originalBBpart268
  %414 = load i32, i32* @x.15
  %415 = load i32, i32* @y.16
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %413, %originalBB70alteredBB
  %422 = load i32, i32* @x.15
  %423 = load i32, i32* @y.16
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %430

; <label>:430:                                    ; preds = %originalBBpart272, %367
  %431 = bitcast %class.FE_Nedelec* %31 to %class.FiniteElement*
  invoke void @_ZN13FiniteElementILi3EED2Ev(%class.FiniteElement* %431)
          to label %432 unwind label %438

; <label>:432:                                    ; preds = %430
  br label %433

; <label>:433:                                    ; preds = %432, %366
  %434 = load i8*, i8** %15, align 8
  %435 = load i32, i32* %16, align 4
  %436 = insertvalue { i8*, i32 } undef, i8* %434, 0
  %437 = insertvalue { i8*, i32 } %436, i32 %435, 1
  resume { i8*, i32 } %437

; <label>:438:                                    ; preds = %430, %originalBBpart268, %375, %365, %originalBBpart256, %originalBBpart248, %294, %originalBBpart244, %270
  %439 = landingpad { i8*, i32 }
          catch i8* null
  %440 = extractvalue { i8*, i32 } %439, 0
  call void @__clang_call_terminate(i8* %440) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %2
  %441 = alloca %class.FE_Nedelec*, align 8
  %442 = alloca i32, align 4
  %443 = alloca %class.FiniteElementData, align 4
  %444 = alloca %"class.std::vector.28", align 8
  %445 = alloca i8*
  %446 = alloca i32
  %447 = alloca %"class.std::vector.7", align 8
  %448 = alloca %class.FiniteElementData, align 4
  %449 = alloca %"class.std::vector.28", align 8
  %450 = alloca i8, align 1
  %451 = alloca %"class.std::allocator.34", align 1
  %452 = alloca %"class.std::vector.23", align 8
  %453 = alloca %class.FiniteElementData, align 4
  %454 = alloca %"class.std::vector.28", align 8
  %455 = alloca %"class.std::vector.7", align 8
  %456 = alloca i8, align 1
  %457 = alloca %"class.std::allocator.34", align 1
  %458 = alloca %"class.std::allocator.25", align 1
  %459 = alloca %"class.std::vector", align 8
  %460 = alloca %"class.std::vector", align 8
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %441, align 8
  store i32 %1, i32* %442, align 4
  %461 = load %class.FE_Nedelec*, %class.FE_Nedelec** %441, align 8
  %462 = bitcast %class.FE_Nedelec* %461 to %class.FiniteElement*
  %463 = load i32, i32* %442, align 4
  call void @_ZN10FE_NedelecILi3EE14get_dpo_vectorEj(%"class.std::vector.28"* sret %444, i32 %463)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %464 = load i32, i32* %12, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %74
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %94
  call void @_ZNSaIbED2Ev(%"class.std::allocator.34"* %21) #12
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %118
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %137
  %465 = bitcast %class.FE_Nedelec* %31 to %class.FiniteElementBase*
  %466 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %465, i32 0, i32 6
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %160
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %177
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %198
  %467 = landingpad { i8*, i32 }
          cleanup
  %468 = extractvalue { i8*, i32 } %467, 0
  store i8* %468, i8** %15, align 8
  %469 = extractvalue { i8*, i32 } %467, 1
  store i32 %469, i32* %16, align 4
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %222
  %470 = landingpad { i8*, i32 }
          cleanup
  %471 = extractvalue { i8*, i32 } %470, 0
  store i8* %471, i8** %15, align 8
  %472 = extractvalue { i8*, i32 } %470, 1
  store i32 %472, i32* %16, align 4
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %250
  %473 = landingpad { i8*, i32 }
          cleanup
  %474 = extractvalue { i8*, i32 } %473, 0
  store i8* %474, i8** %15, align 8
  %475 = extractvalue { i8*, i32 } %473, 1
  store i32 %475, i32* %16, align 4
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %275
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"* %28) #12
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %296
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %314
  call void @_ZNSaIbED2Ev(%"class.std::allocator.34"* %21) #12
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %331
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %348
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %379
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %396
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %413
  br label %originalBB70
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN10FE_NedelecILi3EE14get_dpo_vectorEj(%"class.std::vector.28"* noalias sret, i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i32, align 4
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::allocator.30", align 1
  %7 = alloca i8*
  %8 = alloca i32
  store i32 %1, i32* %3, align 4
  store i1 false, i1* %4, align 1
  store i32 0, i32* %5, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.30"* %6) #12
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.28"* %0, i64 4, i32* dereferenceable(4) %5, %"class.std::allocator.30"* dereferenceable(1) %6)
          to label %9 unwind label %30

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* @x.17
  %11 = load i32, i32* @y.18
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %6) #12
  %18 = load i32, i32* %3, align 4
  %19 = load i32, i32* @x.17
  %20 = load i32, i32* @y.18
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %27 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.28"* %0, i64 1)
          to label %28 unwind label %34

; <label>:28:                                     ; preds = %originalBBpart2
  store i32 %18, i32* %27, align 4
  store i1 true, i1* %4, align 1
  %29 = load i1, i1* %4, align 1
  br i1 %29, label %39, label %38

; <label>:30:                                     ; preds = %2
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %7, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %8, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %6) #12
  br label %41

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  store i8* %36, i8** %7, align 8
  %37 = extractvalue { i8*, i32 } %35, 1
  store i32 %37, i32* %8, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %0)
          to label %40 unwind label %46

; <label>:38:                                     ; preds = %28
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"* %0)
  br label %39

; <label>:39:                                     ; preds = %38, %28
  ret void

; <label>:40:                                     ; preds = %34
  br label %41

; <label>:41:                                     ; preds = %40, %30
  %42 = load i8*, i8** %7, align 8
  %43 = load i32, i32* %8, align 4
  %44 = insertvalue { i8*, i32 } undef, i8* %42, 0
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1
  resume { i8*, i32 } %45

; <label>:46:                                     ; preds = %34
  %47 = landingpad { i8*, i32 }
          catch i8* null
  %48 = extractvalue { i8*, i32 } %47, 0
  call void @__clang_call_terminate(i8* %48) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %9
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %6) #12
  %49 = load i32, i32* %3, align 4
  br label %originalBB
}

declare void @_ZN17FiniteElementDataILi3EEC1ERKSt6vectorIjSaIjEEjj(%class.FiniteElementData*, %"class.std::vector.28"* dereferenceable(24), i32, i32) unnamed_addr #2

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIbEC2Ev(%"class.std::allocator.34"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.34"*, align 8
  store %"class.std::allocator.34"* %0, %"class.std::allocator.34"** %2, align 8
  %3 = load %"class.std::allocator.34"*, %"class.std::allocator.34"** %2, align 8
  %4 = bitcast %"class.std::allocator.34"* %3 to %"class.__gnu_cxx::new_allocator.35"*
  call void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.35"* %4) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.7"*, i64, i8* dereferenceable(1), %"class.std::allocator.34"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.7"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.std::allocator.34"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store %"class.std::allocator.34"* %3, %"class.std::allocator.34"** %8, align 8
  %11 = load %"class.std::vector.7"*, %"class.std::vector.7"** %5, align 8
  %12 = bitcast %"class.std::vector.7"* %11 to %"struct.std::_Bvector_base"*
  %13 = load %"class.std::allocator.34"*, %"class.std::allocator.34"** %8, align 8
  call void @_ZNSt13_Bvector_baseISaIbEEC2ERKS0_(%"struct.std::_Bvector_base"* %12, %"class.std::allocator.34"* dereferenceable(1) %13)
  %14 = load i64, i64* %6, align 8
  invoke void @_ZNSt6vectorIbSaIbEE13_M_initializeEm(%"class.std::vector.7"* %11, i64 %14)
          to label %15 unwind label %36

; <label>:15:                                     ; preds = %4
  %16 = load i32, i32* @x.21
  %17 = load i32, i32* @y.22
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i8*, i8** %7, align 8
  %25 = load i8, i8* %24, align 1
  %26 = trunc i8 %25 to i1
  %27 = load i32, i32* @x.21
  %28 = load i32, i32* @y.22
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIbSaIbEE19_M_initialize_valueEb(%"class.std::vector.7"* %11, i1 zeroext %26)
          to label %35 unwind label %36

; <label>:35:                                     ; preds = %originalBBpart2
  ret void

; <label>:36:                                     ; preds = %originalBBpart2, %4
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %9, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %10, align 4
  %40 = bitcast %"class.std::vector.7"* %11 to %"struct.std::_Bvector_base"*
  invoke void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %40)
          to label %41 unwind label %47

; <label>:41:                                     ; preds = %36
  br label %42

; <label>:42:                                     ; preds = %41
  %43 = load i8*, i8** %9, align 8
  %44 = load i32, i32* %10, align 4
  %45 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  resume { i8*, i32 } %46

; <label>:47:                                     ; preds = %36
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %15
  %50 = load i8*, i8** %7, align 8
  %51 = load i8, i8* %50, align 1
  %52 = trunc i8 %51 to i1
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.25"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %2, align 8
  %3 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %2, align 8
  %4 = bitcast %"class.std::allocator.25"* %3 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2Ev(%"class.__gnu_cxx::new_allocator.26"* %4) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.23"*, i64, %"class.std::vector.7"* dereferenceable(40), %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.25
  %6 = load i32, i32* @y.26
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.std::vector.23"*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.std::vector.7"*, align 8
  %16 = alloca %"class.std::allocator.25"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %13, align 8
  store i64 %1, i64* %14, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %15, align 8
  store %"class.std::allocator.25"* %3, %"class.std::allocator.25"** %16, align 8
  %19 = load %"class.std::vector.23"*, %"class.std::vector.23"** %13, align 8
  %20 = bitcast %"class.std::vector.23"* %19 to %"struct.std::_Vector_base.24"*
  %21 = load i64, i64* %14, align 8
  %22 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %16, align 8
  %23 = call i64 @_ZNSt6vectorIS_IbSaIbEESaIS1_EE17_S_check_init_lenEmRKS2_(i64 %21, %"class.std::allocator.25"* dereferenceable(1) %22)
  %24 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %16, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.24"* %20, i64 %23, %"class.std::allocator.25"* dereferenceable(1) %24)
  %25 = load i64, i64* %14, align 8
  %26 = load %"class.std::vector.7"*, %"class.std::vector.7"** %15, align 8
  %27 = load i32, i32* @x.25
  %28 = load i32, i32* @y.26
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.23"* %19, i64 %25, %"class.std::vector.7"* dereferenceable(40) %26)
          to label %35 unwind label %52

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load i32, i32* @x.25
  %37 = load i32, i32* @y.26
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %44 = load i32, i32* @x.25
  %45 = load i32, i32* @y.26
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:52:                                     ; preds = %originalBBpart2
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %17, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %18, align 4
  %56 = bitcast %"class.std::vector.23"* %19 to %"struct.std::_Vector_base.24"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev(%"struct.std::_Vector_base.24"* %56)
          to label %57 unwind label %79

; <label>:57:                                     ; preds = %52
  %58 = load i32, i32* @x.25
  %59 = load i32, i32* @y.26
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %57, %originalBB6alteredBB
  %66 = load i32, i32* @x.25
  %67 = load i32, i32* @y.26
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %74

; <label>:74:                                     ; preds = %originalBBpart28
  %75 = load i8*, i8** %17, align 8
  %76 = load i32, i32* %18, align 4
  %77 = insertvalue { i8*, i32 } undef, i8* %75, 0
  %78 = insertvalue { i8*, i32 } %77, i32 %76, 1
  resume { i8*, i32 } %78

; <label>:79:                                     ; preds = %52
  %80 = landingpad { i8*, i32 }
          catch i8* null
  %81 = extractvalue { i8*, i32 } %80, 0
  call void @__clang_call_terminate(i8* %81) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %4
  %82 = alloca %"class.std::vector.23"*, align 8
  %83 = alloca i64, align 8
  %84 = alloca %"class.std::vector.7"*, align 8
  %85 = alloca %"class.std::allocator.25"*, align 8
  %86 = alloca i8*
  %87 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %82, align 8
  store i64 %1, i64* %83, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %84, align 8
  store %"class.std::allocator.25"* %3, %"class.std::allocator.25"** %85, align 8
  %88 = load %"class.std::vector.23"*, %"class.std::vector.23"** %82, align 8
  %89 = bitcast %"class.std::vector.23"* %88 to %"struct.std::_Vector_base.24"*
  %90 = load i64, i64* %83, align 8
  %91 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %85, align 8
  %92 = call i64 @_ZNSt6vectorIS_IbSaIbEESaIS1_EE17_S_check_init_lenEmRKS2_(i64 %90, %"class.std::allocator.25"* dereferenceable(1) %91)
  %93 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %85, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.24"* %89, i64 %92, %"class.std::allocator.25"* dereferenceable(1) %93)
  %94 = load i64, i64* %83, align 8
  %95 = load %"class.std::vector.7"*, %"class.std::vector.7"** %84, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %57
  br label %originalBB6
}

declare void @_ZN13FiniteElementILi3EEC2ERK17FiniteElementDataILi3EERKSt6vectorIbSaIbEERKS5_IS7_SaIS7_EE(%class.FiniteElement*, %class.FiniteElementData* dereferenceable(52), %"class.std::vector.7"* dereferenceable(40), %"class.std::vector.23"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.23"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.23"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %2, align 8
  %5 = load %"class.std::vector.23"*, %"class.std::vector.23"** %2, align 8
  %6 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"class.std::vector.7"*, %"class.std::vector.7"** %9, align 8
  %11 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %12 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %"class.std::vector.7"*, %"class.std::vector.7"** %14, align 8
  %16 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %16)
          to label %18 unwind label %37

; <label>:18:                                     ; preds = %1
  invoke void @_ZSt8_DestroyIPSt6vectorIbSaIbEES2_EvT_S4_RSaIT0_E(%"class.std::vector.7"* %10, %"class.std::vector.7"* %15, %"class.std::allocator.25"* dereferenceable(1) %17)
          to label %19 unwind label %37

; <label>:19:                                     ; preds = %18
  %20 = load i32, i32* @x.27
  %21 = load i32, i32* @y.28
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev(%"struct.std::_Vector_base.24"* %28)
  %29 = load i32, i32* @x.27
  %30 = load i32, i32* @y.28
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:37:                                     ; preds = %18, %1
  %38 = load i32, i32* @x.27
  %39 = load i32, i32* @y.28
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %3, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %4, align 4
  %49 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %50 = load i32, i32* @x.27
  %51 = load i32, i32* @y.28
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev(%"struct.std::_Vector_base.24"* %49)
          to label %58 unwind label %64

; <label>:58:                                     ; preds = %originalBBpart24
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i8*, i8** %3, align 8
  %61 = load i32, i32* %4, align 4
  %62 = insertvalue { i8*, i32 } undef, i8* %60, 0
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1
  resume { i8*, i32 } %63

; <label>:64:                                     ; preds = %originalBBpart24
  %65 = load i32, i32* @x.27
  %66 = load i32, i32* @y.28
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %64, %originalBB6alteredBB
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  call void @__clang_call_terminate(i8* %74) #10
  %75 = load i32, i32* @x.27
  %76 = load i32, i32* @y.28
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  %83 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev(%"struct.std::_Vector_base.24"* %83)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %84 = landingpad { i8*, i32 }
          cleanup
  %85 = extractvalue { i8*, i32 } %84, 0
  store i8* %85, i8** %3, align 8
  %86 = extractvalue { i8*, i32 } %84, 1
  store i32 %86, i32* %4, align 4
  %87 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  %88 = landingpad { i8*, i32 }
          catch i8* null
  %89 = extractvalue { i8*, i32 } %88, 0
  call void @__clang_call_terminate(i8* %89) #10
  br label %originalBB6
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #3 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #12
  call void @_ZSt9terminatev() #10
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %2, align 8
  %3 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %2, align 8
  %4 = bitcast %"class.std::allocator.25"* %3 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEED2Ev(%"class.__gnu_cxx::new_allocator.26"* %4) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.7"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %2, align 8
  %3 = load %"class.std::vector.7"*, %"class.std::vector.7"** %2, align 8
  %4 = bitcast %"class.std::vector.7"* %3 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIbED2Ev(%"class.std::allocator.34"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.34"*, align 8
  store %"class.std::allocator.34"* %0, %"class.std::allocator.34"** %2, align 8
  %3 = load %"class.std::allocator.34"*, %"class.std::allocator.34"** %2, align 8
  %4 = bitcast %"class.std::allocator.34"* %3 to %"class.__gnu_cxx::new_allocator.35"*
  call void @_ZN9__gnu_cxx13new_allocatorIbED2Ev(%"class.__gnu_cxx::new_allocator.35"* %4) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.28"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.28"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %2, align 8
  %5 = load %"class.std::vector.28"*, %"class.std::vector.28"** %2, align 8
  %6 = bitcast %"class.std::vector.28"* %5 to %"struct.std::_Vector_base.29"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %"class.std::vector.28"* %5 to %"struct.std::_Vector_base.29"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %12 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load i32*, i32** %14, align 8
  %16 = bitcast %"class.std::vector.28"* %5 to %"struct.std::_Vector_base.29"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %16)
          to label %18 unwind label %21

; <label>:18:                                     ; preds = %1
  invoke void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %10, i32* %15, %"class.std::allocator.30"* dereferenceable(1) %17)
          to label %19 unwind label %21

; <label>:19:                                     ; preds = %18
  %20 = bitcast %"class.std::vector.28"* %5 to %"struct.std::_Vector_base.29"*
  call void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.29"* %20)
  ret void

; <label>:21:                                     ; preds = %18, %1
  %22 = load i32, i32* @x.37
  %23 = load i32, i32* @y.38
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %3, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %4, align 4
  %33 = bitcast %"class.std::vector.28"* %5 to %"struct.std::_Vector_base.29"*
  %34 = load i32, i32* @x.37
  %35 = load i32, i32* @y.38
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.29"* %33)
          to label %42 unwind label %48

; <label>:42:                                     ; preds = %originalBBpart2
  br label %43

; <label>:43:                                     ; preds = %42
  %44 = load i8*, i8** %3, align 8
  %45 = load i32, i32* %4, align 4
  %46 = insertvalue { i8*, i32 } undef, i8* %44, 0
  %47 = insertvalue { i8*, i32 } %46, i32 %45, 1
  resume { i8*, i32 } %47

; <label>:48:                                     ; preds = %originalBBpart2
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %21
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  %54 = bitcast %"class.std::vector.28"* %5 to %"struct.std::_Vector_base.29"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN10FE_NedelecILi3EE22initialize_constraintsEv(%class.FE_Nedelec*) #0 comdat align 2 {
  %2 = alloca %class.FE_Nedelec*, align 8
  %3 = alloca %class.TableIndices, align 4
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %2, align 8
  %4 = load %class.FE_Nedelec*, %class.FE_Nedelec** %2, align 8
  %5 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = load i32, i32* @_ZN10FE_NedelecILi3EE8Matrices21n_constraint_matricesE, align 4
  %8 = add i32 %7, 1
  %9 = icmp ult i32 %6, %8
  br i1 %9, label %10, label %27

; <label>:10:                                     ; preds = %1
  %11 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %12 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %11, i32 0, i32 5
  %13 = bitcast %class.FullMatrix* %12 to %class.TableBase*
  %14 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %15 = call i64 @_ZNK17FiniteElementBaseILi3EE26interface_constraints_sizeEv(%class.FiniteElementBase* %14)
  %16 = getelementptr inbounds %class.TableIndices, %class.TableIndices* %3, i32 0, i32 0
  %17 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %16, i32 0, i32 0
  %18 = bitcast [2 x i32]* %17 to i64*
  store i64 %15, i64* %18, align 4
  call void @_ZN9TableBaseILi2EdE6reinitERK12TableIndicesILi2EE(%class.TableBase* %13, %class.TableIndices* dereferenceable(8) %3)
  %19 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %20 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %19, i32 0, i32 5
  %21 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %4, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = sub i32 %22, 1
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [0 x double*], [0 x double*]* @_ZN10FE_NedelecILi3EE8Matrices19constraint_matricesE, i64 0, i64 %24
  %26 = load double*, double** %25, align 8
  call void @_ZN10FullMatrixIdE4fillIdEEvPKT_(%class.FullMatrix* %20, double* %26)
  br label %27

; <label>:27:                                     ; preds = %10, %1
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN10FE_NedelecILi3EE20initialize_embeddingEv(%class.FE_Nedelec*) #0 comdat align 2 {
  %2 = alloca %class.FE_Nedelec*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca double, align 8
  %6 = alloca i32, align 4
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %2, align 8
  %7 = load %class.FE_Nedelec*, %class.FE_Nedelec** %2, align 8
  %8 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = load i32, i32* @_ZN10FE_NedelecILi3EE8Matrices20n_embedding_matricesE, align 4
  %11 = add i32 %10, 1
  %12 = icmp ult i32 %9, %11
  br i1 %12, label %13, label %163

; <label>:13:                                     ; preds = %1
  %14 = load i32, i32* @x.41
  %15 = load i32, i32* @y.42
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %7, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sub i32 %23, 1
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds [0 x [8 x double*]], [0 x [8 x double*]]* @_ZN10FE_NedelecILi3EE8Matrices9embeddingE, i64 0, i64 %25
  %27 = getelementptr inbounds [8 x double*], [8 x double*]* %26, i64 0, i64 0
  %28 = load double*, double** %27, align 8
  %29 = icmp ne double* %28, null
  %30 = load i32, i32* @x.41
  %31 = load i32, i32* @y.42
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %163

; <label>:38:                                     ; preds = %originalBBpart2
  store i32 0, i32* %3, align 4
  br label %39

; <label>:39:                                     ; preds = %originalBBpart213, %38
  %40 = load i32, i32* @x.41
  %41 = load i32, i32* @y.42
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = load i32, i32* %3, align 4
  %49 = icmp ult i32 %48, 8
  %50 = load i32, i32* @x.41
  %51 = load i32, i32* @y.42
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %49, label %58, label %162

; <label>:58:                                     ; preds = %originalBBpart24
  %59 = bitcast %class.FE_Nedelec* %7 to %class.FiniteElementBase*
  %60 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %59, i32 0, i32 4
  %61 = load i32, i32* %3, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %60, i64 0, i64 %62
  %64 = bitcast %class.FullMatrix* %63 to %class.Table*
  %65 = bitcast %class.FE_Nedelec* %7 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 24
  %67 = bitcast i8* %66 to %class.FiniteElementData*
  %68 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %67, i32 0, i32 10
  %69 = load i32, i32* %68, align 8
  %70 = bitcast %class.FE_Nedelec* %7 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 24
  %72 = bitcast i8* %71 to %class.FiniteElementData*
  %73 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %72, i32 0, i32 10
  %74 = load i32, i32* %73, align 8
  call void @_ZN5TableILi2EdE6reinitEjj(%class.Table* %64, i32 %69, i32 %74)
  %75 = bitcast %class.FE_Nedelec* %7 to %class.FiniteElementBase*
  %76 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %75, i32 0, i32 4
  %77 = load i32, i32* %3, align 4
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %76, i64 0, i64 %78
  %80 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %7, i32 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = sub i32 %81, 1
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds [0 x [8 x double*]], [0 x [8 x double*]]* @_ZN10FE_NedelecILi3EE8Matrices9embeddingE, i64 0, i64 %83
  %85 = load i32, i32* %3, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds [8 x double*], [8 x double*]* %84, i64 0, i64 %86
  %88 = load double*, double** %87, align 8
  call void @_ZN10FullMatrixIdE4fillIdEEvPKT_(%class.FullMatrix* %79, double* %88)
  store i32 0, i32* %4, align 4
  br label %89

; <label>:89:                                     ; preds = %139, %58
  %90 = load i32, i32* @x.41
  %91 = load i32, i32* @y.42
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %89, %originalBB6alteredBB
  %98 = load i32, i32* %4, align 4
  %99 = bitcast %class.FE_Nedelec* %7 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 24
  %101 = bitcast i8* %100 to %class.FiniteElementData*
  %102 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %101, i32 0, i32 10
  %103 = load i32, i32* %102, align 8
  %104 = icmp ult i32 %98, %103
  %105 = load i32, i32* @x.41
  %106 = load i32, i32* @y.42
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %104, label %113, label %142

; <label>:113:                                    ; preds = %originalBBpart28
  store double 0.000000e+00, double* %5, align 8
  store i32 0, i32* %6, align 4
  br label %114

; <label>:114:                                    ; preds = %135, %113
  %115 = load i32, i32* %6, align 4
  %116 = bitcast %class.FE_Nedelec* %7 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 24
  %118 = bitcast i8* %117 to %class.FiniteElementData*
  %119 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %118, i32 0, i32 10
  %120 = load i32, i32* %119, align 8
  %121 = icmp ult i32 %115, %120
  br i1 %121, label %122, label %138

; <label>:122:                                    ; preds = %114
  %123 = bitcast %class.FE_Nedelec* %7 to %class.FiniteElementBase*
  %124 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %123, i32 0, i32 4
  %125 = load i32, i32* %3, align 4
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %124, i64 0, i64 %126
  %128 = bitcast %class.FullMatrix* %127 to %class.Table*
  %129 = load i32, i32* %4, align 4
  %130 = load i32, i32* %6, align 4
  %131 = call dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %128, i32 %129, i32 %130)
  %132 = load double, double* %131, align 8
  %133 = load double, double* %5, align 8
  %134 = fadd double %133, %132
  store double %134, double* %5, align 8
  br label %135

; <label>:135:                                    ; preds = %122
  %136 = load i32, i32* %6, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %6, align 4
  br label %114

; <label>:138:                                    ; preds = %114
  br label %139

; <label>:139:                                    ; preds = %138
  %140 = load i32, i32* %4, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %4, align 4
  br label %89

; <label>:142:                                    ; preds = %originalBBpart28
  br label %143

; <label>:143:                                    ; preds = %142
  %144 = load i32, i32* @x.41
  %145 = load i32, i32* @y.42
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %143, %originalBB10alteredBB
  %152 = load i32, i32* %3, align 4
  %153 = add i32 %152, 1
  store i32 %153, i32* %3, align 4
  %154 = load i32, i32* @x.41
  %155 = load i32, i32* @y.42
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart213, label %originalBB10alteredBB

originalBBpart213:                                ; preds = %originalBB10
  br label %39

; <label>:162:                                    ; preds = %originalBBpart24
  br label %163

; <label>:163:                                    ; preds = %162, %originalBBpart2, %1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %13
  %164 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %7, i32 0, i32 1
  %165 = load i32, i32* %164, align 4
  %_ = shl i32 %165, 1
  %166 = sub i32 %165, 1
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds [0 x [8 x double*]], [0 x [8 x double*]]* @_ZN10FE_NedelecILi3EE8Matrices9embeddingE, i64 0, i64 %167
  %169 = getelementptr inbounds [8 x double*], [8 x double*]* %168, i64 0, i64 0
  %170 = load double*, double** %169, align 8
  %171 = icmp ne double* %170, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %172 = load i32, i32* %3, align 4
  %173 = icmp ult i32 %172, 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %89
  %174 = load i32, i32* %4, align 4
  %175 = bitcast %class.FE_Nedelec* %7 to i8*
  %176 = getelementptr inbounds i8, i8* %175, i64 24
  %177 = bitcast i8* %176 to %class.FiniteElementData*
  %178 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %177, i32 0, i32 10
  %179 = load i32, i32* %178, align 8
  %180 = icmp ult i32 %174, %179
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %143
  %181 = load i32, i32* %3, align 4
  %_11 = shl i32 %181, 1
  %182 = add i32 %181, 1
  store i32 %182, i32* %3, align 4
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN10FE_NedelecILi3EE22initialize_restrictionEv(%class.FE_Nedelec*) #0 comdat align 2 {
  %2 = alloca %class.FE_Nedelec*, align 8
  %3 = alloca i32, align 4
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %2, align 8
  %4 = load %class.FE_Nedelec*, %class.FE_Nedelec** %2, align 8
  %5 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %124 [
    i32 1, label %7
  ]

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.43
  %9 = load i32, i32* @y.44
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  store i32 0, i32* %3, align 4
  %16 = load i32, i32* @x.43
  %17 = load i32, i32* @y.44
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %24

; <label>:24:                                     ; preds = %originalBBpart210, %originalBBpart2
  %25 = load i32, i32* %3, align 4
  %26 = icmp ult i32 %25, 8
  br i1 %26, label %27, label %63

; <label>:27:                                     ; preds = %24
  %28 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %29 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %28, i32 0, i32 3
  %30 = load i32, i32* %3, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %29, i64 0, i64 %31
  %33 = bitcast %class.FullMatrix* %32 to %class.Table*
  %34 = bitcast %class.FE_Nedelec* %4 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 24
  %36 = bitcast i8* %35 to %class.FiniteElementData*
  %37 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %36, i32 0, i32 10
  %38 = load i32, i32* %37, align 8
  %39 = bitcast %class.FE_Nedelec* %4 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 24
  %41 = bitcast i8* %40 to %class.FiniteElementData*
  %42 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %41, i32 0, i32 10
  %43 = load i32, i32* %42, align 8
  call void @_ZN5TableILi2EdE6reinitEjj(%class.Table* %33, i32 %38, i32 %43)
  br label %44

; <label>:44:                                     ; preds = %27
  %45 = load i32, i32* @x.43
  %46 = load i32, i32* @y.44
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %44, %originalBB1alteredBB
  %53 = load i32, i32* %3, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %3, align 4
  %55 = load i32, i32* @x.43
  %56 = load i32, i32* @y.44
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart210, label %originalBB1alteredBB

originalBBpart210:                                ; preds = %originalBB1
  br label %24

; <label>:63:                                     ; preds = %24
  %64 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %65 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %64, i32 0, i32 3
  %66 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %65, i64 0, i64 0
  %67 = bitcast %class.FullMatrix* %66 to %class.Table*
  %68 = call dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %67, i32 0, i32 0)
  store double 2.000000e+00, double* %68, align 8
  %69 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %70 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %69, i32 0, i32 3
  %71 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %70, i64 0, i64 0
  %72 = bitcast %class.FullMatrix* %71 to %class.Table*
  %73 = call dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %72, i32 3, i32 3)
  store double 2.000000e+00, double* %73, align 8
  %74 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %75 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %74, i32 0, i32 3
  %76 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %75, i64 0, i64 1
  %77 = bitcast %class.FullMatrix* %76 to %class.Table*
  %78 = call dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %77, i32 1, i32 1)
  store double 2.000000e+00, double* %78, align 8
  %79 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %80 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %79, i32 0, i32 3
  %81 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %80, i64 0, i64 3
  %82 = bitcast %class.FullMatrix* %81 to %class.Table*
  %83 = call dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %82, i32 2, i32 2)
  store double 2.000000e+00, double* %83, align 8
  %84 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %85 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %84, i32 0, i32 3
  %86 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %85, i64 0, i64 4
  %87 = bitcast %class.FullMatrix* %86 to %class.Table*
  %88 = call dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %87, i32 4, i32 4)
  store double 2.000000e+00, double* %88, align 8
  %89 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %90 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %89, i32 0, i32 3
  %91 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %90, i64 0, i64 4
  %92 = bitcast %class.FullMatrix* %91 to %class.Table*
  %93 = call dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %92, i32 7, i32 7)
  store double 2.000000e+00, double* %93, align 8
  %94 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %95 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %94, i32 0, i32 3
  %96 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %95, i64 0, i64 5
  %97 = bitcast %class.FullMatrix* %96 to %class.Table*
  %98 = call dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %97, i32 5, i32 5)
  store double 2.000000e+00, double* %98, align 8
  %99 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %100 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %99, i32 0, i32 3
  %101 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %100, i64 0, i64 7
  %102 = bitcast %class.FullMatrix* %101 to %class.Table*
  %103 = call dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %102, i32 6, i32 6)
  store double 2.000000e+00, double* %103, align 8
  %104 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %105 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %104, i32 0, i32 3
  %106 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %105, i64 0, i64 0
  %107 = bitcast %class.FullMatrix* %106 to %class.Table*
  %108 = call dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %107, i32 8, i32 8)
  store double 2.000000e+00, double* %108, align 8
  %109 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %110 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %109, i32 0, i32 3
  %111 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %110, i64 0, i64 1
  %112 = bitcast %class.FullMatrix* %111 to %class.Table*
  %113 = call dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %112, i32 9, i32 9)
  store double 2.000000e+00, double* %113, align 8
  %114 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %115 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %114, i32 0, i32 3
  %116 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %115, i64 0, i64 2
  %117 = bitcast %class.FullMatrix* %116 to %class.Table*
  %118 = call dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %117, i32 10, i32 10)
  store double 2.000000e+00, double* %118, align 8
  %119 = bitcast %class.FE_Nedelec* %4 to %class.FiniteElementBase*
  %120 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %119, i32 0, i32 3
  %121 = getelementptr inbounds [8 x %class.FullMatrix], [8 x %class.FullMatrix]* %120, i64 0, i64 3
  %122 = bitcast %class.FullMatrix* %121 to %class.Table*
  %123 = call dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %122, i32 11, i32 11)
  store double 2.000000e+00, double* %123, align 8
  br label %125

; <label>:124:                                    ; preds = %1
  br label %125

; <label>:125:                                    ; preds = %124, %63
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %7
  store i32 0, i32* %3, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  %126 = load i32, i32* %3, align 4
  %_ = sub i32 0, %126
  %gen = add i32 %_, 1
  %_2 = sub i32 %126, 1
  %gen3 = mul i32 %_2, 1
  %_4 = sub i32 0, %126
  %gen5 = add i32 %_4, 1
  %_6 = shl i32 %126, 1
  %_7 = sub i32 %126, 1
  %gen8 = mul i32 %_7, 1
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN10FE_NedelecILi3EE30initialize_unit_support_pointsEv(%class.FE_Nedelec*) #0 comdat align 2 {
  %2 = alloca %class.FE_Nedelec*, align 8
  %3 = alloca %class.Point, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %class.Point, align 8
  %8 = alloca %class.Point, align 8
  %9 = alloca %class.Point, align 8
  %10 = alloca %class.Point, align 8
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %2, align 8
  %11 = load %class.FE_Nedelec*, %class.FE_Nedelec** %2, align 8
  %12 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %54 [
    i32 1, label %14
  ]

; <label>:14:                                     ; preds = %1
  %15 = bitcast %class.FE_Nedelec* %11 to %class.FiniteElementBase*
  %16 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %15, i32 0, i32 12
  call void @_ZN5PointILi3EEC2Ev(%class.Point* %3)
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE6resizeEmS1_(%"class.std::vector.11"* %16, i64 12, %class.Point* %3)
  store i32 0, i32* %4, align 4
  br label %17

; <label>:17:                                     ; preds = %50, %14
  %18 = load i32, i32* @x.45
  %19 = load i32, i32* @y.46
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = load i32, i32* %4, align 4
  %27 = icmp ult i32 %26, 12
  %28 = load i32, i32* @x.45
  %29 = load i32, i32* @y.46
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %27, label %36, label %53

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = load i32, i32* %4, align 4
  %38 = call i32 @_ZN12GeometryInfoILi3EE25vertices_adjacent_to_lineEjj(i32 %37, i32 0)
  store i32 %38, i32* %5, align 4
  %39 = load i32, i32* %4, align 4
  %40 = call i32 @_ZN12GeometryInfoILi3EE25vertices_adjacent_to_lineEjj(i32 %39, i32 1)
  store i32 %40, i32* %6, align 4
  %41 = load i32, i32* %5, align 4
  call void @_ZN12GeometryInfoILi3EE16unit_cell_vertexEj(%class.Point* sret %7, i32 %41)
  %42 = load i32, i32* %6, align 4
  call void @_ZN12GeometryInfoILi3EE16unit_cell_vertexEj(%class.Point* sret %8, i32 %42)
  %43 = bitcast %class.Point* %8 to %class.Tensor*
  call void @_ZNK5PointILi3EEplERK6TensorILi1ELi3EE(%class.Point* sret %10, %class.Point* %7, %class.Tensor* dereferenceable(24) %43)
  call void @_ZNK5PointILi3EEdvEd(%class.Point* sret %9, %class.Point* %10, double 2.000000e+00)
  %44 = bitcast %class.FE_Nedelec* %11 to %class.FiniteElementBase*
  %45 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %44, i32 0, i32 12
  %46 = load i32, i32* %4, align 4
  %47 = zext i32 %46 to i64
  %48 = call dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.11"* %45, i64 %47)
  %49 = call dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %48, %class.Point* dereferenceable(24) %9)
  br label %50

; <label>:50:                                     ; preds = %36
  %51 = load i32, i32* %4, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %4, align 4
  br label %17

; <label>:53:                                     ; preds = %originalBBpart2
  br label %71

; <label>:54:                                     ; preds = %1
  %55 = load i32, i32* @x.45
  %56 = load i32, i32* @y.46
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %54, %originalBB1alteredBB
  %63 = load i32, i32* @x.45
  %64 = load i32, i32* @y.46
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %71

; <label>:71:                                     ; preds = %originalBBpart24, %53
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %17
  %72 = load i32, i32* %4, align 4
  %73 = icmp ult i32 %72, 12
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %54
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN10FE_NedelecILi3EE35initialize_unit_face_support_pointsEv(%class.FE_Nedelec*) #0 comdat align 2 {
  %2 = alloca %class.FE_Nedelec*, align 8
  %3 = alloca %class.Point.21, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %class.Point.21, align 8
  %8 = alloca %class.Point.21, align 8
  %9 = alloca %class.Point.21, align 8
  %10 = alloca %class.Point.21, align 8
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %2, align 8
  %11 = load %class.FE_Nedelec*, %class.FE_Nedelec** %2, align 8
  %12 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %70 [
    i32 1, label %14
  ]

; <label>:14:                                     ; preds = %1
  %15 = bitcast %class.FE_Nedelec* %11 to %class.FiniteElementBase*
  %16 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %15, i32 0, i32 13
  call void @_ZN5PointILi2EEC2Ev(%class.Point.21* %3)
  call void @_ZNSt6vectorI5PointILi2EESaIS1_EE6resizeEmS1_(%"class.std::vector.16"* %16, i64 4, %class.Point.21* %3)
  store i32 0, i32* %4, align 4
  br label %17

; <label>:17:                                     ; preds = %50, %14
  %18 = load i32, i32* @x.47
  %19 = load i32, i32* @y.48
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = load i32, i32* %4, align 4
  %27 = icmp ult i32 %26, 4
  %28 = load i32, i32* @x.47
  %29 = load i32, i32* @y.48
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %27, label %36, label %53

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = load i32, i32* %4, align 4
  %38 = call i32 @_ZN12GeometryInfoILi2EE25vertices_adjacent_to_lineEjj(i32 %37, i32 0)
  store i32 %38, i32* %5, align 4
  %39 = load i32, i32* %4, align 4
  %40 = call i32 @_ZN12GeometryInfoILi2EE25vertices_adjacent_to_lineEjj(i32 %39, i32 1)
  store i32 %40, i32* %6, align 4
  %41 = load i32, i32* %5, align 4
  call void @_ZN12GeometryInfoILi2EE16unit_cell_vertexEj(%class.Point.21* sret %7, i32 %41)
  %42 = load i32, i32* %6, align 4
  call void @_ZN12GeometryInfoILi2EE16unit_cell_vertexEj(%class.Point.21* sret %8, i32 %42)
  %43 = bitcast %class.Point.21* %8 to %class.Tensor.22*
  call void @_ZNK5PointILi2EEplERK6TensorILi1ELi2EE(%class.Point.21* sret %10, %class.Point.21* %7, %class.Tensor.22* dereferenceable(16) %43)
  call void @_ZNK5PointILi2EEdvEd(%class.Point.21* sret %9, %class.Point.21* %10, double 2.000000e+00)
  %44 = bitcast %class.FE_Nedelec* %11 to %class.FiniteElementBase*
  %45 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %44, i32 0, i32 13
  %46 = load i32, i32* %4, align 4
  %47 = zext i32 %46 to i64
  %48 = call dereferenceable(16) %class.Point.21* @_ZNSt6vectorI5PointILi2EESaIS1_EEixEm(%"class.std::vector.16"* %45, i64 %47)
  %49 = call dereferenceable(16) %class.Point.21* @_ZN5PointILi2EEaSERKS0_(%class.Point.21* %48, %class.Point.21* dereferenceable(16) %9)
  br label %50

; <label>:50:                                     ; preds = %36
  %51 = load i32, i32* %4, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %4, align 4
  br label %17

; <label>:53:                                     ; preds = %originalBBpart2
  %54 = load i32, i32* @x.47
  %55 = load i32, i32* @y.48
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %53, %originalBB1alteredBB
  %62 = load i32, i32* @x.47
  %63 = load i32, i32* @y.48
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %87

; <label>:70:                                     ; preds = %1
  %71 = load i32, i32* @x.47
  %72 = load i32, i32* @y.48
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %70, %originalBB6alteredBB
  %79 = load i32, i32* @x.47
  %80 = load i32, i32* @y.48
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %87

; <label>:87:                                     ; preds = %originalBBpart28, %originalBBpart24
  %88 = load i32, i32* @x.47
  %89 = load i32, i32* @y.48
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %87, %originalBB10alteredBB
  %96 = load i32, i32* @x.47
  %97 = load i32, i32* @y.48
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %17
  %104 = load i32, i32* %4, align 4
  %105 = icmp ult i32 %104, 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %53
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %70
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %87
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIjjESaIS1_EEC2Ev(%"class.std::vector"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EEC2Ev(%"struct.std::_Vector_base"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIjjESaIS1_EE4swapERS3_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %3 = load i32, i32* @x.51
  %4 = load i32, i32* @y.52
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector"*, align 8
  %12 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %11, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %12, align 8
  %13 = load %"class.std::vector"*, %"class.std::vector"** %11, align 8
  %14 = bitcast %"class.std::vector"* %13 to %"struct.std::_Vector_base"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*
  %17 = load %"class.std::vector"*, %"class.std::vector"** %12, align 8
  %18 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %19 to %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %16, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* dereferenceable(24) %20)
  %21 = bitcast %"class.std::vector"* %13 to %"struct.std::_Vector_base"*
  %22 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %21)
  %23 = load %"class.std::vector"*, %"class.std::vector"** %12, align 8
  %24 = bitcast %"class.std::vector"* %23 to %"struct.std::_Vector_base"*
  %25 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %24)
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIjjEES2_E10_S_on_swapERS3_S5_(%"class.std::allocator"* dereferenceable(1) %22, %"class.std::allocator"* dereferenceable(1) %25)
  %26 = load i32, i32* @x.51
  %27 = load i32, i32* @y.52
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %34 = alloca %"class.std::vector"*, align 8
  %35 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %34, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %35, align 8
  %36 = load %"class.std::vector"*, %"class.std::vector"** %34, align 8
  %37 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %37, i32 0, i32 0
  %39 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %38 to %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*
  %40 = load %"class.std::vector"*, %"class.std::vector"** %35, align 8
  %41 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %42 to %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %39, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* dereferenceable(24) %43)
  %44 = bitcast %"class.std::vector"* %36 to %"struct.std::_Vector_base"*
  %45 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %44)
  %46 = load %"class.std::vector"*, %"class.std::vector"** %35, align 8
  %47 = bitcast %"class.std::vector"* %46 to %"struct.std::_Vector_base"*
  %48 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %47)
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIjjEES2_E10_S_on_swapERS3_S5_(%"class.std::allocator"* dereferenceable(1) %45, %"class.std::allocator"* dereferenceable(1) %48)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIjjESaIS1_EED2Ev(%"class.std::vector"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %12 to %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %"struct.std::pair"*, %"struct.std::pair"** %14, align 8
  %16 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %17 = invoke dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %16)
          to label %18 unwind label %21

; <label>:18:                                     ; preds = %1
  invoke void @_ZSt8_DestroyIPSt4pairIjjES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %10, %"struct.std::pair"* %15, %"class.std::allocator"* dereferenceable(1) %17)
          to label %19 unwind label %21

; <label>:19:                                     ; preds = %18
  %20 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EED2Ev(%"struct.std::_Vector_base"* %20)
  ret void

; <label>:21:                                     ; preds = %18, %1
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %3, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %4, align 4
  %25 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EED2Ev(%"struct.std::_Vector_base"* %25)
          to label %26 unwind label %64

; <label>:26:                                     ; preds = %21
  %27 = load i32, i32* @x.53
  %28 = load i32, i32* @y.54
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %26, %originalBBalteredBB
  %35 = load i32, i32* @x.53
  %36 = load i32, i32* @y.54
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %43

; <label>:43:                                     ; preds = %originalBBpart2
  %44 = load i32, i32* @x.53
  %45 = load i32, i32* @y.54
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %43, %originalBB1alteredBB
  %52 = load i8*, i8** %3, align 8
  %53 = load i32, i32* %4, align 4
  %54 = insertvalue { i8*, i32 } undef, i8* %52, 0
  %55 = insertvalue { i8*, i32 } %54, i32 %53, 1
  %56 = load i32, i32* @x.53
  %57 = load i32, i32* @y.54
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %55

; <label>:64:                                     ; preds = %21
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  call void @__clang_call_terminate(i8* %66) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %26
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %67 = load i8*, i8** %3, align 8
  %68 = load i32, i32* %4, align 4
  %69 = insertvalue { i8*, i32 } undef, i8* %67, 0
  %70 = insertvalue { i8*, i32 } %69, i32 %68, 1
  br label %originalBB1
}

declare void @_ZN13FiniteElementILi3EED2Ev(%class.FiniteElement*) unnamed_addr #2

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK10FE_NedelecILi3EE8get_nameB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret, %class.FE_Nedelec*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.FE_Nedelec*, align 8
  %4 = alloca %"class.std::__cxx11::basic_ostringstream", align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.FE_Nedelec* %1, %class.FE_Nedelec** %3, align 8
  %7 = load %class.FE_Nedelec*, %class.FE_Nedelec** %3, align 8
  call void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_ostringstream"* %4)
  %8 = bitcast %"class.std::__cxx11::basic_ostringstream"* %4 to %"class.std::basic_ostream"*
  %9 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0))
          to label %10 unwind label %54

; <label>:10:                                     ; preds = %2
  %11 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %9, i32 3)
          to label %12 unwind label %54

; <label>:12:                                     ; preds = %10
  %13 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0))
          to label %14 unwind label %54

; <label>:14:                                     ; preds = %12
  %15 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %7, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"* %13, i32 %16)
          to label %18 unwind label %54

; <label>:18:                                     ; preds = %14
  %19 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0))
          to label %20 unwind label %54

; <label>:20:                                     ; preds = %18
  %21 = load i32, i32* @x.55
  %22 = load i32, i32* @y.56
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  %29 = load i32, i32* @x.55
  %30 = load i32, i32* @y.56
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* sret %0, %"class.std::__cxx11::basic_ostringstream"* %4)
          to label %37 unwind label %54

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load i32, i32* @x.55
  %39 = load i32, i32* @y.56
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  call void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_ostringstream"* %4)
  %46 = load i32, i32* @x.55
  %47 = load i32, i32* @y.56
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:54:                                     ; preds = %originalBBpart2, %18, %14, %12, %10, %2
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %5, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %6, align 4
  invoke void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_ostringstream"* %4)
          to label %58 unwind label %80

; <label>:58:                                     ; preds = %54
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* @x.55
  %61 = load i32, i32* @y.56
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %59, %originalBB6alteredBB
  %68 = load i8*, i8** %5, align 8
  %69 = load i32, i32* %6, align 4
  %70 = insertvalue { i8*, i32 } undef, i8* %68, 0
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1
  %72 = load i32, i32* @x.55
  %73 = load i32, i32* @y.56
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %71

; <label>:80:                                     ; preds = %54
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  call void @__clang_call_terminate(i8* %82) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %20
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  call void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_ostringstream"* %4)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  %83 = load i8*, i8** %5, align 8
  %84 = load i32, i32* %6, align 4
  %85 = insertvalue { i8*, i32 } undef, i8* %83, 0
  %86 = insertvalue { i8*, i32 } %85, i32 %84, 1
  br label %originalBB6
}

declare void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_ostringstream"*) unnamed_addr #2

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) #2

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #2

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"*, i32) #2

declare void @_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* sret, %"class.std::__cxx11::basic_ostringstream"*) #2

declare void @_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_ostringstream"*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define weak_odr i32 @_ZNK10FE_NedelecILi3EE10get_degreeEv(%class.FE_Nedelec*) #1 comdat align 2 {
  %2 = alloca %class.FE_Nedelec*, align 8
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %2, align 8
  %3 = load %class.FE_Nedelec*, %class.FE_Nedelec** %2, align 8
  %4 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: noinline nounwind uwtable
define weak_odr i32 @_ZNK10FE_NedelecILi3EE15n_base_elementsEv(%class.FE_Nedelec*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.59
  %3 = load i32, i32* @y.60
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.FE_Nedelec*, align 8
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %10, align 8
  %11 = load %class.FE_Nedelec*, %class.FE_Nedelec** %10, align 8
  %12 = load i32, i32* @x.59
  %13 = load i32, i32* @y.60
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 1

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %class.FE_Nedelec*, align 8
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %20, align 8
  %21 = load %class.FE_Nedelec*, %class.FE_Nedelec** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define weak_odr dereferenceable(1160) %class.FiniteElement* @_ZNK10FE_NedelecILi3EE12base_elementEj(%class.FE_Nedelec*, i32) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.61
  %4 = load i32, i32* @y.62
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.FE_Nedelec*, align 8
  %12 = alloca i32, align 4
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.FE_Nedelec*, %class.FE_Nedelec** %11, align 8
  %14 = bitcast %class.FE_Nedelec* %13 to %class.FiniteElement*
  %15 = load i32, i32* @x.61
  %16 = load i32, i32* @y.62
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.FiniteElement* %14

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %class.FE_Nedelec*, align 8
  %24 = alloca i32, align 4
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %23, align 8
  store i32 %1, i32* %24, align 4
  %25 = load %class.FE_Nedelec*, %class.FE_Nedelec** %23, align 8
  %26 = bitcast %class.FE_Nedelec* %25 to %class.FiniteElement*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define weak_odr i32 @_ZNK10FE_NedelecILi3EE20element_multiplicityEj(%class.FE_Nedelec*, i32) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.FE_Nedelec*, align 8
  %4 = alloca i32, align 4
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.FE_Nedelec*, %class.FE_Nedelec** %3, align 8
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define weak_odr zeroext i1 @_ZNK10FE_NedelecILi3EE19has_support_on_faceEjj(%class.FE_Nedelec*, i32, i32) unnamed_addr #1 comdat align 2 {
  %4 = load i32, i32* @x.65
  %5 = load i32, i32* @y.66
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i1, align 1
  %13 = alloca %class.FE_Nedelec*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %13, align 8
  store i32 %1, i32* %14, align 4
  store i32 %2, i32* %15, align 4
  %16 = load %class.FE_Nedelec*, %class.FE_Nedelec** %13, align 8
  %17 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* @x.65
  %20 = load i32, i32* @y.66
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %18, label %45 [
    i32 1, label %27
  ]

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* %15, align 4
  %29 = load i32, i32* %14, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [12 x [2 x i32]], [12 x [2 x i32]]* @_ZZNK10FE_NedelecILi3EE19has_support_on_faceEjjE14opposite_faces, i64 0, i64 %30
  %32 = getelementptr inbounds [2 x i32], [2 x i32]* %31, i64 0, i64 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp ne i32 %28, %33
  br i1 %34, label %35, label %43

; <label>:35:                                     ; preds = %27
  %36 = load i32, i32* %15, align 4
  %37 = load i32, i32* %14, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds [12 x [2 x i32]], [12 x [2 x i32]]* @_ZZNK10FE_NedelecILi3EE19has_support_on_faceEjjE14opposite_faces, i64 0, i64 %38
  %40 = getelementptr inbounds [2 x i32], [2 x i32]* %39, i64 0, i64 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp ne i32 %36, %41
  br label %43

; <label>:43:                                     ; preds = %35, %27
  %44 = phi i1 [ false, %27 ], [ %42, %35 ]
  store i1 %44, i1* %12, align 1
  br label %63

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i32, i32* @x.65
  %47 = load i32, i32* @y.66
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %45, %originalBB1alteredBB
  %54 = load i32, i32* @x.65
  %55 = load i32, i32* @y.66
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %62

; <label>:62:                                     ; preds = %originalBBpart24
  store i1 true, i1* %12, align 1
  br label %63

; <label>:63:                                     ; preds = %62, %43
  %64 = load i1, i1* %12, align 1
  ret i1 %64

originalBBalteredBB:                              ; preds = %originalBB, %3
  %65 = alloca i1, align 1
  %66 = alloca %class.FE_Nedelec*, align 8
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %66, align 8
  store i32 %1, i32* %67, align 4
  store i32 %2, i32* %68, align 4
  %69 = load %class.FE_Nedelec*, %class.FE_Nedelec** %66, align 8
  %70 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %69, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define weak_odr i32 @_ZNK10FE_NedelecILi3EE18memory_consumptionEv(%class.FE_Nedelec*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.FE_Nedelec*, align 8
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %2, align 8
  %3 = load %class.FE_Nedelec*, %class.FE_Nedelec** %2, align 8
  ret i32 0
}

; Function Attrs: noinline uwtable
define weak_odr %class.FiniteElement* @_ZNK10FE_NedelecILi3EE5cloneEv(%class.FE_Nedelec*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.FE_Nedelec*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %2, align 8
  %5 = load %class.FE_Nedelec*, %class.FE_Nedelec** %2, align 8
  %6 = call i8* @_Znwm(i64 1160) #13
  %7 = bitcast i8* %6 to %class.FE_Nedelec*
  %8 = getelementptr inbounds %class.FE_Nedelec, %class.FE_Nedelec* %5, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  invoke void @_ZN10FE_NedelecILi3EEC1Ej(%class.FE_Nedelec* %7, i32 %9)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %1
  %11 = bitcast %class.FE_Nedelec* %7 to %class.FiniteElement*
  ret %class.FiniteElement* %11

; <label>:12:                                     ; preds = %1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %3, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %4, align 4
  call void @_ZdlPv(i8* %6) #14
  br label %16

; <label>:16:                                     ; preds = %12
  %17 = load i8*, i8** %3, align 8
  %18 = load i32, i32* %4, align 4
  %19 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20
}

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #5

; Function Attrs: noinline uwtable
define weak_odr %"class.Mapping<3>::InternalDataBase"* @_ZNK10FE_NedelecILi3EE8get_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi3EE(%class.FE_Nedelec*, i32, %class.Mapping* dereferenceable(24), %class.Quadrature* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.FE_Nedelec*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.Mapping*, align 8
  %8 = alloca %class.Quadrature*, align 8
  %9 = alloca %"class.FE_Nedelec<3>::InternalData"*, align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %18 = alloca i32, align 4
  %19 = alloca %class.Tensor, align 8
  %20 = alloca %"class.internal::TableBaseAccessors::Accessor.58", align 8
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %5, align 8
  store i32 %1, i32* %6, align 4
  store %class.Mapping* %2, %class.Mapping** %7, align 8
  store %class.Quadrature* %3, %class.Quadrature** %8, align 8
  %21 = load %class.FE_Nedelec*, %class.FE_Nedelec** %5, align 8
  %22 = call i8* @_Znwm(i64 160) #13
  %23 = bitcast i8* %22 to %"class.FE_Nedelec<3>::InternalData"*
  invoke void @_ZN10FE_NedelecILi3EE12InternalDataC2Ev(%"class.FE_Nedelec<3>::InternalData"* %23)
          to label %24 unwind label %74

; <label>:24:                                     ; preds = %4
  store %"class.FE_Nedelec<3>::InternalData"* %23, %"class.FE_Nedelec<3>::InternalData"** %9, align 8
  %25 = bitcast %class.FE_Nedelec* %21 to i32 (%class.FE_Nedelec*, i32)***
  %26 = load i32 (%class.FE_Nedelec*, i32)**, i32 (%class.FE_Nedelec*, i32)*** %25, align 8
  %27 = getelementptr inbounds i32 (%class.FE_Nedelec*, i32)*, i32 (%class.FE_Nedelec*, i32)** %26, i64 17
  %28 = load i32 (%class.FE_Nedelec*, i32)*, i32 (%class.FE_Nedelec*, i32)** %27, align 8
  %29 = load i32, i32* %6, align 4
  %30 = call i32 %28(%class.FE_Nedelec* %21, i32 %29)
  %31 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %9, align 8
  %32 = bitcast %"class.FE_Nedelec<3>::InternalData"* %31 to %"class.Mapping<3>::InternalDataBase"*
  %33 = getelementptr inbounds %"class.Mapping<3>::InternalDataBase", %"class.Mapping<3>::InternalDataBase"* %32, i32 0, i32 2
  store i32 %30, i32* %33, align 4
  %34 = bitcast %class.FE_Nedelec* %21 to i32 (%class.FE_Nedelec*, i32)***
  %35 = load i32 (%class.FE_Nedelec*, i32)**, i32 (%class.FE_Nedelec*, i32)*** %34, align 8
  %36 = getelementptr inbounds i32 (%class.FE_Nedelec*, i32)*, i32 (%class.FE_Nedelec*, i32)** %35, i64 18
  %37 = load i32 (%class.FE_Nedelec*, i32)*, i32 (%class.FE_Nedelec*, i32)** %36, align 8
  %38 = load i32, i32* %6, align 4
  %39 = call i32 %37(%class.FE_Nedelec* %21, i32 %38)
  %40 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %9, align 8
  %41 = bitcast %"class.FE_Nedelec<3>::InternalData"* %40 to %"class.Mapping<3>::InternalDataBase"*
  %42 = getelementptr inbounds %"class.Mapping<3>::InternalDataBase", %"class.Mapping<3>::InternalDataBase"* %41, i32 0, i32 3
  store i32 %39, i32* %42, align 8
  %43 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %9, align 8
  %44 = bitcast %"class.FE_Nedelec<3>::InternalData"* %43 to %"class.Mapping<3>::InternalDataBase"*
  %45 = getelementptr inbounds %"class.Mapping<3>::InternalDataBase", %"class.Mapping<3>::InternalDataBase"* %44, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %9, align 8
  %48 = bitcast %"class.FE_Nedelec<3>::InternalData"* %47 to %"class.Mapping<3>::InternalDataBase"*
  %49 = getelementptr inbounds %"class.Mapping<3>::InternalDataBase", %"class.Mapping<3>::InternalDataBase"* %48, i32 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = call i32 @_Zor11UpdateFlagsS_(i32 %46, i32 %50)
  %52 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %9, align 8
  %53 = bitcast %"class.FE_Nedelec<3>::InternalData"* %52 to %"class.Mapping<3>::InternalDataBase"*
  %54 = getelementptr inbounds %"class.Mapping<3>::InternalDataBase", %"class.Mapping<3>::InternalDataBase"* %53, i32 0, i32 1
  store i32 %51, i32* %54, align 8
  %55 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %9, align 8
  %56 = bitcast %"class.FE_Nedelec<3>::InternalData"* %55 to %"class.Mapping<3>::InternalDataBase"*
  %57 = getelementptr inbounds %"class.Mapping<3>::InternalDataBase", %"class.Mapping<3>::InternalDataBase"* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  store i32 %58, i32* %12, align 4
  %59 = load %class.Quadrature*, %class.Quadrature** %8, align 8
  %60 = getelementptr inbounds %class.Quadrature, %class.Quadrature* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  store i32 %61, i32* %13, align 4
  %62 = load i32, i32* %12, align 4
  %63 = call i32 @_Zan11UpdateFlagsS_(i32 %62, i32 1)
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %94

; <label>:65:                                     ; preds = %24
  %66 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %9, align 8
  %67 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %66, i32 0, i32 1
  %68 = bitcast %class.FE_Nedelec* %21 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 24
  %70 = bitcast i8* %69 to %class.FiniteElementData*
  %71 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %70, i32 0, i32 10
  %72 = load i32, i32* %71, align 8
  %73 = load i32, i32* %13, align 4
  call void @_ZN5TableILi2E6TensorILi1ELi3EEE6reinitEjj(%class.Table.50* %67, i32 %72, i32 %73)
  br label %94

; <label>:74:                                     ; preds = %4
  %75 = load i32, i32* @x.71
  %76 = load i32, i32* @y.72
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %74, %originalBBalteredBB
  %83 = landingpad { i8*, i32 }
          cleanup
  %84 = extractvalue { i8*, i32 } %83, 0
  store i8* %84, i8** %10, align 8
  %85 = extractvalue { i8*, i32 } %83, 1
  store i32 %85, i32* %11, align 4
  call void @_ZdlPv(i8* %22) #14
  %86 = load i32, i32* @x.71
  %87 = load i32, i32* @y.72
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %234

; <label>:94:                                     ; preds = %65, %24
  %95 = load i32, i32* %12, align 4
  %96 = call i32 @_Zan11UpdateFlagsS_(i32 %95, i32 2)
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %107

; <label>:98:                                     ; preds = %94
  %99 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %9, align 8
  %100 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %99, i32 0, i32 2
  %101 = bitcast %class.FE_Nedelec* %21 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 24
  %103 = bitcast i8* %102 to %class.FiniteElementData*
  %104 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %103, i32 0, i32 10
  %105 = load i32, i32* %104, align 8
  %106 = load i32, i32* %13, align 4
  call void @_ZN5TableILi2E6TensorILi2ELi3EEE6reinitEjj(%class.Table.54* %100, i32 %105, i32 %106)
  br label %107

; <label>:107:                                    ; preds = %98, %94
  %108 = load i32, i32* %12, align 4
  %109 = call i32 @_Zan11UpdateFlagsS_(i32 %108, i32 4)
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %117

; <label>:111:                                    ; preds = %107
  %112 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %9, align 8
  %113 = bitcast %"class.FE_Nedelec<3>::InternalData"* %112 to %"class.FiniteElementBase<3>::InternalDataBase"*
  %114 = bitcast %class.FE_Nedelec* %21 to %class.FiniteElement*
  %115 = load %class.Mapping*, %class.Mapping** %7, align 8
  %116 = load %class.Quadrature*, %class.Quadrature** %8, align 8
  call void @_ZN17FiniteElementBaseILi3EE16InternalDataBase14initialize_2ndEPK13FiniteElementILi3EERK7MappingILi3EERK10QuadratureILi3EE(%"class.FiniteElementBase<3>::InternalDataBase"* %113, %class.FiniteElement* %114, %class.Mapping* dereferenceable(24) %115, %class.Quadrature* dereferenceable(80) %116)
  br label %117

; <label>:117:                                    ; preds = %111, %107
  %118 = load i32, i32* @x.71
  %119 = load i32, i32* @y.72
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %117, %originalBB1alteredBB
  store i32 0, i32* %14, align 4
  %126 = load i32, i32* @x.71
  %127 = load i32, i32* @y.72
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %134

; <label>:134:                                    ; preds = %228, %originalBBpart24
  %135 = load i32, i32* %14, align 4
  %136 = bitcast %class.FE_Nedelec* %21 to i8*
  %137 = getelementptr inbounds i8, i8* %136, i64 24
  %138 = bitcast i8* %137 to %class.FiniteElementData*
  %139 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %138, i32 0, i32 10
  %140 = load i32, i32* %139, align 8
  %141 = icmp ult i32 %135, %140
  br i1 %141, label %142, label %231

; <label>:142:                                    ; preds = %134
  store i32 0, i32* %15, align 4
  br label %143

; <label>:143:                                    ; preds = %224, %142
  %144 = load i32, i32* @x.71
  %145 = load i32, i32* @y.72
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %143, %originalBB6alteredBB
  %152 = load i32, i32* %15, align 4
  %153 = load i32, i32* %13, align 4
  %154 = icmp ult i32 %152, %153
  %155 = load i32, i32* @x.71
  %156 = load i32, i32* @y.72
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %154, label %163, label %227

; <label>:163:                                    ; preds = %originalBBpart28
  %164 = load i32, i32* %12, align 4
  %165 = call i32 @_Zan11UpdateFlagsS_(i32 %164, i32 1)
  %166 = icmp ne i32 %165, 0
  br i1 %166, label %167, label %193

; <label>:167:                                    ; preds = %163
  store i32 0, i32* %16, align 4
  br label %168

; <label>:168:                                    ; preds = %189, %167
  %169 = load i32, i32* %16, align 4
  %170 = icmp ult i32 %169, 3
  br i1 %170, label %171, label %192

; <label>:171:                                    ; preds = %168
  %172 = bitcast %class.FE_Nedelec* %21 to double (%class.FE_Nedelec*, i32, %class.Point*, i32)***
  %173 = load double (%class.FE_Nedelec*, i32, %class.Point*, i32)**, double (%class.FE_Nedelec*, i32, %class.Point*, i32)*** %172, align 8
  %174 = getelementptr inbounds double (%class.FE_Nedelec*, i32, %class.Point*, i32)*, double (%class.FE_Nedelec*, i32, %class.Point*, i32)** %173, i64 4
  %175 = load double (%class.FE_Nedelec*, i32, %class.Point*, i32)*, double (%class.FE_Nedelec*, i32, %class.Point*, i32)** %174, align 8
  %176 = load i32, i32* %14, align 4
  %177 = load %class.Quadrature*, %class.Quadrature** %8, align 8
  %178 = load i32, i32* %15, align 4
  %179 = call dereferenceable(24) %class.Point* @_ZNK10QuadratureILi3EE5pointEj(%class.Quadrature* %177, i32 %178)
  %180 = load i32, i32* %16, align 4
  %181 = call double %175(%class.FE_Nedelec* %21, i32 %176, %class.Point* dereferenceable(24) %179, i32 %180)
  %182 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %9, align 8
  %183 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %182, i32 0, i32 1
  %184 = load i32, i32* %14, align 4
  call void @_ZN5TableILi2E6TensorILi1ELi3EEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %17, %class.Table.50* %183, i32 %184)
  %185 = load i32, i32* %15, align 4
  %186 = call dereferenceable(24) %class.Tensor* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi1ELi3EELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %17, i32 %185)
  %187 = load i32, i32* %16, align 4
  %188 = call dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor* %186, i32 %187)
  store double %181, double* %188, align 8
  br label %189

; <label>:189:                                    ; preds = %171
  %190 = load i32, i32* %16, align 4
  %191 = add i32 %190, 1
  store i32 %191, i32* %16, align 4
  br label %168

; <label>:192:                                    ; preds = %168
  br label %193

; <label>:193:                                    ; preds = %192, %163
  %194 = load i32, i32* %12, align 4
  %195 = call i32 @_Zan11UpdateFlagsS_(i32 %194, i32 2)
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %197, label %223

; <label>:197:                                    ; preds = %193
  store i32 0, i32* %18, align 4
  br label %198

; <label>:198:                                    ; preds = %219, %197
  %199 = load i32, i32* %18, align 4
  %200 = icmp ult i32 %199, 3
  br i1 %200, label %201, label %222

; <label>:201:                                    ; preds = %198
  %202 = bitcast %class.FE_Nedelec* %21 to void (%class.Tensor*, %class.FE_Nedelec*, i32, %class.Point*, i32)***
  %203 = load void (%class.Tensor*, %class.FE_Nedelec*, i32, %class.Point*, i32)**, void (%class.Tensor*, %class.FE_Nedelec*, i32, %class.Point*, i32)*** %202, align 8
  %204 = getelementptr inbounds void (%class.Tensor*, %class.FE_Nedelec*, i32, %class.Point*, i32)*, void (%class.Tensor*, %class.FE_Nedelec*, i32, %class.Point*, i32)** %203, i64 6
  %205 = load void (%class.Tensor*, %class.FE_Nedelec*, i32, %class.Point*, i32)*, void (%class.Tensor*, %class.FE_Nedelec*, i32, %class.Point*, i32)** %204, align 8
  %206 = load i32, i32* %14, align 4
  %207 = load %class.Quadrature*, %class.Quadrature** %8, align 8
  %208 = load i32, i32* %15, align 4
  %209 = call dereferenceable(24) %class.Point* @_ZNK10QuadratureILi3EE5pointEj(%class.Quadrature* %207, i32 %208)
  %210 = load i32, i32* %18, align 4
  call void %205(%class.Tensor* sret %19, %class.FE_Nedelec* %21, i32 %206, %class.Point* dereferenceable(24) %209, i32 %210)
  %211 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %9, align 8
  %212 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %211, i32 0, i32 2
  %213 = load i32, i32* %14, align 4
  call void @_ZN5TableILi2E6TensorILi2ELi3EEEixEj(%"class.internal::TableBaseAccessors::Accessor.58"* sret %20, %class.Table.54* %212, i32 %213)
  %214 = load i32, i32* %15, align 4
  %215 = call dereferenceable(72) %class.Tensor.33* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi2ELi3EELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.58"* %20, i32 %214)
  %216 = load i32, i32* %18, align 4
  %217 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi2ELi3EEixEj(%class.Tensor.33* %215, i32 %216)
  %218 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor* %217, %class.Tensor* dereferenceable(24) %19)
  br label %219

; <label>:219:                                    ; preds = %201
  %220 = load i32, i32* %18, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %18, align 4
  br label %198

; <label>:222:                                    ; preds = %198
  br label %223

; <label>:223:                                    ; preds = %222, %193
  br label %224

; <label>:224:                                    ; preds = %223
  %225 = load i32, i32* %15, align 4
  %226 = add i32 %225, 1
  store i32 %226, i32* %15, align 4
  br label %143

; <label>:227:                                    ; preds = %originalBBpart28
  br label %228

; <label>:228:                                    ; preds = %227
  %229 = load i32, i32* %14, align 4
  %230 = add i32 %229, 1
  store i32 %230, i32* %14, align 4
  br label %134

; <label>:231:                                    ; preds = %134
  %232 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %9, align 8
  %233 = bitcast %"class.FE_Nedelec<3>::InternalData"* %232 to %"class.Mapping<3>::InternalDataBase"*
  ret %"class.Mapping<3>::InternalDataBase"* %233

; <label>:234:                                    ; preds = %originalBBpart2
  %235 = load i32, i32* @x.71
  %236 = load i32, i32* @y.72
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %234, %originalBB10alteredBB
  %243 = load i8*, i8** %10, align 8
  %244 = load i32, i32* %11, align 4
  %245 = insertvalue { i8*, i32 } undef, i8* %243, 0
  %246 = insertvalue { i8*, i32 } %245, i32 %244, 1
  %247 = load i32, i32* @x.71
  %248 = load i32, i32* @y.72
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %246

originalBBalteredBB:                              ; preds = %originalBB, %74
  %255 = landingpad { i8*, i32 }
          cleanup
  %256 = extractvalue { i8*, i32 } %255, 0
  store i8* %256, i8** %10, align 8
  %257 = extractvalue { i8*, i32 } %255, 1
  store i32 %257, i32* %11, align 4
  call void @_ZdlPv(i8* %22) #14
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %117
  store i32 0, i32* %14, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %143
  %258 = load i32, i32* %15, align 4
  %259 = load i32, i32* %13, align 4
  %260 = icmp ult i32 %258, %259
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %234
  %261 = load i8*, i8** %10, align 8
  %262 = load i32, i32* %11, align 4
  %263 = insertvalue { i8*, i32 } undef, i8* %261, 0
  %264 = insertvalue { i8*, i32 } %263, i32 %262, 1
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN10FE_NedelecILi3EE12InternalDataC2Ev(%"class.FE_Nedelec<3>::InternalData"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.FE_Nedelec<3>::InternalData"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.FE_Nedelec<3>::InternalData"* %0, %"class.FE_Nedelec<3>::InternalData"** %2, align 8
  %5 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %2, align 8
  %6 = bitcast %"class.FE_Nedelec<3>::InternalData"* %5 to %"class.FiniteElementBase<3>::InternalDataBase"*
  call void @_ZN17FiniteElementBaseILi3EE16InternalDataBaseC2Ev(%"class.FiniteElementBase<3>::InternalDataBase"* %6)
  %7 = bitcast %"class.FE_Nedelec<3>::InternalData"* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10FE_NedelecILi3EE12InternalDataE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %5, i32 0, i32 1
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEEC2Ev(%class.Table.50* %8)
          to label %9 unwind label %12

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %5, i32 0, i32 2
  invoke void @_ZN5TableILi2E6TensorILi2ELi3EEEC2Ev(%class.Table.54* %10)
          to label %11 unwind label %16

; <label>:11:                                     ; preds = %9
  ret void

; <label>:12:                                     ; preds = %1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %3, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %4, align 4
  br label %21

; <label>:16:                                     ; preds = %9
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %3, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %4, align 4
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEED2Ev(%class.Table.50* %8)
          to label %20 unwind label %29

; <label>:20:                                     ; preds = %16
  br label %21

; <label>:21:                                     ; preds = %20, %12
  %22 = bitcast %"class.FE_Nedelec<3>::InternalData"* %5 to %"class.FiniteElementBase<3>::InternalDataBase"*
  invoke void @_ZN17FiniteElementBaseILi3EE16InternalDataBaseD2Ev(%"class.FiniteElementBase<3>::InternalDataBase"* %22)
          to label %23 unwind label %29

; <label>:23:                                     ; preds = %21
  br label %24

; <label>:24:                                     ; preds = %23
  %25 = load i8*, i8** %3, align 8
  %26 = load i32, i32* %4, align 4
  %27 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

; <label>:29:                                     ; preds = %21, %16
  %30 = landingpad { i8*, i32 }
          catch i8* null
  %31 = extractvalue { i8*, i32 } %30, 0
  call void @__clang_call_terminate(i8* %31) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Zor11UpdateFlagsS_(i32, i32) #1 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = or i32 %5, %6
  ret i32 %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Zan11UpdateFlagsS_(i32, i32) #1 comdat {
  %3 = load i32, i32* @x.77
  %4 = load i32, i32* @y.78
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  store i32 %1, i32* %12, align 4
  %13 = load i32, i32* %11, align 4
  %14 = load i32, i32* %12, align 4
  %15 = and i32 %13, %14
  %16 = load i32, i32* @x.77
  %17 = load i32, i32* @y.78
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %15

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  store i32 %0, i32* %24, align 4
  store i32 %1, i32* %25, align 4
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  %_ = shl i32 %26, %27
  %_1 = shl i32 %26, %27
  %_2 = shl i32 %26, %27
  %_3 = sub i32 0, %26
  %gen = add i32 %_3, %27
  %_4 = sub i32 %26, %27
  %gen5 = mul i32 %_4, %27
  %_6 = shl i32 %26, %27
  %_7 = shl i32 %26, %27
  %28 = and i32 %26, %27
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E6TensorILi1ELi3EEE6reinitEjj(%class.Table.50*, i32, i32) #0 comdat align 2 {
  %4 = alloca %class.Table.50*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %class.TableIndices, align 4
  store %class.Table.50* %0, %class.Table.50** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load %class.Table.50*, %class.Table.50** %4, align 8
  %9 = bitcast %class.Table.50* %8 to %class.TableBase.51*
  %10 = load i32, i32* %5, align 4
  %11 = load i32, i32* %6, align 4
  call void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices* %7, i32 %10, i32 %11)
  call void @_ZN9TableBaseILi2E6TensorILi1ELi3EEE6reinitERK12TableIndicesILi2EE(%class.TableBase.51* %9, %class.TableIndices* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E6TensorILi2ELi3EEE6reinitEjj(%class.Table.54*, i32, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.81
  %5 = load i32, i32* @y.82
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Table.54*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %class.TableIndices, align 4
  store %class.Table.54* %0, %class.Table.54** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  %16 = load %class.Table.54*, %class.Table.54** %12, align 8
  %17 = bitcast %class.Table.54* %16 to %class.TableBase.55*
  %18 = load i32, i32* %13, align 4
  %19 = load i32, i32* %14, align 4
  call void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices* %15, i32 %18, i32 %19)
  call void @_ZN9TableBaseILi2E6TensorILi2ELi3EEE6reinitERK12TableIndicesILi2EE(%class.TableBase.55* %17, %class.TableIndices* dereferenceable(8) %15)
  %20 = load i32, i32* @x.81
  %21 = load i32, i32* @y.82
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %class.Table.54*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %class.TableIndices, align 4
  store %class.Table.54* %0, %class.Table.54** %28, align 8
  store i32 %1, i32* %29, align 4
  store i32 %2, i32* %30, align 4
  %32 = load %class.Table.54*, %class.Table.54** %28, align 8
  %33 = bitcast %class.Table.54* %32 to %class.TableBase.55*
  %34 = load i32, i32* %29, align 4
  %35 = load i32, i32* %30, align 4
  call void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices* %31, i32 %34, i32 %35)
  call void @_ZN9TableBaseILi2E6TensorILi2ELi3EEE6reinitERK12TableIndicesILi2EE(%class.TableBase.55* %33, %class.TableIndices* dereferenceable(8) %31)
  br label %originalBB
}

declare void @_ZN17FiniteElementBaseILi3EE16InternalDataBase14initialize_2ndEPK13FiniteElementILi3EERK7MappingILi3EERK10QuadratureILi3EE(%"class.FiniteElementBase<3>::InternalDataBase"*, %class.FiniteElement*, %class.Mapping* dereferenceable(24), %class.Quadrature* dereferenceable(80)) #2

declare dereferenceable(24) %class.Point* @_ZNK10QuadratureILi3EE5pointEj(%class.Quadrature*, i32) #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E6TensorILi1ELi3EEEixEj(%"class.internal::TableBaseAccessors::Accessor"* noalias sret, %class.Table.50*, i32) #0 comdat align 2 {
  %4 = alloca %class.Table.50*, align 8
  %5 = alloca i32, align 4
  store %class.Table.50* %1, %class.Table.50** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.Table.50*, %class.Table.50** %4, align 8
  %7 = bitcast %class.Table.50* %6 to %class.TableBase.51*
  %8 = bitcast %class.Table.50* %6 to %class.TableBase.51*
  %9 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %8, i32 0, i32 1
  %10 = load %class.Tensor*, %class.Tensor** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = call i32 @_ZNK5TableILi2E6TensorILi1ELi3EEE6n_colsEv(%class.Table.50* %6)
  %13 = mul i32 %11, %12
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %class.Tensor, %class.Tensor* %10, i64 %14
  call void @_ZN8internal18TableBaseAccessors8AccessorILi2E6TensorILi1ELi3EELb0ELj1EEC2ERK9TableBaseILi2ES3_EPS3_(%"class.internal::TableBaseAccessors::Accessor"* %0, %class.TableBase.51* dereferenceable(48) %7, %class.Tensor* %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi1ELi3EELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"*, i32) #1 comdat align 2 {
  %3 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %4 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %3, align 8
  %6 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %5, i32 0, i32 1
  %7 = load %class.Tensor*, %class.Tensor** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %class.Tensor, %class.Tensor* %7, i64 %9
  ret %class.Tensor* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor*, i32) #1 comdat align 2 {
  %3 = load i32, i32* @x.87
  %4 = load i32, i32* @y.88
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Tensor*, align 8
  %12 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.Tensor*, %class.Tensor** %11, align 8
  %14 = getelementptr inbounds %class.Tensor, %class.Tensor* %13, i32 0, i32 0
  %15 = load i32, i32* %12, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 %16
  %18 = load i32, i32* @x.87
  %19 = load i32, i32* @y.88
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %17

originalBBalteredBB:                              ; preds = %originalBB, %2
  %26 = alloca %class.Tensor*, align 8
  %27 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %26, align 8
  store i32 %1, i32* %27, align 4
  %28 = load %class.Tensor*, %class.Tensor** %26, align 8
  %29 = getelementptr inbounds %class.Tensor, %class.Tensor* %28, i32 0, i32 0
  %30 = load i32, i32* %27, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [3 x double], [3 x double]* %29, i64 0, i64 %31
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E6TensorILi2ELi3EEEixEj(%"class.internal::TableBaseAccessors::Accessor.58"* noalias sret, %class.Table.54*, i32) #0 comdat align 2 {
  %4 = alloca %class.Table.54*, align 8
  %5 = alloca i32, align 4
  store %class.Table.54* %1, %class.Table.54** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.Table.54*, %class.Table.54** %4, align 8
  %7 = bitcast %class.Table.54* %6 to %class.TableBase.55*
  %8 = bitcast %class.Table.54* %6 to %class.TableBase.55*
  %9 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %8, i32 0, i32 1
  %10 = load %class.Tensor.33*, %class.Tensor.33** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = call i32 @_ZNK5TableILi2E6TensorILi2ELi3EEE6n_colsEv(%class.Table.54* %6)
  %13 = mul i32 %11, %12
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %10, i64 %14
  call void @_ZN8internal18TableBaseAccessors8AccessorILi2E6TensorILi2ELi3EELb0ELj1EEC2ERK9TableBaseILi2ES3_EPS3_(%"class.internal::TableBaseAccessors::Accessor.58"* %0, %class.TableBase.55* dereferenceable(48) %7, %class.Tensor.33* %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(72) %class.Tensor.33* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi2ELi3EELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.58"*, i32) #1 comdat align 2 {
  %3 = alloca %"class.internal::TableBaseAccessors::Accessor.58"*, align 8
  %4 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor.58"* %0, %"class.internal::TableBaseAccessors::Accessor.58"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"class.internal::TableBaseAccessors::Accessor.58"*, %"class.internal::TableBaseAccessors::Accessor.58"** %3, align 8
  %6 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.58", %"class.internal::TableBaseAccessors::Accessor.58"* %5, i32 0, i32 1
  %7 = load %class.Tensor.33*, %class.Tensor.33** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %7, i64 %9
  ret %class.Tensor.33* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZN6TensorILi2ELi3EEixEj(%class.Tensor.33*, i32) #1 comdat align 2 {
  %3 = load i32, i32* @x.93
  %4 = load i32, i32* @y.94
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Tensor.33*, align 8
  %12 = alloca i32, align 4
  store %class.Tensor.33* %0, %class.Tensor.33** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.Tensor.33*, %class.Tensor.33** %11, align 8
  %14 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %13, i32 0, i32 0
  %15 = load i32, i32* %12, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds [3 x %class.Tensor], [3 x %class.Tensor]* %14, i64 0, i64 %16
  %18 = load i32, i32* @x.93
  %19 = load i32, i32* @y.94
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor* %17

originalBBalteredBB:                              ; preds = %originalBB, %2
  %26 = alloca %class.Tensor.33*, align 8
  %27 = alloca i32, align 4
  store %class.Tensor.33* %0, %class.Tensor.33** %26, align 8
  store i32 %1, i32* %27, align 4
  %28 = load %class.Tensor.33*, %class.Tensor.33** %26, align 8
  %29 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %28, i32 0, i32 0
  %30 = load i32, i32* %27, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [3 x %class.Tensor], [3 x %class.Tensor]* %29, i64 0, i64 %31
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor*, %class.Tensor* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  store %class.Tensor* %1, %class.Tensor** %4, align 8
  %6 = load %class.Tensor*, %class.Tensor** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %37, %2
  %8 = load i32, i32* %5, align 4
  %9 = icmp ult i32 %8, 3
  br i1 %9, label %10, label %40

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.95
  %12 = load i32, i32* @y.96
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load %class.Tensor*, %class.Tensor** %4, align 8
  %20 = getelementptr inbounds %class.Tensor, %class.Tensor* %19, i32 0, i32 0
  %21 = load i32, i32* %5, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [3 x double], [3 x double]* %20, i64 0, i64 %22
  %24 = load double, double* %23, align 8
  %25 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %26 = load i32, i32* %5, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [3 x double], [3 x double]* %25, i64 0, i64 %27
  store double %24, double* %28, align 8
  %29 = load i32, i32* @x.95
  %30 = load i32, i32* @y.96
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %37

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load i32, i32* %5, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %5, align 4
  br label %7

; <label>:40:                                     ; preds = %7
  ret %class.Tensor* %6

originalBBalteredBB:                              ; preds = %originalBB, %10
  %41 = load %class.Tensor*, %class.Tensor** %4, align 8
  %42 = getelementptr inbounds %class.Tensor, %class.Tensor* %41, i32 0, i32 0
  %43 = load i32, i32* %5, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [3 x double], [3 x double]* %42, i64 0, i64 %44
  %46 = load double, double* %45, align 8
  %47 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %48 = load i32, i32* %5, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [3 x double], [3 x double]* %47, i64 0, i64 %49
  store double %46, double* %50, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK10FE_NedelecILi3EE14fill_fe_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERNS2_16InternalDataBaseESG_R12FEValuesDataILi3EE(%class.FE_Nedelec*, %class.Mapping* dereferenceable(24), %class.TriaIterator* nonnull, %class.Quadrature* dereferenceable(80), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %class.FEValuesData* dereferenceable(272)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %8 = load i32, i32* @x.97
  %9 = load i32, i32* @y.98
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = alloca %class.FE_Nedelec*, align 8
  %17 = alloca %class.Mapping*, align 8
  %18 = alloca %class.TriaIterator*, align 8
  %19 = alloca %class.Quadrature*, align 8
  %20 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %21 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %22 = alloca %class.FEValuesData*, align 8
  %23 = alloca %"class.FE_Nedelec<3>::InternalData"*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %"class.std::vector.59", align 8
  %27 = alloca %class.Tensor, align 8
  %28 = alloca %"class.std::allocator.61", align 1
  %29 = alloca i8*
  %30 = alloca i32
  %31 = alloca i32, align 4
  %32 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %34 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca %"class.internal::TableBaseAccessors::Accessor.64", align 8
  %38 = alloca %"class.std::vector.65", align 8
  %39 = alloca %class.Tensor.33, align 8
  %40 = alloca %"class.std::allocator.67", align 1
  %41 = alloca %"class.std::vector.65", align 8
  %42 = alloca %class.Tensor.33, align 8
  %43 = alloca %"class.std::allocator.67", align 1
  %44 = alloca i32, align 4
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %47 = alloca %"class.internal::TableBaseAccessors::Accessor.58", align 8
  %48 = alloca i32, align 4
  %49 = alloca %class.Tensor.33, align 8
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %53 = alloca i32, align 4
  %54 = alloca %class.Tensor.33, align 8
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %58 = alloca %"class.QProjector<3>::DataSetDescriptor", align 4
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %16, align 8
  store %class.Mapping* %1, %class.Mapping** %17, align 8
  store %class.TriaIterator* %2, %class.TriaIterator** %18, align 8
  store %class.Quadrature* %3, %class.Quadrature** %19, align 8
  store %"class.Mapping<3>::InternalDataBase"* %4, %"class.Mapping<3>::InternalDataBase"** %20, align 8
  store %"class.Mapping<3>::InternalDataBase"* %5, %"class.Mapping<3>::InternalDataBase"** %21, align 8
  store %class.FEValuesData* %6, %class.FEValuesData** %22, align 8
  %59 = load %class.FE_Nedelec*, %class.FE_Nedelec** %16, align 8
  %60 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %21, align 8
  %61 = bitcast %"class.Mapping<3>::InternalDataBase"* %60 to i8*
  %62 = call i8* @__dynamic_cast(i8* %61, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10FE_NedelecILi3EE12InternalDataE to i8*), i64 0) #12
  %63 = bitcast i8* %62 to %"class.FE_Nedelec<3>::InternalData"*
  %64 = icmp eq %"class.FE_Nedelec<3>::InternalData"* %63, null
  %65 = load i32, i32* @x.97
  %66 = load i32, i32* @y.98
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %64, label %73, label %74

; <label>:73:                                     ; preds = %originalBBpart2
  call void @__cxa_bad_cast() #15
  unreachable

; <label>:74:                                     ; preds = %originalBBpart2
  store %"class.FE_Nedelec<3>::InternalData"* %63, %"class.FE_Nedelec<3>::InternalData"** %23, align 8
  %75 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %23, align 8
  %76 = bitcast %"class.FE_Nedelec<3>::InternalData"* %75 to %"class.Mapping<3>::InternalDataBase"*
  %77 = call i32 @_ZNK7MappingILi3EE16InternalDataBase20current_update_flagsEv(%"class.Mapping<3>::InternalDataBase"* %76)
  store i32 %77, i32* %24, align 4
  %78 = load %class.Quadrature*, %class.Quadrature** %19, align 8
  %79 = getelementptr inbounds %class.Quadrature, %class.Quadrature* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  store i32 %80, i32* %25, align 4
  %81 = load i32, i32* %24, align 4
  %82 = call i32 @_Zan11UpdateFlagsS_(i32 %81, i32 1)
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %363

; <label>:84:                                     ; preds = %74
  %85 = load i32, i32* %25, align 4
  %86 = zext i32 %85 to i64
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %27, i1 zeroext true)
  call void @_ZNSaI6TensorILi1ELi3EEEC2Ev(%"class.std::allocator.61"* %28) #12
  invoke void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.59"* %26, i64 %86, %class.Tensor* dereferenceable(24) %27, %"class.std::allocator.61"* dereferenceable(1) %28)
          to label %87 unwind label %265

; <label>:87:                                     ; preds = %84
  %88 = load i32, i32* @x.97
  %89 = load i32, i32* @y.98
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %87, %originalBB1alteredBB
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"* %28) #12
  store i32 0, i32* %31, align 4
  %96 = load i32, i32* @x.97
  %97 = load i32, i32* @y.98
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %104

; <label>:104:                                    ; preds = %originalBBpart258, %originalBBpart24
  %105 = load i32, i32* %31, align 4
  %106 = bitcast %class.FE_Nedelec* %59 to i8*
  %107 = getelementptr inbounds i8, i8* %106, i64 24
  %108 = bitcast i8* %107 to %class.FiniteElementData*
  %109 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %108, i32 0, i32 10
  %110 = load i32, i32* %109, align 8
  %111 = icmp ult i32 %105, %110
  br i1 %111, label %112, label %345

; <label>:112:                                    ; preds = %104
  %113 = load %class.Mapping*, %class.Mapping** %17, align 8
  %114 = bitcast %class.Mapping* %113 to void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)***
  %115 = load void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)**, void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)*** %114, align 8
  %116 = getelementptr inbounds void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)** %115, i64 4
  %117 = load void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)** %116, align 8
  %118 = invoke %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE5beginEv(%"class.std::vector.59"* %26)
          to label %119 unwind label %285

; <label>:119:                                    ; preds = %112
  %120 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  store %class.Tensor* %118, %class.Tensor** %120, align 8
  %121 = invoke dereferenceable(24) %class.Tensor* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %32)
          to label %122 unwind label %285

; <label>:122:                                    ; preds = %119
  %123 = invoke %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE5beginEv(%"class.std::vector.59"* %26)
          to label %124 unwind label %285

; <label>:124:                                    ; preds = %122
  %125 = load i32, i32* @x.97
  %126 = load i32, i32* @y.98
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %124, %originalBB6alteredBB
  %133 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  store %class.Tensor* %123, %class.Tensor** %133, align 8
  %134 = load i32, i32* @x.97
  %135 = load i32, i32* @y.98
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %142 = invoke dereferenceable(24) %class.Tensor* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %33)
          to label %143 unwind label %285

; <label>:143:                                    ; preds = %originalBBpart28
  %144 = load i32, i32* @x.97
  %145 = load i32, i32* @y.98
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %143, %originalBB10alteredBB
  %152 = load i32, i32* @x.97
  %153 = load i32, i32* @y.98
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %160 = invoke i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.59"* %26)
          to label %161 unwind label %285

; <label>:161:                                    ; preds = %originalBBpart212
  %162 = getelementptr inbounds %class.Tensor, %class.Tensor* %142, i64 %160
  %163 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %23, align 8
  %164 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %163, i32 0, i32 1
  %165 = load i32, i32* %31, align 4
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %34, %class.Table.50* %164, i32 %165)
          to label %166 unwind label %285

; <label>:166:                                    ; preds = %161
  %167 = invoke %class.Tensor* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi1ELi3EELb0ELj1EE5beginEv(%"class.internal::TableBaseAccessors::Accessor"* %34)
          to label %168 unwind label %285

; <label>:168:                                    ; preds = %166
  %169 = load i32, i32* @x.97
  %170 = load i32, i32* @y.98
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %168, %originalBB14alteredBB
  %177 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %20, align 8
  %178 = load i32, i32* @x.97
  %179 = load i32, i32* @y.98
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void %117(%class.Mapping* %113, %class.Tensor* %121, %class.Tensor* %162, %class.Tensor* %167, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %177)
          to label %186 unwind label %285

; <label>:186:                                    ; preds = %originalBBpart216
  store i32 0, i32* %35, align 4
  br label %187

; <label>:187:                                    ; preds = %306, %186
  %188 = load i32, i32* @x.97
  %189 = load i32, i32* @y.98
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %187, %originalBB18alteredBB
  %196 = load i32, i32* %35, align 4
  %197 = load i32, i32* %25, align 4
  %198 = icmp ult i32 %196, %197
  %199 = load i32, i32* @x.97
  %200 = load i32, i32* @y.98
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %198, label %207, label %309

; <label>:207:                                    ; preds = %originalBBpart220
  store i32 0, i32* %36, align 4
  br label %208

; <label>:208:                                    ; preds = %262, %207
  %209 = load i32, i32* %36, align 4
  %210 = icmp ult i32 %209, 3
  br i1 %210, label %211, label %289

; <label>:211:                                    ; preds = %208
  %212 = load i32, i32* %35, align 4
  %213 = zext i32 %212 to i64
  %214 = invoke dereferenceable(24) %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEixEm(%"class.std::vector.59"* %26, i64 %213)
          to label %215 unwind label %285

; <label>:215:                                    ; preds = %211
  %216 = load i32, i32* %36, align 4
  %217 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor* %214, i32 %216)
          to label %218 unwind label %285

; <label>:218:                                    ; preds = %215
  %219 = load i32, i32* @x.97
  %220 = load i32, i32* @y.98
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %218, %originalBB22alteredBB
  %227 = load double, double* %217, align 8
  %228 = load %class.FEValuesData*, %class.FEValuesData** %22, align 8
  %229 = getelementptr inbounds %class.FEValuesData, %class.FEValuesData* %228, i32 0, i32 0
  %230 = load i32, i32* %31, align 4
  %231 = mul i32 %230, 3
  %232 = load i32, i32* %36, align 4
  %233 = add i32 %231, %232
  %234 = load i32, i32* @x.97
  %235 = load i32, i32* @y.98
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart232, label %originalBB22alteredBB

originalBBpart232:                                ; preds = %originalBB22
  invoke void @_ZN5TableILi2EdEixEj(%"class.internal::TableBaseAccessors::Accessor.64"* sret %37, %class.Table* %229, i32 %233)
          to label %242 unwind label %285

; <label>:242:                                    ; preds = %originalBBpart232
  %243 = load i32, i32* @x.97
  %244 = load i32, i32* @y.98
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %242, %originalBB34alteredBB
  %251 = load i32, i32* %35, align 4
  %252 = load i32, i32* @x.97
  %253 = load i32, i32* @y.98
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  %260 = invoke dereferenceable(8) double* @_ZNK8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.64"* %37, i32 %251)
          to label %261 unwind label %285

; <label>:261:                                    ; preds = %originalBBpart236
  store double %227, double* %260, align 8
  br label %262

; <label>:262:                                    ; preds = %261
  %263 = load i32, i32* %36, align 4
  %264 = add i32 %263, 1
  store i32 %264, i32* %36, align 4
  br label %208

; <label>:265:                                    ; preds = %84
  %266 = load i32, i32* @x.97
  %267 = load i32, i32* @y.98
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %265, %originalBB38alteredBB
  %274 = landingpad { i8*, i32 }
          cleanup
  %275 = extractvalue { i8*, i32 } %274, 0
  store i8* %275, i8** %29, align 8
  %276 = extractvalue { i8*, i32 } %274, 1
  store i32 %276, i32* %30, align 4
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"* %28) #12
  %277 = load i32, i32* @x.97
  %278 = load i32, i32* @y.98
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %951

; <label>:285:                                    ; preds = %originalBBpart236, %originalBBpart232, %215, %211, %originalBBpart216, %166, %161, %originalBBpart212, %originalBBpart28, %122, %119, %112
  %286 = landingpad { i8*, i32 }
          cleanup
  %287 = extractvalue { i8*, i32 } %286, 0
  store i8* %287, i8** %29, align 8
  %288 = extractvalue { i8*, i32 } %286, 1
  store i32 %288, i32* %30, align 4
  invoke void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev(%"class.std::vector.59"* %26)
          to label %346 unwind label %956

; <label>:289:                                    ; preds = %208
  %290 = load i32, i32* @x.97
  %291 = load i32, i32* @y.98
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %289, %originalBB42alteredBB
  %298 = load i32, i32* @x.97
  %299 = load i32, i32* @y.98
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %306

; <label>:306:                                    ; preds = %originalBBpart244
  %307 = load i32, i32* %35, align 4
  %308 = add i32 %307, 1
  store i32 %308, i32* %35, align 4
  br label %187

; <label>:309:                                    ; preds = %originalBBpart220
  %310 = load i32, i32* @x.97
  %311 = load i32, i32* @y.98
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %309, %originalBB46alteredBB
  %318 = load i32, i32* @x.97
  %319 = load i32, i32* @y.98
  %320 = sub i32 %318, 1
  %321 = mul i32 %318, %320
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %323, %324
  br i1 %325, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %326

; <label>:326:                                    ; preds = %originalBBpart248
  %327 = load i32, i32* @x.97
  %328 = load i32, i32* @y.98
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %326, %originalBB50alteredBB
  %335 = load i32, i32* %31, align 4
  %336 = add i32 %335, 1
  store i32 %336, i32* %31, align 4
  %337 = load i32, i32* @x.97
  %338 = load i32, i32* @y.98
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart258, label %originalBB50alteredBB

originalBBpart258:                                ; preds = %originalBB50
  br label %104

; <label>:345:                                    ; preds = %104
  call void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev(%"class.std::vector.59"* %26)
  br label %363

; <label>:346:                                    ; preds = %285
  %347 = load i32, i32* @x.97
  %348 = load i32, i32* @y.98
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %346, %originalBB60alteredBB
  %355 = load i32, i32* @x.97
  %356 = load i32, i32* @y.98
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br label %951

; <label>:363:                                    ; preds = %345, %74
  %364 = load i32, i32* %24, align 4
  %365 = call i32 @_Zan11UpdateFlagsS_(i32 %364, i32 2)
  %366 = icmp ne i32 %365, 0
  br i1 %366, label %367, label %903

; <label>:367:                                    ; preds = %363
  %368 = load i32, i32* %25, align 4
  %369 = zext i32 %368 to i64
  call void @_ZN6TensorILi2ELi3EEC2Ev(%class.Tensor.33* %39)
  call void @_ZNSaI6TensorILi2ELi3EEEC2Ev(%"class.std::allocator.67"* %40) #12
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.65"* %38, i64 %369, %class.Tensor.33* dereferenceable(72) %39, %"class.std::allocator.67"* dereferenceable(1) %40)
          to label %370 unwind label %589

; <label>:370:                                    ; preds = %367
  %371 = load i32, i32* @x.97
  %372 = load i32, i32* @y.98
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %370, %originalBB64alteredBB
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %40) #12
  %379 = load i32, i32* %25, align 4
  %380 = zext i32 %379 to i64
  %381 = load i32, i32* @x.97
  %382 = load i32, i32* @y.98
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  invoke void @_ZN6TensorILi2ELi3EEC2Ev(%class.Tensor.33* %42)
          to label %389 unwind label %609

; <label>:389:                                    ; preds = %originalBBpart266
  %390 = load i32, i32* @x.97
  %391 = load i32, i32* @y.98
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %389, %originalBB68alteredBB
  call void @_ZNSaI6TensorILi2ELi3EEEC2Ev(%"class.std::allocator.67"* %43) #12
  %398 = load i32, i32* @x.97
  %399 = load i32, i32* @y.98
  %400 = sub i32 %398, 1
  %401 = mul i32 %398, %400
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %403, %404
  br i1 %405, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.65"* %41, i64 %380, %class.Tensor.33* dereferenceable(72) %42, %"class.std::allocator.67"* dereferenceable(1) %43)
          to label %406 unwind label %629

; <label>:406:                                    ; preds = %originalBBpart270
  %407 = load i32, i32* @x.97
  %408 = load i32, i32* @y.98
  %409 = sub i32 %407, 1
  %410 = mul i32 %407, %409
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %412, %413
  br i1 %414, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %406, %originalBB72alteredBB
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %43) #12
  store i32 0, i32* %44, align 4
  %415 = load i32, i32* @x.97
  %416 = load i32, i32* @y.98
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br label %423

; <label>:423:                                    ; preds = %847, %originalBBpart274
  %424 = load i32, i32* %44, align 4
  %425 = bitcast %class.FE_Nedelec* %59 to i8*
  %426 = getelementptr inbounds i8, i8* %425, i64 24
  %427 = bitcast i8* %426 to %class.FiniteElementData*
  %428 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %427, i32 0, i32 10
  %429 = load i32, i32* %428, align 8
  %430 = icmp ult i32 %424, %429
  br i1 %430, label %431, label %850

; <label>:431:                                    ; preds = %423
  %432 = load %class.Mapping*, %class.Mapping** %17, align 8
  %433 = bitcast %class.Mapping* %432 to void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)***
  %434 = load void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)**, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*** %433, align 8
  %435 = getelementptr inbounds void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)** %434, i64 5
  %436 = load void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)** %435, align 8
  %437 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %38)
          to label %438 unwind label %633

; <label>:438:                                    ; preds = %431
  %439 = load i32, i32* @x.97
  %440 = load i32, i32* @y.98
  %441 = sub i32 %439, 1
  %442 = mul i32 %439, %441
  %443 = urem i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = icmp slt i32 %440, 10
  %446 = or i1 %444, %445
  br i1 %446, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %438, %originalBB76alteredBB
  %447 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %45, i32 0, i32 0
  store %class.Tensor.33* %437, %class.Tensor.33** %447, align 8
  %448 = load i32, i32* @x.97
  %449 = load i32, i32* @y.98
  %450 = sub i32 %448, 1
  %451 = mul i32 %448, %450
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %453, %454
  br i1 %455, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  %456 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %45)
          to label %457 unwind label %633

; <label>:457:                                    ; preds = %originalBBpart278
  %458 = load i32, i32* @x.97
  %459 = load i32, i32* @y.98
  %460 = sub i32 %458, 1
  %461 = mul i32 %458, %460
  %462 = urem i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %463, %464
  br i1 %465, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %457, %originalBB80alteredBB
  %466 = load i32, i32* @x.97
  %467 = load i32, i32* @y.98
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  %474 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %38)
          to label %475 unwind label %633

; <label>:475:                                    ; preds = %originalBBpart282
  %476 = load i32, i32* @x.97
  %477 = load i32, i32* @y.98
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %475, %originalBB84alteredBB
  %484 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %46, i32 0, i32 0
  store %class.Tensor.33* %474, %class.Tensor.33** %484, align 8
  %485 = load i32, i32* @x.97
  %486 = load i32, i32* @y.98
  %487 = sub i32 %485, 1
  %488 = mul i32 %485, %487
  %489 = urem i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %490, %491
  br i1 %492, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  %493 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %46)
          to label %494 unwind label %633

; <label>:494:                                    ; preds = %originalBBpart286
  %495 = invoke i64 @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE4sizeEv(%"class.std::vector.65"* %38)
          to label %496 unwind label %633

; <label>:496:                                    ; preds = %494
  %497 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %493, i64 %495
  %498 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %23, align 8
  %499 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %498, i32 0, i32 2
  %500 = load i32, i32* %44, align 4
  invoke void @_ZN5TableILi2E6TensorILi2ELi3EEEixEj(%"class.internal::TableBaseAccessors::Accessor.58"* sret %47, %class.Table.54* %499, i32 %500)
          to label %501 unwind label %633

; <label>:501:                                    ; preds = %496
  %502 = invoke %class.Tensor.33* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi2ELi3EELb0ELj1EE5beginEv(%"class.internal::TableBaseAccessors::Accessor.58"* %47)
          to label %503 unwind label %633

; <label>:503:                                    ; preds = %501
  %504 = load i32, i32* @x.97
  %505 = load i32, i32* @y.98
  %506 = sub i32 %504, 1
  %507 = mul i32 %504, %506
  %508 = urem i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %505, 10
  %511 = or i1 %509, %510
  br i1 %511, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %503, %originalBB88alteredBB
  %512 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %20, align 8
  %513 = load i32, i32* @x.97
  %514 = load i32, i32* @y.98
  %515 = sub i32 %513, 1
  %516 = mul i32 %513, %515
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %518, %519
  br i1 %520, label %originalBBpart290, label %originalBB88alteredBB

originalBBpart290:                                ; preds = %originalBB88
  invoke void %436(%class.Mapping* %432, %class.Tensor.33* %456, %class.Tensor.33* %497, %class.Tensor.33* %502, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %512)
          to label %521 unwind label %633

; <label>:521:                                    ; preds = %originalBBpart290
  store i32 0, i32* %48, align 4
  br label %522

; <label>:522:                                    ; preds = %586, %521
  %523 = load i32, i32* @x.97
  %524 = load i32, i32* @y.98
  %525 = sub i32 %523, 1
  %526 = mul i32 %523, %525
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %524, 10
  %530 = or i1 %528, %529
  br i1 %530, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %522, %originalBB92alteredBB
  %531 = load i32, i32* %48, align 4
  %532 = load i32, i32* %25, align 4
  %533 = icmp ult i32 %531, %532
  %534 = load i32, i32* @x.97
  %535 = load i32, i32* @y.98
  %536 = sub i32 %534, 1
  %537 = mul i32 %534, %536
  %538 = urem i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = icmp slt i32 %535, 10
  %541 = or i1 %539, %540
  br i1 %541, label %originalBBpart294, label %originalBB92alteredBB

originalBBpart294:                                ; preds = %originalBB92
  br i1 %533, label %542, label %637

; <label>:542:                                    ; preds = %originalBBpart294
  %543 = load i32, i32* @x.97
  %544 = load i32, i32* @y.98
  %545 = sub i32 %543, 1
  %546 = mul i32 %543, %545
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %548, %549
  br i1 %550, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %542, %originalBB96alteredBB
  %551 = load i32, i32* %48, align 4
  %552 = zext i32 %551 to i64
  %553 = load i32, i32* @x.97
  %554 = load i32, i32* @y.98
  %555 = sub i32 %553, 1
  %556 = mul i32 %553, %555
  %557 = urem i32 %556, 2
  %558 = icmp eq i32 %557, 0
  %559 = icmp slt i32 %554, 10
  %560 = or i1 %558, %559
  br i1 %560, label %originalBBpart298, label %originalBB96alteredBB

originalBBpart298:                                ; preds = %originalBB96
  %561 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %38, i64 %552)
          to label %562 unwind label %633

; <label>:562:                                    ; preds = %originalBBpart298
  invoke void @_Z9transposeRK6TensorILi2ELi3EE(%class.Tensor.33* sret %49, %class.Tensor.33* dereferenceable(72) %561)
          to label %563 unwind label %633

; <label>:563:                                    ; preds = %562
  %564 = load i32, i32* %48, align 4
  %565 = zext i32 %564 to i64
  %566 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %41, i64 %565)
          to label %567 unwind label %633

; <label>:567:                                    ; preds = %563
  %568 = load i32, i32* @x.97
  %569 = load i32, i32* @y.98
  %570 = sub i32 %568, 1
  %571 = mul i32 %568, %570
  %572 = urem i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %569, 10
  %575 = or i1 %573, %574
  br i1 %575, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %567, %originalBB100alteredBB
  %576 = load i32, i32* @x.97
  %577 = load i32, i32* @y.98
  %578 = sub i32 %576, 1
  %579 = mul i32 %576, %578
  %580 = urem i32 %579, 2
  %581 = icmp eq i32 %580, 0
  %582 = icmp slt i32 %577, 10
  %583 = or i1 %581, %582
  br i1 %583, label %originalBBpart2102, label %originalBB100alteredBB

originalBBpart2102:                               ; preds = %originalBB100
  %584 = invoke dereferenceable(72) %class.Tensor.33* @_ZN6TensorILi2ELi3EEaSERKS0_(%class.Tensor.33* %566, %class.Tensor.33* dereferenceable(72) %49)
          to label %585 unwind label %633

; <label>:585:                                    ; preds = %originalBBpart2102
  br label %586

; <label>:586:                                    ; preds = %585
  %587 = load i32, i32* %48, align 4
  %588 = add i32 %587, 1
  store i32 %588, i32* %48, align 4
  br label %522

; <label>:589:                                    ; preds = %367
  %590 = load i32, i32* @x.97
  %591 = load i32, i32* @y.98
  %592 = sub i32 %590, 1
  %593 = mul i32 %590, %592
  %594 = urem i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %591, 10
  %597 = or i1 %595, %596
  br i1 %597, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %589, %originalBB104alteredBB
  %598 = landingpad { i8*, i32 }
          cleanup
  %599 = extractvalue { i8*, i32 } %598, 0
  store i8* %599, i8** %29, align 8
  %600 = extractvalue { i8*, i32 } %598, 1
  store i32 %600, i32* %30, align 4
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %40) #12
  %601 = load i32, i32* @x.97
  %602 = load i32, i32* @y.98
  %603 = sub i32 %601, 1
  %604 = mul i32 %601, %603
  %605 = urem i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = icmp slt i32 %602, 10
  %608 = or i1 %606, %607
  br i1 %608, label %originalBBpart2106, label %originalBB104alteredBB

originalBBpart2106:                               ; preds = %originalBB104
  br label %951

; <label>:609:                                    ; preds = %originalBBpart2152, %originalBBpart266
  %610 = load i32, i32* @x.97
  %611 = load i32, i32* @y.98
  %612 = sub i32 %610, 1
  %613 = mul i32 %610, %612
  %614 = urem i32 %613, 2
  %615 = icmp eq i32 %614, 0
  %616 = icmp slt i32 %611, 10
  %617 = or i1 %615, %616
  br i1 %617, label %originalBB108, label %originalBB108alteredBB

originalBB108:                                    ; preds = %609, %originalBB108alteredBB
  %618 = landingpad { i8*, i32 }
          cleanup
  %619 = extractvalue { i8*, i32 } %618, 0
  store i8* %619, i8** %29, align 8
  %620 = extractvalue { i8*, i32 } %618, 1
  store i32 %620, i32* %30, align 4
  %621 = load i32, i32* @x.97
  %622 = load i32, i32* @y.98
  %623 = sub i32 %621, 1
  %624 = mul i32 %621, %623
  %625 = urem i32 %624, 2
  %626 = icmp eq i32 %625, 0
  %627 = icmp slt i32 %622, 10
  %628 = or i1 %626, %627
  br i1 %628, label %originalBBpart2110, label %originalBB108alteredBB

originalBBpart2110:                               ; preds = %originalBB108
  br label %885

; <label>:629:                                    ; preds = %originalBBpart270
  %630 = landingpad { i8*, i32 }
          cleanup
  %631 = extractvalue { i8*, i32 } %630, 0
  store i8* %631, i8** %29, align 8
  %632 = extractvalue { i8*, i32 } %630, 1
  store i32 %632, i32* %30, align 4
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %43) #12
  br label %885

; <label>:633:                                    ; preds = %originalBBpart2138, %801, %794, %originalBBpart2134, %771, %724, %720, %719, %715, %708, %originalBBpart2122, %686, %684, %681, %originalBBpart2118, %660, %originalBBpart2114, %originalBBpart2102, %563, %562, %originalBBpart298, %originalBBpart290, %501, %496, %494, %originalBBpart286, %originalBBpart282, %originalBBpart278, %431
  %634 = landingpad { i8*, i32 }
          cleanup
  %635 = extractvalue { i8*, i32 } %634, 0
  store i8* %635, i8** %29, align 8
  %636 = extractvalue { i8*, i32 } %634, 1
  store i32 %636, i32* %30, align 4
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"* %41)
          to label %868 unwind label %956

; <label>:637:                                    ; preds = %originalBBpart294
  %638 = load i32, i32* @x.97
  %639 = load i32, i32* @y.98
  %640 = sub i32 %638, 1
  %641 = mul i32 %638, %640
  %642 = urem i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %639, 10
  %645 = or i1 %643, %644
  br i1 %645, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %637, %originalBB112alteredBB
  %646 = load %class.Mapping*, %class.Mapping** %17, align 8
  %647 = bitcast %class.Mapping* %646 to void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)***
  %648 = load void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)**, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*** %647, align 8
  %649 = getelementptr inbounds void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)** %648, i64 5
  %650 = load void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)** %649, align 8
  %651 = load i32, i32* @x.97
  %652 = load i32, i32* @y.98
  %653 = sub i32 %651, 1
  %654 = mul i32 %651, %653
  %655 = urem i32 %654, 2
  %656 = icmp eq i32 %655, 0
  %657 = icmp slt i32 %652, 10
  %658 = or i1 %656, %657
  br i1 %658, label %originalBBpart2114, label %originalBB112alteredBB

originalBBpart2114:                               ; preds = %originalBB112
  %659 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %38)
          to label %660 unwind label %633

; <label>:660:                                    ; preds = %originalBBpart2114
  %661 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %50, i32 0, i32 0
  store %class.Tensor.33* %659, %class.Tensor.33** %661, align 8
  %662 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %50)
          to label %663 unwind label %633

; <label>:663:                                    ; preds = %660
  %664 = load i32, i32* @x.97
  %665 = load i32, i32* @y.98
  %666 = sub i32 %664, 1
  %667 = mul i32 %664, %666
  %668 = urem i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %665, 10
  %671 = or i1 %669, %670
  br i1 %671, label %originalBB116, label %originalBB116alteredBB

originalBB116:                                    ; preds = %663, %originalBB116alteredBB
  %672 = load i32, i32* @x.97
  %673 = load i32, i32* @y.98
  %674 = sub i32 %672, 1
  %675 = mul i32 %672, %674
  %676 = urem i32 %675, 2
  %677 = icmp eq i32 %676, 0
  %678 = icmp slt i32 %673, 10
  %679 = or i1 %677, %678
  br i1 %679, label %originalBBpart2118, label %originalBB116alteredBB

originalBBpart2118:                               ; preds = %originalBB116
  %680 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %38)
          to label %681 unwind label %633

; <label>:681:                                    ; preds = %originalBBpart2118
  %682 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %51, i32 0, i32 0
  store %class.Tensor.33* %680, %class.Tensor.33** %682, align 8
  %683 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %51)
          to label %684 unwind label %633

; <label>:684:                                    ; preds = %681
  %685 = invoke i64 @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE4sizeEv(%"class.std::vector.65"* %38)
          to label %686 unwind label %633

; <label>:686:                                    ; preds = %684
  %687 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %683, i64 %685
  %688 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %41)
          to label %689 unwind label %633

; <label>:689:                                    ; preds = %686
  %690 = load i32, i32* @x.97
  %691 = load i32, i32* @y.98
  %692 = sub i32 %690, 1
  %693 = mul i32 %690, %692
  %694 = urem i32 %693, 2
  %695 = icmp eq i32 %694, 0
  %696 = icmp slt i32 %691, 10
  %697 = or i1 %695, %696
  br i1 %697, label %originalBB120, label %originalBB120alteredBB

originalBB120:                                    ; preds = %689, %originalBB120alteredBB
  %698 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %52, i32 0, i32 0
  store %class.Tensor.33* %688, %class.Tensor.33** %698, align 8
  %699 = load i32, i32* @x.97
  %700 = load i32, i32* @y.98
  %701 = sub i32 %699, 1
  %702 = mul i32 %699, %701
  %703 = urem i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = icmp slt i32 %700, 10
  %706 = or i1 %704, %705
  br i1 %706, label %originalBBpart2122, label %originalBB120alteredBB

originalBBpart2122:                               ; preds = %originalBB120
  %707 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %52)
          to label %708 unwind label %633

; <label>:708:                                    ; preds = %originalBBpart2122
  %709 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %20, align 8
  invoke void %650(%class.Mapping* %646, %class.Tensor.33* %662, %class.Tensor.33* %687, %class.Tensor.33* %707, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %709)
          to label %710 unwind label %633

; <label>:710:                                    ; preds = %708
  store i32 0, i32* %53, align 4
  br label %711

; <label>:711:                                    ; preds = %727, %710
  %712 = load i32, i32* %53, align 4
  %713 = load i32, i32* %25, align 4
  %714 = icmp ult i32 %712, %713
  br i1 %714, label %715, label %730

; <label>:715:                                    ; preds = %711
  %716 = load i32, i32* %53, align 4
  %717 = zext i32 %716 to i64
  %718 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %38, i64 %717)
          to label %719 unwind label %633

; <label>:719:                                    ; preds = %715
  invoke void @_Z9transposeRK6TensorILi2ELi3EE(%class.Tensor.33* sret %54, %class.Tensor.33* dereferenceable(72) %718)
          to label %720 unwind label %633

; <label>:720:                                    ; preds = %719
  %721 = load i32, i32* %53, align 4
  %722 = zext i32 %721 to i64
  %723 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %41, i64 %722)
          to label %724 unwind label %633

; <label>:724:                                    ; preds = %720
  %725 = invoke dereferenceable(72) %class.Tensor.33* @_ZN6TensorILi2ELi3EEaSERKS0_(%class.Tensor.33* %723, %class.Tensor.33* dereferenceable(72) %54)
          to label %726 unwind label %633

; <label>:726:                                    ; preds = %724
  br label %727

; <label>:727:                                    ; preds = %726
  %728 = load i32, i32* %53, align 4
  %729 = add i32 %728, 1
  store i32 %729, i32* %53, align 4
  br label %711

; <label>:730:                                    ; preds = %711
  %731 = load i32, i32* @x.97
  %732 = load i32, i32* @y.98
  %733 = sub i32 %731, 1
  %734 = mul i32 %731, %733
  %735 = urem i32 %734, 2
  %736 = icmp eq i32 %735, 0
  %737 = icmp slt i32 %732, 10
  %738 = or i1 %736, %737
  br i1 %738, label %originalBB124, label %originalBB124alteredBB

originalBB124:                                    ; preds = %730, %originalBB124alteredBB
  store i32 0, i32* %55, align 4
  %739 = load i32, i32* @x.97
  %740 = load i32, i32* @y.98
  %741 = sub i32 %739, 1
  %742 = mul i32 %739, %741
  %743 = urem i32 %742, 2
  %744 = icmp eq i32 %743, 0
  %745 = icmp slt i32 %740, 10
  %746 = or i1 %744, %745
  br i1 %746, label %originalBBpart2126, label %originalBB124alteredBB

originalBBpart2126:                               ; preds = %originalBB124
  br label %747

; <label>:747:                                    ; preds = %originalBBpart2148, %originalBBpart2126
  %748 = load i32, i32* %55, align 4
  %749 = load i32, i32* %25, align 4
  %750 = icmp ult i32 %748, %749
  br i1 %750, label %751, label %846

; <label>:751:                                    ; preds = %747
  %752 = load i32, i32* @x.97
  %753 = load i32, i32* @y.98
  %754 = sub i32 %752, 1
  %755 = mul i32 %752, %754
  %756 = urem i32 %755, 2
  %757 = icmp eq i32 %756, 0
  %758 = icmp slt i32 %753, 10
  %759 = or i1 %757, %758
  br i1 %759, label %originalBB128, label %originalBB128alteredBB

originalBB128:                                    ; preds = %751, %originalBB128alteredBB
  store i32 0, i32* %56, align 4
  %760 = load i32, i32* @x.97
  %761 = load i32, i32* @y.98
  %762 = sub i32 %760, 1
  %763 = mul i32 %760, %762
  %764 = urem i32 %763, 2
  %765 = icmp eq i32 %764, 0
  %766 = icmp slt i32 %761, 10
  %767 = or i1 %765, %766
  br i1 %767, label %originalBBpart2130, label %originalBB128alteredBB

originalBBpart2130:                               ; preds = %originalBB128
  br label %768

; <label>:768:                                    ; preds = %823, %originalBBpart2130
  %769 = load i32, i32* %56, align 4
  %770 = icmp ult i32 %769, 3
  br i1 %770, label %771, label %826

; <label>:771:                                    ; preds = %768
  %772 = load i32, i32* %55, align 4
  %773 = zext i32 %772 to i64
  %774 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %41, i64 %773)
          to label %775 unwind label %633

; <label>:775:                                    ; preds = %771
  %776 = load i32, i32* @x.97
  %777 = load i32, i32* @y.98
  %778 = sub i32 %776, 1
  %779 = mul i32 %776, %778
  %780 = urem i32 %779, 2
  %781 = icmp eq i32 %780, 0
  %782 = icmp slt i32 %777, 10
  %783 = or i1 %781, %782
  br i1 %783, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %775, %originalBB132alteredBB
  %784 = load i32, i32* %56, align 4
  %785 = load i32, i32* @x.97
  %786 = load i32, i32* @y.98
  %787 = sub i32 %785, 1
  %788 = mul i32 %785, %787
  %789 = urem i32 %788, 2
  %790 = icmp eq i32 %789, 0
  %791 = icmp slt i32 %786, 10
  %792 = or i1 %790, %791
  br i1 %792, label %originalBBpart2134, label %originalBB132alteredBB

originalBBpart2134:                               ; preds = %originalBB132
  %793 = invoke dereferenceable(24) %class.Tensor* @_ZN6TensorILi2ELi3EEixEj(%class.Tensor.33* %774, i32 %784)
          to label %794 unwind label %633

; <label>:794:                                    ; preds = %originalBBpart2134
  %795 = load %class.FEValuesData*, %class.FEValuesData** %22, align 8
  %796 = getelementptr inbounds %class.FEValuesData, %class.FEValuesData* %795, i32 0, i32 1
  %797 = load i32, i32* %44, align 4
  %798 = mul i32 %797, 3
  %799 = load i32, i32* %56, align 4
  %800 = add i32 %798, %799
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %57, %class.Table.50* %796, i32 %800)
          to label %801 unwind label %633

; <label>:801:                                    ; preds = %794
  %802 = load i32, i32* %55, align 4
  %803 = invoke dereferenceable(24) %class.Tensor* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi1ELi3EELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %57, i32 %802)
          to label %804 unwind label %633

; <label>:804:                                    ; preds = %801
  %805 = load i32, i32* @x.97
  %806 = load i32, i32* @y.98
  %807 = sub i32 %805, 1
  %808 = mul i32 %805, %807
  %809 = urem i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = icmp slt i32 %806, 10
  %812 = or i1 %810, %811
  br i1 %812, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %804, %originalBB136alteredBB
  %813 = load i32, i32* @x.97
  %814 = load i32, i32* @y.98
  %815 = sub i32 %813, 1
  %816 = mul i32 %813, %815
  %817 = urem i32 %816, 2
  %818 = icmp eq i32 %817, 0
  %819 = icmp slt i32 %814, 10
  %820 = or i1 %818, %819
  br i1 %820, label %originalBBpart2138, label %originalBB136alteredBB

originalBBpart2138:                               ; preds = %originalBB136
  %821 = invoke dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor* %803, %class.Tensor* dereferenceable(24) %793)
          to label %822 unwind label %633

; <label>:822:                                    ; preds = %originalBBpart2138
  br label %823

; <label>:823:                                    ; preds = %822
  %824 = load i32, i32* %56, align 4
  %825 = add i32 %824, 1
  store i32 %825, i32* %56, align 4
  br label %768

; <label>:826:                                    ; preds = %768
  br label %827

; <label>:827:                                    ; preds = %826
  %828 = load i32, i32* @x.97
  %829 = load i32, i32* @y.98
  %830 = sub i32 %828, 1
  %831 = mul i32 %828, %830
  %832 = urem i32 %831, 2
  %833 = icmp eq i32 %832, 0
  %834 = icmp slt i32 %829, 10
  %835 = or i1 %833, %834
  br i1 %835, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %827, %originalBB140alteredBB
  %836 = load i32, i32* %55, align 4
  %837 = add i32 %836, 1
  store i32 %837, i32* %55, align 4
  %838 = load i32, i32* @x.97
  %839 = load i32, i32* @y.98
  %840 = sub i32 %838, 1
  %841 = mul i32 %838, %840
  %842 = urem i32 %841, 2
  %843 = icmp eq i32 %842, 0
  %844 = icmp slt i32 %839, 10
  %845 = or i1 %843, %844
  br i1 %845, label %originalBBpart2148, label %originalBB140alteredBB

originalBBpart2148:                               ; preds = %originalBB140
  br label %747

; <label>:846:                                    ; preds = %747
  br label %847

; <label>:847:                                    ; preds = %846
  %848 = load i32, i32* %44, align 4
  %849 = add i32 %848, 1
  store i32 %849, i32* %44, align 4
  br label %423

; <label>:850:                                    ; preds = %423
  %851 = load i32, i32* @x.97
  %852 = load i32, i32* @y.98
  %853 = sub i32 %851, 1
  %854 = mul i32 %851, %853
  %855 = urem i32 %854, 2
  %856 = icmp eq i32 %855, 0
  %857 = icmp slt i32 %852, 10
  %858 = or i1 %856, %857
  br i1 %858, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %850, %originalBB150alteredBB
  %859 = load i32, i32* @x.97
  %860 = load i32, i32* @y.98
  %861 = sub i32 %859, 1
  %862 = mul i32 %859, %861
  %863 = urem i32 %862, 2
  %864 = icmp eq i32 %863, 0
  %865 = icmp slt i32 %860, 10
  %866 = or i1 %864, %865
  br i1 %866, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"* %41)
          to label %867 unwind label %609

; <label>:867:                                    ; preds = %originalBBpart2152
  call void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"* %38)
  br label %903

; <label>:868:                                    ; preds = %633
  %869 = load i32, i32* @x.97
  %870 = load i32, i32* @y.98
  %871 = sub i32 %869, 1
  %872 = mul i32 %869, %871
  %873 = urem i32 %872, 2
  %874 = icmp eq i32 %873, 0
  %875 = icmp slt i32 %870, 10
  %876 = or i1 %874, %875
  br i1 %876, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %868, %originalBB154alteredBB
  %877 = load i32, i32* @x.97
  %878 = load i32, i32* @y.98
  %879 = sub i32 %877, 1
  %880 = mul i32 %877, %879
  %881 = urem i32 %880, 2
  %882 = icmp eq i32 %881, 0
  %883 = icmp slt i32 %878, 10
  %884 = or i1 %882, %883
  br i1 %884, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br label %885

; <label>:885:                                    ; preds = %originalBBpart2156, %629, %originalBBpart2110
  %886 = load i32, i32* @x.97
  %887 = load i32, i32* @y.98
  %888 = sub i32 %886, 1
  %889 = mul i32 %886, %888
  %890 = urem i32 %889, 2
  %891 = icmp eq i32 %890, 0
  %892 = icmp slt i32 %887, 10
  %893 = or i1 %891, %892
  br i1 %893, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %885, %originalBB158alteredBB
  %894 = load i32, i32* @x.97
  %895 = load i32, i32* @y.98
  %896 = sub i32 %894, 1
  %897 = mul i32 %894, %896
  %898 = urem i32 %897, 2
  %899 = icmp eq i32 %898, 0
  %900 = icmp slt i32 %895, 10
  %901 = or i1 %899, %900
  br i1 %901, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"* %38)
          to label %902 unwind label %956

; <label>:902:                                    ; preds = %originalBBpart2160
  br label %951

; <label>:903:                                    ; preds = %867, %363
  %904 = load i32, i32* %24, align 4
  %905 = call i32 @_Zan11UpdateFlagsS_(i32 %904, i32 4)
  %906 = icmp ne i32 %905, 0
  br i1 %906, label %907, label %934

; <label>:907:                                    ; preds = %903
  %908 = load i32, i32* @x.97
  %909 = load i32, i32* @y.98
  %910 = sub i32 %908, 1
  %911 = mul i32 %908, %910
  %912 = urem i32 %911, 2
  %913 = icmp eq i32 %912, 0
  %914 = icmp slt i32 %909, 10
  %915 = or i1 %913, %914
  br i1 %915, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %907, %originalBB162alteredBB
  %916 = bitcast %class.FE_Nedelec* %59 to %class.FiniteElementBase*
  %917 = load %class.Mapping*, %class.Mapping** %17, align 8
  %918 = load %class.TriaIterator*, %class.TriaIterator** %18, align 8
  %919 = call i32 @_ZN10QProjectorILi3EE17DataSetDescriptor4cellEv()
  %920 = getelementptr inbounds %"class.QProjector<3>::DataSetDescriptor", %"class.QProjector<3>::DataSetDescriptor"* %58, i32 0, i32 0
  store i32 %919, i32* %920, align 4
  %921 = call i32 @_ZNK10QProjectorILi3EE17DataSetDescriptorcvjEv(%"class.QProjector<3>::DataSetDescriptor"* %58)
  %922 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %20, align 8
  %923 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %23, align 8
  %924 = bitcast %"class.FE_Nedelec<3>::InternalData"* %923 to %"class.FiniteElementBase<3>::InternalDataBase"*
  %925 = load %class.FEValuesData*, %class.FEValuesData** %22, align 8
  call void @_ZNK17FiniteElementBaseILi3EE11compute_2ndERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRNS2_16InternalDataBaseERNS0_16InternalDataBaseER12FEValuesDataILi3EE(%class.FiniteElementBase* %916, %class.Mapping* dereferenceable(24) %917, %class.TriaIterator* nonnull %918, i32 %921, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %922, %"class.FiniteElementBase<3>::InternalDataBase"* dereferenceable(64) %924, %class.FEValuesData* dereferenceable(272) %925)
  %926 = load i32, i32* @x.97
  %927 = load i32, i32* @y.98
  %928 = sub i32 %926, 1
  %929 = mul i32 %926, %928
  %930 = urem i32 %929, 2
  %931 = icmp eq i32 %930, 0
  %932 = icmp slt i32 %927, 10
  %933 = or i1 %931, %932
  br i1 %933, label %originalBBpart2164, label %originalBB162alteredBB

originalBBpart2164:                               ; preds = %originalBB162
  br label %934

; <label>:934:                                    ; preds = %originalBBpart2164, %903
  %935 = load i32, i32* @x.97
  %936 = load i32, i32* @y.98
  %937 = sub i32 %935, 1
  %938 = mul i32 %935, %937
  %939 = urem i32 %938, 2
  %940 = icmp eq i32 %939, 0
  %941 = icmp slt i32 %936, 10
  %942 = or i1 %940, %941
  br i1 %942, label %originalBB166, label %originalBB166alteredBB

originalBB166:                                    ; preds = %934, %originalBB166alteredBB
  %943 = load i32, i32* @x.97
  %944 = load i32, i32* @y.98
  %945 = sub i32 %943, 1
  %946 = mul i32 %943, %945
  %947 = urem i32 %946, 2
  %948 = icmp eq i32 %947, 0
  %949 = icmp slt i32 %944, 10
  %950 = or i1 %948, %949
  br i1 %950, label %originalBBpart2168, label %originalBB166alteredBB

originalBBpart2168:                               ; preds = %originalBB166
  ret void

; <label>:951:                                    ; preds = %902, %originalBBpart2106, %originalBBpart262, %originalBBpart240
  %952 = load i8*, i8** %29, align 8
  %953 = load i32, i32* %30, align 4
  %954 = insertvalue { i8*, i32 } undef, i8* %952, 0
  %955 = insertvalue { i8*, i32 } %954, i32 %953, 1
  resume { i8*, i32 } %955

; <label>:956:                                    ; preds = %originalBBpart2160, %633, %285
  %957 = landingpad { i8*, i32 }
          catch i8* null
  %958 = extractvalue { i8*, i32 } %957, 0
  call void @__clang_call_terminate(i8* %958) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %7
  %959 = alloca %class.FE_Nedelec*, align 8
  %960 = alloca %class.Mapping*, align 8
  %961 = alloca %class.TriaIterator*, align 8
  %962 = alloca %class.Quadrature*, align 8
  %963 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %964 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %965 = alloca %class.FEValuesData*, align 8
  %966 = alloca %"class.FE_Nedelec<3>::InternalData"*, align 8
  %967 = alloca i32, align 4
  %968 = alloca i32, align 4
  %969 = alloca %"class.std::vector.59", align 8
  %970 = alloca %class.Tensor, align 8
  %971 = alloca %"class.std::allocator.61", align 1
  %972 = alloca i8*
  %973 = alloca i32
  %974 = alloca i32, align 4
  %975 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %976 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %977 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %978 = alloca i32, align 4
  %979 = alloca i32, align 4
  %980 = alloca %"class.internal::TableBaseAccessors::Accessor.64", align 8
  %981 = alloca %"class.std::vector.65", align 8
  %982 = alloca %class.Tensor.33, align 8
  %983 = alloca %"class.std::allocator.67", align 1
  %984 = alloca %"class.std::vector.65", align 8
  %985 = alloca %class.Tensor.33, align 8
  %986 = alloca %"class.std::allocator.67", align 1
  %987 = alloca i32, align 4
  %988 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %989 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %990 = alloca %"class.internal::TableBaseAccessors::Accessor.58", align 8
  %991 = alloca i32, align 4
  %992 = alloca %class.Tensor.33, align 8
  %993 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %994 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %995 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %996 = alloca i32, align 4
  %997 = alloca %class.Tensor.33, align 8
  %998 = alloca i32, align 4
  %999 = alloca i32, align 4
  %1000 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %1001 = alloca %"class.QProjector<3>::DataSetDescriptor", align 4
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %959, align 8
  store %class.Mapping* %1, %class.Mapping** %960, align 8
  store %class.TriaIterator* %2, %class.TriaIterator** %961, align 8
  store %class.Quadrature* %3, %class.Quadrature** %962, align 8
  store %"class.Mapping<3>::InternalDataBase"* %4, %"class.Mapping<3>::InternalDataBase"** %963, align 8
  store %"class.Mapping<3>::InternalDataBase"* %5, %"class.Mapping<3>::InternalDataBase"** %964, align 8
  store %class.FEValuesData* %6, %class.FEValuesData** %965, align 8
  %1002 = load %class.FE_Nedelec*, %class.FE_Nedelec** %959, align 8
  %1003 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %964, align 8
  %1004 = bitcast %"class.Mapping<3>::InternalDataBase"* %1003 to i8*
  %1005 = call i8* @__dynamic_cast(i8* %1004, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10FE_NedelecILi3EE12InternalDataE to i8*), i64 0) #12
  %1006 = bitcast i8* %1005 to %"class.FE_Nedelec<3>::InternalData"*
  %1007 = icmp eq %"class.FE_Nedelec<3>::InternalData"* %1006, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %87
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"* %28) #12
  store i32 0, i32* %31, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %124
  %1008 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  store %class.Tensor* %123, %class.Tensor** %1008, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %143
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %168
  %1009 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %20, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %187
  %1010 = load i32, i32* %35, align 4
  %1011 = load i32, i32* %25, align 4
  %1012 = icmp ult i32 %1010, %1011
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %218
  %1013 = load double, double* %217, align 8
  %1014 = load %class.FEValuesData*, %class.FEValuesData** %22, align 8
  %1015 = getelementptr inbounds %class.FEValuesData, %class.FEValuesData* %1014, i32 0, i32 0
  %1016 = load i32, i32* %31, align 4
  %_ = sub i32 0, %1016
  %gen = add i32 %_, 3
  %_23 = shl i32 %1016, 3
  %_24 = sub i32 0, %1016
  %gen25 = add i32 %_24, 3
  %1017 = mul i32 %1016, 3
  %1018 = load i32, i32* %36, align 4
  %_26 = sub i32 0, %1017
  %gen27 = add i32 %_26, %1018
  %_28 = sub i32 %1017, %1018
  %gen29 = mul i32 %_28, %1018
  %_30 = shl i32 %1017, %1018
  %1019 = add i32 %1017, %1018
  br label %originalBB22

originalBB34alteredBB:                            ; preds = %originalBB34, %242
  %1020 = load i32, i32* %35, align 4
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %265
  %1021 = landingpad { i8*, i32 }
          cleanup
  %1022 = extractvalue { i8*, i32 } %1021, 0
  store i8* %1022, i8** %29, align 8
  %1023 = extractvalue { i8*, i32 } %1021, 1
  store i32 %1023, i32* %30, align 4
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"* %28) #12
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %289
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %309
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %326
  %1024 = load i32, i32* %31, align 4
  %_51 = shl i32 %1024, 1
  %_52 = sub i32 0, %1024
  %gen53 = add i32 %_52, 1
  %_54 = sub i32 %1024, 1
  %gen55 = mul i32 %_54, 1
  %_56 = shl i32 %1024, 1
  %1025 = add i32 %1024, 1
  store i32 %1025, i32* %31, align 4
  br label %originalBB50

originalBB60alteredBB:                            ; preds = %originalBB60, %346
  br label %originalBB60

originalBB64alteredBB:                            ; preds = %originalBB64, %370
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %40) #12
  %1026 = load i32, i32* %25, align 4
  %1027 = zext i32 %1026 to i64
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %389
  call void @_ZNSaI6TensorILi2ELi3EEEC2Ev(%"class.std::allocator.67"* %43) #12
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %406
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %43) #12
  store i32 0, i32* %44, align 4
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %438
  %1028 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %45, i32 0, i32 0
  store %class.Tensor.33* %437, %class.Tensor.33** %1028, align 8
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %457
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %475
  %1029 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %46, i32 0, i32 0
  store %class.Tensor.33* %474, %class.Tensor.33** %1029, align 8
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %503
  %1030 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %20, align 8
  br label %originalBB88

originalBB92alteredBB:                            ; preds = %originalBB92, %522
  %1031 = load i32, i32* %48, align 4
  %1032 = load i32, i32* %25, align 4
  %1033 = icmp ult i32 %1031, %1032
  br label %originalBB92

originalBB96alteredBB:                            ; preds = %originalBB96, %542
  %1034 = load i32, i32* %48, align 4
  %1035 = zext i32 %1034 to i64
  br label %originalBB96

originalBB100alteredBB:                           ; preds = %originalBB100, %567
  br label %originalBB100

originalBB104alteredBB:                           ; preds = %originalBB104, %589
  %1036 = landingpad { i8*, i32 }
          cleanup
  %1037 = extractvalue { i8*, i32 } %1036, 0
  store i8* %1037, i8** %29, align 8
  %1038 = extractvalue { i8*, i32 } %1036, 1
  store i32 %1038, i32* %30, align 4
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %40) #12
  br label %originalBB104

originalBB108alteredBB:                           ; preds = %originalBB108, %609
  %1039 = landingpad { i8*, i32 }
          cleanup
  %1040 = extractvalue { i8*, i32 } %1039, 0
  store i8* %1040, i8** %29, align 8
  %1041 = extractvalue { i8*, i32 } %1039, 1
  store i32 %1041, i32* %30, align 4
  br label %originalBB108

originalBB112alteredBB:                           ; preds = %originalBB112, %637
  %1042 = load %class.Mapping*, %class.Mapping** %17, align 8
  %1043 = bitcast %class.Mapping* %1042 to void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)***
  %1044 = load void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)**, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*** %1043, align 8
  %1045 = getelementptr inbounds void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)** %1044, i64 5
  %1046 = load void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)** %1045, align 8
  br label %originalBB112

originalBB116alteredBB:                           ; preds = %originalBB116, %663
  br label %originalBB116

originalBB120alteredBB:                           ; preds = %originalBB120, %689
  %1047 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %52, i32 0, i32 0
  store %class.Tensor.33* %688, %class.Tensor.33** %1047, align 8
  br label %originalBB120

originalBB124alteredBB:                           ; preds = %originalBB124, %730
  store i32 0, i32* %55, align 4
  br label %originalBB124

originalBB128alteredBB:                           ; preds = %originalBB128, %751
  store i32 0, i32* %56, align 4
  br label %originalBB128

originalBB132alteredBB:                           ; preds = %originalBB132, %775
  %1048 = load i32, i32* %56, align 4
  br label %originalBB132

originalBB136alteredBB:                           ; preds = %originalBB136, %804
  br label %originalBB136

originalBB140alteredBB:                           ; preds = %originalBB140, %827
  %1049 = load i32, i32* %55, align 4
  %_141 = sub i32 %1049, 1
  %gen142 = mul i32 %_141, 1
  %_143 = sub i32 0, %1049
  %gen144 = add i32 %_143, 1
  %_145 = sub i32 0, %1049
  %gen146 = add i32 %_145, 1
  %1050 = add i32 %1049, 1
  store i32 %1050, i32* %55, align 4
  br label %originalBB140

originalBB150alteredBB:                           ; preds = %originalBB150, %850
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %868
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %885
  br label %originalBB158

originalBB162alteredBB:                           ; preds = %originalBB162, %907
  %1051 = bitcast %class.FE_Nedelec* %59 to %class.FiniteElementBase*
  %1052 = load %class.Mapping*, %class.Mapping** %17, align 8
  %1053 = load %class.TriaIterator*, %class.TriaIterator** %18, align 8
  %1054 = call i32 @_ZN10QProjectorILi3EE17DataSetDescriptor4cellEv()
  %1055 = getelementptr inbounds %"class.QProjector<3>::DataSetDescriptor", %"class.QProjector<3>::DataSetDescriptor"* %58, i32 0, i32 0
  store i32 %1054, i32* %1055, align 4
  %1056 = call i32 @_ZNK10QProjectorILi3EE17DataSetDescriptorcvjEv(%"class.QProjector<3>::DataSetDescriptor"* %58)
  %1057 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %20, align 8
  %1058 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %23, align 8
  %1059 = bitcast %"class.FE_Nedelec<3>::InternalData"* %1058 to %"class.FiniteElementBase<3>::InternalDataBase"*
  %1060 = load %class.FEValuesData*, %class.FEValuesData** %22, align 8
  call void @_ZNK17FiniteElementBaseILi3EE11compute_2ndERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRNS2_16InternalDataBaseERNS0_16InternalDataBaseER12FEValuesDataILi3EE(%class.FiniteElementBase* %1051, %class.Mapping* dereferenceable(24) %1052, %class.TriaIterator* nonnull %1053, i32 %1056, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %1057, %"class.FiniteElementBase<3>::InternalDataBase"* dereferenceable(64) %1059, %class.FEValuesData* dereferenceable(272) %1060)
  br label %originalBB162

originalBB166alteredBB:                           ; preds = %originalBB166, %934
  br label %originalBB166
}

; Function Attrs: nounwind readonly
declare i8* @__dynamic_cast(i8*, i8*, i8*, i64) #6

declare void @__cxa_bad_cast()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK7MappingILi3EE16InternalDataBase20current_update_flagsEv(%"class.Mapping<3>::InternalDataBase"*) #1 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  store %"class.Mapping<3>::InternalDataBase"* %0, %"class.Mapping<3>::InternalDataBase"** %3, align 8
  %4 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %3, align 8
  %5 = getelementptr inbounds %"class.Mapping<3>::InternalDataBase", %"class.Mapping<3>::InternalDataBase"* %4, i32 0, i32 4
  %6 = load i8, i8* %5, align 4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %8, label %27

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.99
  %10 = load i32, i32* @y.100
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = getelementptr inbounds %"class.Mapping<3>::InternalDataBase", %"class.Mapping<3>::InternalDataBase"* %4, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  store i32 %18, i32* %2, align 4
  %19 = load i32, i32* @x.99
  %20 = load i32, i32* @y.100
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:27:                                     ; preds = %1
  %28 = getelementptr inbounds %"class.Mapping<3>::InternalDataBase", %"class.Mapping<3>::InternalDataBase"* %4, i32 0, i32 3
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %2, align 4
  br label %30

; <label>:30:                                     ; preds = %27, %originalBBpart2
  %31 = load i32, i32* %2, align 4
  ret i32 %31

originalBBalteredBB:                              ; preds = %originalBB, %8
  %32 = getelementptr inbounds %"class.Mapping<3>::InternalDataBase", %"class.Mapping<3>::InternalDataBase"* %4, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %2, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6TensorILi1ELi3EEEC2Ev(%"class.std::allocator.61"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.101
  %3 = load i32, i32* @y.102
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.61"*, align 8
  store %"class.std::allocator.61"* %0, %"class.std::allocator.61"** %10, align 8
  %11 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %10, align 8
  %12 = bitcast %"class.std::allocator.61"* %11 to %"class.__gnu_cxx::new_allocator.62"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.62"* %12) #12
  %13 = load i32, i32* @x.101
  %14 = load i32, i32* @y.102
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.61"*, align 8
  store %"class.std::allocator.61"* %0, %"class.std::allocator.61"** %21, align 8
  %22 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %21, align 8
  %23 = bitcast %"class.std::allocator.61"* %22 to %"class.__gnu_cxx::new_allocator.62"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.62"* %23) #12
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.59"*, i64, %class.Tensor* dereferenceable(24), %"class.std::allocator.61"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.103
  %6 = load i32, i32* @y.104
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.std::vector.59"*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %class.Tensor*, align 8
  %16 = alloca %"class.std::allocator.61"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector.59"* %0, %"class.std::vector.59"** %13, align 8
  store i64 %1, i64* %14, align 8
  store %class.Tensor* %2, %class.Tensor** %15, align 8
  store %"class.std::allocator.61"* %3, %"class.std::allocator.61"** %16, align 8
  %19 = load %"class.std::vector.59"*, %"class.std::vector.59"** %13, align 8
  %20 = bitcast %"class.std::vector.59"* %19 to %"struct.std::_Vector_base.60"*
  %21 = load i64, i64* %14, align 8
  %22 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %16, align 8
  %23 = call i64 @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE17_S_check_init_lenEmRKS2_(i64 %21, %"class.std::allocator.61"* dereferenceable(1) %22)
  %24 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %16, align 8
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.60"* %20, i64 %23, %"class.std::allocator.61"* dereferenceable(1) %24)
  %25 = load i64, i64* %14, align 8
  %26 = load %class.Tensor*, %class.Tensor** %15, align 8
  %27 = load i32, i32* @x.103
  %28 = load i32, i32* @y.104
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.59"* %19, i64 %25, %class.Tensor* dereferenceable(24) %26)
          to label %35 unwind label %36

; <label>:35:                                     ; preds = %originalBBpart2
  ret void

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %17, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %18, align 4
  %40 = bitcast %"class.std::vector.59"* %19 to %"struct.std::_Vector_base.60"*
  invoke void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.60"* %40)
          to label %41 unwind label %47

; <label>:41:                                     ; preds = %36
  br label %42

; <label>:42:                                     ; preds = %41
  %43 = load i8*, i8** %17, align 8
  %44 = load i32, i32* %18, align 4
  %45 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  resume { i8*, i32 } %46

; <label>:47:                                     ; preds = %36
  %48 = load i32, i32* @x.103
  %49 = load i32, i32* @y.104
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %47, %originalBB1alteredBB
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  call void @__clang_call_terminate(i8* %57) #10
  %58 = load i32, i32* @x.103
  %59 = load i32, i32* @y.104
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %4
  %66 = alloca %"class.std::vector.59"*, align 8
  %67 = alloca i64, align 8
  %68 = alloca %class.Tensor*, align 8
  %69 = alloca %"class.std::allocator.61"*, align 8
  %70 = alloca i8*
  %71 = alloca i32
  store %"class.std::vector.59"* %0, %"class.std::vector.59"** %66, align 8
  store i64 %1, i64* %67, align 8
  store %class.Tensor* %2, %class.Tensor** %68, align 8
  store %"class.std::allocator.61"* %3, %"class.std::allocator.61"** %69, align 8
  %72 = load %"class.std::vector.59"*, %"class.std::vector.59"** %66, align 8
  %73 = bitcast %"class.std::vector.59"* %72 to %"struct.std::_Vector_base.60"*
  %74 = load i64, i64* %67, align 8
  %75 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %69, align 8
  %76 = call i64 @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE17_S_check_init_lenEmRKS2_(i64 %74, %"class.std::allocator.61"* dereferenceable(1) %75)
  %77 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %69, align 8
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.60"* %73, i64 %76, %"class.std::allocator.61"* dereferenceable(1) %77)
  %78 = load i64, i64* %67, align 8
  %79 = load %class.Tensor*, %class.Tensor** %68, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  %80 = landingpad { i8*, i32 }
          catch i8* null
  %81 = extractvalue { i8*, i32 } %80, 0
  call void @__clang_call_terminate(i8* %81) #10
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.105
  %3 = load i32, i32* @y.106
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.61"*, align 8
  store %"class.std::allocator.61"* %0, %"class.std::allocator.61"** %10, align 8
  %11 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %10, align 8
  %12 = bitcast %"class.std::allocator.61"* %11 to %"class.__gnu_cxx::new_allocator.62"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEED2Ev(%"class.__gnu_cxx::new_allocator.62"* %12) #12
  %13 = load i32, i32* @x.105
  %14 = load i32, i32* @y.106
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.61"*, align 8
  store %"class.std::allocator.61"* %0, %"class.std::allocator.61"** %21, align 8
  %22 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %21, align 8
  %23 = bitcast %"class.std::allocator.61"* %22 to %"class.__gnu_cxx::new_allocator.62"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEED2Ev(%"class.__gnu_cxx::new_allocator.62"* %23) #12
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE5beginEv(%"class.std::vector.59"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.59"*, align 8
  store %"class.std::vector.59"* %0, %"class.std::vector.59"** %3, align 8
  %4 = load %"class.std::vector.59"*, %"class.std::vector.59"** %3, align 8
  %5 = bitcast %"class.std::vector.59"* %4 to %"struct.std::_Vector_base.60"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %7, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %class.Tensor** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %10 = load %class.Tensor*, %class.Tensor** %9, align 8
  ret %class.Tensor* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.109
  %3 = load i32, i32* @y.110
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %10, align 8
  %11 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %13 = load %class.Tensor*, %class.Tensor** %12, align 8
  %14 = load i32, i32* @x.109
  %15 = load i32, i32* @y.110
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %22, align 8
  %23 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %22, align 8
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %23, i32 0, i32 0
  %25 = load %class.Tensor*, %class.Tensor** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.59"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.111
  %3 = load i32, i32* @y.112
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.59"*, align 8
  store %"class.std::vector.59"* %0, %"class.std::vector.59"** %10, align 8
  %11 = load %"class.std::vector.59"*, %"class.std::vector.59"** %10, align 8
  %12 = bitcast %"class.std::vector.59"* %11 to %"struct.std::_Vector_base.60"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %13 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %14, i32 0, i32 1
  %16 = load %class.Tensor*, %class.Tensor** %15, align 8
  %17 = bitcast %"class.std::vector.59"* %11 to %"struct.std::_Vector_base.60"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %class.Tensor*, %class.Tensor** %20, align 8
  %22 = ptrtoint %class.Tensor* %16 to i64
  %23 = ptrtoint %class.Tensor* %21 to i64
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 24
  %26 = load i32, i32* @x.111
  %27 = load i32, i32* @y.112
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %25

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %"class.std::vector.59"*, align 8
  store %"class.std::vector.59"* %0, %"class.std::vector.59"** %34, align 8
  %35 = load %"class.std::vector.59"*, %"class.std::vector.59"** %34, align 8
  %36 = bitcast %"class.std::vector.59"* %35 to %"struct.std::_Vector_base.60"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %37 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %38, i32 0, i32 1
  %40 = load %class.Tensor*, %class.Tensor** %39, align 8
  %41 = bitcast %"class.std::vector.59"* %35 to %"struct.std::_Vector_base.60"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %42 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load %class.Tensor*, %class.Tensor** %44, align 8
  %46 = ptrtoint %class.Tensor* %40 to i64
  %47 = ptrtoint %class.Tensor* %45 to i64
  %_ = sub i64 0, %46
  %gen = add i64 %_, %47
  %_1 = sub i64 0, %46
  %gen2 = add i64 %_1, %47
  %_3 = sub i64 %46, %47
  %gen4 = mul i64 %_3, %47
  %_5 = shl i64 %46, %47
  %48 = sub i64 %46, %47
  %_6 = sub i64 0, %48
  %gen7 = add i64 %_6, 24
  %_8 = shl i64 %48, 24
  %_9 = sub i64 0, %48
  %gen10 = add i64 %_9, 24
  %_11 = shl i64 %48, 24
  %_12 = sub i64 0, %48
  %gen13 = add i64 %_12, 24
  %_14 = sub i64 %48, 24
  %gen15 = mul i64 %_14, 24
  %49 = sdiv exact i64 %48, 24
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Tensor* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi1ELi3EELb0ELj1EE5beginEv(%"class.internal::TableBaseAccessors::Accessor"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.113
  %3 = load i32, i32* @y.114
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %10, align 8
  %11 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %10, align 8
  %12 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %11, i32 0, i32 1
  %13 = load %class.Tensor*, %class.Tensor** %12, align 8
  %14 = load i32, i32* @x.113
  %15 = load i32, i32* @y.114
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %22, align 8
  %23 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %22, align 8
  %24 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %23, i32 0, i32 1
  %25 = load %class.Tensor*, %class.Tensor** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEixEm(%"class.std::vector.59"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.59"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.59"* %0, %"class.std::vector.59"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.59"*, %"class.std::vector.59"** %3, align 8
  %6 = bitcast %"class.std::vector.59"* %5 to %"struct.std::_Vector_base.60"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Tensor*, %class.Tensor** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Tensor, %class.Tensor* %10, i64 %11
  ret %class.Tensor* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2EdEixEj(%"class.internal::TableBaseAccessors::Accessor.64"* noalias sret, %class.Table*, i32) #0 comdat align 2 {
  %4 = alloca %class.Table*, align 8
  %5 = alloca i32, align 4
  store %class.Table* %1, %class.Table** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.Table*, %class.Table** %4, align 8
  %7 = bitcast %class.Table* %6 to %class.TableBase*
  %8 = bitcast %class.Table* %6 to %class.TableBase*
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %8, i32 0, i32 1
  %10 = load double*, double** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = call i32 @_ZNK5TableILi2EdE6n_colsEv(%class.Table* %6)
  %13 = mul i32 %11, %12
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds double, double* %10, i64 %14
  call void @_ZN8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEC2ERK9TableBaseILi2EdEPd(%"class.internal::TableBaseAccessors::Accessor.64"* %0, %class.TableBase* dereferenceable(48) %7, double* %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZNK8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.64"*, i32) #1 comdat align 2 {
  %3 = alloca %"class.internal::TableBaseAccessors::Accessor.64"*, align 8
  %4 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor.64"* %0, %"class.internal::TableBaseAccessors::Accessor.64"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"class.internal::TableBaseAccessors::Accessor.64"*, %"class.internal::TableBaseAccessors::Accessor.64"** %3, align 8
  %6 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.64", %"class.internal::TableBaseAccessors::Accessor.64"* %5, i32 0, i32 1
  %7 = load double*, double** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds double, double* %7, i64 %9
  ret double* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev(%"class.std::vector.59"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.59"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.59"* %0, %"class.std::vector.59"** %2, align 8
  %5 = load %"class.std::vector.59"*, %"class.std::vector.59"** %2, align 8
  %6 = bitcast %"class.std::vector.59"* %5 to %"struct.std::_Vector_base.60"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Tensor*, %class.Tensor** %9, align 8
  %11 = bitcast %"class.std::vector.59"* %5 to %"struct.std::_Vector_base.60"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %12 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %class.Tensor*, %class.Tensor** %14, align 8
  %16 = bitcast %"class.std::vector.59"* %5 to %"struct.std::_Vector_base.60"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.61"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.60"* %16)
          to label %18 unwind label %37

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.121
  %20 = load i32, i32* @y.122
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i32, i32* @x.121
  %28 = load i32, i32* @y.122
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZSt8_DestroyIP6TensorILi1ELi3EES1_EvT_S3_RSaIT0_E(%class.Tensor* %10, %class.Tensor* %15, %"class.std::allocator.61"* dereferenceable(1) %17)
          to label %35 unwind label %37

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = bitcast %"class.std::vector.59"* %5 to %"struct.std::_Vector_base.60"*
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.60"* %36)
  ret void

; <label>:37:                                     ; preds = %originalBBpart2, %1
  %38 = load i32, i32* @x.121
  %39 = load i32, i32* @y.122
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %3, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %4, align 4
  %49 = bitcast %"class.std::vector.59"* %5 to %"struct.std::_Vector_base.60"*
  %50 = load i32, i32* @x.121
  %51 = load i32, i32* @y.122
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.60"* %49)
          to label %58 unwind label %80

; <label>:58:                                     ; preds = %originalBBpart24
  %59 = load i32, i32* @x.121
  %60 = load i32, i32* @y.122
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  %67 = load i32, i32* @x.121
  %68 = load i32, i32* @y.122
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %75

; <label>:75:                                     ; preds = %originalBBpart28
  %76 = load i8*, i8** %3, align 8
  %77 = load i32, i32* %4, align 4
  %78 = insertvalue { i8*, i32 } undef, i8* %76, 0
  %79 = insertvalue { i8*, i32 } %78, i32 %77, 1
  resume { i8*, i32 } %79

; <label>:80:                                     ; preds = %originalBBpart24
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  call void @__clang_call_terminate(i8* %82) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %18
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %83 = landingpad { i8*, i32 }
          cleanup
  %84 = extractvalue { i8*, i32 } %83, 0
  store i8* %84, i8** %3, align 8
  %85 = extractvalue { i8*, i32 } %83, 1
  store i32 %85, i32* %4, align 4
  %86 = bitcast %"class.std::vector.59"* %5 to %"struct.std::_Vector_base.60"*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6TensorILi2ELi3EEEC2Ev(%"class.std::allocator.67"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.123
  %3 = load i32, i32* @y.124
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.67"*, align 8
  store %"class.std::allocator.67"* %0, %"class.std::allocator.67"** %10, align 8
  %11 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %10, align 8
  %12 = bitcast %"class.std::allocator.67"* %11 to %"class.__gnu_cxx::new_allocator.68"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.68"* %12) #12
  %13 = load i32, i32* @x.123
  %14 = load i32, i32* @y.124
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.67"*, align 8
  store %"class.std::allocator.67"* %0, %"class.std::allocator.67"** %21, align 8
  %22 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %21, align 8
  %23 = bitcast %"class.std::allocator.67"* %22 to %"class.__gnu_cxx::new_allocator.68"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.68"* %23) #12
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.65"*, i64, %class.Tensor.33* dereferenceable(72), %"class.std::allocator.67"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.65"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %class.Tensor.33*, align 8
  %8 = alloca %"class.std::allocator.67"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.65"* %0, %"class.std::vector.65"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %class.Tensor.33* %2, %class.Tensor.33** %7, align 8
  store %"class.std::allocator.67"* %3, %"class.std::allocator.67"** %8, align 8
  %11 = load %"class.std::vector.65"*, %"class.std::vector.65"** %5, align 8
  %12 = bitcast %"class.std::vector.65"* %11 to %"struct.std::_Vector_base.66"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %8, align 8
  %15 = call i64 @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE17_S_check_init_lenEmRKS2_(i64 %13, %"class.std::allocator.67"* dereferenceable(1) %14)
  %16 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %8, align 8
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.66"* %12, i64 %15, %"class.std::allocator.67"* dereferenceable(1) %16)
  %17 = load i64, i64* %6, align 8
  %18 = load %class.Tensor.33*, %class.Tensor.33** %7, align 8
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.65"* %11, i64 %17, %class.Tensor.33* dereferenceable(72) %18)
          to label %19 unwind label %20

; <label>:19:                                     ; preds = %4
  ret void

; <label>:20:                                     ; preds = %4
  %21 = load i32, i32* @x.125
  %22 = load i32, i32* @y.126
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %9, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %10, align 4
  %32 = bitcast %"class.std::vector.65"* %11 to %"struct.std::_Vector_base.66"*
  %33 = load i32, i32* @x.125
  %34 = load i32, i32* @y.126
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.66"* %32)
          to label %41 unwind label %47

; <label>:41:                                     ; preds = %originalBBpart2
  br label %42

; <label>:42:                                     ; preds = %41
  %43 = load i8*, i8** %9, align 8
  %44 = load i32, i32* %10, align 4
  %45 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  resume { i8*, i32 } %46

; <label>:47:                                     ; preds = %originalBBpart2
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %20
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %9, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %10, align 4
  %53 = bitcast %"class.std::vector.65"* %11 to %"struct.std::_Vector_base.66"*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.67"*, align 8
  store %"class.std::allocator.67"* %0, %"class.std::allocator.67"** %2, align 8
  %3 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %2, align 8
  %4 = bitcast %"class.std::allocator.67"* %3 to %"class.__gnu_cxx::new_allocator.68"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEED2Ev(%"class.__gnu_cxx::new_allocator.68"* %4) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.129
  %3 = load i32, i32* @y.130
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %11 = alloca %"class.std::vector.65"*, align 8
  store %"class.std::vector.65"* %0, %"class.std::vector.65"** %11, align 8
  %12 = load %"class.std::vector.65"*, %"class.std::vector.65"** %11, align 8
  %13 = bitcast %"class.std::vector.65"* %12 to %"struct.std::_Vector_base.66"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %15, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.70"* %10, %class.Tensor.33** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %10, i32 0, i32 0
  %18 = load %class.Tensor.33*, %class.Tensor.33** %17, align 8
  %19 = load i32, i32* @x.129
  %20 = load i32, i32* @y.130
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor.33* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %28 = alloca %"class.std::vector.65"*, align 8
  store %"class.std::vector.65"* %0, %"class.std::vector.65"** %28, align 8
  %29 = load %"class.std::vector.65"*, %"class.std::vector.65"** %28, align 8
  %30 = bitcast %"class.std::vector.65"* %29 to %"struct.std::_Vector_base.66"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %31 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %32, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.70"* %27, %class.Tensor.33** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %27, i32 0, i32 0
  %35 = load %class.Tensor.33*, %class.Tensor.33** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.131
  %3 = load i32, i32* @y.132
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.70"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.70"* %0, %"class.__gnu_cxx::__normal_iterator.70"** %10, align 8
  %11 = load %"class.__gnu_cxx::__normal_iterator.70"*, %"class.__gnu_cxx::__normal_iterator.70"** %10, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %11, i32 0, i32 0
  %13 = load %class.Tensor.33*, %class.Tensor.33** %12, align 8
  %14 = load i32, i32* @x.131
  %15 = load i32, i32* @y.132
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor.33* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.__gnu_cxx::__normal_iterator.70"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.70"* %0, %"class.__gnu_cxx::__normal_iterator.70"** %22, align 8
  %23 = load %"class.__gnu_cxx::__normal_iterator.70"*, %"class.__gnu_cxx::__normal_iterator.70"** %22, align 8
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %23, i32 0, i32 0
  %25 = load %class.Tensor.33*, %class.Tensor.33** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE4sizeEv(%"class.std::vector.65"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.133
  %3 = load i32, i32* @y.134
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.65"*, align 8
  store %"class.std::vector.65"* %0, %"class.std::vector.65"** %10, align 8
  %11 = load %"class.std::vector.65"*, %"class.std::vector.65"** %10, align 8
  %12 = bitcast %"class.std::vector.65"* %11 to %"struct.std::_Vector_base.66"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %13 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %14, i32 0, i32 1
  %16 = load %class.Tensor.33*, %class.Tensor.33** %15, align 8
  %17 = bitcast %"class.std::vector.65"* %11 to %"struct.std::_Vector_base.66"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %class.Tensor.33*, %class.Tensor.33** %20, align 8
  %22 = ptrtoint %class.Tensor.33* %16 to i64
  %23 = ptrtoint %class.Tensor.33* %21 to i64
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 72
  %26 = load i32, i32* @x.133
  %27 = load i32, i32* @y.134
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %25

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %"class.std::vector.65"*, align 8
  store %"class.std::vector.65"* %0, %"class.std::vector.65"** %34, align 8
  %35 = load %"class.std::vector.65"*, %"class.std::vector.65"** %34, align 8
  %36 = bitcast %"class.std::vector.65"* %35 to %"struct.std::_Vector_base.66"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %37 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %38, i32 0, i32 1
  %40 = load %class.Tensor.33*, %class.Tensor.33** %39, align 8
  %41 = bitcast %"class.std::vector.65"* %35 to %"struct.std::_Vector_base.66"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %42 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load %class.Tensor.33*, %class.Tensor.33** %44, align 8
  %46 = ptrtoint %class.Tensor.33* %40 to i64
  %47 = ptrtoint %class.Tensor.33* %45 to i64
  %_ = sub i64 %46, %47
  %gen = mul i64 %_, %47
  %_1 = shl i64 %46, %47
  %_2 = sub i64 %46, %47
  %gen3 = mul i64 %_2, %47
  %_4 = sub i64 %46, %47
  %gen5 = mul i64 %_4, %47
  %_6 = shl i64 %46, %47
  %_7 = shl i64 %46, %47
  %48 = sub i64 %46, %47
  %_8 = sub i64 %48, 72
  %gen9 = mul i64 %_8, 72
  %_10 = sub i64 0, %48
  %gen11 = add i64 %_10, 72
  %_12 = sub i64 0, %48
  %gen13 = add i64 %_12, 72
  %_14 = shl i64 %48, 72
  %_15 = sub i64 0, %48
  %gen16 = add i64 %_15, 72
  %_17 = sub i64 0, %48
  %gen18 = add i64 %_17, 72
  %49 = sdiv exact i64 %48, 72
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Tensor.33* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi2ELi3EELb0ELj1EE5beginEv(%"class.internal::TableBaseAccessors::Accessor.58"*) #1 comdat align 2 {
  %2 = alloca %"class.internal::TableBaseAccessors::Accessor.58"*, align 8
  store %"class.internal::TableBaseAccessors::Accessor.58"* %0, %"class.internal::TableBaseAccessors::Accessor.58"** %2, align 8
  %3 = load %"class.internal::TableBaseAccessors::Accessor.58"*, %"class.internal::TableBaseAccessors::Accessor.58"** %2, align 8
  %4 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.58", %"class.internal::TableBaseAccessors::Accessor.58"* %3, i32 0, i32 1
  %5 = load %class.Tensor.33*, %class.Tensor.33** %4, align 8
  ret %class.Tensor.33* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z9transposeRK6TensorILi2ELi3EE(%class.Tensor.33* noalias sret, %class.Tensor.33* dereferenceable(72)) #0 comdat {
  %3 = load i32, i32* @x.137
  %4 = load i32, i32* @y.138
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Tensor.33*, align 8
  %12 = alloca [3 x [3 x double]], align 16
  store %class.Tensor.33* %1, %class.Tensor.33** %11, align 8
  %13 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %12, i64 0, i64 0
  %14 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 0, i64 0
  %15 = load %class.Tensor.33*, %class.Tensor.33** %11, align 8
  %16 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %15, i32 0)
  %17 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %16, i32 0)
  store double %17, double* %14, align 8
  %18 = getelementptr inbounds double, double* %14, i64 1
  %19 = load %class.Tensor.33*, %class.Tensor.33** %11, align 8
  %20 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %19, i32 1)
  %21 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %20, i32 0)
  store double %21, double* %18, align 8
  %22 = getelementptr inbounds double, double* %18, i64 1
  %23 = load %class.Tensor.33*, %class.Tensor.33** %11, align 8
  %24 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %23, i32 2)
  %25 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %24, i32 0)
  store double %25, double* %22, align 8
  %26 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 1
  %27 = getelementptr inbounds [3 x double], [3 x double]* %26, i64 0, i64 0
  %28 = load %class.Tensor.33*, %class.Tensor.33** %11, align 8
  %29 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %28, i32 0)
  %30 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %29, i32 1)
  store double %30, double* %27, align 8
  %31 = getelementptr inbounds double, double* %27, i64 1
  %32 = load %class.Tensor.33*, %class.Tensor.33** %11, align 8
  %33 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %32, i32 1)
  %34 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %33, i32 1)
  store double %34, double* %31, align 8
  %35 = getelementptr inbounds double, double* %31, i64 1
  %36 = load %class.Tensor.33*, %class.Tensor.33** %11, align 8
  %37 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %36, i32 2)
  %38 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %37, i32 1)
  store double %38, double* %35, align 8
  %39 = getelementptr inbounds [3 x double], [3 x double]* %26, i64 1
  %40 = getelementptr inbounds [3 x double], [3 x double]* %39, i64 0, i64 0
  %41 = load %class.Tensor.33*, %class.Tensor.33** %11, align 8
  %42 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %41, i32 0)
  %43 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %42, i32 2)
  store double %43, double* %40, align 8
  %44 = getelementptr inbounds double, double* %40, i64 1
  %45 = load %class.Tensor.33*, %class.Tensor.33** %11, align 8
  %46 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %45, i32 1)
  %47 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %46, i32 2)
  store double %47, double* %44, align 8
  %48 = getelementptr inbounds double, double* %44, i64 1
  %49 = load %class.Tensor.33*, %class.Tensor.33** %11, align 8
  %50 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %49, i32 2)
  %51 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %50, i32 2)
  store double %51, double* %48, align 8
  call void @_ZN6TensorILi2ELi3EEC2ERA3_A3_Kd(%class.Tensor.33* %0, [3 x [3 x double]]* dereferenceable(72) %12)
  %52 = load i32, i32* @x.137
  %53 = load i32, i32* @y.138
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %60 = alloca %class.Tensor.33*, align 8
  %61 = alloca [3 x [3 x double]], align 16
  store %class.Tensor.33* %1, %class.Tensor.33** %60, align 8
  %62 = getelementptr inbounds [3 x [3 x double]], [3 x [3 x double]]* %61, i64 0, i64 0
  %63 = getelementptr inbounds [3 x double], [3 x double]* %62, i64 0, i64 0
  %64 = load %class.Tensor.33*, %class.Tensor.33** %60, align 8
  %65 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %64, i32 0)
  %66 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %65, i32 0)
  store double %66, double* %63, align 8
  %67 = getelementptr inbounds double, double* %63, i64 1
  %68 = load %class.Tensor.33*, %class.Tensor.33** %60, align 8
  %69 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %68, i32 1)
  %70 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %69, i32 0)
  store double %70, double* %67, align 8
  %71 = getelementptr inbounds double, double* %67, i64 1
  %72 = load %class.Tensor.33*, %class.Tensor.33** %60, align 8
  %73 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %72, i32 2)
  %74 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %73, i32 0)
  store double %74, double* %71, align 8
  %75 = getelementptr inbounds [3 x double], [3 x double]* %62, i64 1
  %76 = getelementptr inbounds [3 x double], [3 x double]* %75, i64 0, i64 0
  %77 = load %class.Tensor.33*, %class.Tensor.33** %60, align 8
  %78 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %77, i32 0)
  %79 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %78, i32 1)
  store double %79, double* %76, align 8
  %80 = getelementptr inbounds double, double* %76, i64 1
  %81 = load %class.Tensor.33*, %class.Tensor.33** %60, align 8
  %82 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %81, i32 1)
  %83 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %82, i32 1)
  store double %83, double* %80, align 8
  %84 = getelementptr inbounds double, double* %80, i64 1
  %85 = load %class.Tensor.33*, %class.Tensor.33** %60, align 8
  %86 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %85, i32 2)
  %87 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %86, i32 1)
  store double %87, double* %84, align 8
  %88 = getelementptr inbounds [3 x double], [3 x double]* %75, i64 1
  %89 = getelementptr inbounds [3 x double], [3 x double]* %88, i64 0, i64 0
  %90 = load %class.Tensor.33*, %class.Tensor.33** %60, align 8
  %91 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %90, i32 0)
  %92 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %91, i32 2)
  store double %92, double* %89, align 8
  %93 = getelementptr inbounds double, double* %89, i64 1
  %94 = load %class.Tensor.33*, %class.Tensor.33** %60, align 8
  %95 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %94, i32 1)
  %96 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %95, i32 2)
  store double %96, double* %93, align 8
  %97 = getelementptr inbounds double, double* %93, i64 1
  %98 = load %class.Tensor.33*, %class.Tensor.33** %60, align 8
  %99 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33* %98, i32 2)
  %100 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %99, i32 2)
  store double %100, double* %97, align 8
  call void @_ZN6TensorILi2ELi3EEC2ERA3_A3_Kd(%class.Tensor.33* %0, [3 x [3 x double]]* dereferenceable(72) %61)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.65"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.65"* %0, %"class.std::vector.65"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.65"*, %"class.std::vector.65"** %3, align 8
  %6 = bitcast %"class.std::vector.65"* %5 to %"struct.std::_Vector_base.66"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Tensor.33*, %class.Tensor.33** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %10, i64 %11
  ret %class.Tensor.33* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(72) %class.Tensor.33* @_ZN6TensorILi2ELi3EEaSERKS0_(%class.Tensor.33*, %class.Tensor.33* dereferenceable(72)) #1 comdat align 2 {
  %3 = alloca %class.Tensor.33*, align 8
  %4 = alloca %class.Tensor.33*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor.33* %0, %class.Tensor.33** %3, align 8
  store %class.Tensor.33* %1, %class.Tensor.33** %4, align 8
  %6 = load %class.Tensor.33*, %class.Tensor.33** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %37, %2
  %8 = load i32, i32* @x.141
  %9 = load i32, i32* @y.142
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load i32, i32* %5, align 4
  %17 = icmp ult i32 %16, 3
  %18 = load i32, i32* @x.141
  %19 = load i32, i32* @y.142
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %40

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load %class.Tensor.33*, %class.Tensor.33** %4, align 8
  %28 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %27, i32 0, i32 0
  %29 = load i32, i32* %5, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [3 x %class.Tensor], [3 x %class.Tensor]* %28, i64 0, i64 %30
  %32 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %6, i32 0, i32 0
  %33 = load i32, i32* %5, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds [3 x %class.Tensor], [3 x %class.Tensor]* %32, i64 0, i64 %34
  %36 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor* %35, %class.Tensor* dereferenceable(24) %31)
  br label %37

; <label>:37:                                     ; preds = %26
  %38 = load i32, i32* %5, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %5, align 4
  br label %7

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = load i32, i32* @x.141
  %42 = load i32, i32* @y.142
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %40, %originalBB1alteredBB
  %49 = load i32, i32* @x.141
  %50 = load i32, i32* @y.142
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret %class.Tensor.33* %6

originalBBalteredBB:                              ; preds = %originalBB, %7
  %57 = load i32, i32* %5, align 4
  %58 = icmp ult i32 %57, 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.65"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.65"* %0, %"class.std::vector.65"** %2, align 8
  %5 = load %"class.std::vector.65"*, %"class.std::vector.65"** %2, align 8
  %6 = bitcast %"class.std::vector.65"* %5 to %"struct.std::_Vector_base.66"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Tensor.33*, %class.Tensor.33** %9, align 8
  %11 = bitcast %"class.std::vector.65"* %5 to %"struct.std::_Vector_base.66"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %12 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %class.Tensor.33*, %class.Tensor.33** %14, align 8
  %16 = bitcast %"class.std::vector.65"* %5 to %"struct.std::_Vector_base.66"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.67"* @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.66"* %16)
          to label %18 unwind label %21

; <label>:18:                                     ; preds = %1
  invoke void @_ZSt8_DestroyIP6TensorILi2ELi3EES1_EvT_S3_RSaIT0_E(%class.Tensor.33* %10, %class.Tensor.33* %15, %"class.std::allocator.67"* dereferenceable(1) %17)
          to label %19 unwind label %21

; <label>:19:                                     ; preds = %18
  %20 = bitcast %"class.std::vector.65"* %5 to %"struct.std::_Vector_base.66"*
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.66"* %20)
  ret void

; <label>:21:                                     ; preds = %18, %1
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %3, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %4, align 4
  %25 = bitcast %"class.std::vector.65"* %5 to %"struct.std::_Vector_base.66"*
  invoke void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.66"* %25)
          to label %26 unwind label %32

; <label>:26:                                     ; preds = %21
  br label %27

; <label>:27:                                     ; preds = %26
  %28 = load i8*, i8** %3, align 8
  %29 = load i32, i32* %4, align 4
  %30 = insertvalue { i8*, i32 } undef, i8* %28, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31

; <label>:32:                                     ; preds = %21
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #10
  unreachable
}

declare void @_ZNK17FiniteElementBaseILi3EE11compute_2ndERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRNS2_16InternalDataBaseERNS0_16InternalDataBaseER12FEValuesDataILi3EE(%class.FiniteElementBase*, %class.Mapping* dereferenceable(24), %class.TriaIterator* nonnull, i32, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %"class.FiniteElementBase<3>::InternalDataBase"* dereferenceable(64), %class.FEValuesData* dereferenceable(272)) #2

declare i32 @_ZN10QProjectorILi3EE17DataSetDescriptor4cellEv() #2

declare i32 @_ZNK10QProjectorILi3EE17DataSetDescriptorcvjEv(%"class.QProjector<3>::DataSetDescriptor"*) #2

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK10FE_NedelecILi3EE19fill_fe_face_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRK10QuadratureILi2EERNS2_16InternalDataBaseESG_R12FEValuesDataILi3EE(%class.FE_Nedelec*, %class.Mapping* dereferenceable(24), %class.TriaIterator* dereferenceable(24), i32, %class.Quadrature.126* dereferenceable(80), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %class.FEValuesData* dereferenceable(272)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %9 = alloca %class.FE_Nedelec*, align 8
  %10 = alloca %class.Mapping*, align 8
  %11 = alloca %class.TriaIterator*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %class.Quadrature.126*, align 8
  %14 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %15 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %16 = alloca %class.FEValuesData*, align 8
  %17 = alloca %"class.FE_Nedelec<3>::InternalData"*, align 8
  %18 = alloca %"class.QProjector<3>::DataSetDescriptor", align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %"class.std::vector.59", align 8
  %22 = alloca %class.Tensor, align 8
  %23 = alloca %"class.std::allocator.61", align 1
  %24 = alloca i8*
  %25 = alloca i32
  %26 = alloca i32, align 4
  %27 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca %"class.internal::TableBaseAccessors::Accessor.64", align 8
  %33 = alloca %"class.std::vector.65", align 8
  %34 = alloca %class.Tensor.33, align 8
  %35 = alloca %"class.std::allocator.67", align 1
  %36 = alloca %"class.std::vector.65", align 8
  %37 = alloca %class.Tensor.33, align 8
  %38 = alloca %"class.std::allocator.67", align 1
  %39 = alloca i32, align 4
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %42 = alloca %"class.internal::TableBaseAccessors::Accessor.58", align 8
  %43 = alloca i32, align 4
  %44 = alloca %class.Tensor.33, align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %48 = alloca i32, align 4
  %49 = alloca %class.Tensor.33, align 8
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %9, align 8
  store %class.Mapping* %1, %class.Mapping** %10, align 8
  store %class.TriaIterator* %2, %class.TriaIterator** %11, align 8
  store i32 %3, i32* %12, align 4
  store %class.Quadrature.126* %4, %class.Quadrature.126** %13, align 8
  store %"class.Mapping<3>::InternalDataBase"* %5, %"class.Mapping<3>::InternalDataBase"** %14, align 8
  store %"class.Mapping<3>::InternalDataBase"* %6, %"class.Mapping<3>::InternalDataBase"** %15, align 8
  store %class.FEValuesData* %7, %class.FEValuesData** %16, align 8
  %53 = load %class.FE_Nedelec*, %class.FE_Nedelec** %9, align 8
  %54 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %15, align 8
  %55 = bitcast %"class.Mapping<3>::InternalDataBase"* %54 to i8*
  %56 = call i8* @__dynamic_cast(i8* %55, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10FE_NedelecILi3EE12InternalDataE to i8*), i64 0) #12
  %57 = bitcast i8* %56 to %"class.FE_Nedelec<3>::InternalData"*
  %58 = icmp eq %"class.FE_Nedelec<3>::InternalData"* %57, null
  br i1 %58, label %59, label %60

; <label>:59:                                     ; preds = %8
  call void @__cxa_bad_cast() #15
  unreachable

; <label>:60:                                     ; preds = %8
  %61 = load i32, i32* @x.145
  %62 = load i32, i32* @y.146
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %60, %originalBBalteredBB
  store %"class.FE_Nedelec<3>::InternalData"* %57, %"class.FE_Nedelec<3>::InternalData"** %17, align 8
  %69 = load i32, i32* %12, align 4
  %70 = load %class.TriaIterator*, %class.TriaIterator** %11, align 8
  %71 = bitcast %class.TriaIterator* %70 to %class.TriaRawIterator*
  %72 = call %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %71)
  %73 = bitcast %class.DoFCellAccessor* %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 8
  %75 = bitcast i8* %74 to %class.TriaObjectAccessor*
  %76 = load i32, i32* %12, align 4
  %77 = call zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE16face_orientationEj(%class.TriaObjectAccessor* %75, i32 %76)
  %78 = load %class.Quadrature.126*, %class.Quadrature.126** %13, align 8
  %79 = getelementptr inbounds %class.Quadrature.126, %class.Quadrature.126* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = call i32 @_ZN10QProjectorILi3EE17DataSetDescriptor4faceEjbj(i32 %69, i1 zeroext %77, i32 %80)
  %82 = getelementptr inbounds %"class.QProjector<3>::DataSetDescriptor", %"class.QProjector<3>::DataSetDescriptor"* %18, i32 0, i32 0
  store i32 %81, i32* %82, align 4
  %83 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %17, align 8
  %84 = bitcast %"class.FE_Nedelec<3>::InternalData"* %83 to %"class.Mapping<3>::InternalDataBase"*
  %85 = call i32 @_ZNK7MappingILi3EE16InternalDataBase20current_update_flagsEv(%"class.Mapping<3>::InternalDataBase"* %84)
  store i32 %85, i32* %19, align 4
  %86 = load %class.Quadrature.126*, %class.Quadrature.126** %13, align 8
  %87 = getelementptr inbounds %class.Quadrature.126, %class.Quadrature.126* %86, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %20, align 4
  %89 = load i32, i32* %19, align 4
  %90 = call i32 @_Zan11UpdateFlagsS_(i32 %89, i32 1)
  %91 = icmp ne i32 %90, 0
  %92 = load i32, i32* @x.145
  %93 = load i32, i32* @y.146
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %91, label %100, label %335

; <label>:100:                                    ; preds = %originalBBpart2
  %101 = load i32, i32* %20, align 4
  %102 = zext i32 %101 to i64
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %22, i1 zeroext true)
  call void @_ZNSaI6TensorILi1ELi3EEEC2Ev(%"class.std::allocator.61"* %23) #12
  invoke void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.59"* %21, i64 %102, %class.Tensor* dereferenceable(24) %22, %"class.std::allocator.61"* dereferenceable(1) %23)
          to label %103 unwind label %269

; <label>:103:                                    ; preds = %100
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"* %23) #12
  store i32 0, i32* %26, align 4
  br label %104

; <label>:104:                                    ; preds = %originalBBpart232, %103
  %105 = load i32, i32* @x.145
  %106 = load i32, i32* @y.146
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %104, %originalBB1alteredBB
  %113 = load i32, i32* %26, align 4
  %114 = bitcast %class.FE_Nedelec* %53 to i8*
  %115 = getelementptr inbounds i8, i8* %114, i64 24
  %116 = bitcast i8* %115 to %class.FiniteElementData*
  %117 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %116, i32 0, i32 10
  %118 = load i32, i32* %117, align 8
  %119 = icmp ult i32 %113, %118
  %120 = load i32, i32* @x.145
  %121 = load i32, i32* @y.146
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %119, label %128, label %317

; <label>:128:                                    ; preds = %originalBBpart24
  %129 = load i32, i32* @x.145
  %130 = load i32, i32* @y.146
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %128, %originalBB6alteredBB
  %137 = load %class.Mapping*, %class.Mapping** %10, align 8
  %138 = bitcast %class.Mapping* %137 to void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)***
  %139 = load void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)**, void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)*** %138, align 8
  %140 = getelementptr inbounds void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)** %139, i64 4
  %141 = load void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)** %140, align 8
  %142 = load i32, i32* @x.145
  %143 = load i32, i32* @y.146
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %150 = invoke %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE5beginEv(%"class.std::vector.59"* %21)
          to label %151 unwind label %289

; <label>:151:                                    ; preds = %originalBBpart28
  %152 = load i32, i32* @x.145
  %153 = load i32, i32* @y.146
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %151, %originalBB10alteredBB
  %160 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %27, i32 0, i32 0
  store %class.Tensor* %150, %class.Tensor** %160, align 8
  %161 = load i32, i32* @x.145
  %162 = load i32, i32* @y.146
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %169 = invoke dereferenceable(24) %class.Tensor* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %27)
          to label %170 unwind label %289

; <label>:170:                                    ; preds = %originalBBpart212
  %171 = load i32, i32* @x.145
  %172 = load i32, i32* @y.146
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %170, %originalBB14alteredBB
  %179 = load i32, i32* @x.145
  %180 = load i32, i32* @y.146
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %187 = invoke %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE5beginEv(%"class.std::vector.59"* %21)
          to label %188 unwind label %289

; <label>:188:                                    ; preds = %originalBBpart216
  %189 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  store %class.Tensor* %187, %class.Tensor** %189, align 8
  %190 = invoke dereferenceable(24) %class.Tensor* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %28)
          to label %191 unwind label %289

; <label>:191:                                    ; preds = %188
  %192 = invoke i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.59"* %21)
          to label %193 unwind label %289

; <label>:193:                                    ; preds = %191
  %194 = load i32, i32* @x.145
  %195 = load i32, i32* @y.146
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %193, %originalBB18alteredBB
  %202 = getelementptr inbounds %class.Tensor, %class.Tensor* %190, i64 %192
  %203 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %17, align 8
  %204 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %203, i32 0, i32 1
  %205 = load i32, i32* %26, align 4
  %206 = load i32, i32* @x.145
  %207 = load i32, i32* @y.146
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %29, %class.Table.50* %204, i32 %205)
          to label %214 unwind label %289

; <label>:214:                                    ; preds = %originalBBpart220
  %215 = invoke %class.Tensor* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi1ELi3EELb0ELj1EE5beginEv(%"class.internal::TableBaseAccessors::Accessor"* %29)
          to label %216 unwind label %289

; <label>:216:                                    ; preds = %214
  %217 = invoke i32 @_ZNK10QProjectorILi3EE17DataSetDescriptorcvjEv(%"class.QProjector<3>::DataSetDescriptor"* %18)
          to label %218 unwind label %289

; <label>:218:                                    ; preds = %216
  %219 = zext i32 %217 to i64
  %220 = getelementptr inbounds %class.Tensor, %class.Tensor* %215, i64 %219
  %221 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %14, align 8
  invoke void %141(%class.Mapping* %137, %class.Tensor* %169, %class.Tensor* %202, %class.Tensor* %220, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %221)
          to label %222 unwind label %289

; <label>:222:                                    ; preds = %218
  %223 = load i32, i32* @x.145
  %224 = load i32, i32* @y.146
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %222, %originalBB22alteredBB
  store i32 0, i32* %30, align 4
  %231 = load i32, i32* @x.145
  %232 = load i32, i32* @y.146
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %239

; <label>:239:                                    ; preds = %294, %originalBBpart224
  %240 = load i32, i32* %30, align 4
  %241 = load i32, i32* %20, align 4
  %242 = icmp ult i32 %240, %241
  br i1 %242, label %243, label %297

; <label>:243:                                    ; preds = %239
  store i32 0, i32* %31, align 4
  br label %244

; <label>:244:                                    ; preds = %266, %243
  %245 = load i32, i32* %31, align 4
  %246 = icmp ult i32 %245, 3
  br i1 %246, label %247, label %293

; <label>:247:                                    ; preds = %244
  %248 = load i32, i32* %30, align 4
  %249 = zext i32 %248 to i64
  %250 = invoke dereferenceable(24) %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEixEm(%"class.std::vector.59"* %21, i64 %249)
          to label %251 unwind label %289

; <label>:251:                                    ; preds = %247
  %252 = load i32, i32* %31, align 4
  %253 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor* %250, i32 %252)
          to label %254 unwind label %289

; <label>:254:                                    ; preds = %251
  %255 = load double, double* %253, align 8
  %256 = load %class.FEValuesData*, %class.FEValuesData** %16, align 8
  %257 = getelementptr inbounds %class.FEValuesData, %class.FEValuesData* %256, i32 0, i32 0
  %258 = load i32, i32* %26, align 4
  %259 = mul i32 %258, 3
  %260 = load i32, i32* %31, align 4
  %261 = add i32 %259, %260
  invoke void @_ZN5TableILi2EdEixEj(%"class.internal::TableBaseAccessors::Accessor.64"* sret %32, %class.Table* %257, i32 %261)
          to label %262 unwind label %289

; <label>:262:                                    ; preds = %254
  %263 = load i32, i32* %30, align 4
  %264 = invoke dereferenceable(8) double* @_ZNK8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.64"* %32, i32 %263)
          to label %265 unwind label %289

; <label>:265:                                    ; preds = %262
  store double %255, double* %264, align 8
  br label %266

; <label>:266:                                    ; preds = %265
  %267 = load i32, i32* %31, align 4
  %268 = add i32 %267, 1
  store i32 %268, i32* %31, align 4
  br label %244

; <label>:269:                                    ; preds = %100
  %270 = load i32, i32* @x.145
  %271 = load i32, i32* @y.146
  %272 = sub i32 %270, 1
  %273 = mul i32 %270, %272
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %275, %276
  br i1 %277, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %269, %originalBB26alteredBB
  %278 = landingpad { i8*, i32 }
          cleanup
  %279 = extractvalue { i8*, i32 } %278, 0
  store i8* %279, i8** %24, align 8
  %280 = extractvalue { i8*, i32 } %278, 1
  store i32 %280, i32* %25, align 4
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"* %23) #12
  %281 = load i32, i32* @x.145
  %282 = load i32, i32* @y.146
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %765

; <label>:289:                                    ; preds = %262, %254, %251, %247, %218, %216, %214, %originalBBpart220, %191, %188, %originalBBpart216, %originalBBpart212, %originalBBpart28
  %290 = landingpad { i8*, i32 }
          cleanup
  %291 = extractvalue { i8*, i32 } %290, 0
  store i8* %291, i8** %24, align 8
  %292 = extractvalue { i8*, i32 } %290, 1
  store i32 %292, i32* %25, align 4
  invoke void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev(%"class.std::vector.59"* %21)
          to label %334 unwind label %786

; <label>:293:                                    ; preds = %244
  br label %294

; <label>:294:                                    ; preds = %293
  %295 = load i32, i32* %30, align 4
  %296 = add i32 %295, 1
  store i32 %296, i32* %30, align 4
  br label %239

; <label>:297:                                    ; preds = %239
  br label %298

; <label>:298:                                    ; preds = %297
  %299 = load i32, i32* @x.145
  %300 = load i32, i32* @y.146
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %298, %originalBB30alteredBB
  %307 = load i32, i32* %26, align 4
  %308 = add i32 %307, 1
  store i32 %308, i32* %26, align 4
  %309 = load i32, i32* @x.145
  %310 = load i32, i32* @y.146
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %104

; <label>:317:                                    ; preds = %originalBBpart24
  %318 = load i32, i32* @x.145
  %319 = load i32, i32* @y.146
  %320 = sub i32 %318, 1
  %321 = mul i32 %318, %320
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %323, %324
  br i1 %325, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %317, %originalBB34alteredBB
  call void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev(%"class.std::vector.59"* %21)
  %326 = load i32, i32* @x.145
  %327 = load i32, i32* @y.146
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %335

; <label>:334:                                    ; preds = %289
  br label %765

; <label>:335:                                    ; preds = %originalBBpart236, %originalBBpart2
  %336 = load i32, i32* %19, align 4
  %337 = call i32 @_Zan11UpdateFlagsS_(i32 %336, i32 2)
  %338 = icmp ne i32 %337, 0
  br i1 %338, label %339, label %735

; <label>:339:                                    ; preds = %335
  %340 = load i32, i32* %20, align 4
  %341 = zext i32 %340 to i64
  call void @_ZN6TensorILi2ELi3EEC2Ev(%class.Tensor.33* %34)
  call void @_ZNSaI6TensorILi2ELi3EEEC2Ev(%"class.std::allocator.67"* %35) #12
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.65"* %33, i64 %341, %class.Tensor.33* dereferenceable(72) %34, %"class.std::allocator.67"* dereferenceable(1) %35)
          to label %342 unwind label %485

; <label>:342:                                    ; preds = %339
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %35) #12
  %343 = load i32, i32* %20, align 4
  %344 = zext i32 %343 to i64
  invoke void @_ZN6TensorILi2ELi3EEC2Ev(%class.Tensor.33* %37)
          to label %345 unwind label %489

; <label>:345:                                    ; preds = %342
  call void @_ZNSaI6TensorILi2ELi3EEEC2Ev(%"class.std::allocator.67"* %38) #12
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.65"* %36, i64 %344, %class.Tensor.33* dereferenceable(72) %37, %"class.std::allocator.67"* dereferenceable(1) %38)
          to label %346 unwind label %509

; <label>:346:                                    ; preds = %345
  %347 = load i32, i32* @x.145
  %348 = load i32, i32* @y.146
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %346, %originalBB38alteredBB
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %38) #12
  store i32 0, i32* %39, align 4
  %355 = load i32, i32* @x.145
  %356 = load i32, i32* @y.146
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %363

; <label>:363:                                    ; preds = %711, %originalBBpart240
  %364 = load i32, i32* @x.145
  %365 = load i32, i32* @y.146
  %366 = sub i32 %364, 1
  %367 = mul i32 %364, %366
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %369, %370
  br i1 %371, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %363, %originalBB42alteredBB
  %372 = load i32, i32* %39, align 4
  %373 = bitcast %class.FE_Nedelec* %53 to i8*
  %374 = getelementptr inbounds i8, i8* %373, i64 24
  %375 = bitcast i8* %374 to %class.FiniteElementData*
  %376 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %375, i32 0, i32 10
  %377 = load i32, i32* %376, align 8
  %378 = icmp ult i32 %372, %377
  %379 = load i32, i32* @x.145
  %380 = load i32, i32* @y.146
  %381 = sub i32 %379, 1
  %382 = mul i32 %379, %381
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %384, %385
  br i1 %386, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %378, label %387, label %714

; <label>:387:                                    ; preds = %originalBBpart244
  %388 = load %class.Mapping*, %class.Mapping** %10, align 8
  %389 = bitcast %class.Mapping* %388 to void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)***
  %390 = load void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)**, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*** %389, align 8
  %391 = getelementptr inbounds void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)** %390, i64 5
  %392 = load void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)** %391, align 8
  %393 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %33)
          to label %394 unwind label %513

; <label>:394:                                    ; preds = %387
  %395 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %40, i32 0, i32 0
  store %class.Tensor.33* %393, %class.Tensor.33** %395, align 8
  %396 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %40)
          to label %397 unwind label %513

; <label>:397:                                    ; preds = %394
  %398 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %33)
          to label %399 unwind label %513

; <label>:399:                                    ; preds = %397
  %400 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %41, i32 0, i32 0
  store %class.Tensor.33* %398, %class.Tensor.33** %400, align 8
  %401 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %41)
          to label %402 unwind label %513

; <label>:402:                                    ; preds = %399
  %403 = load i32, i32* @x.145
  %404 = load i32, i32* @y.146
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %402, %originalBB46alteredBB
  %411 = load i32, i32* @x.145
  %412 = load i32, i32* @y.146
  %413 = sub i32 %411, 1
  %414 = mul i32 %411, %413
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %412, 10
  %418 = or i1 %416, %417
  br i1 %418, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  %419 = invoke i64 @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE4sizeEv(%"class.std::vector.65"* %33)
          to label %420 unwind label %513

; <label>:420:                                    ; preds = %originalBBpart248
  %421 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %401, i64 %419
  %422 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %17, align 8
  %423 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %422, i32 0, i32 2
  %424 = load i32, i32* %39, align 4
  invoke void @_ZN5TableILi2E6TensorILi2ELi3EEEixEj(%"class.internal::TableBaseAccessors::Accessor.58"* sret %42, %class.Table.54* %423, i32 %424)
          to label %425 unwind label %513

; <label>:425:                                    ; preds = %420
  %426 = load i32, i32* @x.145
  %427 = load i32, i32* @y.146
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %425, %originalBB50alteredBB
  %434 = load i32, i32* @x.145
  %435 = load i32, i32* @y.146
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  %442 = invoke %class.Tensor.33* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi2ELi3EELb0ELj1EE5beginEv(%"class.internal::TableBaseAccessors::Accessor.58"* %42)
          to label %443 unwind label %513

; <label>:443:                                    ; preds = %originalBBpart252
  %444 = load i32, i32* @x.145
  %445 = load i32, i32* @y.146
  %446 = sub i32 %444, 1
  %447 = mul i32 %444, %446
  %448 = urem i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = icmp slt i32 %445, 10
  %451 = or i1 %449, %450
  br i1 %451, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %443, %originalBB54alteredBB
  %452 = load i32, i32* @x.145
  %453 = load i32, i32* @y.146
  %454 = sub i32 %452, 1
  %455 = mul i32 %452, %454
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %457, %458
  br i1 %459, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  %460 = invoke i32 @_ZNK10QProjectorILi3EE17DataSetDescriptorcvjEv(%"class.QProjector<3>::DataSetDescriptor"* %18)
          to label %461 unwind label %513

; <label>:461:                                    ; preds = %originalBBpart256
  %462 = zext i32 %460 to i64
  %463 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %442, i64 %462
  %464 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %14, align 8
  invoke void %392(%class.Mapping* %388, %class.Tensor.33* %396, %class.Tensor.33* %421, %class.Tensor.33* %463, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %464)
          to label %465 unwind label %513

; <label>:465:                                    ; preds = %461
  store i32 0, i32* %43, align 4
  br label %466

; <label>:466:                                    ; preds = %482, %465
  %467 = load i32, i32* %43, align 4
  %468 = load i32, i32* %20, align 4
  %469 = icmp ult i32 %467, %468
  br i1 %469, label %470, label %517

; <label>:470:                                    ; preds = %466
  %471 = load i32, i32* %43, align 4
  %472 = zext i32 %471 to i64
  %473 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %33, i64 %472)
          to label %474 unwind label %513

; <label>:474:                                    ; preds = %470
  invoke void @_Z9transposeRK6TensorILi2ELi3EE(%class.Tensor.33* sret %44, %class.Tensor.33* dereferenceable(72) %473)
          to label %475 unwind label %513

; <label>:475:                                    ; preds = %474
  %476 = load i32, i32* %43, align 4
  %477 = zext i32 %476 to i64
  %478 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %36, i64 %477)
          to label %479 unwind label %513

; <label>:479:                                    ; preds = %475
  %480 = invoke dereferenceable(72) %class.Tensor.33* @_ZN6TensorILi2ELi3EEaSERKS0_(%class.Tensor.33* %478, %class.Tensor.33* dereferenceable(72) %44)
          to label %481 unwind label %513

; <label>:481:                                    ; preds = %479
  br label %482

; <label>:482:                                    ; preds = %481
  %483 = load i32, i32* %43, align 4
  %484 = add i32 %483, 1
  store i32 %484, i32* %43, align 4
  br label %466

; <label>:485:                                    ; preds = %339
  %486 = landingpad { i8*, i32 }
          cleanup
  %487 = extractvalue { i8*, i32 } %486, 0
  store i8* %487, i8** %24, align 8
  %488 = extractvalue { i8*, i32 } %486, 1
  store i32 %488, i32* %25, align 4
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %35) #12
  br label %765

; <label>:489:                                    ; preds = %714, %342
  %490 = load i32, i32* @x.145
  %491 = load i32, i32* @y.146
  %492 = sub i32 %490, 1
  %493 = mul i32 %490, %492
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %495, %496
  br i1 %497, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %489, %originalBB58alteredBB
  %498 = landingpad { i8*, i32 }
          cleanup
  %499 = extractvalue { i8*, i32 } %498, 0
  store i8* %499, i8** %24, align 8
  %500 = extractvalue { i8*, i32 } %498, 1
  store i32 %500, i32* %25, align 4
  %501 = load i32, i32* @x.145
  %502 = load i32, i32* @y.146
  %503 = sub i32 %501, 1
  %504 = mul i32 %501, %503
  %505 = urem i32 %504, 2
  %506 = icmp eq i32 %505, 0
  %507 = icmp slt i32 %502, 10
  %508 = or i1 %506, %507
  br i1 %508, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %733

; <label>:509:                                    ; preds = %345
  %510 = landingpad { i8*, i32 }
          cleanup
  %511 = extractvalue { i8*, i32 } %510, 0
  store i8* %511, i8** %24, align 8
  %512 = extractvalue { i8*, i32 } %510, 1
  store i32 %512, i32* %25, align 4
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %38) #12
  br label %733

; <label>:513:                                    ; preds = %668, %665, %658, %655, %651, %originalBBpart276, %originalBBpart272, %583, %579, %originalBBpart268, %553, %originalBBpart264, %532, %529, %527, %524, %517, %479, %475, %474, %470, %461, %originalBBpart256, %originalBBpart252, %420, %originalBBpart248, %399, %397, %394, %387
  %514 = landingpad { i8*, i32 }
          cleanup
  %515 = extractvalue { i8*, i32 } %514, 0
  store i8* %515, i8** %24, align 8
  %516 = extractvalue { i8*, i32 } %514, 1
  store i32 %516, i32* %25, align 4
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"* %36)
          to label %732 unwind label %786

; <label>:517:                                    ; preds = %466
  %518 = load %class.Mapping*, %class.Mapping** %10, align 8
  %519 = bitcast %class.Mapping* %518 to void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)***
  %520 = load void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)**, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*** %519, align 8
  %521 = getelementptr inbounds void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)** %520, i64 5
  %522 = load void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)** %521, align 8
  %523 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %33)
          to label %524 unwind label %513

; <label>:524:                                    ; preds = %517
  %525 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %45, i32 0, i32 0
  store %class.Tensor.33* %523, %class.Tensor.33** %525, align 8
  %526 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %45)
          to label %527 unwind label %513

; <label>:527:                                    ; preds = %524
  %528 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %33)
          to label %529 unwind label %513

; <label>:529:                                    ; preds = %527
  %530 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %46, i32 0, i32 0
  store %class.Tensor.33* %528, %class.Tensor.33** %530, align 8
  %531 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %46)
          to label %532 unwind label %513

; <label>:532:                                    ; preds = %529
  %533 = invoke i64 @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE4sizeEv(%"class.std::vector.65"* %33)
          to label %534 unwind label %513

; <label>:534:                                    ; preds = %532
  %535 = load i32, i32* @x.145
  %536 = load i32, i32* @y.146
  %537 = sub i32 %535, 1
  %538 = mul i32 %535, %537
  %539 = urem i32 %538, 2
  %540 = icmp eq i32 %539, 0
  %541 = icmp slt i32 %536, 10
  %542 = or i1 %540, %541
  br i1 %542, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %534, %originalBB62alteredBB
  %543 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %531, i64 %533
  %544 = load i32, i32* @x.145
  %545 = load i32, i32* @y.146
  %546 = sub i32 %544, 1
  %547 = mul i32 %544, %546
  %548 = urem i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = icmp slt i32 %545, 10
  %551 = or i1 %549, %550
  br i1 %551, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  %552 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %36)
          to label %553 unwind label %513

; <label>:553:                                    ; preds = %originalBBpart264
  %554 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %47, i32 0, i32 0
  store %class.Tensor.33* %552, %class.Tensor.33** %554, align 8
  %555 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %47)
          to label %556 unwind label %513

; <label>:556:                                    ; preds = %553
  %557 = load i32, i32* @x.145
  %558 = load i32, i32* @y.146
  %559 = sub i32 %557, 1
  %560 = mul i32 %557, %559
  %561 = urem i32 %560, 2
  %562 = icmp eq i32 %561, 0
  %563 = icmp slt i32 %558, 10
  %564 = or i1 %562, %563
  br i1 %564, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %556, %originalBB66alteredBB
  %565 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %14, align 8
  %566 = load i32, i32* @x.145
  %567 = load i32, i32* @y.146
  %568 = sub i32 %566, 1
  %569 = mul i32 %566, %568
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %567, 10
  %573 = or i1 %571, %572
  br i1 %573, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  invoke void %522(%class.Mapping* %518, %class.Tensor.33* %526, %class.Tensor.33* %543, %class.Tensor.33* %555, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %565)
          to label %574 unwind label %513

; <label>:574:                                    ; preds = %originalBBpart268
  store i32 0, i32* %48, align 4
  br label %575

; <label>:575:                                    ; preds = %623, %574
  %576 = load i32, i32* %48, align 4
  %577 = load i32, i32* %20, align 4
  %578 = icmp ult i32 %576, %577
  br i1 %578, label %579, label %626

; <label>:579:                                    ; preds = %575
  %580 = load i32, i32* %48, align 4
  %581 = zext i32 %580 to i64
  %582 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %33, i64 %581)
          to label %583 unwind label %513

; <label>:583:                                    ; preds = %579
  invoke void @_Z9transposeRK6TensorILi2ELi3EE(%class.Tensor.33* sret %49, %class.Tensor.33* dereferenceable(72) %582)
          to label %584 unwind label %513

; <label>:584:                                    ; preds = %583
  %585 = load i32, i32* @x.145
  %586 = load i32, i32* @y.146
  %587 = sub i32 %585, 1
  %588 = mul i32 %585, %587
  %589 = urem i32 %588, 2
  %590 = icmp eq i32 %589, 0
  %591 = icmp slt i32 %586, 10
  %592 = or i1 %590, %591
  br i1 %592, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %584, %originalBB70alteredBB
  %593 = load i32, i32* %48, align 4
  %594 = zext i32 %593 to i64
  %595 = load i32, i32* @x.145
  %596 = load i32, i32* @y.146
  %597 = sub i32 %595, 1
  %598 = mul i32 %595, %597
  %599 = urem i32 %598, 2
  %600 = icmp eq i32 %599, 0
  %601 = icmp slt i32 %596, 10
  %602 = or i1 %600, %601
  br i1 %602, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  %603 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %36, i64 %594)
          to label %604 unwind label %513

; <label>:604:                                    ; preds = %originalBBpart272
  %605 = load i32, i32* @x.145
  %606 = load i32, i32* @y.146
  %607 = sub i32 %605, 1
  %608 = mul i32 %605, %607
  %609 = urem i32 %608, 2
  %610 = icmp eq i32 %609, 0
  %611 = icmp slt i32 %606, 10
  %612 = or i1 %610, %611
  br i1 %612, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %604, %originalBB74alteredBB
  %613 = load i32, i32* @x.145
  %614 = load i32, i32* @y.146
  %615 = sub i32 %613, 1
  %616 = mul i32 %613, %615
  %617 = urem i32 %616, 2
  %618 = icmp eq i32 %617, 0
  %619 = icmp slt i32 %614, 10
  %620 = or i1 %618, %619
  br i1 %620, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  %621 = invoke dereferenceable(72) %class.Tensor.33* @_ZN6TensorILi2ELi3EEaSERKS0_(%class.Tensor.33* %603, %class.Tensor.33* dereferenceable(72) %49)
          to label %622 unwind label %513

; <label>:622:                                    ; preds = %originalBBpart276
  br label %623

; <label>:623:                                    ; preds = %622
  %624 = load i32, i32* %48, align 4
  %625 = add i32 %624, 1
  store i32 %625, i32* %48, align 4
  br label %575

; <label>:626:                                    ; preds = %575
  store i32 0, i32* %50, align 4
  br label %627

; <label>:627:                                    ; preds = %691, %626
  %628 = load i32, i32* %50, align 4
  %629 = load i32, i32* %20, align 4
  %630 = icmp ult i32 %628, %629
  br i1 %630, label %631, label %694

; <label>:631:                                    ; preds = %627
  %632 = load i32, i32* @x.145
  %633 = load i32, i32* @y.146
  %634 = sub i32 %632, 1
  %635 = mul i32 %632, %634
  %636 = urem i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = icmp slt i32 %633, 10
  %639 = or i1 %637, %638
  br i1 %639, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %631, %originalBB78alteredBB
  store i32 0, i32* %51, align 4
  %640 = load i32, i32* @x.145
  %641 = load i32, i32* @y.146
  %642 = sub i32 %640, 1
  %643 = mul i32 %640, %642
  %644 = urem i32 %643, 2
  %645 = icmp eq i32 %644, 0
  %646 = icmp slt i32 %641, 10
  %647 = or i1 %645, %646
  br i1 %647, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %648

; <label>:648:                                    ; preds = %687, %originalBBpart280
  %649 = load i32, i32* %51, align 4
  %650 = icmp ult i32 %649, 3
  br i1 %650, label %651, label %690

; <label>:651:                                    ; preds = %648
  %652 = load i32, i32* %50, align 4
  %653 = zext i32 %652 to i64
  %654 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %36, i64 %653)
          to label %655 unwind label %513

; <label>:655:                                    ; preds = %651
  %656 = load i32, i32* %51, align 4
  %657 = invoke dereferenceable(24) %class.Tensor* @_ZN6TensorILi2ELi3EEixEj(%class.Tensor.33* %654, i32 %656)
          to label %658 unwind label %513

; <label>:658:                                    ; preds = %655
  %659 = load %class.FEValuesData*, %class.FEValuesData** %16, align 8
  %660 = getelementptr inbounds %class.FEValuesData, %class.FEValuesData* %659, i32 0, i32 1
  %661 = load i32, i32* %39, align 4
  %662 = mul i32 %661, 3
  %663 = load i32, i32* %51, align 4
  %664 = add i32 %662, %663
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %52, %class.Table.50* %660, i32 %664)
          to label %665 unwind label %513

; <label>:665:                                    ; preds = %658
  %666 = load i32, i32* %50, align 4
  %667 = invoke dereferenceable(24) %class.Tensor* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi1ELi3EELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %52, i32 %666)
          to label %668 unwind label %513

; <label>:668:                                    ; preds = %665
  %669 = invoke dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor* %667, %class.Tensor* dereferenceable(24) %657)
          to label %670 unwind label %513

; <label>:670:                                    ; preds = %668
  %671 = load i32, i32* @x.145
  %672 = load i32, i32* @y.146
  %673 = sub i32 %671, 1
  %674 = mul i32 %671, %673
  %675 = urem i32 %674, 2
  %676 = icmp eq i32 %675, 0
  %677 = icmp slt i32 %672, 10
  %678 = or i1 %676, %677
  br i1 %678, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %670, %originalBB82alteredBB
  %679 = load i32, i32* @x.145
  %680 = load i32, i32* @y.146
  %681 = sub i32 %679, 1
  %682 = mul i32 %679, %681
  %683 = urem i32 %682, 2
  %684 = icmp eq i32 %683, 0
  %685 = icmp slt i32 %680, 10
  %686 = or i1 %684, %685
  br i1 %686, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br label %687

; <label>:687:                                    ; preds = %originalBBpart284
  %688 = load i32, i32* %51, align 4
  %689 = add i32 %688, 1
  store i32 %689, i32* %51, align 4
  br label %648

; <label>:690:                                    ; preds = %648
  br label %691

; <label>:691:                                    ; preds = %690
  %692 = load i32, i32* %50, align 4
  %693 = add i32 %692, 1
  store i32 %693, i32* %50, align 4
  br label %627

; <label>:694:                                    ; preds = %627
  %695 = load i32, i32* @x.145
  %696 = load i32, i32* @y.146
  %697 = sub i32 %695, 1
  %698 = mul i32 %695, %697
  %699 = urem i32 %698, 2
  %700 = icmp eq i32 %699, 0
  %701 = icmp slt i32 %696, 10
  %702 = or i1 %700, %701
  br i1 %702, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %694, %originalBB86alteredBB
  %703 = load i32, i32* @x.145
  %704 = load i32, i32* @y.146
  %705 = sub i32 %703, 1
  %706 = mul i32 %703, %705
  %707 = urem i32 %706, 2
  %708 = icmp eq i32 %707, 0
  %709 = icmp slt i32 %704, 10
  %710 = or i1 %708, %709
  br i1 %710, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %711

; <label>:711:                                    ; preds = %originalBBpart288
  %712 = load i32, i32* %39, align 4
  %713 = add i32 %712, 1
  store i32 %713, i32* %39, align 4
  br label %363

; <label>:714:                                    ; preds = %originalBBpart244
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"* %36)
          to label %715 unwind label %489

; <label>:715:                                    ; preds = %714
  %716 = load i32, i32* @x.145
  %717 = load i32, i32* @y.146
  %718 = sub i32 %716, 1
  %719 = mul i32 %716, %718
  %720 = urem i32 %719, 2
  %721 = icmp eq i32 %720, 0
  %722 = icmp slt i32 %717, 10
  %723 = or i1 %721, %722
  br i1 %723, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %715, %originalBB90alteredBB
  call void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"* %33)
  %724 = load i32, i32* @x.145
  %725 = load i32, i32* @y.146
  %726 = sub i32 %724, 1
  %727 = mul i32 %724, %726
  %728 = urem i32 %727, 2
  %729 = icmp eq i32 %728, 0
  %730 = icmp slt i32 %725, 10
  %731 = or i1 %729, %730
  br i1 %731, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %735

; <label>:732:                                    ; preds = %513
  br label %733

; <label>:733:                                    ; preds = %732, %509, %originalBBpart260
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"* %33)
          to label %734 unwind label %786

; <label>:734:                                    ; preds = %733
  br label %765

; <label>:735:                                    ; preds = %originalBBpart292, %335
  %736 = load i32, i32* @x.145
  %737 = load i32, i32* @y.146
  %738 = sub i32 %736, 1
  %739 = mul i32 %736, %738
  %740 = urem i32 %739, 2
  %741 = icmp eq i32 %740, 0
  %742 = icmp slt i32 %737, 10
  %743 = or i1 %741, %742
  br i1 %743, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %735, %originalBB94alteredBB
  %744 = load i32, i32* %19, align 4
  %745 = call i32 @_Zan11UpdateFlagsS_(i32 %744, i32 4)
  %746 = icmp ne i32 %745, 0
  %747 = load i32, i32* @x.145
  %748 = load i32, i32* @y.146
  %749 = sub i32 %747, 1
  %750 = mul i32 %747, %749
  %751 = urem i32 %750, 2
  %752 = icmp eq i32 %751, 0
  %753 = icmp slt i32 %748, 10
  %754 = or i1 %752, %753
  br i1 %754, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br i1 %746, label %755, label %764

; <label>:755:                                    ; preds = %originalBBpart296
  %756 = bitcast %class.FE_Nedelec* %53 to %class.FiniteElementBase*
  %757 = load %class.Mapping*, %class.Mapping** %10, align 8
  %758 = load %class.TriaIterator*, %class.TriaIterator** %11, align 8
  %759 = call i32 @_ZNK10QProjectorILi3EE17DataSetDescriptorcvjEv(%"class.QProjector<3>::DataSetDescriptor"* %18)
  %760 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %14, align 8
  %761 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %17, align 8
  %762 = bitcast %"class.FE_Nedelec<3>::InternalData"* %761 to %"class.FiniteElementBase<3>::InternalDataBase"*
  %763 = load %class.FEValuesData*, %class.FEValuesData** %16, align 8
  call void @_ZNK17FiniteElementBaseILi3EE11compute_2ndERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRNS2_16InternalDataBaseERNS0_16InternalDataBaseER12FEValuesDataILi3EE(%class.FiniteElementBase* %756, %class.Mapping* dereferenceable(24) %757, %class.TriaIterator* dereferenceable(24) %758, i32 %759, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %760, %"class.FiniteElementBase<3>::InternalDataBase"* dereferenceable(64) %762, %class.FEValuesData* dereferenceable(272) %763)
  br label %764

; <label>:764:                                    ; preds = %755, %originalBBpart296
  ret void

; <label>:765:                                    ; preds = %734, %485, %334, %originalBBpart228
  %766 = load i32, i32* @x.145
  %767 = load i32, i32* @y.146
  %768 = sub i32 %766, 1
  %769 = mul i32 %766, %768
  %770 = urem i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = icmp slt i32 %767, 10
  %773 = or i1 %771, %772
  br i1 %773, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %765, %originalBB98alteredBB
  %774 = load i8*, i8** %24, align 8
  %775 = load i32, i32* %25, align 4
  %776 = insertvalue { i8*, i32 } undef, i8* %774, 0
  %777 = insertvalue { i8*, i32 } %776, i32 %775, 1
  %778 = load i32, i32* @x.145
  %779 = load i32, i32* @y.146
  %780 = sub i32 %778, 1
  %781 = mul i32 %778, %780
  %782 = urem i32 %781, 2
  %783 = icmp eq i32 %782, 0
  %784 = icmp slt i32 %779, 10
  %785 = or i1 %783, %784
  br i1 %785, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  resume { i8*, i32 } %777

; <label>:786:                                    ; preds = %733, %513, %289
  %787 = landingpad { i8*, i32 }
          catch i8* null
  %788 = extractvalue { i8*, i32 } %787, 0
  call void @__clang_call_terminate(i8* %788) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %60
  store %"class.FE_Nedelec<3>::InternalData"* %57, %"class.FE_Nedelec<3>::InternalData"** %17, align 8
  %789 = load i32, i32* %12, align 4
  %790 = load %class.TriaIterator*, %class.TriaIterator** %11, align 8
  %791 = bitcast %class.TriaIterator* %790 to %class.TriaRawIterator*
  %792 = call %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %791)
  %793 = bitcast %class.DoFCellAccessor* %792 to i8*
  %794 = getelementptr inbounds i8, i8* %793, i64 8
  %795 = bitcast i8* %794 to %class.TriaObjectAccessor*
  %796 = load i32, i32* %12, align 4
  %797 = call zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE16face_orientationEj(%class.TriaObjectAccessor* %795, i32 %796)
  %798 = load %class.Quadrature.126*, %class.Quadrature.126** %13, align 8
  %799 = getelementptr inbounds %class.Quadrature.126, %class.Quadrature.126* %798, i32 0, i32 1
  %800 = load i32, i32* %799, align 8
  %801 = call i32 @_ZN10QProjectorILi3EE17DataSetDescriptor4faceEjbj(i32 %789, i1 zeroext %797, i32 %800)
  %802 = getelementptr inbounds %"class.QProjector<3>::DataSetDescriptor", %"class.QProjector<3>::DataSetDescriptor"* %18, i32 0, i32 0
  store i32 %801, i32* %802, align 4
  %803 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %17, align 8
  %804 = bitcast %"class.FE_Nedelec<3>::InternalData"* %803 to %"class.Mapping<3>::InternalDataBase"*
  %805 = call i32 @_ZNK7MappingILi3EE16InternalDataBase20current_update_flagsEv(%"class.Mapping<3>::InternalDataBase"* %804)
  store i32 %805, i32* %19, align 4
  %806 = load %class.Quadrature.126*, %class.Quadrature.126** %13, align 8
  %807 = getelementptr inbounds %class.Quadrature.126, %class.Quadrature.126* %806, i32 0, i32 1
  %808 = load i32, i32* %807, align 8
  store i32 %808, i32* %20, align 4
  %809 = load i32, i32* %19, align 4
  %810 = call i32 @_Zan11UpdateFlagsS_(i32 %809, i32 1)
  %811 = icmp ne i32 %810, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %104
  %812 = load i32, i32* %26, align 4
  %813 = bitcast %class.FE_Nedelec* %53 to i8*
  %814 = getelementptr inbounds i8, i8* %813, i64 24
  %815 = bitcast i8* %814 to %class.FiniteElementData*
  %816 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %815, i32 0, i32 10
  %817 = load i32, i32* %816, align 8
  %818 = icmp ult i32 %812, %817
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %128
  %819 = load %class.Mapping*, %class.Mapping** %10, align 8
  %820 = bitcast %class.Mapping* %819 to void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)***
  %821 = load void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)**, void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)*** %820, align 8
  %822 = getelementptr inbounds void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)** %821, i64 4
  %823 = load void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)** %822, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %151
  %824 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %27, i32 0, i32 0
  store %class.Tensor* %150, %class.Tensor** %824, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %170
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %193
  %825 = getelementptr inbounds %class.Tensor, %class.Tensor* %190, i64 %192
  %826 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %17, align 8
  %827 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %826, i32 0, i32 1
  %828 = load i32, i32* %26, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %222
  store i32 0, i32* %30, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %269
  %829 = landingpad { i8*, i32 }
          cleanup
  %830 = extractvalue { i8*, i32 } %829, 0
  store i8* %830, i8** %24, align 8
  %831 = extractvalue { i8*, i32 } %829, 1
  store i32 %831, i32* %25, align 4
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"* %23) #12
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %298
  %832 = load i32, i32* %26, align 4
  %833 = add i32 %832, 1
  store i32 %833, i32* %26, align 4
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %317
  call void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev(%"class.std::vector.59"* %21)
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %346
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %38) #12
  store i32 0, i32* %39, align 4
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %363
  %834 = load i32, i32* %39, align 4
  %835 = bitcast %class.FE_Nedelec* %53 to i8*
  %836 = getelementptr inbounds i8, i8* %835, i64 24
  %837 = bitcast i8* %836 to %class.FiniteElementData*
  %838 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %837, i32 0, i32 10
  %839 = load i32, i32* %838, align 8
  %840 = icmp ult i32 %834, %839
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %402
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %425
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %443
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %489
  %841 = landingpad { i8*, i32 }
          cleanup
  %842 = extractvalue { i8*, i32 } %841, 0
  store i8* %842, i8** %24, align 8
  %843 = extractvalue { i8*, i32 } %841, 1
  store i32 %843, i32* %25, align 4
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %534
  %844 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %531, i64 %533
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %556
  %845 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %14, align 8
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %584
  %846 = load i32, i32* %48, align 4
  %847 = zext i32 %846 to i64
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %604
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %631
  store i32 0, i32* %51, align 4
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %670
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %694
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %715
  call void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"* %33)
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %735
  %848 = load i32, i32* %19, align 4
  %849 = call i32 @_Zan11UpdateFlagsS_(i32 %848, i32 4)
  %850 = icmp ne i32 %849, 0
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %765
  %851 = load i8*, i8** %24, align 8
  %852 = load i32, i32* %25, align 4
  %853 = insertvalue { i8*, i32 } undef, i8* %851, 0
  %854 = insertvalue { i8*, i32 } %853, i32 %852, 1
  br label %originalBB98
}

declare i32 @_ZN10QProjectorILi3EE17DataSetDescriptor4faceEjbj(i32, i1 zeroext, i32) #2

; Function Attrs: noinline uwtable
define linkonce_odr %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv(%class.TriaRawIterator*) #0 comdat align 2 {
  %2 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %2, align 8
  %3 = load %class.TriaRawIterator*, %class.TriaRawIterator** %2, align 8
  %4 = call dereferenceable(24) %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEdeEv(%class.TriaRawIterator* %3)
  ret %class.DoFCellAccessor* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE16face_orientationEj(%class.TriaObjectAccessor*, i32) #0 comdat align 2 {
  %3 = load i32, i32* @x.149
  %4 = load i32, i32* @y.150
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.TriaObjectAccessor*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %"struct.std::_Bit_reference", align 8
  store %class.TriaObjectAccessor* %0, %class.TriaObjectAccessor** %11, align 8
  store i32 %1, i32* %12, align 4
  %14 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %11, align 8
  %15 = bitcast %class.TriaObjectAccessor* %14 to %class.TriaAccessor*
  %16 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %15, i32 0, i32 2
  %17 = load %class.Triangulation*, %class.Triangulation** %16, align 8
  %18 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %17, i32 0, i32 1
  %19 = bitcast %class.TriaObjectAccessor* %14 to %class.TriaAccessor*
  %20 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector.72"* %18, i64 %22)
  %24 = load %class.TriangulationLevel*, %class.TriangulationLevel** %23, align 8
  %25 = getelementptr inbounds %class.TriangulationLevel, %class.TriangulationLevel* %24, i32 0, i32 1
  %26 = getelementptr inbounds %"struct.TriangulationLevel<3>::HexesData", %"struct.TriangulationLevel<3>::HexesData"* %25, i32 0, i32 6
  %27 = bitcast %class.TriaObjectAccessor* %14 to %class.TriaAccessor*
  %28 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = mul i32 %29, 6
  %31 = load i32, i32* %12, align 4
  %32 = add i32 %30, %31
  %33 = zext i32 %32 to i64
  %34 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.7"* %26, i64 %33)
  %35 = bitcast %"struct.std::_Bit_reference"* %13 to { i64*, i64 }*
  %36 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %35, i32 0, i32 0
  %37 = extractvalue { i64*, i64 } %34, 0
  store i64* %37, i64** %36, align 8
  %38 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %35, i32 0, i32 1
  %39 = extractvalue { i64*, i64 } %34, 1
  store i64 %39, i64* %38, align 8
  %40 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %13)
  %41 = load i32, i32* @x.149
  %42 = load i32, i32* @y.150
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 %40

originalBBalteredBB:                              ; preds = %originalBB, %2
  %49 = alloca %class.TriaObjectAccessor*, align 8
  %50 = alloca i32, align 4
  %51 = alloca %"struct.std::_Bit_reference", align 8
  store %class.TriaObjectAccessor* %0, %class.TriaObjectAccessor** %49, align 8
  store i32 %1, i32* %50, align 4
  %52 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %49, align 8
  %53 = bitcast %class.TriaObjectAccessor* %52 to %class.TriaAccessor*
  %54 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %53, i32 0, i32 2
  %55 = load %class.Triangulation*, %class.Triangulation** %54, align 8
  %56 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %55, i32 0, i32 1
  %57 = bitcast %class.TriaObjectAccessor* %52 to %class.TriaAccessor*
  %58 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = sext i32 %59 to i64
  %61 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector.72"* %56, i64 %60)
  %62 = load %class.TriangulationLevel*, %class.TriangulationLevel** %61, align 8
  %63 = getelementptr inbounds %class.TriangulationLevel, %class.TriangulationLevel* %62, i32 0, i32 1
  %64 = getelementptr inbounds %"struct.TriangulationLevel<3>::HexesData", %"struct.TriangulationLevel<3>::HexesData"* %63, i32 0, i32 6
  %65 = bitcast %class.TriaObjectAccessor* %52 to %class.TriaAccessor*
  %66 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %65, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %_ = sub i32 %67, 6
  %gen = mul i32 %_, 6
  %_1 = sub i32 0, %67
  %gen2 = add i32 %_1, 6
  %_3 = sub i32 0, %67
  %gen4 = add i32 %_3, 6
  %_5 = shl i32 %67, 6
  %68 = mul i32 %67, 6
  %69 = load i32, i32* %50, align 4
  %_6 = shl i32 %68, %69
  %_7 = sub i32 0, %68
  %gen8 = add i32 %_7, %69
  %_9 = sub i32 %68, %69
  %gen10 = mul i32 %_9, %69
  %_11 = sub i32 %68, %69
  %gen12 = mul i32 %_11, %69
  %_13 = shl i32 %68, %69
  %_14 = sub i32 %68, %69
  %gen15 = mul i32 %_14, %69
  %_16 = shl i32 %68, %69
  %_17 = sub i32 0, %68
  %gen18 = add i32 %_17, %69
  %70 = add i32 %68, %69
  %71 = zext i32 %70 to i64
  %72 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.7"* %64, i64 %71)
  %73 = bitcast %"struct.std::_Bit_reference"* %51 to { i64*, i64 }*
  %74 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %73, i32 0, i32 0
  %75 = extractvalue { i64*, i64 } %72, 0
  store i64* %75, i64** %74, align 8
  %76 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %73, i32 0, i32 1
  %77 = extractvalue { i64*, i64 } %72, 1
  store i64 %77, i64* %76, align 8
  %78 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %51)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK10FE_NedelecILi3EE22fill_fe_subface_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjjRK10QuadratureILi2EERNS2_16InternalDataBaseESG_R12FEValuesDataILi3EE(%class.FE_Nedelec*, %class.Mapping* dereferenceable(24), %class.TriaIterator* dereferenceable(24), i32, i32, %class.Quadrature.126* dereferenceable(80), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %class.FEValuesData* dereferenceable(272)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %10 = alloca %class.FE_Nedelec*, align 8
  %11 = alloca %class.Mapping*, align 8
  %12 = alloca %class.TriaIterator*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %class.Quadrature.126*, align 8
  %16 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %17 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %18 = alloca %class.FEValuesData*, align 8
  %19 = alloca %"class.FE_Nedelec<3>::InternalData"*, align 8
  %20 = alloca %"class.QProjector<3>::DataSetDescriptor", align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %"class.std::vector.59", align 8
  %24 = alloca %class.Tensor, align 8
  %25 = alloca %"class.std::allocator.61", align 1
  %26 = alloca i8*
  %27 = alloca i32
  %28 = alloca i32, align 4
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %31 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca %"class.internal::TableBaseAccessors::Accessor.64", align 8
  %35 = alloca %"class.std::vector.65", align 8
  %36 = alloca %class.Tensor.33, align 8
  %37 = alloca %"class.std::allocator.67", align 1
  %38 = alloca %"class.std::vector.65", align 8
  %39 = alloca %class.Tensor.33, align 8
  %40 = alloca %"class.std::allocator.67", align 1
  %41 = alloca i32, align 4
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %44 = alloca %"class.internal::TableBaseAccessors::Accessor.58", align 8
  %45 = alloca i32, align 4
  %46 = alloca %class.Tensor.33, align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.70", align 8
  %50 = alloca i32, align 4
  %51 = alloca %class.Tensor.33, align 8
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %10, align 8
  store %class.Mapping* %1, %class.Mapping** %11, align 8
  store %class.TriaIterator* %2, %class.TriaIterator** %12, align 8
  store i32 %3, i32* %13, align 4
  store i32 %4, i32* %14, align 4
  store %class.Quadrature.126* %5, %class.Quadrature.126** %15, align 8
  store %"class.Mapping<3>::InternalDataBase"* %6, %"class.Mapping<3>::InternalDataBase"** %16, align 8
  store %"class.Mapping<3>::InternalDataBase"* %7, %"class.Mapping<3>::InternalDataBase"** %17, align 8
  store %class.FEValuesData* %8, %class.FEValuesData** %18, align 8
  %55 = load %class.FE_Nedelec*, %class.FE_Nedelec** %10, align 8
  %56 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %17, align 8
  %57 = bitcast %"class.Mapping<3>::InternalDataBase"* %56 to i8*
  %58 = call i8* @__dynamic_cast(i8* %57, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10FE_NedelecILi3EE12InternalDataE to i8*), i64 0) #12
  %59 = bitcast i8* %58 to %"class.FE_Nedelec<3>::InternalData"*
  %60 = icmp eq %"class.FE_Nedelec<3>::InternalData"* %59, null
  br i1 %60, label %61, label %78

; <label>:61:                                     ; preds = %9
  %62 = load i32, i32* @x.151
  %63 = load i32, i32* @y.152
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %61, %originalBBalteredBB
  call void @__cxa_bad_cast() #15
  %70 = load i32, i32* @x.151
  %71 = load i32, i32* @y.152
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:78:                                     ; preds = %9
  %79 = load i32, i32* @x.151
  %80 = load i32, i32* @y.152
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %78, %originalBB1alteredBB
  store %"class.FE_Nedelec<3>::InternalData"* %59, %"class.FE_Nedelec<3>::InternalData"** %19, align 8
  %87 = load i32, i32* %13, align 4
  %88 = load i32, i32* %14, align 4
  %89 = load %class.TriaIterator*, %class.TriaIterator** %12, align 8
  %90 = bitcast %class.TriaIterator* %89 to %class.TriaRawIterator*
  %91 = call %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %90)
  %92 = bitcast %class.DoFCellAccessor* %91 to i8*
  %93 = getelementptr inbounds i8, i8* %92, i64 8
  %94 = bitcast i8* %93 to %class.TriaObjectAccessor*
  %95 = load i32, i32* %13, align 4
  %96 = call zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE16face_orientationEj(%class.TriaObjectAccessor* %94, i32 %95)
  %97 = load %class.Quadrature.126*, %class.Quadrature.126** %15, align 8
  %98 = getelementptr inbounds %class.Quadrature.126, %class.Quadrature.126* %97, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = call i32 @_ZN10QProjectorILi3EE17DataSetDescriptor8sub_faceEjjbj(i32 %87, i32 %88, i1 zeroext %96, i32 %99)
  %101 = getelementptr inbounds %"class.QProjector<3>::DataSetDescriptor", %"class.QProjector<3>::DataSetDescriptor"* %20, i32 0, i32 0
  store i32 %100, i32* %101, align 4
  %102 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %19, align 8
  %103 = bitcast %"class.FE_Nedelec<3>::InternalData"* %102 to %"class.Mapping<3>::InternalDataBase"*
  %104 = call i32 @_ZNK7MappingILi3EE16InternalDataBase20current_update_flagsEv(%"class.Mapping<3>::InternalDataBase"* %103)
  store i32 %104, i32* %21, align 4
  %105 = load %class.Quadrature.126*, %class.Quadrature.126** %15, align 8
  %106 = getelementptr inbounds %class.Quadrature.126, %class.Quadrature.126* %105, i32 0, i32 1
  %107 = load i32, i32* %106, align 8
  store i32 %107, i32* %22, align 4
  %108 = load i32, i32* %21, align 4
  %109 = call i32 @_Zan11UpdateFlagsS_(i32 %108, i32 1)
  %110 = icmp ne i32 %109, 0
  %111 = load i32, i32* @x.151
  %112 = load i32, i32* @y.152
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %110, label %119, label %482

; <label>:119:                                    ; preds = %originalBBpart24
  %120 = load i32, i32* @x.151
  %121 = load i32, i32* @y.152
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %119, %originalBB6alteredBB
  %128 = load i32, i32* %22, align 4
  %129 = zext i32 %128 to i64
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %24, i1 zeroext true)
  call void @_ZNSaI6TensorILi1ELi3EEEC2Ev(%"class.std::allocator.61"* %25) #12
  %130 = load i32, i32* @x.151
  %131 = load i32, i32* @y.152
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.59"* %23, i64 %129, %class.Tensor* dereferenceable(24) %24, %"class.std::allocator.61"* dereferenceable(1) %25)
          to label %138 unwind label %384

; <label>:138:                                    ; preds = %originalBBpart28
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"* %25) #12
  store i32 0, i32* %28, align 4
  br label %139

; <label>:139:                                    ; preds = %originalBBpart275, %138
  %140 = load i32, i32* %28, align 4
  %141 = bitcast %class.FE_Nedelec* %55 to i8*
  %142 = getelementptr inbounds i8, i8* %141, i64 24
  %143 = bitcast i8* %142 to %class.FiniteElementData*
  %144 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %143, i32 0, i32 10
  %145 = load i32, i32* %144, align 8
  %146 = icmp ult i32 %140, %145
  br i1 %146, label %147, label %464

; <label>:147:                                    ; preds = %139
  %148 = load %class.Mapping*, %class.Mapping** %11, align 8
  %149 = bitcast %class.Mapping* %148 to void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)***
  %150 = load void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)**, void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)*** %149, align 8
  %151 = getelementptr inbounds void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)** %150, i64 4
  %152 = load void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)** %151, align 8
  %153 = invoke %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE5beginEv(%"class.std::vector.59"* %23)
          to label %154 unwind label %404

; <label>:154:                                    ; preds = %147
  %155 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  store %class.Tensor* %153, %class.Tensor** %155, align 8
  %156 = invoke dereferenceable(24) %class.Tensor* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %29)
          to label %157 unwind label %404

; <label>:157:                                    ; preds = %154
  %158 = load i32, i32* @x.151
  %159 = load i32, i32* @y.152
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %157, %originalBB10alteredBB
  %166 = load i32, i32* @x.151
  %167 = load i32, i32* @y.152
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %174 = invoke %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE5beginEv(%"class.std::vector.59"* %23)
          to label %175 unwind label %404

; <label>:175:                                    ; preds = %originalBBpart212
  %176 = load i32, i32* @x.151
  %177 = load i32, i32* @y.152
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %175, %originalBB14alteredBB
  %184 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  store %class.Tensor* %174, %class.Tensor** %184, align 8
  %185 = load i32, i32* @x.151
  %186 = load i32, i32* @y.152
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %193 = invoke dereferenceable(24) %class.Tensor* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %30)
          to label %194 unwind label %404

; <label>:194:                                    ; preds = %originalBBpart216
  %195 = invoke i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.59"* %23)
          to label %196 unwind label %404

; <label>:196:                                    ; preds = %194
  %197 = load i32, i32* @x.151
  %198 = load i32, i32* @y.152
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %196, %originalBB18alteredBB
  %205 = getelementptr inbounds %class.Tensor, %class.Tensor* %193, i64 %195
  %206 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %19, align 8
  %207 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %206, i32 0, i32 1
  %208 = load i32, i32* %28, align 4
  %209 = load i32, i32* @x.151
  %210 = load i32, i32* @y.152
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %31, %class.Table.50* %207, i32 %208)
          to label %217 unwind label %404

; <label>:217:                                    ; preds = %originalBBpart220
  %218 = load i32, i32* @x.151
  %219 = load i32, i32* @y.152
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %217, %originalBB22alteredBB
  %226 = load i32, i32* @x.151
  %227 = load i32, i32* @y.152
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  %234 = invoke %class.Tensor* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi1ELi3EELb0ELj1EE5beginEv(%"class.internal::TableBaseAccessors::Accessor"* %31)
          to label %235 unwind label %404

; <label>:235:                                    ; preds = %originalBBpart224
  %236 = load i32, i32* @x.151
  %237 = load i32, i32* @y.152
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %235, %originalBB26alteredBB
  %244 = load i32, i32* @x.151
  %245 = load i32, i32* @y.152
  %246 = sub i32 %244, 1
  %247 = mul i32 %244, %246
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %249, %250
  br i1 %251, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  %252 = invoke i32 @_ZNK10QProjectorILi3EE17DataSetDescriptorcvjEv(%"class.QProjector<3>::DataSetDescriptor"* %20)
          to label %253 unwind label %404

; <label>:253:                                    ; preds = %originalBBpart228
  %254 = load i32, i32* @x.151
  %255 = load i32, i32* @y.152
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %253, %originalBB30alteredBB
  %262 = zext i32 %252 to i64
  %263 = getelementptr inbounds %class.Tensor, %class.Tensor* %234, i64 %262
  %264 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %16, align 8
  %265 = load i32, i32* @x.151
  %266 = load i32, i32* @y.152
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  invoke void %152(%class.Mapping* %148, %class.Tensor* %156, %class.Tensor* %205, %class.Tensor* %263, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %264)
          to label %273 unwind label %404

; <label>:273:                                    ; preds = %originalBBpart232
  %274 = load i32, i32* @x.151
  %275 = load i32, i32* @y.152
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %273, %originalBB34alteredBB
  store i32 0, i32* %32, align 4
  %282 = load i32, i32* @x.151
  %283 = load i32, i32* @y.152
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %290

; <label>:290:                                    ; preds = %425, %originalBBpart236
  %291 = load i32, i32* %32, align 4
  %292 = load i32, i32* %22, align 4
  %293 = icmp ult i32 %291, %292
  br i1 %293, label %294, label %428

; <label>:294:                                    ; preds = %290
  %295 = load i32, i32* @x.151
  %296 = load i32, i32* @y.152
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %294, %originalBB38alteredBB
  store i32 0, i32* %33, align 4
  %303 = load i32, i32* @x.151
  %304 = load i32, i32* @y.152
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %311

; <label>:311:                                    ; preds = %originalBBpart253, %originalBBpart240
  %312 = load i32, i32* %33, align 4
  %313 = icmp ult i32 %312, 3
  br i1 %313, label %314, label %424

; <label>:314:                                    ; preds = %311
  %315 = load i32, i32* @x.151
  %316 = load i32, i32* @y.152
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %314, %originalBB42alteredBB
  %323 = load i32, i32* %32, align 4
  %324 = zext i32 %323 to i64
  %325 = load i32, i32* @x.151
  %326 = load i32, i32* @y.152
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  %333 = invoke dereferenceable(24) %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEixEm(%"class.std::vector.59"* %23, i64 %324)
          to label %334 unwind label %404

; <label>:334:                                    ; preds = %originalBBpart244
  %335 = load i32, i32* @x.151
  %336 = load i32, i32* @y.152
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %334, %originalBB46alteredBB
  %343 = load i32, i32* %33, align 4
  %344 = load i32, i32* @x.151
  %345 = load i32, i32* @y.152
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  %352 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor* %333, i32 %343)
          to label %353 unwind label %404

; <label>:353:                                    ; preds = %originalBBpart248
  %354 = load double, double* %352, align 8
  %355 = load %class.FEValuesData*, %class.FEValuesData** %18, align 8
  %356 = getelementptr inbounds %class.FEValuesData, %class.FEValuesData* %355, i32 0, i32 0
  %357 = load i32, i32* %28, align 4
  %358 = mul i32 %357, 3
  %359 = load i32, i32* %33, align 4
  %360 = add i32 %358, %359
  invoke void @_ZN5TableILi2EdEixEj(%"class.internal::TableBaseAccessors::Accessor.64"* sret %34, %class.Table* %356, i32 %360)
          to label %361 unwind label %404

; <label>:361:                                    ; preds = %353
  %362 = load i32, i32* %32, align 4
  %363 = invoke dereferenceable(8) double* @_ZNK8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.64"* %34, i32 %362)
          to label %364 unwind label %404

; <label>:364:                                    ; preds = %361
  store double %354, double* %363, align 8
  br label %365

; <label>:365:                                    ; preds = %364
  %366 = load i32, i32* @x.151
  %367 = load i32, i32* @y.152
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %365, %originalBB50alteredBB
  %374 = load i32, i32* %33, align 4
  %375 = add i32 %374, 1
  store i32 %375, i32* %33, align 4
  %376 = load i32, i32* @x.151
  %377 = load i32, i32* @y.152
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBBpart253, label %originalBB50alteredBB

originalBBpart253:                                ; preds = %originalBB50
  br label %311

; <label>:384:                                    ; preds = %originalBBpart28
  %385 = load i32, i32* @x.151
  %386 = load i32, i32* @y.152
  %387 = sub i32 %385, 1
  %388 = mul i32 %385, %387
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %390, %391
  br i1 %392, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %384, %originalBB55alteredBB
  %393 = landingpad { i8*, i32 }
          cleanup
  %394 = extractvalue { i8*, i32 } %393, 0
  store i8* %394, i8** %26, align 8
  %395 = extractvalue { i8*, i32 } %393, 1
  store i32 %395, i32* %27, align 4
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"* %25) #12
  %396 = load i32, i32* @x.151
  %397 = load i32, i32* @y.152
  %398 = sub i32 %396, 1
  %399 = mul i32 %396, %398
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %401, %402
  br i1 %403, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %1136

; <label>:404:                                    ; preds = %361, %353, %originalBBpart248, %originalBBpart244, %originalBBpart232, %originalBBpart228, %originalBBpart224, %originalBBpart220, %194, %originalBBpart216, %originalBBpart212, %154, %147
  %405 = load i32, i32* @x.151
  %406 = load i32, i32* @y.152
  %407 = sub i32 %405, 1
  %408 = mul i32 %405, %407
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %410, %411
  br i1 %412, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %404, %originalBB59alteredBB
  %413 = landingpad { i8*, i32 }
          cleanup
  %414 = extractvalue { i8*, i32 } %413, 0
  store i8* %414, i8** %26, align 8
  %415 = extractvalue { i8*, i32 } %413, 1
  store i32 %415, i32* %27, align 4
  %416 = load i32, i32* @x.151
  %417 = load i32, i32* @y.152
  %418 = sub i32 %416, 1
  %419 = mul i32 %416, %418
  %420 = urem i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %417, 10
  %423 = or i1 %421, %422
  br i1 %423, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  invoke void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev(%"class.std::vector.59"* %23)
          to label %465 unwind label %1141

; <label>:424:                                    ; preds = %311
  br label %425

; <label>:425:                                    ; preds = %424
  %426 = load i32, i32* %32, align 4
  %427 = add i32 %426, 1
  store i32 %427, i32* %32, align 4
  br label %290

; <label>:428:                                    ; preds = %290
  %429 = load i32, i32* @x.151
  %430 = load i32, i32* @y.152
  %431 = sub i32 %429, 1
  %432 = mul i32 %429, %431
  %433 = urem i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %434, %435
  br i1 %436, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %428, %originalBB63alteredBB
  %437 = load i32, i32* @x.151
  %438 = load i32, i32* @y.152
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %445

; <label>:445:                                    ; preds = %originalBBpart265
  %446 = load i32, i32* @x.151
  %447 = load i32, i32* @y.152
  %448 = sub i32 %446, 1
  %449 = mul i32 %446, %448
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %451, %452
  br i1 %453, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %445, %originalBB67alteredBB
  %454 = load i32, i32* %28, align 4
  %455 = add i32 %454, 1
  store i32 %455, i32* %28, align 4
  %456 = load i32, i32* @x.151
  %457 = load i32, i32* @y.152
  %458 = sub i32 %456, 1
  %459 = mul i32 %456, %458
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %461, %462
  br i1 %463, label %originalBBpart275, label %originalBB67alteredBB

originalBBpart275:                                ; preds = %originalBB67
  br label %139

; <label>:464:                                    ; preds = %139
  call void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev(%"class.std::vector.59"* %23)
  br label %482

; <label>:465:                                    ; preds = %originalBBpart261
  %466 = load i32, i32* @x.151
  %467 = load i32, i32* @y.152
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %465, %originalBB77alteredBB
  %474 = load i32, i32* @x.151
  %475 = load i32, i32* @y.152
  %476 = sub i32 %474, 1
  %477 = mul i32 %474, %476
  %478 = urem i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = icmp slt i32 %475, 10
  %481 = or i1 %479, %480
  br i1 %481, label %originalBBpart279, label %originalBB77alteredBB

originalBBpart279:                                ; preds = %originalBB77
  br label %1136

; <label>:482:                                    ; preds = %464, %originalBBpart24
  %483 = load i32, i32* @x.151
  %484 = load i32, i32* @y.152
  %485 = sub i32 %483, 1
  %486 = mul i32 %483, %485
  %487 = urem i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %488, %489
  br i1 %490, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %482, %originalBB81alteredBB
  %491 = load i32, i32* %21, align 4
  %492 = call i32 @_Zan11UpdateFlagsS_(i32 %491, i32 2)
  %493 = icmp ne i32 %492, 0
  %494 = load i32, i32* @x.151
  %495 = load i32, i32* @y.152
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br i1 %493, label %502, label %1090

; <label>:502:                                    ; preds = %originalBBpart283
  %503 = load i32, i32* %22, align 4
  %504 = zext i32 %503 to i64
  call void @_ZN6TensorILi2ELi3EEC2Ev(%class.Tensor.33* %36)
  call void @_ZNSaI6TensorILi2ELi3EEEC2Ev(%"class.std::allocator.67"* %37) #12
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.65"* %35, i64 %504, %class.Tensor.33* dereferenceable(72) %36, %"class.std::allocator.67"* dereferenceable(1) %37)
          to label %505 unwind label %712

; <label>:505:                                    ; preds = %502
  %506 = load i32, i32* @x.151
  %507 = load i32, i32* @y.152
  %508 = sub i32 %506, 1
  %509 = mul i32 %506, %508
  %510 = urem i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = icmp slt i32 %507, 10
  %513 = or i1 %511, %512
  br i1 %513, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %505, %originalBB85alteredBB
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %37) #12
  %514 = load i32, i32* %22, align 4
  %515 = zext i32 %514 to i64
  %516 = load i32, i32* @x.151
  %517 = load i32, i32* @y.152
  %518 = sub i32 %516, 1
  %519 = mul i32 %516, %518
  %520 = urem i32 %519, 2
  %521 = icmp eq i32 %520, 0
  %522 = icmp slt i32 %517, 10
  %523 = or i1 %521, %522
  br i1 %523, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  invoke void @_ZN6TensorILi2ELi3EEC2Ev(%class.Tensor.33* %39)
          to label %524 unwind label %732

; <label>:524:                                    ; preds = %originalBBpart287
  %525 = load i32, i32* @x.151
  %526 = load i32, i32* @y.152
  %527 = sub i32 %525, 1
  %528 = mul i32 %525, %527
  %529 = urem i32 %528, 2
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %526, 10
  %532 = or i1 %530, %531
  br i1 %532, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %524, %originalBB89alteredBB
  call void @_ZNSaI6TensorILi2ELi3EEEC2Ev(%"class.std::allocator.67"* %40) #12
  %533 = load i32, i32* @x.151
  %534 = load i32, i32* @y.152
  %535 = sub i32 %533, 1
  %536 = mul i32 %533, %535
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %534, 10
  %540 = or i1 %538, %539
  br i1 %540, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.65"* %38, i64 %515, %class.Tensor.33* dereferenceable(72) %39, %"class.std::allocator.67"* dereferenceable(1) %40)
          to label %541 unwind label %752

; <label>:541:                                    ; preds = %originalBBpart291
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %40) #12
  store i32 0, i32* %41, align 4
  br label %542

; <label>:542:                                    ; preds = %1034, %541
  %543 = load i32, i32* @x.151
  %544 = load i32, i32* @y.152
  %545 = sub i32 %543, 1
  %546 = mul i32 %543, %545
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %548, %549
  br i1 %550, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %542, %originalBB93alteredBB
  %551 = load i32, i32* %41, align 4
  %552 = bitcast %class.FE_Nedelec* %55 to i8*
  %553 = getelementptr inbounds i8, i8* %552, i64 24
  %554 = bitcast i8* %553 to %class.FiniteElementData*
  %555 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %554, i32 0, i32 10
  %556 = load i32, i32* %555, align 8
  %557 = icmp ult i32 %551, %556
  %558 = load i32, i32* @x.151
  %559 = load i32, i32* @y.152
  %560 = sub i32 %558, 1
  %561 = mul i32 %558, %560
  %562 = urem i32 %561, 2
  %563 = icmp eq i32 %562, 0
  %564 = icmp slt i32 %559, 10
  %565 = or i1 %563, %564
  br i1 %565, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br i1 %557, label %566, label %1037

; <label>:566:                                    ; preds = %originalBBpart295
  %567 = load %class.Mapping*, %class.Mapping** %11, align 8
  %568 = bitcast %class.Mapping* %567 to void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)***
  %569 = load void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)**, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*** %568, align 8
  %570 = getelementptr inbounds void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)** %569, i64 5
  %571 = load void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)** %570, align 8
  %572 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %35)
          to label %573 unwind label %756

; <label>:573:                                    ; preds = %566
  %574 = load i32, i32* @x.151
  %575 = load i32, i32* @y.152
  %576 = sub i32 %574, 1
  %577 = mul i32 %574, %576
  %578 = urem i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = icmp slt i32 %575, 10
  %581 = or i1 %579, %580
  br i1 %581, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %573, %originalBB97alteredBB
  %582 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %42, i32 0, i32 0
  store %class.Tensor.33* %572, %class.Tensor.33** %582, align 8
  %583 = load i32, i32* @x.151
  %584 = load i32, i32* @y.152
  %585 = sub i32 %583, 1
  %586 = mul i32 %583, %585
  %587 = urem i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = icmp slt i32 %584, 10
  %590 = or i1 %588, %589
  br i1 %590, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  %591 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %42)
          to label %592 unwind label %756

; <label>:592:                                    ; preds = %originalBBpart299
  %593 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %35)
          to label %594 unwind label %756

; <label>:594:                                    ; preds = %592
  %595 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %43, i32 0, i32 0
  store %class.Tensor.33* %593, %class.Tensor.33** %595, align 8
  %596 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %43)
          to label %597 unwind label %756

; <label>:597:                                    ; preds = %594
  %598 = load i32, i32* @x.151
  %599 = load i32, i32* @y.152
  %600 = sub i32 %598, 1
  %601 = mul i32 %598, %600
  %602 = urem i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %603, %604
  br i1 %605, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %597, %originalBB101alteredBB
  %606 = load i32, i32* @x.151
  %607 = load i32, i32* @y.152
  %608 = sub i32 %606, 1
  %609 = mul i32 %606, %608
  %610 = urem i32 %609, 2
  %611 = icmp eq i32 %610, 0
  %612 = icmp slt i32 %607, 10
  %613 = or i1 %611, %612
  br i1 %613, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  %614 = invoke i64 @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE4sizeEv(%"class.std::vector.65"* %35)
          to label %615 unwind label %756

; <label>:615:                                    ; preds = %originalBBpart2103
  %616 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %596, i64 %614
  %617 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %19, align 8
  %618 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %617, i32 0, i32 2
  %619 = load i32, i32* %41, align 4
  invoke void @_ZN5TableILi2E6TensorILi2ELi3EEEixEj(%"class.internal::TableBaseAccessors::Accessor.58"* sret %44, %class.Table.54* %618, i32 %619)
          to label %620 unwind label %756

; <label>:620:                                    ; preds = %615
  %621 = load i32, i32* @x.151
  %622 = load i32, i32* @y.152
  %623 = sub i32 %621, 1
  %624 = mul i32 %621, %623
  %625 = urem i32 %624, 2
  %626 = icmp eq i32 %625, 0
  %627 = icmp slt i32 %622, 10
  %628 = or i1 %626, %627
  br i1 %628, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %620, %originalBB105alteredBB
  %629 = load i32, i32* @x.151
  %630 = load i32, i32* @y.152
  %631 = sub i32 %629, 1
  %632 = mul i32 %629, %631
  %633 = urem i32 %632, 2
  %634 = icmp eq i32 %633, 0
  %635 = icmp slt i32 %630, 10
  %636 = or i1 %634, %635
  br i1 %636, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  %637 = invoke %class.Tensor.33* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi2ELi3EELb0ELj1EE5beginEv(%"class.internal::TableBaseAccessors::Accessor.58"* %44)
          to label %638 unwind label %756

; <label>:638:                                    ; preds = %originalBBpart2107
  %639 = load i32, i32* @x.151
  %640 = load i32, i32* @y.152
  %641 = sub i32 %639, 1
  %642 = mul i32 %639, %641
  %643 = urem i32 %642, 2
  %644 = icmp eq i32 %643, 0
  %645 = icmp slt i32 %640, 10
  %646 = or i1 %644, %645
  br i1 %646, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %638, %originalBB109alteredBB
  %647 = load i32, i32* @x.151
  %648 = load i32, i32* @y.152
  %649 = sub i32 %647, 1
  %650 = mul i32 %647, %649
  %651 = urem i32 %650, 2
  %652 = icmp eq i32 %651, 0
  %653 = icmp slt i32 %648, 10
  %654 = or i1 %652, %653
  br i1 %654, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  %655 = invoke i32 @_ZNK10QProjectorILi3EE17DataSetDescriptorcvjEv(%"class.QProjector<3>::DataSetDescriptor"* %20)
          to label %656 unwind label %756

; <label>:656:                                    ; preds = %originalBBpart2111
  %657 = load i32, i32* @x.151
  %658 = load i32, i32* @y.152
  %659 = sub i32 %657, 1
  %660 = mul i32 %657, %659
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %658, 10
  %664 = or i1 %662, %663
  br i1 %664, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %656, %originalBB113alteredBB
  %665 = zext i32 %655 to i64
  %666 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %637, i64 %665
  %667 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %16, align 8
  %668 = load i32, i32* @x.151
  %669 = load i32, i32* @y.152
  %670 = sub i32 %668, 1
  %671 = mul i32 %668, %670
  %672 = urem i32 %671, 2
  %673 = icmp eq i32 %672, 0
  %674 = icmp slt i32 %669, 10
  %675 = or i1 %673, %674
  br i1 %675, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  invoke void %571(%class.Mapping* %567, %class.Tensor.33* %591, %class.Tensor.33* %616, %class.Tensor.33* %666, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %667)
          to label %676 unwind label %756

; <label>:676:                                    ; preds = %originalBBpart2115
  store i32 0, i32* %45, align 4
  br label %677

; <label>:677:                                    ; preds = %709, %676
  %678 = load i32, i32* %45, align 4
  %679 = load i32, i32* %22, align 4
  %680 = icmp ult i32 %678, %679
  br i1 %680, label %681, label %776

; <label>:681:                                    ; preds = %677
  %682 = load i32, i32* %45, align 4
  %683 = zext i32 %682 to i64
  %684 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %35, i64 %683)
          to label %685 unwind label %756

; <label>:685:                                    ; preds = %681
  invoke void @_Z9transposeRK6TensorILi2ELi3EE(%class.Tensor.33* sret %46, %class.Tensor.33* dereferenceable(72) %684)
          to label %686 unwind label %756

; <label>:686:                                    ; preds = %685
  %687 = load i32, i32* %45, align 4
  %688 = zext i32 %687 to i64
  %689 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %38, i64 %688)
          to label %690 unwind label %756

; <label>:690:                                    ; preds = %686
  %691 = load i32, i32* @x.151
  %692 = load i32, i32* @y.152
  %693 = sub i32 %691, 1
  %694 = mul i32 %691, %693
  %695 = urem i32 %694, 2
  %696 = icmp eq i32 %695, 0
  %697 = icmp slt i32 %692, 10
  %698 = or i1 %696, %697
  br i1 %698, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %690, %originalBB117alteredBB
  %699 = load i32, i32* @x.151
  %700 = load i32, i32* @y.152
  %701 = sub i32 %699, 1
  %702 = mul i32 %699, %701
  %703 = urem i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = icmp slt i32 %700, 10
  %706 = or i1 %704, %705
  br i1 %706, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  %707 = invoke dereferenceable(72) %class.Tensor.33* @_ZN6TensorILi2ELi3EEaSERKS0_(%class.Tensor.33* %689, %class.Tensor.33* dereferenceable(72) %46)
          to label %708 unwind label %756

; <label>:708:                                    ; preds = %originalBBpart2119
  br label %709

; <label>:709:                                    ; preds = %708
  %710 = load i32, i32* %45, align 4
  %711 = add i32 %710, 1
  store i32 %711, i32* %45, align 4
  br label %677

; <label>:712:                                    ; preds = %502
  %713 = load i32, i32* @x.151
  %714 = load i32, i32* @y.152
  %715 = sub i32 %713, 1
  %716 = mul i32 %713, %715
  %717 = urem i32 %716, 2
  %718 = icmp eq i32 %717, 0
  %719 = icmp slt i32 %714, 10
  %720 = or i1 %718, %719
  br i1 %720, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %712, %originalBB121alteredBB
  %721 = landingpad { i8*, i32 }
          cleanup
  %722 = extractvalue { i8*, i32 } %721, 0
  store i8* %722, i8** %26, align 8
  %723 = extractvalue { i8*, i32 } %721, 1
  store i32 %723, i32* %27, align 4
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %37) #12
  %724 = load i32, i32* @x.151
  %725 = load i32, i32* @y.152
  %726 = sub i32 %724, 1
  %727 = mul i32 %724, %726
  %728 = urem i32 %727, 2
  %729 = icmp eq i32 %728, 0
  %730 = icmp slt i32 %725, 10
  %731 = or i1 %729, %730
  br i1 %731, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br label %1136

; <label>:732:                                    ; preds = %originalBBpart2207, %originalBBpart287
  %733 = load i32, i32* @x.151
  %734 = load i32, i32* @y.152
  %735 = sub i32 %733, 1
  %736 = mul i32 %733, %735
  %737 = urem i32 %736, 2
  %738 = icmp eq i32 %737, 0
  %739 = icmp slt i32 %734, 10
  %740 = or i1 %738, %739
  br i1 %740, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %732, %originalBB125alteredBB
  %741 = landingpad { i8*, i32 }
          cleanup
  %742 = extractvalue { i8*, i32 } %741, 0
  store i8* %742, i8** %26, align 8
  %743 = extractvalue { i8*, i32 } %741, 1
  store i32 %743, i32* %27, align 4
  %744 = load i32, i32* @x.151
  %745 = load i32, i32* @y.152
  %746 = sub i32 %744, 1
  %747 = mul i32 %744, %746
  %748 = urem i32 %747, 2
  %749 = icmp eq i32 %748, 0
  %750 = icmp slt i32 %745, 10
  %751 = or i1 %749, %750
  br i1 %751, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br label %1072

; <label>:752:                                    ; preds = %originalBBpart291
  %753 = landingpad { i8*, i32 }
          cleanup
  %754 = extractvalue { i8*, i32 } %753, 0
  store i8* %754, i8** %26, align 8
  %755 = extractvalue { i8*, i32 } %753, 1
  store i32 %755, i32* %27, align 4
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %40) #12
  br label %1072

; <label>:756:                                    ; preds = %991, %988, %originalBBpart2183, %962, %958, %911, %originalBBpart2155, %890, %originalBBpart2151, %847, %originalBBpart2143, %825, %originalBBpart2139, %804, %originalBBpart2135, %783, %776, %originalBBpart2119, %686, %685, %681, %originalBBpart2115, %originalBBpart2111, %originalBBpart2107, %615, %originalBBpart2103, %594, %592, %originalBBpart299, %566
  %757 = load i32, i32* @x.151
  %758 = load i32, i32* @y.152
  %759 = sub i32 %757, 1
  %760 = mul i32 %757, %759
  %761 = urem i32 %760, 2
  %762 = icmp eq i32 %761, 0
  %763 = icmp slt i32 %758, 10
  %764 = or i1 %762, %763
  br i1 %764, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %756, %originalBB129alteredBB
  %765 = landingpad { i8*, i32 }
          cleanup
  %766 = extractvalue { i8*, i32 } %765, 0
  store i8* %766, i8** %26, align 8
  %767 = extractvalue { i8*, i32 } %765, 1
  store i32 %767, i32* %27, align 4
  %768 = load i32, i32* @x.151
  %769 = load i32, i32* @y.152
  %770 = sub i32 %768, 1
  %771 = mul i32 %768, %770
  %772 = urem i32 %771, 2
  %773 = icmp eq i32 %772, 0
  %774 = icmp slt i32 %769, 10
  %775 = or i1 %773, %774
  br i1 %775, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"* %38)
          to label %1071 unwind label %1141

; <label>:776:                                    ; preds = %677
  %777 = load %class.Mapping*, %class.Mapping** %11, align 8
  %778 = bitcast %class.Mapping* %777 to void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)***
  %779 = load void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)**, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*** %778, align 8
  %780 = getelementptr inbounds void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)** %779, i64 5
  %781 = load void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)*, void (%class.Mapping*, %class.Tensor.33*, %class.Tensor.33*, %class.Tensor.33*, %"class.Mapping<3>::InternalDataBase"*)** %780, align 8
  %782 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %35)
          to label %783 unwind label %756

; <label>:783:                                    ; preds = %776
  %784 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %47, i32 0, i32 0
  store %class.Tensor.33* %782, %class.Tensor.33** %784, align 8
  %785 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %47)
          to label %786 unwind label %756

; <label>:786:                                    ; preds = %783
  %787 = load i32, i32* @x.151
  %788 = load i32, i32* @y.152
  %789 = sub i32 %787, 1
  %790 = mul i32 %787, %789
  %791 = urem i32 %790, 2
  %792 = icmp eq i32 %791, 0
  %793 = icmp slt i32 %788, 10
  %794 = or i1 %792, %793
  br i1 %794, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %786, %originalBB133alteredBB
  %795 = load i32, i32* @x.151
  %796 = load i32, i32* @y.152
  %797 = sub i32 %795, 1
  %798 = mul i32 %795, %797
  %799 = urem i32 %798, 2
  %800 = icmp eq i32 %799, 0
  %801 = icmp slt i32 %796, 10
  %802 = or i1 %800, %801
  br i1 %802, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  %803 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %35)
          to label %804 unwind label %756

; <label>:804:                                    ; preds = %originalBBpart2135
  %805 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %48, i32 0, i32 0
  store %class.Tensor.33* %803, %class.Tensor.33** %805, align 8
  %806 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %48)
          to label %807 unwind label %756

; <label>:807:                                    ; preds = %804
  %808 = load i32, i32* @x.151
  %809 = load i32, i32* @y.152
  %810 = sub i32 %808, 1
  %811 = mul i32 %808, %810
  %812 = urem i32 %811, 2
  %813 = icmp eq i32 %812, 0
  %814 = icmp slt i32 %809, 10
  %815 = or i1 %813, %814
  br i1 %815, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %807, %originalBB137alteredBB
  %816 = load i32, i32* @x.151
  %817 = load i32, i32* @y.152
  %818 = sub i32 %816, 1
  %819 = mul i32 %816, %818
  %820 = urem i32 %819, 2
  %821 = icmp eq i32 %820, 0
  %822 = icmp slt i32 %817, 10
  %823 = or i1 %821, %822
  br i1 %823, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  %824 = invoke i64 @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE4sizeEv(%"class.std::vector.65"* %35)
          to label %825 unwind label %756

; <label>:825:                                    ; preds = %originalBBpart2139
  %826 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %806, i64 %824
  %827 = invoke %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.65"* %38)
          to label %828 unwind label %756

; <label>:828:                                    ; preds = %825
  %829 = load i32, i32* @x.151
  %830 = load i32, i32* @y.152
  %831 = sub i32 %829, 1
  %832 = mul i32 %829, %831
  %833 = urem i32 %832, 2
  %834 = icmp eq i32 %833, 0
  %835 = icmp slt i32 %830, 10
  %836 = or i1 %834, %835
  br i1 %836, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %828, %originalBB141alteredBB
  %837 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %49, i32 0, i32 0
  store %class.Tensor.33* %827, %class.Tensor.33** %837, align 8
  %838 = load i32, i32* @x.151
  %839 = load i32, i32* @y.152
  %840 = sub i32 %838, 1
  %841 = mul i32 %838, %840
  %842 = urem i32 %841, 2
  %843 = icmp eq i32 %842, 0
  %844 = icmp slt i32 %839, 10
  %845 = or i1 %843, %844
  br i1 %845, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  %846 = invoke dereferenceable(72) %class.Tensor.33* @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.70"* %49)
          to label %847 unwind label %756

; <label>:847:                                    ; preds = %originalBBpart2143
  %848 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %16, align 8
  invoke void %781(%class.Mapping* %777, %class.Tensor.33* %785, %class.Tensor.33* %826, %class.Tensor.33* %846, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %848)
          to label %849 unwind label %756

; <label>:849:                                    ; preds = %847
  %850 = load i32, i32* @x.151
  %851 = load i32, i32* @y.152
  %852 = sub i32 %850, 1
  %853 = mul i32 %850, %852
  %854 = urem i32 %853, 2
  %855 = icmp eq i32 %854, 0
  %856 = icmp slt i32 %851, 10
  %857 = or i1 %855, %856
  br i1 %857, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %849, %originalBB145alteredBB
  store i32 0, i32* %50, align 4
  %858 = load i32, i32* @x.151
  %859 = load i32, i32* @y.152
  %860 = sub i32 %858, 1
  %861 = mul i32 %858, %860
  %862 = urem i32 %861, 2
  %863 = icmp eq i32 %862, 0
  %864 = icmp slt i32 %859, 10
  %865 = or i1 %863, %864
  br i1 %865, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br label %866

; <label>:866:                                    ; preds = %914, %originalBBpart2147
  %867 = load i32, i32* %50, align 4
  %868 = load i32, i32* %22, align 4
  %869 = icmp ult i32 %867, %868
  br i1 %869, label %870, label %917

; <label>:870:                                    ; preds = %866
  %871 = load i32, i32* @x.151
  %872 = load i32, i32* @y.152
  %873 = sub i32 %871, 1
  %874 = mul i32 %871, %873
  %875 = urem i32 %874, 2
  %876 = icmp eq i32 %875, 0
  %877 = icmp slt i32 %872, 10
  %878 = or i1 %876, %877
  br i1 %878, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %870, %originalBB149alteredBB
  %879 = load i32, i32* %50, align 4
  %880 = zext i32 %879 to i64
  %881 = load i32, i32* @x.151
  %882 = load i32, i32* @y.152
  %883 = sub i32 %881, 1
  %884 = mul i32 %881, %883
  %885 = urem i32 %884, 2
  %886 = icmp eq i32 %885, 0
  %887 = icmp slt i32 %882, 10
  %888 = or i1 %886, %887
  br i1 %888, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  %889 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %35, i64 %880)
          to label %890 unwind label %756

; <label>:890:                                    ; preds = %originalBBpart2151
  invoke void @_Z9transposeRK6TensorILi2ELi3EE(%class.Tensor.33* sret %51, %class.Tensor.33* dereferenceable(72) %889)
          to label %891 unwind label %756

; <label>:891:                                    ; preds = %890
  %892 = load i32, i32* @x.151
  %893 = load i32, i32* @y.152
  %894 = sub i32 %892, 1
  %895 = mul i32 %892, %894
  %896 = urem i32 %895, 2
  %897 = icmp eq i32 %896, 0
  %898 = icmp slt i32 %893, 10
  %899 = or i1 %897, %898
  br i1 %899, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %891, %originalBB153alteredBB
  %900 = load i32, i32* %50, align 4
  %901 = zext i32 %900 to i64
  %902 = load i32, i32* @x.151
  %903 = load i32, i32* @y.152
  %904 = sub i32 %902, 1
  %905 = mul i32 %902, %904
  %906 = urem i32 %905, 2
  %907 = icmp eq i32 %906, 0
  %908 = icmp slt i32 %903, 10
  %909 = or i1 %907, %908
  br i1 %909, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  %910 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %38, i64 %901)
          to label %911 unwind label %756

; <label>:911:                                    ; preds = %originalBBpart2155
  %912 = invoke dereferenceable(72) %class.Tensor.33* @_ZN6TensorILi2ELi3EEaSERKS0_(%class.Tensor.33* %910, %class.Tensor.33* dereferenceable(72) %51)
          to label %913 unwind label %756

; <label>:913:                                    ; preds = %911
  br label %914

; <label>:914:                                    ; preds = %913
  %915 = load i32, i32* %50, align 4
  %916 = add i32 %915, 1
  store i32 %916, i32* %50, align 4
  br label %866

; <label>:917:                                    ; preds = %866
  %918 = load i32, i32* @x.151
  %919 = load i32, i32* @y.152
  %920 = sub i32 %918, 1
  %921 = mul i32 %918, %920
  %922 = urem i32 %921, 2
  %923 = icmp eq i32 %922, 0
  %924 = icmp slt i32 %919, 10
  %925 = or i1 %923, %924
  br i1 %925, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %917, %originalBB157alteredBB
  store i32 0, i32* %52, align 4
  %926 = load i32, i32* @x.151
  %927 = load i32, i32* @y.152
  %928 = sub i32 %926, 1
  %929 = mul i32 %926, %928
  %930 = urem i32 %929, 2
  %931 = icmp eq i32 %930, 0
  %932 = icmp slt i32 %927, 10
  %933 = or i1 %931, %932
  br i1 %933, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br label %934

; <label>:934:                                    ; preds = %originalBBpart2203, %originalBBpart2159
  %935 = load i32, i32* %52, align 4
  %936 = load i32, i32* %22, align 4
  %937 = icmp ult i32 %935, %936
  br i1 %937, label %938, label %1033

; <label>:938:                                    ; preds = %934
  %939 = load i32, i32* @x.151
  %940 = load i32, i32* @y.152
  %941 = sub i32 %939, 1
  %942 = mul i32 %939, %941
  %943 = urem i32 %942, 2
  %944 = icmp eq i32 %943, 0
  %945 = icmp slt i32 %940, 10
  %946 = or i1 %944, %945
  br i1 %946, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %938, %originalBB161alteredBB
  store i32 0, i32* %53, align 4
  %947 = load i32, i32* @x.151
  %948 = load i32, i32* @y.152
  %949 = sub i32 %947, 1
  %950 = mul i32 %947, %949
  %951 = urem i32 %950, 2
  %952 = icmp eq i32 %951, 0
  %953 = icmp slt i32 %948, 10
  %954 = or i1 %952, %953
  br i1 %954, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br label %955

; <label>:955:                                    ; preds = %1010, %originalBBpart2163
  %956 = load i32, i32* %53, align 4
  %957 = icmp ult i32 %956, 3
  br i1 %957, label %958, label %1013

; <label>:958:                                    ; preds = %955
  %959 = load i32, i32* %52, align 4
  %960 = zext i32 %959 to i64
  %961 = invoke dereferenceable(72) %class.Tensor.33* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.65"* %38, i64 %960)
          to label %962 unwind label %756

; <label>:962:                                    ; preds = %958
  %963 = load i32, i32* %53, align 4
  %964 = invoke dereferenceable(24) %class.Tensor* @_ZN6TensorILi2ELi3EEixEj(%class.Tensor.33* %961, i32 %963)
          to label %965 unwind label %756

; <label>:965:                                    ; preds = %962
  %966 = load i32, i32* @x.151
  %967 = load i32, i32* @y.152
  %968 = sub i32 %966, 1
  %969 = mul i32 %966, %968
  %970 = urem i32 %969, 2
  %971 = icmp eq i32 %970, 0
  %972 = icmp slt i32 %967, 10
  %973 = or i1 %971, %972
  br i1 %973, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %965, %originalBB165alteredBB
  %974 = load %class.FEValuesData*, %class.FEValuesData** %18, align 8
  %975 = getelementptr inbounds %class.FEValuesData, %class.FEValuesData* %974, i32 0, i32 1
  %976 = load i32, i32* %41, align 4
  %977 = mul i32 %976, 3
  %978 = load i32, i32* %53, align 4
  %979 = add i32 %977, %978
  %980 = load i32, i32* @x.151
  %981 = load i32, i32* @y.152
  %982 = sub i32 %980, 1
  %983 = mul i32 %980, %982
  %984 = urem i32 %983, 2
  %985 = icmp eq i32 %984, 0
  %986 = icmp slt i32 %981, 10
  %987 = or i1 %985, %986
  br i1 %987, label %originalBBpart2183, label %originalBB165alteredBB

originalBBpart2183:                               ; preds = %originalBB165
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %54, %class.Table.50* %975, i32 %979)
          to label %988 unwind label %756

; <label>:988:                                    ; preds = %originalBBpart2183
  %989 = load i32, i32* %52, align 4
  %990 = invoke dereferenceable(24) %class.Tensor* @_ZNK8internal18TableBaseAccessors8AccessorILi2E6TensorILi1ELi3EELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %54, i32 %989)
          to label %991 unwind label %756

; <label>:991:                                    ; preds = %988
  %992 = invoke dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor* %990, %class.Tensor* dereferenceable(24) %964)
          to label %993 unwind label %756

; <label>:993:                                    ; preds = %991
  %994 = load i32, i32* @x.151
  %995 = load i32, i32* @y.152
  %996 = sub i32 %994, 1
  %997 = mul i32 %994, %996
  %998 = urem i32 %997, 2
  %999 = icmp eq i32 %998, 0
  %1000 = icmp slt i32 %995, 10
  %1001 = or i1 %999, %1000
  br i1 %1001, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %993, %originalBB185alteredBB
  %1002 = load i32, i32* @x.151
  %1003 = load i32, i32* @y.152
  %1004 = sub i32 %1002, 1
  %1005 = mul i32 %1002, %1004
  %1006 = urem i32 %1005, 2
  %1007 = icmp eq i32 %1006, 0
  %1008 = icmp slt i32 %1003, 10
  %1009 = or i1 %1007, %1008
  br i1 %1009, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br label %1010

; <label>:1010:                                   ; preds = %originalBBpart2187
  %1011 = load i32, i32* %53, align 4
  %1012 = add i32 %1011, 1
  store i32 %1012, i32* %53, align 4
  br label %955

; <label>:1013:                                   ; preds = %955
  br label %1014

; <label>:1014:                                   ; preds = %1013
  %1015 = load i32, i32* @x.151
  %1016 = load i32, i32* @y.152
  %1017 = sub i32 %1015, 1
  %1018 = mul i32 %1015, %1017
  %1019 = urem i32 %1018, 2
  %1020 = icmp eq i32 %1019, 0
  %1021 = icmp slt i32 %1016, 10
  %1022 = or i1 %1020, %1021
  br i1 %1022, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %1014, %originalBB189alteredBB
  %1023 = load i32, i32* %52, align 4
  %1024 = add i32 %1023, 1
  store i32 %1024, i32* %52, align 4
  %1025 = load i32, i32* @x.151
  %1026 = load i32, i32* @y.152
  %1027 = sub i32 %1025, 1
  %1028 = mul i32 %1025, %1027
  %1029 = urem i32 %1028, 2
  %1030 = icmp eq i32 %1029, 0
  %1031 = icmp slt i32 %1026, 10
  %1032 = or i1 %1030, %1031
  br i1 %1032, label %originalBBpart2203, label %originalBB189alteredBB

originalBBpart2203:                               ; preds = %originalBB189
  br label %934

; <label>:1033:                                   ; preds = %934
  br label %1034

; <label>:1034:                                   ; preds = %1033
  %1035 = load i32, i32* %41, align 4
  %1036 = add i32 %1035, 1
  store i32 %1036, i32* %41, align 4
  br label %542

; <label>:1037:                                   ; preds = %originalBBpart295
  %1038 = load i32, i32* @x.151
  %1039 = load i32, i32* @y.152
  %1040 = sub i32 %1038, 1
  %1041 = mul i32 %1038, %1040
  %1042 = urem i32 %1041, 2
  %1043 = icmp eq i32 %1042, 0
  %1044 = icmp slt i32 %1039, 10
  %1045 = or i1 %1043, %1044
  br i1 %1045, label %originalBB205, label %originalBB205alteredBB

originalBB205:                                    ; preds = %1037, %originalBB205alteredBB
  %1046 = load i32, i32* @x.151
  %1047 = load i32, i32* @y.152
  %1048 = sub i32 %1046, 1
  %1049 = mul i32 %1046, %1048
  %1050 = urem i32 %1049, 2
  %1051 = icmp eq i32 %1050, 0
  %1052 = icmp slt i32 %1047, 10
  %1053 = or i1 %1051, %1052
  br i1 %1053, label %originalBBpart2207, label %originalBB205alteredBB

originalBBpart2207:                               ; preds = %originalBB205
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"* %38)
          to label %1054 unwind label %732

; <label>:1054:                                   ; preds = %originalBBpart2207
  %1055 = load i32, i32* @x.151
  %1056 = load i32, i32* @y.152
  %1057 = sub i32 %1055, 1
  %1058 = mul i32 %1055, %1057
  %1059 = urem i32 %1058, 2
  %1060 = icmp eq i32 %1059, 0
  %1061 = icmp slt i32 %1056, 10
  %1062 = or i1 %1060, %1061
  br i1 %1062, label %originalBB209, label %originalBB209alteredBB

originalBB209:                                    ; preds = %1054, %originalBB209alteredBB
  call void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"* %35)
  %1063 = load i32, i32* @x.151
  %1064 = load i32, i32* @y.152
  %1065 = sub i32 %1063, 1
  %1066 = mul i32 %1063, %1065
  %1067 = urem i32 %1066, 2
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp slt i32 %1064, 10
  %1070 = or i1 %1068, %1069
  br i1 %1070, label %originalBBpart2211, label %originalBB209alteredBB

originalBBpart2211:                               ; preds = %originalBB209
  br label %1090

; <label>:1071:                                   ; preds = %originalBBpart2131
  br label %1072

; <label>:1072:                                   ; preds = %1071, %752, %originalBBpart2127
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"* %35)
          to label %1073 unwind label %1141

; <label>:1073:                                   ; preds = %1072
  %1074 = load i32, i32* @x.151
  %1075 = load i32, i32* @y.152
  %1076 = sub i32 %1074, 1
  %1077 = mul i32 %1074, %1076
  %1078 = urem i32 %1077, 2
  %1079 = icmp eq i32 %1078, 0
  %1080 = icmp slt i32 %1075, 10
  %1081 = or i1 %1079, %1080
  br i1 %1081, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %1073, %originalBB213alteredBB
  %1082 = load i32, i32* @x.151
  %1083 = load i32, i32* @y.152
  %1084 = sub i32 %1082, 1
  %1085 = mul i32 %1082, %1084
  %1086 = urem i32 %1085, 2
  %1087 = icmp eq i32 %1086, 0
  %1088 = icmp slt i32 %1083, 10
  %1089 = or i1 %1087, %1088
  br i1 %1089, label %originalBBpart2215, label %originalBB213alteredBB

originalBBpart2215:                               ; preds = %originalBB213
  br label %1136

; <label>:1090:                                   ; preds = %originalBBpart2211, %originalBBpart283
  %1091 = load i32, i32* @x.151
  %1092 = load i32, i32* @y.152
  %1093 = sub i32 %1091, 1
  %1094 = mul i32 %1091, %1093
  %1095 = urem i32 %1094, 2
  %1096 = icmp eq i32 %1095, 0
  %1097 = icmp slt i32 %1092, 10
  %1098 = or i1 %1096, %1097
  br i1 %1098, label %originalBB217, label %originalBB217alteredBB

originalBB217:                                    ; preds = %1090, %originalBB217alteredBB
  %1099 = load i32, i32* %21, align 4
  %1100 = call i32 @_Zan11UpdateFlagsS_(i32 %1099, i32 4)
  %1101 = icmp ne i32 %1100, 0
  %1102 = load i32, i32* @x.151
  %1103 = load i32, i32* @y.152
  %1104 = sub i32 %1102, 1
  %1105 = mul i32 %1102, %1104
  %1106 = urem i32 %1105, 2
  %1107 = icmp eq i32 %1106, 0
  %1108 = icmp slt i32 %1103, 10
  %1109 = or i1 %1107, %1108
  br i1 %1109, label %originalBBpart2219, label %originalBB217alteredBB

originalBBpart2219:                               ; preds = %originalBB217
  br i1 %1101, label %1110, label %1119

; <label>:1110:                                   ; preds = %originalBBpart2219
  %1111 = bitcast %class.FE_Nedelec* %55 to %class.FiniteElementBase*
  %1112 = load %class.Mapping*, %class.Mapping** %11, align 8
  %1113 = load %class.TriaIterator*, %class.TriaIterator** %12, align 8
  %1114 = call i32 @_ZNK10QProjectorILi3EE17DataSetDescriptorcvjEv(%"class.QProjector<3>::DataSetDescriptor"* %20)
  %1115 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %16, align 8
  %1116 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %19, align 8
  %1117 = bitcast %"class.FE_Nedelec<3>::InternalData"* %1116 to %"class.FiniteElementBase<3>::InternalDataBase"*
  %1118 = load %class.FEValuesData*, %class.FEValuesData** %18, align 8
  call void @_ZNK17FiniteElementBaseILi3EE11compute_2ndERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRNS2_16InternalDataBaseERNS0_16InternalDataBaseER12FEValuesDataILi3EE(%class.FiniteElementBase* %1111, %class.Mapping* dereferenceable(24) %1112, %class.TriaIterator* dereferenceable(24) %1113, i32 %1114, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %1115, %"class.FiniteElementBase<3>::InternalDataBase"* dereferenceable(64) %1117, %class.FEValuesData* dereferenceable(272) %1118)
  br label %1119

; <label>:1119:                                   ; preds = %1110, %originalBBpart2219
  %1120 = load i32, i32* @x.151
  %1121 = load i32, i32* @y.152
  %1122 = sub i32 %1120, 1
  %1123 = mul i32 %1120, %1122
  %1124 = urem i32 %1123, 2
  %1125 = icmp eq i32 %1124, 0
  %1126 = icmp slt i32 %1121, 10
  %1127 = or i1 %1125, %1126
  br i1 %1127, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %1119, %originalBB221alteredBB
  %1128 = load i32, i32* @x.151
  %1129 = load i32, i32* @y.152
  %1130 = sub i32 %1128, 1
  %1131 = mul i32 %1128, %1130
  %1132 = urem i32 %1131, 2
  %1133 = icmp eq i32 %1132, 0
  %1134 = icmp slt i32 %1129, 10
  %1135 = or i1 %1133, %1134
  br i1 %1135, label %originalBBpart2223, label %originalBB221alteredBB

originalBBpart2223:                               ; preds = %originalBB221
  ret void

; <label>:1136:                                   ; preds = %originalBBpart2215, %originalBBpart2123, %originalBBpart279, %originalBBpart257
  %1137 = load i8*, i8** %26, align 8
  %1138 = load i32, i32* %27, align 4
  %1139 = insertvalue { i8*, i32 } undef, i8* %1137, 0
  %1140 = insertvalue { i8*, i32 } %1139, i32 %1138, 1
  resume { i8*, i32 } %1140

; <label>:1141:                                   ; preds = %1072, %originalBBpart2131, %originalBBpart261
  %1142 = landingpad { i8*, i32 }
          catch i8* null
  %1143 = extractvalue { i8*, i32 } %1142, 0
  call void @__clang_call_terminate(i8* %1143) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %61
  call void @__cxa_bad_cast() #15
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %78
  store %"class.FE_Nedelec<3>::InternalData"* %59, %"class.FE_Nedelec<3>::InternalData"** %19, align 8
  %1144 = load i32, i32* %13, align 4
  %1145 = load i32, i32* %14, align 4
  %1146 = load %class.TriaIterator*, %class.TriaIterator** %12, align 8
  %1147 = bitcast %class.TriaIterator* %1146 to %class.TriaRawIterator*
  %1148 = call %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %1147)
  %1149 = bitcast %class.DoFCellAccessor* %1148 to i8*
  %1150 = getelementptr inbounds i8, i8* %1149, i64 8
  %1151 = bitcast i8* %1150 to %class.TriaObjectAccessor*
  %1152 = load i32, i32* %13, align 4
  %1153 = call zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE16face_orientationEj(%class.TriaObjectAccessor* %1151, i32 %1152)
  %1154 = load %class.Quadrature.126*, %class.Quadrature.126** %15, align 8
  %1155 = getelementptr inbounds %class.Quadrature.126, %class.Quadrature.126* %1154, i32 0, i32 1
  %1156 = load i32, i32* %1155, align 8
  %1157 = call i32 @_ZN10QProjectorILi3EE17DataSetDescriptor8sub_faceEjjbj(i32 %1144, i32 %1145, i1 zeroext %1153, i32 %1156)
  %1158 = getelementptr inbounds %"class.QProjector<3>::DataSetDescriptor", %"class.QProjector<3>::DataSetDescriptor"* %20, i32 0, i32 0
  store i32 %1157, i32* %1158, align 4
  %1159 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %19, align 8
  %1160 = bitcast %"class.FE_Nedelec<3>::InternalData"* %1159 to %"class.Mapping<3>::InternalDataBase"*
  %1161 = call i32 @_ZNK7MappingILi3EE16InternalDataBase20current_update_flagsEv(%"class.Mapping<3>::InternalDataBase"* %1160)
  store i32 %1161, i32* %21, align 4
  %1162 = load %class.Quadrature.126*, %class.Quadrature.126** %15, align 8
  %1163 = getelementptr inbounds %class.Quadrature.126, %class.Quadrature.126* %1162, i32 0, i32 1
  %1164 = load i32, i32* %1163, align 8
  store i32 %1164, i32* %22, align 4
  %1165 = load i32, i32* %21, align 4
  %1166 = call i32 @_Zan11UpdateFlagsS_(i32 %1165, i32 1)
  %1167 = icmp ne i32 %1166, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %119
  %1168 = load i32, i32* %22, align 4
  %1169 = zext i32 %1168 to i64
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %24, i1 zeroext true)
  call void @_ZNSaI6TensorILi1ELi3EEEC2Ev(%"class.std::allocator.61"* %25) #12
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %157
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %175
  %1170 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  store %class.Tensor* %174, %class.Tensor** %1170, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %196
  %1171 = getelementptr inbounds %class.Tensor, %class.Tensor* %193, i64 %195
  %1172 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %19, align 8
  %1173 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %1172, i32 0, i32 1
  %1174 = load i32, i32* %28, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %217
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %235
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %253
  %1175 = zext i32 %252 to i64
  %1176 = getelementptr inbounds %class.Tensor, %class.Tensor* %234, i64 %1175
  %1177 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %16, align 8
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %273
  store i32 0, i32* %32, align 4
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %294
  store i32 0, i32* %33, align 4
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %314
  %1178 = load i32, i32* %32, align 4
  %1179 = zext i32 %1178 to i64
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %334
  %1180 = load i32, i32* %33, align 4
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %365
  %1181 = load i32, i32* %33, align 4
  %_ = shl i32 %1181, 1
  %_51 = sub i32 %1181, 1
  %gen = mul i32 %_51, 1
  %1182 = add i32 %1181, 1
  store i32 %1182, i32* %33, align 4
  br label %originalBB50

originalBB55alteredBB:                            ; preds = %originalBB55, %384
  %1183 = landingpad { i8*, i32 }
          cleanup
  %1184 = extractvalue { i8*, i32 } %1183, 0
  store i8* %1184, i8** %26, align 8
  %1185 = extractvalue { i8*, i32 } %1183, 1
  store i32 %1185, i32* %27, align 4
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"* %25) #12
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %404
  %1186 = landingpad { i8*, i32 }
          cleanup
  %1187 = extractvalue { i8*, i32 } %1186, 0
  store i8* %1187, i8** %26, align 8
  %1188 = extractvalue { i8*, i32 } %1186, 1
  store i32 %1188, i32* %27, align 4
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %428
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %445
  %1189 = load i32, i32* %28, align 4
  %_68 = shl i32 %1189, 1
  %_69 = shl i32 %1189, 1
  %_70 = sub i32 0, %1189
  %gen71 = add i32 %_70, 1
  %_72 = sub i32 %1189, 1
  %gen73 = mul i32 %_72, 1
  %1190 = add i32 %1189, 1
  store i32 %1190, i32* %28, align 4
  br label %originalBB67

originalBB77alteredBB:                            ; preds = %originalBB77, %465
  br label %originalBB77

originalBB81alteredBB:                            ; preds = %originalBB81, %482
  %1191 = load i32, i32* %21, align 4
  %1192 = call i32 @_Zan11UpdateFlagsS_(i32 %1191, i32 2)
  %1193 = icmp ne i32 %1192, 0
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %505
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %37) #12
  %1194 = load i32, i32* %22, align 4
  %1195 = zext i32 %1194 to i64
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %524
  call void @_ZNSaI6TensorILi2ELi3EEEC2Ev(%"class.std::allocator.67"* %40) #12
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %542
  %1196 = load i32, i32* %41, align 4
  %1197 = bitcast %class.FE_Nedelec* %55 to i8*
  %1198 = getelementptr inbounds i8, i8* %1197, i64 24
  %1199 = bitcast i8* %1198 to %class.FiniteElementData*
  %1200 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %1199, i32 0, i32 10
  %1201 = load i32, i32* %1200, align 8
  %1202 = icmp ult i32 %1196, %1201
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %573
  %1203 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %42, i32 0, i32 0
  store %class.Tensor.33* %572, %class.Tensor.33** %1203, align 8
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %597
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %620
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %638
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %656
  %1204 = zext i32 %655 to i64
  %1205 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %637, i64 %1204
  %1206 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %16, align 8
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %690
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %712
  %1207 = landingpad { i8*, i32 }
          cleanup
  %1208 = extractvalue { i8*, i32 } %1207, 0
  store i8* %1208, i8** %26, align 8
  %1209 = extractvalue { i8*, i32 } %1207, 1
  store i32 %1209, i32* %27, align 4
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %37) #12
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %732
  %1210 = landingpad { i8*, i32 }
          cleanup
  %1211 = extractvalue { i8*, i32 } %1210, 0
  store i8* %1211, i8** %26, align 8
  %1212 = extractvalue { i8*, i32 } %1210, 1
  store i32 %1212, i32* %27, align 4
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %756
  %1213 = landingpad { i8*, i32 }
          cleanup
  %1214 = extractvalue { i8*, i32 } %1213, 0
  store i8* %1214, i8** %26, align 8
  %1215 = extractvalue { i8*, i32 } %1213, 1
  store i32 %1215, i32* %27, align 4
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %786
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %807
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %828
  %1216 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %49, i32 0, i32 0
  store %class.Tensor.33* %827, %class.Tensor.33** %1216, align 8
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %849
  store i32 0, i32* %50, align 4
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %870
  %1217 = load i32, i32* %50, align 4
  %1218 = zext i32 %1217 to i64
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %891
  %1219 = load i32, i32* %50, align 4
  %1220 = zext i32 %1219 to i64
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %917
  store i32 0, i32* %52, align 4
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %938
  store i32 0, i32* %53, align 4
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %965
  %1221 = load %class.FEValuesData*, %class.FEValuesData** %18, align 8
  %1222 = getelementptr inbounds %class.FEValuesData, %class.FEValuesData* %1221, i32 0, i32 1
  %1223 = load i32, i32* %41, align 4
  %_166 = sub i32 %1223, 3
  %gen167 = mul i32 %_166, 3
  %_168 = sub i32 %1223, 3
  %gen169 = mul i32 %_168, 3
  %1224 = mul i32 %1223, 3
  %1225 = load i32, i32* %53, align 4
  %_170 = shl i32 %1224, %1225
  %_171 = sub i32 0, %1224
  %gen172 = add i32 %_171, %1225
  %_173 = sub i32 %1224, %1225
  %gen174 = mul i32 %_173, %1225
  %_175 = sub i32 0, %1224
  %gen176 = add i32 %_175, %1225
  %_177 = shl i32 %1224, %1225
  %_178 = sub i32 %1224, %1225
  %gen179 = mul i32 %_178, %1225
  %_180 = shl i32 %1224, %1225
  %_181 = shl i32 %1224, %1225
  %1226 = add i32 %1224, %1225
  br label %originalBB165

originalBB185alteredBB:                           ; preds = %originalBB185, %993
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %1014
  %1227 = load i32, i32* %52, align 4
  %_190 = sub i32 %1227, 1
  %gen191 = mul i32 %_190, 1
  %_192 = shl i32 %1227, 1
  %_193 = sub i32 0, %1227
  %gen194 = add i32 %_193, 1
  %_195 = sub i32 0, %1227
  %gen196 = add i32 %_195, 1
  %_197 = sub i32 0, %1227
  %gen198 = add i32 %_197, 1
  %_199 = sub i32 %1227, 1
  %gen200 = mul i32 %_199, 1
  %_201 = shl i32 %1227, 1
  %1228 = add i32 %1227, 1
  store i32 %1228, i32* %52, align 4
  br label %originalBB189

originalBB205alteredBB:                           ; preds = %originalBB205, %1037
  br label %originalBB205

originalBB209alteredBB:                           ; preds = %originalBB209, %1054
  call void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.65"* %35)
  br label %originalBB209

originalBB213alteredBB:                           ; preds = %originalBB213, %1073
  br label %originalBB213

originalBB217alteredBB:                           ; preds = %originalBB217, %1090
  %1229 = load i32, i32* %21, align 4
  %1230 = call i32 @_Zan11UpdateFlagsS_(i32 %1229, i32 4)
  %1231 = icmp ne i32 %1230, 0
  br label %originalBB217

originalBB221alteredBB:                           ; preds = %originalBB221, %1119
  br label %originalBB221
}

declare i32 @_ZN10QProjectorILi3EE17DataSetDescriptor8sub_faceEjjbj(i32, i32, i1 zeroext, i32) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjEC2Ev(%"class.std::allocator.30"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %2, align 8
  %3 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %2, align 8
  %4 = bitcast %"class.std::allocator.30"* %3 to %"class.__gnu_cxx::new_allocator.31"*
  call void @_ZN9__gnu_cxx13new_allocatorIjEC2Ev(%"class.__gnu_cxx::new_allocator.31"* %4) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.28"*, i64, i32* dereferenceable(4), %"class.std::allocator.30"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.28"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.30"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.30"* %3, %"class.std::allocator.30"** %8, align 8
  %11 = load %"class.std::vector.28"*, %"class.std::vector.28"** %5, align 8
  %12 = bitcast %"class.std::vector.28"* %11 to %"struct.std::_Vector_base.29"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %8, align 8
  %15 = call i64 @_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_(i64 %13, %"class.std::allocator.30"* dereferenceable(1) %14)
  %16 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %8, align 8
  call void @_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_(%"struct.std::_Vector_base.29"* %12, i64 %15, %"class.std::allocator.30"* dereferenceable(1) %16)
  %17 = load i64, i64* %6, align 8
  %18 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj(%"class.std::vector.28"* %11, i64 %17, i32* dereferenceable(4) %18)
          to label %19 unwind label %20

; <label>:19:                                     ; preds = %4
  ret void

; <label>:20:                                     ; preds = %4
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %9, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %10, align 4
  %24 = bitcast %"class.std::vector.28"* %11 to %"struct.std::_Vector_base.29"*
  invoke void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.29"* %24)
          to label %25 unwind label %31

; <label>:25:                                     ; preds = %20
  br label %26

; <label>:26:                                     ; preds = %25
  %27 = load i8*, i8** %9, align 8
  %28 = load i32, i32* %10, align 4
  %29 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  resume { i8*, i32 } %30

; <label>:31:                                     ; preds = %20
  %32 = landingpad { i8*, i32 }
          catch i8* null
  %33 = extractvalue { i8*, i32 } %32, 0
  call void @__clang_call_terminate(i8* %33) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjED2Ev(%"class.std::allocator.30"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %2, align 8
  %3 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %2, align 8
  %4 = bitcast %"class.std::allocator.30"* %3 to %"class.__gnu_cxx::new_allocator.31"*
  call void @_ZN9__gnu_cxx13new_allocatorIjED2Ev(%"class.__gnu_cxx::new_allocator.31"* %4) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.28"*, i64) #1 comdat align 2 {
  %3 = load i32, i32* @x.159
  %4 = load i32, i32* @y.160
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.28"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.28"*, %"class.std::vector.28"** %11, align 8
  %14 = bitcast %"class.std::vector.28"* %13 to %"struct.std::_Vector_base.29"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds i32, i32* %18, i64 %19
  %21 = load i32, i32* @x.159
  %22 = load i32, i32* @y.160
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.28"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.28"*, %"class.std::vector.28"** %29, align 8
  %32 = bitcast %"class.std::vector.28"* %31 to %"struct.std::_Vector_base.29"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %33 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds i32, i32* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EdE6reinitERK12TableIndicesILi2EE(%class.TableBase*, %class.TableIndices* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %class.TableBase*, align 8
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.TableIndices, align 4
  store %class.TableBase* %0, %class.TableBase** %3, align 8
  store %class.TableIndices* %1, %class.TableIndices** %4, align 8
  %7 = load %class.TableBase*, %class.TableBase** %3, align 8
  %8 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 3
  %10 = bitcast %class.TableIndices* %9 to i8*
  %11 = bitcast %class.TableIndices* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 4, i1 false)
  %12 = call i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase* %7)
  store i32 %12, i32* %5, align 4
  %13 = load i32, i32* %5, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %64

; <label>:15:                                     ; preds = %2
  %16 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %17 = load double*, double** %16, align 8
  %18 = icmp ne double* %17, null
  br i1 %18, label %19, label %42

; <label>:19:                                     ; preds = %15
  %20 = load i32, i32* @x.161
  %21 = load i32, i32* @y.162
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %29 = load double*, double** %28, align 8
  %30 = icmp eq double* %29, null
  %31 = load i32, i32* @x.161
  %32 = load i32, i32* @y.162
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %30, label %41, label %39

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = bitcast double* %29 to i8*
  call void @_ZdaPv(i8* %40) #14
  br label %41

; <label>:41:                                     ; preds = %39, %originalBBpart2
  br label %42

; <label>:42:                                     ; preds = %41, %15
  %43 = load i32, i32* @x.161
  %44 = load i32, i32* @y.162
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  store double* null, double** %51, align 8
  %52 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  store i32 0, i32* %52, align 8
  call void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %6)
  %53 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 3
  %54 = bitcast %class.TableIndices* %53 to i8*
  %55 = bitcast %class.TableIndices* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 4, i1 false)
  %56 = load i32, i32* @x.161
  %57 = load i32, i32* @y.162
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %174

; <label>:64:                                     ; preds = %2
  %65 = load i32, i32* @x.161
  %66 = load i32, i32* @y.162
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %64, %originalBB6alteredBB
  %73 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = load i32, i32* %5, align 4
  %76 = icmp ult i32 %74, %75
  %77 = load i32, i32* @x.161
  %78 = load i32, i32* @y.162
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %76, label %85, label %173

; <label>:85:                                     ; preds = %originalBBpart28
  %86 = load i32, i32* @x.161
  %87 = load i32, i32* @y.162
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %85, %originalBB10alteredBB
  %94 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %95 = load double*, double** %94, align 8
  %96 = icmp ne double* %95, null
  %97 = load i32, i32* @x.161
  %98 = load i32, i32* @y.162
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %96, label %105, label %144

; <label>:105:                                    ; preds = %originalBBpart212
  %106 = load i32, i32* @x.161
  %107 = load i32, i32* @y.162
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %105, %originalBB14alteredBB
  %114 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %115 = load double*, double** %114, align 8
  %116 = icmp eq double* %115, null
  %117 = load i32, i32* @x.161
  %118 = load i32, i32* @y.162
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %116, label %127, label %125

; <label>:125:                                    ; preds = %originalBBpart216
  %126 = bitcast double* %115 to i8*
  call void @_ZdaPv(i8* %126) #14
  br label %127

; <label>:127:                                    ; preds = %125, %originalBBpart216
  %128 = load i32, i32* @x.161
  %129 = load i32, i32* @y.162
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %127, %originalBB18alteredBB
  %136 = load i32, i32* @x.161
  %137 = load i32, i32* @y.162
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %144

; <label>:144:                                    ; preds = %originalBBpart220, %originalBBpart212
  %145 = load i32, i32* @x.161
  %146 = load i32, i32* @y.162
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %144, %originalBB22alteredBB
  %153 = load i32, i32* %5, align 4
  %154 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  store i32 %153, i32* %154, align 8
  %155 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  %156 = load i32, i32* %155, align 8
  %157 = zext i32 %156 to i64
  %158 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %157, i64 8)
  %159 = extractvalue { i64, i1 } %158, 1
  %160 = extractvalue { i64, i1 } %158, 0
  %161 = select i1 %159, i64 -1, i64 %160
  %162 = call i8* @_Znam(i64 %161) #13
  %163 = bitcast i8* %162 to double*
  %164 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  store double* %163, double** %164, align 8
  %165 = load i32, i32* @x.161
  %166 = load i32, i32* @y.162
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %173

; <label>:173:                                    ; preds = %originalBBpart224, %originalBBpart28
  call void @_ZN9TableBaseILi2EdE12reset_valuesEv(%class.TableBase* %7)
  br label %174

; <label>:174:                                    ; preds = %173, %originalBBpart24
  %175 = load i32, i32* @x.161
  %176 = load i32, i32* @y.162
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %174, %originalBB26alteredBB
  %183 = load i32, i32* @x.161
  %184 = load i32, i32* @y.162
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %19
  %191 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %192 = load double*, double** %191, align 8
  %193 = icmp eq double* %192, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %194 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  store double* null, double** %194, align 8
  %195 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  store i32 0, i32* %195, align 8
  call void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %6)
  %196 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 3
  %197 = bitcast %class.TableIndices* %196 to i8*
  %198 = bitcast %class.TableIndices* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %197, i8* %198, i64 8, i32 4, i1 false)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  %199 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  %200 = load i32, i32* %199, align 8
  %201 = load i32, i32* %5, align 4
  %202 = icmp ult i32 %200, %201
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  %203 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %204 = load double*, double** %203, align 8
  %205 = icmp ne double* %204, null
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %105
  %206 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %207 = load double*, double** %206, align 8
  %208 = icmp eq double* %207, null
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %127
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %144
  %209 = load i32, i32* %5, align 4
  %210 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  store i32 %209, i32* %210, align 8
  %211 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  %212 = load i32, i32* %211, align 8
  %213 = zext i32 %212 to i64
  %214 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %213, i64 8)
  %215 = extractvalue { i64, i1 } %214, 1
  %216 = extractvalue { i64, i1 } %214, 0
  %217 = select i1 %215, i64 -1, i64 %216
  %218 = call i8* @_Znam(i64 %217) #13
  %219 = bitcast i8* %218 to double*
  %220 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  store double* %219, double** %220, align 8
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %174
  br label %originalBB26
}

declare i64 @_ZNK17FiniteElementBaseILi3EE26interface_constraints_sizeEv(%class.FiniteElementBase*) #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN10FullMatrixIdE4fillIdEEvPKT_(%class.FullMatrix*, double*) #0 comdat align 2 {
  %3 = alloca %class.FullMatrix*, align 8
  %4 = alloca double*, align 8
  store %class.FullMatrix* %0, %class.FullMatrix** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %class.FullMatrix*, %class.FullMatrix** %3, align 8
  %6 = bitcast %class.FullMatrix* %5 to %class.Table*
  %7 = bitcast %class.Table* %6 to %class.TableBase*
  %8 = load double*, double** %4, align 8
  call void @_ZN9TableBaseILi2EdE4fillIdEEvPKT_(%class.TableBase* %7, double* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2EdE6reinitEjj(%class.Table*, i32, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.165
  %5 = load i32, i32* @y.166
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Table*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %class.TableIndices, align 4
  store %class.Table* %0, %class.Table** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  %16 = load %class.Table*, %class.Table** %12, align 8
  %17 = bitcast %class.Table* %16 to %class.TableBase*
  %18 = load i32, i32* %13, align 4
  %19 = load i32, i32* %14, align 4
  call void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices* %15, i32 %18, i32 %19)
  call void @_ZN9TableBaseILi2EdE6reinitERK12TableIndicesILi2EE(%class.TableBase* %17, %class.TableIndices* dereferenceable(8) %15)
  %20 = load i32, i32* @x.165
  %21 = load i32, i32* @y.166
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %class.Table*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %class.TableIndices, align 4
  store %class.Table* %0, %class.Table** %28, align 8
  store i32 %1, i32* %29, align 4
  store i32 %2, i32* %30, align 4
  %32 = load %class.Table*, %class.Table** %28, align 8
  %33 = bitcast %class.Table* %32 to %class.TableBase*
  %34 = load i32, i32* %29, align 4
  %35 = load i32, i32* %30, align 4
  call void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices* %31, i32 %34, i32 %35)
  call void @_ZN9TableBaseILi2EdE6reinitERK12TableIndicesILi2EE(%class.TableBase* %33, %class.TableIndices* dereferenceable(8) %31)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table*, i32, i32) #1 comdat align 2 {
  %4 = alloca %class.Table*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.Table* %0, %class.Table** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.Table*, %class.Table** %4, align 8
  %8 = bitcast %class.Table* %7 to %class.TableBase*
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %8, i32 0, i32 1
  %10 = load double*, double** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = bitcast %class.Table* %7 to %class.TableBase*
  %13 = getelementptr inbounds %class.TableBase, %class.TableBase* %12, i32 0, i32 3
  %14 = bitcast %class.TableIndices* %13 to %class.TableIndicesBase*
  %15 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %14, i32 1)
  %16 = mul i32 %11, %15
  %17 = load i32, i32* %6, align 4
  %18 = add i32 %16, %17
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds double, double* %10, i64 %19
  ret double* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE6resizeEmS1_(%"class.std::vector.11"*, i64, %class.Point*) #0 comdat align 2 {
  %4 = load i32, i32* @x.169
  %5 = load i32, i32* @y.170
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector.11"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.129", align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %12, align 8
  store i64 %1, i64* %13, align 8
  %15 = load %"class.std::vector.11"*, %"class.std::vector.11"** %12, align 8
  %16 = load i64, i64* %13, align 8
  %17 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %15)
  %18 = icmp ugt i64 %16, %17
  %19 = load i32, i32* @x.169
  %20 = load i32, i32* @y.170
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %51

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.169
  %29 = load i32, i32* @y.170
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.11"* %15)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.129", %"class.__gnu_cxx::__normal_iterator.129"* %14, i32 0, i32 0
  store %class.Point* %36, %class.Point** %37, align 8
  %38 = load i64, i64* %13, align 8
  %39 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %15)
  %40 = sub i64 %38, %39
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.129", %"class.__gnu_cxx::__normal_iterator.129"* %14, i32 0, i32 0
  %42 = load %class.Point*, %class.Point** %41, align 8
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.11"* %15, %class.Point* %42, i64 %40, %class.Point* dereferenceable(24) %2)
  %43 = load i32, i32* @x.169
  %44 = load i32, i32* @y.170
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart210, label %originalBB1alteredBB

originalBBpart210:                                ; preds = %originalBB1
  br label %80

; <label>:51:                                     ; preds = %originalBBpart2
  %52 = load i64, i64* %13, align 8
  %53 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %15)
  %54 = icmp ult i64 %52, %53
  br i1 %54, label %55, label %79

; <label>:55:                                     ; preds = %51
  %56 = load i32, i32* @x.169
  %57 = load i32, i32* @y.170
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %55, %originalBB12alteredBB
  %64 = bitcast %"class.std::vector.11"* %15 to %"struct.std::_Vector_base.12"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %64, i32 0, i32 0
  %66 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %65 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %66, i32 0, i32 0
  %68 = load %class.Point*, %class.Point** %67, align 8
  %69 = load i64, i64* %13, align 8
  %70 = getelementptr inbounds %class.Point, %class.Point* %68, i64 %69
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.11"* %15, %class.Point* %70)
  %71 = load i32, i32* @x.169
  %72 = load i32, i32* @y.170
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br label %79

; <label>:79:                                     ; preds = %originalBBpart214, %51
  br label %80

; <label>:80:                                     ; preds = %79, %originalBBpart210
  %81 = load i32, i32* @x.169
  %82 = load i32, i32* @y.170
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %80, %originalBB16alteredBB
  %89 = load i32, i32* @x.169
  %90 = load i32, i32* @y.170
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %97 = alloca %"class.std::vector.11"*, align 8
  %98 = alloca i64, align 8
  %99 = alloca %"class.__gnu_cxx::__normal_iterator.129", align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %97, align 8
  store i64 %1, i64* %98, align 8
  %100 = load %"class.std::vector.11"*, %"class.std::vector.11"** %97, align 8
  %101 = load i64, i64* %98, align 8
  %102 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %100)
  %103 = icmp ugt i64 %101, %102
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %104 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.11"* %15)
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.129", %"class.__gnu_cxx::__normal_iterator.129"* %14, i32 0, i32 0
  store %class.Point* %104, %class.Point** %105, align 8
  %106 = load i64, i64* %13, align 8
  %107 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %15)
  %_ = sub i64 0, %106
  %gen = add i64 %_, %107
  %_2 = sub i64 %106, %107
  %gen3 = mul i64 %_2, %107
  %_4 = sub i64 %106, %107
  %gen5 = mul i64 %_4, %107
  %_6 = shl i64 %106, %107
  %_7 = sub i64 0, %106
  %gen8 = add i64 %_7, %107
  %108 = sub i64 %106, %107
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.129", %"class.__gnu_cxx::__normal_iterator.129"* %14, i32 0, i32 0
  %110 = load %class.Point*, %class.Point** %109, align 8
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.11"* %15, %class.Point* %110, i64 %108, %class.Point* dereferenceable(24) %2)
  br label %originalBB1

originalBB12alteredBB:                            ; preds = %originalBB12, %55
  %111 = bitcast %"class.std::vector.11"* %15 to %"struct.std::_Vector_base.12"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %111, i32 0, i32 0
  %113 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %112 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %114 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %113, i32 0, i32 0
  %115 = load %class.Point*, %class.Point** %114, align 8
  %116 = load i64, i64* %13, align 8
  %117 = getelementptr inbounds %class.Point, %class.Point* %115, i64 %116
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.11"* %15, %class.Point* %117)
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %80
  br label %originalBB16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5PointILi3EEC2Ev(%class.Point*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.171
  %3 = load i32, i32* @y.172
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %10, align 8
  %11 = load %class.Point*, %class.Point** %10, align 8
  %12 = bitcast %class.Point* %11 to %class.Tensor*
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %12, i1 zeroext true)
  %13 = load i32, i32* @x.171
  %14 = load i32, i32* @y.172
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %21, align 8
  %22 = load %class.Point*, %class.Point** %21, align 8
  %23 = bitcast %class.Point* %22 to %class.Tensor*
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %23, i1 zeroext true)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZN12GeometryInfoILi3EE25vertices_adjacent_to_lineEjj(i32, i32) #1 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds [12 x [2 x i32]], [12 x [2 x i32]]* @_ZZN12GeometryInfoILi3EE25vertices_adjacent_to_lineEjjE14vertex_indices, i64 0, i64 %6
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  ret i32 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12GeometryInfoILi3EE16unit_cell_vertexEj(%class.Point* noalias sret, i32) #0 comdat align 2 {
  %3 = load i32, i32* @x.175
  %4 = load i32, i32* @y.176
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca [8 x %class.Point], align 16
  store i32 %1, i32* %11, align 4
  %13 = getelementptr inbounds [8 x %class.Point], [8 x %class.Point]* %12, i64 0, i64 0
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %13, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00)
  %14 = getelementptr inbounds %class.Point, %class.Point* %13, i64 1
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %14, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00)
  %15 = getelementptr inbounds %class.Point, %class.Point* %14, i64 1
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %15, double 1.000000e+00, double 0.000000e+00, double 1.000000e+00)
  %16 = getelementptr inbounds %class.Point, %class.Point* %15, i64 1
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %16, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00)
  %17 = getelementptr inbounds %class.Point, %class.Point* %16, i64 1
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %17, double 0.000000e+00, double 1.000000e+00, double 0.000000e+00)
  %18 = getelementptr inbounds %class.Point, %class.Point* %17, i64 1
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %18, double 1.000000e+00, double 1.000000e+00, double 0.000000e+00)
  %19 = getelementptr inbounds %class.Point, %class.Point* %18, i64 1
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %19, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00)
  %20 = getelementptr inbounds %class.Point, %class.Point* %19, i64 1
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %20, double 0.000000e+00, double 1.000000e+00, double 1.000000e+00)
  %21 = load i32, i32* %11, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [8 x %class.Point], [8 x %class.Point]* %12, i64 0, i64 %22
  call void @_ZN5PointILi3EEC2ERKS0_(%class.Point* %0, %class.Point* dereferenceable(24) %23)
  %24 = load i32, i32* @x.175
  %25 = load i32, i32* @y.176
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %32 = alloca i32, align 4
  %33 = alloca [8 x %class.Point], align 16
  store i32 %1, i32* %32, align 4
  %34 = getelementptr inbounds [8 x %class.Point], [8 x %class.Point]* %33, i64 0, i64 0
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %34, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00)
  %35 = getelementptr inbounds %class.Point, %class.Point* %34, i64 1
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %35, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00)
  %36 = getelementptr inbounds %class.Point, %class.Point* %35, i64 1
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %36, double 1.000000e+00, double 0.000000e+00, double 1.000000e+00)
  %37 = getelementptr inbounds %class.Point, %class.Point* %36, i64 1
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %37, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00)
  %38 = getelementptr inbounds %class.Point, %class.Point* %37, i64 1
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %38, double 0.000000e+00, double 1.000000e+00, double 0.000000e+00)
  %39 = getelementptr inbounds %class.Point, %class.Point* %38, i64 1
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %39, double 1.000000e+00, double 1.000000e+00, double 0.000000e+00)
  %40 = getelementptr inbounds %class.Point, %class.Point* %39, i64 1
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %40, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00)
  %41 = getelementptr inbounds %class.Point, %class.Point* %40, i64 1
  call void @_ZN5PointILi3EEC2Eddd(%class.Point* %41, double 0.000000e+00, double 1.000000e+00, double 1.000000e+00)
  %42 = load i32, i32* %32, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds [8 x %class.Point], [8 x %class.Point]* %33, i64 0, i64 %43
  call void @_ZN5PointILi3EEC2ERKS0_(%class.Point* %0, %class.Point* dereferenceable(24) %44)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK5PointILi3EEplERK6TensorILi1ELi3EE(%class.Point* noalias sret, %class.Point*, %class.Tensor* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca %class.Point, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  store %class.Tensor* %2, %class.Tensor** %5, align 8
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = load %class.Tensor*, %class.Tensor** %5, align 8
  call void @_ZN5PointILi3EEC2ERKS0_(%class.Point* %6, %class.Point* dereferenceable(24) %7)
  %9 = bitcast %class.Point* %6 to %class.Tensor*
  %10 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEpLERKS0_(%class.Tensor* %9, %class.Tensor* dereferenceable(24) %8)
  call void @_ZN5PointILi3EEC2ERK6TensorILi1ELi3EE(%class.Point* %0, %class.Tensor* dereferenceable(24) %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK5PointILi3EEdvEd(%class.Point* noalias sret, %class.Point*, double) #0 comdat align 2 {
  %4 = alloca %class.Point*, align 8
  %5 = alloca double, align 8
  %6 = alloca %class.Point, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  store double %2, double* %5, align 8
  %7 = load %class.Point*, %class.Point** %4, align 8
  call void @_ZN5PointILi3EEC2ERKS0_(%class.Point* %6, %class.Point* dereferenceable(24) %7)
  %8 = bitcast %class.Point* %6 to %class.Tensor*
  %9 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEdVERKd(%class.Tensor* %8, double* dereferenceable(8) %5)
  call void @_ZN5PointILi3EEC2ERK6TensorILi1ELi3EE(%class.Point* %0, %class.Tensor* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.11"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.11"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %6 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Point*, %class.Point** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Point, %class.Point* %10, i64 %11
  ret %class.Point* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point*, %class.Point* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %class.Point*, align 8
  %4 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %3, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  %5 = load %class.Point*, %class.Point** %3, align 8
  %6 = bitcast %class.Point* %5 to %class.Tensor*
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = bitcast %class.Point* %7 to %class.Tensor*
  %9 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor* %6, %class.Tensor* dereferenceable(24) %8)
  ret %class.Point* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi2EESaIS1_EE6resizeEmS1_(%"class.std::vector.16"*, i64, %class.Point.21*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.16"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.130", align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.std::vector.16"*, %"class.std::vector.16"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE4sizeEv(%"class.std::vector.16"* %7)
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %19

; <label>:11:                                     ; preds = %3
  %12 = call %class.Point.21* @_ZNSt6vectorI5PointILi2EESaIS1_EE3endEv(%"class.std::vector.16"* %7)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.130", %"class.__gnu_cxx::__normal_iterator.130"* %6, i32 0, i32 0
  store %class.Point.21* %12, %class.Point.21** %13, align 8
  %14 = load i64, i64* %5, align 8
  %15 = call i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE4sizeEv(%"class.std::vector.16"* %7)
  %16 = sub i64 %14, %15
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.130", %"class.__gnu_cxx::__normal_iterator.130"* %6, i32 0, i32 0
  %18 = load %class.Point.21*, %class.Point.21** %17, align 8
  call void @_ZNSt6vectorI5PointILi2EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.16"* %7, %class.Point.21* %18, i64 %16, %class.Point.21* dereferenceable(16) %2)
  br label %32

; <label>:19:                                     ; preds = %3
  %20 = load i64, i64* %5, align 8
  %21 = call i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE4sizeEv(%"class.std::vector.16"* %7)
  %22 = icmp ult i64 %20, %21
  br i1 %22, label %23, label %31

; <label>:23:                                     ; preds = %19
  %24 = bitcast %"class.std::vector.16"* %7 to %"struct.std::_Vector_base.17"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %24, i32 0, i32 0
  %26 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %25 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %26, i32 0, i32 0
  %28 = load %class.Point.21*, %class.Point.21** %27, align 8
  %29 = load i64, i64* %5, align 8
  %30 = getelementptr inbounds %class.Point.21, %class.Point.21* %28, i64 %29
  call void @_ZNSt6vectorI5PointILi2EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.16"* %7, %class.Point.21* %30)
  br label %31

; <label>:31:                                     ; preds = %23, %19
  br label %32

; <label>:32:                                     ; preds = %31, %11
  %33 = load i32, i32* @x.185
  %34 = load i32, i32* @y.186
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %32, %originalBBalteredBB
  %41 = load i32, i32* @x.185
  %42 = load i32, i32* @y.186
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %32
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5PointILi2EEC2Ev(%class.Point.21*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.Point.21*, align 8
  store %class.Point.21* %0, %class.Point.21** %2, align 8
  %3 = load %class.Point.21*, %class.Point.21** %2, align 8
  %4 = bitcast %class.Point.21* %3 to %class.Tensor.22*
  call void @_ZN6TensorILi1ELi2EEC2Eb(%class.Tensor.22* %4, i1 zeroext true)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZN12GeometryInfoILi2EE25vertices_adjacent_to_lineEjj(i32, i32) #1 comdat align 2 {
  %3 = load i32, i32* @x.189
  %4 = load i32, i32* @y.190
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  store i32 %1, i32* %12, align 4
  %13 = load i32, i32* %11, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* @_ZZN12GeometryInfoILi2EE25vertices_adjacent_to_lineEjjE14vertex_indices, i64 0, i64 %14
  %16 = load i32, i32* %12, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = load i32, i32* @x.189
  %21 = load i32, i32* @y.190
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %19

originalBBalteredBB:                              ; preds = %originalBB, %2
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  store i32 %0, i32* %28, align 4
  store i32 %1, i32* %29, align 4
  %30 = load i32, i32* %28, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* @_ZZN12GeometryInfoILi2EE25vertices_adjacent_to_lineEjjE14vertex_indices, i64 0, i64 %31
  %33 = load i32, i32* %29, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds [2 x i32], [2 x i32]* %32, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12GeometryInfoILi2EE16unit_cell_vertexEj(%class.Point.21* noalias sret, i32) #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca [4 x %class.Point.21], align 16
  store i32 %1, i32* %3, align 4
  %5 = getelementptr inbounds [4 x %class.Point.21], [4 x %class.Point.21]* %4, i64 0, i64 0
  call void @_ZN5PointILi2EEC2Edd(%class.Point.21* %5, double 0.000000e+00, double 0.000000e+00)
  %6 = getelementptr inbounds %class.Point.21, %class.Point.21* %5, i64 1
  call void @_ZN5PointILi2EEC2Edd(%class.Point.21* %6, double 1.000000e+00, double 0.000000e+00)
  %7 = getelementptr inbounds %class.Point.21, %class.Point.21* %6, i64 1
  call void @_ZN5PointILi2EEC2Edd(%class.Point.21* %7, double 1.000000e+00, double 1.000000e+00)
  %8 = getelementptr inbounds %class.Point.21, %class.Point.21* %7, i64 1
  call void @_ZN5PointILi2EEC2Edd(%class.Point.21* %8, double 0.000000e+00, double 1.000000e+00)
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds [4 x %class.Point.21], [4 x %class.Point.21]* %4, i64 0, i64 %10
  call void @_ZN5PointILi2EEC2ERKS0_(%class.Point.21* %0, %class.Point.21* dereferenceable(16) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK5PointILi2EEplERK6TensorILi1ELi2EE(%class.Point.21* noalias sret, %class.Point.21*, %class.Tensor.22* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %class.Point.21*, align 8
  %5 = alloca %class.Tensor.22*, align 8
  %6 = alloca %class.Point.21, align 8
  store %class.Point.21* %1, %class.Point.21** %4, align 8
  store %class.Tensor.22* %2, %class.Tensor.22** %5, align 8
  %7 = load %class.Point.21*, %class.Point.21** %4, align 8
  %8 = load %class.Tensor.22*, %class.Tensor.22** %5, align 8
  call void @_ZN5PointILi2EEC2ERKS0_(%class.Point.21* %6, %class.Point.21* dereferenceable(16) %7)
  %9 = bitcast %class.Point.21* %6 to %class.Tensor.22*
  %10 = call dereferenceable(16) %class.Tensor.22* @_ZN6TensorILi1ELi2EEpLERKS0_(%class.Tensor.22* %9, %class.Tensor.22* dereferenceable(16) %8)
  call void @_ZN5PointILi2EEC2ERK6TensorILi1ELi2EE(%class.Point.21* %0, %class.Tensor.22* dereferenceable(16) %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK5PointILi2EEdvEd(%class.Point.21* noalias sret, %class.Point.21*, double) #0 comdat align 2 {
  %4 = alloca %class.Point.21*, align 8
  %5 = alloca double, align 8
  %6 = alloca %class.Point.21, align 8
  store %class.Point.21* %1, %class.Point.21** %4, align 8
  store double %2, double* %5, align 8
  %7 = load %class.Point.21*, %class.Point.21** %4, align 8
  call void @_ZN5PointILi2EEC2ERKS0_(%class.Point.21* %6, %class.Point.21* dereferenceable(16) %7)
  %8 = bitcast %class.Point.21* %6 to %class.Tensor.22*
  %9 = call dereferenceable(16) %class.Tensor.22* @_ZN6TensorILi1ELi2EEdVERKd(%class.Tensor.22* %8, double* dereferenceable(8) %5)
  call void @_ZN5PointILi2EEC2ERK6TensorILi1ELi2EE(%class.Point.21* %0, %class.Tensor.22* dereferenceable(16) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Point.21* @_ZNSt6vectorI5PointILi2EESaIS1_EEixEm(%"class.std::vector.16"*, i64) #1 comdat align 2 {
  %3 = load i32, i32* @x.197
  %4 = load i32, i32* @y.198
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.16"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.16"*, %"class.std::vector.16"** %11, align 8
  %14 = bitcast %"class.std::vector.16"* %13 to %"struct.std::_Vector_base.17"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %class.Point.21*, %class.Point.21** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds %class.Point.21, %class.Point.21* %18, i64 %19
  %21 = load i32, i32* @x.197
  %22 = load i32, i32* @y.198
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point.21* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.16"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.16"*, %"class.std::vector.16"** %29, align 8
  %32 = bitcast %"class.std::vector.16"* %31 to %"struct.std::_Vector_base.17"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %33 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load %class.Point.21*, %class.Point.21** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds %class.Point.21, %class.Point.21* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %class.Point.21* @_ZN5PointILi2EEaSERKS0_(%class.Point.21*, %class.Point.21* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %class.Point.21*, align 8
  %4 = alloca %class.Point.21*, align 8
  store %class.Point.21* %0, %class.Point.21** %3, align 8
  store %class.Point.21* %1, %class.Point.21** %4, align 8
  %5 = load %class.Point.21*, %class.Point.21** %3, align 8
  %6 = bitcast %class.Point.21* %5 to %class.Tensor.22*
  %7 = load %class.Point.21*, %class.Point.21** %4, align 8
  %8 = bitcast %class.Point.21* %7 to %class.Tensor.22*
  %9 = call dereferenceable(16) %class.Tensor.22* @_ZN6TensorILi1ELi2EEaSERKS0_(%class.Tensor.22* %6, %class.Tensor.22* dereferenceable(16) %8)
  ret %class.Point.21* %5
}

; Function Attrs: noinline nounwind uwtable
define weak_odr i32 @_ZNK10FE_NedelecILi3EE11update_onceE11UpdateFlags(%class.FE_Nedelec*, i32) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.201
  %4 = load i32, i32* @y.202
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.FE_Nedelec*, align 8
  %12 = alloca i32, align 4
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.FE_Nedelec*, %class.FE_Nedelec** %11, align 8
  %14 = load i32, i32* @x.201
  %15 = load i32, i32* @y.202
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 0

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %class.FE_Nedelec*, align 8
  %23 = alloca i32, align 4
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %22, align 8
  store i32 %1, i32* %23, align 4
  %24 = load %class.FE_Nedelec*, %class.FE_Nedelec** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK10FE_NedelecILi3EE11update_eachE11UpdateFlags(%class.FE_Nedelec*, i32) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.FE_Nedelec*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.FE_Nedelec*, %class.FE_Nedelec** %3, align 8
  store i32 0, i32* %5, align 4
  %7 = load i32, i32* %4, align 4
  %8 = call i32 @_Zan11UpdateFlagsS_(i32 %7, i32 1)
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %13

; <label>:10:                                     ; preds = %2
  %11 = call i32 @_Zor11UpdateFlagsS_(i32 1, i32 512)
  %12 = call dereferenceable(4) i32* @_ZoRR11UpdateFlagsS_(i32* dereferenceable(4) %5, i32 %11)
  br label %13

; <label>:13:                                     ; preds = %10, %2
  %14 = load i32, i32* @x.203
  %15 = load i32, i32* @y.204
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i32, i32* %4, align 4
  %23 = call i32 @_Zan11UpdateFlagsS_(i32 %22, i32 2)
  %24 = icmp ne i32 %23, 0
  %25 = load i32, i32* @x.203
  %26 = load i32, i32* @y.204
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %33, label %52

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load i32, i32* @x.203
  %35 = load i32, i32* @y.204
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = call i32 @_Zor11UpdateFlagsS_(i32 2, i32 512)
  %43 = call dereferenceable(4) i32* @_ZoRR11UpdateFlagsS_(i32* dereferenceable(4) %5, i32 %42)
  %44 = load i32, i32* @x.203
  %45 = load i32, i32* @y.204
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %52

; <label>:52:                                     ; preds = %originalBBpart24, %originalBBpart2
  %53 = load i32, i32* @x.203
  %54 = load i32, i32* @y.204
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  %61 = load i32, i32* %4, align 4
  %62 = call i32 @_Zan11UpdateFlagsS_(i32 %61, i32 4)
  %63 = icmp ne i32 %62, 0
  %64 = load i32, i32* @x.203
  %65 = load i32, i32* @y.204
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %63, label %72, label %91

; <label>:72:                                     ; preds = %originalBBpart28
  %73 = load i32, i32* @x.203
  %74 = load i32, i32* @y.204
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %72, %originalBB10alteredBB
  %81 = call i32 @_Zor11UpdateFlagsS_(i32 4, i32 512)
  %82 = call dereferenceable(4) i32* @_ZoRR11UpdateFlagsS_(i32* dereferenceable(4) %5, i32 %81)
  %83 = load i32, i32* @x.203
  %84 = load i32, i32* @y.204
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %91

; <label>:91:                                     ; preds = %originalBBpart212, %originalBBpart28
  %92 = load i32, i32* @x.203
  %93 = load i32, i32* @y.204
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %91, %originalBB14alteredBB
  %100 = load i32, i32* %5, align 4
  %101 = load i32, i32* @x.203
  %102 = load i32, i32* @y.204
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i32 %100

originalBBalteredBB:                              ; preds = %originalBB, %13
  %109 = load i32, i32* %4, align 4
  %110 = call i32 @_Zan11UpdateFlagsS_(i32 %109, i32 2)
  %111 = icmp ne i32 %110, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %112 = call i32 @_Zor11UpdateFlagsS_(i32 2, i32 512)
  %113 = call dereferenceable(4) i32* @_ZoRR11UpdateFlagsS_(i32* dereferenceable(4) %5, i32 %112)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  %114 = load i32, i32* %4, align 4
  %115 = call i32 @_Zan11UpdateFlagsS_(i32 %114, i32 4)
  %116 = icmp ne i32 %115, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %72
  %117 = call i32 @_Zor11UpdateFlagsS_(i32 4, i32 512)
  %118 = call dereferenceable(4) i32* @_ZoRR11UpdateFlagsS_(i32* dereferenceable(4) %5, i32 %117)
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %91
  %119 = load i32, i32* %5, align 4
  br label %originalBB14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZoRR11UpdateFlagsS_(i32* dereferenceable(4), i32) #1 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32*, i32** %3, align 8
  %6 = load i32, i32* %5, align 4
  %7 = load i32, i32* %4, align 4
  %8 = call i32 @_Zor11UpdateFlagsS_(i32 %6, i32 %7)
  %9 = load i32*, i32** %3, align 8
  store i32 %8, i32* %9, align 4
  %10 = load i32*, i32** %3, align 8
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN10FE_NedelecILi3EED2Ev(%class.FE_Nedelec*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.207
  %3 = load i32, i32* @y.208
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.FE_Nedelec*, align 8
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %10, align 8
  %11 = load %class.FE_Nedelec*, %class.FE_Nedelec** %10, align 8
  %12 = bitcast %class.FE_Nedelec* %11 to %class.FiniteElement*
  call void @_ZN13FiniteElementILi3EED2Ev(%class.FiniteElement* %12)
  %13 = load i32, i32* @x.207
  %14 = load i32, i32* @y.208
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.FE_Nedelec*, align 8
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %21, align 8
  %22 = load %class.FE_Nedelec*, %class.FE_Nedelec** %21, align 8
  %23 = bitcast %class.FE_Nedelec* %22 to %class.FiniteElement*
  call void @_ZN13FiniteElementILi3EED2Ev(%class.FiniteElement* %23)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN10FE_NedelecILi3EED0Ev(%class.FE_Nedelec*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.FE_Nedelec*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.FE_Nedelec* %0, %class.FE_Nedelec** %2, align 8
  %5 = load %class.FE_Nedelec*, %class.FE_Nedelec** %2, align 8
  invoke void @_ZN10FE_NedelecILi3EED2Ev(%class.FE_Nedelec* %5)
          to label %6 unwind label %24

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.209
  %8 = load i32, i32* @y.210
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = bitcast %class.FE_Nedelec* %5 to i8*
  call void @_ZdlPv(i8* %15) #14
  %16 = load i32, i32* @x.209
  %17 = load i32, i32* @y.210
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = bitcast %class.FE_Nedelec* %5 to i8*
  call void @_ZdlPv(i8* %28) #14
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* @x.209
  %31 = load i32, i32* @y.210
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i8*, i8** %3, align 8
  %39 = load i32, i32* %4, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  %42 = load i32, i32* @x.209
  %43 = load i32, i32* @y.210
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %41

originalBBalteredBB:                              ; preds = %originalBB, %6
  %50 = bitcast %class.FE_Nedelec* %5 to i8*
  call void @_ZdlPv(i8* %50) #14
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %51 = load i8*, i8** %3, align 8
  %52 = load i32, i32* %4, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  br label %originalBB1
}

declare double @_ZNK17FiniteElementBaseILi3EE11shape_valueEjRK5PointILi3EE(%class.FiniteElementBase*, i32, %class.Point* dereferenceable(24)) unnamed_addr #2

declare void @_ZNK17FiniteElementBaseILi3EE10shape_gradEjRK5PointILi3EE(%class.Tensor* sret, %class.FiniteElementBase*, i32, %class.Point* dereferenceable(24)) unnamed_addr #2

declare void @_ZNK17FiniteElementBaseILi3EE15shape_grad_gradEjRK5PointILi3EE(%class.Tensor.33* sret, %class.FiniteElementBase*, i32, %class.Point* dereferenceable(24)) unnamed_addr #2

declare void @_ZNK17FiniteElementBaseILi3EE24get_interpolation_matrixERKS0_R10FullMatrixIdE(%class.FiniteElementBase*, %class.FiniteElementBase* dereferenceable(1160), %class.FullMatrix* dereferenceable(48)) unnamed_addr #2

declare void @_ZNK17FiniteElementBaseILi3EE18unit_support_pointEj(%class.Point* sret, %class.FiniteElementBase*, i32) unnamed_addr #2

declare void @_ZNK17FiniteElementBaseILi3EE23unit_face_support_pointEj(%class.Point.21* sret, %class.FiniteElementBase*, i32) unnamed_addr #2

declare %"class.Mapping<3>::InternalDataBase"* @_ZNK13FiniteElementILi3EE13get_face_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE(%class.FiniteElement*, i32, %class.Mapping* dereferenceable(24), %class.Quadrature.126* dereferenceable(80)) unnamed_addr #2

declare %"class.Mapping<3>::InternalDataBase"* @_ZNK13FiniteElementILi3EE16get_subface_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE(%class.FiniteElement*, i32, %class.Mapping* dereferenceable(24), %class.Quadrature.126* dereferenceable(80)) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionD2Ev(%"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"*, align 8
  store %"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"* %0, %"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"** %2, align 8
  %3 = load %"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"*, %"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"** %2, align 8
  %4 = bitcast %"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"* %3 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %4) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionD0Ev(%"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"*, align 8
  store %"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"* %0, %"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"** %2, align 8
  %3 = load %"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"*, %"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"** %2, align 8
  call void @_ZN10FE_NedelecILi3EE27ExcNotUsefulInThisDimensionD2Ev(%"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"* %3) #12
  %4 = bitcast %"class.FE_Nedelec<3>::ExcNotUsefulInThisDimension"* %3 to i8*
  call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNK13ExceptionBase4whatEv(%class.ExceptionBase*) unnamed_addr #7

declare void @_ZNK13ExceptionBase9PrintInfoERSo(%class.ExceptionBase*, %"class.std::basic_ostream"* dereferenceable(272)) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN17FiniteElementBaseILi3EE16InternalDataBaseC2Ev(%"class.FiniteElementBase<3>::InternalDataBase"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.215
  %3 = load i32, i32* @y.216
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.FiniteElementBase<3>::InternalDataBase"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.FiniteElementBase<3>::InternalDataBase"* %0, %"class.FiniteElementBase<3>::InternalDataBase"** %10, align 8
  %13 = load %"class.FiniteElementBase<3>::InternalDataBase"*, %"class.FiniteElementBase<3>::InternalDataBase"** %10, align 8
  %14 = bitcast %"class.FiniteElementBase<3>::InternalDataBase"* %13 to %"class.Mapping<3>::InternalDataBase"*
  call void @_ZN7MappingILi3EE16InternalDataBaseC2Ev(%"class.Mapping<3>::InternalDataBase"* %14)
  %15 = bitcast %"class.FiniteElementBase<3>::InternalDataBase"* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN17FiniteElementBaseILi3EE16InternalDataBaseE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.FiniteElementBase<3>::InternalDataBase", %"class.FiniteElementBase<3>::InternalDataBase"* %13, i32 0, i32 1
  %17 = load i32, i32* @x.215
  %18 = load i32, i32* @y.216
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIP8FEValuesILi3EESaIS2_EEC2Ev(%"class.std::vector.45"* %16)
          to label %25 unwind label %26

; <label>:25:                                     ; preds = %originalBBpart2
  ret void

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* @x.215
  %28 = load i32, i32* @y.216
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  store i8* %36, i8** %11, align 8
  %37 = extractvalue { i8*, i32 } %35, 1
  store i32 %37, i32* %12, align 4
  %38 = bitcast %"class.FiniteElementBase<3>::InternalDataBase"* %13 to %"class.Mapping<3>::InternalDataBase"*
  %39 = load i32, i32* @x.215
  %40 = load i32, i32* @y.216
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN7MappingILi3EE16InternalDataBaseD2Ev(%"class.Mapping<3>::InternalDataBase"* %38)
          to label %47 unwind label %69

; <label>:47:                                     ; preds = %originalBBpart24
  br label %48

; <label>:48:                                     ; preds = %47
  %49 = load i32, i32* @x.215
  %50 = load i32, i32* @y.216
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i8*, i8** %11, align 8
  %58 = load i32, i32* %12, align 4
  %59 = insertvalue { i8*, i32 } undef, i8* %57, 0
  %60 = insertvalue { i8*, i32 } %59, i32 %58, 1
  %61 = load i32, i32* @x.215
  %62 = load i32, i32* @y.216
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %60

; <label>:69:                                     ; preds = %originalBBpart24
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  call void @__clang_call_terminate(i8* %71) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %72 = alloca %"class.FiniteElementBase<3>::InternalDataBase"*, align 8
  %73 = alloca i8*
  %74 = alloca i32
  store %"class.FiniteElementBase<3>::InternalDataBase"* %0, %"class.FiniteElementBase<3>::InternalDataBase"** %72, align 8
  %75 = load %"class.FiniteElementBase<3>::InternalDataBase"*, %"class.FiniteElementBase<3>::InternalDataBase"** %72, align 8
  %76 = bitcast %"class.FiniteElementBase<3>::InternalDataBase"* %75 to %"class.Mapping<3>::InternalDataBase"*
  call void @_ZN7MappingILi3EE16InternalDataBaseC2Ev(%"class.Mapping<3>::InternalDataBase"* %76)
  %77 = bitcast %"class.FiniteElementBase<3>::InternalDataBase"* %75 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN17FiniteElementBaseILi3EE16InternalDataBaseE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %77, align 8
  %78 = getelementptr inbounds %"class.FiniteElementBase<3>::InternalDataBase", %"class.FiniteElementBase<3>::InternalDataBase"* %75, i32 0, i32 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %79 = landingpad { i8*, i32 }
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %11, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %12, align 4
  %82 = bitcast %"class.FiniteElementBase<3>::InternalDataBase"* %13 to %"class.Mapping<3>::InternalDataBase"*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %83 = load i8*, i8** %11, align 8
  %84 = load i32, i32* %12, align 4
  %85 = insertvalue { i8*, i32 } undef, i8* %83, 0
  %86 = insertvalue { i8*, i32 } %85, i32 %84, 1
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E6TensorILi1ELi3EEEC2Ev(%class.Table.50*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.217
  %3 = load i32, i32* @y.218
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Table.50*, align 8
  store %class.Table.50* %0, %class.Table.50** %10, align 8
  %11 = load %class.Table.50*, %class.Table.50** %10, align 8
  %12 = bitcast %class.Table.50* %11 to %class.TableBase.51*
  call void @_ZN9TableBaseILi2E6TensorILi1ELi3EEEC2Ev(%class.TableBase.51* %12)
  %13 = bitcast %class.Table.50* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV5TableILi2E6TensorILi1ELi3EEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = load i32, i32* @x.217
  %15 = load i32, i32* @y.218
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.Table.50*, align 8
  store %class.Table.50* %0, %class.Table.50** %22, align 8
  %23 = load %class.Table.50*, %class.Table.50** %22, align 8
  %24 = bitcast %class.Table.50* %23 to %class.TableBase.51*
  call void @_ZN9TableBaseILi2E6TensorILi1ELi3EEEC2Ev(%class.TableBase.51* %24)
  %25 = bitcast %class.Table.50* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV5TableILi2E6TensorILi1ELi3EEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %25, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E6TensorILi2ELi3EEEC2Ev(%class.Table.54*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Table.54*, align 8
  store %class.Table.54* %0, %class.Table.54** %2, align 8
  %3 = load %class.Table.54*, %class.Table.54** %2, align 8
  %4 = bitcast %class.Table.54* %3 to %class.TableBase.55*
  call void @_ZN9TableBaseILi2E6TensorILi2ELi3EEEC2Ev(%class.TableBase.55* %4)
  %5 = bitcast %class.Table.54* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV5TableILi2E6TensorILi2ELi3EEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E6TensorILi1ELi3EEED2Ev(%class.Table.50*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.221
  %3 = load i32, i32* @y.222
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Table.50*, align 8
  store %class.Table.50* %0, %class.Table.50** %10, align 8
  %11 = load %class.Table.50*, %class.Table.50** %10, align 8
  %12 = bitcast %class.Table.50* %11 to %class.TableBase.51*
  call void @_ZN9TableBaseILi2E6TensorILi1ELi3EEED2Ev(%class.TableBase.51* %12)
  %13 = load i32, i32* @x.221
  %14 = load i32, i32* @y.222
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.Table.50*, align 8
  store %class.Table.50* %0, %class.Table.50** %21, align 8
  %22 = load %class.Table.50*, %class.Table.50** %21, align 8
  %23 = bitcast %class.Table.50* %22 to %class.TableBase.51*
  call void @_ZN9TableBaseILi2E6TensorILi1ELi3EEED2Ev(%class.TableBase.51* %23)
  br label %originalBB
}

declare void @_ZN17FiniteElementBaseILi3EE16InternalDataBaseD2Ev(%"class.FiniteElementBase<3>::InternalDataBase"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN10FE_NedelecILi3EE12InternalDataD2Ev(%"class.FE_Nedelec<3>::InternalData"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.FE_Nedelec<3>::InternalData"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.FE_Nedelec<3>::InternalData"* %0, %"class.FE_Nedelec<3>::InternalData"** %2, align 8
  %5 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %2, align 8
  %6 = bitcast %"class.FE_Nedelec<3>::InternalData"* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10FE_NedelecILi3EE12InternalDataE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %5, i32 0, i32 2
  invoke void @_ZN5TableILi2E6TensorILi2ELi3EEED2Ev(%class.Table.54* %7)
          to label %8 unwind label %28

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %5, i32 0, i32 1
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEED2Ev(%class.Table.50* %9)
          to label %10 unwind label %33

; <label>:10:                                     ; preds = %8
  %11 = load i32, i32* @x.223
  %12 = load i32, i32* @y.224
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = bitcast %"class.FE_Nedelec<3>::InternalData"* %5 to %"class.FiniteElementBase<3>::InternalDataBase"*
  call void @_ZN17FiniteElementBaseILi3EE16InternalDataBaseD2Ev(%"class.FiniteElementBase<3>::InternalDataBase"* %19)
  %20 = load i32, i32* @x.223
  %21 = load i32, i32* @y.224
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:28:                                     ; preds = %1
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %3, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %4, align 4
  %32 = getelementptr inbounds %"class.FE_Nedelec<3>::InternalData", %"class.FE_Nedelec<3>::InternalData"* %5, i32 0, i32 1
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEED2Ev(%class.Table.50* %32)
          to label %53 unwind label %94

; <label>:33:                                     ; preds = %8
  %34 = load i32, i32* @x.223
  %35 = load i32, i32* @y.224
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %3, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %4, align 4
  %45 = load i32, i32* @x.223
  %46 = load i32, i32* @y.224
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %54

; <label>:53:                                     ; preds = %28
  br label %54

; <label>:54:                                     ; preds = %53, %originalBBpart24
  %55 = load i32, i32* @x.223
  %56 = load i32, i32* @y.224
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %54, %originalBB6alteredBB
  %63 = bitcast %"class.FE_Nedelec<3>::InternalData"* %5 to %"class.FiniteElementBase<3>::InternalDataBase"*
  %64 = load i32, i32* @x.223
  %65 = load i32, i32* @y.224
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZN17FiniteElementBaseILi3EE16InternalDataBaseD2Ev(%"class.FiniteElementBase<3>::InternalDataBase"* %63)
          to label %72 unwind label %94

; <label>:72:                                     ; preds = %originalBBpart28
  %73 = load i32, i32* @x.223
  %74 = load i32, i32* @y.224
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %72, %originalBB10alteredBB
  %81 = load i32, i32* @x.223
  %82 = load i32, i32* @y.224
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %89

; <label>:89:                                     ; preds = %originalBBpart212
  %90 = load i8*, i8** %3, align 8
  %91 = load i32, i32* %4, align 4
  %92 = insertvalue { i8*, i32 } undef, i8* %90, 0
  %93 = insertvalue { i8*, i32 } %92, i32 %91, 1
  resume { i8*, i32 } %93

; <label>:94:                                     ; preds = %originalBBpart28, %28
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  call void @__clang_call_terminate(i8* %96) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %10
  %97 = bitcast %"class.FE_Nedelec<3>::InternalData"* %5 to %"class.FiniteElementBase<3>::InternalDataBase"*
  call void @_ZN17FiniteElementBaseILi3EE16InternalDataBaseD2Ev(%"class.FiniteElementBase<3>::InternalDataBase"* %97)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %3, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %4, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  %101 = bitcast %"class.FE_Nedelec<3>::InternalData"* %5 to %"class.FiniteElementBase<3>::InternalDataBase"*
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %72
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN10FE_NedelecILi3EE12InternalDataD0Ev(%"class.FE_Nedelec<3>::InternalData"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.FE_Nedelec<3>::InternalData"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.FE_Nedelec<3>::InternalData"* %0, %"class.FE_Nedelec<3>::InternalData"** %2, align 8
  %5 = load %"class.FE_Nedelec<3>::InternalData"*, %"class.FE_Nedelec<3>::InternalData"** %2, align 8
  invoke void @_ZN10FE_NedelecILi3EE12InternalDataD2Ev(%"class.FE_Nedelec<3>::InternalData"* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %"class.FE_Nedelec<3>::InternalData"* %5 to i8*
  call void @_ZdlPv(i8* %7) #14
  ret void

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.225
  %10 = load i32, i32* @y.226
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %3, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %4, align 4
  %20 = bitcast %"class.FE_Nedelec<3>::InternalData"* %5 to i8*
  call void @_ZdlPv(i8* %20) #14
  %21 = load i32, i32* @x.225
  %22 = load i32, i32* @y.226
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i32, i32* @x.225
  %31 = load i32, i32* @y.226
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i8*, i8** %3, align 8
  %39 = load i32, i32* %4, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  %42 = load i32, i32* @x.225
  %43 = load i32, i32* @y.226
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %41

originalBBalteredBB:                              ; preds = %originalBB, %8
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %3, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %4, align 4
  %53 = bitcast %"class.FE_Nedelec<3>::InternalData"* %5 to i8*
  call void @_ZdlPv(i8* %53) #14
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %54 = load i8*, i8** %3, align 8
  %55 = load i32, i32* %4, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN7MappingILi3EE16InternalDataBase16clear_first_cellEv(%"class.Mapping<3>::InternalDataBase"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  store %"class.Mapping<3>::InternalDataBase"* %0, %"class.Mapping<3>::InternalDataBase"** %2, align 8
  %3 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %2, align 8
  %4 = getelementptr inbounds %"class.Mapping<3>::InternalDataBase", %"class.Mapping<3>::InternalDataBase"* %3, i32 0, i32 4
  store i8 0, i8* %4, align 4
  ret void
}

declare i32 @_ZNK7MappingILi3EE16InternalDataBase18memory_consumptionEv(%"class.Mapping<3>::InternalDataBase"*) unnamed_addr #2

declare void @_ZN7MappingILi3EE16InternalDataBaseC2Ev(%"class.Mapping<3>::InternalDataBase"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIP8FEValuesILi3EESaIS2_EEC2Ev(%"class.std::vector.45"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.229
  %3 = load i32, i32* @y.230
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.45"*, align 8
  store %"class.std::vector.45"* %0, %"class.std::vector.45"** %10, align 8
  %11 = load %"class.std::vector.45"*, %"class.std::vector.45"** %10, align 8
  %12 = bitcast %"class.std::vector.45"* %11 to %"struct.std::_Vector_base.46"*
  call void @_ZNSt12_Vector_baseIP8FEValuesILi3EESaIS2_EEC2Ev(%"struct.std::_Vector_base.46"* %12)
  %13 = load i32, i32* @x.229
  %14 = load i32, i32* @y.230
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::vector.45"*, align 8
  store %"class.std::vector.45"* %0, %"class.std::vector.45"** %21, align 8
  %22 = load %"class.std::vector.45"*, %"class.std::vector.45"** %21, align 8
  %23 = bitcast %"class.std::vector.45"* %22 to %"struct.std::_Vector_base.46"*
  call void @_ZNSt12_Vector_baseIP8FEValuesILi3EESaIS2_EEC2Ev(%"struct.std::_Vector_base.46"* %23)
  br label %originalBB
}

declare void @_ZN7MappingILi3EE16InternalDataBaseD2Ev(%"class.Mapping<3>::InternalDataBase"*) unnamed_addr #2

declare void @_ZN17FiniteElementBaseILi3EE16InternalDataBaseD1Ev(%"class.FiniteElementBase<3>::InternalDataBase"*) unnamed_addr #2

declare void @_ZN17FiniteElementBaseILi3EE16InternalDataBaseD0Ev(%"class.FiniteElementBase<3>::InternalDataBase"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIP8FEValuesILi3EESaIS2_EEC2Ev(%"struct.std::_Vector_base.46"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.231
  %3 = load i32, i32* @y.232
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.46"*, align 8
  store %"struct.std::_Vector_base.46"* %0, %"struct.std::_Vector_base.46"** %10, align 8
  %11 = load %"struct.std::_Vector_base.46"*, %"struct.std::_Vector_base.46"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIP8FEValuesILi3EESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl"* %12)
  %13 = load i32, i32* @x.231
  %14 = load i32, i32* @y.232
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Vector_base.46"*, align 8
  store %"struct.std::_Vector_base.46"* %0, %"struct.std::_Vector_base.46"** %21, align 8
  %22 = load %"struct.std::_Vector_base.46"*, %"struct.std::_Vector_base.46"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %22, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIP8FEValuesILi3EESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl"* %23)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIP8FEValuesILi3EESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl"* %0, %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl"** %2, align 8
  %5 = load %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl"*, %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl"* %5 to %"class.std::allocator.47"*
  call void @_ZNSaIP8FEValuesILi3EEEC2Ev(%"class.std::allocator.47"* %6) #12
  %7 = bitcast %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseIP8FEValuesILi3EESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data"* %7)
          to label %8 unwind label %25

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.233
  %10 = load i32, i32* @y.234
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = load i32, i32* @x.233
  %18 = load i32, i32* @y.234
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:25:                                     ; preds = %1
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %3, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %4, align 4
  %29 = bitcast %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl"* %5 to %"class.std::allocator.47"*
  call void @_ZNSaIP8FEValuesILi3EEED2Ev(%"class.std::allocator.47"* %29) #12
  br label %30

; <label>:30:                                     ; preds = %25
  %31 = load i8*, i8** %3, align 8
  %32 = load i32, i32* %4, align 4
  %33 = insertvalue { i8*, i32 } undef, i8* %31, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

originalBBalteredBB:                              ; preds = %originalBB, %8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIP8FEValuesILi3EEEC2Ev(%"class.std::allocator.47"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.47"*, align 8
  store %"class.std::allocator.47"* %0, %"class.std::allocator.47"** %2, align 8
  %3 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %2, align 8
  %4 = bitcast %"class.std::allocator.47"* %3 to %"class.__gnu_cxx::new_allocator.48"*
  call void @_ZN9__gnu_cxx13new_allocatorIP8FEValuesILi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.48"* %4) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIP8FEValuesILi3EESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data"*, %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data"* %3, i32 0, i32 0
  store %class.FEValues** null, %class.FEValues*** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data"* %3, i32 0, i32 1
  store %class.FEValues** null, %class.FEValues*** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<FEValues<3> *, std::allocator<FEValues<3> *> >::_Vector_impl_data"* %3, i32 0, i32 2
  store %class.FEValues** null, %class.FEValues*** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIP8FEValuesILi3EEED2Ev(%"class.std::allocator.47"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.239
  %3 = load i32, i32* @y.240
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.47"*, align 8
  store %"class.std::allocator.47"* %0, %"class.std::allocator.47"** %10, align 8
  %11 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %10, align 8
  %12 = bitcast %"class.std::allocator.47"* %11 to %"class.__gnu_cxx::new_allocator.48"*
  call void @_ZN9__gnu_cxx13new_allocatorIP8FEValuesILi3EEED2Ev(%"class.__gnu_cxx::new_allocator.48"* %12) #12
  %13 = load i32, i32* @x.239
  %14 = load i32, i32* @y.240
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.47"*, align 8
  store %"class.std::allocator.47"* %0, %"class.std::allocator.47"** %21, align 8
  %22 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %21, align 8
  %23 = bitcast %"class.std::allocator.47"* %22 to %"class.__gnu_cxx::new_allocator.48"*
  call void @_ZN9__gnu_cxx13new_allocatorIP8FEValuesILi3EEED2Ev(%"class.__gnu_cxx::new_allocator.48"* %23) #12
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIP8FEValuesILi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.48"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %0, %"class.__gnu_cxx::new_allocator.48"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIP8FEValuesILi3EEED2Ev(%"class.__gnu_cxx::new_allocator.48"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.243
  %3 = load i32, i32* @y.244
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %0, %"class.__gnu_cxx::new_allocator.48"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %10, align 8
  %12 = load i32, i32* @x.243
  %13 = load i32, i32* @y.244
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %0, %"class.__gnu_cxx::new_allocator.48"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E6TensorILi1ELi3EEEC2Ev(%class.TableBase.51*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.TableBase.51*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.TableBase.51* %0, %class.TableBase.51** %2, align 8
  %5 = load %class.TableBase.51*, %class.TableBase.51** %2, align 8
  %6 = bitcast %class.TableBase.51* %5 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %6)
  %7 = bitcast %class.TableBase.51* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2E6TensorILi1ELi3EEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %5, i32 0, i32 1
  store %class.Tensor* null, %class.Tensor** %8, align 8
  %9 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %5, i32 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %5, i32 0, i32 3
  invoke void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %1
  ret void

; <label>:12:                                     ; preds = %1
  %13 = load i32, i32* @x.245
  %14 = load i32, i32* @y.246
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %3, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %4, align 4
  %24 = bitcast %class.TableBase.51* %5 to %class.Subscriptor*
  %25 = load i32, i32* @x.245
  %26 = load i32, i32* @y.246
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %24)
          to label %33 unwind label %55

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load i32, i32* @x.245
  %35 = load i32, i32* @y.246
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = load i32, i32* @x.245
  %43 = load i32, i32* @y.246
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %50

; <label>:50:                                     ; preds = %originalBBpart24
  %51 = load i8*, i8** %3, align 8
  %52 = load i32, i32* %4, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  resume { i8*, i32 } %54

; <label>:55:                                     ; preds = %originalBBpart2
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  call void @__clang_call_terminate(i8* %57) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %12
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %3, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %4, align 4
  %61 = bitcast %class.TableBase.51* %5 to %class.Subscriptor*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E6TensorILi1ELi3EEED0Ev(%class.Table.50*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Table.50*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.Table.50* %0, %class.Table.50** %2, align 8
  %5 = load %class.Table.50*, %class.Table.50** %2, align 8
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEED2Ev(%class.Table.50* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %class.Table.50* %5 to i8*
  call void @_ZdlPv(i8* %7) #14
  ret void

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.247
  %10 = load i32, i32* @y.248
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %3, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %4, align 4
  %20 = bitcast %class.Table.50* %5 to i8*
  call void @_ZdlPv(i8* %20) #14
  %21 = load i32, i32* @x.247
  %22 = load i32, i32* @y.248
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

originalBBalteredBB:                              ; preds = %originalBB, %8
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  %37 = bitcast %class.Table.50* %5 to i8*
  call void @_ZdlPv(i8* %37) #14
  br label %originalBB
}

declare void @_ZN11SubscriptorC2Ev(%class.Subscriptor*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.TableIndices*, align 8
  store %class.TableIndices* %0, %class.TableIndices** %2, align 8
  %3 = load %class.TableIndices*, %class.TableIndices** %2, align 8
  %4 = bitcast %class.TableIndices* %3 to %class.TableIndicesBase*
  %5 = bitcast %class.TableIndices* %3 to %class.TableIndicesBase*
  %6 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %5, i32 0, i32 0
  %7 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 1
  store i32 0, i32* %7, align 4
  %8 = bitcast %class.TableIndices* %3 to %class.TableIndicesBase*
  %9 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %8, i32 0, i32 0
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0
  store i32 0, i32* %10, align 4
  ret void
}

declare void @_ZN11SubscriptorD2Ev(%class.Subscriptor*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E6TensorILi1ELi3EEED2Ev(%class.TableBase.51*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.TableBase.51*, align 8
  store %class.TableBase.51* %0, %class.TableBase.51** %2, align 8
  %3 = load %class.TableBase.51*, %class.TableBase.51** %2, align 8
  %4 = bitcast %class.TableBase.51* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2E6TensorILi1ELi3EEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %3, i32 0, i32 1
  %6 = load %class.Tensor*, %class.Tensor** %5, align 8
  %7 = icmp ne %class.Tensor* %6, null
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %3, i32 0, i32 1
  %10 = load %class.Tensor*, %class.Tensor** %9, align 8
  %11 = icmp eq %class.Tensor* %10, null
  br i1 %11, label %14, label %12

; <label>:12:                                     ; preds = %8
  %13 = bitcast %class.Tensor* %10 to i8*
  call void @_ZdaPv(i8* %13) #14
  br label %14

; <label>:14:                                     ; preds = %12, %8
  br label %15

; <label>:15:                                     ; preds = %14, %1
  %16 = bitcast %class.TableBase.51* %3 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E6TensorILi1ELi3EEED0Ev(%class.TableBase.51*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.TableBase.51*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.TableBase.51* %0, %class.TableBase.51** %2, align 8
  %5 = load %class.TableBase.51*, %class.TableBase.51** %2, align 8
  invoke void @_ZN9TableBaseILi2E6TensorILi1ELi3EEED2Ev(%class.TableBase.51* %5)
          to label %6 unwind label %24

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.253
  %8 = load i32, i32* @y.254
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = bitcast %class.TableBase.51* %5 to i8*
  call void @_ZdlPv(i8* %15) #14
  %16 = load i32, i32* @x.253
  %17 = load i32, i32* @y.254
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.253
  %26 = load i32, i32* @y.254
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %3, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %4, align 4
  %36 = bitcast %class.TableBase.51* %5 to i8*
  call void @_ZdlPv(i8* %36) #14
  %37 = load i32, i32* @x.253
  %38 = load i32, i32* @y.254
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %45

; <label>:45:                                     ; preds = %originalBBpart24
  %46 = load i8*, i8** %3, align 8
  %47 = load i32, i32* %4, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

originalBBalteredBB:                              ; preds = %originalBB, %6
  %50 = bitcast %class.TableBase.51* %5 to i8*
  call void @_ZdlPv(i8* %50) #14
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  %54 = bitcast %class.TableBase.51* %5 to i8*
  call void @_ZdlPv(i8* %54) #14
  br label %originalBB1
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) #5

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E6TensorILi2ELi3EEEC2Ev(%class.TableBase.55*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.TableBase.55*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.TableBase.55* %0, %class.TableBase.55** %2, align 8
  %5 = load %class.TableBase.55*, %class.TableBase.55** %2, align 8
  %6 = bitcast %class.TableBase.55* %5 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %6)
  %7 = bitcast %class.TableBase.55* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2E6TensorILi2ELi3EEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %5, i32 0, i32 1
  store %class.Tensor.33* null, %class.Tensor.33** %8, align 8
  %9 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %5, i32 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %5, i32 0, i32 3
  invoke void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %10)
          to label %11 unwind label %28

; <label>:11:                                     ; preds = %1
  %12 = load i32, i32* @x.255
  %13 = load i32, i32* @y.256
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* @x.255
  %21 = load i32, i32* @y.256
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:28:                                     ; preds = %1
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %3, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %4, align 4
  %32 = bitcast %class.TableBase.55* %5 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %32)
          to label %33 unwind label %55

; <label>:33:                                     ; preds = %28
  br label %34

; <label>:34:                                     ; preds = %33
  %35 = load i32, i32* @x.255
  %36 = load i32, i32* @y.256
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load i8*, i8** %3, align 8
  %44 = load i32, i32* %4, align 4
  %45 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  %47 = load i32, i32* @x.255
  %48 = load i32, i32* @y.256
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %46

; <label>:55:                                     ; preds = %28
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  call void @__clang_call_terminate(i8* %57) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %11
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %58 = load i8*, i8** %3, align 8
  %59 = load i32, i32* %4, align 4
  %60 = insertvalue { i8*, i32 } undef, i8* %58, 0
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E6TensorILi2ELi3EEED2Ev(%class.Table.54*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Table.54*, align 8
  store %class.Table.54* %0, %class.Table.54** %2, align 8
  %3 = load %class.Table.54*, %class.Table.54** %2, align 8
  %4 = bitcast %class.Table.54* %3 to %class.TableBase.55*
  call void @_ZN9TableBaseILi2E6TensorILi2ELi3EEED2Ev(%class.TableBase.55* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E6TensorILi2ELi3EEED0Ev(%class.Table.54*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.259
  %3 = load i32, i32* @y.260
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Table.54*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.Table.54* %0, %class.Table.54** %10, align 8
  %13 = load %class.Table.54*, %class.Table.54** %10, align 8
  %14 = load i32, i32* @x.259
  %15 = load i32, i32* @y.260
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN5TableILi2E6TensorILi2ELi3EEED2Ev(%class.Table.54* %13)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %originalBBpart2
  %23 = bitcast %class.Table.54* %13 to i8*
  call void @_ZdlPv(i8* %23) #14
  ret void

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %11, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %12, align 4
  %28 = bitcast %class.Table.54* %13 to i8*
  call void @_ZdlPv(i8* %28) #14
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* @x.259
  %31 = load i32, i32* @y.260
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i8*, i8** %11, align 8
  %39 = load i32, i32* %12, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  %42 = load i32, i32* @x.259
  %43 = load i32, i32* @y.260
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %41

originalBBalteredBB:                              ; preds = %originalBB, %1
  %50 = alloca %class.Table.54*, align 8
  %51 = alloca i8*
  %52 = alloca i32
  store %class.Table.54* %0, %class.Table.54** %50, align 8
  %53 = load %class.Table.54*, %class.Table.54** %50, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %54 = load i8*, i8** %11, align 8
  %55 = load i32, i32* %12, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E6TensorILi2ELi3EEED2Ev(%class.TableBase.55*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.261
  %3 = load i32, i32* @y.262
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase.55*, align 8
  store %class.TableBase.55* %0, %class.TableBase.55** %10, align 8
  %11 = load %class.TableBase.55*, %class.TableBase.55** %10, align 8
  %12 = bitcast %class.TableBase.55* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2E6TensorILi2ELi3EEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %11, i32 0, i32 1
  %14 = load %class.Tensor.33*, %class.Tensor.33** %13, align 8
  %15 = icmp ne %class.Tensor.33* %14, null
  %16 = load i32, i32* @x.261
  %17 = load i32, i32* @y.262
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %63

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.261
  %26 = load i32, i32* @y.262
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %11, i32 0, i32 1
  %34 = load %class.Tensor.33*, %class.Tensor.33** %33, align 8
  %35 = icmp eq %class.Tensor.33* %34, null
  %36 = load i32, i32* @x.261
  %37 = load i32, i32* @y.262
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %35, label %46, label %44

; <label>:44:                                     ; preds = %originalBBpart24
  %45 = bitcast %class.Tensor.33* %34 to i8*
  call void @_ZdaPv(i8* %45) #14
  br label %46

; <label>:46:                                     ; preds = %44, %originalBBpart24
  %47 = load i32, i32* @x.261
  %48 = load i32, i32* @y.262
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %46, %originalBB6alteredBB
  %55 = load i32, i32* @x.261
  %56 = load i32, i32* @y.262
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %63

; <label>:63:                                     ; preds = %originalBBpart28, %originalBBpart2
  %64 = load i32, i32* @x.261
  %65 = load i32, i32* @y.262
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %63, %originalBB10alteredBB
  %72 = bitcast %class.TableBase.55* %11 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %72)
  %73 = load i32, i32* @x.261
  %74 = load i32, i32* @y.262
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %81 = alloca %class.TableBase.55*, align 8
  store %class.TableBase.55* %0, %class.TableBase.55** %81, align 8
  %82 = load %class.TableBase.55*, %class.TableBase.55** %81, align 8
  %83 = bitcast %class.TableBase.55* %82 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2E6TensorILi2ELi3EEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %83, align 8
  %84 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %82, i32 0, i32 1
  %85 = load %class.Tensor.33*, %class.Tensor.33** %84, align 8
  %86 = icmp ne %class.Tensor.33* %85, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %87 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %11, i32 0, i32 1
  %88 = load %class.Tensor.33*, %class.Tensor.33** %87, align 8
  %89 = icmp eq %class.Tensor.33* %88, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %46
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %63
  %90 = bitcast %class.TableBase.55* %11 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %90)
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E6TensorILi2ELi3EEED0Ev(%class.TableBase.55*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.TableBase.55*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.TableBase.55* %0, %class.TableBase.55** %2, align 8
  %5 = load %class.TableBase.55*, %class.TableBase.55** %2, align 8
  invoke void @_ZN9TableBaseILi2E6TensorILi2ELi3EEED2Ev(%class.TableBase.55* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %class.TableBase.55* %5 to i8*
  call void @_ZdlPv(i8* %7) #14
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  %12 = bitcast %class.TableBase.55* %5 to i8*
  call void @_ZdlPv(i8* %12) #14
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i8*, i8** %3, align 8
  %15 = load i32, i32* %4, align 4
  %16 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.33*, i32) #1 comdat align 2 {
  %3 = alloca %class.Tensor.33*, align 8
  %4 = alloca i32, align 4
  store %class.Tensor.33* %0, %class.Tensor.33** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Tensor.33*, %class.Tensor.33** %3, align 8
  %6 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [3 x %class.Tensor], [3 x %class.Tensor]* %6, i64 0, i64 %8
  ret %class.Tensor* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor*, i32) #1 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Tensor*, %class.Tensor** %3, align 8
  %6 = getelementptr inbounds %class.Tensor, %class.Tensor* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [3 x double], [3 x double]* %6, i64 0, i64 %8
  %10 = load double, double* %9, align 8
  ret double %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5PointILi3EEC2Eddd(%class.Point*, double, double, double) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.Point*, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  store %class.Point* %0, %class.Point** %5, align 8
  store double %1, double* %6, align 8
  store double %2, double* %7, align 8
  store double %3, double* %8, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = bitcast %class.Point* %9 to %class.Tensor*
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %10, i1 zeroext true)
  %11 = load double, double* %6, align 8
  %12 = bitcast %class.Point* %9 to %class.Tensor*
  %13 = getelementptr inbounds %class.Tensor, %class.Tensor* %12, i32 0, i32 0
  %14 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 0, i64 0
  store double %11, double* %14, align 8
  %15 = load double, double* %7, align 8
  %16 = bitcast %class.Point* %9 to %class.Tensor*
  %17 = getelementptr inbounds %class.Tensor, %class.Tensor* %16, i32 0, i32 0
  %18 = getelementptr inbounds [3 x double], [3 x double]* %17, i64 0, i64 1
  store double %15, double* %18, align 8
  %19 = load double, double* %8, align 8
  %20 = bitcast %class.Point* %9 to %class.Tensor*
  %21 = getelementptr inbounds %class.Tensor, %class.Tensor* %20, i32 0, i32 0
  %22 = getelementptr inbounds [3 x double], [3 x double]* %21, i64 0, i64 2
  store double %19, double* %22, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5PointILi3EEC2ERKS0_(%class.Point*, %class.Point* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Point*, align 8
  %4 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %3, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  %5 = load %class.Point*, %class.Point** %3, align 8
  %6 = bitcast %class.Point* %5 to %class.Tensor*
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = bitcast %class.Point* %7 to %class.Tensor*
  call void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor* %6, %class.Tensor* dereferenceable(24) %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5PointILi2EEC2Edd(%class.Point.21*, double, double) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.Point.21*, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  store %class.Point.21* %0, %class.Point.21** %4, align 8
  store double %1, double* %5, align 8
  store double %2, double* %6, align 8
  %7 = load %class.Point.21*, %class.Point.21** %4, align 8
  %8 = bitcast %class.Point.21* %7 to %class.Tensor.22*
  call void @_ZN6TensorILi1ELi2EEC2Eb(%class.Tensor.22* %8, i1 zeroext true)
  %9 = load double, double* %5, align 8
  %10 = bitcast %class.Point.21* %7 to %class.Tensor.22*
  %11 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %10, i32 0, i32 0
  %12 = getelementptr inbounds [2 x double], [2 x double]* %11, i64 0, i64 0
  store double %9, double* %12, align 8
  %13 = load double, double* %6, align 8
  %14 = bitcast %class.Point.21* %7 to %class.Tensor.22*
  %15 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %14, i32 0, i32 0
  %16 = getelementptr inbounds [2 x double], [2 x double]* %15, i64 0, i64 1
  store double %13, double* %16, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5PointILi2EEC2ERKS0_(%class.Point.21*, %class.Point.21* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Point.21*, align 8
  %4 = alloca %class.Point.21*, align 8
  store %class.Point.21* %0, %class.Point.21** %3, align 8
  store %class.Point.21* %1, %class.Point.21** %4, align 8
  %5 = load %class.Point.21*, %class.Point.21** %3, align 8
  %6 = bitcast %class.Point.21* %5 to %class.Tensor.22*
  %7 = load %class.Point.21*, %class.Point.21** %4, align 8
  %8 = bitcast %class.Point.21* %7 to %class.Tensor.22*
  call void @_ZN6TensorILi1ELi2EEC2ERKS0_(%class.Tensor.22* %6, %class.Tensor.22* dereferenceable(16) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi1ELi2EEC2Eb(%class.Tensor.22*, i1 zeroext) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.Tensor.22*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  store %class.Tensor.22* %0, %class.Tensor.22** %3, align 8
  %6 = zext i1 %1 to i8
  store i8 %6, i8* %4, align 1
  %7 = load %class.Tensor.22*, %class.Tensor.22** %3, align 8
  %8 = load i8, i8* %4, align 1
  %9 = trunc i8 %8 to i1
  br i1 %9, label %10, label %39

; <label>:10:                                     ; preds = %2
  %11 = load i32, i32* @x.277
  %12 = load i32, i32* @y.278
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  store i32 0, i32* %5, align 4
  %19 = load i32, i32* @x.277
  %20 = load i32, i32* @y.278
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %35, %originalBBpart2
  %28 = load i32, i32* %5, align 4
  %29 = icmp ne i32 %28, 2
  br i1 %29, label %30, label %38

; <label>:30:                                     ; preds = %27
  %31 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %7, i32 0, i32 0
  %32 = load i32, i32* %5, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds [2 x double], [2 x double]* %31, i64 0, i64 %33
  store double 0.000000e+00, double* %34, align 8
  br label %35

; <label>:35:                                     ; preds = %30
  %36 = load i32, i32* %5, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %5, align 4
  br label %27

; <label>:38:                                     ; preds = %27
  br label %39

; <label>:39:                                     ; preds = %38, %2
  %40 = load i32, i32* @x.277
  %41 = load i32, i32* @y.278
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = load i32, i32* @x.277
  %49 = load i32, i32* @y.278
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  store i32 0, i32* %5, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi1ELi2EEC2ERKS0_(%class.Tensor.22*, %class.Tensor.22* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.Tensor.22*, align 8
  %4 = alloca %class.Tensor.22*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor.22* %0, %class.Tensor.22** %3, align 8
  store %class.Tensor.22* %1, %class.Tensor.22** %4, align 8
  %6 = load %class.Tensor.22*, %class.Tensor.22** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %37, %2
  %8 = load i32, i32* %5, align 4
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %10, label %40

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.279
  %12 = load i32, i32* @y.280
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load %class.Tensor.22*, %class.Tensor.22** %4, align 8
  %20 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %19, i32 0, i32 0
  %21 = load i32, i32* %5, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [2 x double], [2 x double]* %20, i64 0, i64 %22
  %24 = load double, double* %23, align 8
  %25 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %6, i32 0, i32 0
  %26 = load i32, i32* %5, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [2 x double], [2 x double]* %25, i64 0, i64 %27
  store double %24, double* %28, align 8
  %29 = load i32, i32* @x.279
  %30 = load i32, i32* @y.280
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %37

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load i32, i32* %5, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %5, align 4
  br label %7

; <label>:40:                                     ; preds = %7
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %41 = load %class.Tensor.22*, %class.Tensor.22** %4, align 8
  %42 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %41, i32 0, i32 0
  %43 = load i32, i32* %5, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [2 x double], [2 x double]* %42, i64 0, i64 %44
  %46 = load double, double* %45, align 8
  %47 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %6, i32 0, i32 0
  %48 = load i32, i32* %5, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [2 x double], [2 x double]* %47, i64 0, i64 %49
  store double %46, double* %50, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Tensor.22* @_ZN6TensorILi1ELi2EEaSERKS0_(%class.Tensor.22*, %class.Tensor.22* dereferenceable(16)) #1 comdat align 2 {
  %3 = alloca %class.Tensor.22*, align 8
  %4 = alloca %class.Tensor.22*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor.22* %0, %class.Tensor.22** %3, align 8
  store %class.Tensor.22* %1, %class.Tensor.22** %4, align 8
  %6 = load %class.Tensor.22*, %class.Tensor.22** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %53, %2
  %8 = load i32, i32* @x.281
  %9 = load i32, i32* @y.282
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load i32, i32* %5, align 4
  %17 = icmp ult i32 %16, 2
  %18 = load i32, i32* @x.281
  %19 = load i32, i32* @y.282
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %56

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* @x.281
  %28 = load i32, i32* @y.282
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load %class.Tensor.22*, %class.Tensor.22** %4, align 8
  %36 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %35, i32 0, i32 0
  %37 = load i32, i32* %5, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds [2 x double], [2 x double]* %36, i64 0, i64 %38
  %40 = load double, double* %39, align 8
  %41 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %6, i32 0, i32 0
  %42 = load i32, i32* %5, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds [2 x double], [2 x double]* %41, i64 0, i64 %43
  store double %40, double* %44, align 8
  %45 = load i32, i32* @x.281
  %46 = load i32, i32* @y.282
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %53

; <label>:53:                                     ; preds = %originalBBpart24
  %54 = load i32, i32* %5, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %5, align 4
  br label %7

; <label>:56:                                     ; preds = %originalBBpart2
  ret %class.Tensor.22* %6

originalBBalteredBB:                              ; preds = %originalBB, %7
  %57 = load i32, i32* %5, align 4
  %58 = icmp ult i32 %57, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %59 = load %class.Tensor.22*, %class.Tensor.22** %4, align 8
  %60 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %59, i32 0, i32 0
  %61 = load i32, i32* %5, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds [2 x double], [2 x double]* %60, i64 0, i64 %62
  %64 = load double, double* %63, align 8
  %65 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %6, i32 0, i32 0
  %66 = load i32, i32* %5, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds [2 x double], [2 x double]* %65, i64 0, i64 %67
  store double %64, double* %68, align 8
  br label %originalBB1
}

; Function Attrs: nounwind
declare void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase*) unnamed_addr #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjEC2Ev(%"class.__gnu_cxx::new_allocator.31"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.283
  %3 = load i32, i32* @y.284
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %10, align 8
  %12 = load i32, i32* @x.283
  %13 = load i32, i32* @y.284
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjED2Ev(%"class.__gnu_cxx::new_allocator.31"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.285
  %3 = load i32, i32* @y.286
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %10, align 8
  %12 = load i32, i32* @x.285
  %13 = load i32, i32* @y.286
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.35"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.35"*, align 8
  store %"class.__gnu_cxx::new_allocator.35"* %0, %"class.__gnu_cxx::new_allocator.35"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.35"*, %"class.__gnu_cxx::new_allocator.35"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIbED2Ev(%"class.__gnu_cxx::new_allocator.35"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.289
  %3 = load i32, i32* @y.290
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.35"*, align 8
  store %"class.__gnu_cxx::new_allocator.35"* %0, %"class.__gnu_cxx::new_allocator.35"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.35"*, %"class.__gnu_cxx::new_allocator.35"** %10, align 8
  %12 = load i32, i32* @x.289
  %13 = load i32, i32* @y.290
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.35"*, align 8
  store %"class.__gnu_cxx::new_allocator.35"* %0, %"class.__gnu_cxx::new_allocator.35"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.35"*, %"class.__gnu_cxx::new_allocator.35"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.30"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator.30"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator.30"* %2, %"class.std::allocator.30"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPjEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.29"*, align 8
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %2, align 8
  %3 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %4 to %"class.std::allocator.30"*
  ret %"class.std::allocator.30"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.29"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.295
  %3 = load i32, i32* @y.296
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.29"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %10, align 8
  %13 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %19, i32 0, i32 2
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  %23 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %22 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %24 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %23, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = ptrtoint i32* %21 to i64
  %27 = ptrtoint i32* %25 to i64
  %28 = sub i64 %26, %27
  %29 = sdiv exact i64 %28, 4
  %30 = load i32, i32* @x.295
  %31 = load i32, i32* @y.296
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.29"* %13, i32* %17, i64 %29)
          to label %38 unwind label %40

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %39) #12
  ret void

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %11, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %12, align 4
  %44 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %44) #12
  br label %45

; <label>:45:                                     ; preds = %40
  %46 = load i8*, i8** %11, align 8
  %47 = load i32, i32* %12, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

originalBBalteredBB:                              ; preds = %originalBB, %1
  %50 = alloca %"struct.std::_Vector_base.29"*, align 8
  %51 = alloca i8*
  %52 = alloca i32
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %50, align 8
  %53 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %50, align 8
  %54 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %53, i32 0, i32 0
  %55 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %54 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %55, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %53, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %58 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %59, i32 0, i32 2
  %61 = load i32*, i32** %60, align 8
  %62 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %53, i32 0, i32 0
  %63 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %62 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %63, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = ptrtoint i32* %61 to i64
  %67 = ptrtoint i32* %65 to i64
  %_ = sub i64 %66, %67
  %gen = mul i64 %_, %67
  %_1 = sub i64 0, %66
  %gen2 = add i64 %_1, %67
  %_3 = sub i64 0, %66
  %gen4 = add i64 %_3, %67
  %_5 = sub i64 %66, %67
  %gen6 = mul i64 %_5, %67
  %68 = sub i64 %66, %67
  %_7 = shl i64 %68, 4
  %_8 = sub i64 0, %68
  %gen9 = add i64 %_8, 4
  %_10 = sub i64 0, %68
  %gen11 = add i64 %_10, 4
  %_12 = sub i64 0, %68
  %gen13 = add i64 %_12, 4
  %_14 = sub i64 %68, 4
  %gen15 = mul i64 %_14, 4
  %69 = sdiv exact i64 %68, 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPjEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_(i32*, i32*) #1 comdat align 2 {
  %3 = load i32, i32* @x.299
  %4 = load i32, i32* @y.300
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  store i32* %0, i32** %11, align 8
  store i32* %1, i32** %12, align 8
  %13 = load i32, i32* @x.299
  %14 = load i32, i32* @y.300
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %21 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  store i32* %0, i32** %21, align 8
  store i32* %1, i32** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.29"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.29"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = icmp ne i32* %8, null
  br i1 %9, label %10, label %31

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* @x.301
  %12 = load i32, i32* @y.302
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %7, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %19 to %"class.std::allocator.30"*
  %21 = load i32*, i32** %5, align 8
  %22 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator.30"* dereferenceable(1) %20, i32* %21, i64 %22)
  %23 = load i32, i32* @x.301
  %24 = load i32, i32* @y.302
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2, %3
  %32 = load i32, i32* @x.301
  %33 = load i32, i32* @y.302
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i32, i32* @x.301
  %41 = load i32, i32* @y.302
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %48 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %7, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %48 to %"class.std::allocator.30"*
  %50 = load i32*, i32** %5, align 8
  %51 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator.30"* dereferenceable(1) %49, i32* %50, i64 %51)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %3 to %"class.std::allocator.30"*
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %4) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator.30"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.30"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %4, align 8
  %8 = bitcast %"class.std::allocator.30"* %7 to %"class.__gnu_cxx::new_allocator.31"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator.31"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator.31"*, i32*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEEC2ERKS0_(%"struct.std::_Bvector_base"*, %"class.std::allocator.34"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Bvector_base"*, align 8
  %4 = alloca %"class.std::allocator.34"*, align 8
  %5 = alloca %"class.std::allocator.8", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %3, align 8
  store %"class.std::allocator.34"* %1, %"class.std::allocator.34"** %4, align 8
  %8 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3, align 8
  %9 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %8, i32 0, i32 0
  %10 = load %"class.std::allocator.34"*, %"class.std::allocator.34"** %4, align 8
  call void @_ZNSaImEC2IbEERKSaIT_E(%"class.std::allocator.8"* %5, %"class.std::allocator.34"* dereferenceable(1) %10) #12
  invoke void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2ERKSaImE(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %9, %"class.std::allocator.8"* dereferenceable(1) %5)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  call void @_ZNSaImED2Ev(%"class.std::allocator.8"* %5) #12
  ret void

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.309
  %14 = load i32, i32* @y.310
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %6, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %7, align 4
  call void @_ZNSaImED2Ev(%"class.std::allocator.8"* %5) #12
  %24 = load i32, i32* @x.309
  %25 = load i32, i32* @y.310
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %32

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load i8*, i8** %6, align 8
  %34 = load i32, i32* %7, align 4
  %35 = insertvalue { i8*, i32 } undef, i8* %33, 0
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1
  resume { i8*, i32 } %36

originalBBalteredBB:                              ; preds = %originalBB, %12
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %6, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %7, align 4
  call void @_ZNSaImED2Ev(%"class.std::allocator.8"* %5) #12
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE13_M_initializeEm(%"class.std::vector.7"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.7"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %10 = load i64, i64* %4, align 8
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %12, label %32

; <label>:12:                                     ; preds = %2
  %13 = bitcast %"class.std::vector.7"* %9 to %"struct.std::_Bvector_base"*
  %14 = load i64, i64* %4, align 8
  %15 = call i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"* %13, i64 %14)
  store i64* %15, i64** %5, align 8
  %16 = load i64*, i64** %5, align 8
  %17 = load i64, i64* %4, align 8
  %18 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %17)
  %19 = getelementptr inbounds i64, i64* %16, i64 %18
  %20 = bitcast %"class.std::vector.7"* %9 to %"struct.std::_Bvector_base"*
  %21 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %21 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %23 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %22, i32 0, i32 2
  store i64* %19, i64** %23, align 8
  %24 = load i64*, i64** %5, align 8
  %25 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %24)
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %6, i64* %25, i32 0)
  %26 = bitcast %"class.std::vector.7"* %9 to %"struct.std::_Bvector_base"*
  %27 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %26, i32 0, i32 0
  %28 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %27 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %29 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %28, i32 0, i32 0
  %30 = bitcast %"struct.std::_Bit_iterator"* %29 to i8*
  %31 = bitcast %"struct.std::_Bit_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 12, i32 8, i1 false)
  br label %59

; <label>:32:                                     ; preds = %2
  %33 = load i32, i32* @x.311
  %34 = load i32, i32* @y.312
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %32, %originalBBalteredBB
  %41 = bitcast %"class.std::vector.7"* %9 to %"struct.std::_Bvector_base"*
  %42 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %42 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %43, i32 0, i32 2
  store i64* null, i64** %44, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %7, i64* null, i32 0)
  %45 = bitcast %"class.std::vector.7"* %9 to %"struct.std::_Bvector_base"*
  %46 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %45, i32 0, i32 0
  %47 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %46 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %48 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Bit_iterator"* %48 to i8*
  %50 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 12, i32 8, i1 false)
  %51 = load i32, i32* @x.311
  %52 = load i32, i32* @y.312
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %59

; <label>:59:                                     ; preds = %originalBBpart2, %12
  %60 = bitcast %"class.std::vector.7"* %9 to %"struct.std::_Bvector_base"*
  %61 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %60, i32 0, i32 0
  %62 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %61 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %63 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %62, i32 0, i32 0
  %64 = load i64, i64* %4, align 8
  %65 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %63, i64 %64)
  %66 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 0
  %68 = extractvalue { i64*, i32 } %65, 0
  store i64* %68, i64** %67, align 8
  %69 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 1
  %70 = extractvalue { i64*, i32 } %65, 1
  store i32 %70, i32* %69, align 8
  %71 = bitcast %"class.std::vector.7"* %9 to %"struct.std::_Bvector_base"*
  %72 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %72 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %74 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %73, i32 0, i32 1
  %75 = bitcast %"struct.std::_Bit_iterator"* %74 to i8*
  %76 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 12, i32 8, i1 false)
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %32
  %77 = bitcast %"class.std::vector.7"* %9 to %"struct.std::_Bvector_base"*
  %78 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %77, i32 0, i32 0
  %79 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %78 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %80 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %79, i32 0, i32 2
  store i64* null, i64** %80, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %7, i64* null, i32 0)
  %81 = bitcast %"class.std::vector.7"* %9 to %"struct.std::_Bvector_base"*
  %82 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %81, i32 0, i32 0
  %83 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %82 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %84 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %83, i32 0, i32 0
  %85 = bitcast %"struct.std::_Bit_iterator"* %84 to i8*
  %86 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 12, i32 8, i1 false)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE19_M_initialize_valueEb(%"class.std::vector.7"*, i1 zeroext) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.7"*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i64*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  %6 = zext i1 %1 to i8
  store i8 %6, i8* %4, align 1
  %7 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %8 = bitcast %"class.std::vector.7"* %7 to %"struct.std::_Bvector_base"*
  %9 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %8, i32 0, i32 0
  %10 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %9 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %10, i32 0, i32 0
  %12 = bitcast %"struct.std::_Bit_iterator"* %11 to %"struct.std::_Bit_iterator_base"*
  %13 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  store i64* %14, i64** %5, align 8
  %15 = load i64*, i64** %5, align 8
  %16 = icmp ne i64* %15, null
  br i1 %16, label %17, label %33

; <label>:17:                                     ; preds = %2
  %18 = load i64*, i64** %5, align 8
  %19 = bitcast i64* %18 to i8*
  %20 = load i8, i8* %4, align 1
  %21 = trunc i8 %20 to i1
  %22 = select i1 %21, i32 -1, i32 0
  %23 = trunc i32 %22 to i8
  %24 = bitcast %"class.std::vector.7"* %7 to %"struct.std::_Bvector_base"*
  %25 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %24, i32 0, i32 0
  %26 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %25)
  %27 = load i64*, i64** %5, align 8
  %28 = ptrtoint i64* %26 to i64
  %29 = ptrtoint i64* %27 to i64
  %30 = sub i64 %28, %29
  %31 = sdiv exact i64 %30, 8
  %32 = mul i64 %31, 8
  call void @llvm.memset.p0i8.i64(i8* %19, i8 %23, i64 %32, i32 8, i1 false)
  br label %33

; <label>:33:                                     ; preds = %17, %2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %5 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  invoke void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"* %5)
          to label %6 unwind label %24

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.315
  %8 = load i32, i32* @y.316
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %15) #12
  %16 = load i32, i32* @x.315
  %17 = load i32, i32* @y.316
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %28) #12
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* @x.315
  %31 = load i32, i32* @y.316
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i8*, i8** %3, align 8
  %39 = load i32, i32* %4, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  %42 = load i32, i32* @x.315
  %43 = load i32, i32* @y.316
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %41

originalBBalteredBB:                              ; preds = %originalBB, %6
  %50 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %50) #12
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %51 = load i8*, i8** %3, align 8
  %52 = load i32, i32* %4, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2IbEERKSaIT_E(%"class.std::allocator.8"*, %"class.std::allocator.34"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.8"*, align 8
  %4 = alloca %"class.std::allocator.34"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %3, align 8
  store %"class.std::allocator.34"* %1, %"class.std::allocator.34"** %4, align 8
  %5 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %3, align 8
  %6 = bitcast %"class.std::allocator.8"* %5 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.9"* %6) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2ERKSaImE(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  %4 = alloca %"class.std::allocator.8"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %4, align 8
  %7 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"class.std::allocator.8"*
  %9 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  call void @_ZNSaImEC2ERKS_(%"class.std::allocator.8"* %8, %"class.std::allocator.8"* dereferenceable(1) %9) #12
  %10 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  invoke void @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %10)
          to label %11 unwind label %28

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.319
  %13 = load i32, i32* @y.320
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* @x.319
  %21 = load i32, i32* @y.320
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:28:                                     ; preds = %2
  %29 = load i32, i32* @x.319
  %30 = load i32, i32* @y.320
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %5, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %6, align 4
  %40 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"class.std::allocator.8"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.8"* %40) #12
  %41 = load i32, i32* @x.319
  %42 = load i32, i32* @y.320
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %49

; <label>:49:                                     ; preds = %originalBBpart24
  %50 = load i8*, i8** %5, align 8
  %51 = load i32, i32* %6, align 4
  %52 = insertvalue { i8*, i32 } undef, i8* %50, 0
  %53 = insertvalue { i8*, i32 } %52, i32 %51, 1
  resume { i8*, i32 } %53

originalBBalteredBB:                              ; preds = %originalBB, %11
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %5, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %6, align 4
  %57 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"class.std::allocator.8"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.8"* %57) #12
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImED2Ev(%"class.std::allocator.8"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.321
  %3 = load i32, i32* @y.322
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %10, align 8
  %11 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %10, align 8
  %12 = bitcast %"class.std::allocator.8"* %11 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.9"* %12) #12
  %13 = load i32, i32* @x.321
  %14 = load i32, i32* @y.322
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %21, align 8
  %22 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %21, align 8
  %23 = bitcast %"class.std::allocator.8"* %22 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.9"* %23) #12
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.9"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2ERKS_(%"class.std::allocator.8"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.8"*, align 8
  %4 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %3, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %4, align 8
  %5 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %3, align 8
  %6 = bitcast %"class.std::allocator.8"* %5 to %"class.__gnu_cxx::new_allocator.9"*
  %7 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  %8 = bitcast %"class.std::allocator.8"* %7 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_(%"class.__gnu_cxx::new_allocator.9"* %6, %"class.__gnu_cxx::new_allocator.9"* dereferenceable(1) %8) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %3, i32 0, i32 0
  call void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %4)
  %5 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %3, i32 0, i32 1
  call void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %5)
  %6 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %3, i32 0, i32 2
  store i64* null, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_(%"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %1, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %2, align 8
  %3 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2, align 8
  %4 = bitcast %"struct.std::_Bit_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %4, i64* null, i32 0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"*, i64*, i32) unnamed_addr #1 comdat align 2 {
  %4 = load i32, i32* @x.333
  %5 = load i32, i32* @y.334
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i32, align 4
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %12, align 8
  store i64* %1, i64** %13, align 8
  store i32 %2, i32* %14, align 4
  %15 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %12, align 8
  %16 = bitcast %"struct.std::_Bit_iterator_base"* %15 to %"struct.std::iterator"*
  %17 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %15, i32 0, i32 0
  %18 = load i64*, i64** %13, align 8
  store i64* %18, i64** %17, align 8
  %19 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %15, i32 0, i32 1
  %20 = load i32, i32* %14, align 4
  store i32 %20, i32* %19, align 8
  %21 = load i32, i32* @x.333
  %22 = load i32, i32* @y.334
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i32, align 4
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %29, align 8
  store i64* %1, i64** %30, align 8
  store i32 %2, i32* %31, align 4
  %32 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %29, align 8
  %33 = bitcast %"struct.std::_Bit_iterator_base"* %32 to %"struct.std::iterator"*
  %34 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %32, i32 0, i32 0
  %35 = load i64*, i64** %30, align 8
  store i64* %35, i64** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %32, i32 0, i32 1
  %37 = load i32, i32* %31, align 4
  store i32 %37, i32* %36, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.9"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.335
  %3 = load i32, i32* @y.336
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %10, align 8
  %12 = load i32, i32* @x.335
  %13 = load i32, i32* @y.336
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bvector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6 to %"class.std::allocator.8"*
  %8 = load i64, i64* %4, align 8
  %9 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %8)
  %10 = call i64* @_ZN9__gnu_cxx14__alloc_traitsISaImEmE8allocateERS1_m(%"class.std::allocator.8"* dereferenceable(1) %7, i64 %9)
  ret i64* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64) #1 comdat align 2 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 64
  %5 = sub i64 %4, 1
  %6 = udiv i64 %5, 64
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8)) #1 comdat {
  %2 = load i32, i32* @x.341
  %3 = load i32, i32* @y.342
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64*, align 8
  store i64* %0, i64** %10, align 8
  %11 = load i64*, i64** %10, align 8
  %12 = load i32, i32* @x.341
  %13 = load i32, i32* @y.342
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca i64*, align 8
  store i64* %0, i64** %20, align 8
  %21 = load i64*, i64** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"*, i64*, i32) unnamed_addr #1 comdat align 2 {
  %4 = load i32, i32* @x.343
  %5 = load i32, i32* @y.344
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Bit_iterator"*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i32, align 4
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %12, align 8
  store i64* %1, i64** %13, align 8
  store i32 %2, i32* %14, align 4
  %15 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12, align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %15 to %"struct.std::_Bit_iterator_base"*
  %17 = load i64*, i64** %13, align 8
  %18 = load i32, i32* %14, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %16, i64* %17, i32 %18)
  %19 = load i32, i32* @x.343
  %20 = load i32, i32* @y.344
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"struct.std::_Bit_iterator"*, align 8
  %28 = alloca i64*, align 8
  %29 = alloca i32, align 4
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %27, align 8
  store i64* %1, i64** %28, align 8
  store i32 %2, i32* %29, align 4
  %30 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %27, align 8
  %31 = bitcast %"struct.std::_Bit_iterator"* %30 to %"struct.std::_Bit_iterator_base"*
  %32 = load i64*, i64** %28, align 8
  %33 = load i32, i32* %29, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %31, i64* %32, i32 %33)
  br label %originalBB
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator", align 8
  %4 = alloca %"struct.std::_Bit_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %6 to i8*
  %9 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = load i64, i64* %5, align 8
  %11 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"* %6, i64 %10)
  %12 = bitcast %"struct.std::_Bit_iterator"* %3 to i8*
  %13 = bitcast %"struct.std::_Bit_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 16, i32 8, i1 false)
  %14 = bitcast %"struct.std::_Bit_iterator"* %3 to { i64*, i32 }*
  %15 = load { i64*, i32 }, { i64*, i32 }* %14, align 8
  ret { i64*, i32 } %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx14__alloc_traitsISaImEmE8allocateERS1_m(%"class.std::allocator.8"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.8"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %3, align 8
  %6 = bitcast %"class.std::allocator.8"* %5 to %"class.__gnu_cxx::new_allocator.9"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"* %7) #12
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %5, align 8
  %14 = mul i64 %13, 8
  %15 = call i8* @_Znwm(i64 %14)
  %16 = bitcast i8* %15 to i64*
  ret i64* %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #9

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.353
  %4 = load i32, i32* @y.354
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bit_iterator"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11, align 8
  %14 = bitcast %"struct.std::_Bit_iterator"* %13 to %"struct.std::_Bit_iterator_base"*
  %15 = load i64, i64* %12, align 8
  call void @_ZNSt18_Bit_iterator_base7_M_incrEl(%"struct.std::_Bit_iterator_base"* %14, i64 %15)
  %16 = load i32, i32* @x.353
  %17 = load i32, i32* @y.354
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.std::_Bit_iterator"* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca %"struct.std::_Bit_iterator"*, align 8
  %25 = alloca i64, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %24, align 8
  store i64 %1, i64* %25, align 8
  %26 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %24, align 8
  %27 = bitcast %"struct.std::_Bit_iterator"* %26 to %"struct.std::_Bit_iterator_base"*
  %28 = load i64, i64* %25, align 8
  call void @_ZNSt18_Bit_iterator_base7_M_incrEl(%"struct.std::_Bit_iterator_base"* %27, i64 %28)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base7_M_incrEl(%"struct.std::_Bit_iterator_base"*, i64) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = add nsw i64 %7, %10
  store i64 %11, i64* %5, align 8
  %12 = load i64, i64* %5, align 8
  %13 = sdiv i64 %12, 64
  %14 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds i64, i64* %15, i64 %13
  store i64* %16, i64** %14, align 8
  %17 = load i64, i64* %5, align 8
  %18 = srem i64 %17, 64
  store i64 %18, i64* %5, align 8
  %19 = load i64, i64* %5, align 8
  %20 = icmp slt i64 %19, 0
  br i1 %20, label %21, label %43

; <label>:21:                                     ; preds = %2
  %22 = load i32, i32* @x.355
  %23 = load i32, i32* @y.356
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load i64, i64* %5, align 8
  %31 = add nsw i64 %30, 64
  store i64 %31, i64* %5, align 8
  %32 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds i64, i64* %33, i32 -1
  store i64* %34, i64** %32, align 8
  %35 = load i32, i32* @x.355
  %36 = load i32, i32* @y.356
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %43

; <label>:43:                                     ; preds = %originalBBpart2, %2
  %44 = load i32, i32* @x.355
  %45 = load i32, i32* @y.356
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB4, label %originalBB4alteredBB

originalBB4:                                      ; preds = %43, %originalBB4alteredBB
  %52 = load i64, i64* %5, align 8
  %53 = trunc i64 %52 to i32
  %54 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 1
  store i32 %53, i32* %54, align 8
  %55 = load i32, i32* @x.355
  %56 = load i32, i32* @y.356
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart26, label %originalBB4alteredBB

originalBBpart26:                                 ; preds = %originalBB4
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %21
  %63 = load i64, i64* %5, align 8
  %_ = sub i64 0, %63
  %gen = add i64 %_, 64
  %_1 = sub i64 %63, 64
  %gen2 = mul i64 %_1, 64
  %_3 = shl i64 %63, 64
  %64 = add nsw i64 %63, 64
  store i64 %64, i64* %5, align 8
  %65 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = getelementptr inbounds i64, i64* %66, i32 -1
  store i64* %67, i64** %65, align 8
  br label %originalBB

originalBB4alteredBB:                             ; preds = %originalBB4, %43
  %68 = load i64, i64* %5, align 8
  %69 = trunc i64 %68 to i32
  %70 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 1
  store i32 %69, i32* %70, align 8
  br label %originalBB4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) #1 comdat align 2 {
  %2 = alloca i64*, align 8
  %3 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  %4 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  %5 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %4 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %5, i32 0, i32 2
  %7 = load i64*, i64** %6, align 8
  %8 = icmp ne i64* %7, null
  br i1 %8, label %9, label %16

; <label>:9:                                      ; preds = %1
  %10 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %4 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %10, i32 0, i32 2
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 -1
  %14 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %13)
  %15 = getelementptr inbounds i64, i64* %14, i64 1
  store i64* %15, i64** %2, align 8
  br label %17

; <label>:16:                                     ; preds = %1
  store i64* null, i64** %2, align 8
  br label %17

; <label>:17:                                     ; preds = %16, %9
  %18 = load i64*, i64** %2, align 8
  ret i64* %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #8

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  %3 = alloca i64, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %4 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  %5 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp ne i64* %10, null
  br i1 %11, label %12, label %37

; <label>:12:                                     ; preds = %1
  %13 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %14 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %13)
  %15 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %16 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %15 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Bit_iterator"* %17 to %"struct.std::_Bit_iterator_base"*
  %19 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = ptrtoint i64* %14 to i64
  %22 = ptrtoint i64* %20 to i64
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 8
  store i64 %24, i64* %3, align 8
  %25 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %26 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %25 to %"class.std::allocator.8"*
  %27 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %28 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %27 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %29 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %28, i32 0, i32 2
  %30 = load i64*, i64** %29, align 8
  %31 = load i64, i64* %3, align 8
  %32 = sub i64 0, %31
  %33 = getelementptr inbounds i64, i64* %30, i64 %32
  %34 = load i64, i64* %3, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaImEmE10deallocateERS1_Pmm(%"class.std::allocator.8"* dereferenceable(1) %26, i64* %33, i64 %34)
  %35 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %36 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %35 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  call void @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %36)
  br label %37

; <label>:37:                                     ; preds = %12, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %2, align 8
  %3 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %3 to %"class.std::allocator.8"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.8"* %4) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaImEmE10deallocateERS1_Pmm(%"class.std::allocator.8"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.8"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  %8 = bitcast %"class.std::allocator.8"* %7 to %"class.__gnu_cxx::new_allocator.9"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.9"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*, align 8
  %3 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"** %2, align 8
  %4 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"** %2, align 8
  call void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %3)
  %5 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Bit_iterator"* %5 to i8*
  %7 = bitcast %"struct.std::_Bit_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 12, i32 8, i1 false)
  %8 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %4, i32 0, i32 0
  %9 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  %10 = bitcast %"struct.std::_Bit_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 12, i32 8, i1 false)
  %11 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %4, i32 0, i32 2
  store i64* null, i64** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.9"*, i64*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2Ev(%"class.__gnu_cxx::new_allocator.26"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEED2Ev(%"class.__gnu_cxx::new_allocator.26"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIS_IbSaIbEESaIS1_EE17_S_check_init_lenEmRKS2_(i64, %"class.std::allocator.25"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::allocator.25"*, align 8
  %5 = alloca %"class.std::allocator.25", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store i64 %0, i64* %3, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %4, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  call void @_ZNSaISt6vectorIbSaIbEEEC2ERKS2_(%"class.std::allocator.25"* %5, %"class.std::allocator.25"* dereferenceable(1) %9) #12
  %10 = invoke i64 @_ZNSt6vectorIS_IbSaIbEESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.25"* dereferenceable(1) %5)
          to label %11 unwind label %14

; <label>:11:                                     ; preds = %2
  %12 = icmp ugt i64 %8, %10
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"* %5) #12
  br i1 %12, label %13, label %18

; <label>:13:                                     ; preds = %11
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i32 0, i32 0)) #15
  unreachable

; <label>:14:                                     ; preds = %2
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %6, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %7, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"* %5) #12
  br label %20

; <label>:18:                                     ; preds = %11
  %19 = load i64, i64* %3, align 8
  ret i64 %19

; <label>:20:                                     ; preds = %14
  %21 = load i8*, i8** %6, align 8
  %22 = load i32, i32* %7, align 4
  %23 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.24"*, i64, %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.375
  %5 = load i32, i32* @y.376
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.24"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.std::allocator.25"*, align 8
  %15 = alloca i8*
  %16 = alloca i32
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %12, align 8
  store i64 %1, i64* %13, align 8
  store %"class.std::allocator.25"* %2, %"class.std::allocator.25"** %14, align 8
  %17 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %12, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %17, i32 0, i32 0
  %19 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %14, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %18, %"class.std::allocator.25"* dereferenceable(1) %19)
  %20 = load i64, i64* %13, align 8
  %21 = load i32, i32* @x.375
  %22 = load i32, i32* @y.376
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.24"* %17, i64 %20)
          to label %29 unwind label %30

; <label>:29:                                     ; preds = %originalBBpart2
  ret void

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %15, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %16, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %18) #12
  br label %34

; <label>:34:                                     ; preds = %30
  %35 = load i8*, i8** %15, align 8
  %36 = load i32, i32* %16, align 4
  %37 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

originalBBalteredBB:                              ; preds = %originalBB, %3
  %39 = alloca %"struct.std::_Vector_base.24"*, align 8
  %40 = alloca i64, align 8
  %41 = alloca %"class.std::allocator.25"*, align 8
  %42 = alloca i8*
  %43 = alloca i32
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %39, align 8
  store i64 %1, i64* %40, align 8
  store %"class.std::allocator.25"* %2, %"class.std::allocator.25"** %41, align 8
  %44 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %39, align 8
  %45 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %44, i32 0, i32 0
  %46 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %41, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %45, %"class.std::allocator.25"* dereferenceable(1) %46)
  %47 = load i64, i64* %40, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IbSaIbEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.23"*, i64, %"class.std::vector.7"* dereferenceable(40)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.23"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %6, align 8
  %7 = load %"class.std::vector.23"*, %"class.std::vector.23"** %4, align 8
  %8 = bitcast %"class.std::vector.23"* %7 to %"struct.std::_Vector_base.24"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %8, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %9 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.7"*, %"class.std::vector.7"** %11, align 8
  %13 = load i64, i64* %5, align 8
  %14 = load %"class.std::vector.7"*, %"class.std::vector.7"** %6, align 8
  %15 = bitcast %"class.std::vector.23"* %7 to %"struct.std::_Vector_base.24"*
  %16 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %15)
  %17 = call %"class.std::vector.7"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIbSaIbEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.7"* %12, i64 %13, %"class.std::vector.7"* dereferenceable(40) %14, %"class.std::allocator.25"* dereferenceable(1) %16)
  %18 = bitcast %"class.std::vector.23"* %7 to %"struct.std::_Vector_base.24"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %19 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %20, i32 0, i32 1
  store %"class.std::vector.7"* %17, %"class.std::vector.7"** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev(%"struct.std::_Vector_base.24"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.24"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %2, align 8
  %5 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.7"*, %"class.std::vector.7"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load %"class.std::vector.7"*, %"class.std::vector.7"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.7"*, %"class.std::vector.7"** %16, align 8
  %18 = ptrtoint %"class.std::vector.7"* %13 to i64
  %19 = ptrtoint %"class.std::vector.7"* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 40
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.24"* %5, %"class.std::vector.7"* %9, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %23) #12
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.379
  %26 = load i32, i32* @y.380
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %3, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %4, align 4
  %36 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %36) #12
  %37 = load i32, i32* @x.379
  %38 = load i32, i32* @y.380
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %45

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i8*, i8** %3, align 8
  %47 = load i32, i32* %4, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

originalBBalteredBB:                              ; preds = %originalBB, %24
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %3, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %4, align 4
  %53 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %53) #12
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIS_IbSaIbEESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.25"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.25"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %2, align 8
  store i64 230584300921369395, i64* %3, align 8
  %5 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8max_sizeERKS4_(%"class.std::allocator.25"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIbSaIbEEEC2ERKS2_(%"class.std::allocator.25"*, %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.25"*, align 8
  %4 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %3, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %4, align 8
  %5 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %3, align 8
  %6 = bitcast %"class.std::allocator.25"* %5 to %"class.__gnu_cxx::new_allocator.26"*
  %7 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  %8 = bitcast %"class.std::allocator.25"* %7 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.26"* %6, %"class.__gnu_cxx::new_allocator.26"* dereferenceable(1) %8) #12
  ret void
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8max_sizeERKS4_(%"class.std::allocator.25"* dereferenceable(1)) #1 comdat align 2 {
  %2 = load i32, i32* @x.385
  %3 = load i32, i32* @y.386
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %10, align 8
  %11 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %10, align 8
  %12 = bitcast %"class.std::allocator.25"* %11 to %"class.__gnu_cxx::new_allocator.26"*
  %13 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %12) #12
  %14 = load i32, i32* @x.385
  %15 = load i32, i32* @y.386
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %22, align 8
  %23 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %22, align 8
  %24 = bitcast %"class.std::allocator.25"* %23 to %"class.__gnu_cxx::new_allocator.26"*
  %25 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %24) #12
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #1 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %13

; <label>:11:                                     ; preds = %2
  %12 = load i64*, i64** %5, align 8
  store i64* %12, i64** %3, align 8
  br label %31

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.387
  %15 = load i32, i32* @y.388
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i64*, i64** %4, align 8
  store i64* %22, i64** %3, align 8
  %23 = load i32, i32* @x.387
  %24 = load i32, i32* @y.388
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2, %11
  %32 = load i32, i32* @x.387
  %33 = load i32, i32* @y.388
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i64*, i64** %3, align 8
  %41 = load i32, i32* @x.387
  %42 = load i32, i32* @y.388
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i64* %40

originalBBalteredBB:                              ; preds = %originalBB, %13
  %49 = load i64*, i64** %4, align 8
  store i64* %49, i64** %3, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %50 = load i64*, i64** %3, align 8
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.389
  %3 = load i32, i32* @y.390
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %10, align 8
  %12 = load i32, i32* @x.389
  %13 = load i32, i32* @y.390
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 230584300921369395

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %1, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.25"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %4, align 8
  %7 = load %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %7 to %"class.std::allocator.25"*
  %9 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  call void @_ZNSaISt6vectorIbSaIbEEEC2ERKS2_(%"class.std::allocator.25"* %8, %"class.std::allocator.25"* dereferenceable(1) %9) #12
  %10 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %7 to %"class.std::allocator.25"*
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"* %16) #12
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = load i32, i32* %6, align 4
  %20 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.24"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.24"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.7"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.24"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %8 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %9, i32 0, i32 0
  store %"class.std::vector.7"* %7, %"class.std::vector.7"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %11 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.7"*, %"class.std::vector.7"** %13, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %16, i32 0, i32 1
  store %"class.std::vector.7"* %14, %"class.std::vector.7"** %17, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %"class.std::vector.7"*, %"class.std::vector.7"** %20, align 8
  %22 = load i64, i64* %4, align 8
  %23 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %21, i64 %22
  %24 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %24 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %25, i32 0, i32 2
  store %"class.std::vector.7"* %23, %"class.std::vector.7"** %26, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %3 to %"class.std::allocator.25"*
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.25"* %4) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.399
  %3 = load i32, i32* @y.400
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"** %10, align 8
  %11 = load %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %11, i32 0, i32 0
  store %"class.std::vector.7"* null, %"class.std::vector.7"** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %11, i32 0, i32 1
  store %"class.std::vector.7"* null, %"class.std::vector.7"** %13, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %11, i32 0, i32 2
  store %"class.std::vector.7"* null, %"class.std::vector.7"** %14, align 8
  %15 = load i32, i32* @x.399
  %16 = load i32, i32* @y.400
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"** %23, align 8
  %24 = load %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %24, i32 0, i32 0
  store %"class.std::vector.7"* null, %"class.std::vector.7"** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %24, i32 0, i32 1
  store %"class.std::vector.7"* null, %"class.std::vector.7"** %26, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %24, i32 0, i32 2
  store %"class.std::vector.7"* null, %"class.std::vector.7"** %27, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.7"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.24"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.401
  %4 = load i32, i32* @y.402
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.24"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = icmp ne i64 %14, 0
  %16 = load i32, i32* @x.401
  %17 = load i32, i32* @y.402
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %45

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.401
  %26 = load i32, i32* @y.402
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %13, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %33 to %"class.std::allocator.25"*
  %35 = load i64, i64* %12, align 8
  %36 = call %"class.std::vector.7"* @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8allocateERS4_m(%"class.std::allocator.25"* dereferenceable(1) %34, i64 %35)
  %37 = load i32, i32* @x.401
  %38 = load i32, i32* @y.402
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:45:                                     ; preds = %originalBBpart2
  br label %46

; <label>:46:                                     ; preds = %45, %originalBBpart24
  %47 = phi %"class.std::vector.7"* [ %36, %originalBBpart24 ], [ null, %45 ]
  ret %"class.std::vector.7"* %47

originalBBalteredBB:                              ; preds = %originalBB, %2
  %48 = alloca %"struct.std::_Vector_base.24"*, align 8
  %49 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %48, align 8
  store i64 %1, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %48, align 8
  %51 = load i64, i64* %49, align 8
  %52 = icmp ne i64 %51, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %53 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %13, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %53 to %"class.std::allocator.25"*
  %55 = load i64, i64* %12, align 8
  %56 = call %"class.std::vector.7"* @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8allocateERS4_m(%"class.std::allocator.25"* dereferenceable(1) %54, i64 %55)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.7"* @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8allocateERS4_m(%"class.std::allocator.25"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.403
  %4 = load i32, i32* @y.404
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.25"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %11, align 8
  %14 = bitcast %"class.std::allocator.25"* %13 to %"class.__gnu_cxx::new_allocator.26"*
  %15 = load i64, i64* %12, align 8
  %16 = call %"class.std::vector.7"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.403
  %18 = load i32, i32* @y.404
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::vector.7"* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.25"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %25, align 8
  %28 = bitcast %"class.std::allocator.25"* %27 to %"class.__gnu_cxx::new_allocator.26"*
  %29 = load i64, i64* %26, align 8
  %30 = call %"class.std::vector.7"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.7"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.405
  %5 = load i32, i32* @y.406
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %12, align 8
  %16 = load i64, i64* %13, align 8
  %17 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %15) #12
  %18 = icmp ugt i64 %16, %17
  %19 = load i32, i32* @x.405
  %20 = load i32, i32* @y.406
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %28

; <label>:27:                                     ; preds = %originalBBpart2
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i64, i64* %13, align 8
  %30 = mul i64 %29, 40
  %31 = call i8* @_Znwm(i64 %30)
  %32 = bitcast i8* %31 to %"class.std::vector.7"*
  ret %"class.std::vector.7"* %32

originalBBalteredBB:                              ; preds = %originalBB, %3
  %33 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %34 = alloca i64, align 8
  %35 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %33, align 8
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %35, align 8
  %36 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %33, align 8
  %37 = load i64, i64* %34, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %36) #12
  %39 = icmp ugt i64 %37, %38
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.7"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIbSaIbEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.7"*, i64, %"class.std::vector.7"* dereferenceable(40), %"class.std::allocator.25"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.7"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.7"*, align 8
  %8 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %7, align 8
  store %"class.std::allocator.25"* %3, %"class.std::allocator.25"** %8, align 8
  %9 = load %"class.std::vector.7"*, %"class.std::vector.7"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.7"*, %"class.std::vector.7"** %7, align 8
  %12 = call %"class.std::vector.7"* @_ZSt20uninitialized_fill_nIPSt6vectorIbSaIbEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.7"* %9, i64 %10, %"class.std::vector.7"* dereferenceable(40) %11)
  ret %"class.std::vector.7"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.24"*, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %2, align 8
  %3 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %4 to %"class.std::allocator.25"*
  ret %"class.std::allocator.25"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.7"* @_ZSt20uninitialized_fill_nIPSt6vectorIbSaIbEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.7"*, i64, %"class.std::vector.7"* dereferenceable(40)) #0 comdat {
  %4 = alloca %"class.std::vector.7"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.7"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.7"*, %"class.std::vector.7"** %6, align 8
  %11 = call %"class.std::vector.7"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIbSaIbEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.7"* %8, i64 %9, %"class.std::vector.7"* dereferenceable(40) %10)
  ret %"class.std::vector.7"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.7"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIbSaIbEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.7"*, i64, %"class.std::vector.7"* dereferenceable(40)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.413
  %5 = load i32, i32* @y.414
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector.7"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.std::vector.7"*, align 8
  %15 = alloca %"class.std::vector.7"*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %12, align 8
  store i64 %1, i64* %13, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %14, align 8
  %18 = load %"class.std::vector.7"*, %"class.std::vector.7"** %12, align 8
  store %"class.std::vector.7"* %18, %"class.std::vector.7"** %15, align 8
  %19 = load i32, i32* @x.413
  %20 = load i32, i32* @y.414
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %originalBBpart213, %originalBBpart2
  %28 = load i64, i64* %13, align 8
  %29 = icmp ugt i64 %28, 0
  br i1 %29, label %30, label %115

; <label>:30:                                     ; preds = %27
  %31 = load i32, i32* @x.413
  %32 = load i32, i32* @y.414
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load %"class.std::vector.7"*, %"class.std::vector.7"** %15, align 8
  %40 = load i32, i32* @x.413
  %41 = load i32, i32* @y.414
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %48 = invoke %"class.std::vector.7"* @_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_(%"class.std::vector.7"* dereferenceable(40) %39)
          to label %49 unwind label %89

; <label>:49:                                     ; preds = %originalBBpart24
  %50 = load i32, i32* @x.413
  %51 = load i32, i32* @y.414
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load %"class.std::vector.7"*, %"class.std::vector.7"** %14, align 8
  %59 = load i32, i32* @x.413
  %60 = load i32, i32* @y.414
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZSt10_ConstructISt6vectorIbSaIbEES2_EvPT_RKT0_(%"class.std::vector.7"* %48, %"class.std::vector.7"* dereferenceable(40) %58)
          to label %67 unwind label %89

; <label>:67:                                     ; preds = %originalBBpart28
  br label %68

; <label>:68:                                     ; preds = %67
  %69 = load i32, i32* @x.413
  %70 = load i32, i32* @y.414
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  %77 = load i64, i64* %13, align 8
  %78 = add i64 %77, -1
  store i64 %78, i64* %13, align 8
  %79 = load %"class.std::vector.7"*, %"class.std::vector.7"** %15, align 8
  %80 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %79, i32 1
  store %"class.std::vector.7"* %80, %"class.std::vector.7"** %15, align 8
  %81 = load i32, i32* @x.413
  %82 = load i32, i32* @y.414
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart213, label %originalBB10alteredBB

originalBBpart213:                                ; preds = %originalBB10
  br label %27

; <label>:89:                                     ; preds = %originalBBpart28, %originalBBpart24
  %90 = load i32, i32* @x.413
  %91 = load i32, i32* @y.414
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %89, %originalBB15alteredBB
  %98 = landingpad { i8*, i32 }
          catch i8* null
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %16, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %17, align 4
  %101 = load i32, i32* @x.413
  %102 = load i32, i32* @y.414
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br label %109

; <label>:109:                                    ; preds = %originalBBpart217
  %110 = load i8*, i8** %16, align 8
  %111 = call i8* @__cxa_begin_catch(i8* %110) #12
  %112 = load %"class.std::vector.7"*, %"class.std::vector.7"** %12, align 8
  %113 = load %"class.std::vector.7"*, %"class.std::vector.7"** %15, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIbSaIbEEEvT_S4_(%"class.std::vector.7"* %112, %"class.std::vector.7"* %113)
          to label %114 unwind label %133

; <label>:114:                                    ; preds = %109
  invoke void @__cxa_rethrow() #15
          to label %211 unwind label %133

; <label>:115:                                    ; preds = %27
  %116 = load i32, i32* @x.413
  %117 = load i32, i32* @y.414
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %115, %originalBB19alteredBB
  %124 = load %"class.std::vector.7"*, %"class.std::vector.7"** %15, align 8
  %125 = load i32, i32* @x.413
  %126 = load i32, i32* @y.414
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  ret %"class.std::vector.7"* %124

; <label>:133:                                    ; preds = %114, %109
  %134 = landingpad { i8*, i32 }
          cleanup
  %135 = extractvalue { i8*, i32 } %134, 0
  store i8* %135, i8** %16, align 8
  %136 = extractvalue { i8*, i32 } %134, 1
  store i32 %136, i32* %17, align 4
  invoke void @__cxa_end_catch()
          to label %137 unwind label %192

; <label>:137:                                    ; preds = %133
  %138 = load i32, i32* @x.413
  %139 = load i32, i32* @y.414
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %137, %originalBB23alteredBB
  %146 = load i32, i32* @x.413
  %147 = load i32, i32* @y.414
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %171
                                                  ; No predecessors!
  %155 = load i32, i32* @x.413
  %156 = load i32, i32* @y.414
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %154, %originalBB27alteredBB
  call void @llvm.trap()
  %163 = load i32, i32* @x.413
  %164 = load i32, i32* @y.414
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  unreachable

; <label>:171:                                    ; preds = %originalBBpart225
  %172 = load i32, i32* @x.413
  %173 = load i32, i32* @y.414
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %171, %originalBB31alteredBB
  %180 = load i8*, i8** %16, align 8
  %181 = load i32, i32* %17, align 4
  %182 = insertvalue { i8*, i32 } undef, i8* %180, 0
  %183 = insertvalue { i8*, i32 } %182, i32 %181, 1
  %184 = load i32, i32* @x.413
  %185 = load i32, i32* @y.414
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  resume { i8*, i32 } %183

; <label>:192:                                    ; preds = %133
  %193 = load i32, i32* @x.413
  %194 = load i32, i32* @y.414
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %192, %originalBB35alteredBB
  %201 = landingpad { i8*, i32 }
          catch i8* null
  %202 = extractvalue { i8*, i32 } %201, 0
  call void @__clang_call_terminate(i8* %202) #10
  %203 = load i32, i32* @x.413
  %204 = load i32, i32* @y.414
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  unreachable

; <label>:211:                                    ; preds = %114
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %212 = alloca %"class.std::vector.7"*, align 8
  %213 = alloca i64, align 8
  %214 = alloca %"class.std::vector.7"*, align 8
  %215 = alloca %"class.std::vector.7"*, align 8
  %216 = alloca i8*
  %217 = alloca i32
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %212, align 8
  store i64 %1, i64* %213, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %214, align 8
  %218 = load %"class.std::vector.7"*, %"class.std::vector.7"** %212, align 8
  store %"class.std::vector.7"* %218, %"class.std::vector.7"** %215, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %219 = load %"class.std::vector.7"*, %"class.std::vector.7"** %15, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %220 = load %"class.std::vector.7"*, %"class.std::vector.7"** %14, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  %221 = load i64, i64* %13, align 8
  %_ = sub i64 0, %221
  %gen = add i64 %_, -1
  %_11 = shl i64 %221, -1
  %222 = add i64 %221, -1
  store i64 %222, i64* %13, align 8
  %223 = load %"class.std::vector.7"*, %"class.std::vector.7"** %15, align 8
  %224 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %223, i32 1
  store %"class.std::vector.7"* %224, %"class.std::vector.7"** %15, align 8
  br label %originalBB10

originalBB15alteredBB:                            ; preds = %originalBB15, %89
  %225 = landingpad { i8*, i32 }
          catch i8* null
  %226 = extractvalue { i8*, i32 } %225, 0
  store i8* %226, i8** %16, align 8
  %227 = extractvalue { i8*, i32 } %225, 1
  store i32 %227, i32* %17, align 4
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %115
  %228 = load %"class.std::vector.7"*, %"class.std::vector.7"** %15, align 8
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %137
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %154
  call void @llvm.trap()
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %171
  %229 = load i8*, i8** %16, align 8
  %230 = load i32, i32* %17, align 4
  %231 = insertvalue { i8*, i32 } undef, i8* %229, 0
  %232 = insertvalue { i8*, i32 } %231, i32 %230, 1
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %192
  %233 = landingpad { i8*, i32 }
          catch i8* null
  %234 = extractvalue { i8*, i32 } %233, 0
  call void @__clang_call_terminate(i8* %234) #10
  br label %originalBB35
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIbSaIbEES2_EvPT_RKT0_(%"class.std::vector.7"*, %"class.std::vector.7"* dereferenceable(40)) #0 comdat {
  %3 = alloca %"class.std::vector.7"*, align 8
  %4 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %4, align 8
  %5 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %6 = bitcast %"class.std::vector.7"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.7"*
  %8 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  call void @_ZNSt6vectorIbSaIbEEC2ERKS1_(%"class.std::vector.7"* %7, %"class.std::vector.7"* dereferenceable(40) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.7"* @_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_(%"class.std::vector.7"* dereferenceable(40)) #1 comdat {
  %2 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %2, align 8
  %3 = load %"class.std::vector.7"*, %"class.std::vector.7"** %2, align 8
  ret %"class.std::vector.7"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIbSaIbEEEvT_S4_(%"class.std::vector.7"*, %"class.std::vector.7"*) #0 comdat {
  %3 = alloca %"class.std::vector.7"*, align 8
  %4 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %4, align 8
  %5 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %6 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIbSaIbEEEEvT_S6_(%"class.std::vector.7"* %5, %"class.std::vector.7"* %6)
  ret void
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEEC2ERKS1_(%"class.std::vector.7"*, %"class.std::vector.7"* dereferenceable(40)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.7"*, align 8
  %4 = alloca %"class.std::vector.7"*, align 8
  %5 = alloca %"class.std::allocator.34", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %4, align 8
  %12 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %13 = bitcast %"class.std::vector.7"* %12 to %"struct.std::_Bvector_base"*
  %14 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %15 = bitcast %"class.std::vector.7"* %14 to %"struct.std::_Bvector_base"*
  %16 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(%"struct.std::_Bvector_base"* %15)
  %17 = call dereferenceable(1) %"class.std::allocator.8"* @_ZN9__gnu_cxx14__alloc_traitsISaImEmE17_S_select_on_copyERKS1_(%"class.std::allocator.8"* dereferenceable(1) %16)
  call void @_ZNSaIbEC2ImEERKSaIT_E(%"class.std::allocator.34"* %5, %"class.std::allocator.8"* dereferenceable(1) %17) #12
  invoke void @_ZNSt13_Bvector_baseISaIbEEC2ERKS0_(%"struct.std::_Bvector_base"* %13, %"class.std::allocator.34"* dereferenceable(1) %5)
          to label %18 unwind label %78

; <label>:18:                                     ; preds = %2
  call void @_ZNSaIbED2Ev(%"class.std::allocator.34"* %5) #12
  %19 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %20 = invoke i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.7"* %19)
          to label %21 unwind label %82

; <label>:21:                                     ; preds = %18
  invoke void @_ZNSt6vectorIbSaIbEE13_M_initializeEm(%"class.std::vector.7"* %12, i64 %20)
          to label %22 unwind label %82

; <label>:22:                                     ; preds = %21
  %23 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %24 = invoke { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.7"* %23)
          to label %25 unwind label %82

; <label>:25:                                     ; preds = %22
  %26 = load i32, i32* @x.421
  %27 = load i32, i32* @y.422
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %25, %originalBBalteredBB
  %34 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %35 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 0
  %36 = extractvalue { i64*, i32 } %24, 0
  store i64* %36, i64** %35, align 8
  %37 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 1
  %38 = extractvalue { i64*, i32 } %24, 1
  store i32 %38, i32* %37, align 8
  %39 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %40 = load i32, i32* @x.421
  %41 = load i32, i32* @y.422
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %48 = invoke { i64*, i32 } @_ZNKSt6vectorIbSaIbEE3endEv(%"class.std::vector.7"* %39)
          to label %49 unwind label %82

; <label>:49:                                     ; preds = %originalBBpart2
  %50 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %50, i32 0, i32 0
  %52 = extractvalue { i64*, i32 } %48, 0
  store i64* %52, i64** %51, align 8
  %53 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %50, i32 0, i32 1
  %54 = extractvalue { i64*, i32 } %48, 1
  store i32 %54, i32* %53, align 8
  %55 = bitcast %"class.std::vector.7"* %12 to %"struct.std::_Bvector_base"*
  %56 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %55, i32 0, i32 0
  %57 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %56 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %58 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %57, i32 0, i32 0
  %59 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  %60 = bitcast %"struct.std::_Bit_iterator"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 16, i32 8, i1 false)
  %61 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %62 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = invoke { i64*, i32 } @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(%"class.std::vector.7"* %12, i64* %63, i32 %65, i64* %68, i32 %70, %"struct.std::_Bit_iterator"* byval align 8 %10)
          to label %72 unwind label %82

; <label>:72:                                     ; preds = %49
  %73 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %74 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %73, i32 0, i32 0
  %75 = extractvalue { i64*, i32 } %71, 0
  store i64* %75, i64** %74, align 8
  %76 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %73, i32 0, i32 1
  %77 = extractvalue { i64*, i32 } %71, 1
  store i32 %77, i32* %76, align 8
  ret void

; <label>:78:                                     ; preds = %2
  %79 = landingpad { i8*, i32 }
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %6, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %7, align 4
  call void @_ZNSaIbED2Ev(%"class.std::allocator.34"* %5) #12
  br label %88

; <label>:82:                                     ; preds = %49, %originalBBpart2, %22, %21, %18
  %83 = landingpad { i8*, i32 }
          cleanup
  %84 = extractvalue { i8*, i32 } %83, 0
  store i8* %84, i8** %6, align 8
  %85 = extractvalue { i8*, i32 } %83, 1
  store i32 %85, i32* %7, align 4
  %86 = bitcast %"class.std::vector.7"* %12 to %"struct.std::_Bvector_base"*
  invoke void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %86)
          to label %87 unwind label %93

; <label>:87:                                     ; preds = %82
  br label %88

; <label>:88:                                     ; preds = %87, %78
  %89 = load i8*, i8** %6, align 8
  %90 = load i32, i32* %7, align 4
  %91 = insertvalue { i8*, i32 } undef, i8* %89, 0
  %92 = insertvalue { i8*, i32 } %91, i32 %90, 1
  resume { i8*, i32 } %92

; <label>:93:                                     ; preds = %82
  %94 = landingpad { i8*, i32 }
          catch i8* null
  %95 = extractvalue { i8*, i32 } %94, 0
  call void @__clang_call_terminate(i8* %95) #10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %25
  %96 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %97 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %96, i32 0, i32 0
  %98 = extractvalue { i64*, i32 } %24, 0
  store i64* %98, i64** %97, align 8
  %99 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %96, i32 0, i32 1
  %100 = extractvalue { i64*, i32 } %24, 1
  store i32 %100, i32* %99, align 8
  %101 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.8"* @_ZN9__gnu_cxx14__alloc_traitsISaImEmE17_S_select_on_copyERKS1_(%"class.std::allocator.8"* dereferenceable(1)) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %2, align 8
  %3 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %2, align 8
  ret %"class.std::allocator.8"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.8"* @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(%"struct.std::_Bvector_base"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.425
  %3 = load i32, i32* @y.426
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Bvector_base"*, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %10, align 8
  %11 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %12 to %"class.std::allocator.8"*
  %14 = load i32, i32* @x.425
  %15 = load i32, i32* @y.426
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.8"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Bvector_base"*, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %22, align 8
  %23 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %24 to %"class.std::allocator.8"*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIbEC2ImEERKSaIT_E(%"class.std::allocator.34"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.427
  %4 = load i32, i32* @y.428
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.34"*, align 8
  %12 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.34"* %0, %"class.std::allocator.34"** %11, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %12, align 8
  %13 = load %"class.std::allocator.34"*, %"class.std::allocator.34"** %11, align 8
  %14 = bitcast %"class.std::allocator.34"* %13 to %"class.__gnu_cxx::new_allocator.35"*
  call void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.35"* %14) #12
  %15 = load i32, i32* @x.427
  %16 = load i32, i32* @y.428
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %"class.std::allocator.34"*, align 8
  %24 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.34"* %0, %"class.std::allocator.34"** %23, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %24, align 8
  %25 = load %"class.std::allocator.34"*, %"class.std::allocator.34"** %23, align 8
  %26 = bitcast %"class.std::allocator.34"* %25 to %"class.__gnu_cxx::new_allocator.35"*
  call void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.35"* %26) #12
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.7"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.7"*, align 8
  %3 = alloca %"struct.std::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %2, align 8
  %5 = load %"class.std::vector.7"*, %"class.std::vector.7"** %2, align 8
  %6 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE3endEv(%"class.std::vector.7"* %5)
  %7 = bitcast %"struct.std::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 0
  %9 = extractvalue { i64*, i32 } %6, 0
  store i64* %9, i64** %8, align 8
  %10 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 1
  %11 = extractvalue { i64*, i32 } %6, 1
  store i32 %11, i32* %10, align 8
  %12 = bitcast %"struct.std::_Bit_const_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  %13 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.7"* %5)
  %14 = bitcast %"struct.std::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 0
  %16 = extractvalue { i64*, i32 } %13, 0
  store i64* %16, i64** %15, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 1
  %18 = extractvalue { i64*, i32 } %13, 1
  store i32 %18, i32* %17, align 8
  %19 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %20 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %12, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %19)
  ret i64 %20
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(%"class.std::vector.7"*, i64*, i32, i64*, i32, %"struct.std::_Bit_iterator"* byval align 8) #0 comdat align 2 {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"class.std::vector.7"*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %1, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %2, i32* %17, align 8
  %18 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %3, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %4, i32* %20, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %10, align 8
  %21 = load %"class.std::vector.7"*, %"class.std::vector.7"** %10, align 8
  %22 = bitcast %"struct.std::_Bit_const_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %23 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %22, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = bitcast %"struct.std::_Bit_const_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %26 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = bitcast %"struct.std::_Bit_iterator"* %5 to %"struct.std::_Bit_iterator_base"*
  %29 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %28, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = call i64* @_ZSt4copyIPmS0_ET0_T_S2_S1_(i64* %24, i64* %27, i64* %30)
  store i64* %31, i64** %11, align 8
  %32 = bitcast %"struct.std::_Bit_const_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %33 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %32, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  call void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %12, i64* %34, i32 0)
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %13 to i8*
  %36 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 16, i32 8, i1 false)
  %37 = load i64*, i64** %11, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %14, i64* %37, i32 0)
  %38 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %39 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = call { i64*, i32 } @_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_(i64* %40, i32 %42, i64* %45, i32 %47, i64* %50, i32 %52)
  %54 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = extractvalue { i64*, i32 } %53, 0
  store i64* %56, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = extractvalue { i64*, i32 } %53, 1
  store i32 %58, i32* %57, align 8
  %59 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %60 = load { i64*, i32 }, { i64*, i32 }* %59, align 8
  ret { i64*, i32 } %60
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.7"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.433
  %3 = load i32, i32* @y.434
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Bit_const_iterator", align 8
  %11 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %11, align 8
  %12 = load %"class.std::vector.7"*, %"class.std::vector.7"** %11, align 8
  %13 = bitcast %"class.std::vector.7"* %12 to %"struct.std::_Bvector_base"*
  %14 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %14 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %15, i32 0, i32 0
  %17 = bitcast %"struct.std::_Bit_iterator"* %16 to %"struct.std::_Bit_iterator_base"*
  %18 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %17, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  call void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %10, i64* %19, i32 0)
  %20 = bitcast %"struct.std::_Bit_const_iterator"* %10 to { i64*, i32 }*
  %21 = load { i64*, i32 }, { i64*, i32 }* %20, align 8
  %22 = load i32, i32* @x.433
  %23 = load i32, i32* @y.434
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i32 } %21

originalBBalteredBB:                              ; preds = %originalBB, %1
  %30 = alloca %"struct.std::_Bit_const_iterator", align 8
  %31 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %31, align 8
  %32 = load %"class.std::vector.7"*, %"class.std::vector.7"** %31, align 8
  %33 = bitcast %"class.std::vector.7"* %32 to %"struct.std::_Bvector_base"*
  %34 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %34 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Bit_iterator"* %36 to %"struct.std::_Bit_iterator_base"*
  %38 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %37, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  call void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %30, i64* %39, i32 0)
  %40 = bitcast %"struct.std::_Bit_const_iterator"* %30 to { i64*, i32 }*
  %41 = load { i64*, i32 }, { i64*, i32 }* %40, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt6vectorIbSaIbEE3endEv(%"class.std::vector.7"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.435
  %3 = load i32, i32* @y.436
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Bit_const_iterator", align 8
  %11 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %11, align 8
  %12 = load %"class.std::vector.7"*, %"class.std::vector.7"** %11, align 8
  %13 = bitcast %"class.std::vector.7"* %12 to %"struct.std::_Bvector_base"*
  %14 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %14 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %15, i32 0, i32 1
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %10, %"struct.std::_Bit_iterator"* dereferenceable(16) %16)
  %17 = bitcast %"struct.std::_Bit_const_iterator"* %10 to { i64*, i32 }*
  %18 = load { i64*, i32 }, { i64*, i32 }* %17, align 8
  %19 = load i32, i32* @x.435
  %20 = load i32, i32* @y.436
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i32 } %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"struct.std::_Bit_const_iterator", align 8
  %28 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %28, align 8
  %29 = load %"class.std::vector.7"*, %"class.std::vector.7"** %28, align 8
  %30 = bitcast %"class.std::vector.7"* %29 to %"struct.std::_Bvector_base"*
  %31 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %31 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %32, i32 0, i32 1
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %27, %"struct.std::_Bit_iterator"* dereferenceable(16) %33)
  %34 = bitcast %"struct.std::_Bit_const_iterator"* %27 to { i64*, i32 }*
  %35 = load { i64*, i32 }, { i64*, i32 }* %34, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16), %"struct.std::_Bit_iterator_base"* dereferenceable(16)) #1 comdat {
  %3 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %3, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %4, align 8
  %5 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = ptrtoint i64* %7 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 8
  %15 = mul nsw i64 64, %14
  %16 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3, align 8
  %17 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = add nsw i64 %15, %19
  %21 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %22 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = sub nsw i64 %20, %24
  ret i64 %25
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIPmS0_ET0_T_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__miter_baseIPmET_S1_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__miter_baseIPmET_S1_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %11)
  ret i64* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_const_iterator", align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_const_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 0
  store i64* %0, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 1
  store i32 %1, i32* %18, align 8
  %19 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 0
  store i64* %2, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 1
  store i32 %3, i32* %21, align 8
  %22 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 0
  store i64* %4, i64** %23, align 8
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 1
  store i32 %5, i32* %24, align 8
  %25 = bitcast %"struct.std::_Bit_const_iterator"* %12 to i8*
  %26 = bitcast %"struct.std::_Bit_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 16, i32 8, i1 false)
  %27 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %28 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = call { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_(i64* %29, i32 %31)
  %33 = bitcast %"struct.std::_Bit_const_iterator"* %11 to { i64*, i32 }*
  %34 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 0
  %35 = extractvalue { i64*, i32 } %32, 0
  store i64* %35, i64** %34, align 8
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 1
  %37 = extractvalue { i64*, i32 } %32, 1
  store i32 %37, i32* %36, align 8
  %38 = bitcast %"struct.std::_Bit_const_iterator"* %14 to i8*
  %39 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false)
  %40 = bitcast %"struct.std::_Bit_const_iterator"* %14 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_(i64* %42, i32 %44)
  %46 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i32 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i32 } %45, 1
  store i32 %50, i32* %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %15 to i8*
  %52 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 16, i32 8, i1 false)
  %53 = bitcast %"struct.std::_Bit_const_iterator"* %11 to { i64*, i32 }*
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = call { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64* %55, i32 %57, i64* %60, i32 %62, i64* %65, i32 %67)
  %69 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %70 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 0
  %71 = extractvalue { i64*, i32 } %68, 0
  store i64* %71, i64** %70, align 8
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 1
  %73 = extractvalue { i64*, i32 } %68, 1
  store i32 %73, i32* %72, align 8
  %74 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %75 = load { i64*, i32 }, { i64*, i32 }* %74, align 8
  ret { i64*, i32 } %75
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"*, i64*, i32) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i32, i32* %6, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %8, i64* %9, i32 %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %11)
  %13 = call i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %12)
  %14 = call i64* @_ZSt12__niter_wrapIPmET_RKS1_S1_(i64** dereferenceable(8) %6, i64* %13)
  ret i64* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIPmET_S1_(i64*) #1 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__niter_wrapIPmET_RKS1_S1_(i64** dereferenceable(8), i64*) #1 comdat {
  %3 = alloca i64**, align 8
  %4 = alloca i64*, align 8
  store i64** %0, i64*** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPmET_S1_(i64*) #1 comdat {
  %2 = load i32, i32* @x.453
  %3 = load i32, i32* @y.454
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64*, align 8
  store i64* %0, i64** %10, align 8
  %11 = load i64*, i64** %10, align 8
  %12 = load i32, i32* @x.453
  %13 = load i32, i32* @y.454
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca i64*, align 8
  store i64* %0, i64** %20, align 8
  %21 = load i64*, i64** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #1 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = ptrtoint i64* %8 to i64
  %11 = ptrtoint i64* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %39

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.455
  %18 = load i32, i32* @y.456
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i64*, i64** %6, align 8
  %26 = bitcast i64* %25 to i8*
  %27 = load i64*, i64** %4, align 8
  %28 = bitcast i64* %27 to i8*
  %29 = load i64, i64* %7, align 8
  %30 = mul i64 8, %29
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %26, i8* %28, i64 %30, i32 8, i1 false)
  %31 = load i32, i32* @x.455
  %32 = load i32, i32* @y.456
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %39

; <label>:39:                                     ; preds = %originalBBpart2, %3
  %40 = load i32, i32* @x.455
  %41 = load i32, i32* @y.456
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %39, %originalBB13alteredBB
  %48 = load i64*, i64** %6, align 8
  %49 = load i64, i64* %7, align 8
  %50 = getelementptr inbounds i64, i64* %48, i64 %49
  %51 = load i32, i32* @x.455
  %52 = load i32, i32* @y.456
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  ret i64* %50

originalBBalteredBB:                              ; preds = %originalBB, %16
  %59 = load i64*, i64** %6, align 8
  %60 = bitcast i64* %59 to i8*
  %61 = load i64*, i64** %4, align 8
  %62 = bitcast i64* %61 to i8*
  %63 = load i64, i64* %7, align 8
  %_ = sub i64 0, 8
  %gen = add i64 %_, %63
  %_1 = sub i64 0, 8
  %gen2 = add i64 %_1, %63
  %_3 = sub i64 8, %63
  %gen4 = mul i64 %_3, %63
  %_5 = sub i64 0, 8
  %gen6 = add i64 %_5, %63
  %_7 = sub i64 0, 8
  %gen8 = add i64 %_7, %63
  %_9 = sub i64 0, 8
  %gen10 = add i64 %_9, %63
  %_11 = sub i64 0, 8
  %gen12 = add i64 %_11, %63
  %64 = mul i64 8, %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %60, i8* %62, i64 %64, i32 8, i1 false)
  br label %originalBB

originalBB13alteredBB:                            ; preds = %originalBB13, %39
  %65 = load i64*, i64** %6, align 8
  %66 = load i64, i64* %7, align 8
  %67 = getelementptr inbounds i64, i64* %65, i64 %66
  br label %originalBB13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_const_iterator", align 8
  %15 = alloca %"struct.std::_Bit_const_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  %17 = alloca %"struct.std::_Bit_iterator", align 8
  %18 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %0, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %1, i32* %20, align 8
  %21 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  store i64* %2, i64** %22, align 8
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  store i32 %3, i32* %23, align 8
  %24 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %24, i32 0, i32 0
  store i64* %4, i64** %25, align 8
  %26 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %24, i32 0, i32 1
  store i32 %5, i32* %26, align 8
  %27 = bitcast %"struct.std::_Bit_const_iterator"* %13 to i8*
  %28 = bitcast %"struct.std::_Bit_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 16, i32 8, i1 false)
  %29 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = call { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_(i64* %31, i32 %33)
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 0
  %37 = extractvalue { i64*, i32 } %34, 0
  store i64* %37, i64** %36, align 8
  %38 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 1
  %39 = extractvalue { i64*, i32 } %34, 1
  store i32 %39, i32* %38, align 8
  %40 = bitcast %"struct.std::_Bit_const_iterator"* %15 to i8*
  %41 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 16, i32 8, i1 false)
  %42 = bitcast %"struct.std::_Bit_const_iterator"* %15 to { i64*, i32 }*
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = call { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_(i64* %44, i32 %46)
  %48 = bitcast %"struct.std::_Bit_const_iterator"* %14 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = extractvalue { i64*, i32 } %47, 0
  store i64* %50, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = extractvalue { i64*, i32 } %47, 1
  store i32 %52, i32* %51, align 8
  %53 = bitcast %"struct.std::_Bit_iterator"* %17 to i8*
  %54 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 16, i32 8, i1 false)
  %55 = bitcast %"struct.std::_Bit_iterator"* %17 to { i64*, i32 }*
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_(i64* %57, i32 %59)
  %61 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %62 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 0
  %63 = extractvalue { i64*, i32 } %60, 0
  store i64* %63, i64** %62, align 8
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 1
  %65 = extractvalue { i64*, i32 } %60, 1
  store i32 %65, i32* %64, align 8
  %66 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = bitcast %"struct.std::_Bit_const_iterator"* %14 to { i64*, i32 }*
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %77 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %76, i32 0, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %76, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = call { i64*, i32 } @_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64* %68, i32 %70, i64* %73, i32 %75, i64* %78, i32 %80)
  %82 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %83 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 0
  %84 = extractvalue { i64*, i32 } %81, 0
  store i64* %84, i64** %83, align 8
  %85 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 1
  %86 = extractvalue { i64*, i32 } %81, 1
  store i32 %86, i32* %85, align 8
  %87 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %88 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %87, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %87, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = call { i64*, i32 } @_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_(%"struct.std::_Bit_iterator"* dereferenceable(16) %10, i64* %89, i32 %91)
  %93 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %94 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %93, i32 0, i32 0
  %95 = extractvalue { i64*, i32 } %92, 0
  store i64* %95, i64** %94, align 8
  %96 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %93, i32 0, i32 1
  %97 = extractvalue { i64*, i32 } %92, 1
  store i32 %97, i32* %96, align 8
  %98 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %99 = load { i64*, i32 }, { i64*, i32 }* %98, align 8
  ret { i64*, i32 } %99
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_(i64*, i32) #1 comdat {
  %3 = alloca %"struct.std::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::_Bit_const_iterator", align 8
  %5 = bitcast %"struct.std::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %6 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 0
  store i64* %0, i64** %6, align 8
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %3 to i8*
  %9 = bitcast %"struct.std::_Bit_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = bitcast %"struct.std::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %11 = load { i64*, i32 }, { i64*, i32 }* %10, align 8
  ret { i64*, i32 } %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_(%"struct.std::_Bit_iterator"* dereferenceable(16), i64*, i32) #1 comdat {
  %4 = alloca %"struct.std::_Bit_iterator", align 8
  %5 = alloca %"struct.std::_Bit_iterator", align 8
  %6 = alloca %"struct.std::_Bit_iterator"*, align 8
  %7 = bitcast %"struct.std::_Bit_iterator"* %5 to { i64*, i32 }*
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 0
  store i64* %1, i64** %8, align 8
  %9 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 1
  store i32 %2, i32* %9, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %6, align 8
  %10 = bitcast %"struct.std::_Bit_iterator"* %4 to i8*
  %11 = bitcast %"struct.std::_Bit_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false)
  %12 = bitcast %"struct.std::_Bit_iterator"* %4 to { i64*, i32 }*
  %13 = load { i64*, i32 }, { i64*, i32 }* %12, align 8
  ret { i64*, i32 } %13
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = load i32, i32* @x.463
  %8 = load i32, i32* @y.464
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_const_iterator", align 8
  %17 = alloca %"struct.std::_Bit_const_iterator", align 8
  %18 = alloca %"struct.std::_Bit_iterator", align 8
  %19 = alloca i8, align 1
  %20 = alloca %"struct.std::_Bit_const_iterator", align 8
  %21 = alloca %"struct.std::_Bit_const_iterator", align 8
  %22 = alloca %"struct.std::_Bit_iterator", align 8
  %23 = bitcast %"struct.std::_Bit_const_iterator"* %16 to { i64*, i32 }*
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 0
  store i64* %0, i64** %24, align 8
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 1
  store i32 %1, i32* %25, align 8
  %26 = bitcast %"struct.std::_Bit_const_iterator"* %17 to { i64*, i32 }*
  %27 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %26, i32 0, i32 0
  store i64* %2, i64** %27, align 8
  %28 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %26, i32 0, i32 1
  store i32 %3, i32* %28, align 8
  %29 = bitcast %"struct.std::_Bit_iterator"* %18 to { i64*, i32 }*
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 0
  store i64* %4, i64** %30, align 8
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 1
  store i32 %5, i32* %31, align 8
  store i8 0, i8* %19, align 1
  %32 = bitcast %"struct.std::_Bit_const_iterator"* %20 to i8*
  %33 = bitcast %"struct.std::_Bit_const_iterator"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 16, i32 8, i1 false)
  %34 = bitcast %"struct.std::_Bit_const_iterator"* %21 to i8*
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false)
  %36 = bitcast %"struct.std::_Bit_iterator"* %22 to i8*
  %37 = bitcast %"struct.std::_Bit_iterator"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 16, i32 8, i1 false)
  %38 = bitcast %"struct.std::_Bit_const_iterator"* %20 to { i64*, i32 }*
  %39 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast %"struct.std::_Bit_const_iterator"* %21 to { i64*, i32 }*
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = bitcast %"struct.std::_Bit_iterator"* %22 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = call { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_(i64* %40, i32 %42, i64* %45, i32 %47, i64* %50, i32 %52)
  %54 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = extractvalue { i64*, i32 } %53, 0
  store i64* %56, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = extractvalue { i64*, i32 } %53, 1
  store i32 %58, i32* %57, align 8
  %59 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %60 = load { i64*, i32 }, { i64*, i32 }* %59, align 8
  %61 = load i32, i32* @x.463
  %62 = load i32, i32* @y.464
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i32 } %60

originalBBalteredBB:                              ; preds = %originalBB, %6
  %69 = alloca %"struct.std::_Bit_iterator", align 8
  %70 = alloca %"struct.std::_Bit_const_iterator", align 8
  %71 = alloca %"struct.std::_Bit_const_iterator", align 8
  %72 = alloca %"struct.std::_Bit_iterator", align 8
  %73 = alloca i8, align 1
  %74 = alloca %"struct.std::_Bit_const_iterator", align 8
  %75 = alloca %"struct.std::_Bit_const_iterator", align 8
  %76 = alloca %"struct.std::_Bit_iterator", align 8
  %77 = bitcast %"struct.std::_Bit_const_iterator"* %70 to { i64*, i32 }*
  %78 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %77, i32 0, i32 0
  store i64* %0, i64** %78, align 8
  %79 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %77, i32 0, i32 1
  store i32 %1, i32* %79, align 8
  %80 = bitcast %"struct.std::_Bit_const_iterator"* %71 to { i64*, i32 }*
  %81 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %80, i32 0, i32 0
  store i64* %2, i64** %81, align 8
  %82 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %80, i32 0, i32 1
  store i32 %3, i32* %82, align 8
  %83 = bitcast %"struct.std::_Bit_iterator"* %72 to { i64*, i32 }*
  %84 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %83, i32 0, i32 0
  store i64* %4, i64** %84, align 8
  %85 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %83, i32 0, i32 1
  store i32 %5, i32* %85, align 8
  store i8 0, i8* %73, align 1
  %86 = bitcast %"struct.std::_Bit_const_iterator"* %74 to i8*
  %87 = bitcast %"struct.std::_Bit_const_iterator"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 16, i32 8, i1 false)
  %88 = bitcast %"struct.std::_Bit_const_iterator"* %75 to i8*
  %89 = bitcast %"struct.std::_Bit_const_iterator"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 16, i32 8, i1 false)
  %90 = bitcast %"struct.std::_Bit_iterator"* %76 to i8*
  %91 = bitcast %"struct.std::_Bit_iterator"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 16, i32 8, i1 false)
  %92 = bitcast %"struct.std::_Bit_const_iterator"* %74 to { i64*, i32 }*
  %93 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %92, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %92, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = bitcast %"struct.std::_Bit_const_iterator"* %75 to { i64*, i32 }*
  %98 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %97, i32 0, i32 0
  %99 = load i64*, i64** %98, align 8
  %100 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %97, i32 0, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = bitcast %"struct.std::_Bit_iterator"* %76 to { i64*, i32 }*
  %103 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %102, i32 0, i32 0
  %104 = load i64*, i64** %103, align 8
  %105 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %102, i32 0, i32 1
  %106 = load i32, i32* %105, align 8
  %107 = call { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_(i64* %94, i32 %96, i64* %99, i32 %101, i64* %104, i32 %106)
  %108 = bitcast %"struct.std::_Bit_iterator"* %69 to { i64*, i32 }*
  %109 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %108, i32 0, i32 0
  %110 = extractvalue { i64*, i32 } %107, 0
  store i64* %110, i64** %109, align 8
  %111 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %108, i32 0, i32 1
  %112 = extractvalue { i64*, i32 } %107, 1
  store i32 %112, i32* %111, align 8
  %113 = bitcast %"struct.std::_Bit_iterator"* %69 to { i64*, i32 }*
  %114 = load { i64*, i32 }, { i64*, i32 }* %113, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_(i64*, i32) #1 comdat {
  %3 = load i32, i32* @x.465
  %4 = load i32, i32* @y.466
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bit_const_iterator", align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %0, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %1, i32* %15, align 8
  %16 = bitcast %"struct.std::_Bit_const_iterator"* %11 to i8*
  %17 = bitcast %"struct.std::_Bit_const_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 16, i32 8, i1 false)
  %18 = bitcast %"struct.std::_Bit_const_iterator"* %11 to { i64*, i32 }*
  %19 = load { i64*, i32 }, { i64*, i32 }* %18, align 8
  %20 = load i32, i32* @x.465
  %21 = load i32, i32* @y.466
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i32 } %19

originalBBalteredBB:                              ; preds = %originalBB, %2
  %28 = alloca %"struct.std::_Bit_const_iterator", align 8
  %29 = alloca %"struct.std::_Bit_const_iterator", align 8
  %30 = bitcast %"struct.std::_Bit_const_iterator"* %29 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  store i64* %0, i64** %31, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  store i32 %1, i32* %32, align 8
  %33 = bitcast %"struct.std::_Bit_const_iterator"* %28 to i8*
  %34 = bitcast %"struct.std::_Bit_const_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 16, i32 8, i1 false)
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %28 to { i64*, i32 }*
  %36 = load { i64*, i32 }, { i64*, i32 }* %35, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_(i64*, i32) #1 comdat {
  %3 = load i32, i32* @x.467
  %4 = load i32, i32* @y.468
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %0, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %1, i32* %15, align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %11 to i8*
  %17 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 16, i32 8, i1 false)
  %18 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %19 = load { i64*, i32 }, { i64*, i32 }* %18, align 8
  %20 = load i32, i32* @x.467
  %21 = load i32, i32* @y.468
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i32 } %19

originalBBalteredBB:                              ; preds = %originalBB, %2
  %28 = alloca %"struct.std::_Bit_iterator", align 8
  %29 = alloca %"struct.std::_Bit_iterator", align 8
  %30 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  store i64* %0, i64** %31, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  store i32 %1, i32* %32, align 8
  %33 = bitcast %"struct.std::_Bit_iterator"* %28 to i8*
  %34 = bitcast %"struct.std::_Bit_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 16, i32 8, i1 false)
  %35 = bitcast %"struct.std::_Bit_iterator"* %28 to { i64*, i32 }*
  %36 = load { i64*, i32 }, { i64*, i32 }* %35, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_(i64*, i32, i64*, i32, i64*, i32) #0 comdat align 2 {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::_Bit_reference", align 8
  %13 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %0, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %1, i32* %15, align 8
  %16 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 0
  store i64* %2, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 1
  store i32 %3, i32* %18, align 8
  %19 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 0
  store i64* %4, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 1
  store i32 %5, i32* %21, align 8
  %22 = bitcast %"struct.std::_Bit_const_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %23 = bitcast %"struct.std::_Bit_const_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %24 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %22, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %23)
  store i64 %24, i64* %11, align 8
  br label %25

; <label>:25:                                     ; preds = %39, %6
  %26 = load i64, i64* %11, align 8
  %27 = icmp sgt i64 %26, 0
  br i1 %27, label %28, label %42

; <label>:28:                                     ; preds = %25
  %29 = call zeroext i1 @_ZNKSt19_Bit_const_iteratordeEv(%"struct.std::_Bit_const_iterator"* %8)
  %30 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %10)
  %31 = bitcast %"struct.std::_Bit_reference"* %12 to { i64*, i64 }*
  %32 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %31, i32 0, i32 0
  %33 = extractvalue { i64*, i64 } %30, 0
  store i64* %33, i64** %32, align 8
  %34 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %31, i32 0, i32 1
  %35 = extractvalue { i64*, i64 } %30, 1
  store i64 %35, i64* %34, align 8
  %36 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %12, i1 zeroext %29)
  %37 = call dereferenceable(16) %"struct.std::_Bit_const_iterator"* @_ZNSt19_Bit_const_iteratorppEv(%"struct.std::_Bit_const_iterator"* %8)
  %38 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %10)
  br label %39

; <label>:39:                                     ; preds = %28
  %40 = load i64, i64* %11, align 8
  %41 = add nsw i64 %40, -1
  store i64 %41, i64* %11, align 8
  br label %25

; <label>:42:                                     ; preds = %25
  %43 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  %44 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 16, i32 8, i1 false)
  %45 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %46 = load { i64*, i32 }, { i64*, i32 }* %45, align 8
  ret { i64*, i32 } %46
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt19_Bit_const_iteratordeEv(%"struct.std::_Bit_const_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %3 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %2, align 8
  %4 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %2, align 8
  %5 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %6 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 1, %11
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %3, i64* %7, i64 %12)
  %13 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %3)
  ret i1 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.473
  %3 = load i32, i32* @y.474
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Bit_reference", align 8
  %11 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %11, align 8
  %12 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11, align 8
  %13 = bitcast %"struct.std::_Bit_iterator"* %12 to %"struct.std::_Bit_iterator_base"*
  %14 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %13, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %12 to %"struct.std::_Bit_iterator_base"*
  %17 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = shl i64 1, %19
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %10, i64* %15, i64 %20)
  %21 = bitcast %"struct.std::_Bit_reference"* %10 to { i64*, i64 }*
  %22 = load { i64*, i64 }, { i64*, i64 }* %21, align 8
  %23 = load i32, i32* @x.473
  %24 = load i32, i32* @y.474
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i64 } %22

originalBBalteredBB:                              ; preds = %originalBB, %1
  %31 = alloca %"struct.std::_Bit_reference", align 8
  %32 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %32, align 8
  %33 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %32, align 8
  %34 = bitcast %"struct.std::_Bit_iterator"* %33 to %"struct.std::_Bit_iterator_base"*
  %35 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %34, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = bitcast %"struct.std::_Bit_iterator"* %33 to %"struct.std::_Bit_iterator_base"*
  %38 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %37, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = zext i32 %39 to i64
  %_ = sub i64 0, 1
  %gen = add i64 %_, %40
  %_1 = sub i64 1, %40
  %gen2 = mul i64 %_1, %40
  %_3 = sub i64 1, %40
  %gen4 = mul i64 %_3, %40
  %_5 = sub i64 1, %40
  %gen6 = mul i64 %_5, %40
  %_7 = shl i64 1, %40
  %_8 = sub i64 0, 1
  %gen9 = add i64 %_8, %40
  %_10 = sub i64 1, %40
  %gen11 = mul i64 %_10, %40
  %41 = shl i64 1, %40
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %31, i64* %36, i64 %41)
  %42 = bitcast %"struct.std::_Bit_reference"* %31 to { i64*, i64 }*
  %43 = load { i64*, i64 }, { i64*, i64 }* %42, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"*, i1 zeroext) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_reference"*, align 8
  %4 = alloca i8, align 1
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %3, align 8
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  %6 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %3, align 8
  %7 = load i8, i8* %4, align 1
  %8 = trunc i8 %7 to i1
  br i1 %8, label %9, label %32

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* @x.475
  %11 = load i32, i32* @y.476
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %6, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %6, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = load i64, i64* %21, align 8
  %23 = or i64 %22, %19
  store i64 %23, i64* %21, align 8
  %24 = load i32, i32* @x.475
  %25 = load i32, i32* @y.476
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %40

; <label>:32:                                     ; preds = %2
  %33 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %6, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = xor i64 %34, -1
  %36 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %6, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, %35
  store i64 %39, i64* %37, align 8
  br label %40

; <label>:40:                                     ; preds = %32, %originalBBpart2
  ret %"struct.std::_Bit_reference"* %6

originalBBalteredBB:                              ; preds = %originalBB, %9
  %41 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %6, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %6, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = load i64, i64* %44, align 8
  %_ = sub i64 0, %45
  %gen = add i64 %_, %42
  %_1 = shl i64 %45, %42
  %_2 = shl i64 %45, %42
  %46 = or i64 %45, %42
  store i64 %46, i64* %44, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_const_iterator"* @_ZNSt19_Bit_const_iteratorppEv(%"struct.std::_Bit_const_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %2, align 8
  %3 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %2, align 8
  %4 = bitcast %"struct.std::_Bit_const_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"* %4)
  ret %"struct.std::_Bit_const_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.479
  %3 = load i32, i32* @y.480
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %10, align 8
  %11 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %10, align 8
  %12 = bitcast %"struct.std::_Bit_iterator"* %11 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"* %12)
  %13 = load i32, i32* @x.479
  %14 = load i32, i32* @y.480
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.std::_Bit_iterator"* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %21, align 8
  %22 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %21, align 8
  %23 = bitcast %"struct.std::_Bit_iterator"* %22 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"* %23)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"*, i64*, i64) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_reference"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  store i64* %9, i64** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 1
  %11 = load i64, i64* %6, align 8
  store i64 %11, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %2, align 8
  %3 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %3, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %6, %8
  %10 = icmp ne i64 %9, 0
  %11 = xor i1 %10, true
  %12 = xor i1 %11, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.485
  %3 = load i32, i32* @y.486
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %10, align 8
  %11 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = icmp eq i32 %13, 63
  %16 = load i32, i32* @x.485
  %17 = load i32, i32* @y.486
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %45

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.485
  %26 = load i32, i32* @y.486
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %24, %originalBB5alteredBB
  %33 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %11, i32 0, i32 1
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %11, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i32 1
  store i64* %36, i64** %34, align 8
  %37 = load i32, i32* @x.485
  %38 = load i32, i32* @y.486
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart27, label %originalBB5alteredBB

originalBBpart27:                                 ; preds = %originalBB5
  br label %45

; <label>:45:                                     ; preds = %originalBBpart27, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %46 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %46, align 8
  %47 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %46, align 8
  %48 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %_ = sub i32 0, %49
  %gen = add i32 %_, 1
  %_1 = sub i32 %49, 1
  %gen2 = mul i32 %_1, 1
  %_3 = sub i32 %49, 1
  %gen4 = mul i32 %_3, 1
  %50 = add i32 %49, 1
  store i32 %50, i32* %48, align 8
  %51 = icmp eq i32 %49, 63
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %24
  %52 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %11, i32 0, i32 1
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %11, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = getelementptr inbounds i64, i64* %54, i32 1
  store i64* %55, i64** %53, align 8
  br label %originalBB5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_iterator"* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.487
  %4 = load i32, i32* @y.488
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %12 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %11, align 8
  store %"struct.std::_Bit_iterator"* %1, %"struct.std::_Bit_iterator"** %12, align 8
  %13 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %11, align 8
  %14 = bitcast %"struct.std::_Bit_const_iterator"* %13 to %"struct.std::_Bit_iterator_base"*
  %15 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12, align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %15 to %"struct.std::_Bit_iterator_base"*
  %17 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %16, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12, align 8
  %20 = bitcast %"struct.std::_Bit_iterator"* %19 to %"struct.std::_Bit_iterator_base"*
  %21 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %14, i64* %18, i32 %22)
  %23 = load i32, i32* @x.487
  %24 = load i32, i32* @y.488
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %31 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %32 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %31, align 8
  store %"struct.std::_Bit_iterator"* %1, %"struct.std::_Bit_iterator"** %32, align 8
  %33 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %31, align 8
  %34 = bitcast %"struct.std::_Bit_const_iterator"* %33 to %"struct.std::_Bit_iterator_base"*
  %35 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %32, align 8
  %36 = bitcast %"struct.std::_Bit_iterator"* %35 to %"struct.std::_Bit_iterator_base"*
  %37 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %36, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %32, align 8
  %40 = bitcast %"struct.std::_Bit_iterator"* %39 to %"struct.std::_Bit_iterator_base"*
  %41 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %40, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %34, i64* %38, i32 %42)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIbSaIbEEEEvT_S6_(%"class.std::vector.7"*, %"class.std::vector.7"*) #0 comdat align 2 {
  %3 = load i32, i32* @x.489
  %4 = load i32, i32* @y.490
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.7"*, align 8
  %12 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %11, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %12, align 8
  %13 = load i32, i32* @x.489
  %14 = load i32, i32* @y.490
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %21

; <label>:21:                                     ; preds = %44, %originalBBpart2
  %22 = load i32, i32* @x.489
  %23 = load i32, i32* @y.490
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load %"class.std::vector.7"*, %"class.std::vector.7"** %11, align 8
  %31 = load %"class.std::vector.7"*, %"class.std::vector.7"** %12, align 8
  %32 = icmp ne %"class.std::vector.7"* %30, %31
  %33 = load i32, i32* @x.489
  %34 = load i32, i32* @y.490
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %32, label %41, label %47

; <label>:41:                                     ; preds = %originalBBpart24
  %42 = load %"class.std::vector.7"*, %"class.std::vector.7"** %11, align 8
  %43 = call %"class.std::vector.7"* @_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_(%"class.std::vector.7"* dereferenceable(40) %42)
  call void @_ZSt8_DestroyISt6vectorIbSaIbEEEvPT_(%"class.std::vector.7"* %43)
  br label %44

; <label>:44:                                     ; preds = %41
  %45 = load %"class.std::vector.7"*, %"class.std::vector.7"** %11, align 8
  %46 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %45, i32 1
  store %"class.std::vector.7"* %46, %"class.std::vector.7"** %11, align 8
  br label %21

; <label>:47:                                     ; preds = %originalBBpart24
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %48 = alloca %"class.std::vector.7"*, align 8
  %49 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %48, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %49, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  %50 = load %"class.std::vector.7"*, %"class.std::vector.7"** %11, align 8
  %51 = load %"class.std::vector.7"*, %"class.std::vector.7"** %12, align 8
  %52 = icmp ne %"class.std::vector.7"* %50, %51
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIbSaIbEEEvPT_(%"class.std::vector.7"*) #0 comdat {
  %2 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %2, align 8
  %3 = load %"class.std::vector.7"*, %"class.std::vector.7"** %2, align 8
  call void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.7"* %3)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.24"*, %"class.std::vector.7"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.24"*, align 8
  %5 = alloca %"class.std::vector.7"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %4, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %4, align 8
  %8 = load %"class.std::vector.7"*, %"class.std::vector.7"** %5, align 8
  %9 = icmp ne %"class.std::vector.7"* %8, null
  br i1 %9, label %10, label %31

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* @x.493
  %12 = load i32, i32* @y.494
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %7, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %19 to %"class.std::allocator.25"*
  %21 = load %"class.std::vector.7"*, %"class.std::vector.7"** %5, align 8
  %22 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.25"* dereferenceable(1) %20, %"class.std::vector.7"* %21, i64 %22)
  %23 = load i32, i32* @x.493
  %24 = load i32, i32* @y.494
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2, %3
  %32 = load i32, i32* @x.493
  %33 = load i32, i32* @y.494
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i32, i32* @x.493
  %41 = load i32, i32* @y.494
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %48 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %7, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %48 to %"class.std::allocator.25"*
  %50 = load %"class.std::vector.7"*, %"class.std::vector.7"** %5, align 8
  %51 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.25"* dereferenceable(1) %49, %"class.std::vector.7"* %50, i64 %51)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.25"* dereferenceable(1), %"class.std::vector.7"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.25"*, align 8
  %5 = alloca %"class.std::vector.7"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %4, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  %8 = bitcast %"class.std::allocator.25"* %7 to %"class.__gnu_cxx::new_allocator.26"*
  %9 = load %"class.std::vector.7"*, %"class.std::vector.7"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.26"* %8, %"class.std::vector.7"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.26"*, %"class.std::vector.7"*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %5 = alloca %"class.std::vector.7"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  %8 = load %"class.std::vector.7"*, %"class.std::vector.7"** %5, align 8
  %9 = bitcast %"class.std::vector.7"* %8 to i8*
  call void @_ZdlPv(i8* %9) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIbSaIbEES2_EvT_S4_RSaIT0_E(%"class.std::vector.7"*, %"class.std::vector.7"*, %"class.std::allocator.25"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.7"*, align 8
  %5 = alloca %"class.std::vector.7"*, align 8
  %6 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %4, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %5, align 8
  store %"class.std::allocator.25"* %2, %"class.std::allocator.25"** %6, align 8
  %7 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %8 = load %"class.std::vector.7"*, %"class.std::vector.7"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIbSaIbEEEvT_S4_(%"class.std::vector.7"* %7, %"class.std::vector.7"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.501
  %3 = load i32, i32* @y.502
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %10, align 8
  %11 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %12)
  %13 = load i32, i32* @x.501
  %14 = load i32, i32* @y.502
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %21, align 8
  %22 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %22, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %23)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.503
  %3 = load i32, i32* @y.504
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"** %10, align 8
  %13 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"** %10, align 8
  %14 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %13 to %"class.std::allocator"*
  call void @_ZNSaISt4pairIjjEEC2Ev(%"class.std::allocator"* %14) #12
  %15 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %13 to %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*
  %16 = load i32, i32* @x.503
  %17 = load i32, i32* @y.504
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %15)
          to label %24 unwind label %25

; <label>:24:                                     ; preds = %originalBBpart2
  ret void

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load i32, i32* @x.503
  %27 = load i32, i32* @y.504
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %11, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %12, align 4
  %37 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %13 to %"class.std::allocator"*
  call void @_ZNSaISt4pairIjjEED2Ev(%"class.std::allocator"* %37) #12
  %38 = load i32, i32* @x.503
  %39 = load i32, i32* @y.504
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:46:                                     ; preds = %originalBBpart24
  %47 = load i8*, i8** %11, align 8
  %48 = load i32, i32* %12, align 4
  %49 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  resume { i8*, i32 } %50

originalBBalteredBB:                              ; preds = %originalBB, %1
  %51 = alloca %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"*, align 8
  %52 = alloca i8*
  %53 = alloca i32
  store %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"** %51, align 8
  %54 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"** %51, align 8
  %55 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %54 to %"class.std::allocator"*
  call void @_ZNSaISt4pairIjjEEC2Ev(%"class.std::allocator"* %55) #12
  %56 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %54 to %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %11, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %12, align 4
  %60 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %13 to %"class.std::allocator"*
  call void @_ZNSaISt4pairIjjEED2Ev(%"class.std::allocator"* %60) #12
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIjjEEC2Ev(%"class.std::allocator"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.505
  %3 = load i32, i32* @y.506
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %10, align 8
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %10, align 8
  %12 = bitcast %"class.std::allocator"* %11 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIjjEEC2Ev(%"class.__gnu_cxx::new_allocator"* %12) #12
  %13 = load i32, i32* @x.505
  %14 = load i32, i32* @y.506
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %21, align 8
  %22 = load %"class.std::allocator"*, %"class.std::allocator"** %21, align 8
  %23 = bitcast %"class.std::allocator"* %22 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIjjEEC2Ev(%"class.__gnu_cxx::new_allocator"* %23) #12
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIjjEED2Ev(%"class.std::allocator"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.507
  %3 = load i32, i32* @y.508
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %10, align 8
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %10, align 8
  %12 = bitcast %"class.std::allocator"* %11 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIjjEED2Ev(%"class.__gnu_cxx::new_allocator"* %12) #12
  %13 = load i32, i32* @x.507
  %14 = load i32, i32* @y.508
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %21, align 8
  %22 = load %"class.std::allocator"*, %"class.std::allocator"** %21, align 8
  %23 = bitcast %"class.std::allocator"* %22 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIjjEED2Ev(%"class.__gnu_cxx::new_allocator"* %23) #12
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIjjEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIjjEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt4pairIjjES1_EvT_S3_RSaIT0_E(%"struct.std::pair"*, %"struct.std::pair"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = load i32, i32* @x.513
  %5 = load i32, i32* @y.514
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::pair"*, align 8
  %13 = alloca %"struct.std::pair"*, align 8
  %14 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %12, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %13, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %14, align 8
  %15 = load %"struct.std::pair"*, %"struct.std::pair"** %12, align 8
  %16 = load %"struct.std::pair"*, %"struct.std::pair"** %13, align 8
  call void @_ZSt8_DestroyIPSt4pairIjjEEvT_S3_(%"struct.std::pair"* %15, %"struct.std::pair"* %16)
  %17 = load i32, i32* @x.513
  %18 = load i32, i32* @y.514
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %25 = alloca %"struct.std::pair"*, align 8
  %26 = alloca %"struct.std::pair"*, align 8
  %27 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %25, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %26, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %27, align 8
  %28 = load %"struct.std::pair"*, %"struct.std::pair"** %25, align 8
  %29 = load %"struct.std::pair"*, %"struct.std::pair"** %26, align 8
  call void @_ZSt8_DestroyIPSt4pairIjjEEvT_S3_(%"struct.std::pair"* %28, %"struct.std::pair"* %29)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load %"struct.std::pair"*, %"struct.std::pair"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %"struct.std::pair"*, %"struct.std::pair"** %16, align 8
  %18 = ptrtoint %"struct.std::pair"* %13 to i64
  %19 = ptrtoint %"struct.std::pair"* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 8
  invoke void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %5, %"struct.std::pair"* %9, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %23) #12
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %28) #12
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt4pairIjjEEvT_S3_(%"struct.std::pair"*, %"struct.std::pair"*) #0 comdat {
  %3 = load i32, i32* @x.519
  %4 = load i32, i32* @y.520
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::pair"*, align 8
  %12 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %11, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %12, align 8
  %13 = load %"struct.std::pair"*, %"struct.std::pair"** %11, align 8
  %14 = load %"struct.std::pair"*, %"struct.std::pair"** %12, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIjjEEEvT_S5_(%"struct.std::pair"* %13, %"struct.std::pair"* %14)
  %15 = load i32, i32* @x.519
  %16 = load i32, i32* @y.520
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %"struct.std::pair"*, align 8
  %24 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %23, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %24, align 8
  %25 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  %26 = load %"struct.std::pair"*, %"struct.std::pair"** %24, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIjjEEEvT_S5_(%"struct.std::pair"* %25, %"struct.std::pair"* %26)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIjjEEEvT_S5_(%"struct.std::pair"*, %"struct.std::pair"*) #1 comdat align 2 {
  %3 = alloca %"struct.std::pair"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"*, %"struct.std::pair"*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.523
  %5 = load i32, i32* @y.524
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base"*, align 8
  %13 = alloca %"struct.std::pair"*, align 8
  %14 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %12, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %12, align 8
  %16 = load %"struct.std::pair"*, %"struct.std::pair"** %13, align 8
  %17 = icmp ne %"struct.std::pair"* %16, null
  %18 = load i32, i32* @x.523
  %19 = load i32, i32* @y.524
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %31

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %27 to %"class.std::allocator"*
  %29 = load %"struct.std::pair"*, %"struct.std::pair"** %13, align 8
  %30 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIjjEES2_E10deallocateERS3_PS2_m(%"class.std::allocator"* dereferenceable(1) %28, %"struct.std::pair"* %29, i64 %30)
  br label %31

; <label>:31:                                     ; preds = %26, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %32 = alloca %"struct.std::_Vector_base"*, align 8
  %33 = alloca %"struct.std::pair"*, align 8
  %34 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %32, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %33, align 8
  store i64 %2, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %32, align 8
  %36 = load %"struct.std::pair"*, %"struct.std::pair"** %33, align 8
  %37 = icmp ne %"struct.std::pair"* %36, null
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.525
  %3 = load i32, i32* @y.526
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"** %10, align 8
  %11 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"** %10, align 8
  %12 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %11 to %"class.std::allocator"*
  call void @_ZNSaISt4pairIjjEED2Ev(%"class.std::allocator"* %12) #12
  %13 = load i32, i32* @x.525
  %14 = load i32, i32* @y.526
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"** %21, align 8
  %22 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"** %21, align 8
  %23 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %22 to %"class.std::allocator"*
  call void @_ZNSaISt4pairIjjEED2Ev(%"class.std::allocator"* %23) #12
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIjjEES2_E10deallocateERS3_PS2_m(%"class.std::allocator"* dereferenceable(1), %"struct.std::pair"*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.527
  %5 = load i32, i32* @y.528
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator"*, align 8
  %13 = alloca %"struct.std::pair"*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %12, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator"*, %"class.std::allocator"** %12, align 8
  %16 = bitcast %"class.std::allocator"* %15 to %"class.__gnu_cxx::new_allocator"*
  %17 = load %"struct.std::pair"*, %"struct.std::pair"** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIjjEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* %16, %"struct.std::pair"* %17, i64 %18)
  %19 = load i32, i32* @x.527
  %20 = load i32, i32* @y.528
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator"*, align 8
  %28 = alloca %"struct.std::pair"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %27, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator"*, %"class.std::allocator"** %27, align 8
  %31 = bitcast %"class.std::allocator"* %30 to %"class.__gnu_cxx::new_allocator"*
  %32 = load %"struct.std::pair"*, %"struct.std::pair"** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIjjEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* %31, %"struct.std::pair"* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIjjEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"*, %"struct.std::pair"*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"struct.std::pair"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  %9 = bitcast %"struct.std::pair"* %8 to i8*
  call void @_ZdlPv(i8* %9) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* dereferenceable(24)) #0 comdat align 2 {
  %3 = load i32, i32* @x.531
  %4 = load i32, i32* @y.532
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, align 8
  %12 = alloca %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, align 8
  %13 = alloca %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", align 8
  store %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %11, align 8
  store %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %1, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %12, align 8
  %14 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %11, align 8
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %13)
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %13, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* dereferenceable(24) %14)
  %15 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %12, align 8
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %14, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* dereferenceable(24) %15)
  %16 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %12, align 8
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %16, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* dereferenceable(24) %13)
  %17 = load i32, i32* @x.531
  %18 = load i32, i32* @y.532
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, align 8
  %26 = alloca %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, align 8
  %27 = alloca %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", align 8
  store %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %25, align 8
  store %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %1, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %26, align 8
  %28 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %25, align 8
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %27)
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %27, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* dereferenceable(24) %28)
  %29 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %26, align 8
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %28, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* dereferenceable(24) %29)
  %30 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %26, align 8
  call void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %30, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* dereferenceable(24) %27)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIjjEES2_E10_S_on_swapERS3_S5_(%"class.std::allocator"* dereferenceable(1), %"class.std::allocator"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSt12__alloc_swapISaISt4pairIjjEELb1EE8_S_do_itERS2_S4_(%"class.std::allocator"* dereferenceable(1) %5, %"class.std::allocator"* dereferenceable(1) %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %3, i32 0, i32 0
  store %"struct.std::pair"* null, %"struct.std::pair"** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %3, i32 0, i32 1
  store %"struct.std::pair"* null, %"struct.std::pair"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %3, i32 0, i32 2
  store %"struct.std::pair"* null, %"struct.std::pair"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_(%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, align 8
  %4 = alloca %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %3, align 8
  store %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %1, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %3, align 8
  %6 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %6, i32 0, i32 0
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %5, i32 0, i32 0
  store %"struct.std::pair"* %8, %"struct.std::pair"** %9, align 8
  %10 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %10, i32 0, i32 1
  %12 = load %"struct.std::pair"*, %"struct.std::pair"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %5, i32 0, i32 1
  store %"struct.std::pair"* %12, %"struct.std::pair"** %13, align 8
  %14 = load %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"** %4, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %14, i32 0, i32 2
  %16 = load %"struct.std::pair"*, %"struct.std::pair"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %5, i32 0, i32 2
  store %"struct.std::pair"* %16, %"struct.std::pair"** %17, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12__alloc_swapISaISt4pairIjjEELb1EE8_S_do_itERS2_S4_(%"class.std::allocator"* dereferenceable(1), %"class.std::allocator"* dereferenceable(1)) #1 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E6TensorILi1ELi3EEE6reinitERK12TableIndicesILi2EE(%class.TableBase.51*, %class.TableIndices* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.TableBase.51*, align 8
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.TableIndices, align 4
  %7 = alloca i8*
  %8 = alloca i32
  store %class.TableBase.51* %0, %class.TableBase.51** %3, align 8
  store %class.TableIndices* %1, %class.TableIndices** %4, align 8
  %9 = load %class.TableBase.51*, %class.TableBase.51** %3, align 8
  %10 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %11 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %9, i32 0, i32 3
  %12 = bitcast %class.TableIndices* %11 to i8*
  %13 = bitcast %class.TableIndices* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 4, i1 false)
  %14 = call i32 @_ZNK9TableBaseILi2E6TensorILi1ELi3EEE10n_elementsEv(%class.TableBase.51* %9)
  store i32 %14, i32* %5, align 4
  %15 = load i32, i32* %5, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %50

; <label>:17:                                     ; preds = %2
  %18 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %9, i32 0, i32 1
  %19 = load %class.Tensor*, %class.Tensor** %18, align 8
  %20 = icmp ne %class.Tensor* %19, null
  br i1 %20, label %21, label %44

; <label>:21:                                     ; preds = %17
  %22 = load i32, i32* @x.541
  %23 = load i32, i32* @y.542
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %9, i32 0, i32 1
  %31 = load %class.Tensor*, %class.Tensor** %30, align 8
  %32 = icmp eq %class.Tensor* %31, null
  %33 = load i32, i32* @x.541
  %34 = load i32, i32* @y.542
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %32, label %43, label %41

; <label>:41:                                     ; preds = %originalBBpart2
  %42 = bitcast %class.Tensor* %31 to i8*
  call void @_ZdaPv(i8* %42) #14
  br label %43

; <label>:43:                                     ; preds = %41, %originalBBpart2
  br label %44

; <label>:44:                                     ; preds = %43, %17
  %45 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %9, i32 0, i32 1
  store %class.Tensor* null, %class.Tensor** %45, align 8
  %46 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %9, i32 0, i32 2
  store i32 0, i32* %46, align 8
  call void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %6)
  %47 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %9, i32 0, i32 3
  %48 = bitcast %class.TableIndices* %47 to i8*
  %49 = bitcast %class.TableIndices* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 4, i1 false)
  br label %141

; <label>:50:                                     ; preds = %2
  %51 = load i32, i32* @x.541
  %52 = load i32, i32* @y.542
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %50, %originalBB1alteredBB
  %59 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %9, i32 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = load i32, i32* %5, align 4
  %62 = icmp ult i32 %60, %61
  %63 = load i32, i32* @x.541
  %64 = load i32, i32* @y.542
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %62, label %71, label %124

; <label>:71:                                     ; preds = %originalBBpart24
  %72 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %9, i32 0, i32 1
  %73 = load %class.Tensor*, %class.Tensor** %72, align 8
  %74 = icmp ne %class.Tensor* %73, null
  br i1 %74, label %75, label %82

; <label>:75:                                     ; preds = %71
  %76 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %9, i32 0, i32 1
  %77 = load %class.Tensor*, %class.Tensor** %76, align 8
  %78 = icmp eq %class.Tensor* %77, null
  br i1 %78, label %81, label %79

; <label>:79:                                     ; preds = %75
  %80 = bitcast %class.Tensor* %77 to i8*
  call void @_ZdaPv(i8* %80) #14
  br label %81

; <label>:81:                                     ; preds = %79, %75
  br label %82

; <label>:82:                                     ; preds = %81, %71
  %83 = load i32, i32* %5, align 4
  %84 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %9, i32 0, i32 2
  store i32 %83, i32* %84, align 8
  %85 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %9, i32 0, i32 2
  %86 = load i32, i32* %85, align 8
  %87 = zext i32 %86 to i64
  %88 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %87, i64 24)
  %89 = extractvalue { i64, i1 } %88, 1
  %90 = extractvalue { i64, i1 } %88, 0
  %91 = select i1 %89, i64 -1, i64 %90
  %92 = call i8* @_Znam(i64 %91) #13
  %93 = bitcast i8* %92 to %class.Tensor*
  %94 = icmp eq i64 %87, 0
  br i1 %94, label %118, label %95

; <label>:95:                                     ; preds = %82
  %96 = load i32, i32* @x.541
  %97 = load i32, i32* @y.542
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %95, %originalBB6alteredBB
  %104 = getelementptr inbounds %class.Tensor, %class.Tensor* %93, i64 %87
  %105 = load i32, i32* @x.541
  %106 = load i32, i32* @y.542
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %113

; <label>:113:                                    ; preds = %115, %originalBBpart28
  %114 = phi %class.Tensor* [ %93, %originalBBpart28 ], [ %116, %115 ]
  invoke void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %114, i1 zeroext true)
          to label %115 unwind label %120

; <label>:115:                                    ; preds = %113
  %116 = getelementptr inbounds %class.Tensor, %class.Tensor* %114, i64 1
  %117 = icmp eq %class.Tensor* %116, %104
  br i1 %117, label %118, label %113

; <label>:118:                                    ; preds = %115, %82
  %119 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %9, i32 0, i32 1
  store %class.Tensor* %93, %class.Tensor** %119, align 8
  br label %124

; <label>:120:                                    ; preds = %113
  %121 = landingpad { i8*, i32 }
          cleanup
  %122 = extractvalue { i8*, i32 } %121, 0
  store i8* %122, i8** %7, align 8
  %123 = extractvalue { i8*, i32 } %121, 1
  store i32 %123, i32* %8, align 4
  call void @_ZdaPv(i8* %92) #14
  br label %158

; <label>:124:                                    ; preds = %118, %originalBBpart24
  %125 = load i32, i32* @x.541
  %126 = load i32, i32* @y.542
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %124, %originalBB10alteredBB
  call void @_ZN9TableBaseILi2E6TensorILi1ELi3EEE12reset_valuesEv(%class.TableBase.51* %9)
  %133 = load i32, i32* @x.541
  %134 = load i32, i32* @y.542
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %141

; <label>:141:                                    ; preds = %originalBBpart212, %44
  %142 = load i32, i32* @x.541
  %143 = load i32, i32* @y.542
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %141, %originalBB14alteredBB
  %150 = load i32, i32* @x.541
  %151 = load i32, i32* @y.542
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret void

; <label>:158:                                    ; preds = %120
  %159 = load i8*, i8** %7, align 8
  %160 = load i32, i32* %8, align 4
  %161 = insertvalue { i8*, i32 } undef, i8* %159, 0
  %162 = insertvalue { i8*, i32 } %161, i32 %160, 1
  resume { i8*, i32 } %162

originalBBalteredBB:                              ; preds = %originalBB, %21
  %163 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %9, i32 0, i32 1
  %164 = load %class.Tensor*, %class.Tensor** %163, align 8
  %165 = icmp eq %class.Tensor* %164, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %50
  %166 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %9, i32 0, i32 2
  %167 = load i32, i32* %166, align 8
  %168 = load i32, i32* %5, align 4
  %169 = icmp ult i32 %167, %168
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %95
  %170 = getelementptr inbounds %class.Tensor, %class.Tensor* %93, i64 %87
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %124
  call void @_ZN9TableBaseILi2E6TensorILi1ELi3EEE12reset_valuesEv(%class.TableBase.51* %9)
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %141
  br label %originalBB14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices*, i32, i32) unnamed_addr #1 comdat align 2 {
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.TableIndices* %0, %class.TableIndices** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %8 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %9 = load i32, i32* %5, align 4
  %10 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %11 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %10, i32 0, i32 0
  %12 = getelementptr inbounds [2 x i32], [2 x i32]* %11, i64 0, i64 0
  store i32 %9, i32* %12, align 4
  %13 = load i32, i32* %6, align 4
  %14 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %15 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %14, i32 0, i32 0
  %16 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  store i32 %13, i32* %16, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK9TableBaseILi2E6TensorILi1ELi3EEE10n_elementsEv(%class.TableBase.51*) #0 comdat align 2 {
  %2 = load i32, i32* @x.545
  %3 = load i32, i32* @y.546
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase.51*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %class.TableBase.51* %0, %class.TableBase.51** %10, align 8
  %13 = load %class.TableBase.51*, %class.TableBase.51** %10, align 8
  store i32 1, i32* %11, align 4
  store i32 0, i32* %12, align 4
  %14 = load i32, i32* @x.545
  %15 = load i32, i32* @y.546
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %22

; <label>:22:                                     ; preds = %32, %originalBBpart2
  %23 = load i32, i32* %12, align 4
  %24 = icmp ult i32 %23, 2
  br i1 %24, label %25, label %35

; <label>:25:                                     ; preds = %22
  %26 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %13, i32 0, i32 3
  %27 = bitcast %class.TableIndices* %26 to %class.TableIndicesBase*
  %28 = load i32, i32* %12, align 4
  %29 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %27, i32 %28)
  %30 = load i32, i32* %11, align 4
  %31 = mul i32 %30, %29
  store i32 %31, i32* %11, align 4
  br label %32

; <label>:32:                                     ; preds = %25
  %33 = load i32, i32* %12, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %12, align 4
  br label %22

; <label>:35:                                     ; preds = %22
  %36 = load i32, i32* %11, align 4
  ret i32 %36

originalBBalteredBB:                              ; preds = %originalBB, %1
  %37 = alloca %class.TableBase.51*, align 8
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  store %class.TableBase.51* %0, %class.TableBase.51** %37, align 8
  %40 = load %class.TableBase.51*, %class.TableBase.51** %37, align 8
  store i32 1, i32* %38, align 4
  store i32 0, i32* %39, align 4
  br label %originalBB
}

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

; Function Attrs: nobuiltin
declare noalias i8* @_Znam(i64) #4

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E6TensorILi1ELi3EEE12reset_valuesEv(%class.TableBase.51*) #0 comdat align 2 {
  %2 = alloca %class.TableBase.51*, align 8
  %3 = alloca %class.Tensor, align 8
  store %class.TableBase.51* %0, %class.TableBase.51** %2, align 8
  %4 = load %class.TableBase.51*, %class.TableBase.51** %2, align 8
  %5 = call i32 @_ZNK9TableBaseILi2E6TensorILi1ELi3EEE10n_elementsEv(%class.TableBase.51* %4)
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %28

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.547
  %9 = load i32, i32* @y.548
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %4, i32 0, i32 1
  %17 = load %class.Tensor*, %class.Tensor** %16, align 8
  %18 = call i32 @_ZNK9TableBaseILi2E6TensorILi1ELi3EEE10n_elementsEv(%class.TableBase.51* %4)
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %3, i1 zeroext true)
  %19 = call %class.Tensor* @_ZSt6fill_nIP6TensorILi1ELi3EEjS1_ET_S3_T0_RKT1_(%class.Tensor* %17, i32 %18, %class.Tensor* dereferenceable(24) %3)
  %20 = load i32, i32* @x.547
  %21 = load i32, i32* @y.548
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %originalBBpart2, %1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %7
  %29 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %4, i32 0, i32 1
  %30 = load %class.Tensor*, %class.Tensor** %29, align 8
  %31 = call i32 @_ZNK9TableBaseILi2E6TensorILi1ELi3EEE10n_elementsEv(%class.TableBase.51* %4)
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %3, i1 zeroext true)
  %32 = call %class.Tensor* @_ZSt6fill_nIP6TensorILi1ELi3EEjS1_ET_S3_T0_RKT1_(%class.Tensor* %30, i32 %31, %class.Tensor* dereferenceable(24) %3)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase*, i32) #1 comdat align 2 {
  %3 = alloca %class.TableIndicesBase*, align 8
  %4 = alloca i32, align 4
  store %class.TableIndicesBase* %0, %class.TableIndicesBase** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.TableIndicesBase*, %class.TableIndicesBase** %3, align 8
  %6 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  ret i32 %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZSt6fill_nIP6TensorILi1ELi3EEjS1_ET_S3_T0_RKT1_(%class.Tensor*, i32, %class.Tensor* dereferenceable(24)) #0 comdat {
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.Tensor* %2, %class.Tensor** %6, align 8
  %7 = load %class.Tensor*, %class.Tensor** %4, align 8
  %8 = call %class.Tensor* @_ZSt12__niter_baseIP6TensorILi1ELi3EEET_S3_(%class.Tensor* %7)
  %9 = load i32, i32* %5, align 4
  %10 = load %class.Tensor*, %class.Tensor** %6, align 8
  %11 = call %class.Tensor* @_ZSt10__fill_n_aIP6TensorILi1ELi3EEjS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_(%class.Tensor* %8, i32 %9, %class.Tensor* dereferenceable(24) %10)
  %12 = call %class.Tensor* @_ZSt12__niter_wrapIP6TensorILi1ELi3EEET_RKS3_S3_(%class.Tensor** dereferenceable(8) %4, %class.Tensor* %11)
  ret %class.Tensor* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Tensor* @_ZSt12__niter_wrapIP6TensorILi1ELi3EEET_RKS3_S3_(%class.Tensor** dereferenceable(8), %class.Tensor*) #1 comdat {
  %3 = alloca %class.Tensor**, align 8
  %4 = alloca %class.Tensor*, align 8
  store %class.Tensor** %0, %class.Tensor*** %3, align 8
  store %class.Tensor* %1, %class.Tensor** %4, align 8
  %5 = load %class.Tensor*, %class.Tensor** %4, align 8
  ret %class.Tensor* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZSt10__fill_n_aIP6TensorILi1ELi3EEjS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_(%class.Tensor*, i32, %class.Tensor* dereferenceable(24)) #0 comdat {
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.Tensor*, align 8
  %7 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.Tensor* %2, %class.Tensor** %6, align 8
  %8 = load i32, i32* %5, align 4
  store i32 %8, i32* %7, align 4
  br label %9

; <label>:9:                                      ; preds = %16, %3
  %10 = load i32, i32* %7, align 4
  %11 = icmp ugt i32 %10, 0
  br i1 %11, label %12, label %21

; <label>:12:                                     ; preds = %9
  %13 = load %class.Tensor*, %class.Tensor** %6, align 8
  %14 = load %class.Tensor*, %class.Tensor** %4, align 8
  %15 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor* %14, %class.Tensor* dereferenceable(24) %13)
  br label %16

; <label>:16:                                     ; preds = %12
  %17 = load i32, i32* %7, align 4
  %18 = add i32 %17, -1
  store i32 %18, i32* %7, align 4
  %19 = load %class.Tensor*, %class.Tensor** %4, align 8
  %20 = getelementptr inbounds %class.Tensor, %class.Tensor* %19, i32 1
  store %class.Tensor* %20, %class.Tensor** %4, align 8
  br label %9

; <label>:21:                                     ; preds = %9
  %22 = load %class.Tensor*, %class.Tensor** %4, align 8
  ret %class.Tensor* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Tensor* @_ZSt12__niter_baseIP6TensorILi1ELi3EEET_S3_(%class.Tensor*) #1 comdat {
  %2 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %2, align 8
  %3 = load %class.Tensor*, %class.Tensor** %2, align 8
  ret %class.Tensor* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E6TensorILi2ELi3EEE6reinitERK12TableIndicesILi2EE(%class.TableBase.55*, %class.TableIndices* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.TableBase.55*, align 8
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.TableIndices, align 4
  %7 = alloca i8*
  %8 = alloca i32
  store %class.TableBase.55* %0, %class.TableBase.55** %3, align 8
  store %class.TableIndices* %1, %class.TableIndices** %4, align 8
  %9 = load %class.TableBase.55*, %class.TableBase.55** %3, align 8
  %10 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %11 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 3
  %12 = bitcast %class.TableIndices* %11 to i8*
  %13 = bitcast %class.TableIndices* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 4, i1 false)
  %14 = call i32 @_ZNK9TableBaseILi2E6TensorILi2ELi3EEE10n_elementsEv(%class.TableBase.55* %9)
  store i32 %14, i32* %5, align 4
  %15 = load i32, i32* %5, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %50

; <label>:17:                                     ; preds = %2
  %18 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 1
  %19 = load %class.Tensor.33*, %class.Tensor.33** %18, align 8
  %20 = icmp ne %class.Tensor.33* %19, null
  br i1 %20, label %21, label %28

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 1
  %23 = load %class.Tensor.33*, %class.Tensor.33** %22, align 8
  %24 = icmp eq %class.Tensor.33* %23, null
  br i1 %24, label %27, label %25

; <label>:25:                                     ; preds = %21
  %26 = bitcast %class.Tensor.33* %23 to i8*
  call void @_ZdaPv(i8* %26) #14
  br label %27

; <label>:27:                                     ; preds = %25, %21
  br label %28

; <label>:28:                                     ; preds = %27, %17
  %29 = load i32, i32* @x.559
  %30 = load i32, i32* @y.560
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %28, %originalBBalteredBB
  %37 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 1
  store %class.Tensor.33* null, %class.Tensor.33** %37, align 8
  %38 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 2
  store i32 0, i32* %38, align 8
  call void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %6)
  %39 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 3
  %40 = bitcast %class.TableIndices* %39 to i8*
  %41 = bitcast %class.TableIndices* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 4, i1 false)
  %42 = load i32, i32* @x.559
  %43 = load i32, i32* @y.560
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %109

; <label>:50:                                     ; preds = %2
  %51 = load i32, i32* @x.559
  %52 = load i32, i32* @y.560
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %50, %originalBB1alteredBB
  %59 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = load i32, i32* %5, align 4
  %62 = icmp ult i32 %60, %61
  %63 = load i32, i32* @x.559
  %64 = load i32, i32* @y.560
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %62, label %71, label %108

; <label>:71:                                     ; preds = %originalBBpart24
  %72 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 1
  %73 = load %class.Tensor.33*, %class.Tensor.33** %72, align 8
  %74 = icmp ne %class.Tensor.33* %73, null
  br i1 %74, label %75, label %82

; <label>:75:                                     ; preds = %71
  %76 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 1
  %77 = load %class.Tensor.33*, %class.Tensor.33** %76, align 8
  %78 = icmp eq %class.Tensor.33* %77, null
  br i1 %78, label %81, label %79

; <label>:79:                                     ; preds = %75
  %80 = bitcast %class.Tensor.33* %77 to i8*
  call void @_ZdaPv(i8* %80) #14
  br label %81

; <label>:81:                                     ; preds = %79, %75
  br label %82

; <label>:82:                                     ; preds = %81, %71
  %83 = load i32, i32* %5, align 4
  %84 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 2
  store i32 %83, i32* %84, align 8
  %85 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 2
  %86 = load i32, i32* %85, align 8
  %87 = zext i32 %86 to i64
  %88 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %87, i64 72)
  %89 = extractvalue { i64, i1 } %88, 1
  %90 = extractvalue { i64, i1 } %88, 0
  %91 = select i1 %89, i64 -1, i64 %90
  %92 = call i8* @_Znam(i64 %91) #13
  %93 = bitcast i8* %92 to %class.Tensor.33*
  %94 = icmp eq i64 %87, 0
  br i1 %94, label %102, label %95

; <label>:95:                                     ; preds = %82
  %96 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %93, i64 %87
  br label %97

; <label>:97:                                     ; preds = %99, %95
  %98 = phi %class.Tensor.33* [ %93, %95 ], [ %100, %99 ]
  invoke void @_ZN6TensorILi2ELi3EEC2Ev(%class.Tensor.33* %98)
          to label %99 unwind label %104

; <label>:99:                                     ; preds = %97
  %100 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %98, i64 1
  %101 = icmp eq %class.Tensor.33* %100, %96
  br i1 %101, label %102, label %97

; <label>:102:                                    ; preds = %99, %82
  %103 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 1
  store %class.Tensor.33* %93, %class.Tensor.33** %103, align 8
  br label %108

; <label>:104:                                    ; preds = %97
  %105 = landingpad { i8*, i32 }
          cleanup
  %106 = extractvalue { i8*, i32 } %105, 0
  store i8* %106, i8** %7, align 8
  %107 = extractvalue { i8*, i32 } %105, 1
  store i32 %107, i32* %8, align 4
  call void @_ZdaPv(i8* %92) #14
  br label %110

; <label>:108:                                    ; preds = %102, %originalBBpart24
  call void @_ZN9TableBaseILi2E6TensorILi2ELi3EEE12reset_valuesEv(%class.TableBase.55* %9)
  br label %109

; <label>:109:                                    ; preds = %108, %originalBBpart2
  ret void

; <label>:110:                                    ; preds = %104
  %111 = load i8*, i8** %7, align 8
  %112 = load i32, i32* %8, align 4
  %113 = insertvalue { i8*, i32 } undef, i8* %111, 0
  %114 = insertvalue { i8*, i32 } %113, i32 %112, 1
  resume { i8*, i32 } %114

originalBBalteredBB:                              ; preds = %originalBB, %28
  %115 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 1
  store %class.Tensor.33* null, %class.Tensor.33** %115, align 8
  %116 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 2
  store i32 0, i32* %116, align 8
  call void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %6)
  %117 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 3
  %118 = bitcast %class.TableIndices* %117 to i8*
  %119 = bitcast %class.TableIndices* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 8, i32 4, i1 false)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %50
  %120 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %9, i32 0, i32 2
  %121 = load i32, i32* %120, align 8
  %122 = load i32, i32* %5, align 4
  %123 = icmp ult i32 %121, %122
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK9TableBaseILi2E6TensorILi2ELi3EEE10n_elementsEv(%class.TableBase.55*) #1 comdat align 2 {
  %2 = alloca %class.TableBase.55*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %class.TableBase.55* %0, %class.TableBase.55** %2, align 8
  %5 = load %class.TableBase.55*, %class.TableBase.55** %2, align 8
  store i32 1, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %6

; <label>:6:                                      ; preds = %32, %1
  %7 = load i32, i32* %4, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %35

; <label>:9:                                      ; preds = %6
  %10 = load i32, i32* @x.561
  %11 = load i32, i32* @y.562
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %5, i32 0, i32 3
  %19 = bitcast %class.TableIndices* %18 to %class.TableIndicesBase*
  %20 = load i32, i32* %4, align 4
  %21 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %19, i32 %20)
  %22 = load i32, i32* %3, align 4
  %23 = mul i32 %22, %21
  store i32 %23, i32* %3, align 4
  %24 = load i32, i32* @x.561
  %25 = load i32, i32* @y.562
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %32

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load i32, i32* %4, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %4, align 4
  br label %6

; <label>:35:                                     ; preds = %6
  %36 = load i32, i32* %3, align 4
  ret i32 %36

originalBBalteredBB:                              ; preds = %originalBB, %9
  %37 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %5, i32 0, i32 3
  %38 = bitcast %class.TableIndices* %37 to %class.TableIndicesBase*
  %39 = load i32, i32* %4, align 4
  %40 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %38, i32 %39)
  %41 = load i32, i32* %3, align 4
  %_ = shl i32 %41, %40
  %42 = mul i32 %41, %40
  store i32 %42, i32* %3, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E6TensorILi2ELi3EEE12reset_valuesEv(%class.TableBase.55*) #0 comdat align 2 {
  %2 = alloca %class.TableBase.55*, align 8
  %3 = alloca %class.Tensor.33, align 8
  store %class.TableBase.55* %0, %class.TableBase.55** %2, align 8
  %4 = load %class.TableBase.55*, %class.TableBase.55** %2, align 8
  %5 = call i32 @_ZNK9TableBaseILi2E6TensorILi2ELi3EEE10n_elementsEv(%class.TableBase.55* %4)
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %28

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.563
  %9 = load i32, i32* @y.564
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %4, i32 0, i32 1
  %17 = load %class.Tensor.33*, %class.Tensor.33** %16, align 8
  %18 = call i32 @_ZNK9TableBaseILi2E6TensorILi2ELi3EEE10n_elementsEv(%class.TableBase.55* %4)
  call void @_ZN6TensorILi2ELi3EEC2Ev(%class.Tensor.33* %3)
  %19 = call %class.Tensor.33* @_ZSt6fill_nIP6TensorILi2ELi3EEjS1_ET_S3_T0_RKT1_(%class.Tensor.33* %17, i32 %18, %class.Tensor.33* dereferenceable(72) %3)
  %20 = load i32, i32* @x.563
  %21 = load i32, i32* @y.564
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %originalBBpart2, %1
  %29 = load i32, i32* @x.563
  %30 = load i32, i32* @y.564
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load i32, i32* @x.563
  %38 = load i32, i32* @y.564
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %7
  %45 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %4, i32 0, i32 1
  %46 = load %class.Tensor.33*, %class.Tensor.33** %45, align 8
  %47 = call i32 @_ZNK9TableBaseILi2E6TensorILi2ELi3EEE10n_elementsEv(%class.TableBase.55* %4)
  call void @_ZN6TensorILi2ELi3EEC2Ev(%class.Tensor.33* %3)
  %48 = call %class.Tensor.33* @_ZSt6fill_nIP6TensorILi2ELi3EEjS1_ET_S3_T0_RKT1_(%class.Tensor.33* %46, i32 %47, %class.Tensor.33* dereferenceable(72) %3)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor.33* @_ZSt6fill_nIP6TensorILi2ELi3EEjS1_ET_S3_T0_RKT1_(%class.Tensor.33*, i32, %class.Tensor.33* dereferenceable(72)) #0 comdat {
  %4 = load i32, i32* @x.565
  %5 = load i32, i32* @y.566
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Tensor.33*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %class.Tensor.33*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %12, align 8
  store i32 %1, i32* %13, align 4
  store %class.Tensor.33* %2, %class.Tensor.33** %14, align 8
  %15 = load %class.Tensor.33*, %class.Tensor.33** %12, align 8
  %16 = call %class.Tensor.33* @_ZSt12__niter_baseIP6TensorILi2ELi3EEET_S3_(%class.Tensor.33* %15)
  %17 = load i32, i32* %13, align 4
  %18 = load %class.Tensor.33*, %class.Tensor.33** %14, align 8
  %19 = call %class.Tensor.33* @_ZSt10__fill_n_aIP6TensorILi2ELi3EEjS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_(%class.Tensor.33* %16, i32 %17, %class.Tensor.33* dereferenceable(72) %18)
  %20 = call %class.Tensor.33* @_ZSt12__niter_wrapIP6TensorILi2ELi3EEET_RKS3_S3_(%class.Tensor.33** dereferenceable(8) %12, %class.Tensor.33* %19)
  %21 = load i32, i32* @x.565
  %22 = load i32, i32* @y.566
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor.33* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca %class.Tensor.33*, align 8
  %30 = alloca i32, align 4
  %31 = alloca %class.Tensor.33*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %29, align 8
  store i32 %1, i32* %30, align 4
  store %class.Tensor.33* %2, %class.Tensor.33** %31, align 8
  %32 = load %class.Tensor.33*, %class.Tensor.33** %29, align 8
  %33 = call %class.Tensor.33* @_ZSt12__niter_baseIP6TensorILi2ELi3EEET_S3_(%class.Tensor.33* %32)
  %34 = load i32, i32* %30, align 4
  %35 = load %class.Tensor.33*, %class.Tensor.33** %31, align 8
  %36 = call %class.Tensor.33* @_ZSt10__fill_n_aIP6TensorILi2ELi3EEjS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_(%class.Tensor.33* %33, i32 %34, %class.Tensor.33* dereferenceable(72) %35)
  %37 = call %class.Tensor.33* @_ZSt12__niter_wrapIP6TensorILi2ELi3EEET_RKS3_S3_(%class.Tensor.33** dereferenceable(8) %29, %class.Tensor.33* %36)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Tensor.33* @_ZSt12__niter_wrapIP6TensorILi2ELi3EEET_RKS3_S3_(%class.Tensor.33** dereferenceable(8), %class.Tensor.33*) #1 comdat {
  %3 = load i32, i32* @x.567
  %4 = load i32, i32* @y.568
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Tensor.33**, align 8
  %12 = alloca %class.Tensor.33*, align 8
  store %class.Tensor.33** %0, %class.Tensor.33*** %11, align 8
  store %class.Tensor.33* %1, %class.Tensor.33** %12, align 8
  %13 = load %class.Tensor.33*, %class.Tensor.33** %12, align 8
  %14 = load i32, i32* @x.567
  %15 = load i32, i32* @y.568
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor.33* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %class.Tensor.33**, align 8
  %23 = alloca %class.Tensor.33*, align 8
  store %class.Tensor.33** %0, %class.Tensor.33*** %22, align 8
  store %class.Tensor.33* %1, %class.Tensor.33** %23, align 8
  %24 = load %class.Tensor.33*, %class.Tensor.33** %23, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor.33* @_ZSt10__fill_n_aIP6TensorILi2ELi3EEjS1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES6_T0_RKS5_(%class.Tensor.33*, i32, %class.Tensor.33* dereferenceable(72)) #0 comdat {
  %4 = alloca %class.Tensor.33*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.Tensor.33*, align 8
  %7 = alloca i32, align 4
  store %class.Tensor.33* %0, %class.Tensor.33** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.Tensor.33* %2, %class.Tensor.33** %6, align 8
  %8 = load i32, i32* %5, align 4
  store i32 %8, i32* %7, align 4
  br label %9

; <label>:9:                                      ; preds = %16, %3
  %10 = load i32, i32* %7, align 4
  %11 = icmp ugt i32 %10, 0
  br i1 %11, label %12, label %21

; <label>:12:                                     ; preds = %9
  %13 = load %class.Tensor.33*, %class.Tensor.33** %6, align 8
  %14 = load %class.Tensor.33*, %class.Tensor.33** %4, align 8
  %15 = call dereferenceable(72) %class.Tensor.33* @_ZN6TensorILi2ELi3EEaSERKS0_(%class.Tensor.33* %14, %class.Tensor.33* dereferenceable(72) %13)
  br label %16

; <label>:16:                                     ; preds = %12
  %17 = load i32, i32* %7, align 4
  %18 = add i32 %17, -1
  store i32 %18, i32* %7, align 4
  %19 = load %class.Tensor.33*, %class.Tensor.33** %4, align 8
  %20 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %19, i32 1
  store %class.Tensor.33* %20, %class.Tensor.33** %4, align 8
  br label %9

; <label>:21:                                     ; preds = %9
  %22 = load %class.Tensor.33*, %class.Tensor.33** %4, align 8
  ret %class.Tensor.33* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Tensor.33* @_ZSt12__niter_baseIP6TensorILi2ELi3EEET_S3_(%class.Tensor.33*) #1 comdat {
  %2 = alloca %class.Tensor.33*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %2, align 8
  %3 = load %class.Tensor.33*, %class.Tensor.33** %2, align 8
  ret %class.Tensor.33* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK5TableILi2E6TensorILi1ELi3EEE6n_colsEv(%class.Table.50*) #1 comdat align 2 {
  %2 = alloca %class.Table.50*, align 8
  store %class.Table.50* %0, %class.Table.50** %2, align 8
  %3 = load %class.Table.50*, %class.Table.50** %2, align 8
  %4 = bitcast %class.Table.50* %3 to %class.TableBase.51*
  %5 = getelementptr inbounds %class.TableBase.51, %class.TableBase.51* %4, i32 0, i32 3
  %6 = bitcast %class.TableIndices* %5 to %class.TableIndicesBase*
  %7 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %6, i32 1)
  ret i32 %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8internal18TableBaseAccessors8AccessorILi2E6TensorILi1ELi3EELb0ELj1EEC2ERK9TableBaseILi2ES3_EPS3_(%"class.internal::TableBaseAccessors::Accessor"*, %class.TableBase.51* dereferenceable(48), %class.Tensor*) unnamed_addr #1 comdat align 2 {
  %4 = load i32, i32* @x.575
  %5 = load i32, i32* @y.576
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %13 = alloca %class.TableBase.51*, align 8
  %14 = alloca %class.Tensor*, align 8
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %12, align 8
  store %class.TableBase.51* %1, %class.TableBase.51** %13, align 8
  store %class.Tensor* %2, %class.Tensor** %14, align 8
  %15 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %12, align 8
  %16 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %15, i32 0, i32 0
  %17 = load %class.TableBase.51*, %class.TableBase.51** %13, align 8
  store %class.TableBase.51* %17, %class.TableBase.51** %16, align 8
  %18 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %15, i32 0, i32 1
  %19 = load %class.Tensor*, %class.Tensor** %14, align 8
  store %class.Tensor* %19, %class.Tensor** %18, align 8
  %20 = load i32, i32* @x.575
  %21 = load i32, i32* @y.576
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %29 = alloca %class.TableBase.51*, align 8
  %30 = alloca %class.Tensor*, align 8
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %28, align 8
  store %class.TableBase.51* %1, %class.TableBase.51** %29, align 8
  store %class.Tensor* %2, %class.Tensor** %30, align 8
  %31 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %28, align 8
  %32 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %31, i32 0, i32 0
  %33 = load %class.TableBase.51*, %class.TableBase.51** %29, align 8
  store %class.TableBase.51* %33, %class.TableBase.51** %32, align 8
  %34 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %31, i32 0, i32 1
  %35 = load %class.Tensor*, %class.Tensor** %30, align 8
  store %class.Tensor* %35, %class.Tensor** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK5TableILi2E6TensorILi2ELi3EEE6n_colsEv(%class.Table.54*) #1 comdat align 2 {
  %2 = alloca %class.Table.54*, align 8
  store %class.Table.54* %0, %class.Table.54** %2, align 8
  %3 = load %class.Table.54*, %class.Table.54** %2, align 8
  %4 = bitcast %class.Table.54* %3 to %class.TableBase.55*
  %5 = getelementptr inbounds %class.TableBase.55, %class.TableBase.55* %4, i32 0, i32 3
  %6 = bitcast %class.TableIndices* %5 to %class.TableIndicesBase*
  %7 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %6, i32 1)
  ret i32 %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8internal18TableBaseAccessors8AccessorILi2E6TensorILi2ELi3EELb0ELj1EEC2ERK9TableBaseILi2ES3_EPS3_(%"class.internal::TableBaseAccessors::Accessor.58"*, %class.TableBase.55* dereferenceable(48), %class.Tensor.33*) unnamed_addr #1 comdat align 2 {
  %4 = load i32, i32* @x.579
  %5 = load i32, i32* @y.580
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.internal::TableBaseAccessors::Accessor.58"*, align 8
  %13 = alloca %class.TableBase.55*, align 8
  %14 = alloca %class.Tensor.33*, align 8
  store %"class.internal::TableBaseAccessors::Accessor.58"* %0, %"class.internal::TableBaseAccessors::Accessor.58"** %12, align 8
  store %class.TableBase.55* %1, %class.TableBase.55** %13, align 8
  store %class.Tensor.33* %2, %class.Tensor.33** %14, align 8
  %15 = load %"class.internal::TableBaseAccessors::Accessor.58"*, %"class.internal::TableBaseAccessors::Accessor.58"** %12, align 8
  %16 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.58", %"class.internal::TableBaseAccessors::Accessor.58"* %15, i32 0, i32 0
  %17 = load %class.TableBase.55*, %class.TableBase.55** %13, align 8
  store %class.TableBase.55* %17, %class.TableBase.55** %16, align 8
  %18 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.58", %"class.internal::TableBaseAccessors::Accessor.58"* %15, i32 0, i32 1
  %19 = load %class.Tensor.33*, %class.Tensor.33** %14, align 8
  store %class.Tensor.33* %19, %class.Tensor.33** %18, align 8
  %20 = load i32, i32* @x.579
  %21 = load i32, i32* @y.580
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %"class.internal::TableBaseAccessors::Accessor.58"*, align 8
  %29 = alloca %class.TableBase.55*, align 8
  %30 = alloca %class.Tensor.33*, align 8
  store %"class.internal::TableBaseAccessors::Accessor.58"* %0, %"class.internal::TableBaseAccessors::Accessor.58"** %28, align 8
  store %class.TableBase.55* %1, %class.TableBase.55** %29, align 8
  store %class.Tensor.33* %2, %class.Tensor.33** %30, align 8
  %31 = load %"class.internal::TableBaseAccessors::Accessor.58"*, %"class.internal::TableBaseAccessors::Accessor.58"** %28, align 8
  %32 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.58", %"class.internal::TableBaseAccessors::Accessor.58"* %31, i32 0, i32 0
  %33 = load %class.TableBase.55*, %class.TableBase.55** %29, align 8
  store %class.TableBase.55* %33, %class.TableBase.55** %32, align 8
  %34 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.58", %"class.internal::TableBaseAccessors::Accessor.58"* %31, i32 0, i32 1
  %35 = load %class.Tensor.33*, %class.Tensor.33** %30, align 8
  store %class.Tensor.33* %35, %class.Tensor.33** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.62"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.581
  %3 = load i32, i32* @y.582
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.62"*, align 8
  store %"class.__gnu_cxx::new_allocator.62"* %0, %"class.__gnu_cxx::new_allocator.62"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.62"*, %"class.__gnu_cxx::new_allocator.62"** %10, align 8
  %12 = load i32, i32* @x.581
  %13 = load i32, i32* @y.582
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.62"*, align 8
  store %"class.__gnu_cxx::new_allocator.62"* %0, %"class.__gnu_cxx::new_allocator.62"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.62"*, %"class.__gnu_cxx::new_allocator.62"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEED2Ev(%"class.__gnu_cxx::new_allocator.62"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.62"*, align 8
  store %"class.__gnu_cxx::new_allocator.62"* %0, %"class.__gnu_cxx::new_allocator.62"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.62"*, %"class.__gnu_cxx::new_allocator.62"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE17_S_check_init_lenEmRKS2_(i64, %"class.std::allocator.61"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::allocator.61"*, align 8
  %5 = alloca %"class.std::allocator.61", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store i64 %0, i64* %3, align 8
  store %"class.std::allocator.61"* %1, %"class.std::allocator.61"** %4, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %4, align 8
  call void @_ZNSaI6TensorILi1ELi3EEEC2ERKS1_(%"class.std::allocator.61"* %5, %"class.std::allocator.61"* dereferenceable(1) %9) #12
  %10 = invoke i64 @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.61"* dereferenceable(1) %5)
          to label %11 unwind label %14

; <label>:11:                                     ; preds = %2
  %12 = icmp ugt i64 %8, %10
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"* %5) #12
  br i1 %12, label %13, label %18

; <label>:13:                                     ; preds = %11
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i32 0, i32 0)) #15
  unreachable

; <label>:14:                                     ; preds = %2
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %6, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %7, align 4
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"* %5) #12
  br label %36

; <label>:18:                                     ; preds = %11
  %19 = load i32, i32* @x.585
  %20 = load i32, i32* @y.586
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i64, i64* %3, align 8
  %28 = load i32, i32* @x.585
  %29 = load i32, i32* @y.586
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %27

; <label>:36:                                     ; preds = %14
  %37 = load i32, i32* @x.585
  %38 = load i32, i32* @y.586
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = load i8*, i8** %6, align 8
  %46 = load i32, i32* %7, align 4
  %47 = insertvalue { i8*, i32 } undef, i8* %45, 0
  %48 = insertvalue { i8*, i32 } %47, i32 %46, 1
  %49 = load i32, i32* @x.585
  %50 = load i32, i32* @y.586
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %48

originalBBalteredBB:                              ; preds = %originalBB, %18
  %57 = load i64, i64* %3, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  %58 = load i8*, i8** %6, align 8
  %59 = load i32, i32* %7, align 4
  %60 = insertvalue { i8*, i32 } undef, i8* %58, 0
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.60"*, i64, %"class.std::allocator.61"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.587
  %5 = load i32, i32* @y.588
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.60"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.std::allocator.61"*, align 8
  %15 = alloca i8*
  %16 = alloca i32
  store %"struct.std::_Vector_base.60"* %0, %"struct.std::_Vector_base.60"** %12, align 8
  store i64 %1, i64* %13, align 8
  store %"class.std::allocator.61"* %2, %"class.std::allocator.61"** %14, align 8
  %17 = load %"struct.std::_Vector_base.60"*, %"struct.std::_Vector_base.60"** %12, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %17, i32 0, i32 0
  %19 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %14, align 8
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %18, %"class.std::allocator.61"* dereferenceable(1) %19)
  %20 = load i64, i64* %13, align 8
  %21 = load i32, i32* @x.587
  %22 = load i32, i32* @y.588
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.60"* %17, i64 %20)
          to label %29 unwind label %30

; <label>:29:                                     ; preds = %originalBBpart2
  ret void

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x.587
  %32 = load i32, i32* @y.588
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %15, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %16, align 4
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %18) #12
  %42 = load i32, i32* @x.587
  %43 = load i32, i32* @y.588
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %50

; <label>:50:                                     ; preds = %originalBBpart24
  %51 = load i32, i32* @x.587
  %52 = load i32, i32* @y.588
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = load i8*, i8** %15, align 8
  %60 = load i32, i32* %16, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  %63 = load i32, i32* @x.587
  %64 = load i32, i32* @y.588
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %62

originalBBalteredBB:                              ; preds = %originalBB, %3
  %71 = alloca %"struct.std::_Vector_base.60"*, align 8
  %72 = alloca i64, align 8
  %73 = alloca %"class.std::allocator.61"*, align 8
  %74 = alloca i8*
  %75 = alloca i32
  store %"struct.std::_Vector_base.60"* %0, %"struct.std::_Vector_base.60"** %71, align 8
  store i64 %1, i64* %72, align 8
  store %"class.std::allocator.61"* %2, %"class.std::allocator.61"** %73, align 8
  %76 = load %"struct.std::_Vector_base.60"*, %"struct.std::_Vector_base.60"** %71, align 8
  %77 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %76, i32 0, i32 0
  %78 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %73, align 8
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %77, %"class.std::allocator.61"* dereferenceable(1) %78)
  %79 = load i64, i64* %72, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %80 = landingpad { i8*, i32 }
          cleanup
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %15, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %16, align 4
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %18) #12
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %83 = load i8*, i8** %15, align 8
  %84 = load i32, i32* %16, align 4
  %85 = insertvalue { i8*, i32 } undef, i8* %83, 0
  %86 = insertvalue { i8*, i32 } %85, i32 %84, 1
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.59"*, i64, %class.Tensor* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.59"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Tensor*, align 8
  store %"class.std::vector.59"* %0, %"class.std::vector.59"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.Tensor* %2, %class.Tensor** %6, align 8
  %7 = load %"class.std::vector.59"*, %"class.std::vector.59"** %4, align 8
  %8 = bitcast %"class.std::vector.59"* %7 to %"struct.std::_Vector_base.60"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %8, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %9 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %10, i32 0, i32 0
  %12 = load %class.Tensor*, %class.Tensor** %11, align 8
  %13 = load i64, i64* %5, align 8
  %14 = load %class.Tensor*, %class.Tensor** %6, align 8
  %15 = bitcast %"class.std::vector.59"* %7 to %"struct.std::_Vector_base.60"*
  %16 = call dereferenceable(1) %"class.std::allocator.61"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.60"* %15)
  %17 = call %class.Tensor* @_ZSt24__uninitialized_fill_n_aIP6TensorILi1ELi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Tensor* %12, i64 %13, %class.Tensor* dereferenceable(24) %14, %"class.std::allocator.61"* dereferenceable(1) %16)
  %18 = bitcast %"class.std::vector.59"* %7 to %"struct.std::_Vector_base.60"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %19 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %20, i32 0, i32 1
  store %class.Tensor* %17, %class.Tensor** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.60"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.60"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.60"* %0, %"struct.std::_Vector_base.60"** %2, align 8
  %5 = load %"struct.std::_Vector_base.60"*, %"struct.std::_Vector_base.60"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load %class.Tensor*, %class.Tensor** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load %class.Tensor*, %class.Tensor** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %class.Tensor*, %class.Tensor** %16, align 8
  %18 = ptrtoint %class.Tensor* %13 to i64
  %19 = ptrtoint %class.Tensor* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 24
  invoke void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.60"* %5, %class.Tensor* %9, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %23) #12
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %28) #12
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* @x.591
  %31 = load i32, i32* @y.592
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %29, %originalBBalteredBB
  %38 = load i8*, i8** %3, align 8
  %39 = load i32, i32* %4, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  %42 = load i32, i32* @x.591
  %43 = load i32, i32* @y.592
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %41

originalBBalteredBB:                              ; preds = %originalBB, %29
  %50 = load i8*, i8** %3, align 8
  %51 = load i32, i32* %4, align 4
  %52 = insertvalue { i8*, i32 } undef, i8* %50, 0
  %53 = insertvalue { i8*, i32 } %52, i32 %51, 1
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.61"* dereferenceable(1)) #0 comdat align 2 {
  %2 = load i32, i32* @x.593
  %3 = load i32, i32* @y.594
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.61"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.61"* %0, %"class.std::allocator.61"** %10, align 8
  store i64 384307168202282325, i64* %11, align 8
  %13 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %10, align 8
  %14 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8max_sizeERKS3_(%"class.std::allocator.61"* dereferenceable(1) %13)
  store i64 %14, i64* %12, align 8
  %15 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %12)
  %16 = load i64, i64* %15, align 8
  %17 = load i32, i32* @x.593
  %18 = load i32, i32* @y.594
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %"class.std::allocator.61"*, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  store %"class.std::allocator.61"* %0, %"class.std::allocator.61"** %25, align 8
  store i64 384307168202282325, i64* %26, align 8
  %28 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %25, align 8
  %29 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8max_sizeERKS3_(%"class.std::allocator.61"* dereferenceable(1) %28)
  store i64 %29, i64* %27, align 8
  %30 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %26, i64* dereferenceable(8) %27)
  %31 = load i64, i64* %30, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6TensorILi1ELi3EEEC2ERKS1_(%"class.std::allocator.61"*, %"class.std::allocator.61"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.595
  %4 = load i32, i32* @y.596
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.61"*, align 8
  %12 = alloca %"class.std::allocator.61"*, align 8
  store %"class.std::allocator.61"* %0, %"class.std::allocator.61"** %11, align 8
  store %"class.std::allocator.61"* %1, %"class.std::allocator.61"** %12, align 8
  %13 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %11, align 8
  %14 = bitcast %"class.std::allocator.61"* %13 to %"class.__gnu_cxx::new_allocator.62"*
  %15 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %12, align 8
  %16 = bitcast %"class.std::allocator.61"* %15 to %"class.__gnu_cxx::new_allocator.62"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.62"* %14, %"class.__gnu_cxx::new_allocator.62"* dereferenceable(1) %16) #12
  %17 = load i32, i32* @x.595
  %18 = load i32, i32* @y.596
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.61"*, align 8
  %26 = alloca %"class.std::allocator.61"*, align 8
  store %"class.std::allocator.61"* %0, %"class.std::allocator.61"** %25, align 8
  store %"class.std::allocator.61"* %1, %"class.std::allocator.61"** %26, align 8
  %27 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %25, align 8
  %28 = bitcast %"class.std::allocator.61"* %27 to %"class.__gnu_cxx::new_allocator.62"*
  %29 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %26, align 8
  %30 = bitcast %"class.std::allocator.61"* %29 to %"class.__gnu_cxx::new_allocator.62"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.62"* %28, %"class.__gnu_cxx::new_allocator.62"* dereferenceable(1) %30) #12
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8max_sizeERKS3_(%"class.std::allocator.61"* dereferenceable(1)) #1 comdat align 2 {
  %2 = load i32, i32* @x.597
  %3 = load i32, i32* @y.598
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.61"*, align 8
  store %"class.std::allocator.61"* %0, %"class.std::allocator.61"** %10, align 8
  %11 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %10, align 8
  %12 = bitcast %"class.std::allocator.61"* %11 to %"class.__gnu_cxx::new_allocator.62"*
  %13 = call i64 @_ZNK9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.62"* %12) #12
  %14 = load i32, i32* @x.597
  %15 = load i32, i32* @y.598
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.std::allocator.61"*, align 8
  store %"class.std::allocator.61"* %0, %"class.std::allocator.61"** %22, align 8
  %23 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %22, align 8
  %24 = bitcast %"class.std::allocator.61"* %23 to %"class.__gnu_cxx::new_allocator.62"*
  %25 = call i64 @_ZNK9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.62"* %24) #12
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.62"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.599
  %3 = load i32, i32* @y.600
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.62"*, align 8
  store %"class.__gnu_cxx::new_allocator.62"* %0, %"class.__gnu_cxx::new_allocator.62"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.62"*, %"class.__gnu_cxx::new_allocator.62"** %10, align 8
  %12 = load i32, i32* @x.599
  %13 = load i32, i32* @y.600
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 384307168202282325

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.62"*, align 8
  store %"class.__gnu_cxx::new_allocator.62"* %0, %"class.__gnu_cxx::new_allocator.62"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.62"*, %"class.__gnu_cxx::new_allocator.62"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.62"*, %"class.__gnu_cxx::new_allocator.62"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.601
  %4 = load i32, i32* @y.602
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::new_allocator.62"*, align 8
  %12 = alloca %"class.__gnu_cxx::new_allocator.62"*, align 8
  store %"class.__gnu_cxx::new_allocator.62"* %0, %"class.__gnu_cxx::new_allocator.62"** %11, align 8
  store %"class.__gnu_cxx::new_allocator.62"* %1, %"class.__gnu_cxx::new_allocator.62"** %12, align 8
  %13 = load %"class.__gnu_cxx::new_allocator.62"*, %"class.__gnu_cxx::new_allocator.62"** %11, align 8
  %14 = load i32, i32* @x.601
  %15 = load i32, i32* @y.602
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %"class.__gnu_cxx::new_allocator.62"*, align 8
  %23 = alloca %"class.__gnu_cxx::new_allocator.62"*, align 8
  store %"class.__gnu_cxx::new_allocator.62"* %0, %"class.__gnu_cxx::new_allocator.62"** %22, align 8
  store %"class.__gnu_cxx::new_allocator.62"* %1, %"class.__gnu_cxx::new_allocator.62"** %23, align 8
  %24 = load %"class.__gnu_cxx::new_allocator.62"*, %"class.__gnu_cxx::new_allocator.62"** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"*, %"class.std::allocator.61"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.61"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.61"* %1, %"class.std::allocator.61"** %4, align 8
  %7 = load %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %7 to %"class.std::allocator.61"*
  %9 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %4, align 8
  call void @_ZNSaI6TensorILi1ELi3EEEC2ERKS1_(%"class.std::allocator.61"* %8, %"class.std::allocator.61"* dereferenceable(1) %9) #12
  %10 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %7 to %"class.std::allocator.61"*
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"* %16) #12
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = load i32, i32* %6, align 4
  %20 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.60"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.60"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.60"* %0, %"struct.std::_Vector_base.60"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.60"*, %"struct.std::_Vector_base.60"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %class.Tensor* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.60"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %5, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %8 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %9, i32 0, i32 0
  store %class.Tensor* %7, %class.Tensor** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %5, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %11 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %12, i32 0, i32 0
  %14 = load %class.Tensor*, %class.Tensor** %13, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %5, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %16, i32 0, i32 1
  store %class.Tensor* %14, %class.Tensor** %17, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %5, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %class.Tensor*, %class.Tensor** %20, align 8
  %22 = load i64, i64* %4, align 8
  %23 = getelementptr inbounds %class.Tensor, %class.Tensor* %21, i64 %22
  %24 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %5, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %24 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %25, i32 0, i32 2
  store %class.Tensor* %23, %class.Tensor** %26, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %3 to %"class.std::allocator.61"*
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.61"* %4) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %3, i32 0, i32 0
  store %class.Tensor* null, %class.Tensor** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %3, i32 0, i32 1
  store %class.Tensor* null, %class.Tensor** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %3, i32 0, i32 2
  store %class.Tensor* null, %class.Tensor** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.60"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.611
  %4 = load i32, i32* @y.612
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.60"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.60"* %0, %"struct.std::_Vector_base.60"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.60"*, %"struct.std::_Vector_base.60"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = icmp ne i64 %14, 0
  %16 = load i32, i32* @x.611
  %17 = load i32, i32* @y.612
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %45

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.611
  %26 = load i32, i32* @y.612
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %13, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %33 to %"class.std::allocator.61"*
  %35 = load i64, i64* %12, align 8
  %36 = call %class.Tensor* @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8allocateERS3_m(%"class.std::allocator.61"* dereferenceable(1) %34, i64 %35)
  %37 = load i32, i32* @x.611
  %38 = load i32, i32* @y.612
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:45:                                     ; preds = %originalBBpart2
  br label %46

; <label>:46:                                     ; preds = %45, %originalBBpart24
  %47 = phi %class.Tensor* [ %36, %originalBBpart24 ], [ null, %45 ]
  ret %class.Tensor* %47

originalBBalteredBB:                              ; preds = %originalBB, %2
  %48 = alloca %"struct.std::_Vector_base.60"*, align 8
  %49 = alloca i64, align 8
  store %"struct.std::_Vector_base.60"* %0, %"struct.std::_Vector_base.60"** %48, align 8
  store i64 %1, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.60"*, %"struct.std::_Vector_base.60"** %48, align 8
  %51 = load i64, i64* %49, align 8
  %52 = icmp ne i64 %51, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %53 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %13, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %53 to %"class.std::allocator.61"*
  %55 = load i64, i64* %12, align 8
  %56 = call %class.Tensor* @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8allocateERS3_m(%"class.std::allocator.61"* dereferenceable(1) %54, i64 %55)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8allocateERS3_m(%"class.std::allocator.61"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.61"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.61"* %0, %"class.std::allocator.61"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %3, align 8
  %6 = bitcast %"class.std::allocator.61"* %5 to %"class.__gnu_cxx::new_allocator.62"*
  %7 = load i64, i64* %4, align 8
  %8 = call %class.Tensor* @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.62"* %6, i64 %7, i8* null)
  ret %class.Tensor* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.62"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.62"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.62"* %0, %"class.__gnu_cxx::new_allocator.62"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.62"*, %"class.__gnu_cxx::new_allocator.62"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.62"* %7) #12
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %5, align 8
  %14 = mul i64 %13, 24
  %15 = call i8* @_Znwm(i64 %14)
  %16 = bitcast i8* %15 to %class.Tensor*
  ret %class.Tensor* %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZSt24__uninitialized_fill_n_aIP6TensorILi1ELi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Tensor*, i64, %class.Tensor* dereferenceable(24), %"class.std::allocator.61"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %class.Tensor*, align 8
  %8 = alloca %"class.std::allocator.61"*, align 8
  store %class.Tensor* %0, %class.Tensor** %5, align 8
  store i64 %1, i64* %6, align 8
  store %class.Tensor* %2, %class.Tensor** %7, align 8
  store %"class.std::allocator.61"* %3, %"class.std::allocator.61"** %8, align 8
  %9 = load %class.Tensor*, %class.Tensor** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %class.Tensor*, %class.Tensor** %7, align 8
  %12 = call %class.Tensor* @_ZSt20uninitialized_fill_nIP6TensorILi1ELi3EEmS1_ET_S3_T0_RKT1_(%class.Tensor* %9, i64 %10, %class.Tensor* dereferenceable(24) %11)
  ret %class.Tensor* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.61"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.60"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.60"*, align 8
  store %"struct.std::_Vector_base.60"* %0, %"struct.std::_Vector_base.60"** %2, align 8
  %3 = load %"struct.std::_Vector_base.60"*, %"struct.std::_Vector_base.60"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %4 to %"class.std::allocator.61"*
  ret %"class.std::allocator.61"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZSt20uninitialized_fill_nIP6TensorILi1ELi3EEmS1_ET_S3_T0_RKT1_(%class.Tensor*, i64, %class.Tensor* dereferenceable(24)) #0 comdat {
  %4 = load i32, i32* @x.621
  %5 = load i32, i32* @y.622
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Tensor*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %class.Tensor*, align 8
  %15 = alloca i8, align 1
  store %class.Tensor* %0, %class.Tensor** %12, align 8
  store i64 %1, i64* %13, align 8
  store %class.Tensor* %2, %class.Tensor** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load %class.Tensor*, %class.Tensor** %12, align 8
  %17 = load i64, i64* %13, align 8
  %18 = load %class.Tensor*, %class.Tensor** %14, align 8
  %19 = call %class.Tensor* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6TensorILi1ELi3EEmS3_EET_S5_T0_RKT1_(%class.Tensor* %16, i64 %17, %class.Tensor* dereferenceable(24) %18)
  %20 = load i32, i32* @x.621
  %21 = load i32, i32* @y.622
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %class.Tensor*, align 8
  %29 = alloca i64, align 8
  %30 = alloca %class.Tensor*, align 8
  %31 = alloca i8, align 1
  store %class.Tensor* %0, %class.Tensor** %28, align 8
  store i64 %1, i64* %29, align 8
  store %class.Tensor* %2, %class.Tensor** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load %class.Tensor*, %class.Tensor** %28, align 8
  %33 = load i64, i64* %29, align 8
  %34 = load %class.Tensor*, %class.Tensor** %30, align 8
  %35 = call %class.Tensor* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6TensorILi1ELi3EEmS3_EET_S5_T0_RKT1_(%class.Tensor* %32, i64 %33, %class.Tensor* dereferenceable(24) %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6TensorILi1ELi3EEmS3_EET_S5_T0_RKT1_(%class.Tensor*, i64, %class.Tensor* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Tensor*, align 8
  %7 = alloca %class.Tensor*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %class.Tensor* %0, %class.Tensor** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.Tensor* %2, %class.Tensor** %6, align 8
  %10 = load %class.Tensor*, %class.Tensor** %4, align 8
  store %class.Tensor* %10, %class.Tensor** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %originalBBpart28, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %99

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* @x.623
  %16 = load i32, i32* @y.624
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load %class.Tensor*, %class.Tensor** %7, align 8
  %24 = load i32, i32* @x.623
  %25 = load i32, i32* @y.624
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %32 = invoke %class.Tensor* @_ZSt11__addressofI6TensorILi1ELi3EEEPT_RS2_(%class.Tensor* dereferenceable(24) %23)
          to label %33 unwind label %57

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load %class.Tensor*, %class.Tensor** %6, align 8
  invoke void @_ZSt10_ConstructI6TensorILi1ELi3EES1_EvPT_RKT0_(%class.Tensor* %32, %class.Tensor* dereferenceable(24) %34)
          to label %35 unwind label %57

; <label>:35:                                     ; preds = %33
  br label %36

; <label>:36:                                     ; preds = %35
  %37 = load i32, i32* @x.623
  %38 = load i32, i32* @y.624
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = load i64, i64* %5, align 8
  %46 = add i64 %45, -1
  store i64 %46, i64* %5, align 8
  %47 = load %class.Tensor*, %class.Tensor** %7, align 8
  %48 = getelementptr inbounds %class.Tensor, %class.Tensor* %47, i32 1
  store %class.Tensor* %48, %class.Tensor** %7, align 8
  %49 = load i32, i32* @x.623
  %50 = load i32, i32* @y.624
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart28, label %originalBB1alteredBB

originalBBpart28:                                 ; preds = %originalBB1
  br label %11

; <label>:57:                                     ; preds = %33, %originalBBpart2
  %58 = load i32, i32* @x.623
  %59 = load i32, i32* @y.624
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %57, %originalBB10alteredBB
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %8, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %9, align 4
  %69 = load i32, i32* @x.623
  %70 = load i32, i32* @y.624
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %77

; <label>:77:                                     ; preds = %originalBBpart212
  %78 = load i32, i32* @x.623
  %79 = load i32, i32* @y.624
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %77, %originalBB14alteredBB
  %86 = load i8*, i8** %8, align 8
  %87 = call i8* @__cxa_begin_catch(i8* %86) #12
  %88 = load %class.Tensor*, %class.Tensor** %4, align 8
  %89 = load %class.Tensor*, %class.Tensor** %7, align 8
  %90 = load i32, i32* @x.623
  %91 = load i32, i32* @y.624
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZSt8_DestroyIP6TensorILi1ELi3EEEvT_S3_(%class.Tensor* %88, %class.Tensor* %89)
          to label %98 unwind label %101

; <label>:98:                                     ; preds = %originalBBpart216
  invoke void @__cxa_rethrow() #15
          to label %179 unwind label %101

; <label>:99:                                     ; preds = %11
  %100 = load %class.Tensor*, %class.Tensor** %7, align 8
  ret %class.Tensor* %100

; <label>:101:                                    ; preds = %98, %originalBBpart216
  %102 = load i32, i32* @x.623
  %103 = load i32, i32* @y.624
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %101, %originalBB18alteredBB
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %8, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %9, align 4
  %113 = load i32, i32* @x.623
  %114 = load i32, i32* @y.624
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @__cxa_end_catch()
          to label %121 unwind label %176

; <label>:121:                                    ; preds = %originalBBpart220
  %122 = load i32, i32* @x.623
  %123 = load i32, i32* @y.624
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %121, %originalBB22alteredBB
  %130 = load i32, i32* @x.623
  %131 = load i32, i32* @y.624
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %155
                                                  ; No predecessors!
  %139 = load i32, i32* @x.623
  %140 = load i32, i32* @y.624
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %138, %originalBB26alteredBB
  call void @llvm.trap()
  %147 = load i32, i32* @x.623
  %148 = load i32, i32* @y.624
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  unreachable

; <label>:155:                                    ; preds = %originalBBpart224
  %156 = load i32, i32* @x.623
  %157 = load i32, i32* @y.624
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %155, %originalBB30alteredBB
  %164 = load i8*, i8** %8, align 8
  %165 = load i32, i32* %9, align 4
  %166 = insertvalue { i8*, i32 } undef, i8* %164, 0
  %167 = insertvalue { i8*, i32 } %166, i32 %165, 1
  %168 = load i32, i32* @x.623
  %169 = load i32, i32* @y.624
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  resume { i8*, i32 } %167

; <label>:176:                                    ; preds = %originalBBpart220
  %177 = landingpad { i8*, i32 }
          catch i8* null
  %178 = extractvalue { i8*, i32 } %177, 0
  call void @__clang_call_terminate(i8* %178) #10
  unreachable

; <label>:179:                                    ; preds = %98
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %14
  %180 = load %class.Tensor*, %class.Tensor** %7, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  %181 = load i64, i64* %5, align 8
  %_ = shl i64 %181, -1
  %_2 = sub i64 0, %181
  %gen = add i64 %_2, -1
  %_3 = sub i64 0, %181
  %gen4 = add i64 %_3, -1
  %_5 = sub i64 0, %181
  %gen6 = add i64 %_5, -1
  %182 = add i64 %181, -1
  store i64 %182, i64* %5, align 8
  %183 = load %class.Tensor*, %class.Tensor** %7, align 8
  %184 = getelementptr inbounds %class.Tensor, %class.Tensor* %183, i32 1
  store %class.Tensor* %184, %class.Tensor** %7, align 8
  br label %originalBB1

originalBB10alteredBB:                            ; preds = %originalBB10, %57
  %185 = landingpad { i8*, i32 }
          catch i8* null
  %186 = extractvalue { i8*, i32 } %185, 0
  store i8* %186, i8** %8, align 8
  %187 = extractvalue { i8*, i32 } %185, 1
  store i32 %187, i32* %9, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %77
  %188 = load i8*, i8** %8, align 8
  %189 = call i8* @__cxa_begin_catch(i8* %188) #12
  %190 = load %class.Tensor*, %class.Tensor** %4, align 8
  %191 = load %class.Tensor*, %class.Tensor** %7, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %101
  %192 = landingpad { i8*, i32 }
          cleanup
  %193 = extractvalue { i8*, i32 } %192, 0
  store i8* %193, i8** %8, align 8
  %194 = extractvalue { i8*, i32 } %192, 1
  store i32 %194, i32* %9, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %121
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %138
  call void @llvm.trap()
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %155
  %195 = load i8*, i8** %8, align 8
  %196 = load i32, i32* %9, align 4
  %197 = insertvalue { i8*, i32 } undef, i8* %195, 0
  %198 = insertvalue { i8*, i32 } %197, i32 %196, 1
  br label %originalBB30
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructI6TensorILi1ELi3EES1_EvPT_RKT0_(%class.Tensor*, %class.Tensor* dereferenceable(24)) #0 comdat {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  store %class.Tensor* %1, %class.Tensor** %4, align 8
  %5 = load %class.Tensor*, %class.Tensor** %3, align 8
  %6 = bitcast %class.Tensor* %5 to i8*
  %7 = bitcast i8* %6 to %class.Tensor*
  %8 = load %class.Tensor*, %class.Tensor** %4, align 8
  call void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor* %7, %class.Tensor* dereferenceable(24) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Tensor* @_ZSt11__addressofI6TensorILi1ELi3EEEPT_RS2_(%class.Tensor* dereferenceable(24)) #1 comdat {
  %2 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %2, align 8
  %3 = load %class.Tensor*, %class.Tensor** %2, align 8
  ret %class.Tensor* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP6TensorILi1ELi3EEEvT_S3_(%class.Tensor*, %class.Tensor*) #0 comdat {
  %3 = load i32, i32* @x.629
  %4 = load i32, i32* @y.630
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Tensor*, align 8
  %12 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %11, align 8
  store %class.Tensor* %1, %class.Tensor** %12, align 8
  %13 = load %class.Tensor*, %class.Tensor** %11, align 8
  %14 = load %class.Tensor*, %class.Tensor** %12, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP6TensorILi1ELi3EEEEvT_S5_(%class.Tensor* %13, %class.Tensor* %14)
  %15 = load i32, i32* @x.629
  %16 = load i32, i32* @y.630
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %class.Tensor*, align 8
  %24 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %23, align 8
  store %class.Tensor* %1, %class.Tensor** %24, align 8
  %25 = load %class.Tensor*, %class.Tensor** %23, align 8
  %26 = load %class.Tensor*, %class.Tensor** %24, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP6TensorILi1ELi3EEEEvT_S5_(%class.Tensor* %25, %class.Tensor* %26)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor*, %class.Tensor* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  store %class.Tensor* %1, %class.Tensor** %4, align 8
  %6 = load %class.Tensor*, %class.Tensor** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %originalBBpart29, %2
  %8 = load i32, i32* %5, align 4
  %9 = icmp ult i32 %8, 3
  br i1 %9, label %10, label %56

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.631
  %12 = load i32, i32* @y.632
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load %class.Tensor*, %class.Tensor** %4, align 8
  %20 = getelementptr inbounds %class.Tensor, %class.Tensor* %19, i32 0, i32 0
  %21 = load i32, i32* %5, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [3 x double], [3 x double]* %20, i64 0, i64 %22
  %24 = load double, double* %23, align 8
  %25 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %26 = load i32, i32* %5, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [3 x double], [3 x double]* %25, i64 0, i64 %27
  store double %24, double* %28, align 8
  %29 = load i32, i32* @x.631
  %30 = load i32, i32* @y.632
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %37

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load i32, i32* @x.631
  %39 = load i32, i32* @y.632
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load i32, i32* %5, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %5, align 4
  %48 = load i32, i32* @x.631
  %49 = load i32, i32* @y.632
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  br label %7

; <label>:56:                                     ; preds = %7
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %57 = load %class.Tensor*, %class.Tensor** %4, align 8
  %58 = getelementptr inbounds %class.Tensor, %class.Tensor* %57, i32 0, i32 0
  %59 = load i32, i32* %5, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds [3 x double], [3 x double]* %58, i64 0, i64 %60
  %62 = load double, double* %61, align 8
  %63 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds [3 x double], [3 x double]* %63, i64 0, i64 %65
  store double %62, double* %66, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %67 = load i32, i32* %5, align 4
  %_ = sub i32 %67, 1
  %gen = mul i32 %_, 1
  %_2 = shl i32 %67, 1
  %_3 = sub i32 %67, 1
  %gen4 = mul i32 %_3, 1
  %_5 = shl i32 %67, 1
  %_6 = sub i32 %67, 1
  %gen7 = mul i32 %_6, 1
  %68 = add i32 %67, 1
  store i32 %68, i32* %5, align 4
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP6TensorILi1ELi3EEEEvT_S5_(%class.Tensor*, %class.Tensor*) #1 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  store %class.Tensor* %1, %class.Tensor** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.60"*, %class.Tensor*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.60"*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.60"* %0, %"struct.std::_Vector_base.60"** %4, align 8
  store %class.Tensor* %1, %class.Tensor** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.60"*, %"struct.std::_Vector_base.60"** %4, align 8
  %8 = load %class.Tensor*, %class.Tensor** %5, align 8
  %9 = icmp ne %class.Tensor* %8, null
  br i1 %9, label %10, label %15

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base.60", %"struct.std::_Vector_base.60"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %11 to %"class.std::allocator.61"*
  %13 = load %class.Tensor*, %class.Tensor** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.61"* dereferenceable(1) %12, %class.Tensor* %13, i64 %14)
  br label %15

; <label>:15:                                     ; preds = %10, %3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.61"* dereferenceable(1), %class.Tensor*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.61"*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.61"* %0, %"class.std::allocator.61"** %4, align 8
  store %class.Tensor* %1, %class.Tensor** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.61"*, %"class.std::allocator.61"** %4, align 8
  %8 = bitcast %"class.std::allocator.61"* %7 to %"class.__gnu_cxx::new_allocator.62"*
  %9 = load %class.Tensor*, %class.Tensor** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.62"* %8, %class.Tensor* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.62"*, %class.Tensor*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.62"*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.62"* %0, %"class.__gnu_cxx::new_allocator.62"** %4, align 8
  store %class.Tensor* %1, %class.Tensor** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.62"*, %"class.__gnu_cxx::new_allocator.62"** %4, align 8
  %8 = load %class.Tensor*, %class.Tensor** %5, align 8
  %9 = bitcast %class.Tensor* %8 to i8*
  call void @_ZdlPv(i8* %9) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP6TensorILi1ELi3EES1_EvT_S3_RSaIT0_E(%class.Tensor*, %class.Tensor*, %"class.std::allocator.61"* dereferenceable(1)) #0 comdat {
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca %"class.std::allocator.61"*, align 8
  store %class.Tensor* %0, %class.Tensor** %4, align 8
  store %class.Tensor* %1, %class.Tensor** %5, align 8
  store %"class.std::allocator.61"* %2, %"class.std::allocator.61"** %6, align 8
  %7 = load %class.Tensor*, %class.Tensor** %4, align 8
  %8 = load %class.Tensor*, %class.Tensor** %5, align 8
  call void @_ZSt8_DestroyIP6TensorILi1ELi3EEEvT_S3_(%class.Tensor* %7, %class.Tensor* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"*, %class.Tensor** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.643
  %4 = load i32, i32* @y.644
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %12 = alloca %class.Tensor**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %11, align 8
  store %class.Tensor** %1, %class.Tensor*** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %15 = load %class.Tensor**, %class.Tensor*** %12, align 8
  %16 = load %class.Tensor*, %class.Tensor** %15, align 8
  store %class.Tensor* %16, %class.Tensor** %14, align 8
  %17 = load i32, i32* @x.643
  %18 = load i32, i32* @y.644
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %26 = alloca %class.Tensor**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %25, align 8
  store %class.Tensor** %1, %class.Tensor*** %26, align 8
  %27 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %25, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %27, i32 0, i32 0
  %29 = load %class.Tensor**, %class.Tensor*** %26, align 8
  %30 = load %class.Tensor*, %class.Tensor** %29, align 8
  store %class.Tensor* %30, %class.Tensor** %28, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK5TableILi2EdE6n_colsEv(%class.Table*) #1 comdat align 2 {
  %2 = load i32, i32* @x.645
  %3 = load i32, i32* @y.646
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %10, align 8
  %11 = load %class.Table*, %class.Table** %10, align 8
  %12 = bitcast %class.Table* %11 to %class.TableBase*
  %13 = getelementptr inbounds %class.TableBase, %class.TableBase* %12, i32 0, i32 3
  %14 = bitcast %class.TableIndices* %13 to %class.TableIndicesBase*
  %15 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %14, i32 1)
  %16 = load i32, i32* @x.645
  %17 = load i32, i32* @y.646
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %15

originalBBalteredBB:                              ; preds = %originalBB, %1
  %24 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %24, align 8
  %25 = load %class.Table*, %class.Table** %24, align 8
  %26 = bitcast %class.Table* %25 to %class.TableBase*
  %27 = getelementptr inbounds %class.TableBase, %class.TableBase* %26, i32 0, i32 3
  %28 = bitcast %class.TableIndices* %27 to %class.TableIndicesBase*
  %29 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %28, i32 1)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEC2ERK9TableBaseILi2EdEPd(%"class.internal::TableBaseAccessors::Accessor.64"*, %class.TableBase* dereferenceable(48), double*) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.internal::TableBaseAccessors::Accessor.64"*, align 8
  %5 = alloca %class.TableBase*, align 8
  %6 = alloca double*, align 8
  store %"class.internal::TableBaseAccessors::Accessor.64"* %0, %"class.internal::TableBaseAccessors::Accessor.64"** %4, align 8
  store %class.TableBase* %1, %class.TableBase** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load %"class.internal::TableBaseAccessors::Accessor.64"*, %"class.internal::TableBaseAccessors::Accessor.64"** %4, align 8
  %8 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.64", %"class.internal::TableBaseAccessors::Accessor.64"* %7, i32 0, i32 0
  %9 = load %class.TableBase*, %class.TableBase** %5, align 8
  store %class.TableBase* %9, %class.TableBase** %8, align 8
  %10 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.64", %"class.internal::TableBaseAccessors::Accessor.64"* %7, i32 0, i32 1
  %11 = load double*, double** %6, align 8
  store double* %11, double** %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.68"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.68"*, align 8
  store %"class.__gnu_cxx::new_allocator.68"* %0, %"class.__gnu_cxx::new_allocator.68"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.68"*, %"class.__gnu_cxx::new_allocator.68"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEED2Ev(%"class.__gnu_cxx::new_allocator.68"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.651
  %3 = load i32, i32* @y.652
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.68"*, align 8
  store %"class.__gnu_cxx::new_allocator.68"* %0, %"class.__gnu_cxx::new_allocator.68"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.68"*, %"class.__gnu_cxx::new_allocator.68"** %10, align 8
  %12 = load i32, i32* @x.651
  %13 = load i32, i32* @y.652
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.68"*, align 8
  store %"class.__gnu_cxx::new_allocator.68"* %0, %"class.__gnu_cxx::new_allocator.68"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.68"*, %"class.__gnu_cxx::new_allocator.68"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE17_S_check_init_lenEmRKS2_(i64, %"class.std::allocator.67"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::allocator.67"*, align 8
  %5 = alloca %"class.std::allocator.67", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store i64 %0, i64* %3, align 8
  store %"class.std::allocator.67"* %1, %"class.std::allocator.67"** %4, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %4, align 8
  call void @_ZNSaI6TensorILi2ELi3EEEC2ERKS1_(%"class.std::allocator.67"* %5, %"class.std::allocator.67"* dereferenceable(1) %9) #12
  %10 = invoke i64 @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.67"* dereferenceable(1) %5)
          to label %11 unwind label %30

; <label>:11:                                     ; preds = %2
  %12 = icmp ugt i64 %8, %10
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %5) #12
  br i1 %12, label %13, label %34

; <label>:13:                                     ; preds = %11
  %14 = load i32, i32* @x.653
  %15 = load i32, i32* @y.654
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i32 0, i32 0)) #15
  %22 = load i32, i32* @x.653
  %23 = load i32, i32* @y.654
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:30:                                     ; preds = %2
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %6, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %7, align 4
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %5) #12
  br label %52

; <label>:34:                                     ; preds = %11
  %35 = load i32, i32* @x.653
  %36 = load i32, i32* @y.654
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load i64, i64* %3, align 8
  %44 = load i32, i32* @x.653
  %45 = load i32, i32* @y.654
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i64 %43

; <label>:52:                                     ; preds = %30
  %53 = load i8*, i8** %6, align 8
  %54 = load i32, i32* %7, align 4
  %55 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %56 = insertvalue { i8*, i32 } %55, i32 %54, 1
  resume { i8*, i32 } %56

originalBBalteredBB:                              ; preds = %originalBB, %13
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i32 0, i32 0)) #15
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %57 = load i64, i64* %3, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.66"*, i64, %"class.std::allocator.67"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.655
  %5 = load i32, i32* @y.656
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.66"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.std::allocator.67"*, align 8
  %15 = alloca i8*
  %16 = alloca i32
  store %"struct.std::_Vector_base.66"* %0, %"struct.std::_Vector_base.66"** %12, align 8
  store i64 %1, i64* %13, align 8
  store %"class.std::allocator.67"* %2, %"class.std::allocator.67"** %14, align 8
  %17 = load %"struct.std::_Vector_base.66"*, %"struct.std::_Vector_base.66"** %12, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %17, i32 0, i32 0
  %19 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %14, align 8
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %18, %"class.std::allocator.67"* dereferenceable(1) %19)
  %20 = load i64, i64* %13, align 8
  %21 = load i32, i32* @x.655
  %22 = load i32, i32* @y.656
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.66"* %17, i64 %20)
          to label %29 unwind label %46

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i32, i32* @x.655
  %31 = load i32, i32* @y.656
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i32, i32* @x.655
  %39 = load i32, i32* @y.656
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:46:                                     ; preds = %originalBBpart2
  %47 = load i32, i32* @x.655
  %48 = load i32, i32* @y.656
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %46, %originalBB6alteredBB
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %15, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %16, align 4
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %18) #12
  %58 = load i32, i32* @x.655
  %59 = load i32, i32* @y.656
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %66

; <label>:66:                                     ; preds = %originalBBpart28
  %67 = load i32, i32* @x.655
  %68 = load i32, i32* @y.656
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %66, %originalBB10alteredBB
  %75 = load i8*, i8** %15, align 8
  %76 = load i32, i32* %16, align 4
  %77 = insertvalue { i8*, i32 } undef, i8* %75, 0
  %78 = insertvalue { i8*, i32 } %77, i32 %76, 1
  %79 = load i32, i32* @x.655
  %80 = load i32, i32* @y.656
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %78

originalBBalteredBB:                              ; preds = %originalBB, %3
  %87 = alloca %"struct.std::_Vector_base.66"*, align 8
  %88 = alloca i64, align 8
  %89 = alloca %"class.std::allocator.67"*, align 8
  %90 = alloca i8*
  %91 = alloca i32
  store %"struct.std::_Vector_base.66"* %0, %"struct.std::_Vector_base.66"** %87, align 8
  store i64 %1, i64* %88, align 8
  store %"class.std::allocator.67"* %2, %"class.std::allocator.67"** %89, align 8
  %92 = load %"struct.std::_Vector_base.66"*, %"struct.std::_Vector_base.66"** %87, align 8
  %93 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %92, i32 0, i32 0
  %94 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %89, align 8
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %93, %"class.std::allocator.67"* dereferenceable(1) %94)
  %95 = load i64, i64* %88, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %46
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %15, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %16, align 4
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %18) #12
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %66
  %99 = load i8*, i8** %15, align 8
  %100 = load i32, i32* %16, align 4
  %101 = insertvalue { i8*, i32 } undef, i8* %99, 0
  %102 = insertvalue { i8*, i32 } %101, i32 %100, 1
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.65"*, i64, %class.Tensor.33* dereferenceable(72)) #0 comdat align 2 {
  %4 = load i32, i32* @x.657
  %5 = load i32, i32* @y.658
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector.65"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %class.Tensor.33*, align 8
  store %"class.std::vector.65"* %0, %"class.std::vector.65"** %12, align 8
  store i64 %1, i64* %13, align 8
  store %class.Tensor.33* %2, %class.Tensor.33** %14, align 8
  %15 = load %"class.std::vector.65"*, %"class.std::vector.65"** %12, align 8
  %16 = bitcast %"class.std::vector.65"* %15 to %"struct.std::_Vector_base.66"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %17 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %18, i32 0, i32 0
  %20 = load %class.Tensor.33*, %class.Tensor.33** %19, align 8
  %21 = load i64, i64* %13, align 8
  %22 = load %class.Tensor.33*, %class.Tensor.33** %14, align 8
  %23 = bitcast %"class.std::vector.65"* %15 to %"struct.std::_Vector_base.66"*
  %24 = call dereferenceable(1) %"class.std::allocator.67"* @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.66"* %23)
  %25 = call %class.Tensor.33* @_ZSt24__uninitialized_fill_n_aIP6TensorILi2ELi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Tensor.33* %20, i64 %21, %class.Tensor.33* dereferenceable(72) %22, %"class.std::allocator.67"* dereferenceable(1) %24)
  %26 = bitcast %"class.std::vector.65"* %15 to %"struct.std::_Vector_base.66"*
  %27 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %26, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %27 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %29 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %28, i32 0, i32 1
  store %class.Tensor.33* %25, %class.Tensor.33** %29, align 8
  %30 = load i32, i32* @x.657
  %31 = load i32, i32* @y.658
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %38 = alloca %"class.std::vector.65"*, align 8
  %39 = alloca i64, align 8
  %40 = alloca %class.Tensor.33*, align 8
  store %"class.std::vector.65"* %0, %"class.std::vector.65"** %38, align 8
  store i64 %1, i64* %39, align 8
  store %class.Tensor.33* %2, %class.Tensor.33** %40, align 8
  %41 = load %"class.std::vector.65"*, %"class.std::vector.65"** %38, align 8
  %42 = bitcast %"class.std::vector.65"* %41 to %"struct.std::_Vector_base.66"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %42, i32 0, i32 0
  %44 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %43 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %44, i32 0, i32 0
  %46 = load %class.Tensor.33*, %class.Tensor.33** %45, align 8
  %47 = load i64, i64* %39, align 8
  %48 = load %class.Tensor.33*, %class.Tensor.33** %40, align 8
  %49 = bitcast %"class.std::vector.65"* %41 to %"struct.std::_Vector_base.66"*
  %50 = call dereferenceable(1) %"class.std::allocator.67"* @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.66"* %49)
  %51 = call %class.Tensor.33* @_ZSt24__uninitialized_fill_n_aIP6TensorILi2ELi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Tensor.33* %46, i64 %47, %class.Tensor.33* dereferenceable(72) %48, %"class.std::allocator.67"* dereferenceable(1) %50)
  %52 = bitcast %"class.std::vector.65"* %41 to %"struct.std::_Vector_base.66"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %52, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %53 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %54, i32 0, i32 1
  store %class.Tensor.33* %51, %class.Tensor.33** %55, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.66"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.66"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.66"* %0, %"struct.std::_Vector_base.66"** %2, align 8
  %5 = load %"struct.std::_Vector_base.66"*, %"struct.std::_Vector_base.66"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load %class.Tensor.33*, %class.Tensor.33** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load %class.Tensor.33*, %class.Tensor.33** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %class.Tensor.33*, %class.Tensor.33** %16, align 8
  %18 = ptrtoint %class.Tensor.33* %13 to i64
  %19 = ptrtoint %class.Tensor.33* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 72
  invoke void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.66"* %5, %class.Tensor.33* %9, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %23) #12
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.659
  %26 = load i32, i32* @y.660
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %3, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %4, align 4
  %36 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %36) #12
  %37 = load i32, i32* @x.659
  %38 = load i32, i32* @y.660
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %45

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i32, i32* @x.659
  %47 = load i32, i32* @y.660
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %45, %originalBB1alteredBB
  %54 = load i8*, i8** %3, align 8
  %55 = load i32, i32* %4, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  %58 = load i32, i32* @x.659
  %59 = load i32, i32* @y.660
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %57

originalBBalteredBB:                              ; preds = %originalBB, %24
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %3, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %4, align 4
  %69 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %69) #12
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %70 = load i8*, i8** %3, align 8
  %71 = load i32, i32* %4, align 4
  %72 = insertvalue { i8*, i32 } undef, i8* %70, 0
  %73 = insertvalue { i8*, i32 } %72, i32 %71, 1
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.67"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.67"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.67"* %0, %"class.std::allocator.67"** %2, align 8
  store i64 128102389400760775, i64* %3, align 8
  %5 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi2ELi3EEES2_E8max_sizeERKS3_(%"class.std::allocator.67"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6TensorILi2ELi3EEEC2ERKS1_(%"class.std::allocator.67"*, %"class.std::allocator.67"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.67"*, align 8
  %4 = alloca %"class.std::allocator.67"*, align 8
  store %"class.std::allocator.67"* %0, %"class.std::allocator.67"** %3, align 8
  store %"class.std::allocator.67"* %1, %"class.std::allocator.67"** %4, align 8
  %5 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %3, align 8
  %6 = bitcast %"class.std::allocator.67"* %5 to %"class.__gnu_cxx::new_allocator.68"*
  %7 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %4, align 8
  %8 = bitcast %"class.std::allocator.67"* %7 to %"class.__gnu_cxx::new_allocator.68"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.68"* %6, %"class.__gnu_cxx::new_allocator.68"* dereferenceable(1) %8) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi2ELi3EEES2_E8max_sizeERKS3_(%"class.std::allocator.67"* dereferenceable(1)) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.67"*, align 8
  store %"class.std::allocator.67"* %0, %"class.std::allocator.67"** %2, align 8
  %3 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %2, align 8
  %4 = bitcast %"class.std::allocator.67"* %3 to %"class.__gnu_cxx::new_allocator.68"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.68"* %4) #12
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.68"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.68"*, align 8
  store %"class.__gnu_cxx::new_allocator.68"* %0, %"class.__gnu_cxx::new_allocator.68"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.68"*, %"class.__gnu_cxx::new_allocator.68"** %2, align 8
  ret i64 128102389400760775
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.68"*, %"class.__gnu_cxx::new_allocator.68"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.68"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.68"*, align 8
  store %"class.__gnu_cxx::new_allocator.68"* %0, %"class.__gnu_cxx::new_allocator.68"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.68"* %1, %"class.__gnu_cxx::new_allocator.68"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.68"*, %"class.__gnu_cxx::new_allocator.68"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"*, %"class.std::allocator.67"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.67"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.67"* %1, %"class.std::allocator.67"** %4, align 8
  %7 = load %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %7 to %"class.std::allocator.67"*
  %9 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %4, align 8
  call void @_ZNSaI6TensorILi2ELi3EEEC2ERKS1_(%"class.std::allocator.67"* %8, %"class.std::allocator.67"* dereferenceable(1) %9) #12
  %10 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.671
  %14 = load i32, i32* @y.672
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %5, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %6, align 4
  %24 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %7 to %"class.std::allocator.67"*
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %24) #12
  %25 = load i32, i32* @x.671
  %26 = load i32, i32* @y.672
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load i8*, i8** %5, align 8
  %35 = load i32, i32* %6, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  resume { i8*, i32 } %37

originalBBalteredBB:                              ; preds = %originalBB, %12
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %5, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %6, align 4
  %41 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %7 to %"class.std::allocator.67"*
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %41) #12
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.66"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.673
  %4 = load i32, i32* @y.674
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.66"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.66"* %0, %"struct.std::_Vector_base.66"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.66"*, %"struct.std::_Vector_base.66"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = call %class.Tensor.33* @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.66"* %13, i64 %14)
  %16 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %13, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %16 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %17, i32 0, i32 0
  store %class.Tensor.33* %15, %class.Tensor.33** %18, align 8
  %19 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %13, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %19 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %20, i32 0, i32 0
  %22 = load %class.Tensor.33*, %class.Tensor.33** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %13, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %23 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %24, i32 0, i32 1
  store %class.Tensor.33* %22, %class.Tensor.33** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %13, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %26 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %27, i32 0, i32 0
  %29 = load %class.Tensor.33*, %class.Tensor.33** %28, align 8
  %30 = load i64, i64* %12, align 8
  %31 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %29, i64 %30
  %32 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %13, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %32 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %33, i32 0, i32 2
  store %class.Tensor.33* %31, %class.Tensor.33** %34, align 8
  %35 = load i32, i32* @x.673
  %36 = load i32, i32* @y.674
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %43 = alloca %"struct.std::_Vector_base.66"*, align 8
  %44 = alloca i64, align 8
  store %"struct.std::_Vector_base.66"* %0, %"struct.std::_Vector_base.66"** %43, align 8
  store i64 %1, i64* %44, align 8
  %45 = load %"struct.std::_Vector_base.66"*, %"struct.std::_Vector_base.66"** %43, align 8
  %46 = load i64, i64* %44, align 8
  %47 = call %class.Tensor.33* @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.66"* %45, i64 %46)
  %48 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %45, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %48 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %49, i32 0, i32 0
  store %class.Tensor.33* %47, %class.Tensor.33** %50, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %45, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %51 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %52, i32 0, i32 0
  %54 = load %class.Tensor.33*, %class.Tensor.33** %53, align 8
  %55 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %45, i32 0, i32 0
  %56 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %55 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %56, i32 0, i32 1
  store %class.Tensor.33* %54, %class.Tensor.33** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %45, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %58 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %59, i32 0, i32 0
  %61 = load %class.Tensor.33*, %class.Tensor.33** %60, align 8
  %62 = load i64, i64* %44, align 8
  %63 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %61, i64 %62
  %64 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %45, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %64 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %65, i32 0, i32 2
  store %class.Tensor.33* %63, %class.Tensor.33** %66, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %3 to %"class.std::allocator.67"*
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.67"* %4) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.677
  %3 = load i32, i32* @y.678
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"** %10, align 8
  %11 = load %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %11, i32 0, i32 0
  store %class.Tensor.33* null, %class.Tensor.33** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %11, i32 0, i32 1
  store %class.Tensor.33* null, %class.Tensor.33** %13, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %11, i32 0, i32 2
  store %class.Tensor.33* null, %class.Tensor.33** %14, align 8
  %15 = load i32, i32* @x.677
  %16 = load i32, i32* @y.678
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"** %23, align 8
  %24 = load %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %24, i32 0, i32 0
  store %class.Tensor.33* null, %class.Tensor.33** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %24, i32 0, i32 1
  store %class.Tensor.33* null, %class.Tensor.33** %26, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %24, i32 0, i32 2
  store %class.Tensor.33* null, %class.Tensor.33** %27, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor.33* @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.66"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.66"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.66"* %0, %"struct.std::_Vector_base.66"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.66"*, %"struct.std::_Vector_base.66"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %9 to %"class.std::allocator.67"*
  %11 = load i64, i64* %4, align 8
  %12 = call %class.Tensor.33* @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi2ELi3EEES2_E8allocateERS3_m(%"class.std::allocator.67"* dereferenceable(1) %10, i64 %11)
  br label %14

; <label>:13:                                     ; preds = %2
  br label %14

; <label>:14:                                     ; preds = %13, %8
  %15 = phi %class.Tensor.33* [ %12, %8 ], [ null, %13 ]
  ret %class.Tensor.33* %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor.33* @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi2ELi3EEES2_E8allocateERS3_m(%"class.std::allocator.67"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.681
  %4 = load i32, i32* @y.682
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.67"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.67"* %0, %"class.std::allocator.67"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %11, align 8
  %14 = bitcast %"class.std::allocator.67"* %13 to %"class.__gnu_cxx::new_allocator.68"*
  %15 = load i64, i64* %12, align 8
  %16 = call %class.Tensor.33* @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.68"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.681
  %18 = load i32, i32* @y.682
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor.33* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.67"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator.67"* %0, %"class.std::allocator.67"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %25, align 8
  %28 = bitcast %"class.std::allocator.67"* %27 to %"class.__gnu_cxx::new_allocator.68"*
  %29 = load i64, i64* %26, align 8
  %30 = call %class.Tensor.33* @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.68"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor.33* @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.68"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.68"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.68"* %0, %"class.__gnu_cxx::new_allocator.68"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.68"*, %"class.__gnu_cxx::new_allocator.68"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.68"* %7) #12
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.683
  %14 = load i32, i32* @y.684
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64, i64* %5, align 8
  %22 = mul i64 %21, 72
  %23 = call i8* @_Znwm(i64 %22)
  %24 = bitcast i8* %23 to %class.Tensor.33*
  %25 = load i32, i32* @x.683
  %26 = load i32, i32* @y.684
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor.33* %24

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = load i64, i64* %5, align 8
  %_ = sub i64 %33, 72
  %gen = mul i64 %_, 72
  %_1 = sub i64 %33, 72
  %gen2 = mul i64 %_1, 72
  %_3 = shl i64 %33, 72
  %_4 = sub i64 %33, 72
  %gen5 = mul i64 %_4, 72
  %_6 = sub i64 %33, 72
  %gen7 = mul i64 %_6, 72
  %34 = mul i64 %33, 72
  %35 = call i8* @_Znwm(i64 %34)
  %36 = bitcast i8* %35 to %class.Tensor.33*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor.33* @_ZSt24__uninitialized_fill_n_aIP6TensorILi2ELi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Tensor.33*, i64, %class.Tensor.33* dereferenceable(72), %"class.std::allocator.67"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.685
  %6 = load i32, i32* @y.686
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.Tensor.33*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %class.Tensor.33*, align 8
  %16 = alloca %"class.std::allocator.67"*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %13, align 8
  store i64 %1, i64* %14, align 8
  store %class.Tensor.33* %2, %class.Tensor.33** %15, align 8
  store %"class.std::allocator.67"* %3, %"class.std::allocator.67"** %16, align 8
  %17 = load %class.Tensor.33*, %class.Tensor.33** %13, align 8
  %18 = load i64, i64* %14, align 8
  %19 = load %class.Tensor.33*, %class.Tensor.33** %15, align 8
  %20 = call %class.Tensor.33* @_ZSt20uninitialized_fill_nIP6TensorILi2ELi3EEmS1_ET_S3_T0_RKT1_(%class.Tensor.33* %17, i64 %18, %class.Tensor.33* dereferenceable(72) %19)
  %21 = load i32, i32* @x.685
  %22 = load i32, i32* @y.686
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor.33* %20

originalBBalteredBB:                              ; preds = %originalBB, %4
  %29 = alloca %class.Tensor.33*, align 8
  %30 = alloca i64, align 8
  %31 = alloca %class.Tensor.33*, align 8
  %32 = alloca %"class.std::allocator.67"*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %29, align 8
  store i64 %1, i64* %30, align 8
  store %class.Tensor.33* %2, %class.Tensor.33** %31, align 8
  store %"class.std::allocator.67"* %3, %"class.std::allocator.67"** %32, align 8
  %33 = load %class.Tensor.33*, %class.Tensor.33** %29, align 8
  %34 = load i64, i64* %30, align 8
  %35 = load %class.Tensor.33*, %class.Tensor.33** %31, align 8
  %36 = call %class.Tensor.33* @_ZSt20uninitialized_fill_nIP6TensorILi2ELi3EEmS1_ET_S3_T0_RKT1_(%class.Tensor.33* %33, i64 %34, %class.Tensor.33* dereferenceable(72) %35)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.67"* @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.66"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.687
  %3 = load i32, i32* @y.688
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.66"*, align 8
  store %"struct.std::_Vector_base.66"* %0, %"struct.std::_Vector_base.66"** %10, align 8
  %11 = load %"struct.std::_Vector_base.66"*, %"struct.std::_Vector_base.66"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %12 to %"class.std::allocator.67"*
  %14 = load i32, i32* @x.687
  %15 = load i32, i32* @y.688
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.67"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Vector_base.66"*, align 8
  store %"struct.std::_Vector_base.66"* %0, %"struct.std::_Vector_base.66"** %22, align 8
  %23 = load %"struct.std::_Vector_base.66"*, %"struct.std::_Vector_base.66"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %24 to %"class.std::allocator.67"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor.33* @_ZSt20uninitialized_fill_nIP6TensorILi2ELi3EEmS1_ET_S3_T0_RKT1_(%class.Tensor.33*, i64, %class.Tensor.33* dereferenceable(72)) #0 comdat {
  %4 = alloca %class.Tensor.33*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Tensor.33*, align 8
  %7 = alloca i8, align 1
  store %class.Tensor.33* %0, %class.Tensor.33** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.Tensor.33* %2, %class.Tensor.33** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %class.Tensor.33*, %class.Tensor.33** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %class.Tensor.33*, %class.Tensor.33** %6, align 8
  %11 = call %class.Tensor.33* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6TensorILi2ELi3EEmS3_EET_S5_T0_RKT1_(%class.Tensor.33* %8, i64 %9, %class.Tensor.33* dereferenceable(72) %10)
  ret %class.Tensor.33* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor.33* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6TensorILi2ELi3EEmS3_EET_S5_T0_RKT1_(%class.Tensor.33*, i64, %class.Tensor.33* dereferenceable(72)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Tensor.33*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Tensor.33*, align 8
  %7 = alloca %class.Tensor.33*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %class.Tensor.33* %0, %class.Tensor.33** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.Tensor.33* %2, %class.Tensor.33** %6, align 8
  %10 = load %class.Tensor.33*, %class.Tensor.33** %4, align 8
  store %class.Tensor.33* %10, %class.Tensor.33** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %52, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %83

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* @x.691
  %16 = load i32, i32* @y.692
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load %class.Tensor.33*, %class.Tensor.33** %7, align 8
  %24 = load i32, i32* @x.691
  %25 = load i32, i32* @y.692
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %32 = invoke %class.Tensor.33* @_ZSt11__addressofI6TensorILi2ELi3EEEPT_RS2_(%class.Tensor.33* dereferenceable(72) %23)
          to label %33 unwind label %57

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load %class.Tensor.33*, %class.Tensor.33** %6, align 8
  invoke void @_ZSt10_ConstructI6TensorILi2ELi3EES1_EvPT_RKT0_(%class.Tensor.33* %32, %class.Tensor.33* dereferenceable(72) %34)
          to label %35 unwind label %57

; <label>:35:                                     ; preds = %33
  %36 = load i32, i32* @x.691
  %37 = load i32, i32* @y.692
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %44 = load i32, i32* @x.691
  %45 = load i32, i32* @y.692
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %52

; <label>:52:                                     ; preds = %originalBBpart24
  %53 = load i64, i64* %5, align 8
  %54 = add i64 %53, -1
  store i64 %54, i64* %5, align 8
  %55 = load %class.Tensor.33*, %class.Tensor.33** %7, align 8
  %56 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %55, i32 1
  store %class.Tensor.33* %56, %class.Tensor.33** %7, align 8
  br label %11

; <label>:57:                                     ; preds = %33, %originalBBpart2
  %58 = landingpad { i8*, i32 }
          catch i8* null
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %8, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %9, align 4
  br label %61

; <label>:61:                                     ; preds = %57
  %62 = load i32, i32* @x.691
  %63 = load i32, i32* @y.692
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %61, %originalBB6alteredBB
  %70 = load i8*, i8** %8, align 8
  %71 = call i8* @__cxa_begin_catch(i8* %70) #12
  %72 = load %class.Tensor.33*, %class.Tensor.33** %4, align 8
  %73 = load %class.Tensor.33*, %class.Tensor.33** %7, align 8
  %74 = load i32, i32* @x.691
  %75 = load i32, i32* @y.692
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZSt8_DestroyIP6TensorILi2ELi3EEEvT_S3_(%class.Tensor.33* %72, %class.Tensor.33* %73)
          to label %82 unwind label %85

; <label>:82:                                     ; preds = %originalBBpart28
  invoke void @__cxa_rethrow() #15
          to label %131 unwind label %85

; <label>:83:                                     ; preds = %11
  %84 = load %class.Tensor.33*, %class.Tensor.33** %7, align 8
  ret %class.Tensor.33* %84

; <label>:85:                                     ; preds = %82, %originalBBpart28
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %8, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %89 unwind label %128

; <label>:89:                                     ; preds = %85
  %90 = load i32, i32* @x.691
  %91 = load i32, i32* @y.692
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %89, %originalBB10alteredBB
  %98 = load i32, i32* @x.691
  %99 = load i32, i32* @y.692
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %123
                                                  ; No predecessors!
  %107 = load i32, i32* @x.691
  %108 = load i32, i32* @y.692
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %106, %originalBB14alteredBB
  call void @llvm.trap()
  %115 = load i32, i32* @x.691
  %116 = load i32, i32* @y.692
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable

; <label>:123:                                    ; preds = %originalBBpart212
  %124 = load i8*, i8** %8, align 8
  %125 = load i32, i32* %9, align 4
  %126 = insertvalue { i8*, i32 } undef, i8* %124, 0
  %127 = insertvalue { i8*, i32 } %126, i32 %125, 1
  resume { i8*, i32 } %127

; <label>:128:                                    ; preds = %85
  %129 = landingpad { i8*, i32 }
          catch i8* null
  %130 = extractvalue { i8*, i32 } %129, 0
  call void @__clang_call_terminate(i8* %130) #10
  unreachable

; <label>:131:                                    ; preds = %82
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %14
  %132 = load %class.Tensor.33*, %class.Tensor.33** %7, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %61
  %133 = load i8*, i8** %8, align 8
  %134 = call i8* @__cxa_begin_catch(i8* %133) #12
  %135 = load %class.Tensor.33*, %class.Tensor.33** %4, align 8
  %136 = load %class.Tensor.33*, %class.Tensor.33** %7, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %89
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %106
  call void @llvm.trap()
  br label %originalBB14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructI6TensorILi2ELi3EES1_EvPT_RKT0_(%class.Tensor.33*, %class.Tensor.33* dereferenceable(72)) #0 comdat {
  %3 = alloca %class.Tensor.33*, align 8
  %4 = alloca %class.Tensor.33*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %3, align 8
  store %class.Tensor.33* %1, %class.Tensor.33** %4, align 8
  %5 = load %class.Tensor.33*, %class.Tensor.33** %3, align 8
  %6 = bitcast %class.Tensor.33* %5 to i8*
  %7 = bitcast i8* %6 to %class.Tensor.33*
  %8 = load %class.Tensor.33*, %class.Tensor.33** %4, align 8
  call void @_ZN6TensorILi2ELi3EEC2ERKS0_(%class.Tensor.33* %7, %class.Tensor.33* dereferenceable(72) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Tensor.33* @_ZSt11__addressofI6TensorILi2ELi3EEEPT_RS2_(%class.Tensor.33* dereferenceable(72)) #1 comdat {
  %2 = alloca %class.Tensor.33*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %2, align 8
  %3 = load %class.Tensor.33*, %class.Tensor.33** %2, align 8
  ret %class.Tensor.33* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP6TensorILi2ELi3EEEvT_S3_(%class.Tensor.33*, %class.Tensor.33*) #0 comdat {
  %3 = alloca %class.Tensor.33*, align 8
  %4 = alloca %class.Tensor.33*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %3, align 8
  store %class.Tensor.33* %1, %class.Tensor.33** %4, align 8
  %5 = load %class.Tensor.33*, %class.Tensor.33** %3, align 8
  %6 = load %class.Tensor.33*, %class.Tensor.33** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP6TensorILi2ELi3EEEEvT_S5_(%class.Tensor.33* %5, %class.Tensor.33* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6TensorILi2ELi3EEC2ERKS0_(%class.Tensor.33*, %class.Tensor.33* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Tensor.33*, align 8
  %4 = alloca %class.Tensor.33*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %3, align 8
  store %class.Tensor.33* %1, %class.Tensor.33** %4, align 8
  %5 = load %class.Tensor.33*, %class.Tensor.33** %3, align 8
  %6 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %5, i32 0, i32 0
  %7 = load %class.Tensor.33*, %class.Tensor.33** %4, align 8
  %8 = getelementptr inbounds %class.Tensor.33, %class.Tensor.33* %7, i32 0, i32 0
  %9 = getelementptr inbounds [3 x %class.Tensor], [3 x %class.Tensor]* %6, i64 0, i64 0
  br label %10

; <label>:10:                                     ; preds = %10, %2
  %11 = phi i64 [ 0, %2 ], [ %14, %10 ]
  %12 = getelementptr inbounds %class.Tensor, %class.Tensor* %9, i64 %11
  %13 = getelementptr inbounds [3 x %class.Tensor], [3 x %class.Tensor]* %8, i64 0, i64 %11
  call void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor* %12, %class.Tensor* dereferenceable(24) %13)
  %14 = add nuw i64 %11, 1
  %15 = icmp eq i64 %14, 3
  br i1 %15, label %16, label %10

; <label>:16:                                     ; preds = %10
  %17 = load i32, i32* @x.699
  %18 = load i32, i32* @y.700
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i32, i32* @x.699
  %26 = load i32, i32* @y.700
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %16
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP6TensorILi2ELi3EEEEvT_S5_(%class.Tensor.33*, %class.Tensor.33*) #1 comdat align 2 {
  %3 = load i32, i32* @x.701
  %4 = load i32, i32* @y.702
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Tensor.33*, align 8
  %12 = alloca %class.Tensor.33*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %11, align 8
  store %class.Tensor.33* %1, %class.Tensor.33** %12, align 8
  %13 = load i32, i32* @x.701
  %14 = load i32, i32* @y.702
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %21 = alloca %class.Tensor.33*, align 8
  %22 = alloca %class.Tensor.33*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %21, align 8
  store %class.Tensor.33* %1, %class.Tensor.33** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.66"*, %class.Tensor.33*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.66"*, align 8
  %5 = alloca %class.Tensor.33*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.66"* %0, %"struct.std::_Vector_base.66"** %4, align 8
  store %class.Tensor.33* %1, %class.Tensor.33** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.66"*, %"struct.std::_Vector_base.66"** %4, align 8
  %8 = load %class.Tensor.33*, %class.Tensor.33** %5, align 8
  %9 = icmp ne %class.Tensor.33* %8, null
  br i1 %9, label %10, label %31

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* @x.703
  %12 = load i32, i32* @y.704
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %7, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %19 to %"class.std::allocator.67"*
  %21 = load %class.Tensor.33*, %class.Tensor.33** %5, align 8
  %22 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi2ELi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.67"* dereferenceable(1) %20, %class.Tensor.33* %21, i64 %22)
  %23 = load i32, i32* @x.703
  %24 = load i32, i32* @y.704
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2, %3
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %32 = getelementptr inbounds %"struct.std::_Vector_base.66", %"struct.std::_Vector_base.66"* %7, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %32 to %"class.std::allocator.67"*
  %34 = load %class.Tensor.33*, %class.Tensor.33** %5, align 8
  %35 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi2ELi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.67"* dereferenceable(1) %33, %class.Tensor.33* %34, i64 %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi2ELi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.67"* dereferenceable(1), %class.Tensor.33*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.705
  %5 = load i32, i32* @y.706
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.67"*, align 8
  %13 = alloca %class.Tensor.33*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator.67"* %0, %"class.std::allocator.67"** %12, align 8
  store %class.Tensor.33* %1, %class.Tensor.33** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %12, align 8
  %16 = bitcast %"class.std::allocator.67"* %15 to %"class.__gnu_cxx::new_allocator.68"*
  %17 = load %class.Tensor.33*, %class.Tensor.33** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.68"* %16, %class.Tensor.33* %17, i64 %18)
  %19 = load i32, i32* @x.705
  %20 = load i32, i32* @y.706
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.67"*, align 8
  %28 = alloca %class.Tensor.33*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.67"* %0, %"class.std::allocator.67"** %27, align 8
  store %class.Tensor.33* %1, %class.Tensor.33** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator.67"*, %"class.std::allocator.67"** %27, align 8
  %31 = bitcast %"class.std::allocator.67"* %30 to %"class.__gnu_cxx::new_allocator.68"*
  %32 = load %class.Tensor.33*, %class.Tensor.33** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.68"* %31, %class.Tensor.33* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.68"*, %class.Tensor.33*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.68"*, align 8
  %5 = alloca %class.Tensor.33*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.68"* %0, %"class.__gnu_cxx::new_allocator.68"** %4, align 8
  store %class.Tensor.33* %1, %class.Tensor.33** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.68"*, %"class.__gnu_cxx::new_allocator.68"** %4, align 8
  %8 = load %class.Tensor.33*, %class.Tensor.33** %5, align 8
  %9 = bitcast %class.Tensor.33* %8 to i8*
  call void @_ZdlPv(i8* %9) #12
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP6TensorILi2ELi3EES1_EvT_S3_RSaIT0_E(%class.Tensor.33*, %class.Tensor.33*, %"class.std::allocator.67"* dereferenceable(1)) #0 comdat {
  %4 = load i32, i32* @x.709
  %5 = load i32, i32* @y.710
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Tensor.33*, align 8
  %13 = alloca %class.Tensor.33*, align 8
  %14 = alloca %"class.std::allocator.67"*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %12, align 8
  store %class.Tensor.33* %1, %class.Tensor.33** %13, align 8
  store %"class.std::allocator.67"* %2, %"class.std::allocator.67"** %14, align 8
  %15 = load %class.Tensor.33*, %class.Tensor.33** %12, align 8
  %16 = load %class.Tensor.33*, %class.Tensor.33** %13, align 8
  call void @_ZSt8_DestroyIP6TensorILi2ELi3EEEvT_S3_(%class.Tensor.33* %15, %class.Tensor.33* %16)
  %17 = load i32, i32* @x.709
  %18 = load i32, i32* @y.710
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %25 = alloca %class.Tensor.33*, align 8
  %26 = alloca %class.Tensor.33*, align 8
  %27 = alloca %"class.std::allocator.67"*, align 8
  store %class.Tensor.33* %0, %class.Tensor.33** %25, align 8
  store %class.Tensor.33* %1, %class.Tensor.33** %26, align 8
  store %"class.std::allocator.67"* %2, %"class.std::allocator.67"** %27, align 8
  %28 = load %class.Tensor.33*, %class.Tensor.33** %25, align 8
  %29 = load %class.Tensor.33*, %class.Tensor.33** %26, align 8
  call void @_ZSt8_DestroyIP6TensorILi2ELi3EEEvT_S3_(%class.Tensor.33* %28, %class.Tensor.33* %29)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIP6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.70"*, %class.Tensor.33** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.711
  %4 = load i32, i32* @y.712
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.70"*, align 8
  %12 = alloca %class.Tensor.33**, align 8
  store %"class.__gnu_cxx::__normal_iterator.70"* %0, %"class.__gnu_cxx::__normal_iterator.70"** %11, align 8
  store %class.Tensor.33** %1, %class.Tensor.33*** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator.70"*, %"class.__gnu_cxx::__normal_iterator.70"** %11, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %13, i32 0, i32 0
  %15 = load %class.Tensor.33**, %class.Tensor.33*** %12, align 8
  %16 = load %class.Tensor.33*, %class.Tensor.33** %15, align 8
  store %class.Tensor.33* %16, %class.Tensor.33** %14, align 8
  %17 = load i32, i32* @x.711
  %18 = load i32, i32* @y.712
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.70"*, align 8
  %26 = alloca %class.Tensor.33**, align 8
  store %"class.__gnu_cxx::__normal_iterator.70"* %0, %"class.__gnu_cxx::__normal_iterator.70"** %25, align 8
  store %class.Tensor.33** %1, %class.Tensor.33*** %26, align 8
  %27 = load %"class.__gnu_cxx::__normal_iterator.70"*, %"class.__gnu_cxx::__normal_iterator.70"** %25, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.70", %"class.__gnu_cxx::__normal_iterator.70"* %27, i32 0, i32 0
  %29 = load %class.Tensor.33**, %class.Tensor.33*** %26, align 8
  %30 = load %class.Tensor.33*, %class.Tensor.33** %29, align 8
  store %class.Tensor.33* %30, %class.Tensor.33** %28, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEdeEv(%class.TriaRawIterator*) #1 comdat align 2 {
  %2 = load i32, i32* @x.713
  %3 = load i32, i32* @y.714
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %10, align 8
  %11 = load %class.TriaRawIterator*, %class.TriaRawIterator** %10, align 8
  %12 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %11, i32 0, i32 0
  %13 = load i32, i32* @x.713
  %14 = load i32, i32* @y.714
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.DoFCellAccessor* %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %21, align 8
  %22 = load %class.TriaRawIterator*, %class.TriaRawIterator** %21, align 8
  %23 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %22, i32 0, i32 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector.72"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.72"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.72"* %0, %"class.std::vector.72"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.72"*, %"class.std::vector.72"** %3, align 8
  %6 = bitcast %"class.std::vector.72"* %5 to %"struct.std::_Vector_base.73"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.73", %"struct.std::_Vector_base.73"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.TriangulationLevel**, %class.TriangulationLevel*** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.TriangulationLevel*, %class.TriangulationLevel** %10, i64 %11
  ret %class.TriangulationLevel** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.7"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_reference", align 8
  %4 = alloca %"class.std::vector.7"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %8 = bitcast %"class.std::vector.7"* %7 to %"struct.std::_Bvector_base"*
  %9 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %8, i32 0, i32 0
  %10 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %9 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %10, i32 0, i32 0
  %12 = bitcast %"struct.std::_Bit_iterator"* %11 to %"struct.std::_Bit_iterator_base"*
  %13 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = load i64, i64* %5, align 8
  %16 = udiv i64 %15, 64
  %17 = getelementptr inbounds i64, i64* %14, i64 %16
  %18 = load i64, i64* %5, align 8
  %19 = urem i64 %18, 64
  %20 = trunc i64 %19 to i32
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %6, i64* %17, i32 %20)
  %21 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %6)
  %22 = bitcast %"struct.std::_Bit_reference"* %3 to { i64*, i64 }*
  %23 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %22, i32 0, i32 0
  %24 = extractvalue { i64*, i64 } %21, 0
  store i64* %24, i64** %23, align 8
  %25 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %22, i32 0, i32 1
  %26 = extractvalue { i64*, i64 } %21, 1
  store i64 %26, i64* %25, align 8
  %27 = bitcast %"struct.std::_Bit_reference"* %3 to { i64*, i64 }*
  %28 = load { i64*, i64 }, { i64*, i64 }* %27, align 8
  ret { i64*, i64 } %28
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_(i64, %"class.std::allocator.30"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::allocator.30"*, align 8
  %5 = alloca %"class.std::allocator.30", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store i64 %0, i64* %3, align 8
  store %"class.std::allocator.30"* %1, %"class.std::allocator.30"** %4, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %4, align 8
  call void @_ZNSaIjEC2ERKS_(%"class.std::allocator.30"* %5, %"class.std::allocator.30"* dereferenceable(1) %9) #12
  %10 = invoke i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator.30"* dereferenceable(1) %5)
          to label %11 unwind label %30

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.719
  %13 = load i32, i32* @y.720
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = icmp ugt i64 %8, %10
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %5) #12
  %21 = load i32, i32* @x.719
  %22 = load i32, i32* @y.720
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %50

; <label>:29:                                     ; preds = %originalBBpart2
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i32 0, i32 0)) #15
  unreachable

; <label>:30:                                     ; preds = %2
  %31 = load i32, i32* @x.719
  %32 = load i32, i32* @y.720
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %6, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %7, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %5) #12
  %42 = load i32, i32* @x.719
  %43 = load i32, i32* @y.720
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %68

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = load i32, i32* @x.719
  %52 = load i32, i32* @y.720
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = load i64, i64* %3, align 8
  %60 = load i32, i32* @x.719
  %61 = load i32, i32* @y.720
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i64 %59

; <label>:68:                                     ; preds = %originalBBpart24
  %69 = load i32, i32* @x.719
  %70 = load i32, i32* @y.720
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  %77 = load i8*, i8** %6, align 8
  %78 = load i32, i32* %7, align 4
  %79 = insertvalue { i8*, i32 } undef, i8* %77, 0
  %80 = insertvalue { i8*, i32 } %79, i32 %78, 1
  %81 = load i32, i32* @x.719
  %82 = load i32, i32* @y.720
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %80

originalBBalteredBB:                              ; preds = %originalBB, %11
  %89 = icmp ugt i64 %8, %10
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %5) #12
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %90 = landingpad { i8*, i32 }
          cleanup
  %91 = extractvalue { i8*, i32 } %90, 0
  store i8* %91, i8** %6, align 8
  %92 = extractvalue { i8*, i32 } %90, 1
  store i32 %92, i32* %7, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %5) #12
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %93 = load i64, i64* %3, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  %94 = load i8*, i8** %6, align 8
  %95 = load i32, i32* %7, align 4
  %96 = insertvalue { i8*, i32 } undef, i8* %94, 0
  %97 = insertvalue { i8*, i32 } %96, i32 %95, 1
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_(%"struct.std::_Vector_base.29"*, i64, %"class.std::allocator.30"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.29"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.30"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.30"* %2, %"class.std::allocator.30"** %6, align 8
  %9 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %6, align 8
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10, %"class.std::allocator.30"* dereferenceable(1) %11)
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm(%"struct.std::_Vector_base.29"* %9, i64 %12)
          to label %13 unwind label %30

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.721
  %15 = load i32, i32* @y.722
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i32, i32* @x.721
  %23 = load i32, i32* @y.722
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:30:                                     ; preds = %3
  %31 = load i32, i32* @x.721
  %32 = load i32, i32* @y.722
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %7, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10) #12
  %42 = load i32, i32* @x.721
  %43 = load i32, i32* @y.722
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %50

; <label>:50:                                     ; preds = %originalBBpart24
  %51 = load i8*, i8** %7, align 8
  %52 = load i32, i32* %8, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  resume { i8*, i32 } %54

originalBBalteredBB:                              ; preds = %originalBB, %13
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %7, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10) #12
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj(%"class.std::vector.28"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = load i32, i32* @x.723
  %5 = load i32, i32* @y.724
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector.28"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i32* %2, i32** %14, align 8
  %15 = load %"class.std::vector.28"*, %"class.std::vector.28"** %12, align 8
  %16 = bitcast %"class.std::vector.28"* %15 to %"struct.std::_Vector_base.29"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %17 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %18, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = load i64, i64* %13, align 8
  %22 = load i32*, i32** %14, align 8
  %23 = bitcast %"class.std::vector.28"* %15 to %"struct.std::_Vector_base.29"*
  %24 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %23)
  %25 = call i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %20, i64 %21, i32* dereferenceable(4) %22, %"class.std::allocator.30"* dereferenceable(1) %24)
  %26 = bitcast %"class.std::vector.28"* %15 to %"struct.std::_Vector_base.29"*
  %27 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %26, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %27 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %29 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %28, i32 0, i32 1
  store i32* %25, i32** %29, align 8
  %30 = load i32, i32* @x.723
  %31 = load i32, i32* @y.724
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %38 = alloca %"class.std::vector.28"*, align 8
  %39 = alloca i64, align 8
  %40 = alloca i32*, align 8
  store %"class.std::vector.28"* %0, %"class.std::vector.28"** %38, align 8
  store i64 %1, i64* %39, align 8
  store i32* %2, i32** %40, align 8
  %41 = load %"class.std::vector.28"*, %"class.std::vector.28"** %38, align 8
  %42 = bitcast %"class.std::vector.28"* %41 to %"struct.std::_Vector_base.29"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %42, i32 0, i32 0
  %44 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %43 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %44, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = load i64, i64* %39, align 8
  %48 = load i32*, i32** %40, align 8
  %49 = bitcast %"class.std::vector.28"* %41 to %"struct.std::_Vector_base.29"*
  %50 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.29"* %49)
  %51 = call i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %46, i64 %47, i32* dereferenceable(4) %48, %"class.std::allocator.30"* dereferenceable(1) %50)
  %52 = bitcast %"class.std::vector.28"* %41 to %"struct.std::_Vector_base.29"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %52, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %53 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %54, i32 0, i32 1
  store i32* %51, i32** %55, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator.30"* dereferenceable(1)) #0 comdat align 2 {
  %2 = load i32, i32* @x.725
  %3 = load i32, i32* @y.726
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.30"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %10, align 8
  store i64 2305843009213693951, i64* %11, align 8
  %13 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %10, align 8
  %14 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_(%"class.std::allocator.30"* dereferenceable(1) %13)
  store i64 %14, i64* %12, align 8
  %15 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %12)
  %16 = load i64, i64* %15, align 8
  %17 = load i32, i32* @x.725
  %18 = load i32, i32* @y.726
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %"class.std::allocator.30"*, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %25, align 8
  store i64 2305843009213693951, i64* %26, align 8
  %28 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %25, align 8
  %29 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_(%"class.std::allocator.30"* dereferenceable(1) %28)
  store i64 %29, i64* %27, align 8
  %30 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %26, i64* dereferenceable(8) %27)
  %31 = load i64, i64* %30, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjEC2ERKS_(%"class.std::allocator.30"*, %"class.std::allocator.30"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.30"*, align 8
  %4 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %3, align 8
  store %"class.std::allocator.30"* %1, %"class.std::allocator.30"** %4, align 8
  %5 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %3, align 8
  %6 = bitcast %"class.std::allocator.30"* %5 to %"class.__gnu_cxx::new_allocator.31"*
  %7 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %4, align 8
  %8 = bitcast %"class.std::allocator.30"* %7 to %"class.__gnu_cxx::new_allocator.31"*
  call void @_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_(%"class.__gnu_cxx::new_allocator.31"* %6, %"class.__gnu_cxx::new_allocator.31"* dereferenceable(1) %8) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_(%"class.std::allocator.30"* dereferenceable(1)) #1 comdat align 2 {
  %2 = load i32, i32* @x.729
  %3 = load i32, i32* @y.730
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %10, align 8
  %11 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %10, align 8
  %12 = bitcast %"class.std::allocator.30"* %11 to %"class.__gnu_cxx::new_allocator.31"*
  %13 = call i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.31"* %12) #12
  %14 = load i32, i32* @x.729
  %15 = load i32, i32* @y.730
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %22, align 8
  %23 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %22, align 8
  %24 = bitcast %"class.std::allocator.30"* %23 to %"class.__gnu_cxx::new_allocator.31"*
  %25 = call i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.31"* %24) #12
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.31"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.731
  %3 = load i32, i32* @y.732
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %10, align 8
  %12 = load i32, i32* @x.731
  %13 = load i32, i32* @y.732
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 2305843009213693951

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_(%"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %1, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"class.std::allocator.30"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.30"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.30"* %1, %"class.std::allocator.30"** %4, align 8
  %7 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"class.std::allocator.30"*
  %9 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %4, align 8
  call void @_ZNSaIjEC2ERKS_(%"class.std::allocator.30"* %8, %"class.std::allocator.30"* dereferenceable(1) %9) #12
  %10 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"class.std::allocator.30"*
  call void @_ZNSaIjED2Ev(%"class.std::allocator.30"* %16) #12
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = load i32, i32* %6, align 4
  %20 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm(%"struct.std::_Vector_base.29"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.737
  %4 = load i32, i32* @y.738
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.29"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = call i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.29"* %13, i64 %14)
  %16 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %16 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %17, i32 0, i32 0
  store i32* %15, i32** %18, align 8
  %19 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %19 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %20, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %23 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %24, i32 0, i32 1
  store i32* %22, i32** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %26 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %27, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = load i64, i64* %12, align 8
  %31 = getelementptr inbounds i32, i32* %29, i64 %30
  %32 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %13, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %32 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %33, i32 0, i32 2
  store i32* %31, i32** %34, align 8
  %35 = load i32, i32* @x.737
  %36 = load i32, i32* @y.738
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %43 = alloca %"struct.std::_Vector_base.29"*, align 8
  %44 = alloca i64, align 8
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %43, align 8
  store i64 %1, i64* %44, align 8
  %45 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %43, align 8
  %46 = load i64, i64* %44, align 8
  %47 = call i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.29"* %45, i64 %46)
  %48 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %45, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %48 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %49, i32 0, i32 0
  store i32* %47, i32** %50, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %45, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %51 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %52, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %45, i32 0, i32 0
  %56 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %55 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %56, i32 0, i32 1
  store i32* %54, i32** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %45, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %58 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %59, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = load i64, i64* %44, align 8
  %63 = getelementptr inbounds i32, i32* %61, i64 %62
  %64 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %45, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %64 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %65, i32 0, i32 2
  store i32* %63, i32** %66, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.739
  %3 = load i32, i32* @y.740
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %10, align 8
  %11 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 0
  store i32* null, i32** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 1
  store i32* null, i32** %13, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 2
  store i32* null, i32** %14, align 8
  %15 = load i32, i32* @x.739
  %16 = load i32, i32* @y.740
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %23, align 8
  %24 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %24, i32 0, i32 0
  store i32* null, i32** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %24, i32 0, i32 1
  store i32* null, i32** %26, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %24, i32 0, i32 2
  store i32* null, i32** %27, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.29"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.29"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.29"* %0, %"struct.std::_Vector_base.29"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.29"*, %"struct.std::_Vector_base.29"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base.29", %"struct.std::_Vector_base.29"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %9 to %"class.std::allocator.30"*
  %11 = load i64, i64* %4, align 8
  %12 = call i32* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m(%"class.std::allocator.30"* dereferenceable(1) %10, i64 %11)
  br label %14

; <label>:13:                                     ; preds = %2
  br label %14

; <label>:14:                                     ; preds = %13, %8
  %15 = phi i32* [ %12, %8 ], [ null, %13 ]
  %16 = load i32, i32* @x.741
  %17 = load i32, i32* @y.742
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %24 = load i32, i32* @x.741
  %25 = load i32, i32* @y.742
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %15

originalBBalteredBB:                              ; preds = %originalBB, %14
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m(%"class.std::allocator.30"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.743
  %4 = load i32, i32* @y.744
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.30"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %11, align 8
  %14 = bitcast %"class.std::allocator.30"* %13 to %"class.__gnu_cxx::new_allocator.31"*
  %15 = load i64, i64* %12, align 8
  %16 = call i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.31"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.743
  %18 = load i32, i32* @y.744
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.30"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %25, align 8
  %28 = bitcast %"class.std::allocator.30"* %27 to %"class.__gnu_cxx::new_allocator.31"*
  %29 = load i64, i64* %26, align 8
  %30 = call i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.31"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.31"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.31"* %7) #12
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.745
  %14 = load i32, i32* @y.746
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64, i64* %5, align 8
  %22 = mul i64 %21, 4
  %23 = call i8* @_Znwm(i64 %22)
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* @x.745
  %26 = load i32, i32* @y.746
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %24

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = load i64, i64* %5, align 8
  %_ = shl i64 %33, 4
  %_1 = shl i64 %33, 4
  %_2 = shl i64 %33, 4
  %34 = mul i64 %33, 4
  %35 = call i8* @_Znwm(i64 %34)
  %36 = bitcast i8* %35 to i32*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.30"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.30"*, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.30"* %3, %"class.std::allocator.30"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_(i32* %9, i64 %10, i32* dereferenceable(4) %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = load i32, i32* @x.751
  %5 = load i32, i32* @y.752
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  store i32* %0, i32** %12, align 8
  store i64 %1, i64* %13, align 8
  store i32* %2, i32** %14, align 8
  %15 = load i32*, i32** %12, align 8
  %16 = load i64, i64* %13, align 8
  %17 = load i32*, i32** %14, align 8
  %18 = call i32* @_ZSt6fill_nIPjmjET_S1_T0_RKT1_(i32* %15, i64 %16, i32* dereferenceable(4) %17)
  %19 = load i32, i32* @x.751
  %20 = load i32, i32* @y.752
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %18

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca i32*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i32*, align 8
  store i32* %0, i32** %27, align 8
  store i64 %1, i64* %28, align 8
  store i32* %2, i32** %29, align 8
  %30 = load i32*, i32** %27, align 8
  %31 = load i64, i64* %28, align 8
  %32 = load i32*, i32** %29, align 8
  %33 = call i32* @_ZSt6fill_nIPjmjET_S1_T0_RKT1_(i32* %30, i64 %31, i32* dereferenceable(4) %32)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPjmjET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = load i32, i32* @x.753
  %5 = load i32, i32* @y.754
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  store i32* %0, i32** %12, align 8
  store i64 %1, i64* %13, align 8
  store i32* %2, i32** %14, align 8
  %15 = load i32*, i32** %12, align 8
  %16 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %15)
  %17 = load i64, i64* %13, align 8
  %18 = load i32*, i32** %14, align 8
  %19 = call i32* @_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %16, i64 %17, i32* dereferenceable(4) %18)
  %20 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %12, i32* %19)
  %21 = load i32, i32* @x.753
  %22 = load i32, i32* @y.754
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca i32*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i32*, align 8
  store i32* %0, i32** %29, align 8
  store i64 %1, i64* %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load i32*, i32** %29, align 8
  %33 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %32)
  %34 = load i64, i64* %30, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = call i32* @_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %33, i64 %34, i32* dereferenceable(4) %35)
  %37 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %29, i32* %36)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8), i32*) #1 comdat {
  %3 = load i32, i32* @x.755
  %4 = load i32, i32* @y.756
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32**, align 8
  %12 = alloca i32*, align 8
  store i32** %0, i32*** %11, align 8
  store i32* %1, i32** %12, align 8
  %13 = load i32*, i32** %12, align 8
  %14 = load i32, i32* @x.755
  %15 = load i32, i32* @y.756
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca i32**, align 8
  %23 = alloca i32*, align 8
  store i32** %0, i32*** %22, align 8
  store i32* %1, i32** %23, align 8
  %24 = load i32*, i32** %23, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #1 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %7, align 4
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  br label %12

; <label>:12:                                     ; preds = %18, %3
  %13 = load i64, i64* %8, align 8
  %14 = icmp ugt i64 %13, 0
  br i1 %14, label %15, label %23

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* %7, align 4
  %17 = load i32*, i32** %4, align 8
  store i32 %16, i32* %17, align 4
  br label %18

; <label>:18:                                     ; preds = %15
  %19 = load i64, i64* %8, align 8
  %20 = add i64 %19, -1
  store i64 %20, i64* %8, align 8
  %21 = load i32*, i32** %4, align 8
  %22 = getelementptr inbounds i32, i32* %21, i32 1
  store i32* %22, i32** %4, align 8
  br label %12

; <label>:23:                                     ; preds = %12
  %24 = load i32*, i32** %4, align 8
  ret i32* %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPjET_S1_(i32*) #1 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase*) #1 comdat align 2 {
  %2 = alloca %class.TableBase*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %class.TableBase* %0, %class.TableBase** %2, align 8
  %5 = load %class.TableBase*, %class.TableBase** %2, align 8
  store i32 1, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %6

; <label>:6:                                      ; preds = %16, %1
  %7 = load i32, i32* %4, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %19

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 3
  %11 = bitcast %class.TableIndices* %10 to %class.TableIndicesBase*
  %12 = load i32, i32* %4, align 4
  %13 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %11, i32 %12)
  %14 = load i32, i32* %3, align 4
  %15 = mul i32 %14, %13
  store i32 %15, i32* %3, align 4
  br label %16

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* %4, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* %4, align 4
  br label %6

; <label>:19:                                     ; preds = %6
  %20 = load i32, i32* %3, align 4
  ret i32 %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EdE12reset_valuesEv(%class.TableBase*) #0 comdat align 2 {
  %2 = load i32, i32* @x.763
  %3 = load i32, i32* @y.764
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase*, align 8
  %11 = alloca double, align 8
  store %class.TableBase* %0, %class.TableBase** %10, align 8
  %12 = load %class.TableBase*, %class.TableBase** %10, align 8
  %13 = call i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase* %12)
  %14 = icmp ne i32 %13, 0
  %15 = load i32, i32* @x.763
  %16 = load i32, i32* @y.764
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %28

; <label>:23:                                     ; preds = %originalBBpart2
  %24 = getelementptr inbounds %class.TableBase, %class.TableBase* %12, i32 0, i32 1
  %25 = load double*, double** %24, align 8
  %26 = call i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase* %12)
  store double 0.000000e+00, double* %11, align 8
  %27 = call double* @_ZSt6fill_nIPdjdET_S1_T0_RKT1_(double* %25, i32 %26, double* dereferenceable(8) %11)
  br label %28

; <label>:28:                                     ; preds = %23, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %29 = alloca %class.TableBase*, align 8
  %30 = alloca double, align 8
  store %class.TableBase* %0, %class.TableBase** %29, align 8
  %31 = load %class.TableBase*, %class.TableBase** %29, align 8
  %32 = call i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase* %31)
  %33 = icmp ne i32 %32, 0
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt6fill_nIPdjdET_S1_T0_RKT1_(double*, i32, double* dereferenceable(8)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca i32, align 4
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store i32 %1, i32* %5, align 4
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load i32, i32* %5, align 4
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZSt10__fill_n_aIPdjdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double* %8, i32 %9, double* dereferenceable(8) %10)
  %12 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %4, double* %11)
  ret double* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8), double*) #1 comdat {
  %3 = load i32, i32* @x.767
  %4 = load i32, i32* @y.768
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca double**, align 8
  %12 = alloca double*, align 8
  store double** %0, double*** %11, align 8
  store double* %1, double** %12, align 8
  %13 = load double*, double** %12, align 8
  %14 = load i32, i32* @x.767
  %15 = load i32, i32* @y.768
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca double**, align 8
  %23 = alloca double*, align 8
  store double** %0, double*** %22, align 8
  store double* %1, double** %23, align 8
  %24 = load double*, double** %23, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt10__fill_n_aIPdjdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double*, i32, double* dereferenceable(8)) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca i32, align 4
  %6 = alloca double*, align 8
  %7 = alloca double, align 8
  %8 = alloca i32, align 4
  store double* %0, double** %4, align 8
  store i32 %1, i32* %5, align 4
  store double* %2, double** %6, align 8
  %9 = load double*, double** %6, align 8
  %10 = load double, double* %9, align 8
  store double %10, double* %7, align 8
  %11 = load i32, i32* %5, align 4
  store i32 %11, i32* %8, align 4
  br label %12

; <label>:12:                                     ; preds = %18, %3
  %13 = load i32, i32* %8, align 4
  %14 = icmp ugt i32 %13, 0
  br i1 %14, label %15, label %23

; <label>:15:                                     ; preds = %12
  %16 = load double, double* %7, align 8
  %17 = load double*, double** %4, align 8
  store double %16, double* %17, align 8
  br label %18

; <label>:18:                                     ; preds = %15
  %19 = load i32, i32* %8, align 4
  %20 = add i32 %19, -1
  store i32 %20, i32* %8, align 4
  %21 = load double*, double** %4, align 8
  %22 = getelementptr inbounds double, double* %21, i32 1
  store double* %22, double** %4, align 8
  br label %12

; <label>:23:                                     ; preds = %12
  %24 = load double*, double** %4, align 8
  ret double* %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPdET_S1_(double*) #1 comdat {
  %2 = load i32, i32* @x.771
  %3 = load i32, i32* @y.772
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca double*, align 8
  store double* %0, double** %10, align 8
  %11 = load double*, double** %10, align 8
  %12 = load i32, i32* @x.771
  %13 = load i32, i32* @y.772
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca double*, align 8
  store double* %0, double** %20, align 8
  %21 = load double*, double** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EdE4fillIdEEvPKT_(%class.TableBase*, double*) #0 comdat align 2 {
  %3 = alloca %class.TableBase*, align 8
  %4 = alloca double*, align 8
  store %class.TableBase* %0, %class.TableBase** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %class.TableBase*, %class.TableBase** %3, align 8
  %6 = load double*, double** %4, align 8
  %7 = load double*, double** %4, align 8
  %8 = call i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase* %5)
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds double, double* %7, i64 %9
  %11 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 1
  %12 = load double*, double** %11, align 8
  %13 = call double* @_ZSt4copyIPKdPdET0_T_S4_S3_(double* %6, double* %10, double* %12)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyIPKdPdET0_T_S4_S3_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__miter_baseIPKdET_S2_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__miter_baseIPKdET_S2_(double* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_(double* %8, double* %10, double* %11)
  ret double* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPKdET_S2_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__niter_baseIPKdET_S2_(double* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %11)
  %13 = call double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double* %8, double* %10, double* %12)
  %14 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %6, double* %13)
  ret double* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__miter_baseIPKdET_S2_(double*) #1 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  ret double* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %8, double* %9, double* %10)
  ret double* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPKdET_S2_(double*) #1 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  ret double* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double*, double*, double*) #1 comdat align 2 {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i64, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %8 = load double*, double** %5, align 8
  %9 = load double*, double** %4, align 8
  %10 = ptrtoint double* %8 to i64
  %11 = ptrtoint double* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %23

; <label>:16:                                     ; preds = %3
  %17 = load double*, double** %6, align 8
  %18 = bitcast double* %17 to i8*
  %19 = load double*, double** %4, align 8
  %20 = bitcast double* %19 to i8*
  %21 = load i64, i64* %7, align 8
  %22 = mul i64 8, %21
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %18, i8* %20, i64 %22, i32 8, i1 false)
  br label %23

; <label>:23:                                     ; preds = %16, %3
  %24 = load i32, i32* @x.785
  %25 = load i32, i32* @y.786
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %23, %originalBBalteredBB
  %32 = load double*, double** %6, align 8
  %33 = load i64, i64* %7, align 8
  %34 = getelementptr inbounds double, double* %32, i64 %33
  %35 = load i32, i32* @x.785
  %36 = load i32, i32* @y.786
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %34

originalBBalteredBB:                              ; preds = %originalBB, %23
  %43 = load double*, double** %6, align 8
  %44 = load i64, i64* %7, align 8
  %45 = getelementptr inbounds double, double* %43, i64 %44
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.787
  %3 = load i32, i32* @y.788
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %10, align 8
  %11 = load %"class.std::vector.11"*, %"class.std::vector.11"** %10, align 8
  %12 = bitcast %"class.std::vector.11"* %11 to %"struct.std::_Vector_base.12"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %13 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %14, i32 0, i32 1
  %16 = load %class.Point*, %class.Point** %15, align 8
  %17 = bitcast %"class.std::vector.11"* %11 to %"struct.std::_Vector_base.12"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %class.Point*, %class.Point** %20, align 8
  %22 = ptrtoint %class.Point* %16 to i64
  %23 = ptrtoint %class.Point* %21 to i64
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 24
  %26 = load i32, i32* @x.787
  %27 = load i32, i32* @y.788
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %25

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %34, align 8
  %35 = load %"class.std::vector.11"*, %"class.std::vector.11"** %34, align 8
  %36 = bitcast %"class.std::vector.11"* %35 to %"struct.std::_Vector_base.12"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %37 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %38, i32 0, i32 1
  %40 = load %class.Point*, %class.Point** %39, align 8
  %41 = bitcast %"class.std::vector.11"* %35 to %"struct.std::_Vector_base.12"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %42 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load %class.Point*, %class.Point** %44, align 8
  %46 = ptrtoint %class.Point* %40 to i64
  %47 = ptrtoint %class.Point* %45 to i64
  %_ = sub i64 %46, %47
  %gen = mul i64 %_, %47
  %_1 = sub i64 %46, %47
  %gen2 = mul i64 %_1, %47
  %_3 = sub i64 0, %46
  %gen4 = add i64 %_3, %47
  %_5 = sub i64 0, %46
  %gen6 = add i64 %_5, %47
  %_7 = sub i64 0, %46
  %gen8 = add i64 %_7, %47
  %_9 = shl i64 %46, %47
  %48 = sub i64 %46, %47
  %_10 = shl i64 %48, 24
  %_11 = sub i64 0, %48
  %gen12 = add i64 %_11, 24
  %_13 = shl i64 %48, 24
  %49 = sdiv exact i64 %48, 24
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.11"*, %class.Point*, i64, %class.Point* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.789
  %6 = load i32, i32* @y.790
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.129", align 8
  %14 = alloca %"class.std::vector.11"*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %class.Point*, align 8
  %17 = alloca %class.Point, align 8
  %18 = alloca i64, align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.129", align 8
  %20 = alloca %class.Point*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca %"class.__gnu_cxx::__normal_iterator.129", align 8
  %24 = alloca %class.Point*, align 8
  %25 = alloca %class.Point*, align 8
  %26 = alloca i8*
  %27 = alloca i32
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.129", %"class.__gnu_cxx::__normal_iterator.129"* %13, i32 0, i32 0
  store %class.Point* %1, %class.Point** %28, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %14, align 8
  store i64 %2, i64* %15, align 8
  store %class.Point* %3, %class.Point** %16, align 8
  %29 = load %"class.std::vector.11"*, %"class.std::vector.11"** %14, align 8
  %30 = load i64, i64* %15, align 8
  %31 = icmp ne i64 %30, 0
  %32 = load i32, i32* @x.789
  %33 = load i32, i32* @y.790
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %404

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %42 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %43, i32 0, i32 2
  %45 = load %class.Point*, %class.Point** %44, align 8
  %46 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %46, i32 0, i32 0
  %48 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %47 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %48, i32 0, i32 1
  %50 = load %class.Point*, %class.Point** %49, align 8
  %51 = ptrtoint %class.Point* %45 to i64
  %52 = ptrtoint %class.Point* %50 to i64
  %53 = sub i64 %51, %52
  %54 = sdiv exact i64 %53, 24
  %55 = load i64, i64* %15, align 8
  %56 = icmp uge i64 %54, %55
  br i1 %56, label %57, label %167

; <label>:57:                                     ; preds = %40
  %58 = load %class.Point*, %class.Point** %16, align 8
  call void @_ZN5PointILi3EEC2ERKS0_(%class.Point* %17, %class.Point* dereferenceable(24) %58)
  %59 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.11"* %29)
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.129", %"class.__gnu_cxx::__normal_iterator.129"* %19, i32 0, i32 0
  store %class.Point* %59, %class.Point** %60, align 8
  %61 = call i64 @_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.129"* dereferenceable(8) %19, %"class.__gnu_cxx::__normal_iterator.129"* dereferenceable(8) %13)
  store i64 %61, i64* %18, align 8
  %62 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %63 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %64, i32 0, i32 1
  %66 = load %class.Point*, %class.Point** %65, align 8
  store %class.Point* %66, %class.Point** %20, align 8
  %67 = load i64, i64* %18, align 8
  %68 = load i64, i64* %15, align 8
  %69 = icmp ugt i64 %67, %68
  br i1 %69, label %70, label %113

; <label>:70:                                     ; preds = %57
  %71 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %72 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %74 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %73, i32 0, i32 1
  %75 = load %class.Point*, %class.Point** %74, align 8
  %76 = load i64, i64* %15, align 8
  %77 = sub i64 0, %76
  %78 = getelementptr inbounds %class.Point, %class.Point* %75, i64 %77
  %79 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %79, i32 0, i32 0
  %81 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %80 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %81, i32 0, i32 1
  %83 = load %class.Point*, %class.Point** %82, align 8
  %84 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %84, i32 0, i32 0
  %86 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %85 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %86, i32 0, i32 1
  %88 = load %class.Point*, %class.Point** %87, align 8
  %89 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %90 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %89)
  %91 = call %class.Point* @_ZSt22__uninitialized_move_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %78, %class.Point* %83, %class.Point* %88, %"class.std::allocator.13"* dereferenceable(1) %90)
  %92 = load i64, i64* %15, align 8
  %93 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %94 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %93, i32 0, i32 0
  %95 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %94 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %96 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %95, i32 0, i32 1
  %97 = load %class.Point*, %class.Point** %96, align 8
  %98 = getelementptr inbounds %class.Point, %class.Point* %97, i64 %92
  store %class.Point* %98, %class.Point** %96, align 8
  %99 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.129"* %13)
  %100 = load %class.Point*, %class.Point** %99, align 8
  %101 = load %class.Point*, %class.Point** %20, align 8
  %102 = load i64, i64* %15, align 8
  %103 = sub i64 0, %102
  %104 = getelementptr inbounds %class.Point, %class.Point* %101, i64 %103
  %105 = load %class.Point*, %class.Point** %20, align 8
  %106 = call %class.Point* @_ZSt13copy_backwardIP5PointILi3EES2_ET0_T_S4_S3_(%class.Point* %100, %class.Point* %104, %class.Point* %105)
  %107 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.129"* %13)
  %108 = load %class.Point*, %class.Point** %107, align 8
  %109 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.129"* %13)
  %110 = load %class.Point*, %class.Point** %109, align 8
  %111 = load i64, i64* %15, align 8
  %112 = getelementptr inbounds %class.Point, %class.Point* %110, i64 %111
  call void @_ZSt4fillIP5PointILi3EES1_EvT_S3_RKT0_(%class.Point* %108, %class.Point* %112, %class.Point* dereferenceable(24) %17)
  br label %150

; <label>:113:                                    ; preds = %57
  %114 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %115 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %114, i32 0, i32 0
  %116 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %115 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %117 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %116, i32 0, i32 1
  %118 = load %class.Point*, %class.Point** %117, align 8
  %119 = load i64, i64* %15, align 8
  %120 = load i64, i64* %18, align 8
  %121 = sub i64 %119, %120
  %122 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %123 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %122)
  %124 = call %class.Point* @_ZSt24__uninitialized_fill_n_aIP5PointILi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Point* %118, i64 %121, %class.Point* dereferenceable(24) %17, %"class.std::allocator.13"* dereferenceable(1) %123)
  %125 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %126 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %125, i32 0, i32 0
  %127 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %126 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %128 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %127, i32 0, i32 1
  store %class.Point* %124, %class.Point** %128, align 8
  %129 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.129"* %13)
  %130 = load %class.Point*, %class.Point** %129, align 8
  %131 = load %class.Point*, %class.Point** %20, align 8
  %132 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %133 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %132, i32 0, i32 0
  %134 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %133 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %135 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %134, i32 0, i32 1
  %136 = load %class.Point*, %class.Point** %135, align 8
  %137 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %138 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %137)
  %139 = call %class.Point* @_ZSt22__uninitialized_move_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %130, %class.Point* %131, %class.Point* %136, %"class.std::allocator.13"* dereferenceable(1) %138)
  %140 = load i64, i64* %18, align 8
  %141 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %142 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %141, i32 0, i32 0
  %143 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %142 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %143, i32 0, i32 1
  %145 = load %class.Point*, %class.Point** %144, align 8
  %146 = getelementptr inbounds %class.Point, %class.Point* %145, i64 %140
  store %class.Point* %146, %class.Point** %144, align 8
  %147 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.129"* %13)
  %148 = load %class.Point*, %class.Point** %147, align 8
  %149 = load %class.Point*, %class.Point** %20, align 8
  call void @_ZSt4fillIP5PointILi3EES1_EvT_S3_RKT0_(%class.Point* %148, %class.Point* %149, %class.Point* dereferenceable(24) %17)
  br label %150

; <label>:150:                                    ; preds = %113, %70
  %151 = load i32, i32* @x.789
  %152 = load i32, i32* @y.790
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %150, %originalBB1alteredBB
  %159 = load i32, i32* @x.789
  %160 = load i32, i32* @y.790
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %387

; <label>:167:                                    ; preds = %40
  %168 = load i64, i64* %15, align 8
  %169 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.11"* %29, i64 %168, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0))
  store i64 %169, i64* %21, align 8
  %170 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE5beginEv(%"class.std::vector.11"* %29)
  %171 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.129", %"class.__gnu_cxx::__normal_iterator.129"* %23, i32 0, i32 0
  store %class.Point* %170, %class.Point** %171, align 8
  %172 = call i64 @_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.129"* dereferenceable(8) %13, %"class.__gnu_cxx::__normal_iterator.129"* dereferenceable(8) %23)
  store i64 %172, i64* %22, align 8
  %173 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %174 = load i64, i64* %21, align 8
  %175 = call %class.Point* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.12"* %173, i64 %174)
  store %class.Point* %175, %class.Point** %24, align 8
  %176 = load %class.Point*, %class.Point** %24, align 8
  store %class.Point* %176, %class.Point** %25, align 8
  %177 = load %class.Point*, %class.Point** %24, align 8
  %178 = load i64, i64* %22, align 8
  %179 = getelementptr inbounds %class.Point, %class.Point* %177, i64 %178
  %180 = load i64, i64* %15, align 8
  %181 = load %class.Point*, %class.Point** %16, align 8
  %182 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %183 = invoke dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %182)
          to label %184 unwind label %250

; <label>:184:                                    ; preds = %167
  %185 = invoke %class.Point* @_ZSt24__uninitialized_fill_n_aIP5PointILi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Point* %179, i64 %180, %class.Point* dereferenceable(24) %181, %"class.std::allocator.13"* dereferenceable(1) %183)
          to label %186 unwind label %250

; <label>:186:                                    ; preds = %184
  store %class.Point* null, %class.Point** %25, align 8
  %187 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %187, i32 0, i32 0
  %189 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %188 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %190 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %189, i32 0, i32 0
  %191 = load %class.Point*, %class.Point** %190, align 8
  %192 = invoke dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.129"* %13)
          to label %193 unwind label %250

; <label>:193:                                    ; preds = %186
  %194 = load i32, i32* @x.789
  %195 = load i32, i32* @y.790
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %193, %originalBB6alteredBB
  %202 = load %class.Point*, %class.Point** %192, align 8
  %203 = load %class.Point*, %class.Point** %24, align 8
  %204 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %205 = load i32, i32* @x.789
  %206 = load i32, i32* @y.790
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %213 = invoke dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %204)
          to label %214 unwind label %250

; <label>:214:                                    ; preds = %originalBBpart28
  %215 = load i32, i32* @x.789
  %216 = load i32, i32* @y.790
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %214, %originalBB10alteredBB
  %223 = load i32, i32* @x.789
  %224 = load i32, i32* @y.790
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %231 = invoke %class.Point* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %191, %class.Point* %202, %class.Point* %203, %"class.std::allocator.13"* dereferenceable(1) %213)
          to label %232 unwind label %250

; <label>:232:                                    ; preds = %originalBBpart212
  store %class.Point* %231, %class.Point** %25, align 8
  %233 = load i64, i64* %15, align 8
  %234 = load %class.Point*, %class.Point** %25, align 8
  %235 = getelementptr inbounds %class.Point, %class.Point* %234, i64 %233
  store %class.Point* %235, %class.Point** %25, align 8
  %236 = invoke dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.129"* %13)
          to label %237 unwind label %250

; <label>:237:                                    ; preds = %232
  %238 = load %class.Point*, %class.Point** %236, align 8
  %239 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %240 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %239, i32 0, i32 0
  %241 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %240 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %242 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %241, i32 0, i32 1
  %243 = load %class.Point*, %class.Point** %242, align 8
  %244 = load %class.Point*, %class.Point** %25, align 8
  %245 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %246 = invoke dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %245)
          to label %247 unwind label %250

; <label>:247:                                    ; preds = %237
  %248 = invoke %class.Point* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %238, %class.Point* %243, %class.Point* %244, %"class.std::allocator.13"* dereferenceable(1) %246)
          to label %249 unwind label %250

; <label>:249:                                    ; preds = %247
  store %class.Point* %248, %class.Point** %25, align 8
  br label %337

; <label>:250:                                    ; preds = %247, %237, %232, %originalBBpart212, %originalBBpart28, %186, %184, %167
  %251 = landingpad { i8*, i32 }
          catch i8* null
  %252 = extractvalue { i8*, i32 } %251, 0
  store i8* %252, i8** %26, align 8
  %253 = extractvalue { i8*, i32 } %251, 1
  store i32 %253, i32* %27, align 4
  br label %254

; <label>:254:                                    ; preds = %250
  %255 = load i8*, i8** %26, align 8
  %256 = call i8* @__cxa_begin_catch(i8* %255) #12
  %257 = load %class.Point*, %class.Point** %25, align 8
  %258 = icmp ne %class.Point* %257, null
  br i1 %258, label %308, label %259

; <label>:259:                                    ; preds = %254
  %260 = load %class.Point*, %class.Point** %24, align 8
  %261 = load i64, i64* %22, align 8
  %262 = getelementptr inbounds %class.Point, %class.Point* %260, i64 %261
  %263 = load %class.Point*, %class.Point** %24, align 8
  %264 = load i64, i64* %22, align 8
  %265 = getelementptr inbounds %class.Point, %class.Point* %263, i64 %264
  %266 = load i64, i64* %15, align 8
  %267 = getelementptr inbounds %class.Point, %class.Point* %265, i64 %266
  %268 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %269 = invoke dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %268)
          to label %270 unwind label %288

; <label>:270:                                    ; preds = %259
  invoke void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %262, %class.Point* %267, %"class.std::allocator.13"* dereferenceable(1) %269)
          to label %271 unwind label %288

; <label>:271:                                    ; preds = %270
  %272 = load i32, i32* @x.789
  %273 = load i32, i32* @y.790
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %271, %originalBB14alteredBB
  %280 = load i32, i32* @x.789
  %281 = load i32, i32* @y.790
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %331

; <label>:288:                                    ; preds = %335, %331, %originalBBpart224, %308, %270, %259
  %289 = load i32, i32* @x.789
  %290 = load i32, i32* @y.790
  %291 = sub i32 %289, 1
  %292 = mul i32 %289, %291
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %294, %295
  br i1 %296, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %288, %originalBB18alteredBB
  %297 = landingpad { i8*, i32 }
          cleanup
  %298 = extractvalue { i8*, i32 } %297, 0
  store i8* %298, i8** %26, align 8
  %299 = extractvalue { i8*, i32 } %297, 1
  store i32 %299, i32* %27, align 4
  %300 = load i32, i32* @x.789
  %301 = load i32, i32* @y.790
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @__cxa_end_catch()
          to label %336 unwind label %426

; <label>:308:                                    ; preds = %254
  %309 = load %class.Point*, %class.Point** %24, align 8
  %310 = load %class.Point*, %class.Point** %25, align 8
  %311 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %312 = invoke dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %311)
          to label %313 unwind label %288

; <label>:313:                                    ; preds = %308
  %314 = load i32, i32* @x.789
  %315 = load i32, i32* @y.790
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %313, %originalBB22alteredBB
  %322 = load i32, i32* @x.789
  %323 = load i32, i32* @y.790
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  invoke void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %309, %class.Point* %310, %"class.std::allocator.13"* dereferenceable(1) %312)
          to label %330 unwind label %288

; <label>:330:                                    ; preds = %originalBBpart224
  br label %331

; <label>:331:                                    ; preds = %330, %originalBBpart216
  %332 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %333 = load %class.Point*, %class.Point** %24, align 8
  %334 = load i64, i64* %21, align 8
  invoke void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.12"* %332, %class.Point* %333, i64 %334)
          to label %335 unwind label %288

; <label>:335:                                    ; preds = %331
  invoke void @__cxa_rethrow() #15
          to label %445 unwind label %288

; <label>:336:                                    ; preds = %originalBBpart220
  br label %405

; <label>:337:                                    ; preds = %249
  %338 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %339 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %338, i32 0, i32 0
  %340 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %339 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %341 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %340, i32 0, i32 0
  %342 = load %class.Point*, %class.Point** %341, align 8
  %343 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %344 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %343, i32 0, i32 0
  %345 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %344 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %346 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %345, i32 0, i32 1
  %347 = load %class.Point*, %class.Point** %346, align 8
  %348 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %349 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %348)
  call void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %342, %class.Point* %347, %"class.std::allocator.13"* dereferenceable(1) %349)
  %350 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %351 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %352 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %351, i32 0, i32 0
  %353 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %352 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %354 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %353, i32 0, i32 0
  %355 = load %class.Point*, %class.Point** %354, align 8
  %356 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %357 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %356, i32 0, i32 0
  %358 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %357 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %359 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %358, i32 0, i32 2
  %360 = load %class.Point*, %class.Point** %359, align 8
  %361 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %362 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %361, i32 0, i32 0
  %363 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %362 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %364 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %363, i32 0, i32 0
  %365 = load %class.Point*, %class.Point** %364, align 8
  %366 = ptrtoint %class.Point* %360 to i64
  %367 = ptrtoint %class.Point* %365 to i64
  %368 = sub i64 %366, %367
  %369 = sdiv exact i64 %368, 24
  call void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.12"* %350, %class.Point* %355, i64 %369)
  %370 = load %class.Point*, %class.Point** %24, align 8
  %371 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %372 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %371, i32 0, i32 0
  %373 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %372 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %374 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %373, i32 0, i32 0
  store %class.Point* %370, %class.Point** %374, align 8
  %375 = load %class.Point*, %class.Point** %25, align 8
  %376 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %377 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %376, i32 0, i32 0
  %378 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %377 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %379 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %378, i32 0, i32 1
  store %class.Point* %375, %class.Point** %379, align 8
  %380 = load %class.Point*, %class.Point** %24, align 8
  %381 = load i64, i64* %21, align 8
  %382 = getelementptr inbounds %class.Point, %class.Point* %380, i64 %381
  %383 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %384 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %383, i32 0, i32 0
  %385 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %384 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %386 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %385, i32 0, i32 2
  store %class.Point* %382, %class.Point** %386, align 8
  br label %387

; <label>:387:                                    ; preds = %337, %originalBBpart24
  %388 = load i32, i32* @x.789
  %389 = load i32, i32* @y.790
  %390 = sub i32 %388, 1
  %391 = mul i32 %388, %390
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %393, %394
  br i1 %395, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %387, %originalBB26alteredBB
  %396 = load i32, i32* @x.789
  %397 = load i32, i32* @y.790
  %398 = sub i32 %396, 1
  %399 = mul i32 %396, %398
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %401, %402
  br i1 %403, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %404

; <label>:404:                                    ; preds = %originalBBpart228, %originalBBpart2
  ret void

; <label>:405:                                    ; preds = %336
  %406 = load i32, i32* @x.789
  %407 = load i32, i32* @y.790
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %405, %originalBB30alteredBB
  %414 = load i8*, i8** %26, align 8
  %415 = load i32, i32* %27, align 4
  %416 = insertvalue { i8*, i32 } undef, i8* %414, 0
  %417 = insertvalue { i8*, i32 } %416, i32 %415, 1
  %418 = load i32, i32* @x.789
  %419 = load i32, i32* @y.790
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  resume { i8*, i32 } %417

; <label>:426:                                    ; preds = %originalBBpart220
  %427 = load i32, i32* @x.789
  %428 = load i32, i32* @y.790
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %426, %originalBB34alteredBB
  %435 = landingpad { i8*, i32 }
          catch i8* null
  %436 = extractvalue { i8*, i32 } %435, 0
  call void @__clang_call_terminate(i8* %436) #10
  %437 = load i32, i32* @x.789
  %438 = load i32, i32* @y.790
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  unreachable

; <label>:445:                                    ; preds = %335
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %4
  %446 = alloca %"class.__gnu_cxx::__normal_iterator.129", align 8
  %447 = alloca %"class.std::vector.11"*, align 8
  %448 = alloca i64, align 8
  %449 = alloca %class.Point*, align 8
  %450 = alloca %class.Point, align 8
  %451 = alloca i64, align 8
  %452 = alloca %"class.__gnu_cxx::__normal_iterator.129", align 8
  %453 = alloca %class.Point*, align 8
  %454 = alloca i64, align 8
  %455 = alloca i64, align 8
  %456 = alloca %"class.__gnu_cxx::__normal_iterator.129", align 8
  %457 = alloca %class.Point*, align 8
  %458 = alloca %class.Point*, align 8
  %459 = alloca i8*
  %460 = alloca i32
  %461 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.129", %"class.__gnu_cxx::__normal_iterator.129"* %446, i32 0, i32 0
  store %class.Point* %1, %class.Point** %461, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %447, align 8
  store i64 %2, i64* %448, align 8
  store %class.Point* %3, %class.Point** %449, align 8
  %462 = load %"class.std::vector.11"*, %"class.std::vector.11"** %447, align 8
  %463 = load i64, i64* %448, align 8
  %464 = icmp ne i64 %463, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %150
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %193
  %465 = load %class.Point*, %class.Point** %192, align 8
  %466 = load %class.Point*, %class.Point** %24, align 8
  %467 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %214
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %271
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %288
  %468 = landingpad { i8*, i32 }
          cleanup
  %469 = extractvalue { i8*, i32 } %468, 0
  store i8* %469, i8** %26, align 8
  %470 = extractvalue { i8*, i32 } %468, 1
  store i32 %470, i32* %27, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %313
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %387
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %405
  %471 = load i8*, i8** %26, align 8
  %472 = load i32, i32* %27, align 4
  %473 = insertvalue { i8*, i32 } undef, i8* %471, 0
  %474 = insertvalue { i8*, i32 } %473, i32 %472, 1
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %426
  %475 = landingpad { i8*, i32 }
          catch i8* null
  %476 = extractvalue { i8*, i32 } %475, 0
  call void @__clang_call_terminate(i8* %476) #10
  br label %originalBB34
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.11"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.129", align 8
  %3 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  %4 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %5 = bitcast %"class.std::vector.11"* %4 to %"struct.std::_Vector_base.12"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %7, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.129"* %2, %class.Point** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.129", %"class.__gnu_cxx::__normal_iterator.129"* %2, i32 0, i32 0
  %10 = load %class.Point*, %class.Point** %9, align 8
  ret %class.Point* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.11"*, %class.Point*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.11"*, align 8
  %4 = alloca %class.Point*, align 8
  %5 = alloca i64, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  %6 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %7 = bitcast %"class.std::vector.11"* %6 to %"struct.std::_Vector_base.12"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %7, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %8 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %9, i32 0, i32 1
  %11 = load %class.Point*, %class.Point** %10, align 8
  %12 = load %class.Point*, %class.Point** %4, align 8
  %13 = ptrtoint %class.Point* %11 to i64
  %14 = ptrtoint %class.Point* %12 to i64
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 24
  store i64 %16, i64* %5, align 8
  %17 = load i64, i64* %5, align 8
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %33

; <label>:19:                                     ; preds = %2
  %20 = load %class.Point*, %class.Point** %4, align 8
  %21 = bitcast %"class.std::vector.11"* %6 to %"struct.std::_Vector_base.12"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %21, i32 0, i32 0
  %23 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %22 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %24 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %23, i32 0, i32 1
  %25 = load %class.Point*, %class.Point** %24, align 8
  %26 = bitcast %"class.std::vector.11"* %6 to %"struct.std::_Vector_base.12"*
  %27 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %26)
  call void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %20, %class.Point* %25, %"class.std::allocator.13"* dereferenceable(1) %27)
  %28 = load %class.Point*, %class.Point** %4, align 8
  %29 = bitcast %"class.std::vector.11"* %6 to %"struct.std::_Vector_base.12"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %30 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %31, i32 0, i32 1
  store %class.Point* %28, %class.Point** %32, align 8
  br label %33

; <label>:33:                                     ; preds = %19, %2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.129"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.129"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.129"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.129"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.129"* %0, %"class.__gnu_cxx::__normal_iterator.129"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.129"* %1, %"class.__gnu_cxx::__normal_iterator.129"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.129"*, %"class.__gnu_cxx::__normal_iterator.129"** %3, align 8
  %6 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.129"* %5)
  %7 = load %class.Point*, %class.Point** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.129"*, %"class.__gnu_cxx::__normal_iterator.129"** %4, align 8
  %9 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.129"* %8)
  %10 = load %class.Point*, %class.Point** %9, align 8
  %11 = ptrtoint %class.Point* %7 to i64
  %12 = ptrtoint %class.Point* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 24
  ret i64 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt22__uninitialized_move_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point*, %class.Point*, %class.Point*, %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca %class.Point*, align 8
  %8 = alloca %"class.std::allocator.13"*, align 8
  store %class.Point* %0, %class.Point** %5, align 8
  store %class.Point* %1, %class.Point** %6, align 8
  store %class.Point* %2, %class.Point** %7, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %8, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = load %class.Point*, %class.Point** %7, align 8
  %12 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %8, align 8
  %13 = call %class.Point* @_ZSt22__uninitialized_copy_aIP5PointILi3EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Point* %9, %class.Point* %10, %class.Point* %11, %"class.std::allocator.13"* dereferenceable(1) %12)
  ret %class.Point* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.12"*, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %2, align 8
  %3 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %4 to %"class.std::allocator.13"*
  ret %"class.std::allocator.13"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt13copy_backwardIP5PointILi3EES2_ET0_T_S4_S3_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = call %class.Point* @_ZSt12__miter_baseIP5PointILi3EEET_S3_(%class.Point* %7)
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = call %class.Point* @_ZSt12__miter_baseIP5PointILi3EEET_S3_(%class.Point* %9)
  %11 = load %class.Point*, %class.Point** %6, align 8
  %12 = call %class.Point* @_ZSt23__copy_move_backward_a2ILb0EP5PointILi3EES2_ET1_T0_S4_S3_(%class.Point* %8, %class.Point* %10, %class.Point* %11)
  ret %class.Point* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.129"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.129"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.129"* %0, %"class.__gnu_cxx::__normal_iterator.129"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.129"*, %"class.__gnu_cxx::__normal_iterator.129"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.129", %"class.__gnu_cxx::__normal_iterator.129"* %3, i32 0, i32 0
  ret %class.Point** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIP5PointILi3EES1_EvT_S3_RKT0_(%class.Point*, %class.Point*, %class.Point* dereferenceable(24)) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %7)
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %9)
  %11 = load %class.Point*, %class.Point** %6, align 8
  call void @_ZSt8__fill_aIP5PointILi3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%class.Point* %8, %class.Point* %10, %class.Point* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt24__uninitialized_fill_n_aIP5PointILi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Point*, i64, %class.Point* dereferenceable(24), %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.807
  %6 = load i32, i32* @y.808
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.Point*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %class.Point*, align 8
  %16 = alloca %"class.std::allocator.13"*, align 8
  store %class.Point* %0, %class.Point** %13, align 8
  store i64 %1, i64* %14, align 8
  store %class.Point* %2, %class.Point** %15, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %16, align 8
  %17 = load %class.Point*, %class.Point** %13, align 8
  %18 = load i64, i64* %14, align 8
  %19 = load %class.Point*, %class.Point** %15, align 8
  %20 = call %class.Point* @_ZSt20uninitialized_fill_nIP5PointILi3EEmS1_ET_S3_T0_RKT1_(%class.Point* %17, i64 %18, %class.Point* dereferenceable(24) %19)
  %21 = load i32, i32* @x.807
  %22 = load i32, i32* @y.808
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %20

originalBBalteredBB:                              ; preds = %originalBB, %4
  %29 = alloca %class.Point*, align 8
  %30 = alloca i64, align 8
  %31 = alloca %class.Point*, align 8
  %32 = alloca %"class.std::allocator.13"*, align 8
  store %class.Point* %0, %class.Point** %29, align 8
  store i64 %1, i64* %30, align 8
  store %class.Point* %2, %class.Point** %31, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %32, align 8
  %33 = load %class.Point*, %class.Point** %29, align 8
  %34 = load i64, i64* %30, align 8
  %35 = load %class.Point*, %class.Point** %31, align 8
  %36 = call %class.Point* @_ZSt20uninitialized_fill_nIP5PointILi3EEmS1_ET_S3_T0_RKT1_(%class.Point* %33, i64 %34, %class.Point* dereferenceable(24) %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.11"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.11"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.11"* %9)
  %11 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %9)
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #15
  unreachable

; <label>:17:                                     ; preds = %3
  %18 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %9)
  %19 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %9)
  store i64 %19, i64* %8, align 8
  %20 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %18, %21
  store i64 %22, i64* %7, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.11"* %9)
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %46, label %26

; <label>:26:                                     ; preds = %17
  %27 = load i32, i32* @x.809
  %28 = load i32, i32* @y.810
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %26, %originalBBalteredBB
  %35 = load i64, i64* %7, align 8
  %36 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.11"* %9)
  %37 = icmp ugt i64 %35, %36
  %38 = load i32, i32* @x.809
  %39 = load i32, i32* @y.810
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %46, label %64

; <label>:46:                                     ; preds = %originalBBpart2, %17
  %47 = load i32, i32* @x.809
  %48 = load i32, i32* @y.810
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %46, %originalBB1alteredBB
  %55 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.11"* %9)
  %56 = load i32, i32* @x.809
  %57 = load i32, i32* @y.810
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %82

; <label>:64:                                     ; preds = %originalBBpart2
  %65 = load i32, i32* @x.809
  %66 = load i32, i32* @y.810
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %64, %originalBB6alteredBB
  %73 = load i64, i64* %7, align 8
  %74 = load i32, i32* @x.809
  %75 = load i32, i32* @y.810
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %82

; <label>:82:                                     ; preds = %originalBBpart28, %originalBBpart24
  %83 = phi i64 [ %55, %originalBBpart24 ], [ %73, %originalBBpart28 ]
  ret i64 %83

originalBBalteredBB:                              ; preds = %originalBB, %26
  %84 = load i64, i64* %7, align 8
  %85 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.11"* %9)
  %86 = icmp ugt i64 %84, %85
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %46
  %87 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.11"* %9)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  %88 = load i64, i64* %7, align 8
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE5beginEv(%"class.std::vector.11"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.129", align 8
  %3 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  %4 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %5 = bitcast %"class.std::vector.11"* %4 to %"struct.std::_Vector_base.12"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %7, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.129"* %2, %class.Point** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.129", %"class.__gnu_cxx::__normal_iterator.129"* %2, i32 0, i32 0
  %10 = load %class.Point*, %class.Point** %9, align 8
  ret %class.Point* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.12"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.12"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %9 to %"class.std::allocator.13"*
  %11 = load i64, i64* %4, align 8
  %12 = call %class.Point* @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8allocateERS3_m(%"class.std::allocator.13"* dereferenceable(1) %10, i64 %11)
  br label %30

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.813
  %15 = load i32, i32* @y.814
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i32, i32* @x.813
  %23 = load i32, i32* @y.814
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:30:                                     ; preds = %originalBBpart2, %8
  %31 = phi %class.Point* [ %12, %8 ], [ null, %originalBBpart2 ]
  ret %class.Point* %31

originalBBalteredBB:                              ; preds = %originalBB, %13
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point*, %class.Point*, %class.Point*, %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.815
  %6 = load i32, i32* @y.816
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.Point*, align 8
  %14 = alloca %class.Point*, align 8
  %15 = alloca %class.Point*, align 8
  %16 = alloca %"class.std::allocator.13"*, align 8
  store %class.Point* %0, %class.Point** %13, align 8
  store %class.Point* %1, %class.Point** %14, align 8
  store %class.Point* %2, %class.Point** %15, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %16, align 8
  %17 = load %class.Point*, %class.Point** %13, align 8
  %18 = load %class.Point*, %class.Point** %14, align 8
  %19 = load %class.Point*, %class.Point** %15, align 8
  %20 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %16, align 8
  %21 = call %class.Point* @_ZSt22__uninitialized_copy_aIP5PointILi3EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Point* %17, %class.Point* %18, %class.Point* %19, %"class.std::allocator.13"* dereferenceable(1) %20)
  %22 = load i32, i32* @x.815
  %23 = load i32, i32* @y.816
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %21

originalBBalteredBB:                              ; preds = %originalBB, %4
  %30 = alloca %class.Point*, align 8
  %31 = alloca %class.Point*, align 8
  %32 = alloca %class.Point*, align 8
  %33 = alloca %"class.std::allocator.13"*, align 8
  store %class.Point* %0, %class.Point** %30, align 8
  store %class.Point* %1, %class.Point** %31, align 8
  store %class.Point* %2, %class.Point** %32, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %33, align 8
  %34 = load %class.Point*, %class.Point** %30, align 8
  %35 = load %class.Point*, %class.Point** %31, align 8
  %36 = load %class.Point*, %class.Point** %32, align 8
  %37 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %33, align 8
  %38 = call %class.Point* @_ZSt22__uninitialized_copy_aIP5PointILi3EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Point* %34, %class.Point* %35, %class.Point* %36, %"class.std::allocator.13"* dereferenceable(1) %37)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point*, %class.Point*, %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %"class.std::allocator.13"*, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %"class.std::allocator.13"* %2, %"class.std::allocator.13"** %6, align 8
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = load %class.Point*, %class.Point** %5, align 8
  call void @_ZSt8_DestroyIP5PointILi3EEEvT_S3_(%class.Point* %7, %class.Point* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.12"*, %class.Point*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.819
  %5 = load i32, i32* @y.820
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.12"*, align 8
  %13 = alloca %class.Point*, align 8
  %14 = alloca i64, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %12, align 8
  store %class.Point* %1, %class.Point** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %12, align 8
  %16 = load %class.Point*, %class.Point** %13, align 8
  %17 = icmp ne %class.Point* %16, null
  %18 = load i32, i32* @x.819
  %19 = load i32, i32* @y.820
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %47

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* @x.819
  %28 = load i32, i32* @y.820
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %15, i32 0, i32 0
  %36 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %35 to %"class.std::allocator.13"*
  %37 = load %class.Point*, %class.Point** %13, align 8
  %38 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.13"* dereferenceable(1) %36, %class.Point* %37, i64 %38)
  %39 = load i32, i32* @x.819
  %40 = load i32, i32* @y.820
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %47

; <label>:47:                                     ; preds = %originalBBpart24, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %48 = alloca %"struct.std::_Vector_base.12"*, align 8
  %49 = alloca %class.Point*, align 8
  %50 = alloca i64, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %48, align 8
  store %class.Point* %1, %class.Point** %49, align 8
  store i64 %2, i64* %50, align 8
  %51 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %48, align 8
  %52 = load %class.Point*, %class.Point** %49, align 8
  %53 = icmp ne %class.Point* %52, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %54 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %15, i32 0, i32 0
  %55 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %54 to %"class.std::allocator.13"*
  %56 = load %class.Point*, %class.Point** %13, align 8
  %57 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.13"* dereferenceable(1) %55, %class.Point* %56, i64 %57)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt22__uninitialized_copy_aIP5PointILi3EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Point*, %class.Point*, %class.Point*, %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca %class.Point*, align 8
  %8 = alloca %"class.std::allocator.13"*, align 8
  store %class.Point* %0, %class.Point** %5, align 8
  store %class.Point* %1, %class.Point** %6, align 8
  store %class.Point* %2, %class.Point** %7, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %8, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = load %class.Point*, %class.Point** %7, align 8
  %12 = call %class.Point* @_ZSt18uninitialized_copyIP5PointILi3EES2_ET0_T_S4_S3_(%class.Point* %9, %class.Point* %10, %class.Point* %11)
  ret %class.Point* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt18uninitialized_copyIP5PointILi3EES2_ET0_T_S4_S3_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca i8, align 1
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %class.Point*, %class.Point** %4, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = call %class.Point* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5PointILi3EES4_EET0_T_S6_S5_(%class.Point* %8, %class.Point* %9, %class.Point* %10)
  ret %class.Point* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5PointILi3EES4_EET0_T_S6_S5_(%class.Point*, %class.Point*, %class.Point*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca %class.Point*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  store %class.Point* %10, %class.Point** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %originalBBpart2, %3
  %12 = load %class.Point*, %class.Point** %4, align 8
  %13 = load %class.Point*, %class.Point** %5, align 8
  %14 = icmp ne %class.Point* %12, %13
  br i1 %14, label %15, label %52

; <label>:15:                                     ; preds = %11
  %16 = load %class.Point*, %class.Point** %7, align 8
  %17 = invoke %class.Point* @_ZSt11__addressofI5PointILi3EEEPT_RS2_(%class.Point* dereferenceable(24) %16)
          to label %18 unwind label %42

; <label>:18:                                     ; preds = %15
  %19 = load %class.Point*, %class.Point** %4, align 8
  invoke void @_ZSt10_ConstructI5PointILi3EES1_EvPT_RKT0_(%class.Point* %17, %class.Point* dereferenceable(24) %19)
          to label %20 unwind label %42

; <label>:20:                                     ; preds = %18
  br label %21

; <label>:21:                                     ; preds = %20
  %22 = load i32, i32* @x.825
  %23 = load i32, i32* @y.826
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load %class.Point*, %class.Point** %4, align 8
  %31 = getelementptr inbounds %class.Point, %class.Point* %30, i32 1
  store %class.Point* %31, %class.Point** %4, align 8
  %32 = load %class.Point*, %class.Point** %7, align 8
  %33 = getelementptr inbounds %class.Point, %class.Point* %32, i32 1
  store %class.Point* %33, %class.Point** %7, align 8
  %34 = load i32, i32* @x.825
  %35 = load i32, i32* @y.826
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %11

; <label>:42:                                     ; preds = %18, %15
  %43 = landingpad { i8*, i32 }
          catch i8* null
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %8, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %9, align 4
  br label %46

; <label>:46:                                     ; preds = %42
  %47 = load i8*, i8** %8, align 8
  %48 = call i8* @__cxa_begin_catch(i8* %47) #12
  %49 = load %class.Point*, %class.Point** %6, align 8
  %50 = load %class.Point*, %class.Point** %7, align 8
  invoke void @_ZSt8_DestroyIP5PointILi3EEEvT_S3_(%class.Point* %49, %class.Point* %50)
          to label %51 unwind label %54

; <label>:51:                                     ; preds = %46
  invoke void @__cxa_rethrow() #15
          to label %100 unwind label %54

; <label>:52:                                     ; preds = %11
  %53 = load %class.Point*, %class.Point** %7, align 8
  ret %class.Point* %53

; <label>:54:                                     ; preds = %51, %46
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %8, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %58 unwind label %97

; <label>:58:                                     ; preds = %54
  %59 = load i32, i32* @x.825
  %60 = load i32, i32* @y.826
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %58, %originalBB1alteredBB
  %67 = load i32, i32* @x.825
  %68 = load i32, i32* @y.826
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %92
                                                  ; No predecessors!
  %76 = load i32, i32* @x.825
  %77 = load i32, i32* @y.826
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %75, %originalBB6alteredBB
  call void @llvm.trap()
  %84 = load i32, i32* @x.825
  %85 = load i32, i32* @y.826
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

; <label>:92:                                     ; preds = %originalBBpart24
  %93 = load i8*, i8** %8, align 8
  %94 = load i32, i32* %9, align 4
  %95 = insertvalue { i8*, i32 } undef, i8* %93, 0
  %96 = insertvalue { i8*, i32 } %95, i32 %94, 1
  resume { i8*, i32 } %96

; <label>:97:                                     ; preds = %54
  %98 = landingpad { i8*, i32 }
          catch i8* null
  %99 = extractvalue { i8*, i32 } %98, 0
  call void @__clang_call_terminate(i8* %99) #10
  unreachable

; <label>:100:                                    ; preds = %51
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %21
  %101 = load %class.Point*, %class.Point** %4, align 8
  %102 = getelementptr inbounds %class.Point, %class.Point* %101, i32 1
  store %class.Point* %102, %class.Point** %4, align 8
  %103 = load %class.Point*, %class.Point** %7, align 8
  %104 = getelementptr inbounds %class.Point, %class.Point* %103, i32 1
  store %class.Point* %104, %class.Point** %7, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %58
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %75
  call void @llvm.trap()
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructI5PointILi3EES1_EvPT_RKT0_(%class.Point*, %class.Point* dereferenceable(24)) #0 comdat {
  %3 = alloca %class.Point*, align 8
  %4 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %3, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  %5 = load %class.Point*, %class.Point** %3, align 8
  %6 = bitcast %class.Point* %5 to i8*
  %7 = bitcast i8* %6 to %class.Point*
  %8 = load %class.Point*, %class.Point** %4, align 8
  call void @_ZN5PointILi3EEC2ERKS0_(%class.Point* %7, %class.Point* dereferenceable(24) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point* @_ZSt11__addressofI5PointILi3EEEPT_RS2_(%class.Point* dereferenceable(24)) #1 comdat {
  %2 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %2, align 8
  %3 = load %class.Point*, %class.Point** %2, align 8
  ret %class.Point* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP5PointILi3EEEvT_S3_(%class.Point*, %class.Point*) #0 comdat {
  %3 = alloca %class.Point*, align 8
  %4 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %3, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  %5 = load %class.Point*, %class.Point** %3, align 8
  %6 = load %class.Point*, %class.Point** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP5PointILi3EEEEvT_S5_(%class.Point* %5, %class.Point* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP5PointILi3EEEEvT_S5_(%class.Point*, %class.Point*) #1 comdat align 2 {
  %3 = alloca %class.Point*, align 8
  %4 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %3, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt23__copy_move_backward_a2ILb0EP5PointILi3EES2_ET1_T0_S4_S3_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %7)
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %9)
  %11 = load %class.Point*, %class.Point** %6, align 8
  %12 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %11)
  %13 = call %class.Point* @_ZSt22__copy_move_backward_aILb0EP5PointILi3EES2_ET1_T0_S4_S3_(%class.Point* %8, %class.Point* %10, %class.Point* %12)
  %14 = call %class.Point* @_ZSt12__niter_wrapIP5PointILi3EEET_RKS3_S3_(%class.Point** dereferenceable(8) %6, %class.Point* %13)
  ret %class.Point* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point* @_ZSt12__miter_baseIP5PointILi3EEET_S3_(%class.Point*) #1 comdat {
  %2 = load i32, i32* @x.837
  %3 = load i32, i32* @y.838
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %10, align 8
  %11 = load %class.Point*, %class.Point** %10, align 8
  %12 = load i32, i32* @x.837
  %13 = load i32, i32* @y.838
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %20, align 8
  %21 = load %class.Point*, %class.Point** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point* @_ZSt12__niter_wrapIP5PointILi3EEET_RKS3_S3_(%class.Point** dereferenceable(8), %class.Point*) #1 comdat {
  %3 = load i32, i32* @x.839
  %4 = load i32, i32* @y.840
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Point**, align 8
  %12 = alloca %class.Point*, align 8
  store %class.Point** %0, %class.Point*** %11, align 8
  store %class.Point* %1, %class.Point** %12, align 8
  %13 = load %class.Point*, %class.Point** %12, align 8
  %14 = load i32, i32* @x.839
  %15 = load i32, i32* @y.840
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %class.Point**, align 8
  %23 = alloca %class.Point*, align 8
  store %class.Point** %0, %class.Point*** %22, align 8
  store %class.Point* %1, %class.Point** %23, align 8
  %24 = load %class.Point*, %class.Point** %23, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt22__copy_move_backward_aILb0EP5PointILi3EES2_ET1_T0_S4_S3_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = load i32, i32* @x.841
  %5 = load i32, i32* @y.842
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Point*, align 8
  %13 = alloca %class.Point*, align 8
  %14 = alloca %class.Point*, align 8
  %15 = alloca i8, align 1
  store %class.Point* %0, %class.Point** %12, align 8
  store %class.Point* %1, %class.Point** %13, align 8
  store %class.Point* %2, %class.Point** %14, align 8
  store i8 0, i8* %15, align 1
  %16 = load %class.Point*, %class.Point** %12, align 8
  %17 = load %class.Point*, %class.Point** %13, align 8
  %18 = load %class.Point*, %class.Point** %14, align 8
  %19 = call %class.Point* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5PointILi3EES5_EET0_T_S7_S6_(%class.Point* %16, %class.Point* %17, %class.Point* %18)
  %20 = load i32, i32* @x.841
  %21 = load i32, i32* @y.842
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %class.Point*, align 8
  %29 = alloca %class.Point*, align 8
  %30 = alloca %class.Point*, align 8
  %31 = alloca i8, align 1
  store %class.Point* %0, %class.Point** %28, align 8
  store %class.Point* %1, %class.Point** %29, align 8
  store %class.Point* %2, %class.Point** %30, align 8
  store i8 0, i8* %31, align 1
  %32 = load %class.Point*, %class.Point** %28, align 8
  %33 = load %class.Point*, %class.Point** %29, align 8
  %34 = load %class.Point*, %class.Point** %30, align 8
  %35 = call %class.Point* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5PointILi3EES5_EET0_T_S7_S6_(%class.Point* %32, %class.Point* %33, %class.Point* %34)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point*) #1 comdat {
  %2 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %2, align 8
  %3 = load %class.Point*, %class.Point** %2, align 8
  ret %class.Point* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5PointILi3EES5_EET0_T_S7_S6_(%class.Point*, %class.Point*, %class.Point*) #0 comdat align 2 {
  %4 = load i32, i32* @x.845
  %5 = load i32, i32* @y.846
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Point*, align 8
  %13 = alloca %class.Point*, align 8
  %14 = alloca %class.Point*, align 8
  %15 = alloca i64, align 8
  store %class.Point* %0, %class.Point** %12, align 8
  store %class.Point* %1, %class.Point** %13, align 8
  store %class.Point* %2, %class.Point** %14, align 8
  %16 = load %class.Point*, %class.Point** %13, align 8
  %17 = load %class.Point*, %class.Point** %12, align 8
  %18 = ptrtoint %class.Point* %16 to i64
  %19 = ptrtoint %class.Point* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 24
  store i64 %21, i64* %15, align 8
  %22 = load i32, i32* @x.845
  %23 = load i32, i32* @y.846
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:30:                                     ; preds = %55, %originalBBpart2
  %31 = load i32, i32* @x.845
  %32 = load i32, i32* @y.846
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %30, %originalBB11alteredBB
  %39 = load i64, i64* %15, align 8
  %40 = icmp sgt i64 %39, 0
  %41 = load i32, i32* @x.845
  %42 = load i32, i32* @y.846
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br i1 %40, label %49, label %58

; <label>:49:                                     ; preds = %originalBBpart213
  %50 = load %class.Point*, %class.Point** %13, align 8
  %51 = getelementptr inbounds %class.Point, %class.Point* %50, i32 -1
  store %class.Point* %51, %class.Point** %13, align 8
  %52 = load %class.Point*, %class.Point** %14, align 8
  %53 = getelementptr inbounds %class.Point, %class.Point* %52, i32 -1
  store %class.Point* %53, %class.Point** %14, align 8
  %54 = call dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %53, %class.Point* dereferenceable(24) %51)
  br label %55

; <label>:55:                                     ; preds = %49
  %56 = load i64, i64* %15, align 8
  %57 = add nsw i64 %56, -1
  store i64 %57, i64* %15, align 8
  br label %30

; <label>:58:                                     ; preds = %originalBBpart213
  %59 = load %class.Point*, %class.Point** %14, align 8
  ret %class.Point* %59

originalBBalteredBB:                              ; preds = %originalBB, %3
  %60 = alloca %class.Point*, align 8
  %61 = alloca %class.Point*, align 8
  %62 = alloca %class.Point*, align 8
  %63 = alloca i64, align 8
  store %class.Point* %0, %class.Point** %60, align 8
  store %class.Point* %1, %class.Point** %61, align 8
  store %class.Point* %2, %class.Point** %62, align 8
  %64 = load %class.Point*, %class.Point** %61, align 8
  %65 = load %class.Point*, %class.Point** %60, align 8
  %66 = ptrtoint %class.Point* %64 to i64
  %67 = ptrtoint %class.Point* %65 to i64
  %_ = sub i64 %66, %67
  %gen = mul i64 %_, %67
  %_1 = sub i64 %66, %67
  %gen2 = mul i64 %_1, %67
  %_3 = shl i64 %66, %67
  %_4 = shl i64 %66, %67
  %68 = sub i64 %66, %67
  %_5 = shl i64 %68, 24
  %_6 = shl i64 %68, 24
  %_7 = sub i64 0, %68
  %gen8 = add i64 %_7, 24
  %_9 = sub i64 0, %68
  %gen10 = add i64 %_9, 24
  %69 = sdiv exact i64 %68, 24
  store i64 %69, i64* %63, align 8
  br label %originalBB

originalBB11alteredBB:                            ; preds = %originalBB11, %30
  %70 = load i64, i64* %15, align 8
  %71 = icmp sgt i64 %70, 0
  br label %originalBB11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIP5PointILi3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%class.Point*, %class.Point*, %class.Point* dereferenceable(24)) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  br label %7

; <label>:7:                                      ; preds = %31, %3
  %8 = load i32, i32* @x.847
  %9 = load i32, i32* @y.848
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load %class.Point*, %class.Point** %4, align 8
  %17 = load %class.Point*, %class.Point** %5, align 8
  %18 = icmp ne %class.Point* %16, %17
  %19 = load i32, i32* @x.847
  %20 = load i32, i32* @y.848
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %34

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load %class.Point*, %class.Point** %6, align 8
  %29 = load %class.Point*, %class.Point** %4, align 8
  %30 = call dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %29, %class.Point* dereferenceable(24) %28)
  br label %31

; <label>:31:                                     ; preds = %27
  %32 = load %class.Point*, %class.Point** %4, align 8
  %33 = getelementptr inbounds %class.Point, %class.Point* %32, i32 1
  store %class.Point* %33, %class.Point** %4, align 8
  br label %7

; <label>:34:                                     ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %7
  %35 = load %class.Point*, %class.Point** %4, align 8
  %36 = load %class.Point*, %class.Point** %5, align 8
  %37 = icmp ne %class.Point* %35, %36
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt20uninitialized_fill_nIP5PointILi3EEmS1_ET_S3_T0_RKT1_(%class.Point*, i64, %class.Point* dereferenceable(24)) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca i8, align 1
  store %class.Point* %0, %class.Point** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %class.Point*, %class.Point** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = call %class.Point* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5PointILi3EEmS3_EET_S5_T0_RKT1_(%class.Point* %8, i64 %9, %class.Point* dereferenceable(24) %10)
  ret %class.Point* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5PointILi3EEmS3_EET_S5_T0_RKT1_(%class.Point*, i64, %class.Point* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.851
  %5 = load i32, i32* @y.852
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Point*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %class.Point*, align 8
  %15 = alloca %class.Point*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %class.Point* %0, %class.Point** %12, align 8
  store i64 %1, i64* %13, align 8
  store %class.Point* %2, %class.Point** %14, align 8
  %18 = load %class.Point*, %class.Point** %12, align 8
  store %class.Point* %18, %class.Point** %15, align 8
  %19 = load i32, i32* @x.851
  %20 = load i32, i32* @y.852
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %36, %originalBBpart2
  %28 = load i64, i64* %13, align 8
  %29 = icmp ugt i64 %28, 0
  br i1 %29, label %30, label %67

; <label>:30:                                     ; preds = %27
  %31 = load %class.Point*, %class.Point** %15, align 8
  %32 = invoke %class.Point* @_ZSt11__addressofI5PointILi3EEEPT_RS2_(%class.Point* dereferenceable(24) %31)
          to label %33 unwind label %41

; <label>:33:                                     ; preds = %30
  %34 = load %class.Point*, %class.Point** %14, align 8
  invoke void @_ZSt10_ConstructI5PointILi3EES1_EvPT_RKT0_(%class.Point* %32, %class.Point* dereferenceable(24) %34)
          to label %35 unwind label %41

; <label>:35:                                     ; preds = %33
  br label %36

; <label>:36:                                     ; preds = %35
  %37 = load i64, i64* %13, align 8
  %38 = add i64 %37, -1
  store i64 %38, i64* %13, align 8
  %39 = load %class.Point*, %class.Point** %15, align 8
  %40 = getelementptr inbounds %class.Point, %class.Point* %39, i32 1
  store %class.Point* %40, %class.Point** %15, align 8
  br label %27

; <label>:41:                                     ; preds = %33, %30
  %42 = landingpad { i8*, i32 }
          catch i8* null
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %16, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %17, align 4
  br label %45

; <label>:45:                                     ; preds = %41
  %46 = load i32, i32* @x.851
  %47 = load i32, i32* @y.852
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %45, %originalBB1alteredBB
  %54 = load i8*, i8** %16, align 8
  %55 = call i8* @__cxa_begin_catch(i8* %54) #12
  %56 = load %class.Point*, %class.Point** %12, align 8
  %57 = load %class.Point*, %class.Point** %15, align 8
  %58 = load i32, i32* @x.851
  %59 = load i32, i32* @y.852
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZSt8_DestroyIP5PointILi3EEEvT_S3_(%class.Point* %56, %class.Point* %57)
          to label %66 unwind label %85

; <label>:66:                                     ; preds = %originalBBpart24
  invoke void @__cxa_rethrow() #15
          to label %131 unwind label %85

; <label>:67:                                     ; preds = %27
  %68 = load i32, i32* @x.851
  %69 = load i32, i32* @y.852
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %67, %originalBB6alteredBB
  %76 = load %class.Point*, %class.Point** %15, align 8
  %77 = load i32, i32* @x.851
  %78 = load i32, i32* @y.852
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret %class.Point* %76

; <label>:85:                                     ; preds = %66, %originalBBpart24
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %16, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %17, align 4
  invoke void @__cxa_end_catch()
          to label %89 unwind label %112

; <label>:89:                                     ; preds = %85
  br label %91
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:91:                                     ; preds = %89
  %92 = load i32, i32* @x.851
  %93 = load i32, i32* @y.852
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %91, %originalBB10alteredBB
  %100 = load i8*, i8** %16, align 8
  %101 = load i32, i32* %17, align 4
  %102 = insertvalue { i8*, i32 } undef, i8* %100, 0
  %103 = insertvalue { i8*, i32 } %102, i32 %101, 1
  %104 = load i32, i32* @x.851
  %105 = load i32, i32* @y.852
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %103

; <label>:112:                                    ; preds = %85
  %113 = load i32, i32* @x.851
  %114 = load i32, i32* @y.852
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %112, %originalBB14alteredBB
  %121 = landingpad { i8*, i32 }
          catch i8* null
  %122 = extractvalue { i8*, i32 } %121, 0
  call void @__clang_call_terminate(i8* %122) #10
  %123 = load i32, i32* @x.851
  %124 = load i32, i32* @y.852
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable

; <label>:131:                                    ; preds = %66
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %132 = alloca %class.Point*, align 8
  %133 = alloca i64, align 8
  %134 = alloca %class.Point*, align 8
  %135 = alloca %class.Point*, align 8
  %136 = alloca i8*
  %137 = alloca i32
  store %class.Point* %0, %class.Point** %132, align 8
  store i64 %1, i64* %133, align 8
  store %class.Point* %2, %class.Point** %134, align 8
  %138 = load %class.Point*, %class.Point** %132, align 8
  store %class.Point* %138, %class.Point** %135, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %139 = load i8*, i8** %16, align 8
  %140 = call i8* @__cxa_begin_catch(i8* %139) #12
  %141 = load %class.Point*, %class.Point** %12, align 8
  %142 = load %class.Point*, %class.Point** %15, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %67
  %143 = load %class.Point*, %class.Point** %15, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %91
  %144 = load i8*, i8** %16, align 8
  %145 = load i32, i32* %17, align 4
  %146 = insertvalue { i8*, i32 } undef, i8* %144, 0
  %147 = insertvalue { i8*, i32 } %146, i32 %145, 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %112
  %148 = landingpad { i8*, i32 }
          catch i8* null
  %149 = extractvalue { i8*, i32 } %148, 0
  call void @__clang_call_terminate(i8* %149) #10
  br label %originalBB14
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.11"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.853
  %3 = load i32, i32* @y.854
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %10, align 8
  %11 = load %"class.std::vector.11"*, %"class.std::vector.11"** %10, align 8
  %12 = bitcast %"class.std::vector.11"* %11 to %"struct.std::_Vector_base.12"*
  %13 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNKSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %12)
  %14 = call i64 @_ZNSt6vectorI5PointILi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.13"* dereferenceable(1) %13)
  %15 = load i32, i32* @x.853
  %16 = load i32, i32* @y.854
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %14

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %23, align 8
  %24 = load %"class.std::vector.11"*, %"class.std::vector.11"** %23, align 8
  %25 = bitcast %"class.std::vector.11"* %24 to %"struct.std::_Vector_base.12"*
  %26 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNKSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %25)
  %27 = call i64 @_ZNSt6vectorI5PointILi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.13"* dereferenceable(1) %26)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #1 comdat {
  %3 = load i32, i32* @x.855
  %4 = load i32, i32* @y.856
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64*, align 8
  %12 = alloca i64*, align 8
  %13 = alloca i64*, align 8
  store i64* %0, i64** %12, align 8
  store i64* %1, i64** %13, align 8
  %14 = load i64*, i64** %12, align 8
  %15 = load i64, i64* %14, align 8
  %16 = load i64*, i64** %13, align 8
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  %19 = load i32, i32* @x.855
  %20 = load i32, i32* @y.856
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %29

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i64*, i64** %13, align 8
  store i64* %28, i64** %11, align 8
  br label %31

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i64*, i64** %12, align 8
  store i64* %30, i64** %11, align 8
  br label %31

; <label>:31:                                     ; preds = %29, %27
  %32 = load i64*, i64** %11, align 8
  ret i64* %32

originalBBalteredBB:                              ; preds = %originalBB, %2
  %33 = alloca i64*, align 8
  %34 = alloca i64*, align 8
  %35 = alloca i64*, align 8
  store i64* %0, i64** %34, align 8
  store i64* %1, i64** %35, align 8
  %36 = load i64*, i64** %34, align 8
  %37 = load i64, i64* %36, align 8
  %38 = load i64*, i64** %35, align 8
  %39 = load i64, i64* %38, align 8
  %40 = icmp ult i64 %37, %39
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorI5PointILi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.13"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.13"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %2, align 8
  store i64 384307168202282325, i64* %3, align 8
  %5 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8max_sizeERKS3_(%"class.std::allocator.13"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.13"* @_ZNKSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.859
  %3 = load i32, i32* @y.860
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.12"*, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %10, align 8
  %11 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %12 to %"class.std::allocator.13"*
  %14 = load i32, i32* @x.859
  %15 = load i32, i32* @y.860
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.13"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Vector_base.12"*, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %22, align 8
  %23 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %24 to %"class.std::allocator.13"*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8max_sizeERKS3_(%"class.std::allocator.13"* dereferenceable(1)) #1 comdat align 2 {
  %2 = load i32, i32* @x.861
  %3 = load i32, i32* @y.862
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %10, align 8
  %11 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %10, align 8
  %12 = bitcast %"class.std::allocator.13"* %11 to %"class.__gnu_cxx::new_allocator.14"*
  %13 = call i64 @_ZNK9__gnu_cxx13new_allocatorI5PointILi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"* %12) #12
  %14 = load i32, i32* @x.861
  %15 = load i32, i32* @y.862
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %22, align 8
  %23 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %22, align 8
  %24 = bitcast %"class.std::allocator.13"* %23 to %"class.__gnu_cxx::new_allocator.14"*
  %25 = call i64 @_ZNK9__gnu_cxx13new_allocatorI5PointILi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"* %24) #12
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI5PointILi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  ret i64 384307168202282325
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.129"*, %class.Point** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.865
  %4 = load i32, i32* @y.866
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.129"*, align 8
  %12 = alloca %class.Point**, align 8
  store %"class.__gnu_cxx::__normal_iterator.129"* %0, %"class.__gnu_cxx::__normal_iterator.129"** %11, align 8
  store %class.Point** %1, %class.Point*** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator.129"*, %"class.__gnu_cxx::__normal_iterator.129"** %11, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.129", %"class.__gnu_cxx::__normal_iterator.129"* %13, i32 0, i32 0
  %15 = load %class.Point**, %class.Point*** %12, align 8
  %16 = load %class.Point*, %class.Point** %15, align 8
  store %class.Point* %16, %class.Point** %14, align 8
  %17 = load i32, i32* @x.865
  %18 = load i32, i32* @y.866
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.129"*, align 8
  %26 = alloca %class.Point**, align 8
  store %"class.__gnu_cxx::__normal_iterator.129"* %0, %"class.__gnu_cxx::__normal_iterator.129"** %25, align 8
  store %class.Point** %1, %class.Point*** %26, align 8
  %27 = load %"class.__gnu_cxx::__normal_iterator.129"*, %"class.__gnu_cxx::__normal_iterator.129"** %25, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.129", %"class.__gnu_cxx::__normal_iterator.129"* %27, i32 0, i32 0
  %29 = load %class.Point**, %class.Point*** %26, align 8
  %30 = load %class.Point*, %class.Point** %29, align 8
  store %class.Point* %30, %class.Point** %28, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8allocateERS3_m(%"class.std::allocator.13"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.867
  %4 = load i32, i32* @y.868
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.13"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %11, align 8
  %14 = bitcast %"class.std::allocator.13"* %13 to %"class.__gnu_cxx::new_allocator.14"*
  %15 = load i64, i64* %12, align 8
  %16 = call %class.Point* @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.867
  %18 = load i32, i32* @y.868
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.13"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %25, align 8
  %28 = bitcast %"class.std::allocator.13"* %27 to %"class.__gnu_cxx::new_allocator.14"*
  %29 = load i64, i64* %26, align 8
  %30 = call %class.Point* @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorI5PointILi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"* %7) #12
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.869
  %14 = load i32, i32* @y.870
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64, i64* %5, align 8
  %22 = mul i64 %21, 24
  %23 = call i8* @_Znwm(i64 %22)
  %24 = bitcast i8* %23 to %class.Point*
  %25 = load i32, i32* @x.869
  %26 = load i32, i32* @y.870
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %24

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = load i64, i64* %5, align 8
  %_ = shl i64 %33, 24
  %_1 = sub i64 0, %33
  %gen = add i64 %_1, 24
  %_2 = sub i64 0, %33
  %gen3 = add i64 %_2, 24
  %_4 = shl i64 %33, 24
  %_5 = sub i64 %33, 24
  %gen6 = mul i64 %_5, 24
  %_7 = shl i64 %33, 24
  %34 = mul i64 %33, 24
  %35 = call i8* @_Znwm(i64 %34)
  %36 = bitcast i8* %35 to %class.Point*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.13"* dereferenceable(1), %class.Point*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.13"*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %4, align 8
  %8 = bitcast %"class.std::allocator.13"* %7 to %"class.__gnu_cxx::new_allocator.14"*
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.14"* %8, %class.Point* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.14"*, %class.Point*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  %8 = load %class.Point*, %class.Point** %5, align 8
  %9 = bitcast %class.Point* %8 to i8*
  call void @_ZdlPv(i8* %9) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEpLERKS0_(%class.Tensor*, %class.Tensor* dereferenceable(24)) #1 comdat align 2 {
  %3 = load i32, i32* @x.875
  %4 = load i32, i32* @y.876
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Tensor*, align 8
  %12 = alloca %class.Tensor*, align 8
  %13 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %11, align 8
  store %class.Tensor* %1, %class.Tensor** %12, align 8
  %14 = load %class.Tensor*, %class.Tensor** %11, align 8
  store i32 0, i32* %13, align 4
  %15 = load i32, i32* @x.875
  %16 = load i32, i32* @y.876
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %23

; <label>:23:                                     ; preds = %55, %originalBBpart2
  %24 = load i32, i32* @x.875
  %25 = load i32, i32* @y.876
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  %32 = load i32, i32* %13, align 4
  %33 = icmp ult i32 %32, 3
  %34 = load i32, i32* @x.875
  %35 = load i32, i32* @y.876
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %33, label %42, label %58

; <label>:42:                                     ; preds = %originalBBpart24
  %43 = load %class.Tensor*, %class.Tensor** %12, align 8
  %44 = getelementptr inbounds %class.Tensor, %class.Tensor* %43, i32 0, i32 0
  %45 = load i32, i32* %13, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds [3 x double], [3 x double]* %44, i64 0, i64 %46
  %48 = load double, double* %47, align 8
  %49 = getelementptr inbounds %class.Tensor, %class.Tensor* %14, i32 0, i32 0
  %50 = load i32, i32* %13, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds [3 x double], [3 x double]* %49, i64 0, i64 %51
  %53 = load double, double* %52, align 8
  %54 = fadd double %53, %48
  store double %54, double* %52, align 8
  br label %55

; <label>:55:                                     ; preds = %42
  %56 = load i32, i32* %13, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %13, align 4
  br label %23

; <label>:58:                                     ; preds = %originalBBpart24
  %59 = load i32, i32* @x.875
  %60 = load i32, i32* @y.876
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  %67 = load i32, i32* @x.875
  %68 = load i32, i32* @y.876
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret %class.Tensor* %14

originalBBalteredBB:                              ; preds = %originalBB, %2
  %75 = alloca %class.Tensor*, align 8
  %76 = alloca %class.Tensor*, align 8
  %77 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %75, align 8
  store %class.Tensor* %1, %class.Tensor** %76, align 8
  %78 = load %class.Tensor*, %class.Tensor** %75, align 8
  store i32 0, i32* %77, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  %79 = load i32, i32* %13, align 4
  %80 = icmp ult i32 %79, 3
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5PointILi3EEC2ERK6TensorILi1ELi3EE(%class.Point*, %class.Tensor* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.877
  %4 = load i32, i32* @y.878
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Point*, align 8
  %12 = alloca %class.Tensor*, align 8
  store %class.Point* %0, %class.Point** %11, align 8
  store %class.Tensor* %1, %class.Tensor** %12, align 8
  %13 = load %class.Point*, %class.Point** %11, align 8
  %14 = bitcast %class.Point* %13 to %class.Tensor*
  %15 = load %class.Tensor*, %class.Tensor** %12, align 8
  call void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor* %14, %class.Tensor* dereferenceable(24) %15)
  %16 = load i32, i32* @x.877
  %17 = load i32, i32* @y.878
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca %class.Point*, align 8
  %25 = alloca %class.Tensor*, align 8
  store %class.Point* %0, %class.Point** %24, align 8
  store %class.Tensor* %1, %class.Tensor** %25, align 8
  %26 = load %class.Point*, %class.Point** %24, align 8
  %27 = bitcast %class.Point* %26 to %class.Tensor*
  %28 = load %class.Tensor*, %class.Tensor** %25, align 8
  call void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor* %27, %class.Tensor* dereferenceable(24) %28)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEdVERKd(%class.Tensor*, double* dereferenceable(8)) #1 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca double*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  store double* %1, double** %4, align 8
  %6 = load %class.Tensor*, %class.Tensor** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %originalBBpart216, %2
  %8 = load i32, i32* %5, align 4
  %9 = icmp ult i32 %8, 3
  br i1 %9, label %10, label %54

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.879
  %12 = load i32, i32* @y.880
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load double*, double** %4, align 8
  %20 = load double, double* %19, align 8
  %21 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %22 = load i32, i32* %5, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [3 x double], [3 x double]* %21, i64 0, i64 %23
  %25 = load double, double* %24, align 8
  %26 = fdiv double %25, %20
  store double %26, double* %24, align 8
  %27 = load i32, i32* @x.879
  %28 = load i32, i32* @y.880
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %35

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load i32, i32* @x.879
  %37 = load i32, i32* @y.880
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %35, %originalBB13alteredBB
  %44 = load i32, i32* %5, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %5, align 4
  %46 = load i32, i32* @x.879
  %47 = load i32, i32* @y.880
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart216, label %originalBB13alteredBB

originalBBpart216:                                ; preds = %originalBB13
  br label %7

; <label>:54:                                     ; preds = %7
  ret %class.Tensor* %6

originalBBalteredBB:                              ; preds = %originalBB, %10
  %55 = load double*, double** %4, align 8
  %56 = load double, double* %55, align 8
  %57 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %58 = load i32, i32* %5, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds [3 x double], [3 x double]* %57, i64 0, i64 %59
  %61 = load double, double* %60, align 8
  %_ = fsub double %61, %56
  %gen = fmul double %_, %56
  %_1 = fsub double -0.000000e+00, %61
  %gen2 = fadd double %_1, %56
  %_3 = fsub double -0.000000e+00, %61
  %gen4 = fadd double %_3, %56
  %_5 = fsub double -0.000000e+00, %61
  %gen6 = fadd double %_5, %56
  %_7 = fsub double -0.000000e+00, %61
  %gen8 = fadd double %_7, %56
  %_9 = fsub double -0.000000e+00, %61
  %gen10 = fadd double %_9, %56
  %_11 = fsub double %61, %56
  %gen12 = fmul double %_11, %56
  %62 = fdiv double %61, %56
  store double %62, double* %60, align 8
  br label %originalBB

originalBB13alteredBB:                            ; preds = %originalBB13, %35
  %63 = load i32, i32* %5, align 4
  %_14 = shl i32 %63, 1
  %64 = add i32 %63, 1
  store i32 %64, i32* %5, align 4
  br label %originalBB13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE4sizeEv(%"class.std::vector.16"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.881
  %3 = load i32, i32* @y.882
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %10, align 8
  %11 = load %"class.std::vector.16"*, %"class.std::vector.16"** %10, align 8
  %12 = bitcast %"class.std::vector.16"* %11 to %"struct.std::_Vector_base.17"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %13 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %14, i32 0, i32 1
  %16 = load %class.Point.21*, %class.Point.21** %15, align 8
  %17 = bitcast %"class.std::vector.16"* %11 to %"struct.std::_Vector_base.17"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %class.Point.21*, %class.Point.21** %20, align 8
  %22 = ptrtoint %class.Point.21* %16 to i64
  %23 = ptrtoint %class.Point.21* %21 to i64
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 16
  %26 = load i32, i32* @x.881
  %27 = load i32, i32* @y.882
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %25

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %34, align 8
  %35 = load %"class.std::vector.16"*, %"class.std::vector.16"** %34, align 8
  %36 = bitcast %"class.std::vector.16"* %35 to %"struct.std::_Vector_base.17"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %37 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %38, i32 0, i32 1
  %40 = load %class.Point.21*, %class.Point.21** %39, align 8
  %41 = bitcast %"class.std::vector.16"* %35 to %"struct.std::_Vector_base.17"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %42 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load %class.Point.21*, %class.Point.21** %44, align 8
  %46 = ptrtoint %class.Point.21* %40 to i64
  %47 = ptrtoint %class.Point.21* %45 to i64
  %_ = shl i64 %46, %47
  %_1 = shl i64 %46, %47
  %_2 = sub i64 0, %46
  %gen = add i64 %_2, %47
  %_3 = sub i64 0, %46
  %gen4 = add i64 %_3, %47
  %_5 = sub i64 0, %46
  %gen6 = add i64 %_5, %47
  %_7 = sub i64 %46, %47
  %gen8 = mul i64 %_7, %47
  %48 = sub i64 %46, %47
  %49 = sdiv exact i64 %48, 16
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi2EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.16"*, %class.Point.21*, i64, %class.Point.21* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.130", align 8
  %6 = alloca %"class.std::vector.16"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %class.Point.21*, align 8
  %9 = alloca %class.Point.21, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.130", align 8
  %12 = alloca %class.Point.21*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.130", align 8
  %16 = alloca %class.Point.21*, align 8
  %17 = alloca %class.Point.21*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.130", %"class.__gnu_cxx::__normal_iterator.130"* %5, i32 0, i32 0
  store %class.Point.21* %1, %class.Point.21** %20, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %6, align 8
  store i64 %2, i64* %7, align 8
  store %class.Point.21* %3, %class.Point.21** %8, align 8
  %21 = load %"class.std::vector.16"*, %"class.std::vector.16"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %404

; <label>:24:                                     ; preds = %4
  %25 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %25, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %26 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %27, i32 0, i32 2
  %29 = load %class.Point.21*, %class.Point.21** %28, align 8
  %30 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %31 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %32, i32 0, i32 1
  %34 = load %class.Point.21*, %class.Point.21** %33, align 8
  %35 = ptrtoint %class.Point.21* %29 to i64
  %36 = ptrtoint %class.Point.21* %34 to i64
  %37 = sub i64 %35, %36
  %38 = sdiv exact i64 %37, 16
  %39 = load i64, i64* %7, align 8
  %40 = icmp uge i64 %38, %39
  br i1 %40, label %41, label %167

; <label>:41:                                     ; preds = %24
  %42 = load i32, i32* @x.883
  %43 = load i32, i32* @y.884
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %41, %originalBBalteredBB
  %50 = load %class.Point.21*, %class.Point.21** %8, align 8
  call void @_ZN5PointILi2EEC2ERKS0_(%class.Point.21* %9, %class.Point.21* dereferenceable(16) %50)
  %51 = call %class.Point.21* @_ZNSt6vectorI5PointILi2EESaIS1_EE3endEv(%"class.std::vector.16"* %21)
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.130", %"class.__gnu_cxx::__normal_iterator.130"* %11, i32 0, i32 0
  store %class.Point.21* %51, %class.Point.21** %52, align 8
  %53 = call i64 @_ZN9__gnu_cxxmiIP5PointILi2EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.130"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.130"* dereferenceable(8) %5)
  store i64 %53, i64* %10, align 8
  %54 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %54, i32 0, i32 0
  %56 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %55 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %56, i32 0, i32 1
  %58 = load %class.Point.21*, %class.Point.21** %57, align 8
  store %class.Point.21* %58, %class.Point.21** %12, align 8
  %59 = load i64, i64* %10, align 8
  %60 = load i64, i64* %7, align 8
  %61 = icmp ugt i64 %59, %60
  %62 = load i32, i32* @x.883
  %63 = load i32, i32* @y.884
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %61, label %70, label %129

; <label>:70:                                     ; preds = %originalBBpart2
  %71 = load i32, i32* @x.883
  %72 = load i32, i32* @y.884
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %70, %originalBB1alteredBB
  %79 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %79, i32 0, i32 0
  %81 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %80 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %81, i32 0, i32 1
  %83 = load %class.Point.21*, %class.Point.21** %82, align 8
  %84 = load i64, i64* %7, align 8
  %85 = sub i64 0, %84
  %86 = getelementptr inbounds %class.Point.21, %class.Point.21* %83, i64 %85
  %87 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %88 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %89, i32 0, i32 1
  %91 = load %class.Point.21*, %class.Point.21** %90, align 8
  %92 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %92, i32 0, i32 0
  %94 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %93 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %94, i32 0, i32 1
  %96 = load %class.Point.21*, %class.Point.21** %95, align 8
  %97 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %98 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %97)
  %99 = call %class.Point.21* @_ZSt22__uninitialized_move_aIP5PointILi2EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point.21* %86, %class.Point.21* %91, %class.Point.21* %96, %"class.std::allocator.18"* dereferenceable(1) %98)
  %100 = load i64, i64* %7, align 8
  %101 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %101, i32 0, i32 0
  %103 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %102 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %104 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %103, i32 0, i32 1
  %105 = load %class.Point.21*, %class.Point.21** %104, align 8
  %106 = getelementptr inbounds %class.Point.21, %class.Point.21* %105, i64 %100
  store %class.Point.21* %106, %class.Point.21** %104, align 8
  %107 = call dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"* %5)
  %108 = load %class.Point.21*, %class.Point.21** %107, align 8
  %109 = load %class.Point.21*, %class.Point.21** %12, align 8
  %110 = load i64, i64* %7, align 8
  %111 = sub i64 0, %110
  %112 = getelementptr inbounds %class.Point.21, %class.Point.21* %109, i64 %111
  %113 = load %class.Point.21*, %class.Point.21** %12, align 8
  %114 = call %class.Point.21* @_ZSt13copy_backwardIP5PointILi2EES2_ET0_T_S4_S3_(%class.Point.21* %108, %class.Point.21* %112, %class.Point.21* %113)
  %115 = call dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"* %5)
  %116 = load %class.Point.21*, %class.Point.21** %115, align 8
  %117 = call dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"* %5)
  %118 = load %class.Point.21*, %class.Point.21** %117, align 8
  %119 = load i64, i64* %7, align 8
  %120 = getelementptr inbounds %class.Point.21, %class.Point.21* %118, i64 %119
  call void @_ZSt4fillIP5PointILi2EES1_EvT_S3_RKT0_(%class.Point.21* %116, %class.Point.21* %120, %class.Point.21* dereferenceable(16) %9)
  %121 = load i32, i32* @x.883
  %122 = load i32, i32* @y.884
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart215, label %originalBB1alteredBB

originalBBpart215:                                ; preds = %originalBB1
  br label %166

; <label>:129:                                    ; preds = %originalBBpart2
  %130 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %131 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %130, i32 0, i32 0
  %132 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %131 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %133 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %132, i32 0, i32 1
  %134 = load %class.Point.21*, %class.Point.21** %133, align 8
  %135 = load i64, i64* %7, align 8
  %136 = load i64, i64* %10, align 8
  %137 = sub i64 %135, %136
  %138 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %139 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %138)
  %140 = call %class.Point.21* @_ZSt24__uninitialized_fill_n_aIP5PointILi2EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Point.21* %134, i64 %137, %class.Point.21* dereferenceable(16) %9, %"class.std::allocator.18"* dereferenceable(1) %139)
  %141 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %142 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %141, i32 0, i32 0
  %143 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %142 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %143, i32 0, i32 1
  store %class.Point.21* %140, %class.Point.21** %144, align 8
  %145 = call dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"* %5)
  %146 = load %class.Point.21*, %class.Point.21** %145, align 8
  %147 = load %class.Point.21*, %class.Point.21** %12, align 8
  %148 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %149 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %148, i32 0, i32 0
  %150 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %149 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %151 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %150, i32 0, i32 1
  %152 = load %class.Point.21*, %class.Point.21** %151, align 8
  %153 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %154 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %153)
  %155 = call %class.Point.21* @_ZSt22__uninitialized_move_aIP5PointILi2EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point.21* %146, %class.Point.21* %147, %class.Point.21* %152, %"class.std::allocator.18"* dereferenceable(1) %154)
  %156 = load i64, i64* %10, align 8
  %157 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %158 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %157, i32 0, i32 0
  %159 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %158 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %160 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %159, i32 0, i32 1
  %161 = load %class.Point.21*, %class.Point.21** %160, align 8
  %162 = getelementptr inbounds %class.Point.21, %class.Point.21* %161, i64 %156
  store %class.Point.21* %162, %class.Point.21** %160, align 8
  %163 = call dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"* %5)
  %164 = load %class.Point.21*, %class.Point.21** %163, align 8
  %165 = load %class.Point.21*, %class.Point.21** %12, align 8
  call void @_ZSt4fillIP5PointILi2EES1_EvT_S3_RKT0_(%class.Point.21* %164, %class.Point.21* %165, %class.Point.21* dereferenceable(16) %9)
  br label %166

; <label>:166:                                    ; preds = %129, %originalBBpart215
  br label %403

; <label>:167:                                    ; preds = %24
  %168 = load i64, i64* %7, align 8
  %169 = call i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.16"* %21, i64 %168, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0))
  store i64 %169, i64* %13, align 8
  %170 = call %class.Point.21* @_ZNSt6vectorI5PointILi2EESaIS1_EE5beginEv(%"class.std::vector.16"* %21)
  %171 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.130", %"class.__gnu_cxx::__normal_iterator.130"* %15, i32 0, i32 0
  store %class.Point.21* %170, %class.Point.21** %171, align 8
  %172 = call i64 @_ZN9__gnu_cxxmiIP5PointILi2EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.130"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.130"* dereferenceable(8) %15)
  store i64 %172, i64* %14, align 8
  %173 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %174 = load i64, i64* %13, align 8
  %175 = call %class.Point.21* @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.17"* %173, i64 %174)
  store %class.Point.21* %175, %class.Point.21** %16, align 8
  %176 = load %class.Point.21*, %class.Point.21** %16, align 8
  store %class.Point.21* %176, %class.Point.21** %17, align 8
  %177 = load %class.Point.21*, %class.Point.21** %16, align 8
  %178 = load i64, i64* %14, align 8
  %179 = getelementptr inbounds %class.Point.21, %class.Point.21* %177, i64 %178
  %180 = load i64, i64* %7, align 8
  %181 = load %class.Point.21*, %class.Point.21** %8, align 8
  %182 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %183 = invoke dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %182)
          to label %184 unwind label %266

; <label>:184:                                    ; preds = %167
  %185 = load i32, i32* @x.883
  %186 = load i32, i32* @y.884
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %184, %originalBB17alteredBB
  %193 = load i32, i32* @x.883
  %194 = load i32, i32* @y.884
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  %201 = invoke %class.Point.21* @_ZSt24__uninitialized_fill_n_aIP5PointILi2EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Point.21* %179, i64 %180, %class.Point.21* dereferenceable(16) %181, %"class.std::allocator.18"* dereferenceable(1) %183)
          to label %202 unwind label %266

; <label>:202:                                    ; preds = %originalBBpart219
  store %class.Point.21* null, %class.Point.21** %17, align 8
  %203 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %204 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %203, i32 0, i32 0
  %205 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %204 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %206 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %205, i32 0, i32 0
  %207 = load %class.Point.21*, %class.Point.21** %206, align 8
  %208 = invoke dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"* %5)
          to label %209 unwind label %266

; <label>:209:                                    ; preds = %202
  %210 = load %class.Point.21*, %class.Point.21** %208, align 8
  %211 = load %class.Point.21*, %class.Point.21** %16, align 8
  %212 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %213 = invoke dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %212)
          to label %214 unwind label %266

; <label>:214:                                    ; preds = %209
  %215 = load i32, i32* @x.883
  %216 = load i32, i32* @y.884
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %214, %originalBB21alteredBB
  %223 = load i32, i32* @x.883
  %224 = load i32, i32* @y.884
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  %231 = invoke %class.Point.21* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi2EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point.21* %207, %class.Point.21* %210, %class.Point.21* %211, %"class.std::allocator.18"* dereferenceable(1) %213)
          to label %232 unwind label %266

; <label>:232:                                    ; preds = %originalBBpart223
  store %class.Point.21* %231, %class.Point.21** %17, align 8
  %233 = load i64, i64* %7, align 8
  %234 = load %class.Point.21*, %class.Point.21** %17, align 8
  %235 = getelementptr inbounds %class.Point.21, %class.Point.21* %234, i64 %233
  store %class.Point.21* %235, %class.Point.21** %17, align 8
  %236 = invoke dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"* %5)
          to label %237 unwind label %266

; <label>:237:                                    ; preds = %232
  %238 = load %class.Point.21*, %class.Point.21** %236, align 8
  %239 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %240 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %239, i32 0, i32 0
  %241 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %240 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %242 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %241, i32 0, i32 1
  %243 = load %class.Point.21*, %class.Point.21** %242, align 8
  %244 = load %class.Point.21*, %class.Point.21** %17, align 8
  %245 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %246 = invoke dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %245)
          to label %247 unwind label %266

; <label>:247:                                    ; preds = %237
  %248 = load i32, i32* @x.883
  %249 = load i32, i32* @y.884
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %247, %originalBB25alteredBB
  %256 = load i32, i32* @x.883
  %257 = load i32, i32* @y.884
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  %264 = invoke %class.Point.21* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi2EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point.21* %238, %class.Point.21* %243, %class.Point.21* %244, %"class.std::allocator.18"* dereferenceable(1) %246)
          to label %265 unwind label %266

; <label>:265:                                    ; preds = %originalBBpart227
  store %class.Point.21* %264, %class.Point.21** %17, align 8
  br label %353

; <label>:266:                                    ; preds = %originalBBpart227, %237, %232, %originalBBpart223, %209, %202, %originalBBpart219, %167
  %267 = landingpad { i8*, i32 }
          catch i8* null
  %268 = extractvalue { i8*, i32 } %267, 0
  store i8* %268, i8** %18, align 8
  %269 = extractvalue { i8*, i32 } %267, 1
  store i32 %269, i32* %19, align 4
  br label %270

; <label>:270:                                    ; preds = %266
  %271 = load i32, i32* @x.883
  %272 = load i32, i32* @y.884
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %270, %originalBB29alteredBB
  %279 = load i8*, i8** %18, align 8
  %280 = call i8* @__cxa_begin_catch(i8* %279) #12
  %281 = load %class.Point.21*, %class.Point.21** %17, align 8
  %282 = icmp ne %class.Point.21* %281, null
  %283 = load i32, i32* @x.883
  %284 = load i32, i32* @y.884
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %282, label %324, label %291

; <label>:291:                                    ; preds = %originalBBpart231
  %292 = load %class.Point.21*, %class.Point.21** %16, align 8
  %293 = load i64, i64* %14, align 8
  %294 = getelementptr inbounds %class.Point.21, %class.Point.21* %292, i64 %293
  %295 = load %class.Point.21*, %class.Point.21** %16, align 8
  %296 = load i64, i64* %14, align 8
  %297 = getelementptr inbounds %class.Point.21, %class.Point.21* %295, i64 %296
  %298 = load i64, i64* %7, align 8
  %299 = getelementptr inbounds %class.Point.21, %class.Point.21* %297, i64 %298
  %300 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %301 = invoke dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %300)
          to label %302 unwind label %320

; <label>:302:                                    ; preds = %291
  invoke void @_ZSt8_DestroyIP5PointILi2EES1_EvT_S3_RSaIT0_E(%class.Point.21* %294, %class.Point.21* %299, %"class.std::allocator.18"* dereferenceable(1) %301)
          to label %303 unwind label %320

; <label>:303:                                    ; preds = %302
  %304 = load i32, i32* @x.883
  %305 = load i32, i32* @y.884
  %306 = sub i32 %304, 1
  %307 = mul i32 %304, %306
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %309, %310
  br i1 %311, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %303, %originalBB33alteredBB
  %312 = load i32, i32* @x.883
  %313 = load i32, i32* @y.884
  %314 = sub i32 %312, 1
  %315 = mul i32 %312, %314
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %317, %318
  br i1 %319, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %347

; <label>:320:                                    ; preds = %351, %347, %originalBBpart239, %324, %302, %291
  %321 = landingpad { i8*, i32 }
          cleanup
  %322 = extractvalue { i8*, i32 } %321, 0
  store i8* %322, i8** %18, align 8
  %323 = extractvalue { i8*, i32 } %321, 1
  store i32 %323, i32* %19, align 4
  invoke void @__cxa_end_catch()
          to label %352 unwind label %410

; <label>:324:                                    ; preds = %originalBBpart231
  %325 = load %class.Point.21*, %class.Point.21** %16, align 8
  %326 = load %class.Point.21*, %class.Point.21** %17, align 8
  %327 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %328 = invoke dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %327)
          to label %329 unwind label %320

; <label>:329:                                    ; preds = %324
  %330 = load i32, i32* @x.883
  %331 = load i32, i32* @y.884
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %329, %originalBB37alteredBB
  %338 = load i32, i32* @x.883
  %339 = load i32, i32* @y.884
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  invoke void @_ZSt8_DestroyIP5PointILi2EES1_EvT_S3_RSaIT0_E(%class.Point.21* %325, %class.Point.21* %326, %"class.std::allocator.18"* dereferenceable(1) %328)
          to label %346 unwind label %320

; <label>:346:                                    ; preds = %originalBBpart239
  br label %347

; <label>:347:                                    ; preds = %346, %originalBBpart235
  %348 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %349 = load %class.Point.21*, %class.Point.21** %16, align 8
  %350 = load i64, i64* %13, align 8
  invoke void @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.17"* %348, %class.Point.21* %349, i64 %350)
          to label %351 unwind label %320

; <label>:351:                                    ; preds = %347
  invoke void @__cxa_rethrow() #15
          to label %413 unwind label %320

; <label>:352:                                    ; preds = %320
  br label %405

; <label>:353:                                    ; preds = %265
  %354 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %355 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %354, i32 0, i32 0
  %356 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %355 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %357 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %356, i32 0, i32 0
  %358 = load %class.Point.21*, %class.Point.21** %357, align 8
  %359 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %360 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %359, i32 0, i32 0
  %361 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %360 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %362 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %361, i32 0, i32 1
  %363 = load %class.Point.21*, %class.Point.21** %362, align 8
  %364 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %365 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %364)
  call void @_ZSt8_DestroyIP5PointILi2EES1_EvT_S3_RSaIT0_E(%class.Point.21* %358, %class.Point.21* %363, %"class.std::allocator.18"* dereferenceable(1) %365)
  %366 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %367 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %368 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %367, i32 0, i32 0
  %369 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %368 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %370 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %369, i32 0, i32 0
  %371 = load %class.Point.21*, %class.Point.21** %370, align 8
  %372 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %373 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %372, i32 0, i32 0
  %374 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %373 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %375 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %374, i32 0, i32 2
  %376 = load %class.Point.21*, %class.Point.21** %375, align 8
  %377 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %378 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %377, i32 0, i32 0
  %379 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %378 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %380 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %379, i32 0, i32 0
  %381 = load %class.Point.21*, %class.Point.21** %380, align 8
  %382 = ptrtoint %class.Point.21* %376 to i64
  %383 = ptrtoint %class.Point.21* %381 to i64
  %384 = sub i64 %382, %383
  %385 = sdiv exact i64 %384, 16
  call void @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.17"* %366, %class.Point.21* %371, i64 %385)
  %386 = load %class.Point.21*, %class.Point.21** %16, align 8
  %387 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %388 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %387, i32 0, i32 0
  %389 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %388 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %390 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %389, i32 0, i32 0
  store %class.Point.21* %386, %class.Point.21** %390, align 8
  %391 = load %class.Point.21*, %class.Point.21** %17, align 8
  %392 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %393 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %392, i32 0, i32 0
  %394 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %393 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %395 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %394, i32 0, i32 1
  store %class.Point.21* %391, %class.Point.21** %395, align 8
  %396 = load %class.Point.21*, %class.Point.21** %16, align 8
  %397 = load i64, i64* %13, align 8
  %398 = getelementptr inbounds %class.Point.21, %class.Point.21* %396, i64 %397
  %399 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %400 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %399, i32 0, i32 0
  %401 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %400 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %402 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %401, i32 0, i32 2
  store %class.Point.21* %398, %class.Point.21** %402, align 8
  br label %403

; <label>:403:                                    ; preds = %353, %166
  br label %404

; <label>:404:                                    ; preds = %403, %4
  ret void

; <label>:405:                                    ; preds = %352
  %406 = load i8*, i8** %18, align 8
  %407 = load i32, i32* %19, align 4
  %408 = insertvalue { i8*, i32 } undef, i8* %406, 0
  %409 = insertvalue { i8*, i32 } %408, i32 %407, 1
  resume { i8*, i32 } %409

; <label>:410:                                    ; preds = %320
  %411 = landingpad { i8*, i32 }
          catch i8* null
  %412 = extractvalue { i8*, i32 } %411, 0
  call void @__clang_call_terminate(i8* %412) #10
  unreachable

; <label>:413:                                    ; preds = %351
  %414 = load i32, i32* @x.883
  %415 = load i32, i32* @y.884
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %413, %originalBB41alteredBB
  %422 = load i32, i32* @x.883
  %423 = load i32, i32* @y.884
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %41
  %430 = load %class.Point.21*, %class.Point.21** %8, align 8
  call void @_ZN5PointILi2EEC2ERKS0_(%class.Point.21* %9, %class.Point.21* dereferenceable(16) %430)
  %431 = call %class.Point.21* @_ZNSt6vectorI5PointILi2EESaIS1_EE3endEv(%"class.std::vector.16"* %21)
  %432 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.130", %"class.__gnu_cxx::__normal_iterator.130"* %11, i32 0, i32 0
  store %class.Point.21* %431, %class.Point.21** %432, align 8
  %433 = call i64 @_ZN9__gnu_cxxmiIP5PointILi2EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.130"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.130"* dereferenceable(8) %5)
  store i64 %433, i64* %10, align 8
  %434 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %435 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %434, i32 0, i32 0
  %436 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %435 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %437 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %436, i32 0, i32 1
  %438 = load %class.Point.21*, %class.Point.21** %437, align 8
  store %class.Point.21* %438, %class.Point.21** %12, align 8
  %439 = load i64, i64* %10, align 8
  %440 = load i64, i64* %7, align 8
  %441 = icmp ugt i64 %439, %440
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %70
  %442 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %443 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %442, i32 0, i32 0
  %444 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %443 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %445 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %444, i32 0, i32 1
  %446 = load %class.Point.21*, %class.Point.21** %445, align 8
  %447 = load i64, i64* %7, align 8
  %_ = shl i64 0, %447
  %_2 = shl i64 0, %447
  %_3 = sub i64 0, 0
  %gen = add i64 %_3, %447
  %448 = sub i64 0, %447
  %449 = getelementptr inbounds %class.Point.21, %class.Point.21* %446, i64 %448
  %450 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %451 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %450, i32 0, i32 0
  %452 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %451 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %453 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %452, i32 0, i32 1
  %454 = load %class.Point.21*, %class.Point.21** %453, align 8
  %455 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %456 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %455, i32 0, i32 0
  %457 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %456 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %458 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %457, i32 0, i32 1
  %459 = load %class.Point.21*, %class.Point.21** %458, align 8
  %460 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %461 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %460)
  %462 = call %class.Point.21* @_ZSt22__uninitialized_move_aIP5PointILi2EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point.21* %449, %class.Point.21* %454, %class.Point.21* %459, %"class.std::allocator.18"* dereferenceable(1) %461)
  %463 = load i64, i64* %7, align 8
  %464 = bitcast %"class.std::vector.16"* %21 to %"struct.std::_Vector_base.17"*
  %465 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %464, i32 0, i32 0
  %466 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %465 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %467 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %466, i32 0, i32 1
  %468 = load %class.Point.21*, %class.Point.21** %467, align 8
  %469 = getelementptr inbounds %class.Point.21, %class.Point.21* %468, i64 %463
  store %class.Point.21* %469, %class.Point.21** %467, align 8
  %470 = call dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"* %5)
  %471 = load %class.Point.21*, %class.Point.21** %470, align 8
  %472 = load %class.Point.21*, %class.Point.21** %12, align 8
  %473 = load i64, i64* %7, align 8
  %_4 = sub i64 0, %473
  %gen5 = mul i64 %_4, %473
  %_6 = sub i64 0, %473
  %gen7 = mul i64 %_6, %473
  %_8 = sub i64 0, 0
  %gen9 = add i64 %_8, %473
  %_10 = sub i64 0, 0
  %gen11 = add i64 %_10, %473
  %_12 = sub i64 0, 0
  %gen13 = add i64 %_12, %473
  %474 = sub i64 0, %473
  %475 = getelementptr inbounds %class.Point.21, %class.Point.21* %472, i64 %474
  %476 = load %class.Point.21*, %class.Point.21** %12, align 8
  %477 = call %class.Point.21* @_ZSt13copy_backwardIP5PointILi2EES2_ET0_T_S4_S3_(%class.Point.21* %471, %class.Point.21* %475, %class.Point.21* %476)
  %478 = call dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"* %5)
  %479 = load %class.Point.21*, %class.Point.21** %478, align 8
  %480 = call dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"* %5)
  %481 = load %class.Point.21*, %class.Point.21** %480, align 8
  %482 = load i64, i64* %7, align 8
  %483 = getelementptr inbounds %class.Point.21, %class.Point.21* %481, i64 %482
  call void @_ZSt4fillIP5PointILi2EES1_EvT_S3_RKT0_(%class.Point.21* %479, %class.Point.21* %483, %class.Point.21* dereferenceable(16) %9)
  br label %originalBB1

originalBB17alteredBB:                            ; preds = %originalBB17, %184
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %214
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %247
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %270
  %484 = load i8*, i8** %18, align 8
  %485 = call i8* @__cxa_begin_catch(i8* %484) #12
  %486 = load %class.Point.21*, %class.Point.21** %17, align 8
  %487 = icmp ne %class.Point.21* %486, null
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %303
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %329
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %413
  br label %originalBB41
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZNSt6vectorI5PointILi2EESaIS1_EE3endEv(%"class.std::vector.16"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.130", align 8
  %3 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %3, align 8
  %4 = load %"class.std::vector.16"*, %"class.std::vector.16"** %3, align 8
  %5 = bitcast %"class.std::vector.16"* %4 to %"struct.std::_Vector_base.17"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %7, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.130"* %2, %class.Point.21** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.130", %"class.__gnu_cxx::__normal_iterator.130"* %2, i32 0, i32 0
  %10 = load %class.Point.21*, %class.Point.21** %9, align 8
  ret %class.Point.21* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi2EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.16"*, %class.Point.21*) #0 comdat align 2 {
  %3 = load i32, i32* @x.887
  %4 = load i32, i32* @y.888
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.16"*, align 8
  %12 = alloca %class.Point.21*, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %11, align 8
  store %class.Point.21* %1, %class.Point.21** %12, align 8
  %14 = load %"class.std::vector.16"*, %"class.std::vector.16"** %11, align 8
  %15 = bitcast %"class.std::vector.16"* %14 to %"struct.std::_Vector_base.17"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %15, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %16 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %17, i32 0, i32 1
  %19 = load %class.Point.21*, %class.Point.21** %18, align 8
  %20 = load %class.Point.21*, %class.Point.21** %12, align 8
  %21 = ptrtoint %class.Point.21* %19 to i64
  %22 = ptrtoint %class.Point.21* %20 to i64
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 16
  store i64 %24, i64* %13, align 8
  %25 = load i64, i64* %13, align 8
  %26 = icmp ne i64 %25, 0
  %27 = load i32, i32* @x.887
  %28 = load i32, i32* @y.888
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %35, label %49

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load %class.Point.21*, %class.Point.21** %12, align 8
  %37 = bitcast %"class.std::vector.16"* %14 to %"struct.std::_Vector_base.17"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %37, i32 0, i32 0
  %39 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %38 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %39, i32 0, i32 1
  %41 = load %class.Point.21*, %class.Point.21** %40, align 8
  %42 = bitcast %"class.std::vector.16"* %14 to %"struct.std::_Vector_base.17"*
  %43 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %42)
  call void @_ZSt8_DestroyIP5PointILi2EES1_EvT_S3_RSaIT0_E(%class.Point.21* %36, %class.Point.21* %41, %"class.std::allocator.18"* dereferenceable(1) %43)
  %44 = load %class.Point.21*, %class.Point.21** %12, align 8
  %45 = bitcast %"class.std::vector.16"* %14 to %"struct.std::_Vector_base.17"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %45, i32 0, i32 0
  %47 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %46 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %47, i32 0, i32 1
  store %class.Point.21* %44, %class.Point.21** %48, align 8
  br label %49

; <label>:49:                                     ; preds = %35, %originalBBpart2
  %50 = load i32, i32* @x.887
  %51 = load i32, i32* @y.888
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %49, %originalBB17alteredBB
  %58 = load i32, i32* @x.887
  %59 = load i32, i32* @y.888
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %66 = alloca %"class.std::vector.16"*, align 8
  %67 = alloca %class.Point.21*, align 8
  %68 = alloca i64, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %66, align 8
  store %class.Point.21* %1, %class.Point.21** %67, align 8
  %69 = load %"class.std::vector.16"*, %"class.std::vector.16"** %66, align 8
  %70 = bitcast %"class.std::vector.16"* %69 to %"struct.std::_Vector_base.17"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %71 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %72, i32 0, i32 1
  %74 = load %class.Point.21*, %class.Point.21** %73, align 8
  %75 = load %class.Point.21*, %class.Point.21** %67, align 8
  %76 = ptrtoint %class.Point.21* %74 to i64
  %77 = ptrtoint %class.Point.21* %75 to i64
  %_ = sub i64 0, %76
  %gen = add i64 %_, %77
  %_1 = sub i64 %76, %77
  %gen2 = mul i64 %_1, %77
  %78 = sub i64 %76, %77
  %_3 = sub i64 0, %78
  %gen4 = add i64 %_3, 16
  %_5 = sub i64 0, %78
  %gen6 = add i64 %_5, 16
  %_7 = shl i64 %78, 16
  %_8 = sub i64 0, %78
  %gen9 = add i64 %_8, 16
  %_10 = sub i64 0, %78
  %gen11 = add i64 %_10, 16
  %_12 = sub i64 %78, 16
  %gen13 = mul i64 %_12, 16
  %_14 = sub i64 %78, 16
  %gen15 = mul i64 %_14, 16
  %_16 = shl i64 %78, 16
  %79 = sdiv exact i64 %78, 16
  store i64 %79, i64* %68, align 8
  %80 = load i64, i64* %68, align 8
  %81 = icmp ne i64 %80, 0
  br label %originalBB

originalBB17alteredBB:                            ; preds = %originalBB17, %49
  br label %originalBB17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIP5PointILi2EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.130"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.130"* dereferenceable(8)) #0 comdat {
  %3 = load i32, i32* @x.889
  %4 = load i32, i32* @y.890
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.130"*, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.130"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.130"* %0, %"class.__gnu_cxx::__normal_iterator.130"** %11, align 8
  store %"class.__gnu_cxx::__normal_iterator.130"* %1, %"class.__gnu_cxx::__normal_iterator.130"** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator.130"*, %"class.__gnu_cxx::__normal_iterator.130"** %11, align 8
  %14 = call dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"* %13)
  %15 = load %class.Point.21*, %class.Point.21** %14, align 8
  %16 = load %"class.__gnu_cxx::__normal_iterator.130"*, %"class.__gnu_cxx::__normal_iterator.130"** %12, align 8
  %17 = call dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"* %16)
  %18 = load %class.Point.21*, %class.Point.21** %17, align 8
  %19 = ptrtoint %class.Point.21* %15 to i64
  %20 = ptrtoint %class.Point.21* %18 to i64
  %21 = sub i64 %19, %20
  %22 = sdiv exact i64 %21, 16
  %23 = load i32, i32* @x.889
  %24 = load i32, i32* @y.890
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %22

originalBBalteredBB:                              ; preds = %originalBB, %2
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.130"*, align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.130"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.130"* %0, %"class.__gnu_cxx::__normal_iterator.130"** %31, align 8
  store %"class.__gnu_cxx::__normal_iterator.130"* %1, %"class.__gnu_cxx::__normal_iterator.130"** %32, align 8
  %33 = load %"class.__gnu_cxx::__normal_iterator.130"*, %"class.__gnu_cxx::__normal_iterator.130"** %31, align 8
  %34 = call dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"* %33)
  %35 = load %class.Point.21*, %class.Point.21** %34, align 8
  %36 = load %"class.__gnu_cxx::__normal_iterator.130"*, %"class.__gnu_cxx::__normal_iterator.130"** %32, align 8
  %37 = call dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"* %36)
  %38 = load %class.Point.21*, %class.Point.21** %37, align 8
  %39 = ptrtoint %class.Point.21* %35 to i64
  %40 = ptrtoint %class.Point.21* %38 to i64
  %41 = sub i64 %39, %40
  %_ = sub i64 %41, 16
  %gen = mul i64 %_, 16
  %_1 = shl i64 %41, 16
  %_2 = shl i64 %41, 16
  %_3 = sub i64 %41, 16
  %gen4 = mul i64 %_3, 16
  %_5 = sub i64 %41, 16
  %gen6 = mul i64 %_5, 16
  %_7 = sub i64 %41, 16
  %gen8 = mul i64 %_7, 16
  %_9 = sub i64 %41, 16
  %gen10 = mul i64 %_9, 16
  %42 = sdiv exact i64 %41, 16
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZSt22__uninitialized_move_aIP5PointILi2EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point.21*, %class.Point.21*, %class.Point.21*, %"class.std::allocator.18"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Point.21*, align 8
  %6 = alloca %class.Point.21*, align 8
  %7 = alloca %class.Point.21*, align 8
  %8 = alloca %"class.std::allocator.18"*, align 8
  store %class.Point.21* %0, %class.Point.21** %5, align 8
  store %class.Point.21* %1, %class.Point.21** %6, align 8
  store %class.Point.21* %2, %class.Point.21** %7, align 8
  store %"class.std::allocator.18"* %3, %"class.std::allocator.18"** %8, align 8
  %9 = load %class.Point.21*, %class.Point.21** %5, align 8
  %10 = load %class.Point.21*, %class.Point.21** %6, align 8
  %11 = load %class.Point.21*, %class.Point.21** %7, align 8
  %12 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %8, align 8
  %13 = call %class.Point.21* @_ZSt22__uninitialized_copy_aIP5PointILi2EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Point.21* %9, %class.Point.21* %10, %class.Point.21* %11, %"class.std::allocator.18"* dereferenceable(1) %12)
  ret %class.Point.21* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.17"*, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %2, align 8
  %3 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %4 to %"class.std::allocator.18"*
  ret %"class.std::allocator.18"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZSt13copy_backwardIP5PointILi2EES2_ET0_T_S4_S3_(%class.Point.21*, %class.Point.21*, %class.Point.21*) #0 comdat {
  %4 = alloca %class.Point.21*, align 8
  %5 = alloca %class.Point.21*, align 8
  %6 = alloca %class.Point.21*, align 8
  store %class.Point.21* %0, %class.Point.21** %4, align 8
  store %class.Point.21* %1, %class.Point.21** %5, align 8
  store %class.Point.21* %2, %class.Point.21** %6, align 8
  %7 = load %class.Point.21*, %class.Point.21** %4, align 8
  %8 = call %class.Point.21* @_ZSt12__miter_baseIP5PointILi2EEET_S3_(%class.Point.21* %7)
  %9 = load %class.Point.21*, %class.Point.21** %5, align 8
  %10 = call %class.Point.21* @_ZSt12__miter_baseIP5PointILi2EEET_S3_(%class.Point.21* %9)
  %11 = load %class.Point.21*, %class.Point.21** %6, align 8
  %12 = call %class.Point.21* @_ZSt23__copy_move_backward_a2ILb0EP5PointILi2EES2_ET1_T0_S4_S3_(%class.Point.21* %8, %class.Point.21* %10, %class.Point.21* %11)
  ret %class.Point.21* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.Point.21** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.130"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.130"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.130"* %0, %"class.__gnu_cxx::__normal_iterator.130"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.130"*, %"class.__gnu_cxx::__normal_iterator.130"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.130", %"class.__gnu_cxx::__normal_iterator.130"* %3, i32 0, i32 0
  ret %class.Point.21** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIP5PointILi2EES1_EvT_S3_RKT0_(%class.Point.21*, %class.Point.21*, %class.Point.21* dereferenceable(16)) #0 comdat {
  %4 = alloca %class.Point.21*, align 8
  %5 = alloca %class.Point.21*, align 8
  %6 = alloca %class.Point.21*, align 8
  store %class.Point.21* %0, %class.Point.21** %4, align 8
  store %class.Point.21* %1, %class.Point.21** %5, align 8
  store %class.Point.21* %2, %class.Point.21** %6, align 8
  %7 = load %class.Point.21*, %class.Point.21** %4, align 8
  %8 = call %class.Point.21* @_ZSt12__niter_baseIP5PointILi2EEET_S3_(%class.Point.21* %7)
  %9 = load %class.Point.21*, %class.Point.21** %5, align 8
  %10 = call %class.Point.21* @_ZSt12__niter_baseIP5PointILi2EEET_S3_(%class.Point.21* %9)
  %11 = load %class.Point.21*, %class.Point.21** %6, align 8
  call void @_ZSt8__fill_aIP5PointILi2EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%class.Point.21* %8, %class.Point.21* %10, %class.Point.21* dereferenceable(16) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZSt24__uninitialized_fill_n_aIP5PointILi2EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Point.21*, i64, %class.Point.21* dereferenceable(16), %"class.std::allocator.18"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Point.21*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %class.Point.21*, align 8
  %8 = alloca %"class.std::allocator.18"*, align 8
  store %class.Point.21* %0, %class.Point.21** %5, align 8
  store i64 %1, i64* %6, align 8
  store %class.Point.21* %2, %class.Point.21** %7, align 8
  store %"class.std::allocator.18"* %3, %"class.std::allocator.18"** %8, align 8
  %9 = load %class.Point.21*, %class.Point.21** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %class.Point.21*, %class.Point.21** %7, align 8
  %12 = call %class.Point.21* @_ZSt20uninitialized_fill_nIP5PointILi2EEmS1_ET_S3_T0_RKT1_(%class.Point.21* %9, i64 %10, %class.Point.21* dereferenceable(16) %11)
  ret %class.Point.21* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.16"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.16"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.16"*, %"class.std::vector.16"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE8max_sizeEv(%"class.std::vector.16"* %9)
  %11 = call i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE4sizeEv(%"class.std::vector.16"* %9)
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #15
  unreachable

; <label>:17:                                     ; preds = %3
  %18 = call i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE4sizeEv(%"class.std::vector.16"* %9)
  %19 = call i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE4sizeEv(%"class.std::vector.16"* %9)
  store i64 %19, i64* %8, align 8
  %20 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %18, %21
  store i64 %22, i64* %7, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE4sizeEv(%"class.std::vector.16"* %9)
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %46, label %26

; <label>:26:                                     ; preds = %17
  %27 = load i32, i32* @x.903
  %28 = load i32, i32* @y.904
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %26, %originalBBalteredBB
  %35 = load i64, i64* %7, align 8
  %36 = call i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE8max_sizeEv(%"class.std::vector.16"* %9)
  %37 = icmp ugt i64 %35, %36
  %38 = load i32, i32* @x.903
  %39 = load i32, i32* @y.904
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %46, label %64

; <label>:46:                                     ; preds = %originalBBpart2, %17
  %47 = load i32, i32* @x.903
  %48 = load i32, i32* @y.904
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %46, %originalBB1alteredBB
  %55 = call i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE8max_sizeEv(%"class.std::vector.16"* %9)
  %56 = load i32, i32* @x.903
  %57 = load i32, i32* @y.904
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %82

; <label>:64:                                     ; preds = %originalBBpart2
  %65 = load i32, i32* @x.903
  %66 = load i32, i32* @y.904
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %64, %originalBB6alteredBB
  %73 = load i64, i64* %7, align 8
  %74 = load i32, i32* @x.903
  %75 = load i32, i32* @y.904
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %82

; <label>:82:                                     ; preds = %originalBBpart28, %originalBBpart24
  %83 = phi i64 [ %55, %originalBBpart24 ], [ %73, %originalBBpart28 ]
  ret i64 %83

originalBBalteredBB:                              ; preds = %originalBB, %26
  %84 = load i64, i64* %7, align 8
  %85 = call i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE8max_sizeEv(%"class.std::vector.16"* %9)
  %86 = icmp ugt i64 %84, %85
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %46
  %87 = call i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE8max_sizeEv(%"class.std::vector.16"* %9)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  %88 = load i64, i64* %7, align 8
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZNSt6vectorI5PointILi2EESaIS1_EE5beginEv(%"class.std::vector.16"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.130", align 8
  %3 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %3, align 8
  %4 = load %"class.std::vector.16"*, %"class.std::vector.16"** %3, align 8
  %5 = bitcast %"class.std::vector.16"* %4 to %"struct.std::_Vector_base.17"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data"* %7, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.130"* %2, %class.Point.21** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.130", %"class.__gnu_cxx::__normal_iterator.130"* %2, i32 0, i32 0
  %10 = load %class.Point.21*, %class.Point.21** %9, align 8
  ret %class.Point.21* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.17"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.17"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %29

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.907
  %10 = load i32, i32* @y.908
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %17 to %"class.std::allocator.18"*
  %19 = load i64, i64* %4, align 8
  %20 = call %class.Point.21* @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi2EEES2_E8allocateERS3_m(%"class.std::allocator.18"* dereferenceable(1) %18, i64 %19)
  %21 = load i32, i32* @x.907
  %22 = load i32, i32* @y.908
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:29:                                     ; preds = %2
  br label %30

; <label>:30:                                     ; preds = %29, %originalBBpart2
  %31 = phi %class.Point.21* [ %20, %originalBBpart2 ], [ null, %29 ]
  ret %class.Point.21* %31

originalBBalteredBB:                              ; preds = %originalBB, %8
  %32 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %32 to %"class.std::allocator.18"*
  %34 = load i64, i64* %4, align 8
  %35 = call %class.Point.21* @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi2EEES2_E8allocateERS3_m(%"class.std::allocator.18"* dereferenceable(1) %33, i64 %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi2EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point.21*, %class.Point.21*, %class.Point.21*, %"class.std::allocator.18"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.909
  %6 = load i32, i32* @y.910
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.Point.21*, align 8
  %14 = alloca %class.Point.21*, align 8
  %15 = alloca %class.Point.21*, align 8
  %16 = alloca %"class.std::allocator.18"*, align 8
  store %class.Point.21* %0, %class.Point.21** %13, align 8
  store %class.Point.21* %1, %class.Point.21** %14, align 8
  store %class.Point.21* %2, %class.Point.21** %15, align 8
  store %"class.std::allocator.18"* %3, %"class.std::allocator.18"** %16, align 8
  %17 = load %class.Point.21*, %class.Point.21** %13, align 8
  %18 = load %class.Point.21*, %class.Point.21** %14, align 8
  %19 = load %class.Point.21*, %class.Point.21** %15, align 8
  %20 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %16, align 8
  %21 = call %class.Point.21* @_ZSt22__uninitialized_copy_aIP5PointILi2EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Point.21* %17, %class.Point.21* %18, %class.Point.21* %19, %"class.std::allocator.18"* dereferenceable(1) %20)
  %22 = load i32, i32* @x.909
  %23 = load i32, i32* @y.910
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point.21* %21

originalBBalteredBB:                              ; preds = %originalBB, %4
  %30 = alloca %class.Point.21*, align 8
  %31 = alloca %class.Point.21*, align 8
  %32 = alloca %class.Point.21*, align 8
  %33 = alloca %"class.std::allocator.18"*, align 8
  store %class.Point.21* %0, %class.Point.21** %30, align 8
  store %class.Point.21* %1, %class.Point.21** %31, align 8
  store %class.Point.21* %2, %class.Point.21** %32, align 8
  store %"class.std::allocator.18"* %3, %"class.std::allocator.18"** %33, align 8
  %34 = load %class.Point.21*, %class.Point.21** %30, align 8
  %35 = load %class.Point.21*, %class.Point.21** %31, align 8
  %36 = load %class.Point.21*, %class.Point.21** %32, align 8
  %37 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %33, align 8
  %38 = call %class.Point.21* @_ZSt22__uninitialized_copy_aIP5PointILi2EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Point.21* %34, %class.Point.21* %35, %class.Point.21* %36, %"class.std::allocator.18"* dereferenceable(1) %37)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP5PointILi2EES1_EvT_S3_RSaIT0_E(%class.Point.21*, %class.Point.21*, %"class.std::allocator.18"* dereferenceable(1)) #0 comdat {
  %4 = alloca %class.Point.21*, align 8
  %5 = alloca %class.Point.21*, align 8
  %6 = alloca %"class.std::allocator.18"*, align 8
  store %class.Point.21* %0, %class.Point.21** %4, align 8
  store %class.Point.21* %1, %class.Point.21** %5, align 8
  store %"class.std::allocator.18"* %2, %"class.std::allocator.18"** %6, align 8
  %7 = load %class.Point.21*, %class.Point.21** %4, align 8
  %8 = load %class.Point.21*, %class.Point.21** %5, align 8
  call void @_ZSt8_DestroyIP5PointILi2EEEvT_S3_(%class.Point.21* %7, %class.Point.21* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI5PointILi2EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.17"*, %class.Point.21*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.913
  %5 = load i32, i32* @y.914
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.17"*, align 8
  %13 = alloca %class.Point.21*, align 8
  %14 = alloca i64, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %12, align 8
  store %class.Point.21* %1, %class.Point.21** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %12, align 8
  %16 = load %class.Point.21*, %class.Point.21** %13, align 8
  %17 = icmp ne %class.Point.21* %16, null
  %18 = load i32, i32* @x.913
  %19 = load i32, i32* @y.914
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %47

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* @x.913
  %28 = load i32, i32* @y.914
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %15, i32 0, i32 0
  %36 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %35 to %"class.std::allocator.18"*
  %37 = load %class.Point.21*, %class.Point.21** %13, align 8
  %38 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi2EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.18"* dereferenceable(1) %36, %class.Point.21* %37, i64 %38)
  %39 = load i32, i32* @x.913
  %40 = load i32, i32* @y.914
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %47

; <label>:47:                                     ; preds = %originalBBpart24, %originalBBpart2
  %48 = load i32, i32* @x.913
  %49 = load i32, i32* @y.914
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i32, i32* @x.913
  %57 = load i32, i32* @y.914
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %64 = alloca %"struct.std::_Vector_base.17"*, align 8
  %65 = alloca %class.Point.21*, align 8
  %66 = alloca i64, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %64, align 8
  store %class.Point.21* %1, %class.Point.21** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %64, align 8
  %68 = load %class.Point.21*, %class.Point.21** %65, align 8
  %69 = icmp ne %class.Point.21* %68, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %70 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %15, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %70 to %"class.std::allocator.18"*
  %72 = load %class.Point.21*, %class.Point.21** %13, align 8
  %73 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi2EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.18"* dereferenceable(1) %71, %class.Point.21* %72, i64 %73)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZSt22__uninitialized_copy_aIP5PointILi2EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Point.21*, %class.Point.21*, %class.Point.21*, %"class.std::allocator.18"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.915
  %6 = load i32, i32* @y.916
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.Point.21*, align 8
  %14 = alloca %class.Point.21*, align 8
  %15 = alloca %class.Point.21*, align 8
  %16 = alloca %"class.std::allocator.18"*, align 8
  store %class.Point.21* %0, %class.Point.21** %13, align 8
  store %class.Point.21* %1, %class.Point.21** %14, align 8
  store %class.Point.21* %2, %class.Point.21** %15, align 8
  store %"class.std::allocator.18"* %3, %"class.std::allocator.18"** %16, align 8
  %17 = load %class.Point.21*, %class.Point.21** %13, align 8
  %18 = load %class.Point.21*, %class.Point.21** %14, align 8
  %19 = load %class.Point.21*, %class.Point.21** %15, align 8
  %20 = call %class.Point.21* @_ZSt18uninitialized_copyIP5PointILi2EES2_ET0_T_S4_S3_(%class.Point.21* %17, %class.Point.21* %18, %class.Point.21* %19)
  %21 = load i32, i32* @x.915
  %22 = load i32, i32* @y.916
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point.21* %20

originalBBalteredBB:                              ; preds = %originalBB, %4
  %29 = alloca %class.Point.21*, align 8
  %30 = alloca %class.Point.21*, align 8
  %31 = alloca %class.Point.21*, align 8
  %32 = alloca %"class.std::allocator.18"*, align 8
  store %class.Point.21* %0, %class.Point.21** %29, align 8
  store %class.Point.21* %1, %class.Point.21** %30, align 8
  store %class.Point.21* %2, %class.Point.21** %31, align 8
  store %"class.std::allocator.18"* %3, %"class.std::allocator.18"** %32, align 8
  %33 = load %class.Point.21*, %class.Point.21** %29, align 8
  %34 = load %class.Point.21*, %class.Point.21** %30, align 8
  %35 = load %class.Point.21*, %class.Point.21** %31, align 8
  %36 = call %class.Point.21* @_ZSt18uninitialized_copyIP5PointILi2EES2_ET0_T_S4_S3_(%class.Point.21* %33, %class.Point.21* %34, %class.Point.21* %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZSt18uninitialized_copyIP5PointILi2EES2_ET0_T_S4_S3_(%class.Point.21*, %class.Point.21*, %class.Point.21*) #0 comdat {
  %4 = alloca %class.Point.21*, align 8
  %5 = alloca %class.Point.21*, align 8
  %6 = alloca %class.Point.21*, align 8
  %7 = alloca i8, align 1
  store %class.Point.21* %0, %class.Point.21** %4, align 8
  store %class.Point.21* %1, %class.Point.21** %5, align 8
  store %class.Point.21* %2, %class.Point.21** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %class.Point.21*, %class.Point.21** %4, align 8
  %9 = load %class.Point.21*, %class.Point.21** %5, align 8
  %10 = load %class.Point.21*, %class.Point.21** %6, align 8
  %11 = call %class.Point.21* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5PointILi2EES4_EET0_T_S6_S5_(%class.Point.21* %8, %class.Point.21* %9, %class.Point.21* %10)
  ret %class.Point.21* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5PointILi2EES4_EET0_T_S6_S5_(%class.Point.21*, %class.Point.21*, %class.Point.21*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.919
  %5 = load i32, i32* @y.920
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Point.21*, align 8
  %13 = alloca %class.Point.21*, align 8
  %14 = alloca %class.Point.21*, align 8
  %15 = alloca %class.Point.21*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %class.Point.21* %0, %class.Point.21** %12, align 8
  store %class.Point.21* %1, %class.Point.21** %13, align 8
  store %class.Point.21* %2, %class.Point.21** %14, align 8
  %18 = load %class.Point.21*, %class.Point.21** %14, align 8
  store %class.Point.21* %18, %class.Point.21** %15, align 8
  %19 = load i32, i32* @x.919
  %20 = load i32, i32* @y.920
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %originalBBpart216, %originalBBpart2
  %28 = load %class.Point.21*, %class.Point.21** %12, align 8
  %29 = load %class.Point.21*, %class.Point.21** %13, align 8
  %30 = icmp ne %class.Point.21* %28, %29
  br i1 %30, label %31, label %132

; <label>:31:                                     ; preds = %27
  %32 = load i32, i32* @x.919
  %33 = load i32, i32* @y.920
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load %class.Point.21*, %class.Point.21** %15, align 8
  %41 = load i32, i32* @x.919
  %42 = load i32, i32* @y.920
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %49 = invoke %class.Point.21* @_ZSt11__addressofI5PointILi2EEEPT_RS2_(%class.Point.21* dereferenceable(16) %40)
          to label %50 unwind label %106

; <label>:50:                                     ; preds = %originalBBpart24
  %51 = load i32, i32* @x.919
  %52 = load i32, i32* @y.920
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  %59 = load %class.Point.21*, %class.Point.21** %12, align 8
  %60 = load i32, i32* @x.919
  %61 = load i32, i32* @y.920
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZSt10_ConstructI5PointILi2EES1_EvPT_RKT0_(%class.Point.21* %49, %class.Point.21* dereferenceable(16) %59)
          to label %68 unwind label %106

; <label>:68:                                     ; preds = %originalBBpart28
  %69 = load i32, i32* @x.919
  %70 = load i32, i32* @y.920
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  %77 = load i32, i32* @x.919
  %78 = load i32, i32* @y.920
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %85

; <label>:85:                                     ; preds = %originalBBpart212
  %86 = load i32, i32* @x.919
  %87 = load i32, i32* @y.920
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %85, %originalBB14alteredBB
  %94 = load %class.Point.21*, %class.Point.21** %12, align 8
  %95 = getelementptr inbounds %class.Point.21, %class.Point.21* %94, i32 1
  store %class.Point.21* %95, %class.Point.21** %12, align 8
  %96 = load %class.Point.21*, %class.Point.21** %15, align 8
  %97 = getelementptr inbounds %class.Point.21, %class.Point.21* %96, i32 1
  store %class.Point.21* %97, %class.Point.21** %15, align 8
  %98 = load i32, i32* @x.919
  %99 = load i32, i32* @y.920
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %27

; <label>:106:                                    ; preds = %originalBBpart28, %originalBBpart24
  %107 = load i32, i32* @x.919
  %108 = load i32, i32* @y.920
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %106, %originalBB18alteredBB
  %115 = landingpad { i8*, i32 }
          catch i8* null
  %116 = extractvalue { i8*, i32 } %115, 0
  store i8* %116, i8** %16, align 8
  %117 = extractvalue { i8*, i32 } %115, 1
  store i32 %117, i32* %17, align 4
  %118 = load i32, i32* @x.919
  %119 = load i32, i32* @y.920
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %126

; <label>:126:                                    ; preds = %originalBBpart220
  %127 = load i8*, i8** %16, align 8
  %128 = call i8* @__cxa_begin_catch(i8* %127) #12
  %129 = load %class.Point.21*, %class.Point.21** %14, align 8
  %130 = load %class.Point.21*, %class.Point.21** %15, align 8
  invoke void @_ZSt8_DestroyIP5PointILi2EEEvT_S3_(%class.Point.21* %129, %class.Point.21* %130)
          to label %131 unwind label %134

; <label>:131:                                    ; preds = %126
  invoke void @__cxa_rethrow() #15
          to label %148 unwind label %134

; <label>:132:                                    ; preds = %27
  %133 = load %class.Point.21*, %class.Point.21** %15, align 8
  ret %class.Point.21* %133

; <label>:134:                                    ; preds = %131, %126
  %135 = landingpad { i8*, i32 }
          cleanup
  %136 = extractvalue { i8*, i32 } %135, 0
  store i8* %136, i8** %16, align 8
  %137 = extractvalue { i8*, i32 } %135, 1
  store i32 %137, i32* %17, align 4
  invoke void @__cxa_end_catch()
          to label %138 unwind label %145

; <label>:138:                                    ; preds = %134
  br label %140
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:140:                                    ; preds = %138
  %141 = load i8*, i8** %16, align 8
  %142 = load i32, i32* %17, align 4
  %143 = insertvalue { i8*, i32 } undef, i8* %141, 0
  %144 = insertvalue { i8*, i32 } %143, i32 %142, 1
  resume { i8*, i32 } %144

; <label>:145:                                    ; preds = %134
  %146 = landingpad { i8*, i32 }
          catch i8* null
  %147 = extractvalue { i8*, i32 } %146, 0
  call void @__clang_call_terminate(i8* %147) #10
  unreachable

; <label>:148:                                    ; preds = %131
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %149 = alloca %class.Point.21*, align 8
  %150 = alloca %class.Point.21*, align 8
  %151 = alloca %class.Point.21*, align 8
  %152 = alloca %class.Point.21*, align 8
  %153 = alloca i8*
  %154 = alloca i32
  store %class.Point.21* %0, %class.Point.21** %149, align 8
  store %class.Point.21* %1, %class.Point.21** %150, align 8
  store %class.Point.21* %2, %class.Point.21** %151, align 8
  %155 = load %class.Point.21*, %class.Point.21** %151, align 8
  store %class.Point.21* %155, %class.Point.21** %152, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %156 = load %class.Point.21*, %class.Point.21** %15, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  %157 = load %class.Point.21*, %class.Point.21** %12, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %85
  %158 = load %class.Point.21*, %class.Point.21** %12, align 8
  %159 = getelementptr inbounds %class.Point.21, %class.Point.21* %158, i32 1
  store %class.Point.21* %159, %class.Point.21** %12, align 8
  %160 = load %class.Point.21*, %class.Point.21** %15, align 8
  %161 = getelementptr inbounds %class.Point.21, %class.Point.21* %160, i32 1
  store %class.Point.21* %161, %class.Point.21** %15, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %106
  %162 = landingpad { i8*, i32 }
          catch i8* null
  %163 = extractvalue { i8*, i32 } %162, 0
  store i8* %163, i8** %16, align 8
  %164 = extractvalue { i8*, i32 } %162, 1
  store i32 %164, i32* %17, align 4
  br label %originalBB18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructI5PointILi2EES1_EvPT_RKT0_(%class.Point.21*, %class.Point.21* dereferenceable(16)) #0 comdat {
  %3 = alloca %class.Point.21*, align 8
  %4 = alloca %class.Point.21*, align 8
  store %class.Point.21* %0, %class.Point.21** %3, align 8
  store %class.Point.21* %1, %class.Point.21** %4, align 8
  %5 = load %class.Point.21*, %class.Point.21** %3, align 8
  %6 = bitcast %class.Point.21* %5 to i8*
  %7 = bitcast i8* %6 to %class.Point.21*
  %8 = load %class.Point.21*, %class.Point.21** %4, align 8
  call void @_ZN5PointILi2EEC2ERKS0_(%class.Point.21* %7, %class.Point.21* dereferenceable(16) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point.21* @_ZSt11__addressofI5PointILi2EEEPT_RS2_(%class.Point.21* dereferenceable(16)) #1 comdat {
  %2 = alloca %class.Point.21*, align 8
  store %class.Point.21* %0, %class.Point.21** %2, align 8
  %3 = load %class.Point.21*, %class.Point.21** %2, align 8
  ret %class.Point.21* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP5PointILi2EEEvT_S3_(%class.Point.21*, %class.Point.21*) #0 comdat {
  %3 = alloca %class.Point.21*, align 8
  %4 = alloca %class.Point.21*, align 8
  store %class.Point.21* %0, %class.Point.21** %3, align 8
  store %class.Point.21* %1, %class.Point.21** %4, align 8
  %5 = load %class.Point.21*, %class.Point.21** %3, align 8
  %6 = load %class.Point.21*, %class.Point.21** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP5PointILi2EEEEvT_S5_(%class.Point.21* %5, %class.Point.21* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP5PointILi2EEEEvT_S5_(%class.Point.21*, %class.Point.21*) #1 comdat align 2 {
  %3 = alloca %class.Point.21*, align 8
  %4 = alloca %class.Point.21*, align 8
  store %class.Point.21* %0, %class.Point.21** %3, align 8
  store %class.Point.21* %1, %class.Point.21** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZSt23__copy_move_backward_a2ILb0EP5PointILi2EES2_ET1_T0_S4_S3_(%class.Point.21*, %class.Point.21*, %class.Point.21*) #0 comdat {
  %4 = alloca %class.Point.21*, align 8
  %5 = alloca %class.Point.21*, align 8
  %6 = alloca %class.Point.21*, align 8
  store %class.Point.21* %0, %class.Point.21** %4, align 8
  store %class.Point.21* %1, %class.Point.21** %5, align 8
  store %class.Point.21* %2, %class.Point.21** %6, align 8
  %7 = load %class.Point.21*, %class.Point.21** %4, align 8
  %8 = call %class.Point.21* @_ZSt12__niter_baseIP5PointILi2EEET_S3_(%class.Point.21* %7)
  %9 = load %class.Point.21*, %class.Point.21** %5, align 8
  %10 = call %class.Point.21* @_ZSt12__niter_baseIP5PointILi2EEET_S3_(%class.Point.21* %9)
  %11 = load %class.Point.21*, %class.Point.21** %6, align 8
  %12 = call %class.Point.21* @_ZSt12__niter_baseIP5PointILi2EEET_S3_(%class.Point.21* %11)
  %13 = call %class.Point.21* @_ZSt22__copy_move_backward_aILb0EP5PointILi2EES2_ET1_T0_S4_S3_(%class.Point.21* %8, %class.Point.21* %10, %class.Point.21* %12)
  %14 = call %class.Point.21* @_ZSt12__niter_wrapIP5PointILi2EEET_RKS3_S3_(%class.Point.21** dereferenceable(8) %6, %class.Point.21* %13)
  ret %class.Point.21* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point.21* @_ZSt12__miter_baseIP5PointILi2EEET_S3_(%class.Point.21*) #1 comdat {
  %2 = load i32, i32* @x.931
  %3 = load i32, i32* @y.932
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Point.21*, align 8
  store %class.Point.21* %0, %class.Point.21** %10, align 8
  %11 = load %class.Point.21*, %class.Point.21** %10, align 8
  %12 = load i32, i32* @x.931
  %13 = load i32, i32* @y.932
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point.21* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %class.Point.21*, align 8
  store %class.Point.21* %0, %class.Point.21** %20, align 8
  %21 = load %class.Point.21*, %class.Point.21** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point.21* @_ZSt12__niter_wrapIP5PointILi2EEET_RKS3_S3_(%class.Point.21** dereferenceable(8), %class.Point.21*) #1 comdat {
  %3 = alloca %class.Point.21**, align 8
  %4 = alloca %class.Point.21*, align 8
  store %class.Point.21** %0, %class.Point.21*** %3, align 8
  store %class.Point.21* %1, %class.Point.21** %4, align 8
  %5 = load %class.Point.21*, %class.Point.21** %4, align 8
  ret %class.Point.21* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZSt22__copy_move_backward_aILb0EP5PointILi2EES2_ET1_T0_S4_S3_(%class.Point.21*, %class.Point.21*, %class.Point.21*) #0 comdat {
  %4 = alloca %class.Point.21*, align 8
  %5 = alloca %class.Point.21*, align 8
  %6 = alloca %class.Point.21*, align 8
  %7 = alloca i8, align 1
  store %class.Point.21* %0, %class.Point.21** %4, align 8
  store %class.Point.21* %1, %class.Point.21** %5, align 8
  store %class.Point.21* %2, %class.Point.21** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %class.Point.21*, %class.Point.21** %4, align 8
  %9 = load %class.Point.21*, %class.Point.21** %5, align 8
  %10 = load %class.Point.21*, %class.Point.21** %6, align 8
  %11 = call %class.Point.21* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5PointILi2EES5_EET0_T_S7_S6_(%class.Point.21* %8, %class.Point.21* %9, %class.Point.21* %10)
  ret %class.Point.21* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point.21* @_ZSt12__niter_baseIP5PointILi2EEET_S3_(%class.Point.21*) #1 comdat {
  %2 = alloca %class.Point.21*, align 8
  store %class.Point.21* %0, %class.Point.21** %2, align 8
  %3 = load %class.Point.21*, %class.Point.21** %2, align 8
  ret %class.Point.21* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5PointILi2EES5_EET0_T_S7_S6_(%class.Point.21*, %class.Point.21*, %class.Point.21*) #0 comdat align 2 {
  %4 = alloca %class.Point.21*, align 8
  %5 = alloca %class.Point.21*, align 8
  %6 = alloca %class.Point.21*, align 8
  %7 = alloca i64, align 8
  store %class.Point.21* %0, %class.Point.21** %4, align 8
  store %class.Point.21* %1, %class.Point.21** %5, align 8
  store %class.Point.21* %2, %class.Point.21** %6, align 8
  %8 = load %class.Point.21*, %class.Point.21** %5, align 8
  %9 = load %class.Point.21*, %class.Point.21** %4, align 8
  %10 = ptrtoint %class.Point.21* %8 to i64
  %11 = ptrtoint %class.Point.21* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 16
  store i64 %13, i64* %7, align 8
  br label %14

; <label>:14:                                     ; preds = %23, %3
  %15 = load i64, i64* %7, align 8
  %16 = icmp sgt i64 %15, 0
  br i1 %16, label %17, label %26

; <label>:17:                                     ; preds = %14
  %18 = load %class.Point.21*, %class.Point.21** %5, align 8
  %19 = getelementptr inbounds %class.Point.21, %class.Point.21* %18, i32 -1
  store %class.Point.21* %19, %class.Point.21** %5, align 8
  %20 = load %class.Point.21*, %class.Point.21** %6, align 8
  %21 = getelementptr inbounds %class.Point.21, %class.Point.21* %20, i32 -1
  store %class.Point.21* %21, %class.Point.21** %6, align 8
  %22 = call dereferenceable(16) %class.Point.21* @_ZN5PointILi2EEaSERKS0_(%class.Point.21* %21, %class.Point.21* dereferenceable(16) %19)
  br label %23

; <label>:23:                                     ; preds = %17
  %24 = load i64, i64* %7, align 8
  %25 = add nsw i64 %24, -1
  store i64 %25, i64* %7, align 8
  br label %14

; <label>:26:                                     ; preds = %14
  %27 = load %class.Point.21*, %class.Point.21** %6, align 8
  ret %class.Point.21* %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIP5PointILi2EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%class.Point.21*, %class.Point.21*, %class.Point.21* dereferenceable(16)) #0 comdat {
  %4 = alloca %class.Point.21*, align 8
  %5 = alloca %class.Point.21*, align 8
  %6 = alloca %class.Point.21*, align 8
  store %class.Point.21* %0, %class.Point.21** %4, align 8
  store %class.Point.21* %1, %class.Point.21** %5, align 8
  store %class.Point.21* %2, %class.Point.21** %6, align 8
  br label %7

; <label>:7:                                      ; preds = %originalBBpart24, %3
  %8 = load i32, i32* @x.941
  %9 = load i32, i32* @y.942
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load %class.Point.21*, %class.Point.21** %4, align 8
  %17 = load %class.Point.21*, %class.Point.21** %5, align 8
  %18 = icmp ne %class.Point.21* %16, %17
  %19 = load i32, i32* @x.941
  %20 = load i32, i32* @y.942
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %50

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load %class.Point.21*, %class.Point.21** %6, align 8
  %29 = load %class.Point.21*, %class.Point.21** %4, align 8
  %30 = call dereferenceable(16) %class.Point.21* @_ZN5PointILi2EEaSERKS0_(%class.Point.21* %29, %class.Point.21* dereferenceable(16) %28)
  br label %31

; <label>:31:                                     ; preds = %27
  %32 = load i32, i32* @x.941
  %33 = load i32, i32* @y.942
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load %class.Point.21*, %class.Point.21** %4, align 8
  %41 = getelementptr inbounds %class.Point.21, %class.Point.21* %40, i32 1
  store %class.Point.21* %41, %class.Point.21** %4, align 8
  %42 = load i32, i32* @x.941
  %43 = load i32, i32* @y.942
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %7

; <label>:50:                                     ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %7
  %51 = load %class.Point.21*, %class.Point.21** %4, align 8
  %52 = load %class.Point.21*, %class.Point.21** %5, align 8
  %53 = icmp ne %class.Point.21* %51, %52
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %54 = load %class.Point.21*, %class.Point.21** %4, align 8
  %55 = getelementptr inbounds %class.Point.21, %class.Point.21* %54, i32 1
  store %class.Point.21* %55, %class.Point.21** %4, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZSt20uninitialized_fill_nIP5PointILi2EEmS1_ET_S3_T0_RKT1_(%class.Point.21*, i64, %class.Point.21* dereferenceable(16)) #0 comdat {
  %4 = alloca %class.Point.21*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Point.21*, align 8
  %7 = alloca i8, align 1
  store %class.Point.21* %0, %class.Point.21** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.Point.21* %2, %class.Point.21** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %class.Point.21*, %class.Point.21** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %class.Point.21*, %class.Point.21** %6, align 8
  %11 = call %class.Point.21* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5PointILi2EEmS3_EET_S5_T0_RKT1_(%class.Point.21* %8, i64 %9, %class.Point.21* dereferenceable(16) %10)
  ret %class.Point.21* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5PointILi2EEmS3_EET_S5_T0_RKT1_(%class.Point.21*, i64, %class.Point.21* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Point.21*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Point.21*, align 8
  %7 = alloca %class.Point.21*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %class.Point.21* %0, %class.Point.21** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.Point.21* %2, %class.Point.21** %6, align 8
  %10 = load %class.Point.21*, %class.Point.21** %4, align 8
  store %class.Point.21* %10, %class.Point.21** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %68, %3
  %12 = load i32, i32* @x.945
  %13 = load i32, i32* @y.946
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i64, i64* %5, align 8
  %21 = icmp ugt i64 %20, 0
  %22 = load i32, i32* @x.945
  %23 = load i32, i32* @y.946
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %115

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x.945
  %32 = load i32, i32* @y.946
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load %class.Point.21*, %class.Point.21** %7, align 8
  %40 = load i32, i32* @x.945
  %41 = load i32, i32* @y.946
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %48 = invoke %class.Point.21* @_ZSt11__addressofI5PointILi2EEEPT_RS2_(%class.Point.21* dereferenceable(16) %39)
          to label %49 unwind label %73

; <label>:49:                                     ; preds = %originalBBpart24
  %50 = load i32, i32* @x.945
  %51 = load i32, i32* @y.946
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load %class.Point.21*, %class.Point.21** %6, align 8
  %59 = load i32, i32* @x.945
  %60 = load i32, i32* @y.946
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZSt10_ConstructI5PointILi2EES1_EvPT_RKT0_(%class.Point.21* %48, %class.Point.21* dereferenceable(16) %58)
          to label %67 unwind label %73

; <label>:67:                                     ; preds = %originalBBpart28
  br label %68

; <label>:68:                                     ; preds = %67
  %69 = load i64, i64* %5, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %5, align 8
  %71 = load %class.Point.21*, %class.Point.21** %7, align 8
  %72 = getelementptr inbounds %class.Point.21, %class.Point.21* %71, i32 1
  store %class.Point.21* %72, %class.Point.21** %7, align 8
  br label %11

; <label>:73:                                     ; preds = %originalBBpart28, %originalBBpart24
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %8, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %9, align 4
  br label %77

; <label>:77:                                     ; preds = %73
  %78 = load i32, i32* @x.945
  %79 = load i32, i32* @y.946
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %77, %originalBB10alteredBB
  %86 = load i8*, i8** %8, align 8
  %87 = call i8* @__cxa_begin_catch(i8* %86) #12
  %88 = load %class.Point.21*, %class.Point.21** %4, align 8
  %89 = load %class.Point.21*, %class.Point.21** %7, align 8
  %90 = load i32, i32* @x.945
  %91 = load i32, i32* @y.946
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZSt8_DestroyIP5PointILi2EEEvT_S3_(%class.Point.21* %88, %class.Point.21* %89)
          to label %98 unwind label %117

; <label>:98:                                     ; preds = %originalBBpart212
  %99 = load i32, i32* @x.945
  %100 = load i32, i32* @y.946
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %98, %originalBB14alteredBB
  %107 = load i32, i32* @x.945
  %108 = load i32, i32* @y.946
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @__cxa_rethrow() #15
          to label %131 unwind label %117

; <label>:115:                                    ; preds = %originalBBpart2
  %116 = load %class.Point.21*, %class.Point.21** %7, align 8
  ret %class.Point.21* %116

; <label>:117:                                    ; preds = %originalBBpart216, %originalBBpart212
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %8, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %121 unwind label %128

; <label>:121:                                    ; preds = %117
  br label %123
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:123:                                    ; preds = %121
  %124 = load i8*, i8** %8, align 8
  %125 = load i32, i32* %9, align 4
  %126 = insertvalue { i8*, i32 } undef, i8* %124, 0
  %127 = insertvalue { i8*, i32 } %126, i32 %125, 1
  resume { i8*, i32 } %127

; <label>:128:                                    ; preds = %117
  %129 = landingpad { i8*, i32 }
          catch i8* null
  %130 = extractvalue { i8*, i32 } %129, 0
  call void @__clang_call_terminate(i8* %130) #10
  unreachable

; <label>:131:                                    ; preds = %originalBBpart216
  %132 = load i32, i32* @x.945
  %133 = load i32, i32* @y.946
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %131, %originalBB18alteredBB
  %140 = load i32, i32* @x.945
  %141 = load i32, i32* @y.946
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %11
  %148 = load i64, i64* %5, align 8
  %149 = icmp ugt i64 %148, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %150 = load %class.Point.21*, %class.Point.21** %7, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %151 = load %class.Point.21*, %class.Point.21** %6, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %77
  %152 = load i8*, i8** %8, align 8
  %153 = call i8* @__cxa_begin_catch(i8* %152) #12
  %154 = load %class.Point.21*, %class.Point.21** %4, align 8
  %155 = load %class.Point.21*, %class.Point.21** %7, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %98
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %131
  br label %originalBB18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI5PointILi2EESaIS1_EE8max_sizeEv(%"class.std::vector.16"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %2, align 8
  %3 = load %"class.std::vector.16"*, %"class.std::vector.16"** %2, align 8
  %4 = bitcast %"class.std::vector.16"* %3 to %"struct.std::_Vector_base.17"*
  %5 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNKSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %4)
  %6 = call i64 @_ZNSt6vectorI5PointILi2EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.18"* dereferenceable(1) %5)
  ret i64 %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorI5PointILi2EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.18"* dereferenceable(1)) #0 comdat align 2 {
  %2 = load i32, i32* @x.949
  %3 = load i32, i32* @y.950
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.18"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %10, align 8
  store i64 576460752303423487, i64* %11, align 8
  %13 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %10, align 8
  %14 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi2EEES2_E8max_sizeERKS3_(%"class.std::allocator.18"* dereferenceable(1) %13)
  store i64 %14, i64* %12, align 8
  %15 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %12)
  %16 = load i64, i64* %15, align 8
  %17 = load i32, i32* @x.949
  %18 = load i32, i32* @y.950
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %"class.std::allocator.18"*, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %25, align 8
  store i64 576460752303423487, i64* %26, align 8
  %28 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %25, align 8
  %29 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi2EEES2_E8max_sizeERKS3_(%"class.std::allocator.18"* dereferenceable(1) %28)
  store i64 %29, i64* %27, align 8
  %30 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %26, i64* dereferenceable(8) %27)
  %31 = load i64, i64* %30, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.18"* @_ZNKSt12_Vector_baseI5PointILi2EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.17"*, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %2, align 8
  %3 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl"* %4 to %"class.std::allocator.18"*
  ret %"class.std::allocator.18"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi2EEES2_E8max_sizeERKS3_(%"class.std::allocator.18"* dereferenceable(1)) #1 comdat align 2 {
  %2 = load i32, i32* @x.953
  %3 = load i32, i32* @y.954
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.18"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %10, align 8
  %11 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %10, align 8
  %12 = bitcast %"class.std::allocator.18"* %11 to %"class.__gnu_cxx::new_allocator.19"*
  %13 = call i64 @_ZNK9__gnu_cxx13new_allocatorI5PointILi2EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.19"* %12) #12
  %14 = load i32, i32* @x.953
  %15 = load i32, i32* @y.954
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.std::allocator.18"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %22, align 8
  %23 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %22, align 8
  %24 = bitcast %"class.std::allocator.18"* %23 to %"class.__gnu_cxx::new_allocator.19"*
  %25 = call i64 @_ZNK9__gnu_cxx13new_allocatorI5PointILi2EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.19"* %24) #12
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI5PointILi2EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.19"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %2, align 8
  ret i64 576460752303423487
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi2EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.130"*, %class.Point.21** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.957
  %4 = load i32, i32* @y.958
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.130"*, align 8
  %12 = alloca %class.Point.21**, align 8
  store %"class.__gnu_cxx::__normal_iterator.130"* %0, %"class.__gnu_cxx::__normal_iterator.130"** %11, align 8
  store %class.Point.21** %1, %class.Point.21*** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator.130"*, %"class.__gnu_cxx::__normal_iterator.130"** %11, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.130", %"class.__gnu_cxx::__normal_iterator.130"* %13, i32 0, i32 0
  %15 = load %class.Point.21**, %class.Point.21*** %12, align 8
  %16 = load %class.Point.21*, %class.Point.21** %15, align 8
  store %class.Point.21* %16, %class.Point.21** %14, align 8
  %17 = load i32, i32* @x.957
  %18 = load i32, i32* @y.958
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.130"*, align 8
  %26 = alloca %class.Point.21**, align 8
  store %"class.__gnu_cxx::__normal_iterator.130"* %0, %"class.__gnu_cxx::__normal_iterator.130"** %25, align 8
  store %class.Point.21** %1, %class.Point.21*** %26, align 8
  %27 = load %"class.__gnu_cxx::__normal_iterator.130"*, %"class.__gnu_cxx::__normal_iterator.130"** %25, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.130", %"class.__gnu_cxx::__normal_iterator.130"* %27, i32 0, i32 0
  %29 = load %class.Point.21**, %class.Point.21*** %26, align 8
  %30 = load %class.Point.21*, %class.Point.21** %29, align 8
  store %class.Point.21* %30, %class.Point.21** %28, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi2EEES2_E8allocateERS3_m(%"class.std::allocator.18"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.18"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %3, align 8
  %6 = bitcast %"class.std::allocator.18"* %5 to %"class.__gnu_cxx::new_allocator.19"*
  %7 = load i64, i64* %4, align 8
  %8 = call %class.Point.21* @_ZN9__gnu_cxx13new_allocatorI5PointILi2EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.19"* %6, i64 %7, i8* null)
  ret %class.Point.21* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point.21* @_ZN9__gnu_cxx13new_allocatorI5PointILi2EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.19"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorI5PointILi2EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.19"* %7) #12
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %5, align 8
  %14 = mul i64 %13, 16
  %15 = call i8* @_Znwm(i64 %14)
  %16 = bitcast i8* %15 to %class.Point.21*
  ret %class.Point.21* %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi2EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.18"* dereferenceable(1), %class.Point.21*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.963
  %5 = load i32, i32* @y.964
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.18"*, align 8
  %13 = alloca %class.Point.21*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %12, align 8
  store %class.Point.21* %1, %class.Point.21** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %12, align 8
  %16 = bitcast %"class.std::allocator.18"* %15 to %"class.__gnu_cxx::new_allocator.19"*
  %17 = load %class.Point.21*, %class.Point.21** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI5PointILi2EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.19"* %16, %class.Point.21* %17, i64 %18)
  %19 = load i32, i32* @x.963
  %20 = load i32, i32* @y.964
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.18"*, align 8
  %28 = alloca %class.Point.21*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %27, align 8
  store %class.Point.21* %1, %class.Point.21** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %27, align 8
  %31 = bitcast %"class.std::allocator.18"* %30 to %"class.__gnu_cxx::new_allocator.19"*
  %32 = load %class.Point.21*, %class.Point.21** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI5PointILi2EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.19"* %31, %class.Point.21* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI5PointILi2EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.19"*, %class.Point.21*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %5 = alloca %class.Point.21*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %4, align 8
  store %class.Point.21* %1, %class.Point.21** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %4, align 8
  %8 = load %class.Point.21*, %class.Point.21** %5, align 8
  %9 = bitcast %class.Point.21* %8 to i8*
  call void @_ZdlPv(i8* %9) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Tensor.22* @_ZN6TensorILi1ELi2EEpLERKS0_(%class.Tensor.22*, %class.Tensor.22* dereferenceable(16)) #1 comdat align 2 {
  %3 = alloca %class.Tensor.22*, align 8
  %4 = alloca %class.Tensor.22*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor.22* %0, %class.Tensor.22** %3, align 8
  store %class.Tensor.22* %1, %class.Tensor.22** %4, align 8
  %6 = load %class.Tensor.22*, %class.Tensor.22** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %originalBBpart25, %2
  %8 = load i32, i32* @x.967
  %9 = load i32, i32* @y.968
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load i32, i32* %5, align 4
  %17 = icmp ult i32 %16, 2
  %18 = load i32, i32* @x.967
  %19 = load i32, i32* @y.968
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %58

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load %class.Tensor.22*, %class.Tensor.22** %4, align 8
  %28 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %27, i32 0, i32 0
  %29 = load i32, i32* %5, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [2 x double], [2 x double]* %28, i64 0, i64 %30
  %32 = load double, double* %31, align 8
  %33 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %6, i32 0, i32 0
  %34 = load i32, i32* %5, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [2 x double], [2 x double]* %33, i64 0, i64 %35
  %37 = load double, double* %36, align 8
  %38 = fadd double %37, %32
  store double %38, double* %36, align 8
  br label %39

; <label>:39:                                     ; preds = %26
  %40 = load i32, i32* @x.967
  %41 = load i32, i32* @y.968
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = load i32, i32* %5, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %5, align 4
  %50 = load i32, i32* @x.967
  %51 = load i32, i32* @y.968
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart25, label %originalBB1alteredBB

originalBBpart25:                                 ; preds = %originalBB1
  br label %7

; <label>:58:                                     ; preds = %originalBBpart2
  ret %class.Tensor.22* %6

originalBBalteredBB:                              ; preds = %originalBB, %7
  %59 = load i32, i32* %5, align 4
  %60 = icmp ult i32 %59, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %61 = load i32, i32* %5, align 4
  %_ = shl i32 %61, 1
  %_2 = shl i32 %61, 1
  %_3 = sub i32 0, %61
  %gen = add i32 %_3, 1
  %62 = add i32 %61, 1
  store i32 %62, i32* %5, align 4
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5PointILi2EEC2ERK6TensorILi1ELi2EE(%class.Point.21*, %class.Tensor.22* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.Point.21*, align 8
  %4 = alloca %class.Tensor.22*, align 8
  store %class.Point.21* %0, %class.Point.21** %3, align 8
  store %class.Tensor.22* %1, %class.Tensor.22** %4, align 8
  %5 = load %class.Point.21*, %class.Point.21** %3, align 8
  %6 = bitcast %class.Point.21* %5 to %class.Tensor.22*
  %7 = load %class.Tensor.22*, %class.Tensor.22** %4, align 8
  call void @_ZN6TensorILi1ELi2EEC2ERKS0_(%class.Tensor.22* %6, %class.Tensor.22* dereferenceable(16) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Tensor.22* @_ZN6TensorILi1ELi2EEdVERKd(%class.Tensor.22*, double* dereferenceable(8)) #1 comdat align 2 {
  %3 = alloca %class.Tensor.22*, align 8
  %4 = alloca double*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor.22* %0, %class.Tensor.22** %3, align 8
  store double* %1, double** %4, align 8
  %6 = load %class.Tensor.22*, %class.Tensor.22** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %35, %2
  %8 = load i32, i32* @x.971
  %9 = load i32, i32* @y.972
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load i32, i32* %5, align 4
  %17 = icmp ult i32 %16, 2
  %18 = load i32, i32* @x.971
  %19 = load i32, i32* @y.972
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %38

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load double*, double** %4, align 8
  %28 = load double, double* %27, align 8
  %29 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %6, i32 0, i32 0
  %30 = load i32, i32* %5, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [2 x double], [2 x double]* %29, i64 0, i64 %31
  %33 = load double, double* %32, align 8
  %34 = fdiv double %33, %28
  store double %34, double* %32, align 8
  br label %35

; <label>:35:                                     ; preds = %26
  %36 = load i32, i32* %5, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %5, align 4
  br label %7

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = load i32, i32* @x.971
  %40 = load i32, i32* @y.972
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  %47 = load i32, i32* @x.971
  %48 = load i32, i32* @y.972
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret %class.Tensor.22* %6

originalBBalteredBB:                              ; preds = %originalBB, %7
  %55 = load i32, i32* %5, align 4
  %56 = icmp ult i32 %55, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  br label %originalBB1
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline noreturn nounwind }
attributes #4 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { nounwind readnone }
attributes #12 = { nounwind }
attributes #13 = { builtin }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
