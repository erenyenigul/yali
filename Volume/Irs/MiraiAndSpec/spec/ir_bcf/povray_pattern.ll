; ModuleID = 'host/ir_bcf/povray_pattern.ll'
source_filename = "pattern.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.pov::OPTIONS_STRUCT" = type { i32, i8, i8, i8, i32, i32, [1024 x i8], [1024 x i8], [1024 x i8], [1024 x i8], [1024 x i8], float, float, i32, i32, double, double, i32, [25 x i8*], i32, i32, i32, double, double, i32, i32, double, double, i32, i8, i64, i32, i32, i32, %"struct.pov::FRAMESEQ", double, i64, double, double, double, double, double, i64, i32, i64, i32, i32, i32, i32, i32, i32, double, double, double, i32, i32, i8*, i8*, i32, i8, double, double, i32, i32, i8, i32, i32, [1024 x i8], [6 x %"struct.pov::shelldata"], [1024 x i8], [1024 x i8], i32, i32, i64, i32, i32, i32, %struct.POVMSData }
%"struct.pov::FRAMESEQ" = type { i32, double, i32, i32, double, i32, i32, double, i32, double, i32, double, i8, i8 }
%"struct.pov::shelldata" = type { i32, i32, [250 x i8] }
%struct.POVMSData = type { i32, i32, %union.anon.33 }
%union.anon.33 = type { i8* }
%"struct.pov::Pattern_Struct" = type { i16, i16, i16, i32, float, float, float, %"struct.pov::Warps_Struct"*, %"struct.pov::Pattern_Struct"*, %"struct.pov::Blend_Map_Struct"*, %union.anon.25 }
%"struct.pov::Warps_Struct" = type { i16, %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"* }
%"struct.pov::Blend_Map_Struct" = type { i32, i16, i8, i8, %"struct.pov::Blend_Map_Entry"* }
%"struct.pov::Blend_Map_Entry" = type { float, i8, %union.anon }
%union.anon = type { [2 x double], [8 x i8] }
%union.anon.25 = type { %struct.anon.29 }
%struct.anon.29 = type { [3 x double], [3 x double], double, double, i16, [3 x double]*, i32, [3 x double] }
%"struct.pov::istk_entry" = type { double, [3 x double], [3 x double], [3 x double], [2 x double], %"struct.pov::Object_Struct"*, i32, i32, double, double, double, double, double, double, double, double, double, i8*, i8* }
%"struct.pov::Object_Struct" = type { %"struct.pov::Method_Struct"*, i32, %"struct.pov::Object_Struct"*, %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"*, %"struct.pov::Interior_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Light_Source_Struct"*, %"struct.pov::Bounding_Box_Struct", %"struct.pov::Transform_Struct"*, %"struct.pov::Transform_Struct"*, float, i32 }
%"struct.pov::Method_Struct" = type { i32 (%"struct.pov::Object_Struct"*, %"struct.pov::Ray_Struct"*, %"struct.pov::istack_struct"*)*, i32 (double*, %"struct.pov::Object_Struct"*)*, void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)*, void (double*, %"struct.pov::Object_Struct"*, %"struct.pov::istk_entry"*)*, i8* (%"struct.pov::Object_Struct"*)*, void (%"struct.pov::Object_Struct"*, double*, %"struct.pov::Transform_Struct"*)*, void (%"struct.pov::Object_Struct"*, double*, %"struct.pov::Transform_Struct"*)*, void (%"struct.pov::Object_Struct"*, double*, %"struct.pov::Transform_Struct"*)*, void (%"struct.pov::Object_Struct"*, %"struct.pov::Transform_Struct"*)*, void (%"struct.pov::Object_Struct"*)*, void (%"struct.pov::Object_Struct"*)* }
%"struct.pov::Ray_Struct" = type { [3 x double], [3 x double], i32, i32, [100 x %"struct.pov::Interior_Struct"*] }
%"struct.pov::istack_struct" = type { %"struct.pov::istack_struct"*, %"struct.pov::istk_entry"*, i32, i32 }
%"struct.pov::Texture_Struct" = type { i16, i16, i16, i32, float, float, float, %"struct.pov::Warps_Struct"*, %"struct.pov::Pattern_Struct"*, %"struct.pov::Blend_Map_Struct"*, %union.anon.9, %"struct.pov::Texture_Struct"*, %"struct.pov::Pigment_Struct"*, %"struct.pov::Tnormal_Struct"*, %"struct.pov::Finish_Struct"*, %"struct.pov::Texture_Struct"*, i32 }
%union.anon.9 = type { %struct.anon.13 }
%struct.anon.13 = type { [3 x double], [3 x double], double, double, i16, [3 x double]*, i32, [3 x double] }
%"struct.pov::Pigment_Struct" = type { i16, i16, i16, i32, float, float, float, %"struct.pov::Warps_Struct"*, %"struct.pov::Pattern_Struct"*, %"struct.pov::Blend_Map_Struct"*, %union.anon.0, [5 x float] }
%union.anon.0 = type { %struct.anon.5 }
%struct.anon.5 = type { [3 x double], [3 x double], double, double, i16, [3 x double]*, i32, [3 x double] }
%"struct.pov::Tnormal_Struct" = type { i16, i16, i16, i32, float, float, float, %"struct.pov::Warps_Struct"*, %"struct.pov::Pattern_Struct"*, %"struct.pov::Blend_Map_Struct"*, %union.anon.17, float, float }
%union.anon.17 = type { %struct.anon.21 }
%struct.anon.21 = type { [3 x double], [3 x double], double, double, i16, [3 x double]*, i32, [3 x double] }
%"struct.pov::Finish_Struct" = type { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], float, i32, float, i32 }
%"struct.pov::Interior_Struct" = type { i32, i32, i32, float, float, float, float, float, float, [5 x float], %"struct.pov::Media_Struct"* }
%"struct.pov::Media_Struct" = type { i32, i32, i32, i32, i32, double, i32, double, double, i32, i32, i32, i32, [5 x float], [5 x float], [5 x float], [5 x float], double, double, double, double*, double, i32, i32, %"struct.pov::Pigment_Struct"*, %"struct.pov::Media_Struct"* }
%"struct.pov::Light_Source_Struct" = type { %"struct.pov::Method_Struct"*, i32, %"struct.pov::Object_Struct"*, %"struct.pov::Texture_Struct"*, %"struct.pov::Texture_Struct"*, %"struct.pov::Interior_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Light_Source_Struct"*, %"struct.pov::Bounding_Box_Struct", %"struct.pov::Transform_Struct"*, %"struct.pov::Transform_Struct"*, float, i32, %"struct.pov::Object_Struct"*, [5 x float], [3 x double], [3 x double], [3 x double], [3 x double], [3 x double], double, double, double, double, double, %"struct.pov::Light_Source_Struct"*, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, [5 x float]**, %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"*, %"struct.pov::Blend_Map_Struct"*, [6 x %"struct.pov::Project_Tree_Node_Struct"*] }
%"struct.pov::Project_Tree_Node_Struct" = type { i16, %"struct.pov::BBox_Tree_Struct"*, %"struct.pov::Project_Struct", i16, %"struct.pov::Project_Tree_Node_Struct"** }
%"struct.pov::BBox_Tree_Struct" = type { i16, i16, %"struct.pov::Bounding_Box_Struct", %"struct.pov::BBox_Tree_Struct"** }
%"struct.pov::Project_Struct" = type { i32, i32, i32, i32 }
%"struct.pov::Bounding_Box_Struct" = type { [3 x float], [3 x float] }
%"struct.pov::Transform_Struct" = type { [4 x [4 x double]], [4 x [4 x double]] }
%"struct.pov::Turb_Struct" = type { i16, %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"*, [3 x double], i32, float, float }
%struct.anon.26 = type { float, [3 x double] }
%struct.anon.31 = type { [2 x double], i16, i16, i16, double, double, i32 }
%struct.anon.27 = type { float, float }
%"struct.pov::FPUContext_Struct" = type { %"struct.pov::FPUContext_Struct"*, %"struct.pov::StackFrame_Struct"*, double*, i32 }
%"struct.pov::StackFrame_Struct" = type { i32, i32 }
%struct.anon.32 = type { i8*, i8* }
%"struct.pov::Density_file_Data_Struct" = type { i32, i8*, i32, i32, i32, i32, %union.anon.1 }
%union.anon.1 = type { i8* }
%"struct.pov::Density_file_Struct" = type { i32, %"struct.pov::Density_file_Data_Struct"* }
%struct.anon.30 = type { [3 x double], [3 x double], i16, i16, double, double, [2 x double], [2 x double] }
%"struct.pov::Image_Struct" = type { i32, i32, i32, i32, i32, i32, i32, i16, i8, i8, [3 x double], float, float, [2 x double], double, double, %"struct.pov::Image_Colour_Struct"*, i8*, %union.anon.2 }
%"struct.pov::Image_Colour_Struct" = type { i16, i16, i16, i16, i16 }
%union.anon.2 = type { %"struct.pov::Image8_Line_Struct"* }
%"struct.pov::Image8_Line_Struct" = type { i8*, i8*, i8*, i8* }
%"struct.pov::Trans_Warp" = type { i16, %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"*, %"struct.pov::Transform_Struct" }
%"class.pov_base::IStream" = type { %"class.pov_base::IOBase" }
%"class.pov_base::IOBase" = type { i32 (...)**, i8, %struct._IO_FILE*, i32, i32, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

$_ZN3pov3SqrEd = comdat any

$_ZN3pov11Make_VectorEPdddd = comdat any

$_ZN8pov_base6IOBase5tellgEv = comdat any

$_ZSt3minIdERKT_S2_S2_ = comdat any

$_ZSt3maxIdERKT_S2_S2_ = comdat any

$_ZN3pov13Assign_VectorEPdS0_ = comdat any

$_ZN3pov4VSubEPdPKdS2_ = comdat any

$_ZN3pov7VSumSqrEPd = comdat any

$_ZN3pov5intp3Efffff = comdat any

$_ZN3pov4VDotERdPKdS2_ = comdat any

$_ZN3pov6VScaleEPdPKdd = comdat any

$_ZSt3powdi = comdat any

$_ZN3pov7VLengthERdPKd = comdat any

$_ZN8pov_base7IStream9Read_ByteEv = comdat any

@_ZN3pov26BinomialCoefficientsInitedE = global i8 0, align 1
@_ZN3pov20BinomialCoefficientsE = global [595 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [26 x i8] c"Problem in Evaluate_TPat.\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Unknown Wave Type %d.\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"pattern.cpp\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"crackle cache\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"turbulence struct\00", align 1
@_ZN3pov9hashTableE = external global [8192 x i16], align 16
@.str.5 = private unnamed_addr constant [13 x i8] c"density file\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"density file data\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"Cannot read media density file.\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"media density file data 32 bit\00", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"media density file data 16 bit\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"media density file data 8 bit\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"Invalid density file size\00", align 1
@_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE4vali = internal global i32 0, align 4
@_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE4vals = internal global [3 x i32] zeroinitializer, align 4
@_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE5valid = internal global [125 x i32] zeroinitializer, align 16
@_ZN3pov4optsE = external global %"struct.pov::OPTIONS_STRUCT", align 8
@_ZN3pov15Number_Of_WavesE = external global i32, align 4
@_ZN3pov12Wave_SourcesE = external global [3 x double]*, align 8
@_ZN3pov9frequencyE = external global double*, align 8
@.str.12 = private unnamed_addr constant [27 x i8] c"Error reading density_file\00", align 1
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0

; Function Attrs: noinline uwtable
define double @_ZN3pov13Evaluate_TPatEPNS_14Pattern_StructEPdPNS_10istk_entryE(%"struct.pov::Pattern_Struct"*, double*, %"struct.pov::istk_entry"*) #0 {
  %4 = load i32, i32* @x
  %5 = load i32, i32* @y
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %13 = alloca double*, align 8
  %14 = alloca %"struct.pov::istk_entry"*, align 8
  %15 = alloca double, align 8
  store %"struct.pov::Pattern_Struct"* %0, %"struct.pov::Pattern_Struct"** %12, align 8
  store double* %1, double** %13, align 8
  store %"struct.pov::istk_entry"* %2, %"struct.pov::istk_entry"** %14, align 8
  store double 0.000000e+00, double* %15, align 8
  %16 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %17 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %16, i32 0, i32 0
  %18 = load i16, i16* %17, align 8
  %19 = zext i16 %18 to i32
  %20 = load i32, i32* @x
  %21 = load i32, i32* @y
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %19, label %464 [
    i32 21, label %28
    i32 16, label %32
    i32 20, label %32
    i32 8, label %32
    i32 14, label %52
    i32 17, label %56
    i32 12, label %59
    i32 39, label %62
    i32 23, label %82
    i32 22, label %86
    i32 15, label %90
    i32 26, label %93
    i32 27, label %113
    i32 28, label %117
    i32 29, label %121
    i32 25, label %125
    i32 34, label %144
    i32 35, label %148
    i32 36, label %168
    i32 37, label %172
    i32 30, label %192
    i32 31, label %212
    i32 32, label %216
    i32 33, label %236
    i32 18, label %240
    i32 24, label %244
    i32 38, label %247
    i32 40, label %250
    i32 41, label %270
    i32 19, label %290
    i32 5, label %310
    i32 6, label %330
    i32 7, label %350
    i32 11, label %354
    i32 9, label %358
    i32 47, label %362
    i32 42, label %366
    i32 44, label %385
    i32 43, label %388
    i32 45, label %391
    i32 46, label %394
    i32 50, label %414
    i32 48, label %434
    i32 49, label %439
    i32 13, label %444
  ]

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load double*, double** %13, align 8
  %30 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %31 = call double @_ZN3povL13agate_patternEPdPNS_14Pattern_StructE(double* %29, %"struct.pov::Pattern_Struct"* %30)
  store double %31, double* %15, align 8
  br label %466

; <label>:32:                                     ; preds = %originalBBpart2, %originalBBpart2, %originalBBpart2
  %33 = load i32, i32* @x
  %34 = load i32, i32* @y
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %32
  %41 = load double*, double** %13, align 8
  %42 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %43 = call double @_ZN3pov5NoiseEPdPNS_14Pattern_StructE(double* %41, %"struct.pov::Pattern_Struct"* %42)
  store double %43, double* %15, align 8
  %44 = load i32, i32* @x
  %45 = load i32, i32* @y
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %466

; <label>:52:                                     ; preds = %originalBBpart2
  %53 = load double*, double** %13, align 8
  %54 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %55 = call double @_ZN3povL13brick_patternEPdPNS_14Pattern_StructE(double* %53, %"struct.pov::Pattern_Struct"* %54)
  store double %55, double* %15, align 8
  br label %466

; <label>:56:                                     ; preds = %originalBBpart2
  %57 = load double*, double** %13, align 8
  %58 = call double @_ZN3povL13cells_patternEPd(double* %57)
  store double %58, double* %15, align 8
  br label %466

; <label>:59:                                     ; preds = %originalBBpart2
  %60 = load double*, double** %13, align 8
  %61 = call double @_ZN3povL15checker_patternEPd(double* %60)
  store double %61, double* %15, align 8
  br label %466

; <label>:62:                                     ; preds = %originalBBpart2
  %63 = load i32, i32* @x
  %64 = load i32, i32* @y
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %62
  %71 = load double*, double** %13, align 8
  %72 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %73 = call double @_ZN3povL15crackle_patternEPdPNS_14Pattern_StructE(double* %71, %"struct.pov::Pattern_Struct"* %72)
  store double %73, double* %15, align 8
  %74 = load i32, i32* @x
  %75 = load i32, i32* @y
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %466

; <label>:82:                                     ; preds = %originalBBpart2
  %83 = load double*, double** %13, align 8
  %84 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %85 = call double @_ZN3povL16gradient_patternEPdPNS_14Pattern_StructE(double* %83, %"struct.pov::Pattern_Struct"* %84)
  store double %85, double* %15, align 8
  br label %466

; <label>:86:                                     ; preds = %originalBBpart2
  %87 = load double*, double** %13, align 8
  %88 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %89 = call double @_ZN3povL15granite_patternEPdPNS_14Pattern_StructE(double* %87, %"struct.pov::Pattern_Struct"* %88)
  store double %89, double* %15, align 8
  br label %466

; <label>:90:                                     ; preds = %originalBBpart2
  %91 = load double*, double** %13, align 8
  %92 = call double @_ZN3povL15hexagon_patternEPd(double* %91)
  store double %92, double* %15, align 8
  br label %466

; <label>:93:                                     ; preds = %originalBBpart2
  %94 = load i32, i32* @x
  %95 = load i32, i32* @y
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %93
  %102 = load double*, double** %13, align 8
  %103 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %104 = call double @_ZN3povL13julia_patternEPdPNS_14Pattern_StructE(double* %102, %"struct.pov::Pattern_Struct"* %103)
  store double %104, double* %15, align 8
  %105 = load i32, i32* @x
  %106 = load i32, i32* @y
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %466

; <label>:113:                                    ; preds = %originalBBpart2
  %114 = load double*, double** %13, align 8
  %115 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %116 = call double @_ZN3povL14julia3_patternEPdPNS_14Pattern_StructE(double* %114, %"struct.pov::Pattern_Struct"* %115)
  store double %116, double* %15, align 8
  br label %466

; <label>:117:                                    ; preds = %originalBBpart2
  %118 = load double*, double** %13, align 8
  %119 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %120 = call double @_ZN3povL14julia4_patternEPdPNS_14Pattern_StructE(double* %118, %"struct.pov::Pattern_Struct"* %119)
  store double %120, double* %15, align 8
  br label %466

; <label>:121:                                    ; preds = %originalBBpart2
  %122 = load double*, double** %13, align 8
  %123 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %124 = call double @_ZN3povL14juliax_patternEPdPNS_14Pattern_StructE(double* %122, %"struct.pov::Pattern_Struct"* %123)
  store double %124, double* %15, align 8
  br label %466

; <label>:125:                                    ; preds = %originalBBpart2
  %126 = load i32, i32* @x
  %127 = load i32, i32* @y
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %125
  %134 = load double*, double** %13, align 8
  %135 = call double @_ZN3povL15leopard_patternEPd(double* %134)
  store double %135, double* %15, align 8
  %136 = load i32, i32* @x
  %137 = load i32, i32* @y
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %466

; <label>:144:                                    ; preds = %originalBBpart2
  %145 = load double*, double** %13, align 8
  %146 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %147 = call double @_ZN3povL16magnet1m_patternEPdPNS_14Pattern_StructE(double* %145, %"struct.pov::Pattern_Struct"* %146)
  store double %147, double* %15, align 8
  br label %466

; <label>:148:                                    ; preds = %originalBBpart2
  %149 = load i32, i32* @x
  %150 = load i32, i32* @y
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %148
  %157 = load double*, double** %13, align 8
  %158 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %159 = call double @_ZN3povL16magnet1j_patternEPdPNS_14Pattern_StructE(double* %157, %"struct.pov::Pattern_Struct"* %158)
  store double %159, double* %15, align 8
  %160 = load i32, i32* @x
  %161 = load i32, i32* @y
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %466

; <label>:168:                                    ; preds = %originalBBpart2
  %169 = load double*, double** %13, align 8
  %170 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %171 = call double @_ZN3povL16magnet2m_patternEPdPNS_14Pattern_StructE(double* %169, %"struct.pov::Pattern_Struct"* %170)
  store double %171, double* %15, align 8
  br label %466

; <label>:172:                                    ; preds = %originalBBpart2
  %173 = load i32, i32* @x
  %174 = load i32, i32* @y
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %172
  %181 = load double*, double** %13, align 8
  %182 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %183 = call double @_ZN3povL16magnet2j_patternEPdPNS_14Pattern_StructE(double* %181, %"struct.pov::Pattern_Struct"* %182)
  store double %183, double* %15, align 8
  %184 = load i32, i32* @x
  %185 = load i32, i32* @y
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %466

; <label>:192:                                    ; preds = %originalBBpart2
  %193 = load i32, i32* @x
  %194 = load i32, i32* @y
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %192
  %201 = load double*, double** %13, align 8
  %202 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %203 = call double @_ZN3povL14mandel_patternEPdPNS_14Pattern_StructE(double* %201, %"struct.pov::Pattern_Struct"* %202)
  store double %203, double* %15, align 8
  %204 = load i32, i32* @x
  %205 = load i32, i32* @y
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %466

; <label>:212:                                    ; preds = %originalBBpart2
  %213 = load double*, double** %13, align 8
  %214 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %215 = call double @_ZN3povL15mandel3_patternEPdPNS_14Pattern_StructE(double* %213, %"struct.pov::Pattern_Struct"* %214)
  store double %215, double* %15, align 8
  br label %466

; <label>:216:                                    ; preds = %originalBBpart2
  %217 = load i32, i32* @x
  %218 = load i32, i32* @y
  %219 = sub i32 %217, 1
  %220 = mul i32 %217, %219
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %222, %223
  br i1 %224, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %216
  %225 = load double*, double** %13, align 8
  %226 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %227 = call double @_ZN3povL15mandel4_patternEPdPNS_14Pattern_StructE(double* %225, %"struct.pov::Pattern_Struct"* %226)
  store double %227, double* %15, align 8
  %228 = load i32, i32* @x
  %229 = load i32, i32* @y
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %466

; <label>:236:                                    ; preds = %originalBBpart2
  %237 = load double*, double** %13, align 8
  %238 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %239 = call double @_ZN3povL15mandelx_patternEPdPNS_14Pattern_StructE(double* %237, %"struct.pov::Pattern_Struct"* %238)
  store double %239, double* %15, align 8
  br label %466

; <label>:240:                                    ; preds = %originalBBpart2
  %241 = load double*, double** %13, align 8
  %242 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %243 = call double @_ZN3povL14marble_patternEPdPNS_14Pattern_StructE(double* %241, %"struct.pov::Pattern_Struct"* %242)
  store double %243, double* %15, align 8
  br label %466

; <label>:244:                                    ; preds = %originalBBpart2
  %245 = load double*, double** %13, align 8
  %246 = call double @_ZN3povL13onion_patternEPd(double* %245)
  store double %246, double* %15, align 8
  br label %466

; <label>:247:                                    ; preds = %originalBBpart2
  %248 = load double*, double** %13, align 8
  %249 = call double @_ZN3povL14radial_patternEPd(double* %248)
  store double %249, double* %15, align 8
  br label %466

; <label>:250:                                    ; preds = %originalBBpart2
  %251 = load i32, i32* @x
  %252 = load i32, i32* @y
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %250
  %259 = load double*, double** %13, align 8
  %260 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %261 = call double @_ZN3povL15spiral1_patternEPdPNS_14Pattern_StructE(double* %259, %"struct.pov::Pattern_Struct"* %260)
  store double %261, double* %15, align 8
  %262 = load i32, i32* @x
  %263 = load i32, i32* @y
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %466

; <label>:270:                                    ; preds = %originalBBpart2
  %271 = load i32, i32* @x
  %272 = load i32, i32* @y
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %originalBB38alteredBB, %270
  %279 = load double*, double** %13, align 8
  %280 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %281 = call double @_ZN3povL15spiral2_patternEPdPNS_14Pattern_StructE(double* %279, %"struct.pov::Pattern_Struct"* %280)
  store double %281, double* %15, align 8
  %282 = load i32, i32* @x
  %283 = load i32, i32* @y
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %466

; <label>:290:                                    ; preds = %originalBBpart2
  %291 = load i32, i32* @x
  %292 = load i32, i32* @y
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %originalBB42alteredBB, %290
  %299 = load double*, double** %13, align 8
  %300 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %301 = call double @_ZN3povL12wood_patternEPdPNS_14Pattern_StructE(double* %299, %"struct.pov::Pattern_Struct"* %300)
  store double %301, double* %15, align 8
  %302 = load i32, i32* @x
  %303 = load i32, i32* @y
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %466

; <label>:310:                                    ; preds = %originalBBpart2
  %311 = load i32, i32* @x
  %312 = load i32, i32* @y
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %310
  %319 = load double*, double** %13, align 8
  %320 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %321 = call double @_ZN3povL13waves_patternEPdPNS_14Pattern_StructE(double* %319, %"struct.pov::Pattern_Struct"* %320)
  store double %321, double* %15, align 8
  %322 = load i32, i32* @x
  %323 = load i32, i32* @y
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %466

; <label>:330:                                    ; preds = %originalBBpart2
  %331 = load i32, i32* @x
  %332 = load i32, i32* @y
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %originalBB50alteredBB, %330
  %339 = load double*, double** %13, align 8
  %340 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %341 = call double @_ZN3povL15ripples_patternEPdPNS_14Pattern_StructE(double* %339, %"struct.pov::Pattern_Struct"* %340)
  store double %341, double* %15, align 8
  %342 = load i32, i32* @x
  %343 = load i32, i32* @y
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %466

; <label>:350:                                    ; preds = %originalBBpart2
  %351 = load double*, double** %13, align 8
  %352 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %353 = call double @_ZN3povL16wrinkles_patternEPdPNS_14Pattern_StructE(double* %351, %"struct.pov::Pattern_Struct"* %352)
  store double %353, double* %15, align 8
  br label %466

; <label>:354:                                    ; preds = %originalBBpart2
  %355 = load double*, double** %13, align 8
  %356 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %357 = call double @_ZN3povL13dents_patternEPdPNS_14Pattern_StructE(double* %355, %"struct.pov::Pattern_Struct"* %356)
  store double %357, double* %15, align 8
  br label %466

; <label>:358:                                    ; preds = %originalBBpart2
  %359 = load double*, double** %13, align 8
  %360 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %361 = call double @_ZN3povL15quilted_patternEPdPNS_14Pattern_StructE(double* %359, %"struct.pov::Pattern_Struct"* %360)
  store double %361, double* %15, align 8
  br label %466

; <label>:362:                                    ; preds = %originalBBpart2
  %363 = load double*, double** %13, align 8
  %364 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %365 = call double @_ZN3povL16function_patternEPdPNS_14Pattern_StructE(double* %363, %"struct.pov::Pattern_Struct"* %364)
  store double %365, double* %15, align 8
  br label %466

; <label>:366:                                    ; preds = %originalBBpart2
  %367 = load i32, i32* @x
  %368 = load i32, i32* @y
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %366
  %375 = load double*, double** %13, align 8
  %376 = call double @_ZN3povL14planar_patternEPd(double* %375)
  store double %376, double* %15, align 8
  %377 = load i32, i32* @x
  %378 = load i32, i32* @y
  %379 = sub i32 %377, 1
  %380 = mul i32 %377, %379
  %381 = urem i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %382, %383
  br i1 %384, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %466

; <label>:385:                                    ; preds = %originalBBpart2
  %386 = load double*, double** %13, align 8
  %387 = call double @_ZN3povL13boxed_patternEPd(double* %386)
  store double %387, double* %15, align 8
  br label %466

; <label>:388:                                    ; preds = %originalBBpart2
  %389 = load double*, double** %13, align 8
  %390 = call double @_ZN3povL17spherical_patternEPd(double* %389)
  store double %390, double* %15, align 8
  br label %466

; <label>:391:                                    ; preds = %originalBBpart2
  %392 = load double*, double** %13, align 8
  %393 = call double @_ZN3povL19cylindrical_patternEPd(double* %392)
  store double %393, double* %15, align 8
  br label %466

; <label>:394:                                    ; preds = %originalBBpart2
  %395 = load i32, i32* @x
  %396 = load i32, i32* @y
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %394
  %403 = load double*, double** %13, align 8
  %404 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %405 = call double @_ZN3povL15density_patternEPdPNS_14Pattern_StructE(double* %403, %"struct.pov::Pattern_Struct"* %404)
  store double %405, double* %15, align 8
  %406 = load i32, i32* @x
  %407 = load i32, i32* @y
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %466

; <label>:414:                                    ; preds = %originalBBpart2
  %415 = load i32, i32* @x
  %416 = load i32, i32* @y
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %414
  %423 = load double*, double** %13, align 8
  %424 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %425 = call double @_ZN3pov13image_patternEPdPNS_14Pattern_StructE(double* %423, %"struct.pov::Pattern_Struct"* %424)
  store double %425, double* %15, align 8
  %426 = load i32, i32* @x
  %427 = load i32, i32* @y
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %466

; <label>:434:                                    ; preds = %originalBBpart2
  %435 = load double*, double** %13, align 8
  %436 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %437 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %438 = call double @_ZN3povL13slope_patternEPdPNS_14Pattern_StructEPNS_10istk_entryE(double* %435, %"struct.pov::Pattern_Struct"* %436, %"struct.pov::istk_entry"* %437)
  store double %438, double* %15, align 8
  br label %466

; <label>:439:                                    ; preds = %originalBBpart2
  %440 = load double*, double** %13, align 8
  %441 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %442 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %14, align 8
  %443 = call double @_ZN3povL15pigment_patternEPdPNS_14Pattern_StructEPNS_10istk_entryE(double* %440, %"struct.pov::Pattern_Struct"* %441, %"struct.pov::istk_entry"* %442)
  store double %443, double* %15, align 8
  br label %466

; <label>:444:                                    ; preds = %originalBBpart2
  %445 = load i32, i32* @x
  %446 = load i32, i32* @y
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %444
  %453 = load double*, double** %13, align 8
  %454 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %455 = call double @_ZN3povL14object_patternEPdPNS_14Pattern_StructE(double* %453, %"struct.pov::Pattern_Struct"* %454)
  store double %455, double* %15, align 8
  %456 = load i32, i32* @x
  %457 = load i32, i32* @y
  %458 = sub i32 %456, 1
  %459 = mul i32 %456, %458
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %461, %462
  br i1 %463, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %466

; <label>:464:                                    ; preds = %originalBBpart2
  %465 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0))
  br label %466

; <label>:466:                                    ; preds = %464, %originalBBpart268, %439, %434, %originalBBpart264, %originalBBpart260, %391, %388, %385, %originalBBpart256, %362, %358, %354, %350, %originalBBpart252, %originalBBpart248, %originalBBpart244, %originalBBpart240, %originalBBpart236, %247, %244, %240, %236, %originalBBpart232, %212, %originalBBpart228, %originalBBpart224, %168, %originalBBpart220, %144, %originalBBpart216, %121, %117, %113, %originalBBpart212, %90, %86, %82, %originalBBpart28, %59, %56, %52, %originalBBpart24, %28
  %467 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %468 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %467, i32 0, i32 4
  %469 = load float, float* %468, align 4
  %470 = fpext float %469 to double
  %471 = fcmp une double %470, 0.000000e+00
  br i1 %471, label %472, label %485

; <label>:472:                                    ; preds = %466
  %473 = load double, double* %15, align 8
  %474 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %475 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %474, i32 0, i32 4
  %476 = load float, float* %475, align 4
  %477 = fpext float %476 to double
  %478 = fmul double %473, %477
  %479 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %480 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %479, i32 0, i32 5
  %481 = load float, float* %480, align 8
  %482 = fpext float %481 to double
  %483 = fadd double %478, %482
  %484 = call double @fmod(double %483, double 1.000010e+00) #7
  store double %484, double* %15, align 8
  br label %485

; <label>:485:                                    ; preds = %472, %466
  %486 = load i32, i32* @x
  %487 = load i32, i32* @y
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %485
  %494 = load double, double* %15, align 8
  %495 = fcmp olt double %494, 0.000000e+00
  %496 = load i32, i32* @x
  %497 = load i32, i32* @y
  %498 = sub i32 %496, 1
  %499 = mul i32 %496, %498
  %500 = urem i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %497, 10
  %503 = or i1 %501, %502
  br i1 %503, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br i1 %495, label %504, label %509

; <label>:504:                                    ; preds = %originalBBpart272
  %505 = load double, double* %15, align 8
  %506 = call double @floor(double %505) #6
  %507 = load double, double* %15, align 8
  %508 = fsub double %507, %506
  store double %508, double* %15, align 8
  br label %509

; <label>:509:                                    ; preds = %504, %originalBBpart272
  %510 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %511 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %510, i32 0, i32 1
  %512 = load i16, i16* %511, align 2
  %513 = zext i16 %512 to i32
  switch i32 %513, label %590 [
    i32 0, label %514
    i32 1, label %531
    i32 2, label %536
    i32 3, label %539
    i32 4, label %544
    i32 5, label %567
  ]

; <label>:514:                                    ; preds = %509
  %515 = load i32, i32* @x
  %516 = load i32, i32* @y
  %517 = sub i32 %515, 1
  %518 = mul i32 %515, %517
  %519 = urem i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %516, 10
  %522 = or i1 %520, %521
  br i1 %522, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %514
  %523 = load i32, i32* @x
  %524 = load i32, i32* @y
  %525 = sub i32 %523, 1
  %526 = mul i32 %523, %525
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %524, 10
  %530 = or i1 %528, %529
  br i1 %530, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %596

; <label>:531:                                    ; preds = %509
  %532 = load double, double* %15, align 8
  %533 = call double @_ZN3pov9cycloidalEd(double %532)
  %534 = fadd double 1.000000e+00, %533
  %535 = fmul double %534, 5.000000e-01
  store double %535, double* %15, align 8
  br label %596

; <label>:536:                                    ; preds = %509
  %537 = load double, double* %15, align 8
  %538 = call double @_ZN3pov13Triangle_WaveEd(double %537)
  store double %538, double* %15, align 8
  br label %596

; <label>:539:                                    ; preds = %509
  %540 = load double, double* %15, align 8
  %541 = fmul double %540, 5.000000e-01
  %542 = call double @_ZN3pov9cycloidalEd(double %541)
  %543 = call double @fabs(double %542) #6
  store double %543, double* %15, align 8
  br label %596

; <label>:544:                                    ; preds = %509
  %545 = load i32, i32* @x
  %546 = load i32, i32* @y
  %547 = sub i32 %545, 1
  %548 = mul i32 %545, %547
  %549 = urem i32 %548, 2
  %550 = icmp eq i32 %549, 0
  %551 = icmp slt i32 %546, 10
  %552 = or i1 %550, %551
  br i1 %552, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %544
  %553 = load double, double* %15, align 8
  %554 = call double @_ZN3pov3SqrEd(double %553)
  %555 = load double, double* %15, align 8
  %556 = fmul double -2.000000e+00, %555
  %557 = fadd double %556, 3.000000e+00
  %558 = fmul double %554, %557
  store double %558, double* %15, align 8
  %559 = load i32, i32* @x
  %560 = load i32, i32* @y
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBBpart2108, label %originalBB78alteredBB

originalBBpart2108:                               ; preds = %originalBB78
  br label %596

; <label>:567:                                    ; preds = %509
  %568 = load i32, i32* @x
  %569 = load i32, i32* @y
  %570 = sub i32 %568, 1
  %571 = mul i32 %568, %570
  %572 = urem i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %569, 10
  %575 = or i1 %573, %574
  br i1 %575, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %originalBB110alteredBB, %567
  %576 = load double, double* %15, align 8
  %577 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %578 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %577, i32 0, i32 6
  %579 = load float, float* %578, align 4
  %580 = fpext float %579 to double
  %581 = call double @pow(double %576, double %580) #7
  store double %581, double* %15, align 8
  %582 = load i32, i32* @x
  %583 = load i32, i32* @y
  %584 = sub i32 %582, 1
  %585 = mul i32 %582, %584
  %586 = urem i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = icmp slt i32 %583, 10
  %589 = or i1 %587, %588
  br i1 %589, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br label %596

; <label>:590:                                    ; preds = %509
  %591 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %592 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %591, i32 0, i32 1
  %593 = load i16, i16* %592, align 2
  %594 = zext i16 %593 to i32
  %595 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i32 0, i32 0), i32 %594)
  br label %596

; <label>:596:                                    ; preds = %590, %originalBBpart2112, %originalBBpart2108, %539, %536, %531, %originalBBpart276
  %597 = load double, double* %15, align 8
  ret double %597

originalBBalteredBB:                              ; preds = %originalBB, %3
  %598 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %599 = alloca double*, align 8
  %600 = alloca %"struct.pov::istk_entry"*, align 8
  %601 = alloca double, align 8
  store %"struct.pov::Pattern_Struct"* %0, %"struct.pov::Pattern_Struct"** %598, align 8
  store double* %1, double** %599, align 8
  store %"struct.pov::istk_entry"* %2, %"struct.pov::istk_entry"** %600, align 8
  store double 0.000000e+00, double* %601, align 8
  %602 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %598, align 8
  %603 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %602, i32 0, i32 0
  %604 = load i16, i16* %603, align 8
  %605 = zext i16 %604 to i32
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %606 = load double*, double** %13, align 8
  %607 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %608 = call double @_ZN3pov5NoiseEPdPNS_14Pattern_StructE(double* %606, %"struct.pov::Pattern_Struct"* %607)
  store double %608, double* %15, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %62
  %609 = load double*, double** %13, align 8
  %610 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %611 = call double @_ZN3povL15crackle_patternEPdPNS_14Pattern_StructE(double* %609, %"struct.pov::Pattern_Struct"* %610)
  store double %611, double* %15, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %93
  %612 = load double*, double** %13, align 8
  %613 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %614 = call double @_ZN3povL13julia_patternEPdPNS_14Pattern_StructE(double* %612, %"struct.pov::Pattern_Struct"* %613)
  store double %614, double* %15, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %125
  %615 = load double*, double** %13, align 8
  %616 = call double @_ZN3povL15leopard_patternEPd(double* %615)
  store double %616, double* %15, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %148
  %617 = load double*, double** %13, align 8
  %618 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %619 = call double @_ZN3povL16magnet1j_patternEPdPNS_14Pattern_StructE(double* %617, %"struct.pov::Pattern_Struct"* %618)
  store double %619, double* %15, align 8
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %172
  %620 = load double*, double** %13, align 8
  %621 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %622 = call double @_ZN3povL16magnet2j_patternEPdPNS_14Pattern_StructE(double* %620, %"struct.pov::Pattern_Struct"* %621)
  store double %622, double* %15, align 8
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %192
  %623 = load double*, double** %13, align 8
  %624 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %625 = call double @_ZN3povL14mandel_patternEPdPNS_14Pattern_StructE(double* %623, %"struct.pov::Pattern_Struct"* %624)
  store double %625, double* %15, align 8
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %216
  %626 = load double*, double** %13, align 8
  %627 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %628 = call double @_ZN3povL15mandel4_patternEPdPNS_14Pattern_StructE(double* %626, %"struct.pov::Pattern_Struct"* %627)
  store double %628, double* %15, align 8
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %250
  %629 = load double*, double** %13, align 8
  %630 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %631 = call double @_ZN3povL15spiral1_patternEPdPNS_14Pattern_StructE(double* %629, %"struct.pov::Pattern_Struct"* %630)
  store double %631, double* %15, align 8
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %270
  %632 = load double*, double** %13, align 8
  %633 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %634 = call double @_ZN3povL15spiral2_patternEPdPNS_14Pattern_StructE(double* %632, %"struct.pov::Pattern_Struct"* %633)
  store double %634, double* %15, align 8
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %290
  %635 = load double*, double** %13, align 8
  %636 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %637 = call double @_ZN3povL12wood_patternEPdPNS_14Pattern_StructE(double* %635, %"struct.pov::Pattern_Struct"* %636)
  store double %637, double* %15, align 8
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %310
  %638 = load double*, double** %13, align 8
  %639 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %640 = call double @_ZN3povL13waves_patternEPdPNS_14Pattern_StructE(double* %638, %"struct.pov::Pattern_Struct"* %639)
  store double %640, double* %15, align 8
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %330
  %641 = load double*, double** %13, align 8
  %642 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %643 = call double @_ZN3povL15ripples_patternEPdPNS_14Pattern_StructE(double* %641, %"struct.pov::Pattern_Struct"* %642)
  store double %643, double* %15, align 8
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %366
  %644 = load double*, double** %13, align 8
  %645 = call double @_ZN3povL14planar_patternEPd(double* %644)
  store double %645, double* %15, align 8
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %394
  %646 = load double*, double** %13, align 8
  %647 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %648 = call double @_ZN3povL15density_patternEPdPNS_14Pattern_StructE(double* %646, %"struct.pov::Pattern_Struct"* %647)
  store double %648, double* %15, align 8
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %414
  %649 = load double*, double** %13, align 8
  %650 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %651 = call double @_ZN3pov13image_patternEPdPNS_14Pattern_StructE(double* %649, %"struct.pov::Pattern_Struct"* %650)
  store double %651, double* %15, align 8
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %444
  %652 = load double*, double** %13, align 8
  %653 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %654 = call double @_ZN3povL14object_patternEPdPNS_14Pattern_StructE(double* %652, %"struct.pov::Pattern_Struct"* %653)
  store double %654, double* %15, align 8
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %485
  %655 = load double, double* %15, align 8
  %656 = fcmp olt double %655, 0.000000e+00
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %514
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %544
  %657 = load double, double* %15, align 8
  %658 = call double @_ZN3pov3SqrEd(double %657)
  %659 = load double, double* %15, align 8
  %_ = fsub double -2.000000e+00, %659
  %gen = fmul double %_, %659
  %_79 = fsub double -2.000000e+00, %659
  %gen80 = fmul double %_79, %659
  %_81 = fsub double -2.000000e+00, %659
  %gen82 = fmul double %_81, %659
  %_83 = fsub double -0.000000e+00, -2.000000e+00
  %gen84 = fadd double %_83, %659
  %_85 = fsub double -0.000000e+00, -2.000000e+00
  %gen86 = fadd double %_85, %659
  %_87 = fsub double -0.000000e+00, -2.000000e+00
  %gen88 = fadd double %_87, %659
  %_89 = fsub double -0.000000e+00, -2.000000e+00
  %gen90 = fadd double %_89, %659
  %660 = fmul double -2.000000e+00, %659
  %_91 = fsub double %660, 3.000000e+00
  %gen92 = fmul double %_91, 3.000000e+00
  %_93 = fsub double %660, 3.000000e+00
  %gen94 = fmul double %_93, 3.000000e+00
  %_95 = fsub double -0.000000e+00, %660
  %gen96 = fadd double %_95, 3.000000e+00
  %_97 = fsub double %660, 3.000000e+00
  %gen98 = fmul double %_97, 3.000000e+00
  %661 = fadd double %660, 3.000000e+00
  %_99 = fsub double %658, %661
  %gen100 = fmul double %_99, %661
  %_101 = fsub double -0.000000e+00, %658
  %gen102 = fadd double %_101, %661
  %_103 = fsub double -0.000000e+00, %658
  %gen104 = fadd double %_103, %661
  %_105 = fsub double -0.000000e+00, %658
  %gen106 = fadd double %_105, %661
  %662 = fmul double %658, %661
  store double %662, double* %15, align 8
  br label %originalBB78

originalBB110alteredBB:                           ; preds = %originalBB110, %567
  %663 = load double, double* %15, align 8
  %664 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %665 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %664, i32 0, i32 6
  %666 = load float, float* %665, align 4
  %667 = fpext float %666 to double
  %668 = call double @pow(double %663, double %667) #7
  store double %668, double* %15, align 8
  br label %originalBB110
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL13agate_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = load i32, i32* @x.1
  %4 = load i32, i32* @y.2
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca double*, align 8
  %12 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca %"struct.pov::Turb_Struct"*, align 8
  %16 = alloca double, align 8
  store double* %0, double** %11, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %12, align 8
  %17 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %18 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %17, i32 0, i32 7
  %19 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %18, align 8
  %20 = call %"struct.pov::Turb_Struct"* @_ZN3povL15Search_For_TurbEPNS_12Warps_StructE(%"struct.pov::Warps_Struct"* %19)
  store %"struct.pov::Turb_Struct"* %20, %"struct.pov::Turb_Struct"** %15, align 8
  %21 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %22 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %21, i32 0, i32 10
  %23 = bitcast %union.anon.25* %22 to float*
  %24 = load float, float* %23, align 8
  %25 = fpext float %24 to double
  %26 = load double*, double** %11, align 8
  %27 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %15, align 8
  %28 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %29 = call double @_ZN3pov10TurbulenceEPdPNS_11Turb_StructEPNS_14Pattern_StructE(double* %26, %"struct.pov::Turb_Struct"* %27, %"struct.pov::Pattern_Struct"* %28)
  %30 = fmul double %25, %29
  store double %30, double* %14, align 8
  %31 = load double, double* %14, align 8
  %32 = fmul double 1.300000e+00, %31
  %33 = load double*, double** %11, align 8
  %34 = getelementptr inbounds double, double* %33, i64 2
  %35 = load double, double* %34, align 8
  %36 = fmul double 1.100000e+00, %35
  %37 = fadd double %32, %36
  %38 = call double @_ZN3pov9cycloidalEd(double %37)
  %39 = fadd double %38, 1.000000e+00
  %40 = fmul double 5.000000e-01, %39
  store double %40, double* %13, align 8
  %41 = load double, double* %13, align 8
  %42 = fcmp olt double %41, 0.000000e+00
  %43 = load i32, i32* @x.1
  %44 = load i32, i32* @y.2
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %42, label %51, label %52

; <label>:51:                                     ; preds = %originalBBpart2
  store double 0.000000e+00, double* %13, align 8
  br label %73

; <label>:52:                                     ; preds = %originalBBpart2
  %53 = load i32, i32* @x.1
  %54 = load i32, i32* @y.2
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %52
  store double 1.000000e+00, double* %16, align 8
  %61 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %16, double* dereferenceable(8) %13)
  %62 = load double, double* %61, align 8
  store double %62, double* %13, align 8
  %63 = load double, double* %13, align 8
  %64 = call double @pow(double %63, double 7.700000e-01) #7
  store double %64, double* %13, align 8
  %65 = load i32, i32* @x.1
  %66 = load i32, i32* @y.2
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %73

; <label>:73:                                     ; preds = %originalBBpart249, %51
  %74 = load double, double* %13, align 8
  ret double %74

originalBBalteredBB:                              ; preds = %originalBB, %2
  %75 = alloca double*, align 8
  %76 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %77 = alloca double, align 8
  %78 = alloca double, align 8
  %79 = alloca %"struct.pov::Turb_Struct"*, align 8
  %80 = alloca double, align 8
  store double* %0, double** %75, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %76, align 8
  %81 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %76, align 8
  %82 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %81, i32 0, i32 7
  %83 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %82, align 8
  %84 = call %"struct.pov::Turb_Struct"* @_ZN3povL15Search_For_TurbEPNS_12Warps_StructE(%"struct.pov::Warps_Struct"* %83)
  store %"struct.pov::Turb_Struct"* %84, %"struct.pov::Turb_Struct"** %79, align 8
  %85 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %76, align 8
  %86 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %85, i32 0, i32 10
  %87 = bitcast %union.anon.25* %86 to float*
  %88 = load float, float* %87, align 8
  %89 = fpext float %88 to double
  %90 = load double*, double** %75, align 8
  %91 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %79, align 8
  %92 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %76, align 8
  %93 = call double @_ZN3pov10TurbulenceEPdPNS_11Turb_StructEPNS_14Pattern_StructE(double* %90, %"struct.pov::Turb_Struct"* %91, %"struct.pov::Pattern_Struct"* %92)
  %_ = fsub double -0.000000e+00, %89
  %gen = fadd double %_, %93
  %_1 = fsub double %89, %93
  %gen2 = fmul double %_1, %93
  %_3 = fsub double -0.000000e+00, %89
  %gen4 = fadd double %_3, %93
  %94 = fmul double %89, %93
  store double %94, double* %78, align 8
  %95 = load double, double* %78, align 8
  %_5 = fsub double 1.300000e+00, %95
  %gen6 = fmul double %_5, %95
  %_7 = fsub double 1.300000e+00, %95
  %gen8 = fmul double %_7, %95
  %_9 = fsub double -0.000000e+00, 1.300000e+00
  %gen10 = fadd double %_9, %95
  %_11 = fsub double -0.000000e+00, 1.300000e+00
  %gen12 = fadd double %_11, %95
  %96 = fmul double 1.300000e+00, %95
  %97 = load double*, double** %75, align 8
  %98 = getelementptr inbounds double, double* %97, i64 2
  %99 = load double, double* %98, align 8
  %_13 = fsub double 1.100000e+00, %99
  %gen14 = fmul double %_13, %99
  %_15 = fsub double -0.000000e+00, 1.100000e+00
  %gen16 = fadd double %_15, %99
  %_17 = fsub double 1.100000e+00, %99
  %gen18 = fmul double %_17, %99
  %_19 = fsub double -0.000000e+00, 1.100000e+00
  %gen20 = fadd double %_19, %99
  %100 = fmul double 1.100000e+00, %99
  %_21 = fsub double %96, %100
  %gen22 = fmul double %_21, %100
  %_23 = fsub double %96, %100
  %gen24 = fmul double %_23, %100
  %_25 = fsub double -0.000000e+00, %96
  %gen26 = fadd double %_25, %100
  %_27 = fsub double -0.000000e+00, %96
  %gen28 = fadd double %_27, %100
  %_29 = fsub double %96, %100
  %gen30 = fmul double %_29, %100
  %_31 = fsub double %96, %100
  %gen32 = fmul double %_31, %100
  %_33 = fsub double -0.000000e+00, %96
  %gen34 = fadd double %_33, %100
  %_35 = fsub double %96, %100
  %gen36 = fmul double %_35, %100
  %101 = fadd double %96, %100
  %102 = call double @_ZN3pov9cycloidalEd(double %101)
  %_37 = fsub double %102, 1.000000e+00
  %gen38 = fmul double %_37, 1.000000e+00
  %_39 = fsub double -0.000000e+00, %102
  %gen40 = fadd double %_39, 1.000000e+00
  %_41 = fsub double -0.000000e+00, %102
  %gen42 = fadd double %_41, 1.000000e+00
  %_43 = fsub double %102, 1.000000e+00
  %gen44 = fmul double %_43, 1.000000e+00
  %_45 = fsub double -0.000000e+00, %102
  %gen46 = fadd double %_45, 1.000000e+00
  %103 = fadd double %102, 1.000000e+00
  %104 = fmul double 5.000000e-01, %103
  store double %104, double* %77, align 8
  %105 = load double, double* %77, align 8
  %106 = fcmp olt double %105, 0.000000e+00
  br label %originalBB

originalBB47alteredBB:                            ; preds = %originalBB47, %52
  store double 1.000000e+00, double* %16, align 8
  %107 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %16, double* dereferenceable(8) %13)
  %108 = load double, double* %107, align 8
  store double %108, double* %13, align 8
  %109 = load double, double* %13, align 8
  %110 = call double @pow(double %109, double 7.700000e-01) #7
  store double %110, double* %13, align 8
  br label %originalBB47
}

declare double @_ZN3pov5NoiseEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #1

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL13brick_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #2 {
  %3 = alloca double, align 8
  %4 = alloca double*, align 8
  %5 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca double, align 8
  store double* %0, double** %4, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %5, align 8
  %23 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %5, align 8
  %24 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %23, i32 0, i32 10
  %25 = bitcast %union.anon.25* %24 to %struct.anon.26*
  %26 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %25, i32 0, i32 0
  %27 = load float, float* %26, align 8
  %28 = fpext float %27 to double
  %29 = fadd double 1.000000e-03, %28
  store double %29, double* %22, align 8
  %30 = load double*, double** %4, align 8
  %31 = getelementptr inbounds double, double* %30, i64 0
  %32 = load double, double* %31, align 8
  %33 = load double, double* %22, align 8
  %34 = fadd double %32, %33
  store double %34, double* %19, align 8
  %35 = load double*, double** %4, align 8
  %36 = getelementptr inbounds double, double* %35, i64 1
  %37 = load double, double* %36, align 8
  %38 = load double, double* %22, align 8
  %39 = fadd double %37, %38
  store double %39, double* %20, align 8
  %40 = load double*, double** %4, align 8
  %41 = getelementptr inbounds double, double* %40, i64 2
  %42 = load double, double* %41, align 8
  %43 = load double, double* %22, align 8
  %44 = fadd double %42, %43
  store double %44, double* %21, align 8
  %45 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %5, align 8
  %46 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %45, i32 0, i32 10
  %47 = bitcast %union.anon.25* %46 to %struct.anon.26*
  %48 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %47, i32 0, i32 1
  %49 = getelementptr inbounds [3 x double], [3 x double]* %48, i64 0, i64 0
  %50 = load double, double* %49, align 8
  store double %50, double* %10, align 8
  %51 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %5, align 8
  %52 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %51, i32 0, i32 10
  %53 = bitcast %union.anon.25* %52 to %struct.anon.26*
  %54 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %53, i32 0, i32 1
  %55 = getelementptr inbounds [3 x double], [3 x double]* %54, i64 0, i64 1
  %56 = load double, double* %55, align 8
  store double %56, double* %9, align 8
  %57 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %5, align 8
  %58 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %57, i32 0, i32 10
  %59 = bitcast %union.anon.25* %58 to %struct.anon.26*
  %60 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %59, i32 0, i32 1
  %61 = getelementptr inbounds [3 x double], [3 x double]* %60, i64 0, i64 2
  %62 = load double, double* %61, align 8
  store double %62, double* %11, align 8
  %63 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %5, align 8
  %64 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %63, i32 0, i32 10
  %65 = bitcast %union.anon.25* %64 to %struct.anon.26*
  %66 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %65, i32 0, i32 0
  %67 = load float, float* %66, align 8
  %68 = fpext float %67 to double
  store double %68, double* %12, align 8
  %69 = load double, double* %12, align 8
  %70 = load double, double* %10, align 8
  %71 = fdiv double %69, %70
  store double %71, double* %14, align 8
  %72 = load double, double* %12, align 8
  %73 = load double, double* %9, align 8
  %74 = fdiv double %72, %73
  store double %74, double* %13, align 8
  %75 = load double, double* %12, align 8
  %76 = load double, double* %11, align 8
  %77 = fdiv double %75, %76
  store double %77, double* %15, align 8
  %78 = load double, double* %20, align 8
  %79 = load double, double* %9, align 8
  %80 = fdiv double %78, %79
  store double %80, double* %17, align 8
  %81 = load double, double* %17, align 8
  %82 = fptosi double %81 to i32
  store i32 %82, i32* %7, align 4
  %83 = load i32, i32* %7, align 4
  %84 = sitofp i32 %83 to double
  %85 = load double, double* %17, align 8
  %86 = fsub double %85, %84
  store double %86, double* %17, align 8
  %87 = load double, double* %17, align 8
  %88 = fcmp olt double %87, 0.000000e+00
  br i1 %88, label %89, label %92

; <label>:89:                                     ; preds = %2
  %90 = load double, double* %17, align 8
  %91 = fadd double %90, 1.000000e+00
  store double %91, double* %17, align 8
  br label %92

; <label>:92:                                     ; preds = %89, %2
  %93 = load i32, i32* @x.3
  %94 = load i32, i32* @y.4
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %92
  %101 = load double, double* %17, align 8
  %102 = load double, double* %13, align 8
  %103 = fcmp ole double %101, %102
  %104 = load i32, i32* @x.3
  %105 = load i32, i32* @y.4
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %103, label %112, label %129

; <label>:112:                                    ; preds = %originalBBpart2
  %113 = load i32, i32* @x.3
  %114 = load i32, i32* @y.4
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %112
  store double 0.000000e+00, double* %3, align 8
  %121 = load i32, i32* @x.3
  %122 = load i32, i32* @y.4
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %320

; <label>:129:                                    ; preds = %originalBBpart2
  %130 = load i32, i32* @x.3
  %131 = load i32, i32* @y.4
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %129
  %138 = load double, double* %20, align 8
  %139 = load double, double* %9, align 8
  %140 = fdiv double %138, %139
  %141 = fmul double %140, 5.000000e-01
  store double %141, double* %17, align 8
  %142 = load double, double* %17, align 8
  %143 = fptosi double %142 to i32
  store i32 %143, i32* %7, align 4
  %144 = load i32, i32* %7, align 4
  %145 = sitofp i32 %144 to double
  %146 = load double, double* %17, align 8
  %147 = fsub double %146, %145
  store double %147, double* %17, align 8
  %148 = load double, double* %17, align 8
  %149 = fcmp olt double %148, 0.000000e+00
  %150 = load i32, i32* @x.3
  %151 = load i32, i32* @y.4
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBBpart212, label %originalBB6alteredBB

originalBBpart212:                                ; preds = %originalBB6
  br i1 %149, label %158, label %161

; <label>:158:                                    ; preds = %originalBBpart212
  %159 = load double, double* %17, align 8
  %160 = fadd double %159, 1.000000e+00
  store double %160, double* %17, align 8
  br label %161

; <label>:161:                                    ; preds = %158, %originalBBpart212
  %162 = load double, double* %19, align 8
  %163 = load double, double* %10, align 8
  %164 = fdiv double %162, %163
  store double %164, double* %16, align 8
  %165 = load double, double* %16, align 8
  %166 = fptosi double %165 to i32
  store i32 %166, i32* %6, align 4
  %167 = load i32, i32* %6, align 4
  %168 = sitofp i32 %167 to double
  %169 = load double, double* %16, align 8
  %170 = fsub double %169, %168
  store double %170, double* %16, align 8
  %171 = load double, double* %16, align 8
  %172 = fcmp olt double %171, 0.000000e+00
  br i1 %172, label %173, label %176

; <label>:173:                                    ; preds = %161
  %174 = load double, double* %16, align 8
  %175 = fadd double %174, 1.000000e+00
  store double %175, double* %16, align 8
  br label %176

; <label>:176:                                    ; preds = %173, %161
  %177 = load double, double* %16, align 8
  %178 = load double, double* %14, align 8
  %179 = fcmp ole double %177, %178
  br i1 %179, label %180, label %216

; <label>:180:                                    ; preds = %176
  %181 = load i32, i32* @x.3
  %182 = load i32, i32* @y.4
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %180
  %189 = load double, double* %17, align 8
  %190 = fcmp ole double %189, 5.000000e-01
  %191 = load i32, i32* @x.3
  %192 = load i32, i32* @y.4
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %190, label %199, label %216

; <label>:199:                                    ; preds = %originalBBpart216
  %200 = load i32, i32* @x.3
  %201 = load i32, i32* @y.4
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %199
  store double 0.000000e+00, double* %3, align 8
  %208 = load i32, i32* @x.3
  %209 = load i32, i32* @y.4
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %320

; <label>:216:                                    ; preds = %originalBBpart216, %176
  %217 = load double, double* %19, align 8
  %218 = load double, double* %10, align 8
  %219 = fdiv double %217, %218
  %220 = fadd double %219, 5.000000e-01
  store double %220, double* %16, align 8
  %221 = load double, double* %16, align 8
  %222 = fptosi double %221 to i32
  store i32 %222, i32* %6, align 4
  %223 = load i32, i32* %6, align 4
  %224 = sitofp i32 %223 to double
  %225 = load double, double* %16, align 8
  %226 = fsub double %225, %224
  store double %226, double* %16, align 8
  %227 = load double, double* %16, align 8
  %228 = fcmp olt double %227, 0.000000e+00
  br i1 %228, label %229, label %232

; <label>:229:                                    ; preds = %216
  %230 = load double, double* %16, align 8
  %231 = fadd double %230, 1.000000e+00
  store double %231, double* %16, align 8
  br label %232

; <label>:232:                                    ; preds = %229, %216
  %233 = load double, double* %16, align 8
  %234 = load double, double* %14, align 8
  %235 = fcmp ole double %233, %234
  br i1 %235, label %236, label %240

; <label>:236:                                    ; preds = %232
  %237 = load double, double* %17, align 8
  %238 = fcmp ogt double %237, 5.000000e-01
  br i1 %238, label %239, label %240

; <label>:239:                                    ; preds = %236
  store double 0.000000e+00, double* %3, align 8
  br label %320

; <label>:240:                                    ; preds = %236, %232
  %241 = load double, double* %21, align 8
  %242 = load double, double* %11, align 8
  %243 = fdiv double %241, %242
  store double %243, double* %18, align 8
  %244 = load double, double* %18, align 8
  %245 = fptosi double %244 to i32
  store i32 %245, i32* %8, align 4
  %246 = load i32, i32* %8, align 4
  %247 = sitofp i32 %246 to double
  %248 = load double, double* %18, align 8
  %249 = fsub double %248, %247
  store double %249, double* %18, align 8
  %250 = load double, double* %18, align 8
  %251 = fcmp olt double %250, 0.000000e+00
  br i1 %251, label %252, label %255

; <label>:252:                                    ; preds = %240
  %253 = load double, double* %18, align 8
  %254 = fadd double %253, 1.000000e+00
  store double %254, double* %18, align 8
  br label %255

; <label>:255:                                    ; preds = %252, %240
  %256 = load i32, i32* @x.3
  %257 = load i32, i32* @y.4
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %255
  %264 = load double, double* %18, align 8
  %265 = load double, double* %15, align 8
  %266 = fcmp ole double %264, %265
  %267 = load i32, i32* @x.3
  %268 = load i32, i32* @y.4
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %266, label %275, label %279

; <label>:275:                                    ; preds = %originalBBpart224
  %276 = load double, double* %17, align 8
  %277 = fcmp ogt double %276, 5.000000e-01
  br i1 %277, label %278, label %279

; <label>:278:                                    ; preds = %275
  store double 0.000000e+00, double* %3, align 8
  br label %320

; <label>:279:                                    ; preds = %275, %originalBBpart224
  %280 = load double, double* %21, align 8
  %281 = load double, double* %11, align 8
  %282 = fdiv double %280, %281
  %283 = fadd double %282, 5.000000e-01
  store double %283, double* %18, align 8
  %284 = load double, double* %18, align 8
  %285 = fptosi double %284 to i32
  store i32 %285, i32* %8, align 4
  %286 = load i32, i32* %8, align 4
  %287 = sitofp i32 %286 to double
  %288 = load double, double* %18, align 8
  %289 = fsub double %288, %287
  store double %289, double* %18, align 8
  %290 = load double, double* %18, align 8
  %291 = fcmp olt double %290, 0.000000e+00
  br i1 %291, label %292, label %295

; <label>:292:                                    ; preds = %279
  %293 = load double, double* %18, align 8
  %294 = fadd double %293, 1.000000e+00
  store double %294, double* %18, align 8
  br label %295

; <label>:295:                                    ; preds = %292, %279
  %296 = load double, double* %18, align 8
  %297 = load double, double* %15, align 8
  %298 = fcmp ole double %296, %297
  br i1 %298, label %299, label %319

; <label>:299:                                    ; preds = %295
  %300 = load double, double* %17, align 8
  %301 = fcmp ole double %300, 5.000000e-01
  br i1 %301, label %302, label %319

; <label>:302:                                    ; preds = %299
  %303 = load i32, i32* @x.3
  %304 = load i32, i32* @y.4
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %302
  store double 0.000000e+00, double* %3, align 8
  %311 = load i32, i32* @x.3
  %312 = load i32, i32* @y.4
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %320

; <label>:319:                                    ; preds = %299, %295
  store double 1.000000e+00, double* %3, align 8
  br label %320

; <label>:320:                                    ; preds = %319, %originalBBpart228, %278, %239, %originalBBpart220, %originalBBpart24
  %321 = load i32, i32* @x.3
  %322 = load i32, i32* @y.4
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %320
  %329 = load double, double* %3, align 8
  %330 = load i32, i32* @x.3
  %331 = load i32, i32* @y.4
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  ret double %329

originalBBalteredBB:                              ; preds = %originalBB, %92
  %338 = load double, double* %17, align 8
  %339 = load double, double* %13, align 8
  %340 = fcmp ole double %338, %339
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %112
  store double 0.000000e+00, double* %3, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %129
  %341 = load double, double* %20, align 8
  %342 = load double, double* %9, align 8
  %_ = fsub double %341, %342
  %gen = fmul double %_, %342
  %343 = fdiv double %341, %342
  %_7 = fsub double %343, 5.000000e-01
  %gen8 = fmul double %_7, 5.000000e-01
  %344 = fmul double %343, 5.000000e-01
  store double %344, double* %17, align 8
  %345 = load double, double* %17, align 8
  %346 = fptosi double %345 to i32
  store i32 %346, i32* %7, align 4
  %347 = load i32, i32* %7, align 4
  %348 = sitofp i32 %347 to double
  %349 = load double, double* %17, align 8
  %_9 = fsub double %349, %348
  %gen10 = fmul double %_9, %348
  %350 = fsub double %349, %348
  store double %350, double* %17, align 8
  %351 = load double, double* %17, align 8
  %352 = fcmp olt double %351, 0.000000e+00
  br label %originalBB6

originalBB14alteredBB:                            ; preds = %originalBB14, %180
  %353 = load double, double* %17, align 8
  %354 = fcmp ole double %353, 5.000000e-01
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %199
  store double 0.000000e+00, double* %3, align 8
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %255
  %355 = load double, double* %18, align 8
  %356 = load double, double* %15, align 8
  %357 = fcmp ole double %355, %356
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %302
  store double 0.000000e+00, double* %3, align 8
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %320
  %358 = load double, double* %3, align 8
  br label %originalBB30
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL13cells_patternEPd(double*) #0 {
  %2 = load i32, i32* @x.5
  %3 = load i32, i32* @y.6
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca double*, align 8
  %11 = alloca i32, align 4
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  store double* %0, double** %10, align 8
  %14 = call i32 @_ZN3pov16POV_GET_OLD_RANDEv()
  store i32 %14, i32* %11, align 4
  %15 = load double*, double** %10, align 8
  %16 = getelementptr inbounds double, double* %15, i64 0
  %17 = load double, double* %16, align 8
  %18 = fadd double %17, 1.000000e-03
  %19 = call double @floor(double %18) #6
  %20 = fptosi double %19 to i32
  %21 = and i32 %20, 4095
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = load double*, double** %10, align 8
  %27 = getelementptr inbounds double, double* %26, i64 1
  %28 = load double, double* %27, align 8
  %29 = fadd double %28, 1.000000e-03
  %30 = call double @floor(double %29) #6
  %31 = fptosi double %30 to i32
  %32 = and i32 %31, 4095
  %33 = xor i32 %25, %32
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %34
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i32
  %38 = load double*, double** %10, align 8
  %39 = getelementptr inbounds double, double* %38, i64 2
  %40 = load double, double* %39, align 8
  %41 = fadd double %40, 1.000000e-03
  %42 = call double @floor(double %41) #6
  %43 = fptosi double %42 to i32
  %44 = and i32 %43, 4095
  %45 = xor i32 %37, %44
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %46
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  call void @_ZN3pov9POV_SRANDEi(i32 %49)
  %50 = call i32 @_ZN3pov8POV_RANDEv()
  %51 = sitofp i32 %50 to double
  %52 = fmul double %51, 0x3F0000200040021E
  store double %52, double* %12, align 8
  %53 = load i32, i32* %11, align 4
  call void @_ZN3pov9POV_SRANDEi(i32 %53)
  store double 1.000000e+00, double* %13, align 8
  %54 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %12, double* dereferenceable(8) %13)
  %55 = load double, double* %54, align 8
  %56 = load i32, i32* @x.5
  %57 = load i32, i32* @y.6
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double %55

originalBBalteredBB:                              ; preds = %originalBB, %1
  %64 = alloca double*, align 8
  %65 = alloca i32, align 4
  %66 = alloca double, align 8
  %67 = alloca double, align 8
  store double* %0, double** %64, align 8
  %68 = call i32 @_ZN3pov16POV_GET_OLD_RANDEv()
  store i32 %68, i32* %65, align 4
  %69 = load double*, double** %64, align 8
  %70 = getelementptr inbounds double, double* %69, i64 0
  %71 = load double, double* %70, align 8
  %_ = fsub double -0.000000e+00, %71
  %gen = fadd double %_, 1.000000e-03
  %_1 = fsub double %71, 1.000000e-03
  %gen2 = fmul double %_1, 1.000000e-03
  %_3 = fsub double %71, 1.000000e-03
  %gen4 = fmul double %_3, 1.000000e-03
  %_5 = fsub double -0.000000e+00, %71
  %gen6 = fadd double %_5, 1.000000e-03
  %_7 = fsub double %71, 1.000000e-03
  %gen8 = fmul double %_7, 1.000000e-03
  %_9 = fsub double -0.000000e+00, %71
  %gen10 = fadd double %_9, 1.000000e-03
  %_11 = fsub double %71, 1.000000e-03
  %gen12 = fmul double %_11, 1.000000e-03
  %72 = fadd double %71, 1.000000e-03
  %73 = call double @floor(double %72) #6
  %74 = fptosi double %73 to i32
  %_13 = sub i32 0, %74
  %gen14 = add i32 %_13, 4095
  %_15 = shl i32 %74, 4095
  %_16 = sub i32 %74, 4095
  %gen17 = mul i32 %_16, 4095
  %_18 = shl i32 %74, 4095
  %75 = and i32 %74, 4095
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %76
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = load double*, double** %64, align 8
  %81 = getelementptr inbounds double, double* %80, i64 1
  %82 = load double, double* %81, align 8
  %_19 = fsub double -0.000000e+00, %82
  %gen20 = fadd double %_19, 1.000000e-03
  %_21 = fsub double %82, 1.000000e-03
  %gen22 = fmul double %_21, 1.000000e-03
  %_23 = fsub double %82, 1.000000e-03
  %gen24 = fmul double %_23, 1.000000e-03
  %_25 = fsub double -0.000000e+00, %82
  %gen26 = fadd double %_25, 1.000000e-03
  %_27 = fsub double %82, 1.000000e-03
  %gen28 = fmul double %_27, 1.000000e-03
  %83 = fadd double %82, 1.000000e-03
  %84 = call double @floor(double %83) #6
  %85 = fptosi double %84 to i32
  %_29 = sub i32 0, %85
  %gen30 = add i32 %_29, 4095
  %_31 = shl i32 %85, 4095
  %_32 = sub i32 %85, 4095
  %gen33 = mul i32 %_32, 4095
  %_34 = shl i32 %85, 4095
  %_35 = shl i32 %85, 4095
  %86 = and i32 %85, 4095
  %_36 = sub i32 %79, %86
  %gen37 = mul i32 %_36, %86
  %_38 = sub i32 %79, %86
  %gen39 = mul i32 %_38, %86
  %_40 = sub i32 0, %79
  %gen41 = add i32 %_40, %86
  %_42 = sub i32 %79, %86
  %gen43 = mul i32 %_42, %86
  %_44 = shl i32 %79, %86
  %_45 = sub i32 %79, %86
  %gen46 = mul i32 %_45, %86
  %_47 = sub i32 0, %79
  %gen48 = add i32 %_47, %86
  %87 = xor i32 %79, %86
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = load double*, double** %64, align 8
  %93 = getelementptr inbounds double, double* %92, i64 2
  %94 = load double, double* %93, align 8
  %_49 = fsub double %94, 1.000000e-03
  %gen50 = fmul double %_49, 1.000000e-03
  %_51 = fsub double -0.000000e+00, %94
  %gen52 = fadd double %_51, 1.000000e-03
  %_53 = fsub double -0.000000e+00, %94
  %gen54 = fadd double %_53, 1.000000e-03
  %_55 = fsub double -0.000000e+00, %94
  %gen56 = fadd double %_55, 1.000000e-03
  %_57 = fsub double -0.000000e+00, %94
  %gen58 = fadd double %_57, 1.000000e-03
  %95 = fadd double %94, 1.000000e-03
  %96 = call double @floor(double %95) #6
  %97 = fptosi double %96 to i32
  %98 = and i32 %97, 4095
  %_59 = sub i32 %91, %98
  %gen60 = mul i32 %_59, %98
  %_61 = sub i32 0, %91
  %gen62 = add i32 %_61, %98
  %99 = xor i32 %91, %98
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %100
  %102 = load i16, i16* %101, align 2
  %103 = zext i16 %102 to i32
  call void @_ZN3pov9POV_SRANDEi(i32 %103)
  %104 = call i32 @_ZN3pov8POV_RANDEv()
  %105 = sitofp i32 %104 to double
  %_63 = fsub double %105, 0x3F0000200040021E
  %gen64 = fmul double %_63, 0x3F0000200040021E
  %_65 = fsub double -0.000000e+00, %105
  %gen66 = fadd double %_65, 0x3F0000200040021E
  %_67 = fsub double %105, 0x3F0000200040021E
  %gen68 = fmul double %_67, 0x3F0000200040021E
  %_69 = fsub double %105, 0x3F0000200040021E
  %gen70 = fmul double %_69, 0x3F0000200040021E
  %_71 = fsub double -0.000000e+00, %105
  %gen72 = fadd double %_71, 0x3F0000200040021E
  %106 = fmul double %105, 0x3F0000200040021E
  store double %106, double* %66, align 8
  %107 = load i32, i32* %65, align 4
  call void @_ZN3pov9POV_SRANDEi(i32 %107)
  store double 1.000000e+00, double* %67, align 8
  %108 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %66, double* dereferenceable(8) %67)
  %109 = load double, double* %108, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL15checker_patternEPd(double*) #2 {
  %2 = alloca double, align 8
  %3 = alloca double*, align 8
  %4 = alloca i32, align 4
  store double* %0, double** %3, align 8
  %5 = load double*, double** %3, align 8
  %6 = getelementptr inbounds double, double* %5, i64 0
  %7 = load double, double* %6, align 8
  %8 = fadd double %7, 1.000000e-03
  %9 = call double @floor(double %8) #6
  %10 = load double*, double** %3, align 8
  %11 = getelementptr inbounds double, double* %10, i64 1
  %12 = load double, double* %11, align 8
  %13 = fadd double %12, 1.000000e-03
  %14 = call double @floor(double %13) #6
  %15 = fadd double %9, %14
  %16 = load double*, double** %3, align 8
  %17 = getelementptr inbounds double, double* %16, i64 2
  %18 = load double, double* %17, align 8
  %19 = fadd double %18, 1.000000e-03
  %20 = call double @floor(double %19) #6
  %21 = fadd double %15, %20
  %22 = fptosi double %21 to i32
  store i32 %22, i32* %4, align 4
  %23 = load i32, i32* %4, align 4
  %24 = and i32 %23, 1
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %1
  store double 1.000000e+00, double* %2, align 8
  br label %28

; <label>:27:                                     ; preds = %1
  store double 0.000000e+00, double* %2, align 8
  br label %28

; <label>:28:                                     ; preds = %27, %26
  %29 = load double, double* %2, align 8
  ret double %29
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL15crackle_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca [3 x double], align 16
  %13 = alloca [3 x double], align 16
  %14 = alloca [3 x double], align 16
  %15 = alloca [3 x double], align 16
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca [3 x double], align 16
  %20 = alloca i32, align 4
  %21 = alloca double, align 8
  %22 = alloca double, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca double, align 8
  %29 = alloca double, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %30 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %31 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %30, i32 0, i32 10
  %32 = bitcast %union.anon.25* %31 to %struct.anon.29*
  %33 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %32, i32 0, i32 1
  %34 = getelementptr inbounds [3 x double], [3 x double]* %33, i64 0, i64 0
  %35 = load double, double* %34, align 8
  store double %35, double* %21, align 8
  %36 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %37 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %36, i32 0, i32 10
  %38 = bitcast %union.anon.25* %37 to %struct.anon.29*
  %39 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %38, i32 0, i32 2
  %40 = load double, double* %39, align 8
  store double %40, double* %22, align 8
  %41 = load double, double* %21, align 8
  %42 = fcmp oeq double %41, 2.000000e+00
  %43 = zext i1 %42 to i32
  store i32 %43, i32* %23, align 4
  %44 = load double, double* %21, align 8
  %45 = fcmp oeq double %44, 1.000000e+00
  %46 = zext i1 %45 to i32
  store i32 %46, i32* %24, align 4
  %47 = getelementptr inbounds [3 x double], [3 x double]* %13, i32 0, i32 0
  %48 = load double*, double** %3, align 8
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %47, double* %48)
  %49 = getelementptr inbounds [3 x double], [3 x double]* %13, i32 0, i32 0
  %50 = getelementptr inbounds [3 x double], [3 x double]* %15, i32 0, i32 0
  %51 = call i32 @_ZN3pov10PickInCubeEPdS0_(double* %49, double* %50)
  store i32 %51, i32* %6, align 4
  %52 = load i32, i32* %6, align 4
  %53 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %54 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %53, i32 0, i32 10
  %55 = bitcast %union.anon.25* %54 to %struct.anon.29*
  %56 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %55, i32 0, i32 6
  %57 = load i32, i32* %56, align 8
  %58 = icmp ne i32 %52, %57
  br i1 %58, label %59, label %277

; <label>:59:                                     ; preds = %2
  %60 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 0, i64 0
  %61 = load double, double* %60, align 16
  %62 = fsub double %61, 1.000000e-07
  %63 = call double @floor(double %62) #6
  %64 = getelementptr inbounds [3 x double], [3 x double]* %19, i64 0, i64 0
  store double %63, double* %64, align 16
  %65 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 0, i64 1
  %66 = load double, double* %65, align 8
  %67 = fsub double %66, 1.000000e-07
  %68 = call double @floor(double %67) #6
  %69 = getelementptr inbounds [3 x double], [3 x double]* %19, i64 0, i64 1
  store double %68, double* %69, align 8
  %70 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 0, i64 2
  %71 = load double, double* %70, align 16
  %72 = fsub double %71, 1.000000e-07
  %73 = call double @floor(double %72) #6
  %74 = getelementptr inbounds [3 x double], [3 x double]* %19, i64 0, i64 2
  store double %73, double* %74, align 16
  %75 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %76 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %75, i32 0, i32 10
  %77 = bitcast %union.anon.25* %76 to %struct.anon.29*
  %78 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %77, i32 0, i32 7
  %79 = getelementptr inbounds [3 x double], [3 x double]* %78, i32 0, i32 0
  %80 = getelementptr inbounds [3 x double], [3 x double]* %19, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %79, double* %80)
  store i32 6, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE4vals, i64 0, i64 0), align 4
  store i32 7, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE4vals, i64 0, i64 1), align 4
  store i32 8, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE4vals, i64 0, i64 2), align 4
  %81 = getelementptr inbounds [3 x double], [3 x double]* %19, i64 0, i64 0
  %82 = load double, double* %81, align 16
  %83 = fptosi double %82 to i32
  store i32 %83, i32* %25, align 4
  %84 = getelementptr inbounds [3 x double], [3 x double]* %19, i64 0, i64 1
  %85 = load double, double* %84, align 8
  %86 = fptosi double %85 to i32
  store i32 %86, i32* %26, align 4
  %87 = getelementptr inbounds [3 x double], [3 x double]* %19, i64 0, i64 2
  %88 = load double, double* %87, align 16
  %89 = fptosi double %88 to i32
  store i32 %89, i32* %27, align 4
  store i32 -2, i32* %16, align 4
  br label %90

; <label>:90:                                     ; preds = %268, %59
  %91 = load i32, i32* @x.9
  %92 = load i32, i32* @y.10
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %90
  %99 = load i32, i32* %16, align 4
  %100 = icmp sle i32 %99, 2
  %101 = load i32, i32* @x.9
  %102 = load i32, i32* @y.10
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %100, label %109, label %271

; <label>:109:                                    ; preds = %originalBBpart2
  %110 = load i32, i32* @x.9
  %111 = load i32, i32* @y.10
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %109
  store i32 -2, i32* %17, align 4
  %118 = load i32, i32* @x.9
  %119 = load i32, i32* @y.10
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %126

; <label>:126:                                    ; preds = %248, %originalBBpart24
  %127 = load i32, i32* %17, align 4
  %128 = icmp sle i32 %127, 2
  br i1 %128, label %129, label %251

; <label>:129:                                    ; preds = %126
  %130 = load i32, i32* @x.9
  %131 = load i32, i32* @y.10
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %129
  store i32 -2, i32* %18, align 4
  %138 = load i32, i32* @x.9
  %139 = load i32, i32* @y.10
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %146

; <label>:146:                                    ; preds = %228, %originalBBpart28
  %147 = load i32, i32* %18, align 4
  %148 = icmp sle i32 %147, 2
  br i1 %148, label %149, label %231

; <label>:149:                                    ; preds = %146
  %150 = load i32, i32* %16, align 4
  %151 = add nsw i32 2, %150
  %152 = mul nsw i32 25, %151
  %153 = load i32, i32* %17, align 4
  %154 = add nsw i32 2, %153
  %155 = mul nsw i32 5, %154
  %156 = add nsw i32 %152, %155
  %157 = add nsw i32 %156, 2
  %158 = load i32, i32* %18, align 4
  %159 = add nsw i32 %157, %158
  store i32 %159, i32* %20, align 4
  %160 = load i32, i32* %16, align 4
  %161 = call i32 @abs(i32 %160) #6
  %162 = icmp eq i32 %161, 2
  %163 = zext i1 %162 to i32
  %164 = load i32, i32* %17, align 4
  %165 = call i32 @abs(i32 %164) #6
  %166 = icmp eq i32 %165, 2
  %167 = zext i1 %166 to i32
  %168 = add nsw i32 %163, %167
  %169 = load i32, i32* %18, align 4
  %170 = call i32 @abs(i32 %169) #6
  %171 = icmp eq i32 %170, 2
  %172 = zext i1 %171 to i32
  %173 = add nsw i32 %168, %172
  %174 = icmp sle i32 %173, 1
  br i1 %174, label %175, label %223

; <label>:175:                                    ; preds = %149
  %176 = load i32, i32* %25, align 4
  %177 = load i32, i32* %16, align 4
  %178 = add nsw i32 %176, %177
  %179 = load i32, i32* %26, align 4
  %180 = load i32, i32* %17, align 4
  %181 = add nsw i32 %179, %180
  %182 = load i32, i32* %27, align 4
  %183 = load i32, i32* %18, align 4
  %184 = add nsw i32 %182, %183
  %185 = getelementptr inbounds [3 x double], [3 x double]* %15, i32 0, i32 0
  %186 = call i32 @_ZN3povL13IntPickInCubeEiiiPd(i32 %178, i32 %181, i32 %184, double* %185)
  %187 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 0
  %188 = load double, double* %187, align 16
  %189 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %190 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %189, i32 0, i32 10
  %191 = bitcast %union.anon.25* %190 to %struct.anon.29*
  %192 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %191, i32 0, i32 5
  %193 = load [3 x double]*, [3 x double]** %192, align 8
  %194 = load i32, i32* %20, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds [3 x double], [3 x double]* %193, i64 %195
  %197 = getelementptr inbounds [3 x double], [3 x double]* %196, i64 0, i64 0
  store double %188, double* %197, align 8
  %198 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 1
  %199 = load double, double* %198, align 8
  %200 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %201 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %200, i32 0, i32 10
  %202 = bitcast %union.anon.25* %201 to %struct.anon.29*
  %203 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %202, i32 0, i32 5
  %204 = load [3 x double]*, [3 x double]** %203, align 8
  %205 = load i32, i32* %20, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [3 x double], [3 x double]* %204, i64 %206
  %208 = getelementptr inbounds [3 x double], [3 x double]* %207, i64 0, i64 1
  store double %199, double* %208, align 8
  %209 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 2
  %210 = load double, double* %209, align 16
  %211 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %212 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %211, i32 0, i32 10
  %213 = bitcast %union.anon.25* %212 to %struct.anon.29*
  %214 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %213, i32 0, i32 5
  %215 = load [3 x double]*, [3 x double]** %214, align 8
  %216 = load i32, i32* %20, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [3 x double], [3 x double]* %215, i64 %217
  %219 = getelementptr inbounds [3 x double], [3 x double]* %218, i64 0, i64 2
  store double %210, double* %219, align 8
  %220 = load i32, i32* %20, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [125 x i32], [125 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE5valid, i64 0, i64 %221
  store i32 1, i32* %222, align 4
  br label %227

; <label>:223:                                    ; preds = %149
  %224 = load i32, i32* %20, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds [125 x i32], [125 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE5valid, i64 0, i64 %225
  store i32 0, i32* %226, align 4
  br label %227

; <label>:227:                                    ; preds = %223, %175
  br label %228

; <label>:228:                                    ; preds = %227
  %229 = load i32, i32* %18, align 4
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %18, align 4
  br label %146

; <label>:231:                                    ; preds = %146
  %232 = load i32, i32* @x.9
  %233 = load i32, i32* @y.10
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %231
  %240 = load i32, i32* @x.9
  %241 = load i32, i32* @y.10
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %248

; <label>:248:                                    ; preds = %originalBBpart212
  %249 = load i32, i32* %17, align 4
  %250 = add nsw i32 %249, 1
  store i32 %250, i32* %17, align 4
  br label %126

; <label>:251:                                    ; preds = %126
  %252 = load i32, i32* @x.9
  %253 = load i32, i32* @y.10
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %251
  %260 = load i32, i32* @x.9
  %261 = load i32, i32* @y.10
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %268

; <label>:268:                                    ; preds = %originalBBpart216
  %269 = load i32, i32* %16, align 4
  %270 = add nsw i32 %269, 1
  store i32 %270, i32* %16, align 4
  br label %90

; <label>:271:                                    ; preds = %originalBBpart2
  %272 = load i32, i32* %6, align 4
  %273 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %274 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %273, i32 0, i32 10
  %275 = bitcast %union.anon.25* %274 to %struct.anon.29*
  %276 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %275, i32 0, i32 6
  store i32 %272, i32* %276, align 8
  br label %277

; <label>:277:                                    ; preds = %271, %2
  store i32 125, i32* %20, align 4
  %278 = getelementptr inbounds [3 x double], [3 x double]* %14, i32 0, i32 0
  %279 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %280 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %279, i32 0, i32 10
  %281 = bitcast %union.anon.25* %280 to %struct.anon.29*
  %282 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %281, i32 0, i32 5
  %283 = load [3 x double]*, [3 x double]** %282, align 8
  %284 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE4vals, i64 0, i64 0), align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds [3 x double], [3 x double]* %283, i64 %285
  %287 = getelementptr inbounds [3 x double], [3 x double]* %286, i32 0, i32 0
  %288 = getelementptr inbounds [3 x double], [3 x double]* %13, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %278, double* %287, double* %288)
  %289 = load i32, i32* %23, align 4
  %290 = icmp ne i32 %289, 0
  br i1 %290, label %291, label %319

; <label>:291:                                    ; preds = %277
  %292 = getelementptr inbounds [3 x double], [3 x double]* %14, i32 0, i32 0
  %293 = call double @_ZN3pov7VSumSqrEPd(double* %292)
  store double %293, double* %8, align 8
  %294 = load double, double* %22, align 8
  %295 = fcmp une double %294, 0.000000e+00
  br i1 %295, label %296, label %318

; <label>:296:                                    ; preds = %291
  %297 = load i32, i32* @x.9
  %298 = load i32, i32* @y.10
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %296
  %305 = load double, double* %22, align 8
  %306 = load double, double* %22, align 8
  %307 = fmul double %305, %306
  %308 = load double, double* %8, align 8
  %309 = fadd double %308, %307
  store double %309, double* %8, align 8
  %310 = load i32, i32* @x.9
  %311 = load i32, i32* @y.10
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBBpart228, label %originalBB18alteredBB

originalBBpart228:                                ; preds = %originalBB18
  br label %318

; <label>:318:                                    ; preds = %originalBBpart228, %291
  br label %449

; <label>:319:                                    ; preds = %277
  %320 = load i32, i32* @x.9
  %321 = load i32, i32* @y.10
  %322 = sub i32 %320, 1
  %323 = mul i32 %320, %322
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %325, %326
  br i1 %327, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %319
  %328 = load i32, i32* %24, align 4
  %329 = icmp ne i32 %328, 0
  %330 = load i32, i32* @x.9
  %331 = load i32, i32* @y.10
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %329, label %338, label %405

; <label>:338:                                    ; preds = %originalBBpart232
  %339 = load i32, i32* @x.9
  %340 = load i32, i32* @y.10
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %originalBB34alteredBB, %338
  %347 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0
  %348 = load double, double* %347, align 16
  %349 = call double @fabs(double %348) #6
  %350 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 1
  %351 = load double, double* %350, align 8
  %352 = call double @fabs(double %351) #6
  %353 = fadd double %349, %352
  %354 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 2
  %355 = load double, double* %354, align 16
  %356 = call double @fabs(double %355) #6
  %357 = fadd double %353, %356
  store double %357, double* %8, align 8
  %358 = load double, double* %22, align 8
  %359 = fcmp une double %358, 0.000000e+00
  %360 = load i32, i32* @x.9
  %361 = load i32, i32* @y.10
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBBpart256, label %originalBB34alteredBB

originalBBpart256:                                ; preds = %originalBB34
  br i1 %359, label %368, label %388

; <label>:368:                                    ; preds = %originalBBpart256
  %369 = load i32, i32* @x.9
  %370 = load i32, i32* @y.10
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %368
  %377 = load double, double* %22, align 8
  %378 = load double, double* %8, align 8
  %379 = fadd double %378, %377
  store double %379, double* %8, align 8
  %380 = load i32, i32* @x.9
  %381 = load i32, i32* @y.10
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBBpart262, label %originalBB58alteredBB

originalBBpart262:                                ; preds = %originalBB58
  br label %388

; <label>:388:                                    ; preds = %originalBBpart262, %originalBBpart256
  %389 = load i32, i32* @x.9
  %390 = load i32, i32* @y.10
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %originalBB64alteredBB, %388
  %397 = load i32, i32* @x.9
  %398 = load i32, i32* @y.10
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br label %432

; <label>:405:                                    ; preds = %originalBBpart232
  %406 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0
  %407 = load double, double* %406, align 16
  %408 = call double @fabs(double %407) #6
  %409 = load double, double* %21, align 8
  %410 = call double @pow(double %408, double %409) #7
  %411 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 1
  %412 = load double, double* %411, align 8
  %413 = call double @fabs(double %412) #6
  %414 = load double, double* %21, align 8
  %415 = call double @pow(double %413, double %414) #7
  %416 = fadd double %410, %415
  %417 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 2
  %418 = load double, double* %417, align 16
  %419 = call double @fabs(double %418) #6
  %420 = load double, double* %21, align 8
  %421 = call double @pow(double %419, double %420) #7
  %422 = fadd double %416, %421
  store double %422, double* %8, align 8
  %423 = load double, double* %22, align 8
  %424 = fcmp une double %423, 0.000000e+00
  br i1 %424, label %425, label %431

; <label>:425:                                    ; preds = %405
  %426 = load double, double* %22, align 8
  %427 = load double, double* %21, align 8
  %428 = call double @pow(double %426, double %427) #7
  %429 = load double, double* %8, align 8
  %430 = fadd double %429, %428
  store double %430, double* %8, align 8
  br label %431

; <label>:431:                                    ; preds = %425, %405
  br label %432

; <label>:432:                                    ; preds = %431, %originalBBpart266
  %433 = load i32, i32* @x.9
  %434 = load i32, i32* @y.10
  %435 = sub i32 %433, 1
  %436 = mul i32 %433, %435
  %437 = urem i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %438, %439
  br i1 %440, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %originalBB68alteredBB, %432
  %441 = load i32, i32* @x.9
  %442 = load i32, i32* @y.10
  %443 = sub i32 %441, 1
  %444 = mul i32 %441, %443
  %445 = urem i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %446, %447
  br i1 %448, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  br label %449

; <label>:449:                                    ; preds = %originalBBpart270, %318
  %450 = getelementptr inbounds [3 x double], [3 x double]* %12, i32 0, i32 0
  %451 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %452 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %451, i32 0, i32 10
  %453 = bitcast %union.anon.25* %452 to %struct.anon.29*
  %454 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %453, i32 0, i32 5
  %455 = load [3 x double]*, [3 x double]** %454, align 8
  %456 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE4vals, i64 0, i64 0), align 4
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds [3 x double], [3 x double]* %455, i64 %457
  %459 = getelementptr inbounds [3 x double], [3 x double]* %458, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %450, double* %459)
  %460 = getelementptr inbounds [3 x double], [3 x double]* %14, i32 0, i32 0
  %461 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %462 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %461, i32 0, i32 10
  %463 = bitcast %union.anon.25* %462 to %struct.anon.29*
  %464 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %463, i32 0, i32 5
  %465 = load [3 x double]*, [3 x double]** %464, align 8
  %466 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE4vals, i64 0, i64 1), align 4
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds [3 x double], [3 x double]* %465, i64 %467
  %469 = getelementptr inbounds [3 x double], [3 x double]* %468, i32 0, i32 0
  %470 = getelementptr inbounds [3 x double], [3 x double]* %13, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %460, double* %469, double* %470)
  %471 = load i32, i32* %23, align 4
  %472 = icmp ne i32 %471, 0
  br i1 %472, label %473, label %485

; <label>:473:                                    ; preds = %449
  %474 = getelementptr inbounds [3 x double], [3 x double]* %14, i32 0, i32 0
  %475 = call double @_ZN3pov7VSumSqrEPd(double* %474)
  store double %475, double* %9, align 8
  %476 = load double, double* %22, align 8
  %477 = fcmp une double %476, 0.000000e+00
  br i1 %477, label %478, label %484

; <label>:478:                                    ; preds = %473
  %479 = load double, double* %22, align 8
  %480 = load double, double* %22, align 8
  %481 = fmul double %479, %480
  %482 = load double, double* %9, align 8
  %483 = fadd double %482, %481
  store double %483, double* %9, align 8
  br label %484

; <label>:484:                                    ; preds = %478, %473
  br label %535

; <label>:485:                                    ; preds = %449
  %486 = load i32, i32* %24, align 4
  %487 = icmp ne i32 %486, 0
  br i1 %487, label %488, label %507

; <label>:488:                                    ; preds = %485
  %489 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0
  %490 = load double, double* %489, align 16
  %491 = call double @fabs(double %490) #6
  %492 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 1
  %493 = load double, double* %492, align 8
  %494 = call double @fabs(double %493) #6
  %495 = fadd double %491, %494
  %496 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 2
  %497 = load double, double* %496, align 16
  %498 = call double @fabs(double %497) #6
  %499 = fadd double %495, %498
  store double %499, double* %9, align 8
  %500 = load double, double* %22, align 8
  %501 = fcmp une double %500, 0.000000e+00
  br i1 %501, label %502, label %506

; <label>:502:                                    ; preds = %488
  %503 = load double, double* %22, align 8
  %504 = load double, double* %9, align 8
  %505 = fadd double %504, %503
  store double %505, double* %9, align 8
  br label %506

; <label>:506:                                    ; preds = %502, %488
  br label %534

; <label>:507:                                    ; preds = %485
  %508 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0
  %509 = load double, double* %508, align 16
  %510 = call double @fabs(double %509) #6
  %511 = load double, double* %21, align 8
  %512 = call double @pow(double %510, double %511) #7
  %513 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 1
  %514 = load double, double* %513, align 8
  %515 = call double @fabs(double %514) #6
  %516 = load double, double* %21, align 8
  %517 = call double @pow(double %515, double %516) #7
  %518 = fadd double %512, %517
  %519 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 2
  %520 = load double, double* %519, align 16
  %521 = call double @fabs(double %520) #6
  %522 = load double, double* %21, align 8
  %523 = call double @pow(double %521, double %522) #7
  %524 = fadd double %518, %523
  store double %524, double* %9, align 8
  %525 = load double, double* %22, align 8
  %526 = fcmp une double %525, 0.000000e+00
  br i1 %526, label %527, label %533

; <label>:527:                                    ; preds = %507
  %528 = load double, double* %22, align 8
  %529 = load double, double* %21, align 8
  %530 = call double @pow(double %528, double %529) #7
  %531 = load double, double* %9, align 8
  %532 = fadd double %531, %530
  store double %532, double* %9, align 8
  br label %533

; <label>:533:                                    ; preds = %527, %507
  br label %534

; <label>:534:                                    ; preds = %533, %506
  br label %535

; <label>:535:                                    ; preds = %534, %484
  %536 = getelementptr inbounds [3 x double], [3 x double]* %14, i32 0, i32 0
  %537 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %538 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %537, i32 0, i32 10
  %539 = bitcast %union.anon.25* %538 to %struct.anon.29*
  %540 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %539, i32 0, i32 5
  %541 = load [3 x double]*, [3 x double]** %540, align 8
  %542 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE4vals, i64 0, i64 2), align 4
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds [3 x double], [3 x double]* %541, i64 %543
  %545 = getelementptr inbounds [3 x double], [3 x double]* %544, i32 0, i32 0
  %546 = getelementptr inbounds [3 x double], [3 x double]* %13, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %536, double* %545, double* %546)
  %547 = load i32, i32* %23, align 4
  %548 = icmp ne i32 %547, 0
  br i1 %548, label %549, label %593

; <label>:549:                                    ; preds = %535
  %550 = load i32, i32* @x.9
  %551 = load i32, i32* @y.10
  %552 = sub i32 %550, 1
  %553 = mul i32 %550, %552
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %551, 10
  %557 = or i1 %555, %556
  br i1 %557, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %originalBB72alteredBB, %549
  %558 = getelementptr inbounds [3 x double], [3 x double]* %14, i32 0, i32 0
  %559 = call double @_ZN3pov7VSumSqrEPd(double* %558)
  store double %559, double* %10, align 8
  %560 = load double, double* %22, align 8
  %561 = fcmp une double %560, 0.000000e+00
  %562 = load i32, i32* @x.9
  %563 = load i32, i32* @y.10
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br i1 %561, label %570, label %576

; <label>:570:                                    ; preds = %originalBBpart274
  %571 = load double, double* %22, align 8
  %572 = load double, double* %22, align 8
  %573 = fmul double %571, %572
  %574 = load double, double* %10, align 8
  %575 = fadd double %574, %573
  store double %575, double* %10, align 8
  br label %576

; <label>:576:                                    ; preds = %570, %originalBBpart274
  %577 = load i32, i32* @x.9
  %578 = load i32, i32* @y.10
  %579 = sub i32 %577, 1
  %580 = mul i32 %577, %579
  %581 = urem i32 %580, 2
  %582 = icmp eq i32 %581, 0
  %583 = icmp slt i32 %578, 10
  %584 = or i1 %582, %583
  br i1 %584, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %originalBB76alteredBB, %576
  %585 = load i32, i32* @x.9
  %586 = load i32, i32* @y.10
  %587 = sub i32 %585, 1
  %588 = mul i32 %585, %587
  %589 = urem i32 %588, 2
  %590 = icmp eq i32 %589, 0
  %591 = icmp slt i32 %586, 10
  %592 = or i1 %590, %591
  br i1 %592, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br label %675

; <label>:593:                                    ; preds = %535
  %594 = load i32, i32* %24, align 4
  %595 = icmp ne i32 %594, 0
  br i1 %595, label %596, label %631

; <label>:596:                                    ; preds = %593
  %597 = load i32, i32* @x.9
  %598 = load i32, i32* @y.10
  %599 = sub i32 %597, 1
  %600 = mul i32 %597, %599
  %601 = urem i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = icmp slt i32 %598, 10
  %604 = or i1 %602, %603
  br i1 %604, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %originalBB80alteredBB, %596
  %605 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0
  %606 = load double, double* %605, align 16
  %607 = call double @fabs(double %606) #6
  %608 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 1
  %609 = load double, double* %608, align 8
  %610 = call double @fabs(double %609) #6
  %611 = fadd double %607, %610
  %612 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 2
  %613 = load double, double* %612, align 16
  %614 = call double @fabs(double %613) #6
  %615 = fadd double %611, %614
  store double %615, double* %10, align 8
  %616 = load double, double* %22, align 8
  %617 = fcmp une double %616, 0.000000e+00
  %618 = load i32, i32* @x.9
  %619 = load i32, i32* @y.10
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBBpart2104, label %originalBB80alteredBB

originalBBpart2104:                               ; preds = %originalBB80
  br i1 %617, label %626, label %630

; <label>:626:                                    ; preds = %originalBBpart2104
  %627 = load double, double* %22, align 8
  %628 = load double, double* %10, align 8
  %629 = fadd double %628, %627
  store double %629, double* %10, align 8
  br label %630

; <label>:630:                                    ; preds = %626, %originalBBpart2104
  br label %674

; <label>:631:                                    ; preds = %593
  %632 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0
  %633 = load double, double* %632, align 16
  %634 = call double @fabs(double %633) #6
  %635 = load double, double* %21, align 8
  %636 = call double @pow(double %634, double %635) #7
  %637 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 1
  %638 = load double, double* %637, align 8
  %639 = call double @fabs(double %638) #6
  %640 = load double, double* %21, align 8
  %641 = call double @pow(double %639, double %640) #7
  %642 = fadd double %636, %641
  %643 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 2
  %644 = load double, double* %643, align 16
  %645 = call double @fabs(double %644) #6
  %646 = load double, double* %21, align 8
  %647 = call double @pow(double %645, double %646) #7
  %648 = fadd double %642, %647
  store double %648, double* %10, align 8
  %649 = load double, double* %22, align 8
  %650 = fcmp une double %649, 0.000000e+00
  br i1 %650, label %651, label %673

; <label>:651:                                    ; preds = %631
  %652 = load i32, i32* @x.9
  %653 = load i32, i32* @y.10
  %654 = sub i32 %652, 1
  %655 = mul i32 %652, %654
  %656 = urem i32 %655, 2
  %657 = icmp eq i32 %656, 0
  %658 = icmp slt i32 %653, 10
  %659 = or i1 %657, %658
  br i1 %659, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %originalBB106alteredBB, %651
  %660 = load double, double* %22, align 8
  %661 = load double, double* %21, align 8
  %662 = call double @pow(double %660, double %661) #7
  %663 = load double, double* %10, align 8
  %664 = fadd double %663, %662
  store double %664, double* %10, align 8
  %665 = load i32, i32* @x.9
  %666 = load i32, i32* @y.10
  %667 = sub i32 %665, 1
  %668 = mul i32 %665, %667
  %669 = urem i32 %668, 2
  %670 = icmp eq i32 %669, 0
  %671 = icmp slt i32 %666, 10
  %672 = or i1 %670, %671
  br i1 %672, label %originalBBpart2112, label %originalBB106alteredBB

originalBBpart2112:                               ; preds = %originalBB106
  br label %673

; <label>:673:                                    ; preds = %originalBBpart2112, %631
  br label %674

; <label>:674:                                    ; preds = %673, %630
  br label %675

; <label>:675:                                    ; preds = %674, %originalBBpart278
  %676 = load i32, i32* @x.9
  %677 = load i32, i32* @y.10
  %678 = sub i32 %676, 1
  %679 = mul i32 %676, %678
  %680 = urem i32 %679, 2
  %681 = icmp eq i32 %680, 0
  %682 = icmp slt i32 %677, 10
  %683 = or i1 %681, %682
  br i1 %683, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %originalBB114alteredBB, %675
  %684 = load double, double* %9, align 8
  %685 = load double, double* %8, align 8
  %686 = fcmp olt double %684, %685
  %687 = load i32, i32* @x.9
  %688 = load i32, i32* @y.10
  %689 = sub i32 %687, 1
  %690 = mul i32 %687, %689
  %691 = urem i32 %690, 2
  %692 = icmp eq i32 %691, 0
  %693 = icmp slt i32 %688, 10
  %694 = or i1 %692, %693
  br i1 %694, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br i1 %686, label %695, label %725

; <label>:695:                                    ; preds = %originalBBpart2116
  %696 = load i32, i32* @x.9
  %697 = load i32, i32* @y.10
  %698 = sub i32 %696, 1
  %699 = mul i32 %696, %698
  %700 = urem i32 %699, 2
  %701 = icmp eq i32 %700, 0
  %702 = icmp slt i32 %697, 10
  %703 = or i1 %701, %702
  br i1 %703, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %originalBB118alteredBB, %695
  %704 = load double, double* %8, align 8
  store double %704, double* %11, align 8
  %705 = load double, double* %9, align 8
  store double %705, double* %8, align 8
  %706 = load double, double* %11, align 8
  store double %706, double* %9, align 8
  %707 = getelementptr inbounds [3 x double], [3 x double]* %12, i32 0, i32 0
  %708 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %709 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %708, i32 0, i32 10
  %710 = bitcast %union.anon.25* %709 to %struct.anon.29*
  %711 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %710, i32 0, i32 5
  %712 = load [3 x double]*, [3 x double]** %711, align 8
  %713 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE4vals, i64 0, i64 1), align 4
  %714 = sext i32 %713 to i64
  %715 = getelementptr inbounds [3 x double], [3 x double]* %712, i64 %714
  %716 = getelementptr inbounds [3 x double], [3 x double]* %715, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %707, double* %716)
  %717 = load i32, i32* @x.9
  %718 = load i32, i32* @y.10
  %719 = sub i32 %717, 1
  %720 = mul i32 %717, %719
  %721 = urem i32 %720, 2
  %722 = icmp eq i32 %721, 0
  %723 = icmp slt i32 %718, 10
  %724 = or i1 %722, %723
  br i1 %724, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br label %725

; <label>:725:                                    ; preds = %originalBBpart2120, %originalBBpart2116
  %726 = load double, double* %10, align 8
  %727 = load double, double* %8, align 8
  %728 = fcmp olt double %726, %727
  br i1 %728, label %729, label %743

; <label>:729:                                    ; preds = %725
  %730 = load double, double* %8, align 8
  store double %730, double* %11, align 8
  %731 = load double, double* %10, align 8
  store double %731, double* %8, align 8
  %732 = load double, double* %11, align 8
  store double %732, double* %10, align 8
  %733 = getelementptr inbounds [3 x double], [3 x double]* %12, i32 0, i32 0
  %734 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %735 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %734, i32 0, i32 10
  %736 = bitcast %union.anon.25* %735 to %struct.anon.29*
  %737 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %736, i32 0, i32 5
  %738 = load [3 x double]*, [3 x double]** %737, align 8
  %739 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE4vals, i64 0, i64 2), align 4
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds [3 x double], [3 x double]* %738, i64 %740
  %742 = getelementptr inbounds [3 x double], [3 x double]* %741, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %733, double* %742)
  br label %743

; <label>:743:                                    ; preds = %729, %725
  %744 = load double, double* %10, align 8
  %745 = load double, double* %9, align 8
  %746 = fcmp olt double %744, %745
  br i1 %746, label %747, label %751

; <label>:747:                                    ; preds = %743
  %748 = load double, double* %9, align 8
  store double %748, double* %11, align 8
  %749 = load double, double* %10, align 8
  store double %749, double* %9, align 8
  %750 = load double, double* %11, align 8
  store double %750, double* %10, align 8
  br label %751

; <label>:751:                                    ; preds = %747, %743
  %752 = load i32, i32* @x.9
  %753 = load i32, i32* @y.10
  %754 = sub i32 %752, 1
  %755 = mul i32 %752, %754
  %756 = urem i32 %755, 2
  %757 = icmp eq i32 %756, 0
  %758 = icmp slt i32 %753, 10
  %759 = or i1 %757, %758
  br i1 %759, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %originalBB122alteredBB, %751
  %760 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE4vals, i64 0, i64 2), align 4
  %761 = add nsw i32 %760, 1
  store i32 %761, i32* %5, align 4
  %762 = load i32, i32* @x.9
  %763 = load i32, i32* @y.10
  %764 = sub i32 %762, 1
  %765 = mul i32 %762, %764
  %766 = urem i32 %765, 2
  %767 = icmp eq i32 %766, 0
  %768 = icmp slt i32 %763, 10
  %769 = or i1 %767, %768
  br i1 %769, label %originalBBpart2133, label %originalBB122alteredBB

originalBBpart2133:                               ; preds = %originalBB122
  br label %770

; <label>:770:                                    ; preds = %1019, %originalBBpart2133
  %771 = load i32, i32* %5, align 4
  %772 = load i32, i32* %20, align 4
  %773 = icmp slt i32 %771, %772
  br i1 %773, label %774, label %1022

; <label>:774:                                    ; preds = %770
  %775 = load i32, i32* %5, align 4
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds [125 x i32], [125 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE5valid, i64 0, i64 %776
  %778 = load i32, i32* %777, align 4
  %779 = icmp ne i32 %778, 0
  br i1 %779, label %780, label %1018

; <label>:780:                                    ; preds = %774
  %781 = getelementptr inbounds [3 x double], [3 x double]* %14, i32 0, i32 0
  %782 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %783 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %782, i32 0, i32 10
  %784 = bitcast %union.anon.25* %783 to %struct.anon.29*
  %785 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %784, i32 0, i32 5
  %786 = load [3 x double]*, [3 x double]** %785, align 8
  %787 = load i32, i32* %5, align 4
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds [3 x double], [3 x double]* %786, i64 %788
  %790 = getelementptr inbounds [3 x double], [3 x double]* %789, i32 0, i32 0
  %791 = getelementptr inbounds [3 x double], [3 x double]* %13, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %781, double* %790, double* %791)
  %792 = load i32, i32* %23, align 4
  %793 = icmp ne i32 %792, 0
  br i1 %793, label %794, label %838

; <label>:794:                                    ; preds = %780
  %795 = getelementptr inbounds [3 x double], [3 x double]* %14, i32 0, i32 0
  %796 = call double @_ZN3pov7VSumSqrEPd(double* %795)
  store double %796, double* %7, align 8
  %797 = load double, double* %22, align 8
  %798 = fcmp une double %797, 0.000000e+00
  br i1 %798, label %799, label %821

; <label>:799:                                    ; preds = %794
  %800 = load i32, i32* @x.9
  %801 = load i32, i32* @y.10
  %802 = sub i32 %800, 1
  %803 = mul i32 %800, %802
  %804 = urem i32 %803, 2
  %805 = icmp eq i32 %804, 0
  %806 = icmp slt i32 %801, 10
  %807 = or i1 %805, %806
  br i1 %807, label %originalBB135, label %originalBB135alteredBB

originalBB135:                                    ; preds = %originalBB135alteredBB, %799
  %808 = load double, double* %22, align 8
  %809 = load double, double* %22, align 8
  %810 = fmul double %808, %809
  %811 = load double, double* %7, align 8
  %812 = fadd double %811, %810
  store double %812, double* %7, align 8
  %813 = load i32, i32* @x.9
  %814 = load i32, i32* @y.10
  %815 = sub i32 %813, 1
  %816 = mul i32 %813, %815
  %817 = urem i32 %816, 2
  %818 = icmp eq i32 %817, 0
  %819 = icmp slt i32 %814, 10
  %820 = or i1 %818, %819
  br i1 %820, label %originalBBpart2149, label %originalBB135alteredBB

originalBBpart2149:                               ; preds = %originalBB135
  br label %821

; <label>:821:                                    ; preds = %originalBBpart2149, %794
  %822 = load i32, i32* @x.9
  %823 = load i32, i32* @y.10
  %824 = sub i32 %822, 1
  %825 = mul i32 %822, %824
  %826 = urem i32 %825, 2
  %827 = icmp eq i32 %826, 0
  %828 = icmp slt i32 %823, 10
  %829 = or i1 %827, %828
  br i1 %829, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %originalBB151alteredBB, %821
  %830 = load i32, i32* @x.9
  %831 = load i32, i32* @y.10
  %832 = sub i32 %830, 1
  %833 = mul i32 %830, %832
  %834 = urem i32 %833, 2
  %835 = icmp eq i32 %834, 0
  %836 = icmp slt i32 %831, 10
  %837 = or i1 %835, %836
  br i1 %837, label %originalBBpart2153, label %originalBB151alteredBB

originalBBpart2153:                               ; preds = %originalBB151
  br label %936

; <label>:838:                                    ; preds = %780
  %839 = load i32, i32* %24, align 4
  %840 = icmp ne i32 %839, 0
  br i1 %840, label %841, label %892

; <label>:841:                                    ; preds = %838
  %842 = load i32, i32* @x.9
  %843 = load i32, i32* @y.10
  %844 = sub i32 %842, 1
  %845 = mul i32 %842, %844
  %846 = urem i32 %845, 2
  %847 = icmp eq i32 %846, 0
  %848 = icmp slt i32 %843, 10
  %849 = or i1 %847, %848
  br i1 %849, label %originalBB155, label %originalBB155alteredBB

originalBB155:                                    ; preds = %originalBB155alteredBB, %841
  %850 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0
  %851 = load double, double* %850, align 16
  %852 = call double @fabs(double %851) #6
  %853 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 1
  %854 = load double, double* %853, align 8
  %855 = call double @fabs(double %854) #6
  %856 = fadd double %852, %855
  %857 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 2
  %858 = load double, double* %857, align 16
  %859 = call double @fabs(double %858) #6
  %860 = fadd double %856, %859
  store double %860, double* %7, align 8
  %861 = load double, double* %22, align 8
  %862 = fcmp une double %861, 0.000000e+00
  %863 = load i32, i32* @x.9
  %864 = load i32, i32* @y.10
  %865 = sub i32 %863, 1
  %866 = mul i32 %863, %865
  %867 = urem i32 %866, 2
  %868 = icmp eq i32 %867, 0
  %869 = icmp slt i32 %864, 10
  %870 = or i1 %868, %869
  br i1 %870, label %originalBBpart2167, label %originalBB155alteredBB

originalBBpart2167:                               ; preds = %originalBB155
  br i1 %862, label %871, label %875

; <label>:871:                                    ; preds = %originalBBpart2167
  %872 = load double, double* %22, align 8
  %873 = load double, double* %7, align 8
  %874 = fadd double %873, %872
  store double %874, double* %7, align 8
  br label %875

; <label>:875:                                    ; preds = %871, %originalBBpart2167
  %876 = load i32, i32* @x.9
  %877 = load i32, i32* @y.10
  %878 = sub i32 %876, 1
  %879 = mul i32 %876, %878
  %880 = urem i32 %879, 2
  %881 = icmp eq i32 %880, 0
  %882 = icmp slt i32 %877, 10
  %883 = or i1 %881, %882
  br i1 %883, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %originalBB169alteredBB, %875
  %884 = load i32, i32* @x.9
  %885 = load i32, i32* @y.10
  %886 = sub i32 %884, 1
  %887 = mul i32 %884, %886
  %888 = urem i32 %887, 2
  %889 = icmp eq i32 %888, 0
  %890 = icmp slt i32 %885, 10
  %891 = or i1 %889, %890
  br i1 %891, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  br label %935

; <label>:892:                                    ; preds = %838
  %893 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0
  %894 = load double, double* %893, align 16
  %895 = call double @fabs(double %894) #6
  %896 = load double, double* %21, align 8
  %897 = call double @pow(double %895, double %896) #7
  %898 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 1
  %899 = load double, double* %898, align 8
  %900 = call double @fabs(double %899) #6
  %901 = load double, double* %21, align 8
  %902 = call double @pow(double %900, double %901) #7
  %903 = fadd double %897, %902
  %904 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 2
  %905 = load double, double* %904, align 16
  %906 = call double @fabs(double %905) #6
  %907 = load double, double* %21, align 8
  %908 = call double @pow(double %906, double %907) #7
  %909 = fadd double %903, %908
  store double %909, double* %7, align 8
  %910 = load double, double* %22, align 8
  %911 = fcmp une double %910, 0.000000e+00
  br i1 %911, label %912, label %918

; <label>:912:                                    ; preds = %892
  %913 = load double, double* %22, align 8
  %914 = load double, double* %21, align 8
  %915 = call double @pow(double %913, double %914) #7
  %916 = load double, double* %7, align 8
  %917 = fadd double %916, %915
  store double %917, double* %7, align 8
  br label %918

; <label>:918:                                    ; preds = %912, %892
  %919 = load i32, i32* @x.9
  %920 = load i32, i32* @y.10
  %921 = sub i32 %919, 1
  %922 = mul i32 %919, %921
  %923 = urem i32 %922, 2
  %924 = icmp eq i32 %923, 0
  %925 = icmp slt i32 %920, 10
  %926 = or i1 %924, %925
  br i1 %926, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %originalBB173alteredBB, %918
  %927 = load i32, i32* @x.9
  %928 = load i32, i32* @y.10
  %929 = sub i32 %927, 1
  %930 = mul i32 %927, %929
  %931 = urem i32 %930, 2
  %932 = icmp eq i32 %931, 0
  %933 = icmp slt i32 %928, 10
  %934 = or i1 %932, %933
  br i1 %934, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  br label %935

; <label>:935:                                    ; preds = %originalBBpart2175, %originalBBpart2171
  br label %936

; <label>:936:                                    ; preds = %935, %originalBBpart2153
  %937 = load double, double* %7, align 8
  %938 = load double, double* %8, align 8
  %939 = fcmp olt double %937, %938
  br i1 %939, label %940, label %954

; <label>:940:                                    ; preds = %936
  %941 = load double, double* %9, align 8
  store double %941, double* %10, align 8
  %942 = load double, double* %8, align 8
  store double %942, double* %9, align 8
  %943 = load double, double* %7, align 8
  store double %943, double* %8, align 8
  %944 = getelementptr inbounds [3 x double], [3 x double]* %12, i32 0, i32 0
  %945 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %946 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %945, i32 0, i32 10
  %947 = bitcast %union.anon.25* %946 to %struct.anon.29*
  %948 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %947, i32 0, i32 5
  %949 = load [3 x double]*, [3 x double]** %948, align 8
  %950 = load i32, i32* %5, align 4
  %951 = sext i32 %950 to i64
  %952 = getelementptr inbounds [3 x double], [3 x double]* %949, i64 %951
  %953 = getelementptr inbounds [3 x double], [3 x double]* %952, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %944, double* %953)
  br label %1017

; <label>:954:                                    ; preds = %936
  %955 = load i32, i32* @x.9
  %956 = load i32, i32* @y.10
  %957 = sub i32 %955, 1
  %958 = mul i32 %955, %957
  %959 = urem i32 %958, 2
  %960 = icmp eq i32 %959, 0
  %961 = icmp slt i32 %956, 10
  %962 = or i1 %960, %961
  br i1 %962, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %originalBB177alteredBB, %954
  %963 = load double, double* %7, align 8
  %964 = load double, double* %9, align 8
  %965 = fcmp olt double %963, %964
  %966 = load i32, i32* @x.9
  %967 = load i32, i32* @y.10
  %968 = sub i32 %966, 1
  %969 = mul i32 %966, %968
  %970 = urem i32 %969, 2
  %971 = icmp eq i32 %970, 0
  %972 = icmp slt i32 %967, 10
  %973 = or i1 %971, %972
  br i1 %973, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  br i1 %965, label %974, label %993

; <label>:974:                                    ; preds = %originalBBpart2179
  %975 = load i32, i32* @x.9
  %976 = load i32, i32* @y.10
  %977 = sub i32 %975, 1
  %978 = mul i32 %975, %977
  %979 = urem i32 %978, 2
  %980 = icmp eq i32 %979, 0
  %981 = icmp slt i32 %976, 10
  %982 = or i1 %980, %981
  br i1 %982, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %originalBB181alteredBB, %974
  %983 = load double, double* %9, align 8
  store double %983, double* %10, align 8
  %984 = load double, double* %7, align 8
  store double %984, double* %9, align 8
  %985 = load i32, i32* @x.9
  %986 = load i32, i32* @y.10
  %987 = sub i32 %985, 1
  %988 = mul i32 %985, %987
  %989 = urem i32 %988, 2
  %990 = icmp eq i32 %989, 0
  %991 = icmp slt i32 %986, 10
  %992 = or i1 %990, %991
  br i1 %992, label %originalBBpart2183, label %originalBB181alteredBB

originalBBpart2183:                               ; preds = %originalBB181
  br label %1016

; <label>:993:                                    ; preds = %originalBBpart2179
  %994 = load double, double* %7, align 8
  %995 = load double, double* %10, align 8
  %996 = fcmp olt double %994, %995
  br i1 %996, label %997, label %1015

; <label>:997:                                    ; preds = %993
  %998 = load i32, i32* @x.9
  %999 = load i32, i32* @y.10
  %1000 = sub i32 %998, 1
  %1001 = mul i32 %998, %1000
  %1002 = urem i32 %1001, 2
  %1003 = icmp eq i32 %1002, 0
  %1004 = icmp slt i32 %999, 10
  %1005 = or i1 %1003, %1004
  br i1 %1005, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %originalBB185alteredBB, %997
  %1006 = load double, double* %7, align 8
  store double %1006, double* %10, align 8
  %1007 = load i32, i32* @x.9
  %1008 = load i32, i32* @y.10
  %1009 = sub i32 %1007, 1
  %1010 = mul i32 %1007, %1009
  %1011 = urem i32 %1010, 2
  %1012 = icmp eq i32 %1011, 0
  %1013 = icmp slt i32 %1008, 10
  %1014 = or i1 %1012, %1013
  br i1 %1014, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br label %1015

; <label>:1015:                                   ; preds = %originalBBpart2187, %993
  br label %1016

; <label>:1016:                                   ; preds = %1015, %originalBBpart2183
  br label %1017

; <label>:1017:                                   ; preds = %1016, %940
  br label %1018

; <label>:1018:                                   ; preds = %1017, %774
  br label %1019

; <label>:1019:                                   ; preds = %1018
  %1020 = load i32, i32* %5, align 4
  %1021 = add nsw i32 %1020, 1
  store i32 %1021, i32* %5, align 4
  br label %770

; <label>:1022:                                   ; preds = %770
  %1023 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1024 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1023, i32 0, i32 10
  %1025 = bitcast %union.anon.25* %1024 to %struct.anon.29*
  %1026 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1025, i32 0, i32 4
  %1027 = load i16, i16* %1026, align 8
  %1028 = icmp ne i16 %1027, 0
  br i1 %1028, label %1029, label %1033

; <label>:1029:                                   ; preds = %1022
  %1030 = getelementptr inbounds [3 x double], [3 x double]* %12, i32 0, i32 0
  %1031 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1032 = call double @_ZN3pov5NoiseEPdPNS_14Pattern_StructE(double* %1030, %"struct.pov::Pattern_Struct"* %1031)
  store double %1032, double* %11, align 8
  br label %1198

; <label>:1033:                                   ; preds = %1022
  %1034 = load i32, i32* %23, align 4
  %1035 = icmp ne i32 %1034, 0
  br i1 %1035, label %1036, label %1082

; <label>:1036:                                   ; preds = %1033
  %1037 = load i32, i32* @x.9
  %1038 = load i32, i32* @y.10
  %1039 = sub i32 %1037, 1
  %1040 = mul i32 %1037, %1039
  %1041 = urem i32 %1040, 2
  %1042 = icmp eq i32 %1041, 0
  %1043 = icmp slt i32 %1038, 10
  %1044 = or i1 %1042, %1043
  br i1 %1044, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %originalBB189alteredBB, %1036
  %1045 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1046 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1045, i32 0, i32 10
  %1047 = bitcast %union.anon.25* %1046 to %struct.anon.29*
  %1048 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1047, i32 0, i32 0
  %1049 = getelementptr inbounds [3 x double], [3 x double]* %1048, i64 0, i64 0
  %1050 = load double, double* %1049, align 8
  %1051 = load double, double* %8, align 8
  %1052 = call double @sqrt(double %1051) #7
  %1053 = fmul double %1050, %1052
  %1054 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1055 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1054, i32 0, i32 10
  %1056 = bitcast %union.anon.25* %1055 to %struct.anon.29*
  %1057 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1056, i32 0, i32 0
  %1058 = getelementptr inbounds [3 x double], [3 x double]* %1057, i64 0, i64 1
  %1059 = load double, double* %1058, align 8
  %1060 = load double, double* %9, align 8
  %1061 = call double @sqrt(double %1060) #7
  %1062 = fmul double %1059, %1061
  %1063 = fadd double %1053, %1062
  %1064 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1065 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1064, i32 0, i32 10
  %1066 = bitcast %union.anon.25* %1065 to %struct.anon.29*
  %1067 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1066, i32 0, i32 0
  %1068 = getelementptr inbounds [3 x double], [3 x double]* %1067, i64 0, i64 2
  %1069 = load double, double* %1068, align 8
  %1070 = load double, double* %10, align 8
  %1071 = call double @sqrt(double %1070) #7
  %1072 = fmul double %1069, %1071
  %1073 = fadd double %1063, %1072
  store double %1073, double* %11, align 8
  %1074 = load i32, i32* @x.9
  %1075 = load i32, i32* @y.10
  %1076 = sub i32 %1074, 1
  %1077 = mul i32 %1074, %1076
  %1078 = urem i32 %1077, 2
  %1079 = icmp eq i32 %1078, 0
  %1080 = icmp slt i32 %1075, 10
  %1081 = or i1 %1079, %1080
  br i1 %1081, label %originalBBpart2223, label %originalBB189alteredBB

originalBBpart2223:                               ; preds = %originalBB189
  br label %1181

; <label>:1082:                                   ; preds = %1033
  %1083 = load i32, i32* @x.9
  %1084 = load i32, i32* @y.10
  %1085 = sub i32 %1083, 1
  %1086 = mul i32 %1083, %1085
  %1087 = urem i32 %1086, 2
  %1088 = icmp eq i32 %1087, 0
  %1089 = icmp slt i32 %1084, 10
  %1090 = or i1 %1088, %1089
  br i1 %1090, label %originalBB225, label %originalBB225alteredBB

originalBB225:                                    ; preds = %originalBB225alteredBB, %1082
  %1091 = load i32, i32* %24, align 4
  %1092 = icmp ne i32 %1091, 0
  %1093 = load i32, i32* @x.9
  %1094 = load i32, i32* @y.10
  %1095 = sub i32 %1093, 1
  %1096 = mul i32 %1093, %1095
  %1097 = urem i32 %1096, 2
  %1098 = icmp eq i32 %1097, 0
  %1099 = icmp slt i32 %1094, 10
  %1100 = or i1 %1098, %1099
  br i1 %1100, label %originalBBpart2227, label %originalBB225alteredBB

originalBBpart2227:                               ; preds = %originalBB225
  br i1 %1092, label %1101, label %1128

; <label>:1101:                                   ; preds = %originalBBpart2227
  %1102 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1103 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1102, i32 0, i32 10
  %1104 = bitcast %union.anon.25* %1103 to %struct.anon.29*
  %1105 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1104, i32 0, i32 0
  %1106 = getelementptr inbounds [3 x double], [3 x double]* %1105, i64 0, i64 0
  %1107 = load double, double* %1106, align 8
  %1108 = load double, double* %8, align 8
  %1109 = fmul double %1107, %1108
  %1110 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1111 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1110, i32 0, i32 10
  %1112 = bitcast %union.anon.25* %1111 to %struct.anon.29*
  %1113 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1112, i32 0, i32 0
  %1114 = getelementptr inbounds [3 x double], [3 x double]* %1113, i64 0, i64 1
  %1115 = load double, double* %1114, align 8
  %1116 = load double, double* %9, align 8
  %1117 = fmul double %1115, %1116
  %1118 = fadd double %1109, %1117
  %1119 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1120 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1119, i32 0, i32 10
  %1121 = bitcast %union.anon.25* %1120 to %struct.anon.29*
  %1122 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1121, i32 0, i32 0
  %1123 = getelementptr inbounds [3 x double], [3 x double]* %1122, i64 0, i64 2
  %1124 = load double, double* %1123, align 8
  %1125 = load double, double* %10, align 8
  %1126 = fmul double %1124, %1125
  %1127 = fadd double %1118, %1126
  store double %1127, double* %11, align 8
  br label %1180

; <label>:1128:                                   ; preds = %originalBBpart2227
  %1129 = load i32, i32* @x.9
  %1130 = load i32, i32* @y.10
  %1131 = sub i32 %1129, 1
  %1132 = mul i32 %1129, %1131
  %1133 = urem i32 %1132, 2
  %1134 = icmp eq i32 %1133, 0
  %1135 = icmp slt i32 %1130, 10
  %1136 = or i1 %1134, %1135
  br i1 %1136, label %originalBB229, label %originalBB229alteredBB

originalBB229:                                    ; preds = %originalBB229alteredBB, %1128
  %1137 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1138 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1137, i32 0, i32 10
  %1139 = bitcast %union.anon.25* %1138 to %struct.anon.29*
  %1140 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1139, i32 0, i32 0
  %1141 = getelementptr inbounds [3 x double], [3 x double]* %1140, i64 0, i64 0
  %1142 = load double, double* %1141, align 8
  %1143 = load double, double* %8, align 8
  %1144 = load double, double* %21, align 8
  %1145 = fdiv double 1.000000e+00, %1144
  %1146 = call double @pow(double %1143, double %1145) #7
  %1147 = fmul double %1142, %1146
  %1148 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1149 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1148, i32 0, i32 10
  %1150 = bitcast %union.anon.25* %1149 to %struct.anon.29*
  %1151 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1150, i32 0, i32 0
  %1152 = getelementptr inbounds [3 x double], [3 x double]* %1151, i64 0, i64 1
  %1153 = load double, double* %1152, align 8
  %1154 = load double, double* %9, align 8
  %1155 = load double, double* %21, align 8
  %1156 = fdiv double 1.000000e+00, %1155
  %1157 = call double @pow(double %1154, double %1156) #7
  %1158 = fmul double %1153, %1157
  %1159 = fadd double %1147, %1158
  %1160 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1161 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1160, i32 0, i32 10
  %1162 = bitcast %union.anon.25* %1161 to %struct.anon.29*
  %1163 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1162, i32 0, i32 0
  %1164 = getelementptr inbounds [3 x double], [3 x double]* %1163, i64 0, i64 2
  %1165 = load double, double* %1164, align 8
  %1166 = load double, double* %10, align 8
  %1167 = load double, double* %21, align 8
  %1168 = fdiv double 1.000000e+00, %1167
  %1169 = call double @pow(double %1166, double %1168) #7
  %1170 = fmul double %1165, %1169
  %1171 = fadd double %1159, %1170
  store double %1171, double* %11, align 8
  %1172 = load i32, i32* @x.9
  %1173 = load i32, i32* @y.10
  %1174 = sub i32 %1172, 1
  %1175 = mul i32 %1172, %1174
  %1176 = urem i32 %1175, 2
  %1177 = icmp eq i32 %1176, 0
  %1178 = icmp slt i32 %1173, 10
  %1179 = or i1 %1177, %1178
  br i1 %1179, label %originalBBpart2293, label %originalBB229alteredBB

originalBBpart2293:                               ; preds = %originalBB229
  br label %1180

; <label>:1180:                                   ; preds = %originalBBpart2293, %1101
  br label %1181

; <label>:1181:                                   ; preds = %1180, %originalBBpart2223
  %1182 = load i32, i32* @x.9
  %1183 = load i32, i32* @y.10
  %1184 = sub i32 %1182, 1
  %1185 = mul i32 %1182, %1184
  %1186 = urem i32 %1185, 2
  %1187 = icmp eq i32 %1186, 0
  %1188 = icmp slt i32 %1183, 10
  %1189 = or i1 %1187, %1188
  br i1 %1189, label %originalBB295, label %originalBB295alteredBB

originalBB295:                                    ; preds = %originalBB295alteredBB, %1181
  %1190 = load i32, i32* @x.9
  %1191 = load i32, i32* @y.10
  %1192 = sub i32 %1190, 1
  %1193 = mul i32 %1190, %1192
  %1194 = urem i32 %1193, 2
  %1195 = icmp eq i32 %1194, 0
  %1196 = icmp slt i32 %1191, 10
  %1197 = or i1 %1195, %1196
  br i1 %1197, label %originalBBpart2297, label %originalBB295alteredBB

originalBBpart2297:                               ; preds = %originalBB295
  br label %1198

; <label>:1198:                                   ; preds = %originalBBpart2297, %1029
  store double 1.000000e+00, double* %28, align 8
  %1199 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %11, double* dereferenceable(8) %28)
  store double 0.000000e+00, double* %29, align 8
  %1200 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %1199, double* dereferenceable(8) %29)
  %1201 = load double, double* %1200, align 8
  ret double %1201

originalBBalteredBB:                              ; preds = %originalBB, %90
  %1202 = load i32, i32* %16, align 4
  %1203 = icmp sle i32 %1202, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %109
  store i32 -2, i32* %17, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %129
  store i32 -2, i32* %18, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %231
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %251
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %296
  %1204 = load double, double* %22, align 8
  %1205 = load double, double* %22, align 8
  %_ = fsub double %1204, %1205
  %gen = fmul double %_, %1205
  %1206 = fmul double %1204, %1205
  %1207 = load double, double* %8, align 8
  %_19 = fsub double %1207, %1206
  %gen20 = fmul double %_19, %1206
  %_21 = fsub double %1207, %1206
  %gen22 = fmul double %_21, %1206
  %_23 = fsub double -0.000000e+00, %1207
  %gen24 = fadd double %_23, %1206
  %_25 = fsub double -0.000000e+00, %1207
  %gen26 = fadd double %_25, %1206
  %1208 = fadd double %1207, %1206
  store double %1208, double* %8, align 8
  br label %originalBB18

originalBB30alteredBB:                            ; preds = %originalBB30, %319
  %1209 = load i32, i32* %24, align 4
  %1210 = icmp ne i32 %1209, 0
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %338
  %1211 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0
  %1212 = load double, double* %1211, align 16
  %1213 = call double @fabs(double %1212) #6
  %1214 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 1
  %1215 = load double, double* %1214, align 8
  %1216 = call double @fabs(double %1215) #6
  %_35 = fsub double %1213, %1216
  %gen36 = fmul double %_35, %1216
  %_37 = fsub double -0.000000e+00, %1213
  %gen38 = fadd double %_37, %1216
  %_39 = fsub double -0.000000e+00, %1213
  %gen40 = fadd double %_39, %1216
  %_41 = fsub double -0.000000e+00, %1213
  %gen42 = fadd double %_41, %1216
  %_43 = fsub double %1213, %1216
  %gen44 = fmul double %_43, %1216
  %_45 = fsub double %1213, %1216
  %gen46 = fmul double %_45, %1216
  %_47 = fsub double -0.000000e+00, %1213
  %gen48 = fadd double %_47, %1216
  %1217 = fadd double %1213, %1216
  %1218 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 2
  %1219 = load double, double* %1218, align 16
  %1220 = call double @fabs(double %1219) #6
  %_49 = fsub double -0.000000e+00, %1217
  %gen50 = fadd double %_49, %1220
  %_51 = fsub double -0.000000e+00, %1217
  %gen52 = fadd double %_51, %1220
  %_53 = fsub double -0.000000e+00, %1217
  %gen54 = fadd double %_53, %1220
  %1221 = fadd double %1217, %1220
  store double %1221, double* %8, align 8
  %1222 = load double, double* %22, align 8
  %1223 = fcmp une double %1222, 0.000000e+00
  br label %originalBB34

originalBB58alteredBB:                            ; preds = %originalBB58, %368
  %1224 = load double, double* %22, align 8
  %1225 = load double, double* %8, align 8
  %_59 = fsub double -0.000000e+00, %1225
  %gen60 = fadd double %_59, %1224
  %1226 = fadd double %1225, %1224
  store double %1226, double* %8, align 8
  br label %originalBB58

originalBB64alteredBB:                            ; preds = %originalBB64, %388
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %432
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %549
  %1227 = getelementptr inbounds [3 x double], [3 x double]* %14, i32 0, i32 0
  %1228 = call double @_ZN3pov7VSumSqrEPd(double* %1227)
  store double %1228, double* %10, align 8
  %1229 = load double, double* %22, align 8
  %1230 = fcmp une double %1229, 0.000000e+00
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %576
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %596
  %1231 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0
  %1232 = load double, double* %1231, align 16
  %1233 = call double @fabs(double %1232) #6
  %1234 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 1
  %1235 = load double, double* %1234, align 8
  %1236 = call double @fabs(double %1235) #6
  %_81 = fsub double %1233, %1236
  %gen82 = fmul double %_81, %1236
  %_83 = fsub double %1233, %1236
  %gen84 = fmul double %_83, %1236
  %_85 = fsub double %1233, %1236
  %gen86 = fmul double %_85, %1236
  %1237 = fadd double %1233, %1236
  %1238 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 2
  %1239 = load double, double* %1238, align 16
  %1240 = call double @fabs(double %1239) #6
  %_87 = fsub double -0.000000e+00, %1237
  %gen88 = fadd double %_87, %1240
  %_89 = fsub double -0.000000e+00, %1237
  %gen90 = fadd double %_89, %1240
  %_91 = fsub double -0.000000e+00, %1237
  %gen92 = fadd double %_91, %1240
  %_93 = fsub double %1237, %1240
  %gen94 = fmul double %_93, %1240
  %_95 = fsub double -0.000000e+00, %1237
  %gen96 = fadd double %_95, %1240
  %_97 = fsub double -0.000000e+00, %1237
  %gen98 = fadd double %_97, %1240
  %_99 = fsub double -0.000000e+00, %1237
  %gen100 = fadd double %_99, %1240
  %_101 = fsub double %1237, %1240
  %gen102 = fmul double %_101, %1240
  %1241 = fadd double %1237, %1240
  store double %1241, double* %10, align 8
  %1242 = load double, double* %22, align 8
  %1243 = fcmp une double %1242, 0.000000e+00
  br label %originalBB80

originalBB106alteredBB:                           ; preds = %originalBB106, %651
  %1244 = load double, double* %22, align 8
  %1245 = load double, double* %21, align 8
  %1246 = call double @pow(double %1244, double %1245) #7
  %1247 = load double, double* %10, align 8
  %_107 = fsub double %1247, %1246
  %gen108 = fmul double %_107, %1246
  %_109 = fsub double %1247, %1246
  %gen110 = fmul double %_109, %1246
  %1248 = fadd double %1247, %1246
  store double %1248, double* %10, align 8
  br label %originalBB106

originalBB114alteredBB:                           ; preds = %originalBB114, %675
  %1249 = load double, double* %9, align 8
  %1250 = load double, double* %8, align 8
  %1251 = fcmp olt double %1249, %1250
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %695
  %1252 = load double, double* %8, align 8
  store double %1252, double* %11, align 8
  %1253 = load double, double* %9, align 8
  store double %1253, double* %8, align 8
  %1254 = load double, double* %11, align 8
  store double %1254, double* %9, align 8
  %1255 = getelementptr inbounds [3 x double], [3 x double]* %12, i32 0, i32 0
  %1256 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1257 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1256, i32 0, i32 10
  %1258 = bitcast %union.anon.25* %1257 to %struct.anon.29*
  %1259 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1258, i32 0, i32 5
  %1260 = load [3 x double]*, [3 x double]** %1259, align 8
  %1261 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE4vals, i64 0, i64 1), align 4
  %1262 = sext i32 %1261 to i64
  %1263 = getelementptr inbounds [3 x double], [3 x double]* %1260, i64 %1262
  %1264 = getelementptr inbounds [3 x double], [3 x double]* %1263, i32 0, i32 0
  call void @_ZN3pov13Assign_VectorEPdS0_(double* %1255, double* %1264)
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %751
  %1265 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN3povL15crackle_patternEPdPNS_14Pattern_StructEE4vals, i64 0, i64 2), align 4
  %_123 = shl i32 %1265, 1
  %_124 = shl i32 %1265, 1
  %_125 = sub i32 0, %1265
  %gen126 = add i32 %_125, 1
  %_127 = sub i32 0, %1265
  %gen128 = add i32 %_127, 1
  %_129 = sub i32 0, %1265
  %gen130 = add i32 %_129, 1
  %_131 = shl i32 %1265, 1
  %1266 = add nsw i32 %1265, 1
  store i32 %1266, i32* %5, align 4
  br label %originalBB122

originalBB135alteredBB:                           ; preds = %originalBB135, %799
  %1267 = load double, double* %22, align 8
  %1268 = load double, double* %22, align 8
  %_136 = fsub double -0.000000e+00, %1267
  %gen137 = fadd double %_136, %1268
  %_138 = fsub double %1267, %1268
  %gen139 = fmul double %_138, %1268
  %_140 = fsub double %1267, %1268
  %gen141 = fmul double %_140, %1268
  %_142 = fsub double -0.000000e+00, %1267
  %gen143 = fadd double %_142, %1268
  %1269 = fmul double %1267, %1268
  %1270 = load double, double* %7, align 8
  %_144 = fsub double -0.000000e+00, %1270
  %gen145 = fadd double %_144, %1269
  %_146 = fsub double -0.000000e+00, %1270
  %gen147 = fadd double %_146, %1269
  %1271 = fadd double %1270, %1269
  store double %1271, double* %7, align 8
  br label %originalBB135

originalBB151alteredBB:                           ; preds = %originalBB151, %821
  br label %originalBB151

originalBB155alteredBB:                           ; preds = %originalBB155, %841
  %1272 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0
  %1273 = load double, double* %1272, align 16
  %1274 = call double @fabs(double %1273) #6
  %1275 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 1
  %1276 = load double, double* %1275, align 8
  %1277 = call double @fabs(double %1276) #6
  %_156 = fsub double -0.000000e+00, %1274
  %gen157 = fadd double %_156, %1277
  %1278 = fadd double %1274, %1277
  %1279 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 2
  %1280 = load double, double* %1279, align 16
  %1281 = call double @fabs(double %1280) #6
  %_158 = fsub double %1278, %1281
  %gen159 = fmul double %_158, %1281
  %_160 = fsub double %1278, %1281
  %gen161 = fmul double %_160, %1281
  %_162 = fsub double -0.000000e+00, %1278
  %gen163 = fadd double %_162, %1281
  %_164 = fsub double -0.000000e+00, %1278
  %gen165 = fadd double %_164, %1281
  %1282 = fadd double %1278, %1281
  store double %1282, double* %7, align 8
  %1283 = load double, double* %22, align 8
  %1284 = fcmp une double %1283, 0.000000e+00
  br label %originalBB155

originalBB169alteredBB:                           ; preds = %originalBB169, %875
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %918
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %954
  %1285 = load double, double* %7, align 8
  %1286 = load double, double* %9, align 8
  %1287 = fcmp olt double %1285, %1286
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %974
  %1288 = load double, double* %9, align 8
  store double %1288, double* %10, align 8
  %1289 = load double, double* %7, align 8
  store double %1289, double* %9, align 8
  br label %originalBB181

originalBB185alteredBB:                           ; preds = %originalBB185, %997
  %1290 = load double, double* %7, align 8
  store double %1290, double* %10, align 8
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %1036
  %1291 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1292 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1291, i32 0, i32 10
  %1293 = bitcast %union.anon.25* %1292 to %struct.anon.29*
  %1294 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1293, i32 0, i32 0
  %1295 = getelementptr inbounds [3 x double], [3 x double]* %1294, i64 0, i64 0
  %1296 = load double, double* %1295, align 8
  %1297 = load double, double* %8, align 8
  %1298 = call double @sqrt(double %1297) #7
  %_190 = fsub double -0.000000e+00, %1296
  %gen191 = fadd double %_190, %1298
  %_192 = fsub double %1296, %1298
  %gen193 = fmul double %_192, %1298
  %_194 = fsub double %1296, %1298
  %gen195 = fmul double %_194, %1298
  %1299 = fmul double %1296, %1298
  %1300 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1301 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1300, i32 0, i32 10
  %1302 = bitcast %union.anon.25* %1301 to %struct.anon.29*
  %1303 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1302, i32 0, i32 0
  %1304 = getelementptr inbounds [3 x double], [3 x double]* %1303, i64 0, i64 1
  %1305 = load double, double* %1304, align 8
  %1306 = load double, double* %9, align 8
  %1307 = call double @sqrt(double %1306) #7
  %_196 = fsub double %1305, %1307
  %gen197 = fmul double %_196, %1307
  %_198 = fsub double -0.000000e+00, %1305
  %gen199 = fadd double %_198, %1307
  %_200 = fsub double -0.000000e+00, %1305
  %gen201 = fadd double %_200, %1307
  %1308 = fmul double %1305, %1307
  %_202 = fsub double -0.000000e+00, %1299
  %gen203 = fadd double %_202, %1308
  %_204 = fsub double %1299, %1308
  %gen205 = fmul double %_204, %1308
  %1309 = fadd double %1299, %1308
  %1310 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1311 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1310, i32 0, i32 10
  %1312 = bitcast %union.anon.25* %1311 to %struct.anon.29*
  %1313 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1312, i32 0, i32 0
  %1314 = getelementptr inbounds [3 x double], [3 x double]* %1313, i64 0, i64 2
  %1315 = load double, double* %1314, align 8
  %1316 = load double, double* %10, align 8
  %1317 = call double @sqrt(double %1316) #7
  %_206 = fsub double -0.000000e+00, %1315
  %gen207 = fadd double %_206, %1317
  %_208 = fsub double -0.000000e+00, %1315
  %gen209 = fadd double %_208, %1317
  %1318 = fmul double %1315, %1317
  %_210 = fsub double -0.000000e+00, %1309
  %gen211 = fadd double %_210, %1318
  %_212 = fsub double %1309, %1318
  %gen213 = fmul double %_212, %1318
  %_214 = fsub double -0.000000e+00, %1309
  %gen215 = fadd double %_214, %1318
  %_216 = fsub double %1309, %1318
  %gen217 = fmul double %_216, %1318
  %_218 = fsub double %1309, %1318
  %gen219 = fmul double %_218, %1318
  %_220 = fsub double %1309, %1318
  %gen221 = fmul double %_220, %1318
  %1319 = fadd double %1309, %1318
  store double %1319, double* %11, align 8
  br label %originalBB189

originalBB225alteredBB:                           ; preds = %originalBB225, %1082
  %1320 = load i32, i32* %24, align 4
  %1321 = icmp ne i32 %1320, 0
  br label %originalBB225

originalBB229alteredBB:                           ; preds = %originalBB229, %1128
  %1322 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1323 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1322, i32 0, i32 10
  %1324 = bitcast %union.anon.25* %1323 to %struct.anon.29*
  %1325 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1324, i32 0, i32 0
  %1326 = getelementptr inbounds [3 x double], [3 x double]* %1325, i64 0, i64 0
  %1327 = load double, double* %1326, align 8
  %1328 = load double, double* %8, align 8
  %1329 = load double, double* %21, align 8
  %_230 = fsub double -0.000000e+00, 1.000000e+00
  %gen231 = fadd double %_230, %1329
  %_232 = fsub double 1.000000e+00, %1329
  %gen233 = fmul double %_232, %1329
  %_234 = fsub double 1.000000e+00, %1329
  %gen235 = fmul double %_234, %1329
  %_236 = fsub double -0.000000e+00, 1.000000e+00
  %gen237 = fadd double %_236, %1329
  %1330 = fdiv double 1.000000e+00, %1329
  %1331 = call double @pow(double %1328, double %1330) #7
  %_238 = fsub double %1327, %1331
  %gen239 = fmul double %_238, %1331
  %_240 = fsub double -0.000000e+00, %1327
  %gen241 = fadd double %_240, %1331
  %_242 = fsub double -0.000000e+00, %1327
  %gen243 = fadd double %_242, %1331
  %_244 = fsub double %1327, %1331
  %gen245 = fmul double %_244, %1331
  %_246 = fsub double -0.000000e+00, %1327
  %gen247 = fadd double %_246, %1331
  %1332 = fmul double %1327, %1331
  %1333 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1334 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1333, i32 0, i32 10
  %1335 = bitcast %union.anon.25* %1334 to %struct.anon.29*
  %1336 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1335, i32 0, i32 0
  %1337 = getelementptr inbounds [3 x double], [3 x double]* %1336, i64 0, i64 1
  %1338 = load double, double* %1337, align 8
  %1339 = load double, double* %9, align 8
  %1340 = load double, double* %21, align 8
  %_248 = fsub double -0.000000e+00, 1.000000e+00
  %gen249 = fadd double %_248, %1340
  %_250 = fsub double -0.000000e+00, 1.000000e+00
  %gen251 = fadd double %_250, %1340
  %_252 = fsub double 1.000000e+00, %1340
  %gen253 = fmul double %_252, %1340
  %_254 = fsub double 1.000000e+00, %1340
  %gen255 = fmul double %_254, %1340
  %_256 = fsub double -0.000000e+00, 1.000000e+00
  %gen257 = fadd double %_256, %1340
  %1341 = fdiv double 1.000000e+00, %1340
  %1342 = call double @pow(double %1339, double %1341) #7
  %_258 = fsub double -0.000000e+00, %1338
  %gen259 = fadd double %_258, %1342
  %_260 = fsub double -0.000000e+00, %1338
  %gen261 = fadd double %_260, %1342
  %_262 = fsub double %1338, %1342
  %gen263 = fmul double %_262, %1342
  %1343 = fmul double %1338, %1342
  %_264 = fsub double %1332, %1343
  %gen265 = fmul double %_264, %1343
  %1344 = fadd double %1332, %1343
  %1345 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %1346 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %1345, i32 0, i32 10
  %1347 = bitcast %union.anon.25* %1346 to %struct.anon.29*
  %1348 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %1347, i32 0, i32 0
  %1349 = getelementptr inbounds [3 x double], [3 x double]* %1348, i64 0, i64 2
  %1350 = load double, double* %1349, align 8
  %1351 = load double, double* %10, align 8
  %1352 = load double, double* %21, align 8
  %_266 = fsub double -0.000000e+00, 1.000000e+00
  %gen267 = fadd double %_266, %1352
  %_268 = fsub double -0.000000e+00, 1.000000e+00
  %gen269 = fadd double %_268, %1352
  %_270 = fsub double -0.000000e+00, 1.000000e+00
  %gen271 = fadd double %_270, %1352
  %1353 = fdiv double 1.000000e+00, %1352
  %1354 = call double @pow(double %1351, double %1353) #7
  %_272 = fsub double %1350, %1354
  %gen273 = fmul double %_272, %1354
  %_274 = fsub double -0.000000e+00, %1350
  %gen275 = fadd double %_274, %1354
  %_276 = fsub double %1350, %1354
  %gen277 = fmul double %_276, %1354
  %_278 = fsub double -0.000000e+00, %1350
  %gen279 = fadd double %_278, %1354
  %1355 = fmul double %1350, %1354
  %_280 = fsub double -0.000000e+00, %1344
  %gen281 = fadd double %_280, %1355
  %_282 = fsub double -0.000000e+00, %1344
  %gen283 = fadd double %_282, %1355
  %_284 = fsub double %1344, %1355
  %gen285 = fmul double %_284, %1355
  %_286 = fsub double %1344, %1355
  %gen287 = fmul double %_286, %1355
  %_288 = fsub double -0.000000e+00, %1344
  %gen289 = fadd double %_288, %1355
  %_290 = fsub double %1344, %1355
  %gen291 = fmul double %_290, %1355
  %1356 = fadd double %1344, %1355
  store double %1356, double* %11, align 8
  br label %originalBB229

originalBB295alteredBB:                           ; preds = %originalBB295, %1181
  br label %originalBB295
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL16gradient_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca double, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %6 = load double*, double** %3, align 8
  %7 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %8 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %7, i32 0, i32 10
  %9 = bitcast %union.anon.25* %8 to [3 x double]*
  %10 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %5, double* %6, double* %10)
  %11 = load double, double* %5, align 8
  %12 = fcmp ogt double %11, 1.000000e+00
  br i1 %12, label %13, label %16

; <label>:13:                                     ; preds = %2
  %14 = load double, double* %5, align 8
  %15 = call double @fmod(double %14, double 1.000000e+00) #7
  br label %18

; <label>:16:                                     ; preds = %2
  %17 = load double, double* %5, align 8
  br label %18

; <label>:18:                                     ; preds = %16, %13
  %19 = phi double [ %15, %13 ], [ %17, %16 ]
  ret double %19
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL15granite_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca [3 x double], align 16
  %10 = alloca [3 x double], align 16
  %11 = alloca i32, align 4
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  store double 0.000000e+00, double* %7, align 8
  store double 1.000000e+00, double* %8, align 8
  %12 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  %13 = load double*, double** %3, align 8
  call void @_ZN3pov6VScaleEPdPKdd(double* %12, double* %13, double 4.000000e+00)
  %14 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %15 = icmp ne %"struct.pov::Pattern_Struct"* %14, null
  br i1 %15, label %16, label %39

; <label>:16:                                     ; preds = %2
  %17 = load i32, i32* @x.13
  %18 = load i32, i32* @y.14
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %16
  %25 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %26 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %25, i32 0, i32 2
  %27 = load i16, i16* %26, align 4
  %28 = zext i16 %27 to i32
  %29 = and i32 %28, 48
  %30 = ashr i32 %29, 4
  store i32 %30, i32* %11, align 4
  %31 = load i32, i32* @x.13
  %32 = load i32, i32* @y.14
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %39

; <label>:39:                                     ; preds = %originalBBpart2, %2
  %40 = load i32, i32* %11, align 4
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %60, label %42

; <label>:42:                                     ; preds = %39
  %43 = load i32, i32* @x.13
  %44 = load i32, i32* @y.14
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %42
  %51 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 76), align 8
  store i32 %51, i32* %11, align 4
  %52 = load i32, i32* @x.13
  %53 = load i32, i32* @y.14
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %60

; <label>:60:                                     ; preds = %originalBBpart220, %39
  %61 = load i32, i32* @x.13
  %62 = load i32, i32* @y.14
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %60
  store i32 0, i32* %5, align 4
  %69 = load i32, i32* @x.13
  %70 = load i32, i32* @y.14
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %77

; <label>:77:                                     ; preds = %143, %originalBBpart224
  %78 = load i32, i32* %5, align 4
  %79 = icmp slt i32 %78, 6
  br i1 %79, label %80, label %148

; <label>:80:                                     ; preds = %77
  %81 = load i32, i32* @x.13
  %82 = load i32, i32* @y.14
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %originalBB26alteredBB, %80
  %89 = getelementptr inbounds [3 x double], [3 x double]* %10, i32 0, i32 0
  %90 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  %91 = load double, double* %8, align 8
  call void @_ZN3pov6VScaleEPdPKdd(double* %89, double* %90, double %91)
  %92 = load i32, i32* %11, align 4
  %93 = icmp eq i32 %92, 1
  %94 = load i32, i32* @x.13
  %95 = load i32, i32* @y.14
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %93, label %102, label %109

; <label>:102:                                    ; preds = %originalBBpart228
  %103 = getelementptr inbounds [3 x double], [3 x double]* %10, i32 0, i32 0
  %104 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %105 = call double @_ZN3pov5NoiseEPdPNS_14Pattern_StructE(double* %103, %"struct.pov::Pattern_Struct"* %104)
  %106 = fsub double 5.000000e-01, %105
  store double %106, double* %6, align 8
  %107 = load double, double* %6, align 8
  %108 = call double @fabs(double %107) #6
  store double %108, double* %6, align 8
  br label %137

; <label>:109:                                    ; preds = %originalBBpart228
  %110 = getelementptr inbounds [3 x double], [3 x double]* %10, i32 0, i32 0
  %111 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %112 = call double @_ZN3pov5NoiseEPdPNS_14Pattern_StructE(double* %110, %"struct.pov::Pattern_Struct"* %111)
  %113 = fmul double 2.000000e+00, %112
  %114 = fsub double 1.000000e+00, %113
  store double %114, double* %6, align 8
  %115 = load double, double* %6, align 8
  %116 = call double @fabs(double %115) #6
  store double %116, double* %6, align 8
  %117 = load double, double* %6, align 8
  %118 = fcmp ogt double %117, 5.000000e-01
  br i1 %118, label %119, label %136

; <label>:119:                                    ; preds = %109
  %120 = load i32, i32* @x.13
  %121 = load i32, i32* @y.14
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %originalBB30alteredBB, %119
  store double 5.000000e-01, double* %6, align 8
  %128 = load i32, i32* @x.13
  %129 = load i32, i32* @y.14
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %136

; <label>:136:                                    ; preds = %originalBBpart232, %109
  br label %137

; <label>:137:                                    ; preds = %136, %102
  %138 = load double, double* %6, align 8
  %139 = load double, double* %8, align 8
  %140 = fdiv double %138, %139
  %141 = load double, double* %7, align 8
  %142 = fadd double %141, %140
  store double %142, double* %7, align 8
  br label %143

; <label>:143:                                    ; preds = %137
  %144 = load double, double* %8, align 8
  %145 = fmul double %144, 2.000000e+00
  store double %145, double* %8, align 8
  %146 = load i32, i32* %5, align 4
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %5, align 4
  br label %77

; <label>:148:                                    ; preds = %77
  %149 = load double, double* %7, align 8
  ret double %149

originalBBalteredBB:                              ; preds = %originalBB, %16
  %150 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %151 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %150, i32 0, i32 2
  %152 = load i16, i16* %151, align 4
  %153 = zext i16 %152 to i32
  %_ = sub i32 0, %153
  %gen = add i32 %_, 48
  %_1 = sub i32 %153, 48
  %gen2 = mul i32 %_1, 48
  %_3 = sub i32 0, %153
  %gen4 = add i32 %_3, 48
  %_5 = shl i32 %153, 48
  %_6 = sub i32 %153, 48
  %gen7 = mul i32 %_6, 48
  %_8 = shl i32 %153, 48
  %154 = and i32 %153, 48
  %_9 = sub i32 0, %154
  %gen10 = add i32 %_9, 4
  %_11 = sub i32 %154, 4
  %gen12 = mul i32 %_11, 4
  %_13 = sub i32 %154, 4
  %gen14 = mul i32 %_13, 4
  %_15 = shl i32 %154, 4
  %_16 = sub i32 %154, 4
  %gen17 = mul i32 %_16, 4
  %155 = ashr i32 %154, 4
  store i32 %155, i32* %11, align 4
  br label %originalBB

originalBB18alteredBB:                            ; preds = %originalBB18, %42
  %156 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 76), align 8
  store i32 %156, i32* %11, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %60
  store i32 0, i32* %5, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %80
  %157 = getelementptr inbounds [3 x double], [3 x double]* %10, i32 0, i32 0
  %158 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  %159 = load double, double* %8, align 8
  call void @_ZN3pov6VScaleEPdPKdd(double* %157, double* %158, double %159)
  %160 = load i32, i32* %11, align 4
  %161 = icmp eq i32 %160, 1
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %119
  store double 5.000000e-01, double* %6, align 8
  br label %originalBB30
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL15hexagon_patternEPd(double*) #2 {
  %2 = load i32, i32* @x.15
  %3 = load i32, i32* @y.16
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca double*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  store double* %0, double** %10, align 8
  store double 0.000000e+00, double* %18, align 8
  %21 = load double*, double** %10, align 8
  %22 = getelementptr inbounds double, double* %21, i64 0
  %23 = load double, double* %22, align 8
  store double %23, double* %19, align 8
  %24 = load double*, double** %10, align 8
  %25 = getelementptr inbounds double, double* %24, i64 2
  %26 = load double, double* %25, align 8
  store double %26, double* %20, align 8
  %27 = load double, double* %19, align 8
  %28 = call double @fabs(double %27) #6
  store double %28, double* %19, align 8
  %29 = load double, double* %20, align 8
  %30 = fcmp olt double %29, 0.000000e+00
  %31 = load i32, i32* @x.15
  %32 = load i32, i32* @y.16
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %30, label %39, label %59

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = load i32, i32* @x.15
  %41 = load i32, i32* @y.16
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %39
  %48 = load double, double* %20, align 8
  %49 = call double @fabs(double %48) #6
  %50 = fsub double 0x4014C8DC2E5871CB, %49
  %51 = load i32, i32* @x.15
  %52 = load i32, i32* @y.16
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart211, label %originalBB1alteredBB

originalBBpart211:                                ; preds = %originalBB1
  br label %61

; <label>:59:                                     ; preds = %originalBBpart2
  %60 = load double, double* %20, align 8
  br label %61

; <label>:61:                                     ; preds = %59, %originalBBpart211
  %62 = phi double [ %50, %originalBBpart211 ], [ %60, %59 ]
  store double %62, double* %20, align 8
  %63 = load double, double* %19, align 8
  %64 = fdiv double %63, 5.000000e-01
  store double %64, double* %14, align 8
  %65 = load double, double* %20, align 8
  %66 = fdiv double %65, 0x3FEBB67AE875ED0F
  store double %66, double* %15, align 8
  %67 = load double, double* %14, align 8
  %68 = fdiv double %67, 6.000000e+00
  %69 = call double @floor(double %68) #6
  %70 = fmul double %69, 6.000000e+00
  %71 = load double, double* %14, align 8
  %72 = fsub double %71, %70
  store double %72, double* %14, align 8
  %73 = load double, double* %15, align 8
  %74 = fdiv double %73, 6.000000e+00
  %75 = call double @floor(double %74) #6
  %76 = fmul double %75, 6.000000e+00
  %77 = load double, double* %15, align 8
  %78 = fsub double %77, %76
  store double %78, double* %15, align 8
  %79 = load double, double* %14, align 8
  %80 = fcmp oge double %79, 0.000000e+00
  br i1 %80, label %81, label %84

; <label>:81:                                     ; preds = %61
  %82 = load double, double* %14, align 8
  %83 = call double @floor(double %82) #6
  br label %90

; <label>:84:                                     ; preds = %61
  %85 = load double, double* %14, align 8
  %86 = fsub double 0.000000e+00, %85
  %87 = call double @floor(double %86) #6
  %88 = fsub double 0.000000e+00, %87
  %89 = fsub double %88, 1.000000e+00
  br label %90

; <label>:90:                                     ; preds = %84, %81
  %91 = phi double [ %83, %81 ], [ %89, %84 ]
  %92 = load i32, i32* @x.15
  %93 = load i32, i32* @y.16
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %originalBB13alteredBB, %90
  %100 = fptosi double %91 to i32
  %101 = srem i32 %100, 6
  store i32 %101, i32* %11, align 4
  %102 = load double, double* %15, align 8
  %103 = fcmp oge double %102, 0.000000e+00
  %104 = load i32, i32* @x.15
  %105 = load i32, i32* @y.16
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart222, label %originalBB13alteredBB

originalBBpart222:                                ; preds = %originalBB13
  br i1 %103, label %112, label %131

; <label>:112:                                    ; preds = %originalBBpart222
  %113 = load i32, i32* @x.15
  %114 = load i32, i32* @y.16
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %originalBB24alteredBB, %112
  %121 = load double, double* %15, align 8
  %122 = call double @floor(double %121) #6
  %123 = load i32, i32* @x.15
  %124 = load i32, i32* @y.16
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart226, label %originalBB24alteredBB

originalBBpart226:                                ; preds = %originalBB24
  br label %137

; <label>:131:                                    ; preds = %originalBBpart222
  %132 = load double, double* %15, align 8
  %133 = fsub double 0.000000e+00, %132
  %134 = call double @floor(double %133) #6
  %135 = fsub double 0.000000e+00, %134
  %136 = fsub double %135, 1.000000e+00
  br label %137

; <label>:137:                                    ; preds = %131, %originalBBpart226
  %138 = phi double [ %122, %originalBBpart226 ], [ %136, %131 ]
  %139 = fptosi double %138 to i32
  %140 = srem i32 %139, 6
  store i32 %140, i32* %12, align 4
  %141 = load i32, i32* %11, align 4
  switch i32 %141, label %323 [
    i32 0, label %142
    i32 5, label %142
    i32 2, label %164
    i32 3, label %164
    i32 1, label %186
    i32 4, label %186
  ]

; <label>:142:                                    ; preds = %137, %137
  %143 = load i32, i32* %12, align 4
  switch i32 %143, label %163 [
    i32 0, label %144
    i32 5, label %144
    i32 1, label %145
    i32 2, label %145
    i32 3, label %162
    i32 4, label %162
  ]

; <label>:144:                                    ; preds = %142, %142
  store double 0.000000e+00, double* %18, align 8
  br label %163

; <label>:145:                                    ; preds = %142, %142
  %146 = load i32, i32* @x.15
  %147 = load i32, i32* @y.16
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %originalBB28alteredBB, %145
  store double 1.000000e+00, double* %18, align 8
  %154 = load i32, i32* @x.15
  %155 = load i32, i32* @y.16
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart230, label %originalBB28alteredBB

originalBBpart230:                                ; preds = %originalBB28
  br label %163

; <label>:162:                                    ; preds = %142, %142
  store double 2.000000e+00, double* %18, align 8
  br label %163

; <label>:163:                                    ; preds = %162, %originalBBpart230, %144, %142
  br label %323

; <label>:164:                                    ; preds = %137, %137
  %165 = load i32, i32* %12, align 4
  switch i32 %165, label %185 [
    i32 0, label %166
    i32 1, label %166
    i32 2, label %183
    i32 3, label %183
    i32 4, label %184
    i32 5, label %184
  ]

; <label>:166:                                    ; preds = %164, %164
  %167 = load i32, i32* @x.15
  %168 = load i32, i32* @y.16
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB32, label %originalBB32alteredBB

originalBB32:                                     ; preds = %originalBB32alteredBB, %166
  store double 2.000000e+00, double* %18, align 8
  %175 = load i32, i32* @x.15
  %176 = load i32, i32* @y.16
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart234, label %originalBB32alteredBB

originalBBpart234:                                ; preds = %originalBB32
  br label %185

; <label>:183:                                    ; preds = %164, %164
  store double 0.000000e+00, double* %18, align 8
  br label %185

; <label>:184:                                    ; preds = %164, %164
  store double 1.000000e+00, double* %18, align 8
  br label %185

; <label>:185:                                    ; preds = %184, %183, %originalBBpart234, %164
  br label %323

; <label>:186:                                    ; preds = %137, %137
  %187 = load double, double* %14, align 8
  %188 = load i32, i32* %11, align 4
  %189 = sitofp i32 %188 to double
  %190 = fsub double %187, %189
  store double %190, double* %16, align 8
  %191 = load double, double* %15, align 8
  %192 = load i32, i32* %12, align 4
  %193 = sitofp i32 %192 to double
  %194 = fsub double %191, %193
  store double %194, double* %17, align 8
  %195 = load i32, i32* %11, align 4
  %196 = load i32, i32* %12, align 4
  %197 = add nsw i32 %195, %196
  %198 = srem i32 %197, 2
  %199 = icmp eq i32 %198, 1
  br i1 %199, label %200, label %203

; <label>:200:                                    ; preds = %186
  %201 = load double, double* %16, align 8
  %202 = fsub double 1.000000e+00, %201
  store double %202, double* %16, align 8
  br label %203

; <label>:203:                                    ; preds = %200, %186
  %204 = load i32, i32* @x.15
  %205 = load i32, i32* @y.16
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %originalBB36alteredBB, %203
  %212 = load double, double* %16, align 8
  %213 = fcmp oeq double %212, 0.000000e+00
  %214 = load i32, i32* @x.15
  %215 = load i32, i32* @y.16
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBBpart238, label %originalBB36alteredBB

originalBBpart238:                                ; preds = %originalBB36
  br i1 %213, label %222, label %223

; <label>:222:                                    ; preds = %originalBBpart238
  store double 1.000000e-04, double* %16, align 8
  br label %223

; <label>:223:                                    ; preds = %222, %originalBBpart238
  %224 = load i32, i32* @x.15
  %225 = load i32, i32* @y.16
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %originalBB40alteredBB, %223
  %232 = load double, double* %17, align 8
  %233 = load double, double* %16, align 8
  %234 = fdiv double %232, %233
  %235 = fcmp olt double %234, 1.000000e+00
  %236 = zext i1 %235 to i32
  store i32 %236, i32* %13, align 4
  %237 = load i32, i32* %13, align 4
  %238 = load i32, i32* @x.15
  %239 = load i32, i32* @y.16
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBBpart254, label %originalBB40alteredBB

originalBBpart254:                                ; preds = %originalBB40
  switch i32 %237, label %306 [
    i32 1, label %246
    i32 0, label %300
  ]

; <label>:246:                                    ; preds = %originalBBpart254
  %247 = load i32, i32* %12, align 4
  switch i32 %247, label %283 [
    i32 0, label %248
    i32 3, label %248
    i32 2, label %265
    i32 5, label %265
    i32 1, label %266
    i32 4, label %266
  ]

; <label>:248:                                    ; preds = %246, %246
  %249 = load i32, i32* @x.15
  %250 = load i32, i32* @y.16
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %248
  store double 0.000000e+00, double* %18, align 8
  %257 = load i32, i32* @x.15
  %258 = load i32, i32* @y.16
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br label %283

; <label>:265:                                    ; preds = %246, %246
  store double 1.000000e+00, double* %18, align 8
  br label %283

; <label>:266:                                    ; preds = %246, %246
  %267 = load i32, i32* @x.15
  %268 = load i32, i32* @y.16
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %originalBB60alteredBB, %266
  store double 2.000000e+00, double* %18, align 8
  %275 = load i32, i32* @x.15
  %276 = load i32, i32* @y.16
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br label %283

; <label>:283:                                    ; preds = %originalBBpart262, %265, %originalBBpart258, %246
  %284 = load i32, i32* @x.15
  %285 = load i32, i32* @y.16
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %originalBB64alteredBB, %283
  %292 = load i32, i32* @x.15
  %293 = load i32, i32* @y.16
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br label %306

; <label>:300:                                    ; preds = %originalBBpart254
  %301 = load i32, i32* %12, align 4
  switch i32 %301, label %305 [
    i32 0, label %302
    i32 3, label %302
    i32 2, label %303
    i32 5, label %303
    i32 1, label %304
    i32 4, label %304
  ]

; <label>:302:                                    ; preds = %300, %300
  store double 2.000000e+00, double* %18, align 8
  br label %305

; <label>:303:                                    ; preds = %300, %300
  store double 0.000000e+00, double* %18, align 8
  br label %305

; <label>:304:                                    ; preds = %300, %300
  store double 1.000000e+00, double* %18, align 8
  br label %305

; <label>:305:                                    ; preds = %304, %303, %302, %300
  br label %306

; <label>:306:                                    ; preds = %305, %originalBBpart266, %originalBBpart254
  %307 = load i32, i32* @x.15
  %308 = load i32, i32* @y.16
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %originalBB68alteredBB, %306
  %315 = load i32, i32* @x.15
  %316 = load i32, i32* @y.16
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  br label %323

; <label>:323:                                    ; preds = %originalBBpart270, %185, %163, %137
  %324 = load double, double* %18, align 8
  %325 = call double @fmod(double %324, double 3.000000e+00) #7
  store double %325, double* %18, align 8
  %326 = load double, double* %18, align 8
  ret double %326

originalBBalteredBB:                              ; preds = %originalBB, %1
  %327 = alloca double*, align 8
  %328 = alloca i32, align 4
  %329 = alloca i32, align 4
  %330 = alloca i32, align 4
  %331 = alloca double, align 8
  %332 = alloca double, align 8
  %333 = alloca double, align 8
  %334 = alloca double, align 8
  %335 = alloca double, align 8
  %336 = alloca double, align 8
  %337 = alloca double, align 8
  store double* %0, double** %327, align 8
  store double 0.000000e+00, double* %335, align 8
  %338 = load double*, double** %327, align 8
  %339 = getelementptr inbounds double, double* %338, i64 0
  %340 = load double, double* %339, align 8
  store double %340, double* %336, align 8
  %341 = load double*, double** %327, align 8
  %342 = getelementptr inbounds double, double* %341, i64 2
  %343 = load double, double* %342, align 8
  store double %343, double* %337, align 8
  %344 = load double, double* %336, align 8
  %345 = call double @fabs(double %344) #6
  store double %345, double* %336, align 8
  %346 = load double, double* %337, align 8
  %347 = fcmp olt double %346, 0.000000e+00
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %348 = load double, double* %20, align 8
  %349 = call double @fabs(double %348) #6
  %_ = fsub double -0.000000e+00, 0x4014C8DC2E5871CB
  %gen = fadd double %_, %349
  %_2 = fsub double -0.000000e+00, 0x4014C8DC2E5871CB
  %gen3 = fadd double %_2, %349
  %_4 = fsub double 0x4014C8DC2E5871CB, %349
  %gen5 = fmul double %_4, %349
  %_6 = fsub double 0x4014C8DC2E5871CB, %349
  %gen7 = fmul double %_6, %349
  %_8 = fsub double -0.000000e+00, 0x4014C8DC2E5871CB
  %gen9 = fadd double %_8, %349
  %350 = fsub double 0x4014C8DC2E5871CB, %349
  br label %originalBB1

originalBB13alteredBB:                            ; preds = %originalBB13, %90
  %351 = fptosi double %91 to i32
  %_14 = sub i32 %351, 6
  %gen15 = mul i32 %_14, 6
  %_16 = sub i32 0, %351
  %gen17 = add i32 %_16, 6
  %_18 = sub i32 0, %351
  %gen19 = add i32 %_18, 6
  %_20 = shl i32 %351, 6
  %352 = srem i32 %351, 6
  store i32 %352, i32* %11, align 4
  %353 = load double, double* %15, align 8
  %354 = fcmp oge double %353, 0.000000e+00
  br label %originalBB13

originalBB24alteredBB:                            ; preds = %originalBB24, %112
  %355 = load double, double* %15, align 8
  %356 = call double @floor(double %355) #6
  br label %originalBB24

originalBB28alteredBB:                            ; preds = %originalBB28, %145
  store double 1.000000e+00, double* %18, align 8
  br label %originalBB28

originalBB32alteredBB:                            ; preds = %originalBB32, %166
  store double 2.000000e+00, double* %18, align 8
  br label %originalBB32

originalBB36alteredBB:                            ; preds = %originalBB36, %203
  %357 = load double, double* %16, align 8
  %358 = fcmp oeq double %357, 0.000000e+00
  br label %originalBB36

originalBB40alteredBB:                            ; preds = %originalBB40, %223
  %359 = load double, double* %17, align 8
  %360 = load double, double* %16, align 8
  %_41 = fsub double -0.000000e+00, %359
  %gen42 = fadd double %_41, %360
  %_43 = fsub double -0.000000e+00, %359
  %gen44 = fadd double %_43, %360
  %_45 = fsub double %359, %360
  %gen46 = fmul double %_45, %360
  %_47 = fsub double -0.000000e+00, %359
  %gen48 = fadd double %_47, %360
  %_49 = fsub double -0.000000e+00, %359
  %gen50 = fadd double %_49, %360
  %_51 = fsub double %359, %360
  %gen52 = fmul double %_51, %360
  %361 = fdiv double %359, %360
  %362 = fcmp olt double %361, 1.000000e+00
  %363 = zext i1 %362 to i32
  store i32 %363, i32* %13, align 4
  %364 = load i32, i32* %13, align 4
  br label %originalBB40

originalBB56alteredBB:                            ; preds = %originalBB56, %248
  store double 0.000000e+00, double* %18, align 8
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %266
  store double 2.000000e+00, double* %18, align 8
  br label %originalBB60

originalBB64alteredBB:                            ; preds = %originalBB64, %283
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %306
  br label %originalBB68
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL13julia_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = load i32, i32* @x.17
  %4 = load i32, i32* @y.18
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca double*, align 8
  %12 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca double, align 8
  %23 = alloca double, align 8
  store double* %0, double** %11, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %12, align 8
  %24 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %25 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %24, i32 0, i32 10
  %26 = bitcast %union.anon.25* %25 to %struct.anon.31*
  %27 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %26, i32 0, i32 0
  %28 = getelementptr inbounds [2 x double], [2 x double]* %27, i64 0, i64 0
  %29 = load double, double* %28, align 8
  store double %29, double* %22, align 8
  %30 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %31 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %30, i32 0, i32 10
  %32 = bitcast %union.anon.25* %31 to %struct.anon.31*
  %33 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %32, i32 0, i32 0
  %34 = getelementptr inbounds [2 x double], [2 x double]* %33, i64 0, i64 1
  %35 = load double, double* %34, align 8
  store double %35, double* %23, align 8
  %36 = load double*, double** %11, align 8
  %37 = getelementptr inbounds double, double* %36, i64 0
  %38 = load double, double* %37, align 8
  store double %38, double* %15, align 8
  %39 = load double, double* %15, align 8
  %40 = call double @_ZN3pov3SqrEd(double %39)
  store double %40, double* %18, align 8
  %41 = load double*, double** %11, align 8
  %42 = getelementptr inbounds double, double* %41, i64 1
  %43 = load double, double* %42, align 8
  store double %43, double* %16, align 8
  %44 = load double, double* %16, align 8
  %45 = call double @_ZN3pov3SqrEd(double %44)
  store double %45, double* %19, align 8
  %46 = load double, double* %18, align 8
  %47 = load double, double* %19, align 8
  %48 = fadd double %46, %47
  store double %48, double* %21, align 8
  %49 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %50 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %49, i32 0, i32 10
  %51 = bitcast %union.anon.25* %50 to %struct.anon.31*
  %52 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %51, i32 0, i32 1
  %53 = load i16, i16* %52, align 8
  %54 = sext i16 %53 to i32
  store i32 %54, i32* %13, align 4
  store i32 0, i32* %14, align 4
  %55 = load i32, i32* @x.17
  %56 = load i32, i32* @y.18
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %63

; <label>:63:                                     ; preds = %165, %originalBBpart2
  %64 = load i32, i32* %14, align 4
  %65 = load i32, i32* %13, align 4
  %66 = icmp slt i32 %64, %65
  br i1 %66, label %67, label %168

; <label>:67:                                     ; preds = %63
  %68 = load i32, i32* @x.17
  %69 = load i32, i32* @y.18
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %67
  %76 = load double, double* %15, align 8
  %77 = fmul double 2.000000e+00, %76
  %78 = load double, double* %16, align 8
  %79 = fmul double %77, %78
  %80 = load double, double* %23, align 8
  %81 = fadd double %79, %80
  store double %81, double* %16, align 8
  %82 = load double, double* %18, align 8
  %83 = load double, double* %19, align 8
  %84 = fsub double %82, %83
  %85 = load double, double* %22, align 8
  %86 = fadd double %84, %85
  store double %86, double* %15, align 8
  %87 = load double, double* %15, align 8
  %88 = call double @_ZN3pov3SqrEd(double %87)
  store double %88, double* %18, align 8
  %89 = load double, double* %16, align 8
  %90 = call double @_ZN3pov3SqrEd(double %89)
  store double %90, double* %19, align 8
  %91 = load double, double* %18, align 8
  %92 = load double, double* %19, align 8
  %93 = fadd double %91, %92
  store double %93, double* %20, align 8
  %94 = load double, double* %20, align 8
  %95 = load double, double* %21, align 8
  %96 = fcmp olt double %94, %95
  %97 = load i32, i32* @x.17
  %98 = load i32, i32* @y.18
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart249, label %originalBB1alteredBB

originalBBpart249:                                ; preds = %originalBB1
  br i1 %96, label %105, label %107

; <label>:105:                                    ; preds = %originalBBpart249
  %106 = load double, double* %20, align 8
  store double %106, double* %21, align 8
  br label %107

; <label>:107:                                    ; preds = %105, %originalBBpart249
  %108 = load i32, i32* @x.17
  %109 = load i32, i32* @y.18
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %107
  %116 = load double, double* %20, align 8
  %117 = fcmp ogt double %116, 4.000000e+00
  %118 = load i32, i32* @x.17
  %119 = load i32, i32* @y.18
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br i1 %117, label %126, label %148

; <label>:126:                                    ; preds = %originalBBpart253
  %127 = load i32, i32* @x.17
  %128 = load i32, i32* @y.18
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %126
  %135 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %136 = load i32, i32* %14, align 4
  %137 = load double, double* %15, align 8
  %138 = load double, double* %16, align 8
  %139 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %135, i32 %136, double %137, double %138)
  store double %139, double* %17, align 8
  %140 = load i32, i32* @x.17
  %141 = load i32, i32* @y.18
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %168

; <label>:148:                                    ; preds = %originalBBpart253
  %149 = load i32, i32* @x.17
  %150 = load i32, i32* @y.18
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %148
  %157 = load i32, i32* @x.17
  %158 = load i32, i32* @y.18
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %165

; <label>:165:                                    ; preds = %originalBBpart261
  %166 = load i32, i32* %14, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %14, align 4
  br label %63

; <label>:168:                                    ; preds = %originalBBpart257, %63
  %169 = load i32, i32* %14, align 4
  %170 = load i32, i32* %13, align 4
  %171 = icmp eq i32 %169, %170
  br i1 %171, label %172, label %179

; <label>:172:                                    ; preds = %168
  %173 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %174 = load i32, i32* %14, align 4
  %175 = load double, double* %15, align 8
  %176 = load double, double* %16, align 8
  %177 = load double, double* %21, align 8
  %178 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %173, i32 %174, double %175, double %176, double %177)
  store double %178, double* %17, align 8
  br label %179

; <label>:179:                                    ; preds = %172, %168
  %180 = load double, double* %17, align 8
  ret double %180

originalBBalteredBB:                              ; preds = %originalBB, %2
  %181 = alloca double*, align 8
  %182 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %183 = alloca i32, align 4
  %184 = alloca i32, align 4
  %185 = alloca double, align 8
  %186 = alloca double, align 8
  %187 = alloca double, align 8
  %188 = alloca double, align 8
  %189 = alloca double, align 8
  %190 = alloca double, align 8
  %191 = alloca double, align 8
  %192 = alloca double, align 8
  %193 = alloca double, align 8
  store double* %0, double** %181, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %182, align 8
  %194 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %182, align 8
  %195 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %194, i32 0, i32 10
  %196 = bitcast %union.anon.25* %195 to %struct.anon.31*
  %197 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %196, i32 0, i32 0
  %198 = getelementptr inbounds [2 x double], [2 x double]* %197, i64 0, i64 0
  %199 = load double, double* %198, align 8
  store double %199, double* %192, align 8
  %200 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %182, align 8
  %201 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %200, i32 0, i32 10
  %202 = bitcast %union.anon.25* %201 to %struct.anon.31*
  %203 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %202, i32 0, i32 0
  %204 = getelementptr inbounds [2 x double], [2 x double]* %203, i64 0, i64 1
  %205 = load double, double* %204, align 8
  store double %205, double* %193, align 8
  %206 = load double*, double** %181, align 8
  %207 = getelementptr inbounds double, double* %206, i64 0
  %208 = load double, double* %207, align 8
  store double %208, double* %185, align 8
  %209 = load double, double* %185, align 8
  %210 = call double @_ZN3pov3SqrEd(double %209)
  store double %210, double* %188, align 8
  %211 = load double*, double** %181, align 8
  %212 = getelementptr inbounds double, double* %211, i64 1
  %213 = load double, double* %212, align 8
  store double %213, double* %186, align 8
  %214 = load double, double* %186, align 8
  %215 = call double @_ZN3pov3SqrEd(double %214)
  store double %215, double* %189, align 8
  %216 = load double, double* %188, align 8
  %217 = load double, double* %189, align 8
  %_ = fsub double %216, %217
  %gen = fmul double %_, %217
  %218 = fadd double %216, %217
  store double %218, double* %191, align 8
  %219 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %182, align 8
  %220 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %219, i32 0, i32 10
  %221 = bitcast %union.anon.25* %220 to %struct.anon.31*
  %222 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %221, i32 0, i32 1
  %223 = load i16, i16* %222, align 8
  %224 = sext i16 %223 to i32
  store i32 %224, i32* %183, align 4
  store i32 0, i32* %184, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %67
  %225 = load double, double* %15, align 8
  %_2 = fsub double -0.000000e+00, 2.000000e+00
  %gen3 = fadd double %_2, %225
  %_4 = fsub double 2.000000e+00, %225
  %gen5 = fmul double %_4, %225
  %226 = fmul double 2.000000e+00, %225
  %227 = load double, double* %16, align 8
  %_6 = fsub double %226, %227
  %gen7 = fmul double %_6, %227
  %_8 = fsub double -0.000000e+00, %226
  %gen9 = fadd double %_8, %227
  %_10 = fsub double %226, %227
  %gen11 = fmul double %_10, %227
  %_12 = fsub double -0.000000e+00, %226
  %gen13 = fadd double %_12, %227
  %_14 = fsub double -0.000000e+00, %226
  %gen15 = fadd double %_14, %227
  %_16 = fsub double %226, %227
  %gen17 = fmul double %_16, %227
  %228 = fmul double %226, %227
  %229 = load double, double* %23, align 8
  %_18 = fsub double %228, %229
  %gen19 = fmul double %_18, %229
  %230 = fadd double %228, %229
  store double %230, double* %16, align 8
  %231 = load double, double* %18, align 8
  %232 = load double, double* %19, align 8
  %233 = fsub double %231, %232
  %234 = load double, double* %22, align 8
  %_20 = fsub double -0.000000e+00, %233
  %gen21 = fadd double %_20, %234
  %_22 = fsub double %233, %234
  %gen23 = fmul double %_22, %234
  %_24 = fsub double %233, %234
  %gen25 = fmul double %_24, %234
  %_26 = fsub double -0.000000e+00, %233
  %gen27 = fadd double %_26, %234
  %_28 = fsub double %233, %234
  %gen29 = fmul double %_28, %234
  %235 = fadd double %233, %234
  store double %235, double* %15, align 8
  %236 = load double, double* %15, align 8
  %237 = call double @_ZN3pov3SqrEd(double %236)
  store double %237, double* %18, align 8
  %238 = load double, double* %16, align 8
  %239 = call double @_ZN3pov3SqrEd(double %238)
  store double %239, double* %19, align 8
  %240 = load double, double* %18, align 8
  %241 = load double, double* %19, align 8
  %_30 = fsub double %240, %241
  %gen31 = fmul double %_30, %241
  %_32 = fsub double -0.000000e+00, %240
  %gen33 = fadd double %_32, %241
  %_34 = fsub double %240, %241
  %gen35 = fmul double %_34, %241
  %_36 = fsub double -0.000000e+00, %240
  %gen37 = fadd double %_36, %241
  %_38 = fsub double -0.000000e+00, %240
  %gen39 = fadd double %_38, %241
  %_40 = fsub double -0.000000e+00, %240
  %gen41 = fadd double %_40, %241
  %_42 = fsub double -0.000000e+00, %240
  %gen43 = fadd double %_42, %241
  %_44 = fsub double %240, %241
  %gen45 = fmul double %_44, %241
  %_46 = fsub double -0.000000e+00, %240
  %gen47 = fadd double %_46, %241
  %242 = fadd double %240, %241
  store double %242, double* %20, align 8
  %243 = load double, double* %20, align 8
  %244 = load double, double* %21, align 8
  %245 = fcmp olt double %243, %244
  br label %originalBB1

originalBB51alteredBB:                            ; preds = %originalBB51, %107
  %246 = load double, double* %20, align 8
  %247 = fcmp ogt double %246, 4.000000e+00
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %126
  %248 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %249 = load i32, i32* %14, align 4
  %250 = load double, double* %15, align 8
  %251 = load double, double* %16, align 8
  %252 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %248, i32 %249, double %250, double %251)
  store double %252, double* %17, align 8
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %148
  br label %originalBB59
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL14julia3_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #2 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %16 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %17 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %16, i32 0, i32 10
  %18 = bitcast %union.anon.25* %17 to %struct.anon.31*
  %19 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %18, i32 0, i32 0
  %20 = getelementptr inbounds [2 x double], [2 x double]* %19, i64 0, i64 0
  %21 = load double, double* %20, align 8
  store double %21, double* %14, align 8
  %22 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %23 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %22, i32 0, i32 10
  %24 = bitcast %union.anon.25* %23 to %struct.anon.31*
  %25 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %24, i32 0, i32 0
  %26 = getelementptr inbounds [2 x double], [2 x double]* %25, i64 0, i64 1
  %27 = load double, double* %26, align 8
  store double %27, double* %15, align 8
  %28 = load double*, double** %3, align 8
  %29 = getelementptr inbounds double, double* %28, i64 0
  %30 = load double, double* %29, align 8
  store double %30, double* %7, align 8
  %31 = load double, double* %7, align 8
  %32 = call double @_ZN3pov3SqrEd(double %31)
  store double %32, double* %10, align 8
  %33 = load double*, double** %3, align 8
  %34 = getelementptr inbounds double, double* %33, i64 1
  %35 = load double, double* %34, align 8
  store double %35, double* %8, align 8
  %36 = load double, double* %8, align 8
  %37 = call double @_ZN3pov3SqrEd(double %36)
  store double %37, double* %11, align 8
  %38 = load double, double* %10, align 8
  %39 = load double, double* %11, align 8
  %40 = fadd double %38, %39
  store double %40, double* %13, align 8
  %41 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %42 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %41, i32 0, i32 10
  %43 = bitcast %union.anon.25* %42 to %struct.anon.31*
  %44 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %43, i32 0, i32 1
  %45 = load i16, i16* %44, align 8
  %46 = sext i16 %45 to i32
  store i32 %46, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %47

; <label>:47:                                     ; preds = %110, %2
  %48 = load i32, i32* %6, align 4
  %49 = load i32, i32* %5, align 4
  %50 = icmp slt i32 %48, %49
  br i1 %50, label %51, label %113

; <label>:51:                                     ; preds = %47
  %52 = load i32, i32* @x.19
  %53 = load i32, i32* @y.20
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %51
  %60 = load double, double* %10, align 8
  %61 = fmul double 3.000000e+00, %60
  %62 = load double, double* %8, align 8
  %63 = fmul double %61, %62
  %64 = load double, double* %11, align 8
  %65 = load double, double* %8, align 8
  %66 = fmul double %64, %65
  %67 = fsub double %63, %66
  %68 = load double, double* %15, align 8
  %69 = fadd double %67, %68
  store double %69, double* %8, align 8
  %70 = load double, double* %10, align 8
  %71 = load double, double* %7, align 8
  %72 = fmul double %70, %71
  %73 = load double, double* %7, align 8
  %74 = fmul double 3.000000e+00, %73
  %75 = load double, double* %11, align 8
  %76 = fmul double %74, %75
  %77 = fsub double %72, %76
  %78 = load double, double* %14, align 8
  %79 = fadd double %77, %78
  store double %79, double* %7, align 8
  %80 = load double, double* %7, align 8
  %81 = call double @_ZN3pov3SqrEd(double %80)
  store double %81, double* %10, align 8
  %82 = load double, double* %8, align 8
  %83 = call double @_ZN3pov3SqrEd(double %82)
  store double %83, double* %11, align 8
  %84 = load double, double* %10, align 8
  %85 = load double, double* %11, align 8
  %86 = fadd double %84, %85
  store double %86, double* %12, align 8
  %87 = load double, double* %12, align 8
  %88 = load double, double* %13, align 8
  %89 = fcmp olt double %87, %88
  %90 = load i32, i32* @x.19
  %91 = load i32, i32* @y.20
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %89, label %98, label %100

; <label>:98:                                     ; preds = %originalBBpart2
  %99 = load double, double* %12, align 8
  store double %99, double* %13, align 8
  br label %100

; <label>:100:                                    ; preds = %98, %originalBBpart2
  %101 = load double, double* %12, align 8
  %102 = fcmp ogt double %101, 4.000000e+00
  br i1 %102, label %103, label %109

; <label>:103:                                    ; preds = %100
  %104 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %105 = load i32, i32* %6, align 4
  %106 = load double, double* %7, align 8
  %107 = load double, double* %8, align 8
  %108 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %104, i32 %105, double %106, double %107)
  store double %108, double* %9, align 8
  br label %113

; <label>:109:                                    ; preds = %100
  br label %110

; <label>:110:                                    ; preds = %109
  %111 = load i32, i32* %6, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %6, align 4
  br label %47

; <label>:113:                                    ; preds = %103, %47
  %114 = load i32, i32* %6, align 4
  %115 = load i32, i32* %5, align 4
  %116 = icmp eq i32 %114, %115
  br i1 %116, label %117, label %124

; <label>:117:                                    ; preds = %113
  %118 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %119 = load i32, i32* %6, align 4
  %120 = load double, double* %7, align 8
  %121 = load double, double* %8, align 8
  %122 = load double, double* %13, align 8
  %123 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %118, i32 %119, double %120, double %121, double %122)
  store double %123, double* %9, align 8
  br label %124

; <label>:124:                                    ; preds = %117, %113
  %125 = load i32, i32* @x.19
  %126 = load i32, i32* @y.20
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %originalBB71alteredBB, %124
  %133 = load double, double* %9, align 8
  %134 = load i32, i32* @x.19
  %135 = load i32, i32* @y.20
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  ret double %133

originalBBalteredBB:                              ; preds = %originalBB, %51
  %142 = load double, double* %10, align 8
  %_ = fsub double -0.000000e+00, 3.000000e+00
  %gen = fadd double %_, %142
  %_1 = fsub double 3.000000e+00, %142
  %gen2 = fmul double %_1, %142
  %_3 = fsub double -0.000000e+00, 3.000000e+00
  %gen4 = fadd double %_3, %142
  %143 = fmul double 3.000000e+00, %142
  %144 = load double, double* %8, align 8
  %_5 = fsub double -0.000000e+00, %143
  %gen6 = fadd double %_5, %144
  %_7 = fsub double %143, %144
  %gen8 = fmul double %_7, %144
  %_9 = fsub double -0.000000e+00, %143
  %gen10 = fadd double %_9, %144
  %145 = fmul double %143, %144
  %146 = load double, double* %11, align 8
  %147 = load double, double* %8, align 8
  %_11 = fsub double -0.000000e+00, %146
  %gen12 = fadd double %_11, %147
  %_13 = fsub double -0.000000e+00, %146
  %gen14 = fadd double %_13, %147
  %148 = fmul double %146, %147
  %_15 = fsub double %145, %148
  %gen16 = fmul double %_15, %148
  %_17 = fsub double %145, %148
  %gen18 = fmul double %_17, %148
  %149 = fsub double %145, %148
  %150 = load double, double* %15, align 8
  %_19 = fsub double %149, %150
  %gen20 = fmul double %_19, %150
  %_21 = fsub double -0.000000e+00, %149
  %gen22 = fadd double %_21, %150
  %_23 = fsub double -0.000000e+00, %149
  %gen24 = fadd double %_23, %150
  %_25 = fsub double -0.000000e+00, %149
  %gen26 = fadd double %_25, %150
  %_27 = fsub double -0.000000e+00, %149
  %gen28 = fadd double %_27, %150
  %151 = fadd double %149, %150
  store double %151, double* %8, align 8
  %152 = load double, double* %10, align 8
  %153 = load double, double* %7, align 8
  %_29 = fsub double -0.000000e+00, %152
  %gen30 = fadd double %_29, %153
  %_31 = fsub double -0.000000e+00, %152
  %gen32 = fadd double %_31, %153
  %_33 = fsub double %152, %153
  %gen34 = fmul double %_33, %153
  %_35 = fsub double -0.000000e+00, %152
  %gen36 = fadd double %_35, %153
  %_37 = fsub double %152, %153
  %gen38 = fmul double %_37, %153
  %_39 = fsub double %152, %153
  %gen40 = fmul double %_39, %153
  %_41 = fsub double %152, %153
  %gen42 = fmul double %_41, %153
  %154 = fmul double %152, %153
  %155 = load double, double* %7, align 8
  %_43 = fsub double 3.000000e+00, %155
  %gen44 = fmul double %_43, %155
  %_45 = fsub double -0.000000e+00, 3.000000e+00
  %gen46 = fadd double %_45, %155
  %_47 = fsub double 3.000000e+00, %155
  %gen48 = fmul double %_47, %155
  %156 = fmul double 3.000000e+00, %155
  %157 = load double, double* %11, align 8
  %158 = fmul double %156, %157
  %_49 = fsub double -0.000000e+00, %154
  %gen50 = fadd double %_49, %158
  %159 = fsub double %154, %158
  %160 = load double, double* %14, align 8
  %_51 = fsub double %159, %160
  %gen52 = fmul double %_51, %160
  %_53 = fsub double -0.000000e+00, %159
  %gen54 = fadd double %_53, %160
  %_55 = fsub double -0.000000e+00, %159
  %gen56 = fadd double %_55, %160
  %_57 = fsub double -0.000000e+00, %159
  %gen58 = fadd double %_57, %160
  %_59 = fsub double %159, %160
  %gen60 = fmul double %_59, %160
  %161 = fadd double %159, %160
  store double %161, double* %7, align 8
  %162 = load double, double* %7, align 8
  %163 = call double @_ZN3pov3SqrEd(double %162)
  store double %163, double* %10, align 8
  %164 = load double, double* %8, align 8
  %165 = call double @_ZN3pov3SqrEd(double %164)
  store double %165, double* %11, align 8
  %166 = load double, double* %10, align 8
  %167 = load double, double* %11, align 8
  %_61 = fsub double -0.000000e+00, %166
  %gen62 = fadd double %_61, %167
  %_63 = fsub double -0.000000e+00, %166
  %gen64 = fadd double %_63, %167
  %_65 = fsub double %166, %167
  %gen66 = fmul double %_65, %167
  %_67 = fsub double %166, %167
  %gen68 = fmul double %_67, %167
  %_69 = fsub double %166, %167
  %gen70 = fmul double %_69, %167
  %168 = fadd double %166, %167
  store double %168, double* %12, align 8
  %169 = load double, double* %12, align 8
  %170 = load double, double* %13, align 8
  %171 = fcmp olt double %169, %170
  br label %originalBB

originalBB71alteredBB:                            ; preds = %originalBB71, %124
  %172 = load double, double* %9, align 8
  br label %originalBB71
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL14julia4_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #2 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %16 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %17 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %16, i32 0, i32 10
  %18 = bitcast %union.anon.25* %17 to %struct.anon.31*
  %19 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %18, i32 0, i32 0
  %20 = getelementptr inbounds [2 x double], [2 x double]* %19, i64 0, i64 0
  %21 = load double, double* %20, align 8
  store double %21, double* %14, align 8
  %22 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %23 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %22, i32 0, i32 10
  %24 = bitcast %union.anon.25* %23 to %struct.anon.31*
  %25 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %24, i32 0, i32 0
  %26 = getelementptr inbounds [2 x double], [2 x double]* %25, i64 0, i64 1
  %27 = load double, double* %26, align 8
  store double %27, double* %15, align 8
  %28 = load double*, double** %3, align 8
  %29 = getelementptr inbounds double, double* %28, i64 0
  %30 = load double, double* %29, align 8
  store double %30, double* %7, align 8
  %31 = load double, double* %7, align 8
  %32 = call double @_ZN3pov3SqrEd(double %31)
  store double %32, double* %10, align 8
  %33 = load double*, double** %3, align 8
  %34 = getelementptr inbounds double, double* %33, i64 1
  %35 = load double, double* %34, align 8
  store double %35, double* %8, align 8
  %36 = load double, double* %8, align 8
  %37 = call double @_ZN3pov3SqrEd(double %36)
  store double %37, double* %11, align 8
  %38 = load double, double* %10, align 8
  %39 = load double, double* %11, align 8
  %40 = fadd double %38, %39
  store double %40, double* %13, align 8
  %41 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %42 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %41, i32 0, i32 10
  %43 = bitcast %union.anon.25* %42 to %struct.anon.31*
  %44 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %43, i32 0, i32 1
  %45 = load i16, i16* %44, align 8
  %46 = sext i16 %45 to i32
  store i32 %46, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %47

; <label>:47:                                     ; preds = %originalBBpart212, %2
  %48 = load i32, i32* @x.21
  %49 = load i32, i32* @y.22
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %47
  %56 = load i32, i32* %6, align 4
  %57 = load i32, i32* %5, align 4
  %58 = icmp slt i32 %56, %57
  %59 = load i32, i32* @x.21
  %60 = load i32, i32* @y.22
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %58, label %67, label %137

; <label>:67:                                     ; preds = %originalBBpart2
  %68 = load double, double* %10, align 8
  %69 = load double, double* %7, align 8
  %70 = fmul double %68, %69
  %71 = load double, double* %8, align 8
  %72 = fmul double %70, %71
  %73 = load double, double* %7, align 8
  %74 = load double, double* %11, align 8
  %75 = fmul double %73, %74
  %76 = load double, double* %8, align 8
  %77 = fmul double %75, %76
  %78 = fsub double %72, %77
  %79 = fmul double 4.000000e+00, %78
  %80 = load double, double* %15, align 8
  %81 = fadd double %79, %80
  store double %81, double* %8, align 8
  %82 = load double, double* %10, align 8
  %83 = load double, double* %10, align 8
  %84 = fmul double %82, %83
  %85 = load double, double* %10, align 8
  %86 = fmul double 6.000000e+00, %85
  %87 = load double, double* %11, align 8
  %88 = fmul double %86, %87
  %89 = fsub double %84, %88
  %90 = load double, double* %11, align 8
  %91 = load double, double* %11, align 8
  %92 = fmul double %90, %91
  %93 = fadd double %89, %92
  %94 = load double, double* %14, align 8
  %95 = fadd double %93, %94
  store double %95, double* %7, align 8
  %96 = load double, double* %7, align 8
  %97 = call double @_ZN3pov3SqrEd(double %96)
  store double %97, double* %10, align 8
  %98 = load double, double* %8, align 8
  %99 = call double @_ZN3pov3SqrEd(double %98)
  store double %99, double* %11, align 8
  %100 = load double, double* %10, align 8
  %101 = load double, double* %11, align 8
  %102 = fadd double %100, %101
  store double %102, double* %12, align 8
  %103 = load double, double* %12, align 8
  %104 = load double, double* %13, align 8
  %105 = fcmp olt double %103, %104
  br i1 %105, label %106, label %108

; <label>:106:                                    ; preds = %67
  %107 = load double, double* %12, align 8
  store double %107, double* %13, align 8
  br label %108

; <label>:108:                                    ; preds = %106, %67
  %109 = load double, double* %12, align 8
  %110 = fcmp ogt double %109, 4.000000e+00
  br i1 %110, label %111, label %117

; <label>:111:                                    ; preds = %108
  %112 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %113 = load i32, i32* %6, align 4
  %114 = load double, double* %7, align 8
  %115 = load double, double* %8, align 8
  %116 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %112, i32 %113, double %114, double %115)
  store double %116, double* %9, align 8
  br label %137

; <label>:117:                                    ; preds = %108
  br label %118

; <label>:118:                                    ; preds = %117
  %119 = load i32, i32* @x.21
  %120 = load i32, i32* @y.22
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %118
  %127 = load i32, i32* %6, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %6, align 4
  %129 = load i32, i32* @x.21
  %130 = load i32, i32* @y.22
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart212, label %originalBB1alteredBB

originalBBpart212:                                ; preds = %originalBB1
  br label %47

; <label>:137:                                    ; preds = %111, %originalBBpart2
  %138 = load i32, i32* @x.21
  %139 = load i32, i32* @y.22
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %137
  %146 = load i32, i32* %6, align 4
  %147 = load i32, i32* %5, align 4
  %148 = icmp eq i32 %146, %147
  %149 = load i32, i32* @x.21
  %150 = load i32, i32* @y.22
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %148, label %157, label %164

; <label>:157:                                    ; preds = %originalBBpart216
  %158 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %159 = load i32, i32* %6, align 4
  %160 = load double, double* %7, align 8
  %161 = load double, double* %8, align 8
  %162 = load double, double* %13, align 8
  %163 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %158, i32 %159, double %160, double %161, double %162)
  store double %163, double* %9, align 8
  br label %164

; <label>:164:                                    ; preds = %157, %originalBBpart216
  %165 = load double, double* %9, align 8
  ret double %165

originalBBalteredBB:                              ; preds = %originalBB, %47
  %166 = load i32, i32* %6, align 4
  %167 = load i32, i32* %5, align 4
  %168 = icmp slt i32 %166, %167
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %118
  %169 = load i32, i32* %6, align 4
  %_ = shl i32 %169, 1
  %_2 = shl i32 %169, 1
  %_3 = sub i32 0, %169
  %gen = add i32 %_3, 1
  %_4 = sub i32 0, %169
  %gen5 = add i32 %_4, 1
  %_6 = sub i32 0, %169
  %gen7 = add i32 %_6, 1
  %_8 = sub i32 %169, 1
  %gen9 = mul i32 %_8, 1
  %_10 = shl i32 %169, 1
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %6, align 4
  br label %originalBB1

originalBB14alteredBB:                            ; preds = %originalBB14, %137
  %171 = load i32, i32* %6, align 4
  %172 = load i32, i32* %5, align 4
  %173 = icmp eq i32 %171, %172
  br label %originalBB14
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL14juliax_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca i32*, align 8
  %18 = alloca double, align 8
  %19 = alloca i32, align 4
  %20 = alloca double, align 8
  %21 = alloca i32, align 4
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  store double 0.000000e+00, double* %10, align 8
  %22 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %23 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %22, i32 0, i32 10
  %24 = bitcast %union.anon.25* %23 to %struct.anon.31*
  %25 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %24, i32 0, i32 0
  %26 = getelementptr inbounds [2 x double], [2 x double]* %25, i64 0, i64 0
  %27 = load double, double* %26, align 8
  store double %27, double* %15, align 8
  %28 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %29 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %28, i32 0, i32 10
  %30 = bitcast %union.anon.25* %29 to %struct.anon.31*
  %31 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %30, i32 0, i32 0
  %32 = getelementptr inbounds [2 x double], [2 x double]* %31, i64 0, i64 1
  %33 = load double, double* %32, align 8
  store double %33, double* %16, align 8
  %34 = load i8, i8* @_ZN3pov26BinomialCoefficientsInitedE, align 1
  %35 = trunc i8 %34 to i1
  %36 = zext i1 %35 to i32
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

; <label>:38:                                     ; preds = %2
  call void @_ZN3povL30InitializeBinomialCoefficientsEv()
  br label %39

; <label>:39:                                     ; preds = %38, %2
  %40 = load i32, i32* @x.23
  %41 = load i32, i32* @y.24
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %39
  %48 = load double*, double** %3, align 8
  %49 = getelementptr inbounds double, double* %48, i64 0
  %50 = load double, double* %49, align 8
  store double %50, double* %11, align 8
  store double %50, double* %8, align 8
  %51 = load double*, double** %3, align 8
  %52 = getelementptr inbounds double, double* %51, i64 1
  %53 = load double, double* %52, align 8
  store double %53, double* %12, align 8
  store double %53, double* %9, align 8
  %54 = load double, double* %8, align 8
  %55 = load double, double* %8, align 8
  %56 = fmul double %54, %55
  %57 = load double, double* %9, align 8
  %58 = load double, double* %9, align 8
  %59 = fmul double %57, %58
  %60 = fadd double %56, %59
  store double %60, double* %14, align 8
  %61 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %62 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %61, i32 0, i32 10
  %63 = bitcast %union.anon.25* %62 to %struct.anon.31*
  %64 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %63, i32 0, i32 1
  %65 = load i16, i16* %64, align 8
  %66 = sext i16 %65 to i32
  store i32 %66, i32* %5, align 4
  %67 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %68 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %67, i32 0, i32 10
  %69 = bitcast %union.anon.25* %68 to %struct.anon.31*
  %70 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %69, i32 0, i32 6
  %71 = load i32, i32* %70, align 8
  store i32 %71, i32* %7, align 4
  %72 = load i32, i32* %7, align 4
  %73 = add nsw i32 %72, 1
  %74 = load i32, i32* %7, align 4
  %75 = mul nsw i32 %73, %74
  %76 = sdiv i32 %75, 2
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [595 x i32], [595 x i32]* @_ZN3pov20BinomialCoefficientsE, i64 0, i64 %77
  store i32* %78, i32** %17, align 8
  store i32 0, i32* %6, align 4
  %79 = load i32, i32* @x.23
  %80 = load i32, i32* @y.24
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %87

; <label>:87:                                     ; preds = %193, %originalBBpart2
  %88 = load i32, i32* %6, align 4
  %89 = load i32, i32* %5, align 4
  %90 = icmp slt i32 %88, %89
  br i1 %90, label %91, label %196

; <label>:91:                                     ; preds = %87
  %92 = load double, double* %8, align 8
  %93 = load i32, i32* %7, align 4
  %94 = call double @_ZSt3powdi(double %92, i32 %93)
  store double %94, double* %18, align 8
  store i32 2, i32* %19, align 4
  br label %95

; <label>:95:                                     ; preds = %118, %91
  %96 = load i32, i32* %19, align 4
  %97 = load i32, i32* %7, align 4
  %98 = icmp sle i32 %96, %97
  br i1 %98, label %99, label %121

; <label>:99:                                     ; preds = %95
  %100 = load i32*, i32** %17, align 8
  %101 = load i32, i32* %19, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i32, i32* %100, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = sitofp i32 %104 to double
  %106 = load double, double* %8, align 8
  %107 = load i32, i32* %7, align 4
  %108 = load i32, i32* %19, align 4
  %109 = sub nsw i32 %107, %108
  %110 = call double @_ZSt3powdi(double %106, i32 %109)
  %111 = fmul double %105, %110
  %112 = load double, double* %9, align 8
  %113 = load i32, i32* %19, align 4
  %114 = call double @_ZSt3powdi(double %112, i32 %113)
  %115 = fmul double %111, %114
  %116 = load double, double* %18, align 8
  %117 = fadd double %116, %115
  store double %117, double* %18, align 8
  br label %118

; <label>:118:                                    ; preds = %99
  %119 = load i32, i32* %19, align 4
  %120 = add nsw i32 %119, 2
  store i32 %120, i32* %19, align 4
  br label %95

; <label>:121:                                    ; preds = %95
  store double 0.000000e+00, double* %20, align 8
  store i32 1, i32* %21, align 4
  br label %122

; <label>:122:                                    ; preds = %145, %121
  %123 = load i32, i32* %21, align 4
  %124 = load i32, i32* %7, align 4
  %125 = icmp sle i32 %123, %124
  br i1 %125, label %126, label %148

; <label>:126:                                    ; preds = %122
  %127 = load i32*, i32** %17, align 8
  %128 = load i32, i32* %21, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, i32* %127, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = sitofp i32 %131 to double
  %133 = load double, double* %8, align 8
  %134 = load i32, i32* %7, align 4
  %135 = load i32, i32* %21, align 4
  %136 = sub nsw i32 %134, %135
  %137 = call double @_ZSt3powdi(double %133, i32 %136)
  %138 = fmul double %132, %137
  %139 = load double, double* %9, align 8
  %140 = load i32, i32* %21, align 4
  %141 = call double @_ZSt3powdi(double %139, i32 %140)
  %142 = fmul double %138, %141
  %143 = load double, double* %20, align 8
  %144 = fadd double %143, %142
  store double %144, double* %20, align 8
  br label %145

; <label>:145:                                    ; preds = %126
  %146 = load i32, i32* %21, align 4
  %147 = add nsw i32 %146, 2
  store i32 %147, i32* %21, align 4
  br label %122

; <label>:148:                                    ; preds = %122
  %149 = load double, double* %18, align 8
  %150 = load double, double* %15, align 8
  %151 = fadd double %149, %150
  store double %151, double* %8, align 8
  %152 = load double, double* %20, align 8
  %153 = load double, double* %16, align 8
  %154 = fadd double %152, %153
  store double %154, double* %9, align 8
  %155 = load double, double* %8, align 8
  %156 = load double, double* %8, align 8
  %157 = fmul double %155, %156
  %158 = load double, double* %9, align 8
  %159 = load double, double* %9, align 8
  %160 = fmul double %158, %159
  %161 = fadd double %157, %160
  store double %161, double* %13, align 8
  %162 = load double, double* %13, align 8
  %163 = load double, double* %14, align 8
  %164 = fcmp olt double %162, %163
  br i1 %164, label %165, label %167

; <label>:165:                                    ; preds = %148
  %166 = load double, double* %13, align 8
  store double %166, double* %14, align 8
  br label %167

; <label>:167:                                    ; preds = %165, %148
  %168 = load double, double* %13, align 8
  %169 = fcmp ogt double %168, 4.000000e+00
  br i1 %169, label %170, label %176

; <label>:170:                                    ; preds = %167
  %171 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %172 = load i32, i32* %6, align 4
  %173 = load double, double* %8, align 8
  %174 = load double, double* %9, align 8
  %175 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %171, i32 %172, double %173, double %174)
  store double %175, double* %10, align 8
  br label %196

; <label>:176:                                    ; preds = %167
  %177 = load i32, i32* @x.23
  %178 = load i32, i32* @y.24
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %originalBB33alteredBB, %176
  %185 = load i32, i32* @x.23
  %186 = load i32, i32* @y.24
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %193

; <label>:193:                                    ; preds = %originalBBpart235
  %194 = load i32, i32* %6, align 4
  %195 = add nsw i32 %194, 1
  store i32 %195, i32* %6, align 4
  br label %87

; <label>:196:                                    ; preds = %170, %87
  %197 = load i32, i32* @x.23
  %198 = load i32, i32* @y.24
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %196
  %205 = load i32, i32* %6, align 4
  %206 = load i32, i32* %5, align 4
  %207 = icmp eq i32 %205, %206
  %208 = load i32, i32* @x.23
  %209 = load i32, i32* @y.24
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br i1 %207, label %216, label %239

; <label>:216:                                    ; preds = %originalBBpart239
  %217 = load i32, i32* @x.23
  %218 = load i32, i32* @y.24
  %219 = sub i32 %217, 1
  %220 = mul i32 %217, %219
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %222, %223
  br i1 %224, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %originalBB41alteredBB, %216
  %225 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %226 = load i32, i32* %6, align 4
  %227 = load double, double* %8, align 8
  %228 = load double, double* %9, align 8
  %229 = load double, double* %14, align 8
  %230 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %225, i32 %226, double %227, double %228, double %229)
  store double %230, double* %10, align 8
  %231 = load i32, i32* @x.23
  %232 = load i32, i32* @y.24
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %239

; <label>:239:                                    ; preds = %originalBBpart243, %originalBBpart239
  %240 = load double, double* %10, align 8
  ret double %240

originalBBalteredBB:                              ; preds = %originalBB, %39
  %241 = load double*, double** %3, align 8
  %242 = getelementptr inbounds double, double* %241, i64 0
  %243 = load double, double* %242, align 8
  store double %243, double* %11, align 8
  store double %243, double* %8, align 8
  %244 = load double*, double** %3, align 8
  %245 = getelementptr inbounds double, double* %244, i64 1
  %246 = load double, double* %245, align 8
  store double %246, double* %12, align 8
  store double %246, double* %9, align 8
  %247 = load double, double* %8, align 8
  %248 = load double, double* %8, align 8
  %_ = fsub double %247, %248
  %gen = fmul double %_, %248
  %_1 = fsub double %247, %248
  %gen2 = fmul double %_1, %248
  %_3 = fsub double -0.000000e+00, %247
  %gen4 = fadd double %_3, %248
  %_5 = fsub double -0.000000e+00, %247
  %gen6 = fadd double %_5, %248
  %249 = fmul double %247, %248
  %250 = load double, double* %9, align 8
  %251 = load double, double* %9, align 8
  %_7 = fsub double %250, %251
  %gen8 = fmul double %_7, %251
  %252 = fmul double %250, %251
  %_9 = fsub double %249, %252
  %gen10 = fmul double %_9, %252
  %_11 = fsub double %249, %252
  %gen12 = fmul double %_11, %252
  %253 = fadd double %249, %252
  store double %253, double* %14, align 8
  %254 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %255 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %254, i32 0, i32 10
  %256 = bitcast %union.anon.25* %255 to %struct.anon.31*
  %257 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %256, i32 0, i32 1
  %258 = load i16, i16* %257, align 8
  %259 = sext i16 %258 to i32
  store i32 %259, i32* %5, align 4
  %260 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %261 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %260, i32 0, i32 10
  %262 = bitcast %union.anon.25* %261 to %struct.anon.31*
  %263 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %262, i32 0, i32 6
  %264 = load i32, i32* %263, align 8
  store i32 %264, i32* %7, align 4
  %265 = load i32, i32* %7, align 4
  %_13 = shl i32 %265, 1
  %_14 = sub i32 %265, 1
  %gen15 = mul i32 %_14, 1
  %_16 = sub i32 0, %265
  %gen17 = add i32 %_16, 1
  %_18 = sub i32 %265, 1
  %gen19 = mul i32 %_18, 1
  %266 = add nsw i32 %265, 1
  %267 = load i32, i32* %7, align 4
  %_20 = shl i32 %266, %267
  %_21 = shl i32 %266, %267
  %_22 = sub i32 %266, %267
  %gen23 = mul i32 %_22, %267
  %_24 = sub i32 %266, %267
  %gen25 = mul i32 %_24, %267
  %_26 = sub i32 %266, %267
  %gen27 = mul i32 %_26, %267
  %_28 = shl i32 %266, %267
  %_29 = shl i32 %266, %267
  %268 = mul nsw i32 %266, %267
  %_30 = shl i32 %268, 2
  %_31 = sub i32 %268, 2
  %gen32 = mul i32 %_31, 2
  %269 = sdiv i32 %268, 2
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds [595 x i32], [595 x i32]* @_ZN3pov20BinomialCoefficientsE, i64 0, i64 %270
  store i32* %271, i32** %17, align 8
  store i32 0, i32* %6, align 4
  br label %originalBB

originalBB33alteredBB:                            ; preds = %originalBB33, %176
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %196
  %272 = load i32, i32* %6, align 4
  %273 = load i32, i32* %5, align 4
  %274 = icmp eq i32 %272, %273
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %216
  %275 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %276 = load i32, i32* %6, align 4
  %277 = load double, double* %8, align 8
  %278 = load double, double* %9, align 8
  %279 = load double, double* %14, align 8
  %280 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %275, i32 %276, double %277, double %278, double %279)
  store double %280, double* %10, align 8
  br label %originalBB41
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL15leopard_patternEPd(double*) #2 {
  %2 = alloca double*, align 8
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  store double* %0, double** %2, align 8
  %7 = load double*, double** %2, align 8
  %8 = getelementptr inbounds double, double* %7, i64 0
  %9 = load double, double* %8, align 8
  %10 = call double @sin(double %9) #7
  store double %10, double* %4, align 8
  %11 = load double*, double** %2, align 8
  %12 = getelementptr inbounds double, double* %11, i64 1
  %13 = load double, double* %12, align 8
  %14 = call double @sin(double %13) #7
  store double %14, double* %5, align 8
  %15 = load double*, double** %2, align 8
  %16 = getelementptr inbounds double, double* %15, i64 2
  %17 = load double, double* %16, align 8
  %18 = call double @sin(double %17) #7
  store double %18, double* %6, align 8
  %19 = load double, double* %4, align 8
  %20 = load double, double* %5, align 8
  %21 = fadd double %19, %20
  %22 = load double, double* %6, align 8
  %23 = fadd double %21, %22
  %24 = fdiv double %23, 3.000000e+00
  %25 = call double @_ZN3pov3SqrEd(double %24)
  store double %25, double* %3, align 8
  %26 = load double, double* %3, align 8
  ret double %26
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL16magnet1m_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #2 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %21 = load double*, double** %3, align 8
  %22 = getelementptr inbounds double, double* %21, i64 0
  %23 = load double, double* %22, align 8
  store double %23, double* %12, align 8
  %24 = load double*, double** %3, align 8
  %25 = getelementptr inbounds double, double* %24, i64 1
  %26 = load double, double* %25, align 8
  store double %26, double* %13, align 8
  store double 0.000000e+00, double* %10, align 8
  store double 0.000000e+00, double* %7, align 8
  store double 0.000000e+00, double* %11, align 8
  store double 0.000000e+00, double* %8, align 8
  store double 1.000000e+04, double* %20, align 8
  %27 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %28 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %27, i32 0, i32 10
  %29 = bitcast %union.anon.25* %28 to %struct.anon.31*
  %30 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %29, i32 0, i32 1
  %31 = load i16, i16* %30, align 8
  %32 = sext i16 %31 to i32
  store i32 %32, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %33

; <label>:33:                                     ; preds = %191, %2
  %34 = load i32, i32* %6, align 4
  %35 = load i32, i32* %5, align 4
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %37, label %194

; <label>:37:                                     ; preds = %33
  %38 = load i32, i32* @x.27
  %39 = load i32, i32* @y.28
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %37
  %46 = load double, double* %10, align 8
  %47 = load double, double* %11, align 8
  %48 = fsub double %46, %47
  %49 = load double, double* %12, align 8
  %50 = fadd double %48, %49
  %51 = fsub double %50, 1.000000e+00
  store double %51, double* %15, align 8
  %52 = load double, double* %7, align 8
  %53 = fmul double 2.000000e+00, %52
  %54 = load double, double* %8, align 8
  %55 = fmul double %53, %54
  %56 = load double, double* %13, align 8
  %57 = fadd double %55, %56
  store double %57, double* %16, align 8
  %58 = load double, double* %7, align 8
  %59 = fmul double 2.000000e+00, %58
  %60 = load double, double* %12, align 8
  %61 = fadd double %59, %60
  %62 = fsub double %61, 2.000000e+00
  store double %62, double* %17, align 8
  %63 = load double, double* %8, align 8
  %64 = fmul double 2.000000e+00, %63
  %65 = load double, double* %13, align 8
  %66 = fadd double %64, %65
  store double %66, double* %18, align 8
  %67 = load double, double* %17, align 8
  %68 = load double, double* %17, align 8
  %69 = fmul double %67, %68
  %70 = load double, double* %18, align 8
  %71 = load double, double* %18, align 8
  %72 = fmul double %70, %71
  %73 = fadd double %69, %72
  store double %73, double* %14, align 8
  %74 = load double, double* %15, align 8
  %75 = load double, double* %17, align 8
  %76 = fmul double %74, %75
  %77 = load double, double* %16, align 8
  %78 = load double, double* %18, align 8
  %79 = fmul double %77, %78
  %80 = fadd double %76, %79
  %81 = load double, double* %14, align 8
  %82 = fdiv double %80, %81
  store double %82, double* %7, align 8
  %83 = load double, double* %16, align 8
  %84 = load double, double* %17, align 8
  %85 = fmul double %83, %84
  %86 = load double, double* %15, align 8
  %87 = load double, double* %18, align 8
  %88 = fmul double %86, %87
  %89 = fsub double %85, %88
  %90 = load double, double* %14, align 8
  %91 = fdiv double %89, %90
  store double %91, double* %8, align 8
  %92 = load double, double* %8, align 8
  %93 = load double, double* %8, align 8
  %94 = fmul double %92, %93
  store double %94, double* %11, align 8
  %95 = load double, double* %7, align 8
  %96 = fmul double 2.000000e+00, %95
  %97 = load double, double* %8, align 8
  %98 = fmul double %96, %97
  store double %98, double* %8, align 8
  %99 = load double, double* %7, align 8
  %100 = load double, double* %7, align 8
  %101 = fmul double %99, %100
  %102 = load double, double* %11, align 8
  %103 = fsub double %101, %102
  store double %103, double* %7, align 8
  %104 = load double, double* %7, align 8
  %105 = call double @_ZN3pov3SqrEd(double %104)
  store double %105, double* %10, align 8
  %106 = load double, double* %8, align 8
  %107 = call double @_ZN3pov3SqrEd(double %106)
  store double %107, double* %11, align 8
  %108 = load double, double* %10, align 8
  %109 = load double, double* %11, align 8
  %110 = fadd double %108, %109
  store double %110, double* %19, align 8
  %111 = load double, double* %19, align 8
  %112 = load double, double* %20, align 8
  %113 = fcmp olt double %111, %112
  %114 = load i32, i32* @x.27
  %115 = load i32, i32* @y.28
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %113, label %122, label %140

; <label>:122:                                    ; preds = %originalBBpart2
  %123 = load i32, i32* @x.27
  %124 = load i32, i32* @y.28
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB225, label %originalBB225alteredBB

originalBB225:                                    ; preds = %originalBB225alteredBB, %122
  %131 = load double, double* %19, align 8
  store double %131, double* %20, align 8
  %132 = load i32, i32* @x.27
  %133 = load i32, i32* @y.28
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart2227, label %originalBB225alteredBB

originalBBpart2227:                               ; preds = %originalBB225
  br label %140

; <label>:140:                                    ; preds = %originalBBpart2227, %originalBBpart2
  %141 = load double, double* %7, align 8
  %142 = fsub double %141, 1.000000e+00
  store double %142, double* %15, align 8
  %143 = load double, double* %19, align 8
  %144 = fcmp ogt double %143, 1.000000e+04
  br i1 %144, label %168, label %145

; <label>:145:                                    ; preds = %140
  %146 = load i32, i32* @x.27
  %147 = load i32, i32* @y.28
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB229, label %originalBB229alteredBB

originalBB229:                                    ; preds = %originalBB229alteredBB, %145
  %154 = load double, double* %15, align 8
  %155 = load double, double* %15, align 8
  %156 = fmul double %154, %155
  %157 = load double, double* %11, align 8
  %158 = fadd double %156, %157
  %159 = fcmp olt double %158, 1.000000e-04
  %160 = load i32, i32* @x.27
  %161 = load i32, i32* @y.28
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart2239, label %originalBB229alteredBB

originalBBpart2239:                               ; preds = %originalBB229
  br i1 %159, label %168, label %190

; <label>:168:                                    ; preds = %originalBBpart2239, %140
  %169 = load i32, i32* @x.27
  %170 = load i32, i32* @y.28
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB241, label %originalBB241alteredBB

originalBB241:                                    ; preds = %originalBB241alteredBB, %168
  %177 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %178 = load i32, i32* %6, align 4
  %179 = load double, double* %7, align 8
  %180 = load double, double* %8, align 8
  %181 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %177, i32 %178, double %179, double %180)
  store double %181, double* %9, align 8
  %182 = load i32, i32* @x.27
  %183 = load i32, i32* @y.28
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBBpart2243, label %originalBB241alteredBB

originalBBpart2243:                               ; preds = %originalBB241
  br label %194

; <label>:190:                                    ; preds = %originalBBpart2239
  br label %191

; <label>:191:                                    ; preds = %190
  %192 = load i32, i32* %6, align 4
  %193 = add nsw i32 %192, 1
  store i32 %193, i32* %6, align 4
  br label %33

; <label>:194:                                    ; preds = %originalBBpart2243, %33
  %195 = load i32, i32* @x.27
  %196 = load i32, i32* @y.28
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB245, label %originalBB245alteredBB

originalBB245:                                    ; preds = %originalBB245alteredBB, %194
  %203 = load i32, i32* %6, align 4
  %204 = load i32, i32* %5, align 4
  %205 = icmp eq i32 %203, %204
  %206 = load i32, i32* @x.27
  %207 = load i32, i32* @y.28
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBBpart2247, label %originalBB245alteredBB

originalBBpart2247:                               ; preds = %originalBB245
  br i1 %205, label %214, label %237

; <label>:214:                                    ; preds = %originalBBpart2247
  %215 = load i32, i32* @x.27
  %216 = load i32, i32* @y.28
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBB249, label %originalBB249alteredBB

originalBB249:                                    ; preds = %originalBB249alteredBB, %214
  %223 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %224 = load i32, i32* %6, align 4
  %225 = load double, double* %7, align 8
  %226 = load double, double* %8, align 8
  %227 = load double, double* %20, align 8
  %228 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %223, i32 %224, double %225, double %226, double %227)
  store double %228, double* %9, align 8
  %229 = load i32, i32* @x.27
  %230 = load i32, i32* @y.28
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBBpart2251, label %originalBB249alteredBB

originalBBpart2251:                               ; preds = %originalBB249
  br label %237

; <label>:237:                                    ; preds = %originalBBpart2251, %originalBBpart2247
  %238 = load i32, i32* @x.27
  %239 = load i32, i32* @y.28
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBB253, label %originalBB253alteredBB

originalBB253:                                    ; preds = %originalBB253alteredBB, %237
  %246 = load double, double* %9, align 8
  %247 = load i32, i32* @x.27
  %248 = load i32, i32* @y.28
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart2255, label %originalBB253alteredBB

originalBBpart2255:                               ; preds = %originalBB253
  ret double %246

originalBBalteredBB:                              ; preds = %originalBB, %37
  %255 = load double, double* %10, align 8
  %256 = load double, double* %11, align 8
  %_ = fsub double %255, %256
  %gen = fmul double %_, %256
  %_1 = fsub double -0.000000e+00, %255
  %gen2 = fadd double %_1, %256
  %_3 = fsub double %255, %256
  %gen4 = fmul double %_3, %256
  %_5 = fsub double -0.000000e+00, %255
  %gen6 = fadd double %_5, %256
  %_7 = fsub double %255, %256
  %gen8 = fmul double %_7, %256
  %_9 = fsub double -0.000000e+00, %255
  %gen10 = fadd double %_9, %256
  %257 = fsub double %255, %256
  %258 = load double, double* %12, align 8
  %_11 = fsub double -0.000000e+00, %257
  %gen12 = fadd double %_11, %258
  %_13 = fsub double -0.000000e+00, %257
  %gen14 = fadd double %_13, %258
  %_15 = fsub double -0.000000e+00, %257
  %gen16 = fadd double %_15, %258
  %_17 = fsub double -0.000000e+00, %257
  %gen18 = fadd double %_17, %258
  %_19 = fsub double -0.000000e+00, %257
  %gen20 = fadd double %_19, %258
  %259 = fadd double %257, %258
  %_21 = fsub double -0.000000e+00, %259
  %gen22 = fadd double %_21, 1.000000e+00
  %_23 = fsub double -0.000000e+00, %259
  %gen24 = fadd double %_23, 1.000000e+00
  %_25 = fsub double -0.000000e+00, %259
  %gen26 = fadd double %_25, 1.000000e+00
  %260 = fsub double %259, 1.000000e+00
  store double %260, double* %15, align 8
  %261 = load double, double* %7, align 8
  %_27 = fsub double -0.000000e+00, 2.000000e+00
  %gen28 = fadd double %_27, %261
  %_29 = fsub double 2.000000e+00, %261
  %gen30 = fmul double %_29, %261
  %262 = fmul double 2.000000e+00, %261
  %263 = load double, double* %8, align 8
  %_31 = fsub double %262, %263
  %gen32 = fmul double %_31, %263
  %_33 = fsub double -0.000000e+00, %262
  %gen34 = fadd double %_33, %263
  %_35 = fsub double -0.000000e+00, %262
  %gen36 = fadd double %_35, %263
  %_37 = fsub double %262, %263
  %gen38 = fmul double %_37, %263
  %_39 = fsub double %262, %263
  %gen40 = fmul double %_39, %263
  %_41 = fsub double %262, %263
  %gen42 = fmul double %_41, %263
  %_43 = fsub double %262, %263
  %gen44 = fmul double %_43, %263
  %264 = fmul double %262, %263
  %265 = load double, double* %13, align 8
  %_45 = fsub double %264, %265
  %gen46 = fmul double %_45, %265
  %_47 = fsub double -0.000000e+00, %264
  %gen48 = fadd double %_47, %265
  %_49 = fsub double %264, %265
  %gen50 = fmul double %_49, %265
  %266 = fadd double %264, %265
  store double %266, double* %16, align 8
  %267 = load double, double* %7, align 8
  %_51 = fsub double -0.000000e+00, 2.000000e+00
  %gen52 = fadd double %_51, %267
  %_53 = fsub double -0.000000e+00, 2.000000e+00
  %gen54 = fadd double %_53, %267
  %268 = fmul double 2.000000e+00, %267
  %269 = load double, double* %12, align 8
  %_55 = fsub double -0.000000e+00, %268
  %gen56 = fadd double %_55, %269
  %_57 = fsub double %268, %269
  %gen58 = fmul double %_57, %269
  %_59 = fsub double %268, %269
  %gen60 = fmul double %_59, %269
  %_61 = fsub double -0.000000e+00, %268
  %gen62 = fadd double %_61, %269
  %_63 = fsub double %268, %269
  %gen64 = fmul double %_63, %269
  %_65 = fsub double -0.000000e+00, %268
  %gen66 = fadd double %_65, %269
  %270 = fadd double %268, %269
  %_67 = fsub double %270, 2.000000e+00
  %gen68 = fmul double %_67, 2.000000e+00
  %_69 = fsub double %270, 2.000000e+00
  %gen70 = fmul double %_69, 2.000000e+00
  %_71 = fsub double -0.000000e+00, %270
  %gen72 = fadd double %_71, 2.000000e+00
  %_73 = fsub double -0.000000e+00, %270
  %gen74 = fadd double %_73, 2.000000e+00
  %_75 = fsub double %270, 2.000000e+00
  %gen76 = fmul double %_75, 2.000000e+00
  %_77 = fsub double -0.000000e+00, %270
  %gen78 = fadd double %_77, 2.000000e+00
  %271 = fsub double %270, 2.000000e+00
  store double %271, double* %17, align 8
  %272 = load double, double* %8, align 8
  %_79 = fsub double 2.000000e+00, %272
  %gen80 = fmul double %_79, %272
  %_81 = fsub double 2.000000e+00, %272
  %gen82 = fmul double %_81, %272
  %_83 = fsub double -0.000000e+00, 2.000000e+00
  %gen84 = fadd double %_83, %272
  %_85 = fsub double 2.000000e+00, %272
  %gen86 = fmul double %_85, %272
  %_87 = fsub double -0.000000e+00, 2.000000e+00
  %gen88 = fadd double %_87, %272
  %273 = fmul double 2.000000e+00, %272
  %274 = load double, double* %13, align 8
  %_89 = fsub double %273, %274
  %gen90 = fmul double %_89, %274
  %275 = fadd double %273, %274
  store double %275, double* %18, align 8
  %276 = load double, double* %17, align 8
  %277 = load double, double* %17, align 8
  %_91 = fsub double %276, %277
  %gen92 = fmul double %_91, %277
  %_93 = fsub double %276, %277
  %gen94 = fmul double %_93, %277
  %_95 = fsub double -0.000000e+00, %276
  %gen96 = fadd double %_95, %277
  %_97 = fsub double %276, %277
  %gen98 = fmul double %_97, %277
  %_99 = fsub double -0.000000e+00, %276
  %gen100 = fadd double %_99, %277
  %_101 = fsub double %276, %277
  %gen102 = fmul double %_101, %277
  %278 = fmul double %276, %277
  %279 = load double, double* %18, align 8
  %280 = load double, double* %18, align 8
  %_103 = fsub double -0.000000e+00, %279
  %gen104 = fadd double %_103, %280
  %_105 = fsub double %279, %280
  %gen106 = fmul double %_105, %280
  %_107 = fsub double %279, %280
  %gen108 = fmul double %_107, %280
  %281 = fmul double %279, %280
  %_109 = fsub double %278, %281
  %gen110 = fmul double %_109, %281
  %_111 = fsub double -0.000000e+00, %278
  %gen112 = fadd double %_111, %281
  %_113 = fsub double %278, %281
  %gen114 = fmul double %_113, %281
  %282 = fadd double %278, %281
  store double %282, double* %14, align 8
  %283 = load double, double* %15, align 8
  %284 = load double, double* %17, align 8
  %_115 = fsub double %283, %284
  %gen116 = fmul double %_115, %284
  %_117 = fsub double -0.000000e+00, %283
  %gen118 = fadd double %_117, %284
  %285 = fmul double %283, %284
  %286 = load double, double* %16, align 8
  %287 = load double, double* %18, align 8
  %_119 = fsub double %286, %287
  %gen120 = fmul double %_119, %287
  %_121 = fsub double %286, %287
  %gen122 = fmul double %_121, %287
  %_123 = fsub double -0.000000e+00, %286
  %gen124 = fadd double %_123, %287
  %_125 = fsub double -0.000000e+00, %286
  %gen126 = fadd double %_125, %287
  %_127 = fsub double %286, %287
  %gen128 = fmul double %_127, %287
  %_129 = fsub double -0.000000e+00, %286
  %gen130 = fadd double %_129, %287
  %288 = fmul double %286, %287
  %_131 = fsub double %285, %288
  %gen132 = fmul double %_131, %288
  %_133 = fsub double %285, %288
  %gen134 = fmul double %_133, %288
  %_135 = fsub double -0.000000e+00, %285
  %gen136 = fadd double %_135, %288
  %_137 = fsub double -0.000000e+00, %285
  %gen138 = fadd double %_137, %288
  %_139 = fsub double -0.000000e+00, %285
  %gen140 = fadd double %_139, %288
  %289 = fadd double %285, %288
  %290 = load double, double* %14, align 8
  %_141 = fsub double %289, %290
  %gen142 = fmul double %_141, %290
  %_143 = fsub double -0.000000e+00, %289
  %gen144 = fadd double %_143, %290
  %_145 = fsub double %289, %290
  %gen146 = fmul double %_145, %290
  %291 = fdiv double %289, %290
  store double %291, double* %7, align 8
  %292 = load double, double* %16, align 8
  %293 = load double, double* %17, align 8
  %_147 = fsub double %292, %293
  %gen148 = fmul double %_147, %293
  %_149 = fsub double %292, %293
  %gen150 = fmul double %_149, %293
  %294 = fmul double %292, %293
  %295 = load double, double* %15, align 8
  %296 = load double, double* %18, align 8
  %_151 = fsub double %295, %296
  %gen152 = fmul double %_151, %296
  %297 = fmul double %295, %296
  %_153 = fsub double -0.000000e+00, %294
  %gen154 = fadd double %_153, %297
  %_155 = fsub double %294, %297
  %gen156 = fmul double %_155, %297
  %_157 = fsub double -0.000000e+00, %294
  %gen158 = fadd double %_157, %297
  %_159 = fsub double %294, %297
  %gen160 = fmul double %_159, %297
  %_161 = fsub double %294, %297
  %gen162 = fmul double %_161, %297
  %_163 = fsub double -0.000000e+00, %294
  %gen164 = fadd double %_163, %297
  %_165 = fsub double -0.000000e+00, %294
  %gen166 = fadd double %_165, %297
  %298 = fsub double %294, %297
  %299 = load double, double* %14, align 8
  %_167 = fsub double -0.000000e+00, %298
  %gen168 = fadd double %_167, %299
  %300 = fdiv double %298, %299
  store double %300, double* %8, align 8
  %301 = load double, double* %8, align 8
  %302 = load double, double* %8, align 8
  %_169 = fsub double -0.000000e+00, %301
  %gen170 = fadd double %_169, %302
  %_171 = fsub double -0.000000e+00, %301
  %gen172 = fadd double %_171, %302
  %_173 = fsub double %301, %302
  %gen174 = fmul double %_173, %302
  %_175 = fsub double %301, %302
  %gen176 = fmul double %_175, %302
  %303 = fmul double %301, %302
  store double %303, double* %11, align 8
  %304 = load double, double* %7, align 8
  %_177 = fsub double 2.000000e+00, %304
  %gen178 = fmul double %_177, %304
  %_179 = fsub double -0.000000e+00, 2.000000e+00
  %gen180 = fadd double %_179, %304
  %_181 = fsub double -0.000000e+00, 2.000000e+00
  %gen182 = fadd double %_181, %304
  %_183 = fsub double -0.000000e+00, 2.000000e+00
  %gen184 = fadd double %_183, %304
  %_185 = fsub double -0.000000e+00, 2.000000e+00
  %gen186 = fadd double %_185, %304
  %305 = fmul double 2.000000e+00, %304
  %306 = load double, double* %8, align 8
  %_187 = fsub double -0.000000e+00, %305
  %gen188 = fadd double %_187, %306
  %_189 = fsub double %305, %306
  %gen190 = fmul double %_189, %306
  %_191 = fsub double %305, %306
  %gen192 = fmul double %_191, %306
  %_193 = fsub double %305, %306
  %gen194 = fmul double %_193, %306
  %_195 = fsub double %305, %306
  %gen196 = fmul double %_195, %306
  %_197 = fsub double %305, %306
  %gen198 = fmul double %_197, %306
  %_199 = fsub double %305, %306
  %gen200 = fmul double %_199, %306
  %307 = fmul double %305, %306
  store double %307, double* %8, align 8
  %308 = load double, double* %7, align 8
  %309 = load double, double* %7, align 8
  %_201 = fsub double %308, %309
  %gen202 = fmul double %_201, %309
  %_203 = fsub double %308, %309
  %gen204 = fmul double %_203, %309
  %_205 = fsub double -0.000000e+00, %308
  %gen206 = fadd double %_205, %309
  %_207 = fsub double %308, %309
  %gen208 = fmul double %_207, %309
  %_209 = fsub double -0.000000e+00, %308
  %gen210 = fadd double %_209, %309
  %_211 = fsub double -0.000000e+00, %308
  %gen212 = fadd double %_211, %309
  %_213 = fsub double -0.000000e+00, %308
  %gen214 = fadd double %_213, %309
  %310 = fmul double %308, %309
  %311 = load double, double* %11, align 8
  %_215 = fsub double -0.000000e+00, %310
  %gen216 = fadd double %_215, %311
  %312 = fsub double %310, %311
  store double %312, double* %7, align 8
  %313 = load double, double* %7, align 8
  %314 = call double @_ZN3pov3SqrEd(double %313)
  store double %314, double* %10, align 8
  %315 = load double, double* %8, align 8
  %316 = call double @_ZN3pov3SqrEd(double %315)
  store double %316, double* %11, align 8
  %317 = load double, double* %10, align 8
  %318 = load double, double* %11, align 8
  %_217 = fsub double -0.000000e+00, %317
  %gen218 = fadd double %_217, %318
  %_219 = fsub double %317, %318
  %gen220 = fmul double %_219, %318
  %_221 = fsub double -0.000000e+00, %317
  %gen222 = fadd double %_221, %318
  %_223 = fsub double %317, %318
  %gen224 = fmul double %_223, %318
  %319 = fadd double %317, %318
  store double %319, double* %19, align 8
  %320 = load double, double* %19, align 8
  %321 = load double, double* %20, align 8
  %322 = fcmp olt double %320, %321
  br label %originalBB

originalBB225alteredBB:                           ; preds = %originalBB225, %122
  %323 = load double, double* %19, align 8
  store double %323, double* %20, align 8
  br label %originalBB225

originalBB229alteredBB:                           ; preds = %originalBB229, %145
  %324 = load double, double* %15, align 8
  %325 = load double, double* %15, align 8
  %_230 = fsub double %324, %325
  %gen231 = fmul double %_230, %325
  %326 = fmul double %324, %325
  %327 = load double, double* %11, align 8
  %_232 = fsub double -0.000000e+00, %326
  %gen233 = fadd double %_232, %327
  %_234 = fsub double -0.000000e+00, %326
  %gen235 = fadd double %_234, %327
  %_236 = fsub double %326, %327
  %gen237 = fmul double %_236, %327
  %328 = fadd double %326, %327
  %329 = fcmp olt double %328, 1.000000e-04
  br label %originalBB229

originalBB241alteredBB:                           ; preds = %originalBB241, %168
  %330 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %331 = load i32, i32* %6, align 4
  %332 = load double, double* %7, align 8
  %333 = load double, double* %8, align 8
  %334 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %330, i32 %331, double %332, double %333)
  store double %334, double* %9, align 8
  br label %originalBB241

originalBB245alteredBB:                           ; preds = %originalBB245, %194
  %335 = load i32, i32* %6, align 4
  %336 = load i32, i32* %5, align 4
  %337 = icmp eq i32 %335, %336
  br label %originalBB245

originalBB249alteredBB:                           ; preds = %originalBB249, %214
  %338 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %339 = load i32, i32* %6, align 4
  %340 = load double, double* %7, align 8
  %341 = load double, double* %8, align 8
  %342 = load double, double* %20, align 8
  %343 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %338, i32 %339, double %340, double %341, double %342)
  store double %343, double* %9, align 8
  br label %originalBB249

originalBB253alteredBB:                           ; preds = %originalBB253, %237
  %344 = load double, double* %9, align 8
  br label %originalBB253
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL16magnet1j_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #2 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %21 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %22 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %21, i32 0, i32 10
  %23 = bitcast %union.anon.25* %22 to %struct.anon.31*
  %24 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %23, i32 0, i32 0
  %25 = getelementptr inbounds [2 x double], [2 x double]* %24, i64 0, i64 0
  %26 = load double, double* %25, align 8
  store double %26, double* %19, align 8
  %27 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %28 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %27, i32 0, i32 10
  %29 = bitcast %union.anon.25* %28 to %struct.anon.31*
  %30 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %29, i32 0, i32 0
  %31 = getelementptr inbounds [2 x double], [2 x double]* %30, i64 0, i64 1
  %32 = load double, double* %31, align 8
  store double %32, double* %20, align 8
  %33 = load double*, double** %3, align 8
  %34 = getelementptr inbounds double, double* %33, i64 0
  %35 = load double, double* %34, align 8
  store double %35, double* %7, align 8
  %36 = load double, double* %7, align 8
  %37 = call double @_ZN3pov3SqrEd(double %36)
  store double %37, double* %10, align 8
  %38 = load double*, double** %3, align 8
  %39 = getelementptr inbounds double, double* %38, i64 1
  %40 = load double, double* %39, align 8
  store double %40, double* %8, align 8
  %41 = load double, double* %8, align 8
  %42 = call double @_ZN3pov3SqrEd(double %41)
  store double %42, double* %11, align 8
  %43 = load double, double* %10, align 8
  %44 = load double, double* %11, align 8
  %45 = fadd double %43, %44
  store double %45, double* %18, align 8
  %46 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %47 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %46, i32 0, i32 10
  %48 = bitcast %union.anon.25* %47 to %struct.anon.31*
  %49 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %48, i32 0, i32 1
  %50 = load i16, i16* %49, align 8
  %51 = sext i16 %50 to i32
  store i32 %51, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %52

; <label>:52:                                     ; preds = %210, %2
  %53 = load i32, i32* %6, align 4
  %54 = load i32, i32* %5, align 4
  %55 = icmp slt i32 %53, %54
  br i1 %55, label %56, label %213

; <label>:56:                                     ; preds = %52
  %57 = load i32, i32* @x.29
  %58 = load i32, i32* @y.30
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %56
  %65 = load double, double* %10, align 8
  %66 = load double, double* %11, align 8
  %67 = fsub double %65, %66
  %68 = load double, double* %19, align 8
  %69 = fadd double %67, %68
  %70 = fsub double %69, 1.000000e+00
  store double %70, double* %13, align 8
  %71 = load double, double* %7, align 8
  %72 = fmul double 2.000000e+00, %71
  %73 = load double, double* %8, align 8
  %74 = fmul double %72, %73
  %75 = load double, double* %20, align 8
  %76 = fadd double %74, %75
  store double %76, double* %14, align 8
  %77 = load double, double* %7, align 8
  %78 = fmul double 2.000000e+00, %77
  %79 = load double, double* %19, align 8
  %80 = fadd double %78, %79
  %81 = fsub double %80, 2.000000e+00
  store double %81, double* %15, align 8
  %82 = load double, double* %8, align 8
  %83 = fmul double 2.000000e+00, %82
  %84 = load double, double* %20, align 8
  %85 = fadd double %83, %84
  store double %85, double* %16, align 8
  %86 = load double, double* %15, align 8
  %87 = load double, double* %15, align 8
  %88 = fmul double %86, %87
  %89 = load double, double* %16, align 8
  %90 = load double, double* %16, align 8
  %91 = fmul double %89, %90
  %92 = fadd double %88, %91
  store double %92, double* %12, align 8
  %93 = load double, double* %13, align 8
  %94 = load double, double* %15, align 8
  %95 = fmul double %93, %94
  %96 = load double, double* %14, align 8
  %97 = load double, double* %16, align 8
  %98 = fmul double %96, %97
  %99 = fadd double %95, %98
  %100 = load double, double* %12, align 8
  %101 = fdiv double %99, %100
  store double %101, double* %7, align 8
  %102 = load double, double* %14, align 8
  %103 = load double, double* %15, align 8
  %104 = fmul double %102, %103
  %105 = load double, double* %13, align 8
  %106 = load double, double* %16, align 8
  %107 = fmul double %105, %106
  %108 = fsub double %104, %107
  %109 = load double, double* %12, align 8
  %110 = fdiv double %108, %109
  store double %110, double* %8, align 8
  %111 = load double, double* %8, align 8
  %112 = load double, double* %8, align 8
  %113 = fmul double %111, %112
  store double %113, double* %11, align 8
  %114 = load double, double* %7, align 8
  %115 = fmul double 2.000000e+00, %114
  %116 = load double, double* %8, align 8
  %117 = fmul double %115, %116
  store double %117, double* %8, align 8
  %118 = load double, double* %7, align 8
  %119 = load double, double* %7, align 8
  %120 = fmul double %118, %119
  %121 = load double, double* %11, align 8
  %122 = fsub double %120, %121
  store double %122, double* %7, align 8
  %123 = load double, double* %7, align 8
  %124 = call double @_ZN3pov3SqrEd(double %123)
  store double %124, double* %10, align 8
  %125 = load double, double* %8, align 8
  %126 = call double @_ZN3pov3SqrEd(double %125)
  store double %126, double* %11, align 8
  %127 = load double, double* %10, align 8
  %128 = load double, double* %11, align 8
  %129 = fadd double %127, %128
  store double %129, double* %17, align 8
  %130 = load double, double* %17, align 8
  %131 = load double, double* %18, align 8
  %132 = fcmp olt double %130, %131
  %133 = load i32, i32* @x.29
  %134 = load i32, i32* @y.30
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %132, label %141, label %143

; <label>:141:                                    ; preds = %originalBBpart2
  %142 = load double, double* %17, align 8
  store double %142, double* %18, align 8
  br label %143

; <label>:143:                                    ; preds = %141, %originalBBpart2
  %144 = load i32, i32* @x.29
  %145 = load i32, i32* @y.30
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB231, label %originalBB231alteredBB

originalBB231:                                    ; preds = %originalBB231alteredBB, %143
  %152 = load double, double* %7, align 8
  %153 = fsub double %152, 1.000000e+00
  store double %153, double* %13, align 8
  %154 = load double, double* %17, align 8
  %155 = fcmp ogt double %154, 1.000000e+04
  %156 = load i32, i32* @x.29
  %157 = load i32, i32* @y.30
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart2243, label %originalBB231alteredBB

originalBBpart2243:                               ; preds = %originalBB231
  br i1 %155, label %171, label %164

; <label>:164:                                    ; preds = %originalBBpart2243
  %165 = load double, double* %13, align 8
  %166 = load double, double* %13, align 8
  %167 = fmul double %165, %166
  %168 = load double, double* %11, align 8
  %169 = fadd double %167, %168
  %170 = fcmp olt double %169, 1.000000e-04
  br i1 %170, label %171, label %193

; <label>:171:                                    ; preds = %164, %originalBBpart2243
  %172 = load i32, i32* @x.29
  %173 = load i32, i32* @y.30
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB245, label %originalBB245alteredBB

originalBB245:                                    ; preds = %originalBB245alteredBB, %171
  %180 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %181 = load i32, i32* %6, align 4
  %182 = load double, double* %7, align 8
  %183 = load double, double* %8, align 8
  %184 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %180, i32 %181, double %182, double %183)
  store double %184, double* %9, align 8
  %185 = load i32, i32* @x.29
  %186 = load i32, i32* @y.30
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBBpart2247, label %originalBB245alteredBB

originalBBpart2247:                               ; preds = %originalBB245
  br label %213

; <label>:193:                                    ; preds = %164
  %194 = load i32, i32* @x.29
  %195 = load i32, i32* @y.30
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBB249, label %originalBB249alteredBB

originalBB249:                                    ; preds = %originalBB249alteredBB, %193
  %202 = load i32, i32* @x.29
  %203 = load i32, i32* @y.30
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBBpart2251, label %originalBB249alteredBB

originalBBpart2251:                               ; preds = %originalBB249
  br label %210

; <label>:210:                                    ; preds = %originalBBpart2251
  %211 = load i32, i32* %6, align 4
  %212 = add nsw i32 %211, 1
  store i32 %212, i32* %6, align 4
  br label %52

; <label>:213:                                    ; preds = %originalBBpart2247, %52
  %214 = load i32, i32* %6, align 4
  %215 = load i32, i32* %5, align 4
  %216 = icmp eq i32 %214, %215
  br i1 %216, label %217, label %240

; <label>:217:                                    ; preds = %213
  %218 = load i32, i32* @x.29
  %219 = load i32, i32* @y.30
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBB253, label %originalBB253alteredBB

originalBB253:                                    ; preds = %originalBB253alteredBB, %217
  %226 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %227 = load i32, i32* %6, align 4
  %228 = load double, double* %7, align 8
  %229 = load double, double* %8, align 8
  %230 = load double, double* %18, align 8
  %231 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %226, i32 %227, double %228, double %229, double %230)
  store double %231, double* %9, align 8
  %232 = load i32, i32* @x.29
  %233 = load i32, i32* @y.30
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart2255, label %originalBB253alteredBB

originalBBpart2255:                               ; preds = %originalBB253
  br label %240

; <label>:240:                                    ; preds = %originalBBpart2255, %213
  %241 = load double, double* %9, align 8
  ret double %241

originalBBalteredBB:                              ; preds = %originalBB, %56
  %242 = load double, double* %10, align 8
  %243 = load double, double* %11, align 8
  %_ = fsub double -0.000000e+00, %242
  %gen = fadd double %_, %243
  %_1 = fsub double %242, %243
  %gen2 = fmul double %_1, %243
  %_3 = fsub double %242, %243
  %gen4 = fmul double %_3, %243
  %_5 = fsub double %242, %243
  %gen6 = fmul double %_5, %243
  %_7 = fsub double %242, %243
  %gen8 = fmul double %_7, %243
  %244 = fsub double %242, %243
  %245 = load double, double* %19, align 8
  %_9 = fsub double -0.000000e+00, %244
  %gen10 = fadd double %_9, %245
  %_11 = fsub double -0.000000e+00, %244
  %gen12 = fadd double %_11, %245
  %_13 = fsub double -0.000000e+00, %244
  %gen14 = fadd double %_13, %245
  %246 = fadd double %244, %245
  %_15 = fsub double -0.000000e+00, %246
  %gen16 = fadd double %_15, 1.000000e+00
  %_17 = fsub double %246, 1.000000e+00
  %gen18 = fmul double %_17, 1.000000e+00
  %_19 = fsub double %246, 1.000000e+00
  %gen20 = fmul double %_19, 1.000000e+00
  %_21 = fsub double -0.000000e+00, %246
  %gen22 = fadd double %_21, 1.000000e+00
  %_23 = fsub double %246, 1.000000e+00
  %gen24 = fmul double %_23, 1.000000e+00
  %247 = fsub double %246, 1.000000e+00
  store double %247, double* %13, align 8
  %248 = load double, double* %7, align 8
  %_25 = fsub double 2.000000e+00, %248
  %gen26 = fmul double %_25, %248
  %_27 = fsub double 2.000000e+00, %248
  %gen28 = fmul double %_27, %248
  %_29 = fsub double -0.000000e+00, 2.000000e+00
  %gen30 = fadd double %_29, %248
  %_31 = fsub double -0.000000e+00, 2.000000e+00
  %gen32 = fadd double %_31, %248
  %249 = fmul double 2.000000e+00, %248
  %250 = load double, double* %8, align 8
  %_33 = fsub double -0.000000e+00, %249
  %gen34 = fadd double %_33, %250
  %_35 = fsub double -0.000000e+00, %249
  %gen36 = fadd double %_35, %250
  %_37 = fsub double -0.000000e+00, %249
  %gen38 = fadd double %_37, %250
  %_39 = fsub double %249, %250
  %gen40 = fmul double %_39, %250
  %_41 = fsub double -0.000000e+00, %249
  %gen42 = fadd double %_41, %250
  %_43 = fsub double -0.000000e+00, %249
  %gen44 = fadd double %_43, %250
  %_45 = fsub double -0.000000e+00, %249
  %gen46 = fadd double %_45, %250
  %_47 = fsub double %249, %250
  %gen48 = fmul double %_47, %250
  %_49 = fsub double %249, %250
  %gen50 = fmul double %_49, %250
  %251 = fmul double %249, %250
  %252 = load double, double* %20, align 8
  %_51 = fsub double -0.000000e+00, %251
  %gen52 = fadd double %_51, %252
  %_53 = fsub double -0.000000e+00, %251
  %gen54 = fadd double %_53, %252
  %_55 = fsub double -0.000000e+00, %251
  %gen56 = fadd double %_55, %252
  %253 = fadd double %251, %252
  store double %253, double* %14, align 8
  %254 = load double, double* %7, align 8
  %_57 = fsub double 2.000000e+00, %254
  %gen58 = fmul double %_57, %254
  %_59 = fsub double -0.000000e+00, 2.000000e+00
  %gen60 = fadd double %_59, %254
  %_61 = fsub double 2.000000e+00, %254
  %gen62 = fmul double %_61, %254
  %255 = fmul double 2.000000e+00, %254
  %256 = load double, double* %19, align 8
  %_63 = fsub double -0.000000e+00, %255
  %gen64 = fadd double %_63, %256
  %257 = fadd double %255, %256
  %_65 = fsub double %257, 2.000000e+00
  %gen66 = fmul double %_65, 2.000000e+00
  %_67 = fsub double -0.000000e+00, %257
  %gen68 = fadd double %_67, 2.000000e+00
  %258 = fsub double %257, 2.000000e+00
  store double %258, double* %15, align 8
  %259 = load double, double* %8, align 8
  %_69 = fsub double -0.000000e+00, 2.000000e+00
  %gen70 = fadd double %_69, %259
  %_71 = fsub double -0.000000e+00, 2.000000e+00
  %gen72 = fadd double %_71, %259
  %_73 = fsub double -0.000000e+00, 2.000000e+00
  %gen74 = fadd double %_73, %259
  %_75 = fsub double 2.000000e+00, %259
  %gen76 = fmul double %_75, %259
  %260 = fmul double 2.000000e+00, %259
  %261 = load double, double* %20, align 8
  %_77 = fsub double %260, %261
  %gen78 = fmul double %_77, %261
  %_79 = fsub double -0.000000e+00, %260
  %gen80 = fadd double %_79, %261
  %262 = fadd double %260, %261
  store double %262, double* %16, align 8
  %263 = load double, double* %15, align 8
  %264 = load double, double* %15, align 8
  %_81 = fsub double -0.000000e+00, %263
  %gen82 = fadd double %_81, %264
  %_83 = fsub double -0.000000e+00, %263
  %gen84 = fadd double %_83, %264
  %265 = fmul double %263, %264
  %266 = load double, double* %16, align 8
  %267 = load double, double* %16, align 8
  %_85 = fsub double %266, %267
  %gen86 = fmul double %_85, %267
  %_87 = fsub double %266, %267
  %gen88 = fmul double %_87, %267
  %268 = fmul double %266, %267
  %_89 = fsub double %265, %268
  %gen90 = fmul double %_89, %268
  %_91 = fsub double %265, %268
  %gen92 = fmul double %_91, %268
  %_93 = fsub double %265, %268
  %gen94 = fmul double %_93, %268
  %_95 = fsub double %265, %268
  %gen96 = fmul double %_95, %268
  %269 = fadd double %265, %268
  store double %269, double* %12, align 8
  %270 = load double, double* %13, align 8
  %271 = load double, double* %15, align 8
  %_97 = fsub double %270, %271
  %gen98 = fmul double %_97, %271
  %_99 = fsub double %270, %271
  %gen100 = fmul double %_99, %271
  %_101 = fsub double %270, %271
  %gen102 = fmul double %_101, %271
  %_103 = fsub double -0.000000e+00, %270
  %gen104 = fadd double %_103, %271
  %_105 = fsub double -0.000000e+00, %270
  %gen106 = fadd double %_105, %271
  %_107 = fsub double -0.000000e+00, %270
  %gen108 = fadd double %_107, %271
  %272 = fmul double %270, %271
  %273 = load double, double* %14, align 8
  %274 = load double, double* %16, align 8
  %_109 = fsub double -0.000000e+00, %273
  %gen110 = fadd double %_109, %274
  %_111 = fsub double %273, %274
  %gen112 = fmul double %_111, %274
  %_113 = fsub double %273, %274
  %gen114 = fmul double %_113, %274
  %_115 = fsub double %273, %274
  %gen116 = fmul double %_115, %274
  %_117 = fsub double -0.000000e+00, %273
  %gen118 = fadd double %_117, %274
  %_119 = fsub double %273, %274
  %gen120 = fmul double %_119, %274
  %275 = fmul double %273, %274
  %_121 = fsub double -0.000000e+00, %272
  %gen122 = fadd double %_121, %275
  %_123 = fsub double %272, %275
  %gen124 = fmul double %_123, %275
  %_125 = fsub double -0.000000e+00, %272
  %gen126 = fadd double %_125, %275
  %_127 = fsub double -0.000000e+00, %272
  %gen128 = fadd double %_127, %275
  %_129 = fsub double -0.000000e+00, %272
  %gen130 = fadd double %_129, %275
  %_131 = fsub double %272, %275
  %gen132 = fmul double %_131, %275
  %_133 = fsub double %272, %275
  %gen134 = fmul double %_133, %275
  %276 = fadd double %272, %275
  %277 = load double, double* %12, align 8
  %_135 = fsub double %276, %277
  %gen136 = fmul double %_135, %277
  %_137 = fsub double %276, %277
  %gen138 = fmul double %_137, %277
  %_139 = fsub double %276, %277
  %gen140 = fmul double %_139, %277
  %_141 = fsub double -0.000000e+00, %276
  %gen142 = fadd double %_141, %277
  %_143 = fsub double -0.000000e+00, %276
  %gen144 = fadd double %_143, %277
  %278 = fdiv double %276, %277
  store double %278, double* %7, align 8
  %279 = load double, double* %14, align 8
  %280 = load double, double* %15, align 8
  %_145 = fsub double -0.000000e+00, %279
  %gen146 = fadd double %_145, %280
  %_147 = fsub double -0.000000e+00, %279
  %gen148 = fadd double %_147, %280
  %_149 = fsub double -0.000000e+00, %279
  %gen150 = fadd double %_149, %280
  %_151 = fsub double %279, %280
  %gen152 = fmul double %_151, %280
  %_153 = fsub double %279, %280
  %gen154 = fmul double %_153, %280
  %_155 = fsub double -0.000000e+00, %279
  %gen156 = fadd double %_155, %280
  %_157 = fsub double -0.000000e+00, %279
  %gen158 = fadd double %_157, %280
  %_159 = fsub double -0.000000e+00, %279
  %gen160 = fadd double %_159, %280
  %281 = fmul double %279, %280
  %282 = load double, double* %13, align 8
  %283 = load double, double* %16, align 8
  %_161 = fsub double %282, %283
  %gen162 = fmul double %_161, %283
  %_163 = fsub double -0.000000e+00, %282
  %gen164 = fadd double %_163, %283
  %_165 = fsub double %282, %283
  %gen166 = fmul double %_165, %283
  %_167 = fsub double %282, %283
  %gen168 = fmul double %_167, %283
  %_169 = fsub double %282, %283
  %gen170 = fmul double %_169, %283
  %_171 = fsub double -0.000000e+00, %282
  %gen172 = fadd double %_171, %283
  %_173 = fsub double -0.000000e+00, %282
  %gen174 = fadd double %_173, %283
  %284 = fmul double %282, %283
  %_175 = fsub double %281, %284
  %gen176 = fmul double %_175, %284
  %_177 = fsub double %281, %284
  %gen178 = fmul double %_177, %284
  %_179 = fsub double -0.000000e+00, %281
  %gen180 = fadd double %_179, %284
  %_181 = fsub double -0.000000e+00, %281
  %gen182 = fadd double %_181, %284
  %_183 = fsub double -0.000000e+00, %281
  %gen184 = fadd double %_183, %284
  %285 = fsub double %281, %284
  %286 = load double, double* %12, align 8
  %287 = fdiv double %285, %286
  store double %287, double* %8, align 8
  %288 = load double, double* %8, align 8
  %289 = load double, double* %8, align 8
  %_185 = fsub double -0.000000e+00, %288
  %gen186 = fadd double %_185, %289
  %_187 = fsub double -0.000000e+00, %288
  %gen188 = fadd double %_187, %289
  %290 = fmul double %288, %289
  store double %290, double* %11, align 8
  %291 = load double, double* %7, align 8
  %_189 = fsub double 2.000000e+00, %291
  %gen190 = fmul double %_189, %291
  %_191 = fsub double 2.000000e+00, %291
  %gen192 = fmul double %_191, %291
  %_193 = fsub double 2.000000e+00, %291
  %gen194 = fmul double %_193, %291
  %_195 = fsub double -0.000000e+00, 2.000000e+00
  %gen196 = fadd double %_195, %291
  %_197 = fsub double -0.000000e+00, 2.000000e+00
  %gen198 = fadd double %_197, %291
  %_199 = fsub double -0.000000e+00, 2.000000e+00
  %gen200 = fadd double %_199, %291
  %292 = fmul double 2.000000e+00, %291
  %293 = load double, double* %8, align 8
  %_201 = fsub double -0.000000e+00, %292
  %gen202 = fadd double %_201, %293
  %_203 = fsub double -0.000000e+00, %292
  %gen204 = fadd double %_203, %293
  %_205 = fsub double -0.000000e+00, %292
  %gen206 = fadd double %_205, %293
  %_207 = fsub double %292, %293
  %gen208 = fmul double %_207, %293
  %_209 = fsub double -0.000000e+00, %292
  %gen210 = fadd double %_209, %293
  %_211 = fsub double -0.000000e+00, %292
  %gen212 = fadd double %_211, %293
  %_213 = fsub double %292, %293
  %gen214 = fmul double %_213, %293
  %294 = fmul double %292, %293
  store double %294, double* %8, align 8
  %295 = load double, double* %7, align 8
  %296 = load double, double* %7, align 8
  %_215 = fsub double -0.000000e+00, %295
  %gen216 = fadd double %_215, %296
  %297 = fmul double %295, %296
  %298 = load double, double* %11, align 8
  %_217 = fsub double %297, %298
  %gen218 = fmul double %_217, %298
  %_219 = fsub double -0.000000e+00, %297
  %gen220 = fadd double %_219, %298
  %299 = fsub double %297, %298
  store double %299, double* %7, align 8
  %300 = load double, double* %7, align 8
  %301 = call double @_ZN3pov3SqrEd(double %300)
  store double %301, double* %10, align 8
  %302 = load double, double* %8, align 8
  %303 = call double @_ZN3pov3SqrEd(double %302)
  store double %303, double* %11, align 8
  %304 = load double, double* %10, align 8
  %305 = load double, double* %11, align 8
  %_221 = fsub double %304, %305
  %gen222 = fmul double %_221, %305
  %_223 = fsub double -0.000000e+00, %304
  %gen224 = fadd double %_223, %305
  %_225 = fsub double %304, %305
  %gen226 = fmul double %_225, %305
  %_227 = fsub double -0.000000e+00, %304
  %gen228 = fadd double %_227, %305
  %_229 = fsub double -0.000000e+00, %304
  %gen230 = fadd double %_229, %305
  %306 = fadd double %304, %305
  store double %306, double* %17, align 8
  %307 = load double, double* %17, align 8
  %308 = load double, double* %18, align 8
  %309 = fcmp olt double %307, %308
  br label %originalBB

originalBB231alteredBB:                           ; preds = %originalBB231, %143
  %310 = load double, double* %7, align 8
  %_232 = fsub double -0.000000e+00, %310
  %gen233 = fadd double %_232, 1.000000e+00
  %_234 = fsub double %310, 1.000000e+00
  %gen235 = fmul double %_234, 1.000000e+00
  %_236 = fsub double %310, 1.000000e+00
  %gen237 = fmul double %_236, 1.000000e+00
  %_238 = fsub double %310, 1.000000e+00
  %gen239 = fmul double %_238, 1.000000e+00
  %_240 = fsub double %310, 1.000000e+00
  %gen241 = fmul double %_240, 1.000000e+00
  %311 = fsub double %310, 1.000000e+00
  store double %311, double* %13, align 8
  %312 = load double, double* %17, align 8
  %313 = fcmp ogt double %312, 1.000000e+04
  br label %originalBB231

originalBB245alteredBB:                           ; preds = %originalBB245, %171
  %314 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %315 = load i32, i32* %6, align 4
  %316 = load double, double* %7, align 8
  %317 = load double, double* %8, align 8
  %318 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %314, i32 %315, double %316, double %317)
  store double %318, double* %9, align 8
  br label %originalBB245

originalBB249alteredBB:                           ; preds = %originalBB249, %193
  br label %originalBB249

originalBB253alteredBB:                           ; preds = %originalBB253, %217
  %319 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %320 = load i32, i32* %6, align 4
  %321 = load double, double* %7, align 8
  %322 = load double, double* %8, align 8
  %323 = load double, double* %18, align 8
  %324 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %319, i32 %320, double %321, double %322, double %323)
  store double %324, double* %9, align 8
  br label %originalBB253
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL16magnet2m_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #2 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca double, align 8
  %23 = alloca double, align 8
  %24 = alloca double, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %25 = load double*, double** %3, align 8
  %26 = getelementptr inbounds double, double* %25, i64 0
  %27 = load double, double* %26, align 8
  store double %27, double* %12, align 8
  %28 = load double*, double** %3, align 8
  %29 = getelementptr inbounds double, double* %28, i64 1
  %30 = load double, double* %29, align 8
  store double %30, double* %13, align 8
  store double 0.000000e+00, double* %10, align 8
  store double 0.000000e+00, double* %7, align 8
  store double 0.000000e+00, double* %11, align 8
  store double 0.000000e+00, double* %8, align 8
  store double 1.000000e+04, double* %24, align 8
  %31 = load double, double* %12, align 8
  %32 = fsub double %31, 1.000000e+00
  store double %32, double* %19, align 8
  %33 = load double, double* %12, align 8
  %34 = fsub double %33, 2.000000e+00
  store double %34, double* %20, align 8
  %35 = load double, double* %19, align 8
  %36 = load double, double* %20, align 8
  %37 = fmul double %35, %36
  %38 = load double, double* %13, align 8
  %39 = load double, double* %13, align 8
  %40 = fmul double %38, %39
  %41 = fsub double %37, %40
  store double %41, double* %21, align 8
  %42 = load double, double* %19, align 8
  %43 = load double, double* %20, align 8
  %44 = fadd double %42, %43
  %45 = load double, double* %13, align 8
  %46 = fmul double %44, %45
  store double %46, double* %22, align 8
  %47 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %48 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %47, i32 0, i32 10
  %49 = bitcast %union.anon.25* %48 to %struct.anon.31*
  %50 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %49, i32 0, i32 1
  %51 = load i16, i16* %50, align 8
  %52 = sext i16 %51 to i32
  store i32 %52, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %53

; <label>:53:                                     ; preds = %originalBBpart243, %2
  %54 = load i32, i32* @x.31
  %55 = load i32, i32* @y.32
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %53
  %62 = load i32, i32* %6, align 4
  %63 = load i32, i32* %5, align 4
  %64 = icmp slt i32 %62, %63
  %65 = load i32, i32* @x.31
  %66 = load i32, i32* @y.32
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %64, label %73, label %246

; <label>:73:                                     ; preds = %originalBBpart2
  %74 = load double, double* %10, align 8
  %75 = load double, double* %7, align 8
  %76 = fmul double %74, %75
  %77 = load double, double* %7, align 8
  %78 = fmul double 3.000000e+00, %77
  %79 = load double, double* %11, align 8
  %80 = fmul double %78, %79
  %81 = fsub double %76, %80
  %82 = load double, double* %7, align 8
  %83 = load double, double* %19, align 8
  %84 = fmul double %82, %83
  %85 = load double, double* %8, align 8
  %86 = load double, double* %13, align 8
  %87 = fmul double %85, %86
  %88 = fsub double %84, %87
  %89 = fmul double 3.000000e+00, %88
  %90 = fadd double %81, %89
  %91 = load double, double* %21, align 8
  %92 = fadd double %90, %91
  store double %92, double* %15, align 8
  %93 = load double, double* %10, align 8
  %94 = fmul double 3.000000e+00, %93
  %95 = load double, double* %8, align 8
  %96 = fmul double %94, %95
  %97 = load double, double* %11, align 8
  %98 = load double, double* %8, align 8
  %99 = fmul double %97, %98
  %100 = fsub double %96, %99
  %101 = load double, double* %7, align 8
  %102 = load double, double* %13, align 8
  %103 = fmul double %101, %102
  %104 = load double, double* %8, align 8
  %105 = load double, double* %19, align 8
  %106 = fmul double %104, %105
  %107 = fadd double %103, %106
  %108 = fmul double 3.000000e+00, %107
  %109 = fadd double %100, %108
  %110 = load double, double* %22, align 8
  %111 = fadd double %109, %110
  store double %111, double* %16, align 8
  %112 = load double, double* %10, align 8
  %113 = load double, double* %11, align 8
  %114 = fsub double %112, %113
  %115 = fmul double 3.000000e+00, %114
  %116 = load double, double* %7, align 8
  %117 = load double, double* %20, align 8
  %118 = fmul double %116, %117
  %119 = load double, double* %8, align 8
  %120 = load double, double* %13, align 8
  %121 = fmul double %119, %120
  %122 = fsub double %118, %121
  %123 = fmul double 3.000000e+00, %122
  %124 = fadd double %115, %123
  %125 = load double, double* %21, align 8
  %126 = fadd double %124, %125
  %127 = fadd double %126, 1.000000e+00
  store double %127, double* %17, align 8
  %128 = load double, double* %7, align 8
  %129 = fmul double 6.000000e+00, %128
  %130 = load double, double* %8, align 8
  %131 = fmul double %129, %130
  %132 = load double, double* %7, align 8
  %133 = load double, double* %13, align 8
  %134 = fmul double %132, %133
  %135 = load double, double* %8, align 8
  %136 = load double, double* %20, align 8
  %137 = fmul double %135, %136
  %138 = fadd double %134, %137
  %139 = fmul double 3.000000e+00, %138
  %140 = fadd double %131, %139
  %141 = load double, double* %22, align 8
  %142 = fadd double %140, %141
  store double %142, double* %18, align 8
  %143 = load double, double* %17, align 8
  %144 = load double, double* %17, align 8
  %145 = fmul double %143, %144
  %146 = load double, double* %18, align 8
  %147 = load double, double* %18, align 8
  %148 = fmul double %146, %147
  %149 = fadd double %145, %148
  store double %149, double* %14, align 8
  %150 = load double, double* %15, align 8
  %151 = load double, double* %17, align 8
  %152 = fmul double %150, %151
  %153 = load double, double* %16, align 8
  %154 = load double, double* %18, align 8
  %155 = fmul double %153, %154
  %156 = fadd double %152, %155
  %157 = load double, double* %14, align 8
  %158 = fdiv double %156, %157
  store double %158, double* %7, align 8
  %159 = load double, double* %16, align 8
  %160 = load double, double* %17, align 8
  %161 = fmul double %159, %160
  %162 = load double, double* %15, align 8
  %163 = load double, double* %18, align 8
  %164 = fmul double %162, %163
  %165 = fsub double %161, %164
  %166 = load double, double* %14, align 8
  %167 = fdiv double %165, %166
  store double %167, double* %8, align 8
  %168 = load double, double* %8, align 8
  %169 = load double, double* %8, align 8
  %170 = fmul double %168, %169
  store double %170, double* %11, align 8
  %171 = load double, double* %7, align 8
  %172 = fmul double 2.000000e+00, %171
  %173 = load double, double* %8, align 8
  %174 = fmul double %172, %173
  store double %174, double* %8, align 8
  %175 = load double, double* %7, align 8
  %176 = load double, double* %7, align 8
  %177 = fmul double %175, %176
  %178 = load double, double* %11, align 8
  %179 = fsub double %177, %178
  store double %179, double* %7, align 8
  %180 = load double, double* %7, align 8
  %181 = call double @_ZN3pov3SqrEd(double %180)
  store double %181, double* %10, align 8
  %182 = load double, double* %8, align 8
  %183 = call double @_ZN3pov3SqrEd(double %182)
  store double %183, double* %11, align 8
  %184 = load double, double* %10, align 8
  %185 = load double, double* %11, align 8
  %186 = fadd double %184, %185
  store double %186, double* %23, align 8
  %187 = load double, double* %23, align 8
  %188 = load double, double* %24, align 8
  %189 = fcmp olt double %187, %188
  br i1 %189, label %190, label %192

; <label>:190:                                    ; preds = %73
  %191 = load double, double* %23, align 8
  store double %191, double* %24, align 8
  br label %192

; <label>:192:                                    ; preds = %190, %73
  %193 = load double, double* %7, align 8
  %194 = fsub double %193, 1.000000e+00
  store double %194, double* %15, align 8
  %195 = load double, double* %23, align 8
  %196 = fcmp ogt double %195, 1.000000e+04
  br i1 %196, label %220, label %197

; <label>:197:                                    ; preds = %192
  %198 = load i32, i32* @x.31
  %199 = load i32, i32* @y.32
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %197
  %206 = load double, double* %15, align 8
  %207 = load double, double* %15, align 8
  %208 = fmul double %206, %207
  %209 = load double, double* %11, align 8
  %210 = fadd double %208, %209
  %211 = fcmp olt double %210, 1.000000e-04
  %212 = load i32, i32* @x.31
  %213 = load i32, i32* @y.32
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBBpart225, label %originalBB1alteredBB

originalBBpart225:                                ; preds = %originalBB1
  br i1 %211, label %220, label %226

; <label>:220:                                    ; preds = %originalBBpart225, %192
  %221 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %222 = load i32, i32* %6, align 4
  %223 = load double, double* %7, align 8
  %224 = load double, double* %8, align 8
  %225 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %221, i32 %222, double %223, double %224)
  store double %225, double* %9, align 8
  br label %246

; <label>:226:                                    ; preds = %originalBBpart225
  br label %227

; <label>:227:                                    ; preds = %226
  %228 = load i32, i32* @x.31
  %229 = load i32, i32* @y.32
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %originalBB27alteredBB, %227
  %236 = load i32, i32* %6, align 4
  %237 = add nsw i32 %236, 1
  store i32 %237, i32* %6, align 4
  %238 = load i32, i32* @x.31
  %239 = load i32, i32* @y.32
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBBpart243, label %originalBB27alteredBB

originalBBpart243:                                ; preds = %originalBB27
  br label %53

; <label>:246:                                    ; preds = %220, %originalBBpart2
  %247 = load i32, i32* %6, align 4
  %248 = load i32, i32* %5, align 4
  %249 = icmp eq i32 %247, %248
  br i1 %249, label %250, label %257

; <label>:250:                                    ; preds = %246
  %251 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %252 = load i32, i32* %6, align 4
  %253 = load double, double* %7, align 8
  %254 = load double, double* %8, align 8
  %255 = load double, double* %24, align 8
  %256 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %251, i32 %252, double %253, double %254, double %255)
  store double %256, double* %9, align 8
  br label %257

; <label>:257:                                    ; preds = %250, %246
  %258 = load i32, i32* @x.31
  %259 = load i32, i32* @y.32
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %originalBB45alteredBB, %257
  %266 = load double, double* %9, align 8
  %267 = load i32, i32* @x.31
  %268 = load i32, i32* @y.32
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  ret double %266

originalBBalteredBB:                              ; preds = %originalBB, %53
  %275 = load i32, i32* %6, align 4
  %276 = load i32, i32* %5, align 4
  %277 = icmp slt i32 %275, %276
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %197
  %278 = load double, double* %15, align 8
  %279 = load double, double* %15, align 8
  %_ = fsub double %278, %279
  %gen = fmul double %_, %279
  %_2 = fsub double %278, %279
  %gen3 = fmul double %_2, %279
  %_4 = fsub double %278, %279
  %gen5 = fmul double %_4, %279
  %_6 = fsub double %278, %279
  %gen7 = fmul double %_6, %279
  %_8 = fsub double -0.000000e+00, %278
  %gen9 = fadd double %_8, %279
  %_10 = fsub double -0.000000e+00, %278
  %gen11 = fadd double %_10, %279
  %_12 = fsub double -0.000000e+00, %278
  %gen13 = fadd double %_12, %279
  %_14 = fsub double %278, %279
  %gen15 = fmul double %_14, %279
  %280 = fmul double %278, %279
  %281 = load double, double* %11, align 8
  %_16 = fsub double %280, %281
  %gen17 = fmul double %_16, %281
  %_18 = fsub double %280, %281
  %gen19 = fmul double %_18, %281
  %_20 = fsub double -0.000000e+00, %280
  %gen21 = fadd double %_20, %281
  %_22 = fsub double -0.000000e+00, %280
  %gen23 = fadd double %_22, %281
  %282 = fadd double %280, %281
  %283 = fcmp olt double %282, 1.000000e-04
  br label %originalBB1

originalBB27alteredBB:                            ; preds = %originalBB27, %227
  %284 = load i32, i32* %6, align 4
  %_28 = sub i32 0, %284
  %gen29 = add i32 %_28, 1
  %_30 = sub i32 %284, 1
  %gen31 = mul i32 %_30, 1
  %_32 = sub i32 0, %284
  %gen33 = add i32 %_32, 1
  %_34 = sub i32 0, %284
  %gen35 = add i32 %_34, 1
  %_36 = sub i32 %284, 1
  %gen37 = mul i32 %_36, 1
  %_38 = sub i32 0, %284
  %gen39 = add i32 %_38, 1
  %_40 = sub i32 %284, 1
  %gen41 = mul i32 %_40, 1
  %285 = add nsw i32 %284, 1
  store i32 %285, i32* %6, align 4
  br label %originalBB27

originalBB45alteredBB:                            ; preds = %originalBB45, %257
  %286 = load double, double* %9, align 8
  br label %originalBB45
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL16magnet2j_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #2 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca double, align 8
  %23 = alloca double, align 8
  %24 = alloca double, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %25 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %26 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %25, i32 0, i32 10
  %27 = bitcast %union.anon.25* %26 to %struct.anon.31*
  %28 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %27, i32 0, i32 0
  %29 = getelementptr inbounds [2 x double], [2 x double]* %28, i64 0, i64 0
  %30 = load double, double* %29, align 8
  store double %30, double* %21, align 8
  %31 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %32 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %31, i32 0, i32 10
  %33 = bitcast %union.anon.25* %32 to %struct.anon.31*
  %34 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %33, i32 0, i32 0
  %35 = getelementptr inbounds [2 x double], [2 x double]* %34, i64 0, i64 1
  %36 = load double, double* %35, align 8
  store double %36, double* %22, align 8
  %37 = load double*, double** %3, align 8
  %38 = getelementptr inbounds double, double* %37, i64 0
  %39 = load double, double* %38, align 8
  store double %39, double* %7, align 8
  %40 = load double, double* %7, align 8
  %41 = call double @_ZN3pov3SqrEd(double %40)
  store double %41, double* %10, align 8
  %42 = load double*, double** %3, align 8
  %43 = getelementptr inbounds double, double* %42, i64 1
  %44 = load double, double* %43, align 8
  store double %44, double* %8, align 8
  %45 = load double, double* %8, align 8
  %46 = call double @_ZN3pov3SqrEd(double %45)
  store double %46, double* %11, align 8
  %47 = load double, double* %10, align 8
  %48 = load double, double* %11, align 8
  %49 = fadd double %47, %48
  store double %49, double* %24, align 8
  %50 = load double, double* %21, align 8
  %51 = fsub double %50, 1.000000e+00
  store double %51, double* %17, align 8
  %52 = load double, double* %21, align 8
  %53 = fsub double %52, 2.000000e+00
  store double %53, double* %18, align 8
  %54 = load double, double* %17, align 8
  %55 = load double, double* %18, align 8
  %56 = fmul double %54, %55
  %57 = load double, double* %22, align 8
  %58 = load double, double* %22, align 8
  %59 = fmul double %57, %58
  %60 = fsub double %56, %59
  store double %60, double* %19, align 8
  %61 = load double, double* %17, align 8
  %62 = load double, double* %18, align 8
  %63 = fadd double %61, %62
  %64 = load double, double* %22, align 8
  %65 = fmul double %63, %64
  store double %65, double* %20, align 8
  %66 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %67 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %66, i32 0, i32 10
  %68 = bitcast %union.anon.25* %67 to %struct.anon.31*
  %69 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %68, i32 0, i32 1
  %70 = load i16, i16* %69, align 8
  %71 = sext i16 %70 to i32
  store i32 %71, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %72

; <label>:72:                                     ; preds = %230, %2
  %73 = load i32, i32* %6, align 4
  %74 = load i32, i32* %5, align 4
  %75 = icmp slt i32 %73, %74
  br i1 %75, label %76, label %233

; <label>:76:                                     ; preds = %72
  %77 = load double, double* %10, align 8
  %78 = load double, double* %7, align 8
  %79 = fmul double %77, %78
  %80 = load double, double* %7, align 8
  %81 = fmul double 3.000000e+00, %80
  %82 = load double, double* %11, align 8
  %83 = fmul double %81, %82
  %84 = fsub double %79, %83
  %85 = load double, double* %7, align 8
  %86 = load double, double* %17, align 8
  %87 = fmul double %85, %86
  %88 = load double, double* %8, align 8
  %89 = load double, double* %22, align 8
  %90 = fmul double %88, %89
  %91 = fsub double %87, %90
  %92 = fmul double 3.000000e+00, %91
  %93 = fadd double %84, %92
  %94 = load double, double* %19, align 8
  %95 = fadd double %93, %94
  store double %95, double* %13, align 8
  %96 = load double, double* %10, align 8
  %97 = fmul double 3.000000e+00, %96
  %98 = load double, double* %8, align 8
  %99 = fmul double %97, %98
  %100 = load double, double* %11, align 8
  %101 = load double, double* %8, align 8
  %102 = fmul double %100, %101
  %103 = fsub double %99, %102
  %104 = load double, double* %7, align 8
  %105 = load double, double* %22, align 8
  %106 = fmul double %104, %105
  %107 = load double, double* %8, align 8
  %108 = load double, double* %17, align 8
  %109 = fmul double %107, %108
  %110 = fadd double %106, %109
  %111 = fmul double 3.000000e+00, %110
  %112 = fadd double %103, %111
  %113 = load double, double* %20, align 8
  %114 = fadd double %112, %113
  store double %114, double* %14, align 8
  %115 = load double, double* %10, align 8
  %116 = load double, double* %11, align 8
  %117 = fsub double %115, %116
  %118 = fmul double 3.000000e+00, %117
  %119 = load double, double* %7, align 8
  %120 = load double, double* %18, align 8
  %121 = fmul double %119, %120
  %122 = load double, double* %8, align 8
  %123 = load double, double* %22, align 8
  %124 = fmul double %122, %123
  %125 = fsub double %121, %124
  %126 = fmul double 3.000000e+00, %125
  %127 = fadd double %118, %126
  %128 = load double, double* %19, align 8
  %129 = fadd double %127, %128
  %130 = fadd double %129, 1.000000e+00
  store double %130, double* %15, align 8
  %131 = load double, double* %7, align 8
  %132 = fmul double 6.000000e+00, %131
  %133 = load double, double* %8, align 8
  %134 = fmul double %132, %133
  %135 = load double, double* %7, align 8
  %136 = load double, double* %22, align 8
  %137 = fmul double %135, %136
  %138 = load double, double* %8, align 8
  %139 = load double, double* %18, align 8
  %140 = fmul double %138, %139
  %141 = fadd double %137, %140
  %142 = fmul double 3.000000e+00, %141
  %143 = fadd double %134, %142
  %144 = load double, double* %20, align 8
  %145 = fadd double %143, %144
  store double %145, double* %16, align 8
  %146 = load double, double* %15, align 8
  %147 = load double, double* %15, align 8
  %148 = fmul double %146, %147
  %149 = load double, double* %16, align 8
  %150 = load double, double* %16, align 8
  %151 = fmul double %149, %150
  %152 = fadd double %148, %151
  store double %152, double* %12, align 8
  %153 = load double, double* %13, align 8
  %154 = load double, double* %15, align 8
  %155 = fmul double %153, %154
  %156 = load double, double* %14, align 8
  %157 = load double, double* %16, align 8
  %158 = fmul double %156, %157
  %159 = fadd double %155, %158
  %160 = load double, double* %12, align 8
  %161 = fdiv double %159, %160
  store double %161, double* %7, align 8
  %162 = load double, double* %14, align 8
  %163 = load double, double* %15, align 8
  %164 = fmul double %162, %163
  %165 = load double, double* %13, align 8
  %166 = load double, double* %16, align 8
  %167 = fmul double %165, %166
  %168 = fsub double %164, %167
  %169 = load double, double* %12, align 8
  %170 = fdiv double %168, %169
  store double %170, double* %8, align 8
  %171 = load double, double* %8, align 8
  %172 = load double, double* %8, align 8
  %173 = fmul double %171, %172
  store double %173, double* %11, align 8
  %174 = load double, double* %7, align 8
  %175 = fmul double 2.000000e+00, %174
  %176 = load double, double* %8, align 8
  %177 = fmul double %175, %176
  store double %177, double* %8, align 8
  %178 = load double, double* %7, align 8
  %179 = load double, double* %7, align 8
  %180 = fmul double %178, %179
  %181 = load double, double* %11, align 8
  %182 = fsub double %180, %181
  store double %182, double* %7, align 8
  %183 = load double, double* %7, align 8
  %184 = call double @_ZN3pov3SqrEd(double %183)
  store double %184, double* %10, align 8
  %185 = load double, double* %8, align 8
  %186 = call double @_ZN3pov3SqrEd(double %185)
  store double %186, double* %11, align 8
  %187 = load double, double* %10, align 8
  %188 = load double, double* %11, align 8
  %189 = fadd double %187, %188
  store double %189, double* %23, align 8
  %190 = load double, double* %23, align 8
  %191 = load double, double* %24, align 8
  %192 = fcmp olt double %190, %191
  br i1 %192, label %193, label %195

; <label>:193:                                    ; preds = %76
  %194 = load double, double* %23, align 8
  store double %194, double* %24, align 8
  br label %195

; <label>:195:                                    ; preds = %193, %76
  %196 = load double, double* %7, align 8
  %197 = fsub double %196, 1.000000e+00
  store double %197, double* %13, align 8
  %198 = load double, double* %23, align 8
  %199 = fcmp ogt double %198, 1.000000e+04
  br i1 %199, label %207, label %200

; <label>:200:                                    ; preds = %195
  %201 = load double, double* %13, align 8
  %202 = load double, double* %13, align 8
  %203 = fmul double %201, %202
  %204 = load double, double* %11, align 8
  %205 = fadd double %203, %204
  %206 = fcmp olt double %205, 1.000000e-04
  br i1 %206, label %207, label %213

; <label>:207:                                    ; preds = %200, %195
  %208 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %209 = load i32, i32* %6, align 4
  %210 = load double, double* %7, align 8
  %211 = load double, double* %8, align 8
  %212 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %208, i32 %209, double %210, double %211)
  store double %212, double* %9, align 8
  br label %233

; <label>:213:                                    ; preds = %200
  %214 = load i32, i32* @x.33
  %215 = load i32, i32* @y.34
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %213
  %222 = load i32, i32* @x.33
  %223 = load i32, i32* @y.34
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %230

; <label>:230:                                    ; preds = %originalBBpart2
  %231 = load i32, i32* %6, align 4
  %232 = add nsw i32 %231, 1
  store i32 %232, i32* %6, align 4
  br label %72

; <label>:233:                                    ; preds = %207, %72
  %234 = load i32, i32* %6, align 4
  %235 = load i32, i32* %5, align 4
  %236 = icmp eq i32 %234, %235
  br i1 %236, label %237, label %244

; <label>:237:                                    ; preds = %233
  %238 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %239 = load i32, i32* %6, align 4
  %240 = load double, double* %7, align 8
  %241 = load double, double* %8, align 8
  %242 = load double, double* %24, align 8
  %243 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %238, i32 %239, double %240, double %241, double %242)
  store double %243, double* %9, align 8
  br label %244

; <label>:244:                                    ; preds = %237, %233
  %245 = load double, double* %9, align 8
  ret double %245

originalBBalteredBB:                              ; preds = %originalBB, %213
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL14mandel_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #2 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %16 = load double*, double** %3, align 8
  %17 = getelementptr inbounds double, double* %16, i64 0
  %18 = load double, double* %17, align 8
  store double %18, double* %12, align 8
  store double %18, double* %7, align 8
  %19 = load double, double* %7, align 8
  %20 = call double @_ZN3pov3SqrEd(double %19)
  store double %20, double* %10, align 8
  %21 = load double*, double** %3, align 8
  %22 = getelementptr inbounds double, double* %21, i64 1
  %23 = load double, double* %22, align 8
  store double %23, double* %13, align 8
  store double %23, double* %8, align 8
  %24 = load double, double* %8, align 8
  %25 = call double @_ZN3pov3SqrEd(double %24)
  store double %25, double* %11, align 8
  %26 = load double, double* %10, align 8
  %27 = load double, double* %11, align 8
  %28 = fadd double %26, %27
  store double %28, double* %15, align 8
  %29 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %30 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %29, i32 0, i32 10
  %31 = bitcast %union.anon.25* %30 to %struct.anon.31*
  %32 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %31, i32 0, i32 1
  %33 = load i16, i16* %32, align 8
  %34 = sext i16 %33 to i32
  store i32 %34, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %35

; <label>:35:                                     ; preds = %121, %2
  %36 = load i32, i32* @x.35
  %37 = load i32, i32* @y.36
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %35
  %44 = load i32, i32* %6, align 4
  %45 = load i32, i32* %5, align 4
  %46 = icmp slt i32 %44, %45
  %47 = load i32, i32* @x.35
  %48 = load i32, i32* @y.36
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %46, label %55, label %124

; <label>:55:                                     ; preds = %originalBBpart2
  %56 = load i32, i32* @x.35
  %57 = load i32, i32* @y.36
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %55
  %64 = load double, double* %7, align 8
  %65 = fmul double 2.000000e+00, %64
  %66 = load double, double* %8, align 8
  %67 = fmul double %65, %66
  %68 = load double, double* %13, align 8
  %69 = fadd double %67, %68
  store double %69, double* %8, align 8
  %70 = load double, double* %10, align 8
  %71 = load double, double* %11, align 8
  %72 = fsub double %70, %71
  %73 = load double, double* %12, align 8
  %74 = fadd double %72, %73
  store double %74, double* %7, align 8
  %75 = load double, double* %7, align 8
  %76 = call double @_ZN3pov3SqrEd(double %75)
  store double %76, double* %10, align 8
  %77 = load double, double* %8, align 8
  %78 = call double @_ZN3pov3SqrEd(double %77)
  store double %78, double* %11, align 8
  %79 = load double, double* %10, align 8
  %80 = load double, double* %11, align 8
  %81 = fadd double %79, %80
  store double %81, double* %14, align 8
  %82 = load double, double* %14, align 8
  %83 = load double, double* %15, align 8
  %84 = fcmp olt double %82, %83
  %85 = load i32, i32* @x.35
  %86 = load i32, i32* @y.36
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart255, label %originalBB1alteredBB

originalBBpart255:                                ; preds = %originalBB1
  br i1 %84, label %93, label %111

; <label>:93:                                     ; preds = %originalBBpart255
  %94 = load i32, i32* @x.35
  %95 = load i32, i32* @y.36
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %originalBB57alteredBB, %93
  %102 = load double, double* %14, align 8
  store double %102, double* %15, align 8
  %103 = load i32, i32* @x.35
  %104 = load i32, i32* @y.36
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br label %111

; <label>:111:                                    ; preds = %originalBBpart259, %originalBBpart255
  %112 = load double, double* %14, align 8
  %113 = fcmp ogt double %112, 4.000000e+00
  br i1 %113, label %114, label %120

; <label>:114:                                    ; preds = %111
  %115 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %116 = load i32, i32* %6, align 4
  %117 = load double, double* %7, align 8
  %118 = load double, double* %8, align 8
  %119 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %115, i32 %116, double %117, double %118)
  store double %119, double* %9, align 8
  br label %124

; <label>:120:                                    ; preds = %111
  br label %121

; <label>:121:                                    ; preds = %120
  %122 = load i32, i32* %6, align 4
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %6, align 4
  br label %35

; <label>:124:                                    ; preds = %114, %originalBBpart2
  %125 = load i32, i32* @x.35
  %126 = load i32, i32* @y.36
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %originalBB61alteredBB, %124
  %133 = load i32, i32* %6, align 4
  %134 = load i32, i32* %5, align 4
  %135 = icmp eq i32 %133, %134
  %136 = load i32, i32* @x.35
  %137 = load i32, i32* @y.36
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br i1 %135, label %144, label %151

; <label>:144:                                    ; preds = %originalBBpart263
  %145 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %146 = load i32, i32* %6, align 4
  %147 = load double, double* %7, align 8
  %148 = load double, double* %8, align 8
  %149 = load double, double* %15, align 8
  %150 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %145, i32 %146, double %147, double %148, double %149)
  store double %150, double* %9, align 8
  br label %151

; <label>:151:                                    ; preds = %144, %originalBBpart263
  %152 = load i32, i32* @x.35
  %153 = load i32, i32* @y.36
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %originalBB65alteredBB, %151
  %160 = load double, double* %9, align 8
  %161 = load i32, i32* @x.35
  %162 = load i32, i32* @y.36
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  ret double %160

originalBBalteredBB:                              ; preds = %originalBB, %35
  %169 = load i32, i32* %6, align 4
  %170 = load i32, i32* %5, align 4
  %171 = icmp slt i32 %169, %170
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %55
  %172 = load double, double* %7, align 8
  %_ = fsub double -0.000000e+00, 2.000000e+00
  %gen = fadd double %_, %172
  %_2 = fsub double -0.000000e+00, 2.000000e+00
  %gen3 = fadd double %_2, %172
  %_4 = fsub double -0.000000e+00, 2.000000e+00
  %gen5 = fadd double %_4, %172
  %_6 = fsub double 2.000000e+00, %172
  %gen7 = fmul double %_6, %172
  %173 = fmul double 2.000000e+00, %172
  %174 = load double, double* %8, align 8
  %_8 = fsub double %173, %174
  %gen9 = fmul double %_8, %174
  %_10 = fsub double %173, %174
  %gen11 = fmul double %_10, %174
  %_12 = fsub double %173, %174
  %gen13 = fmul double %_12, %174
  %_14 = fsub double -0.000000e+00, %173
  %gen15 = fadd double %_14, %174
  %_16 = fsub double -0.000000e+00, %173
  %gen17 = fadd double %_16, %174
  %_18 = fsub double %173, %174
  %gen19 = fmul double %_18, %174
  %_20 = fsub double %173, %174
  %gen21 = fmul double %_20, %174
  %175 = fmul double %173, %174
  %176 = load double, double* %13, align 8
  %_22 = fsub double -0.000000e+00, %175
  %gen23 = fadd double %_22, %176
  %_24 = fsub double %175, %176
  %gen25 = fmul double %_24, %176
  %_26 = fsub double -0.000000e+00, %175
  %gen27 = fadd double %_26, %176
  %177 = fadd double %175, %176
  store double %177, double* %8, align 8
  %178 = load double, double* %10, align 8
  %179 = load double, double* %11, align 8
  %_28 = fsub double -0.000000e+00, %178
  %gen29 = fadd double %_28, %179
  %_30 = fsub double -0.000000e+00, %178
  %gen31 = fadd double %_30, %179
  %180 = fsub double %178, %179
  %181 = load double, double* %12, align 8
  %_32 = fsub double %180, %181
  %gen33 = fmul double %_32, %181
  %_34 = fsub double %180, %181
  %gen35 = fmul double %_34, %181
  %_36 = fsub double -0.000000e+00, %180
  %gen37 = fadd double %_36, %181
  %_38 = fsub double %180, %181
  %gen39 = fmul double %_38, %181
  %_40 = fsub double -0.000000e+00, %180
  %gen41 = fadd double %_40, %181
  %_42 = fsub double %180, %181
  %gen43 = fmul double %_42, %181
  %_44 = fsub double %180, %181
  %gen45 = fmul double %_44, %181
  %182 = fadd double %180, %181
  store double %182, double* %7, align 8
  %183 = load double, double* %7, align 8
  %184 = call double @_ZN3pov3SqrEd(double %183)
  store double %184, double* %10, align 8
  %185 = load double, double* %8, align 8
  %186 = call double @_ZN3pov3SqrEd(double %185)
  store double %186, double* %11, align 8
  %187 = load double, double* %10, align 8
  %188 = load double, double* %11, align 8
  %_46 = fsub double %187, %188
  %gen47 = fmul double %_46, %188
  %_48 = fsub double %187, %188
  %gen49 = fmul double %_48, %188
  %_50 = fsub double -0.000000e+00, %187
  %gen51 = fadd double %_50, %188
  %_52 = fsub double -0.000000e+00, %187
  %gen53 = fadd double %_52, %188
  %189 = fadd double %187, %188
  store double %189, double* %14, align 8
  %190 = load double, double* %14, align 8
  %191 = load double, double* %15, align 8
  %192 = fcmp olt double %190, %191
  br label %originalBB1

originalBB57alteredBB:                            ; preds = %originalBB57, %93
  %193 = load double, double* %14, align 8
  store double %193, double* %15, align 8
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %124
  %194 = load i32, i32* %6, align 4
  %195 = load i32, i32* %5, align 4
  %196 = icmp eq i32 %194, %195
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %151
  %197 = load double, double* %9, align 8
  br label %originalBB65
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL15mandel3_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #2 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %16 = load double*, double** %3, align 8
  %17 = getelementptr inbounds double, double* %16, i64 0
  %18 = load double, double* %17, align 8
  store double %18, double* %12, align 8
  store double %18, double* %7, align 8
  %19 = load double, double* %7, align 8
  %20 = call double @_ZN3pov3SqrEd(double %19)
  store double %20, double* %10, align 8
  %21 = load double*, double** %3, align 8
  %22 = getelementptr inbounds double, double* %21, i64 1
  %23 = load double, double* %22, align 8
  store double %23, double* %13, align 8
  store double %23, double* %8, align 8
  %24 = load double, double* %8, align 8
  %25 = call double @_ZN3pov3SqrEd(double %24)
  store double %25, double* %11, align 8
  %26 = load double, double* %10, align 8
  %27 = load double, double* %11, align 8
  %28 = fadd double %26, %27
  store double %28, double* %15, align 8
  %29 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %30 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %29, i32 0, i32 10
  %31 = bitcast %union.anon.25* %30 to %struct.anon.31*
  %32 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %31, i32 0, i32 1
  %33 = load i16, i16* %32, align 8
  %34 = sext i16 %33 to i32
  store i32 %34, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %35

; <label>:35:                                     ; preds = %130, %2
  %36 = load i32, i32* %6, align 4
  %37 = load i32, i32* %5, align 4
  %38 = icmp slt i32 %36, %37
  br i1 %38, label %39, label %133

; <label>:39:                                     ; preds = %35
  %40 = load i32, i32* @x.37
  %41 = load i32, i32* @y.38
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %39
  %48 = load double, double* %10, align 8
  %49 = fmul double 3.000000e+00, %48
  %50 = load double, double* %8, align 8
  %51 = fmul double %49, %50
  %52 = load double, double* %11, align 8
  %53 = load double, double* %8, align 8
  %54 = fmul double %52, %53
  %55 = fsub double %51, %54
  %56 = load double, double* %13, align 8
  %57 = fadd double %55, %56
  store double %57, double* %8, align 8
  %58 = load double, double* %10, align 8
  %59 = load double, double* %7, align 8
  %60 = fmul double %58, %59
  %61 = load double, double* %7, align 8
  %62 = fmul double 3.000000e+00, %61
  %63 = load double, double* %11, align 8
  %64 = fmul double %62, %63
  %65 = fsub double %60, %64
  %66 = load double, double* %12, align 8
  %67 = fadd double %65, %66
  store double %67, double* %7, align 8
  %68 = load double, double* %7, align 8
  %69 = call double @_ZN3pov3SqrEd(double %68)
  store double %69, double* %10, align 8
  %70 = load double, double* %8, align 8
  %71 = call double @_ZN3pov3SqrEd(double %70)
  store double %71, double* %11, align 8
  %72 = load double, double* %10, align 8
  %73 = load double, double* %11, align 8
  %74 = fadd double %72, %73
  store double %74, double* %14, align 8
  %75 = load double, double* %14, align 8
  %76 = load double, double* %15, align 8
  %77 = fcmp olt double %75, %76
  %78 = load i32, i32* @x.37
  %79 = load i32, i32* @y.38
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %77, label %86, label %88

; <label>:86:                                     ; preds = %originalBBpart2
  %87 = load double, double* %14, align 8
  store double %87, double* %15, align 8
  br label %88

; <label>:88:                                     ; preds = %86, %originalBBpart2
  %89 = load double, double* %14, align 8
  %90 = fcmp ogt double %89, 4.000000e+00
  br i1 %90, label %91, label %113

; <label>:91:                                     ; preds = %88
  %92 = load i32, i32* @x.37
  %93 = load i32, i32* @y.38
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %91
  %100 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %101 = load i32, i32* %6, align 4
  %102 = load double, double* %7, align 8
  %103 = load double, double* %8, align 8
  %104 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %100, i32 %101, double %102, double %103)
  store double %104, double* %9, align 8
  %105 = load i32, i32* @x.37
  %106 = load i32, i32* @y.38
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %133

; <label>:113:                                    ; preds = %88
  %114 = load i32, i32* @x.37
  %115 = load i32, i32* @y.38
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %originalBB63alteredBB, %113
  %122 = load i32, i32* @x.37
  %123 = load i32, i32* @y.38
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %130

; <label>:130:                                    ; preds = %originalBBpart265
  %131 = load i32, i32* %6, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %6, align 4
  br label %35

; <label>:133:                                    ; preds = %originalBBpart261, %35
  %134 = load i32, i32* %6, align 4
  %135 = load i32, i32* %5, align 4
  %136 = icmp eq i32 %134, %135
  br i1 %136, label %137, label %160

; <label>:137:                                    ; preds = %133
  %138 = load i32, i32* @x.37
  %139 = load i32, i32* @y.38
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %originalBB67alteredBB, %137
  %146 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %147 = load i32, i32* %6, align 4
  %148 = load double, double* %7, align 8
  %149 = load double, double* %8, align 8
  %150 = load double, double* %15, align 8
  %151 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %146, i32 %147, double %148, double %149, double %150)
  store double %151, double* %9, align 8
  %152 = load i32, i32* @x.37
  %153 = load i32, i32* @y.38
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %160

; <label>:160:                                    ; preds = %originalBBpart269, %133
  %161 = load double, double* %9, align 8
  ret double %161

originalBBalteredBB:                              ; preds = %originalBB, %39
  %162 = load double, double* %10, align 8
  %_ = fsub double 3.000000e+00, %162
  %gen = fmul double %_, %162
  %163 = fmul double 3.000000e+00, %162
  %164 = load double, double* %8, align 8
  %_1 = fsub double %163, %164
  %gen2 = fmul double %_1, %164
  %_3 = fsub double %163, %164
  %gen4 = fmul double %_3, %164
  %_5 = fsub double -0.000000e+00, %163
  %gen6 = fadd double %_5, %164
  %_7 = fsub double -0.000000e+00, %163
  %gen8 = fadd double %_7, %164
  %_9 = fsub double -0.000000e+00, %163
  %gen10 = fadd double %_9, %164
  %165 = fmul double %163, %164
  %166 = load double, double* %11, align 8
  %167 = load double, double* %8, align 8
  %_11 = fsub double -0.000000e+00, %166
  %gen12 = fadd double %_11, %167
  %_13 = fsub double %166, %167
  %gen14 = fmul double %_13, %167
  %_15 = fsub double -0.000000e+00, %166
  %gen16 = fadd double %_15, %167
  %_17 = fsub double -0.000000e+00, %166
  %gen18 = fadd double %_17, %167
  %168 = fmul double %166, %167
  %_19 = fsub double -0.000000e+00, %165
  %gen20 = fadd double %_19, %168
  %169 = fsub double %165, %168
  %170 = load double, double* %13, align 8
  %_21 = fsub double -0.000000e+00, %169
  %gen22 = fadd double %_21, %170
  %_23 = fsub double %169, %170
  %gen24 = fmul double %_23, %170
  %_25 = fsub double -0.000000e+00, %169
  %gen26 = fadd double %_25, %170
  %_27 = fsub double -0.000000e+00, %169
  %gen28 = fadd double %_27, %170
  %_29 = fsub double -0.000000e+00, %169
  %gen30 = fadd double %_29, %170
  %_31 = fsub double %169, %170
  %gen32 = fmul double %_31, %170
  %_33 = fsub double -0.000000e+00, %169
  %gen34 = fadd double %_33, %170
  %171 = fadd double %169, %170
  store double %171, double* %8, align 8
  %172 = load double, double* %10, align 8
  %173 = load double, double* %7, align 8
  %_35 = fsub double -0.000000e+00, %172
  %gen36 = fadd double %_35, %173
  %174 = fmul double %172, %173
  %175 = load double, double* %7, align 8
  %_37 = fsub double 3.000000e+00, %175
  %gen38 = fmul double %_37, %175
  %_39 = fsub double 3.000000e+00, %175
  %gen40 = fmul double %_39, %175
  %176 = fmul double 3.000000e+00, %175
  %177 = load double, double* %11, align 8
  %_41 = fsub double %176, %177
  %gen42 = fmul double %_41, %177
  %_43 = fsub double %176, %177
  %gen44 = fmul double %_43, %177
  %178 = fmul double %176, %177
  %_45 = fsub double %174, %178
  %gen46 = fmul double %_45, %178
  %_47 = fsub double %174, %178
  %gen48 = fmul double %_47, %178
  %179 = fsub double %174, %178
  %180 = load double, double* %12, align 8
  %_49 = fsub double %179, %180
  %gen50 = fmul double %_49, %180
  %_51 = fsub double %179, %180
  %gen52 = fmul double %_51, %180
  %_53 = fsub double -0.000000e+00, %179
  %gen54 = fadd double %_53, %180
  %181 = fadd double %179, %180
  store double %181, double* %7, align 8
  %182 = load double, double* %7, align 8
  %183 = call double @_ZN3pov3SqrEd(double %182)
  store double %183, double* %10, align 8
  %184 = load double, double* %8, align 8
  %185 = call double @_ZN3pov3SqrEd(double %184)
  store double %185, double* %11, align 8
  %186 = load double, double* %10, align 8
  %187 = load double, double* %11, align 8
  %_55 = fsub double -0.000000e+00, %186
  %gen56 = fadd double %_55, %187
  %_57 = fsub double %186, %187
  %gen58 = fmul double %_57, %187
  %188 = fadd double %186, %187
  store double %188, double* %14, align 8
  %189 = load double, double* %14, align 8
  %190 = load double, double* %15, align 8
  %191 = fcmp olt double %189, %190
  br label %originalBB

originalBB59alteredBB:                            ; preds = %originalBB59, %91
  %192 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %193 = load i32, i32* %6, align 4
  %194 = load double, double* %7, align 8
  %195 = load double, double* %8, align 8
  %196 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %192, i32 %193, double %194, double %195)
  store double %196, double* %9, align 8
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %113
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %137
  %197 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %198 = load i32, i32* %6, align 4
  %199 = load double, double* %7, align 8
  %200 = load double, double* %8, align 8
  %201 = load double, double* %15, align 8
  %202 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %197, i32 %198, double %199, double %200, double %201)
  store double %202, double* %9, align 8
  br label %originalBB67
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL15mandel4_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #2 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %16 = load double*, double** %3, align 8
  %17 = getelementptr inbounds double, double* %16, i64 0
  %18 = load double, double* %17, align 8
  store double %18, double* %12, align 8
  store double %18, double* %7, align 8
  %19 = load double, double* %7, align 8
  %20 = call double @_ZN3pov3SqrEd(double %19)
  store double %20, double* %10, align 8
  %21 = load double*, double** %3, align 8
  %22 = getelementptr inbounds double, double* %21, i64 1
  %23 = load double, double* %22, align 8
  store double %23, double* %13, align 8
  store double %23, double* %8, align 8
  %24 = load double, double* %8, align 8
  %25 = call double @_ZN3pov3SqrEd(double %24)
  store double %25, double* %11, align 8
  %26 = load double, double* %10, align 8
  %27 = load double, double* %11, align 8
  %28 = fadd double %26, %27
  store double %28, double* %15, align 8
  %29 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %30 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %29, i32 0, i32 10
  %31 = bitcast %union.anon.25* %30 to %struct.anon.31*
  %32 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %31, i32 0, i32 1
  %33 = load i16, i16* %32, align 8
  %34 = sext i16 %33 to i32
  store i32 %34, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %35

; <label>:35:                                     ; preds = %154, %2
  %36 = load i32, i32* @x.39
  %37 = load i32, i32* @y.40
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %35
  %44 = load i32, i32* %6, align 4
  %45 = load i32, i32* %5, align 4
  %46 = icmp slt i32 %44, %45
  %47 = load i32, i32* @x.39
  %48 = load i32, i32* @y.40
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %46, label %55, label %157

; <label>:55:                                     ; preds = %originalBBpart2
  %56 = load double, double* %10, align 8
  %57 = load double, double* %7, align 8
  %58 = fmul double %56, %57
  %59 = load double, double* %8, align 8
  %60 = fmul double %58, %59
  %61 = load double, double* %7, align 8
  %62 = load double, double* %11, align 8
  %63 = fmul double %61, %62
  %64 = load double, double* %8, align 8
  %65 = fmul double %63, %64
  %66 = fsub double %60, %65
  %67 = fmul double 4.000000e+00, %66
  %68 = load double, double* %13, align 8
  %69 = fadd double %67, %68
  store double %69, double* %8, align 8
  %70 = load double, double* %10, align 8
  %71 = load double, double* %10, align 8
  %72 = fmul double %70, %71
  %73 = load double, double* %10, align 8
  %74 = fmul double 6.000000e+00, %73
  %75 = load double, double* %11, align 8
  %76 = fmul double %74, %75
  %77 = fsub double %72, %76
  %78 = load double, double* %11, align 8
  %79 = load double, double* %11, align 8
  %80 = fmul double %78, %79
  %81 = fadd double %77, %80
  %82 = load double, double* %12, align 8
  %83 = fadd double %81, %82
  store double %83, double* %7, align 8
  %84 = load double, double* %7, align 8
  %85 = call double @_ZN3pov3SqrEd(double %84)
  store double %85, double* %10, align 8
  %86 = load double, double* %8, align 8
  %87 = call double @_ZN3pov3SqrEd(double %86)
  store double %87, double* %11, align 8
  %88 = load double, double* %10, align 8
  %89 = load double, double* %11, align 8
  %90 = fadd double %88, %89
  store double %90, double* %14, align 8
  %91 = load double, double* %14, align 8
  %92 = load double, double* %15, align 8
  %93 = fcmp olt double %91, %92
  br i1 %93, label %94, label %112

; <label>:94:                                     ; preds = %55
  %95 = load i32, i32* @x.39
  %96 = load i32, i32* @y.40
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %94
  %103 = load double, double* %14, align 8
  store double %103, double* %15, align 8
  %104 = load i32, i32* @x.39
  %105 = load i32, i32* @y.40
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %112

; <label>:112:                                    ; preds = %originalBBpart24, %55
  %113 = load double, double* %14, align 8
  %114 = fcmp ogt double %113, 4.000000e+00
  br i1 %114, label %115, label %137

; <label>:115:                                    ; preds = %112
  %116 = load i32, i32* @x.39
  %117 = load i32, i32* @y.40
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %115
  %124 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %125 = load i32, i32* %6, align 4
  %126 = load double, double* %7, align 8
  %127 = load double, double* %8, align 8
  %128 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %124, i32 %125, double %126, double %127)
  store double %128, double* %9, align 8
  %129 = load i32, i32* @x.39
  %130 = load i32, i32* @y.40
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %157

; <label>:137:                                    ; preds = %112
  %138 = load i32, i32* @x.39
  %139 = load i32, i32* @y.40
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %137
  %146 = load i32, i32* @x.39
  %147 = load i32, i32* @y.40
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %154

; <label>:154:                                    ; preds = %originalBBpart212
  %155 = load i32, i32* %6, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %6, align 4
  br label %35

; <label>:157:                                    ; preds = %originalBBpart28, %originalBBpart2
  %158 = load i32, i32* @x.39
  %159 = load i32, i32* @y.40
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %157
  %166 = load i32, i32* %6, align 4
  %167 = load i32, i32* %5, align 4
  %168 = icmp eq i32 %166, %167
  %169 = load i32, i32* @x.39
  %170 = load i32, i32* @y.40
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %168, label %177, label %200

; <label>:177:                                    ; preds = %originalBBpart216
  %178 = load i32, i32* @x.39
  %179 = load i32, i32* @y.40
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %177
  %186 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %187 = load i32, i32* %6, align 4
  %188 = load double, double* %7, align 8
  %189 = load double, double* %8, align 8
  %190 = load double, double* %15, align 8
  %191 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %186, i32 %187, double %188, double %189, double %190)
  store double %191, double* %9, align 8
  %192 = load i32, i32* @x.39
  %193 = load i32, i32* @y.40
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %200

; <label>:200:                                    ; preds = %originalBBpart220, %originalBBpart216
  %201 = load i32, i32* @x.39
  %202 = load i32, i32* @y.40
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %200
  %209 = load double, double* %9, align 8
  %210 = load i32, i32* @x.39
  %211 = load i32, i32* @y.40
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret double %209

originalBBalteredBB:                              ; preds = %originalBB, %35
  %218 = load i32, i32* %6, align 4
  %219 = load i32, i32* %5, align 4
  %220 = icmp slt i32 %218, %219
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %94
  %221 = load double, double* %14, align 8
  store double %221, double* %15, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %115
  %222 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %223 = load i32, i32* %6, align 4
  %224 = load double, double* %7, align 8
  %225 = load double, double* %8, align 8
  %226 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %222, i32 %223, double %224, double %225)
  store double %226, double* %9, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %137
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %157
  %227 = load i32, i32* %6, align 4
  %228 = load i32, i32* %5, align 4
  %229 = icmp eq i32 %227, %228
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %177
  %230 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %231 = load i32, i32* %6, align 4
  %232 = load double, double* %7, align 8
  %233 = load double, double* %8, align 8
  %234 = load double, double* %15, align 8
  %235 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %230, i32 %231, double %232, double %233, double %234)
  store double %235, double* %9, align 8
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %200
  %236 = load double, double* %9, align 8
  br label %originalBB22
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL15mandelx_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #2 {
  %3 = load i32, i32* @x.41
  %4 = load i32, i32* @y.42
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca double*, align 8
  %12 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca double, align 8
  %23 = alloca i32*, align 8
  %24 = alloca double, align 8
  %25 = alloca i32, align 4
  %26 = alloca double, align 8
  %27 = alloca i32, align 4
  store double* %0, double** %11, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %12, align 8
  store double 0.000000e+00, double* %18, align 8
  %28 = load i8, i8* @_ZN3pov26BinomialCoefficientsInitedE, align 1
  %29 = trunc i8 %28 to i1
  %30 = zext i1 %29 to i32
  %31 = icmp eq i32 %30, 0
  %32 = load i32, i32* @x.41
  %33 = load i32, i32* @y.42
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %57

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = load i32, i32* @x.41
  %42 = load i32, i32* @y.42
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %40
  call void @_ZN3povL30InitializeBinomialCoefficientsEv()
  %49 = load i32, i32* @x.41
  %50 = load i32, i32* @y.42
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %57

; <label>:57:                                     ; preds = %originalBBpart24, %originalBBpart2
  %58 = load double*, double** %11, align 8
  %59 = getelementptr inbounds double, double* %58, i64 0
  %60 = load double, double* %59, align 8
  store double %60, double* %19, align 8
  store double %60, double* %16, align 8
  %61 = load double*, double** %11, align 8
  %62 = getelementptr inbounds double, double* %61, i64 1
  %63 = load double, double* %62, align 8
  store double %63, double* %20, align 8
  store double %63, double* %17, align 8
  %64 = load double, double* %16, align 8
  %65 = load double, double* %16, align 8
  %66 = fmul double %64, %65
  %67 = load double, double* %17, align 8
  %68 = load double, double* %17, align 8
  %69 = fmul double %67, %68
  %70 = fadd double %66, %69
  store double %70, double* %22, align 8
  %71 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %72 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %71, i32 0, i32 10
  %73 = bitcast %union.anon.25* %72 to %struct.anon.31*
  %74 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %73, i32 0, i32 1
  %75 = load i16, i16* %74, align 8
  %76 = sext i16 %75 to i32
  store i32 %76, i32* %13, align 4
  %77 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %78 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %77, i32 0, i32 10
  %79 = bitcast %union.anon.25* %78 to %struct.anon.31*
  %80 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %79, i32 0, i32 6
  %81 = load i32, i32* %80, align 8
  store i32 %81, i32* %15, align 4
  %82 = load i32, i32* %15, align 4
  %83 = add nsw i32 %82, 1
  %84 = load i32, i32* %15, align 4
  %85 = mul nsw i32 %83, %84
  %86 = sdiv i32 %85, 2
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [595 x i32], [595 x i32]* @_ZN3pov20BinomialCoefficientsE, i64 0, i64 %87
  store i32* %88, i32** %23, align 8
  store i32 0, i32* %14, align 4
  br label %89

; <label>:89:                                     ; preds = %243, %57
  %90 = load i32, i32* %14, align 4
  %91 = load i32, i32* %13, align 4
  %92 = icmp slt i32 %90, %91
  br i1 %92, label %93, label %246

; <label>:93:                                     ; preds = %89
  %94 = load double, double* %16, align 8
  %95 = load i32, i32* %15, align 4
  %96 = call double @_ZSt3powdi(double %94, i32 %95)
  store double %96, double* %24, align 8
  store i32 2, i32* %25, align 4
  br label %97

; <label>:97:                                     ; preds = %136, %93
  %98 = load i32, i32* @x.41
  %99 = load i32, i32* @y.42
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %97
  %106 = load i32, i32* %25, align 4
  %107 = load i32, i32* %15, align 4
  %108 = icmp sle i32 %106, %107
  %109 = load i32, i32* @x.41
  %110 = load i32, i32* @y.42
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %108, label %117, label %139

; <label>:117:                                    ; preds = %originalBBpart28
  %118 = load i32*, i32** %23, align 8
  %119 = load i32, i32* %25, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i32, i32* %118, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = sitofp i32 %122 to double
  %124 = load double, double* %16, align 8
  %125 = load i32, i32* %15, align 4
  %126 = load i32, i32* %25, align 4
  %127 = sub nsw i32 %125, %126
  %128 = call double @_ZSt3powdi(double %124, i32 %127)
  %129 = fmul double %123, %128
  %130 = load double, double* %17, align 8
  %131 = load i32, i32* %25, align 4
  %132 = call double @_ZSt3powdi(double %130, i32 %131)
  %133 = fmul double %129, %132
  %134 = load double, double* %24, align 8
  %135 = fadd double %134, %133
  store double %135, double* %24, align 8
  br label %136

; <label>:136:                                    ; preds = %117
  %137 = load i32, i32* %25, align 4
  %138 = add nsw i32 %137, 2
  store i32 %138, i32* %25, align 4
  br label %97

; <label>:139:                                    ; preds = %originalBBpart28
  store double 0.000000e+00, double* %26, align 8
  store i32 1, i32* %27, align 4
  br label %140

; <label>:140:                                    ; preds = %179, %139
  %141 = load i32, i32* %27, align 4
  %142 = load i32, i32* %15, align 4
  %143 = icmp sle i32 %141, %142
  br i1 %143, label %144, label %182

; <label>:144:                                    ; preds = %140
  %145 = load i32, i32* @x.41
  %146 = load i32, i32* @y.42
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %144
  %153 = load i32*, i32** %23, align 8
  %154 = load i32, i32* %27, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i32, i32* %153, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = sitofp i32 %157 to double
  %159 = load double, double* %16, align 8
  %160 = load i32, i32* %15, align 4
  %161 = load i32, i32* %27, align 4
  %162 = sub nsw i32 %160, %161
  %163 = call double @_ZSt3powdi(double %159, i32 %162)
  %164 = fmul double %158, %163
  %165 = load double, double* %17, align 8
  %166 = load i32, i32* %27, align 4
  %167 = call double @_ZSt3powdi(double %165, i32 %166)
  %168 = fmul double %164, %167
  %169 = load double, double* %26, align 8
  %170 = fadd double %169, %168
  store double %170, double* %26, align 8
  %171 = load i32, i32* @x.41
  %172 = load i32, i32* @y.42
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBBpart246, label %originalBB10alteredBB

originalBBpart246:                                ; preds = %originalBB10
  br label %179

; <label>:179:                                    ; preds = %originalBBpart246
  %180 = load i32, i32* %27, align 4
  %181 = add nsw i32 %180, 2
  store i32 %181, i32* %27, align 4
  br label %140

; <label>:182:                                    ; preds = %140
  %183 = load double, double* %24, align 8
  %184 = load double, double* %19, align 8
  %185 = fadd double %183, %184
  store double %185, double* %16, align 8
  %186 = load double, double* %26, align 8
  %187 = load double, double* %20, align 8
  %188 = fadd double %186, %187
  store double %188, double* %17, align 8
  %189 = load double, double* %16, align 8
  %190 = load double, double* %16, align 8
  %191 = fmul double %189, %190
  %192 = load double, double* %17, align 8
  %193 = load double, double* %17, align 8
  %194 = fmul double %192, %193
  %195 = fadd double %191, %194
  store double %195, double* %21, align 8
  %196 = load double, double* %21, align 8
  %197 = load double, double* %22, align 8
  %198 = fcmp olt double %196, %197
  br i1 %198, label %199, label %217

; <label>:199:                                    ; preds = %182
  %200 = load i32, i32* @x.41
  %201 = load i32, i32* @y.42
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %originalBB48alteredBB, %199
  %208 = load double, double* %21, align 8
  store double %208, double* %22, align 8
  %209 = load i32, i32* @x.41
  %210 = load i32, i32* @y.42
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br label %217

; <label>:217:                                    ; preds = %originalBBpart250, %182
  %218 = load double, double* %21, align 8
  %219 = fcmp ogt double %218, 4.000000e+00
  br i1 %219, label %220, label %242

; <label>:220:                                    ; preds = %217
  %221 = load i32, i32* @x.41
  %222 = load i32, i32* @y.42
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %originalBB52alteredBB, %220
  %229 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %230 = load i32, i32* %14, align 4
  %231 = load double, double* %16, align 8
  %232 = load double, double* %17, align 8
  %233 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %229, i32 %230, double %231, double %232)
  store double %233, double* %18, align 8
  %234 = load i32, i32* @x.41
  %235 = load i32, i32* @y.42
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br label %246

; <label>:242:                                    ; preds = %217
  br label %243

; <label>:243:                                    ; preds = %242
  %244 = load i32, i32* %14, align 4
  %245 = add nsw i32 %244, 1
  store i32 %245, i32* %14, align 4
  br label %89

; <label>:246:                                    ; preds = %originalBBpart254, %89
  %247 = load i32, i32* @x.41
  %248 = load i32, i32* @y.42
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %246
  %255 = load i32, i32* %14, align 4
  %256 = load i32, i32* %13, align 4
  %257 = icmp eq i32 %255, %256
  %258 = load i32, i32* @x.41
  %259 = load i32, i32* @y.42
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br i1 %257, label %266, label %289

; <label>:266:                                    ; preds = %originalBBpart258
  %267 = load i32, i32* @x.41
  %268 = load i32, i32* @y.42
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %originalBB60alteredBB, %266
  %275 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %276 = load i32, i32* %14, align 4
  %277 = load double, double* %16, align 8
  %278 = load double, double* %17, align 8
  %279 = load double, double* %22, align 8
  %280 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %275, i32 %276, double %277, double %278, double %279)
  store double %280, double* %18, align 8
  %281 = load i32, i32* @x.41
  %282 = load i32, i32* @y.42
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br label %289

; <label>:289:                                    ; preds = %originalBBpart262, %originalBBpart258
  %290 = load double, double* %18, align 8
  ret double %290

originalBBalteredBB:                              ; preds = %originalBB, %2
  %291 = alloca double*, align 8
  %292 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %293 = alloca i32, align 4
  %294 = alloca i32, align 4
  %295 = alloca i32, align 4
  %296 = alloca double, align 8
  %297 = alloca double, align 8
  %298 = alloca double, align 8
  %299 = alloca double, align 8
  %300 = alloca double, align 8
  %301 = alloca double, align 8
  %302 = alloca double, align 8
  %303 = alloca i32*, align 8
  %304 = alloca double, align 8
  %305 = alloca i32, align 4
  %306 = alloca double, align 8
  %307 = alloca i32, align 4
  store double* %0, double** %291, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %292, align 8
  store double 0.000000e+00, double* %298, align 8
  %308 = load i8, i8* @_ZN3pov26BinomialCoefficientsInitedE, align 1
  %309 = trunc i8 %308 to i1
  %310 = zext i1 %309 to i32
  %311 = icmp eq i32 %310, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  call void @_ZN3povL30InitializeBinomialCoefficientsEv()
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %97
  %312 = load i32, i32* %25, align 4
  %313 = load i32, i32* %15, align 4
  %314 = icmp sle i32 %312, %313
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %144
  %315 = load i32*, i32** %23, align 8
  %316 = load i32, i32* %27, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds i32, i32* %315, i64 %317
  %319 = load i32, i32* %318, align 4
  %320 = sitofp i32 %319 to double
  %321 = load double, double* %16, align 8
  %322 = load i32, i32* %15, align 4
  %323 = load i32, i32* %27, align 4
  %_ = sub i32 0, %322
  %gen = add i32 %_, %323
  %_11 = sub i32 0, %322
  %gen12 = add i32 %_11, %323
  %_13 = sub i32 %322, %323
  %gen14 = mul i32 %_13, %323
  %_15 = shl i32 %322, %323
  %_16 = sub i32 0, %322
  %gen17 = add i32 %_16, %323
  %_18 = sub i32 0, %322
  %gen19 = add i32 %_18, %323
  %_20 = shl i32 %322, %323
  %_21 = sub i32 0, %322
  %gen22 = add i32 %_21, %323
  %324 = sub nsw i32 %322, %323
  %325 = call double @_ZSt3powdi(double %321, i32 %324)
  %_23 = fsub double -0.000000e+00, %320
  %gen24 = fadd double %_23, %325
  %_25 = fsub double -0.000000e+00, %320
  %gen26 = fadd double %_25, %325
  %_27 = fsub double -0.000000e+00, %320
  %gen28 = fadd double %_27, %325
  %_29 = fsub double -0.000000e+00, %320
  %gen30 = fadd double %_29, %325
  %_31 = fsub double -0.000000e+00, %320
  %gen32 = fadd double %_31, %325
  %_33 = fsub double -0.000000e+00, %320
  %gen34 = fadd double %_33, %325
  %326 = fmul double %320, %325
  %327 = load double, double* %17, align 8
  %328 = load i32, i32* %27, align 4
  %329 = call double @_ZSt3powdi(double %327, i32 %328)
  %_35 = fsub double %326, %329
  %gen36 = fmul double %_35, %329
  %_37 = fsub double %326, %329
  %gen38 = fmul double %_37, %329
  %_39 = fsub double -0.000000e+00, %326
  %gen40 = fadd double %_39, %329
  %330 = fmul double %326, %329
  %331 = load double, double* %26, align 8
  %_41 = fsub double %331, %330
  %gen42 = fmul double %_41, %330
  %_43 = fsub double -0.000000e+00, %331
  %gen44 = fadd double %_43, %330
  %332 = fadd double %331, %330
  store double %332, double* %26, align 8
  br label %originalBB10

originalBB48alteredBB:                            ; preds = %originalBB48, %199
  %333 = load double, double* %21, align 8
  store double %333, double* %22, align 8
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %220
  %334 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %335 = load i32, i32* %14, align 4
  %336 = load double, double* %16, align 8
  %337 = load double, double* %17, align 8
  %338 = call double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"* %334, i32 %335, double %336, double %337)
  store double %338, double* %18, align 8
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %246
  %339 = load i32, i32* %14, align 4
  %340 = load i32, i32* %13, align 4
  %341 = icmp eq i32 %339, %340
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %266
  %342 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %343 = load i32, i32* %14, align 4
  %344 = load double, double* %16, align 8
  %345 = load double, double* %17, align 8
  %346 = load double, double* %22, align 8
  %347 = call double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"* %342, i32 %343, double %344, double %345, double %346)
  store double %347, double* %18, align 8
  br label %originalBB60
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL14marble_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = load i32, i32* @x.43
  %4 = load i32, i32* @y.44
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca double*, align 8
  %12 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %13 = alloca double, align 8
  %14 = alloca %"struct.pov::Turb_Struct"*, align 8
  store double* %0, double** %11, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %12, align 8
  %15 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %16 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %15, i32 0, i32 7
  %17 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %16, align 8
  %18 = call %"struct.pov::Turb_Struct"* @_ZN3povL15Search_For_TurbEPNS_12Warps_StructE(%"struct.pov::Warps_Struct"* %17)
  store %"struct.pov::Turb_Struct"* %18, %"struct.pov::Turb_Struct"** %14, align 8
  %19 = icmp ne %"struct.pov::Turb_Struct"* %18, null
  %20 = load i32, i32* @x.43
  %21 = load i32, i32* @y.44
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %54

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i32, i32* @x.43
  %30 = load i32, i32* @y.44
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %28
  %37 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %14, align 8
  %38 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %37, i32 0, i32 3
  %39 = getelementptr inbounds [3 x double], [3 x double]* %38, i64 0, i64 0
  %40 = load double, double* %39, align 8
  %41 = load double*, double** %11, align 8
  %42 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %14, align 8
  %43 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %44 = call double @_ZN3pov10TurbulenceEPdPNS_11Turb_StructEPNS_14Pattern_StructE(double* %41, %"struct.pov::Turb_Struct"* %42, %"struct.pov::Pattern_Struct"* %43)
  %45 = fmul double %40, %44
  store double %45, double* %13, align 8
  %46 = load i32, i32* @x.43
  %47 = load i32, i32* @y.44
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  br label %55

; <label>:54:                                     ; preds = %originalBBpart2
  store double 0.000000e+00, double* %13, align 8
  br label %55

; <label>:55:                                     ; preds = %54, %originalBBpart29
  %56 = load i32, i32* @x.43
  %57 = load i32, i32* @y.44
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %55
  %64 = load double*, double** %11, align 8
  %65 = getelementptr inbounds double, double* %64, i64 0
  %66 = load double, double* %65, align 8
  %67 = load double, double* %13, align 8
  %68 = fadd double %66, %67
  %69 = load i32, i32* @x.43
  %70 = load i32, i32* @y.44
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart215, label %originalBB11alteredBB

originalBBpart215:                                ; preds = %originalBB11
  ret double %68

originalBBalteredBB:                              ; preds = %originalBB, %2
  %77 = alloca double*, align 8
  %78 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %79 = alloca double, align 8
  %80 = alloca %"struct.pov::Turb_Struct"*, align 8
  store double* %0, double** %77, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %78, align 8
  %81 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %78, align 8
  %82 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %81, i32 0, i32 7
  %83 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %82, align 8
  %84 = call %"struct.pov::Turb_Struct"* @_ZN3povL15Search_For_TurbEPNS_12Warps_StructE(%"struct.pov::Warps_Struct"* %83)
  store %"struct.pov::Turb_Struct"* %84, %"struct.pov::Turb_Struct"** %80, align 8
  %85 = icmp ne %"struct.pov::Turb_Struct"* %84, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %86 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %14, align 8
  %87 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %86, i32 0, i32 3
  %88 = getelementptr inbounds [3 x double], [3 x double]* %87, i64 0, i64 0
  %89 = load double, double* %88, align 8
  %90 = load double*, double** %11, align 8
  %91 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %14, align 8
  %92 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %93 = call double @_ZN3pov10TurbulenceEPdPNS_11Turb_StructEPNS_14Pattern_StructE(double* %90, %"struct.pov::Turb_Struct"* %91, %"struct.pov::Pattern_Struct"* %92)
  %_ = fsub double -0.000000e+00, %89
  %gen = fadd double %_, %93
  %_2 = fsub double -0.000000e+00, %89
  %gen3 = fadd double %_2, %93
  %_4 = fsub double -0.000000e+00, %89
  %gen5 = fadd double %_4, %93
  %_6 = fsub double %89, %93
  %gen7 = fmul double %_6, %93
  %94 = fmul double %89, %93
  store double %94, double* %13, align 8
  br label %originalBB1

originalBB11alteredBB:                            ; preds = %originalBB11, %55
  %95 = load double*, double** %11, align 8
  %96 = getelementptr inbounds double, double* %95, i64 0
  %97 = load double, double* %96, align 8
  %98 = load double, double* %13, align 8
  %_12 = fsub double %97, %98
  %gen13 = fmul double %_12, %98
  %99 = fadd double %97, %98
  br label %originalBB11
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL13onion_patternEPd(double*) #2 {
  %2 = alloca double*, align 8
  %3 = alloca double, align 8
  store double* %0, double** %2, align 8
  %4 = load double*, double** %2, align 8
  %5 = getelementptr inbounds double, double* %4, i64 0
  %6 = load double, double* %5, align 8
  %7 = call double @_ZN3pov3SqrEd(double %6)
  %8 = load double*, double** %2, align 8
  %9 = getelementptr inbounds double, double* %8, i64 1
  %10 = load double, double* %9, align 8
  %11 = call double @_ZN3pov3SqrEd(double %10)
  %12 = fadd double %7, %11
  %13 = load double*, double** %2, align 8
  %14 = getelementptr inbounds double, double* %13, i64 2
  %15 = load double, double* %14, align 8
  %16 = call double @_ZN3pov3SqrEd(double %15)
  %17 = fadd double %12, %16
  %18 = call double @sqrt(double %17) #7
  %19 = call double @fmod(double %18, double 1.000000e+00) #7
  store double %19, double* %3, align 8
  %20 = load double, double* %3, align 8
  ret double %20
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL14radial_patternEPd(double*) #2 {
  %2 = alloca double*, align 8
  %3 = alloca double, align 8
  store double* %0, double** %2, align 8
  %4 = load double*, double** %2, align 8
  %5 = getelementptr inbounds double, double* %4, i64 0
  %6 = load double, double* %5, align 8
  %7 = call double @fabs(double %6) #6
  %8 = fcmp olt double %7, 1.000000e-03
  br i1 %8, label %9, label %32

; <label>:9:                                      ; preds = %1
  %10 = load double*, double** %2, align 8
  %11 = getelementptr inbounds double, double* %10, i64 2
  %12 = load double, double* %11, align 8
  %13 = call double @fabs(double %12) #6
  %14 = fcmp olt double %13, 1.000000e-03
  br i1 %14, label %15, label %32

; <label>:15:                                     ; preds = %9
  %16 = load i32, i32* @x.47
  %17 = load i32, i32* @y.48
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %15
  store double 2.500000e-01, double* %3, align 8
  %24 = load i32, i32* @x.47
  %25 = load i32, i32* @y.48
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %43

; <label>:32:                                     ; preds = %9, %1
  %33 = load double*, double** %2, align 8
  %34 = getelementptr inbounds double, double* %33, i64 0
  %35 = load double, double* %34, align 8
  %36 = load double*, double** %2, align 8
  %37 = getelementptr inbounds double, double* %36, i64 2
  %38 = load double, double* %37, align 8
  %39 = call double @atan2(double %35, double %38) #7
  %40 = fadd double %39, 0x400921FB54442D18
  %41 = fdiv double %40, 0x401921FB54442D18
  %42 = fadd double 2.500000e-01, %41
  store double %42, double* %3, align 8
  br label %43

; <label>:43:                                     ; preds = %32, %originalBBpart2
  %44 = load double, double* %3, align 8
  ret double %44

originalBBalteredBB:                              ; preds = %originalBB, %15
  store double 2.500000e-01, double* %3, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL15spiral1_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca %"struct.pov::Turb_Struct"*, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %12 = load double*, double** %3, align 8
  %13 = getelementptr inbounds double, double* %12, i64 0
  %14 = load double, double* %13, align 8
  store double %14, double* %8, align 8
  %15 = load double*, double** %3, align 8
  %16 = getelementptr inbounds double, double* %15, i64 1
  %17 = load double, double* %16, align 8
  store double %17, double* %9, align 8
  %18 = load double*, double** %3, align 8
  %19 = getelementptr inbounds double, double* %18, i64 2
  %20 = load double, double* %19, align 8
  store double %20, double* %10, align 8
  %21 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %22 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %21, i32 0, i32 7
  %23 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %22, align 8
  %24 = call %"struct.pov::Turb_Struct"* @_ZN3povL15Search_For_TurbEPNS_12Warps_StructE(%"struct.pov::Warps_Struct"* %23)
  store %"struct.pov::Turb_Struct"* %24, %"struct.pov::Turb_Struct"** %11, align 8
  %25 = icmp ne %"struct.pov::Turb_Struct"* %24, null
  br i1 %25, label %26, label %36

; <label>:26:                                     ; preds = %2
  %27 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %11, align 8
  %28 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %27, i32 0, i32 3
  %29 = getelementptr inbounds [3 x double], [3 x double]* %28, i64 0, i64 0
  %30 = load double, double* %29, align 8
  %31 = load double*, double** %3, align 8
  %32 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %11, align 8
  %33 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %34 = call double @_ZN3pov10TurbulenceEPdPNS_11Turb_StructEPNS_14Pattern_StructE(double* %31, %"struct.pov::Turb_Struct"* %32, %"struct.pov::Pattern_Struct"* %33)
  %35 = fmul double %30, %34
  store double %35, double* %7, align 8
  br label %37

; <label>:36:                                     ; preds = %2
  store double 0.000000e+00, double* %7, align 8
  br label %37

; <label>:37:                                     ; preds = %36, %26
  %38 = load double, double* %8, align 8
  %39 = load double, double* %8, align 8
  %40 = fmul double %38, %39
  %41 = load double, double* %9, align 8
  %42 = load double, double* %9, align 8
  %43 = fmul double %41, %42
  %44 = fadd double %40, %43
  %45 = call double @sqrt(double %44) #7
  store double %45, double* %5, align 8
  %46 = load double, double* %5, align 8
  %47 = fcmp oeq double %46, 0.000000e+00
  br i1 %47, label %48, label %49

; <label>:48:                                     ; preds = %37
  store double 0.000000e+00, double* %6, align 8
  br label %65

; <label>:49:                                     ; preds = %37
  %50 = load double, double* %8, align 8
  %51 = fcmp olt double %50, 0.000000e+00
  br i1 %51, label %52, label %58

; <label>:52:                                     ; preds = %49
  %53 = load double, double* %9, align 8
  %54 = load double, double* %5, align 8
  %55 = fdiv double %53, %54
  %56 = call double @asin(double %55) #7
  %57 = fsub double 0x4012D97C7F3321D2, %56
  store double %57, double* %6, align 8
  br label %64

; <label>:58:                                     ; preds = %49
  %59 = load double, double* %9, align 8
  %60 = load double, double* %5, align 8
  %61 = fdiv double %59, %60
  %62 = call double @asin(double %61) #7
  %63 = fadd double 0x3FF921FB54442D18, %62
  store double %63, double* %6, align 8
  br label %64

; <label>:64:                                     ; preds = %58, %52
  br label %65

; <label>:65:                                     ; preds = %64, %48
  %66 = load double, double* %10, align 8
  %67 = load double, double* %5, align 8
  %68 = fadd double %66, %67
  %69 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %70 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %69, i32 0, i32 10
  %71 = bitcast %union.anon.25* %70 to i16*
  %72 = load i16, i16* %71, align 8
  %73 = sitofp i16 %72 to double
  %74 = load double, double* %6, align 8
  %75 = fmul double %73, %74
  %76 = fdiv double %75, 0x401921FB54442D18
  %77 = fadd double %68, %76
  %78 = load double, double* %7, align 8
  %79 = fadd double %77, %78
  ret double %79
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL15spiral2_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca %"struct.pov::Turb_Struct"*, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %12 = load double*, double** %3, align 8
  %13 = getelementptr inbounds double, double* %12, i64 0
  %14 = load double, double* %13, align 8
  store double %14, double* %8, align 8
  %15 = load double*, double** %3, align 8
  %16 = getelementptr inbounds double, double* %15, i64 1
  %17 = load double, double* %16, align 8
  store double %17, double* %9, align 8
  %18 = load double*, double** %3, align 8
  %19 = getelementptr inbounds double, double* %18, i64 2
  %20 = load double, double* %19, align 8
  store double %20, double* %10, align 8
  %21 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %22 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %21, i32 0, i32 7
  %23 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %22, align 8
  %24 = call %"struct.pov::Turb_Struct"* @_ZN3povL15Search_For_TurbEPNS_12Warps_StructE(%"struct.pov::Warps_Struct"* %23)
  store %"struct.pov::Turb_Struct"* %24, %"struct.pov::Turb_Struct"** %11, align 8
  %25 = icmp ne %"struct.pov::Turb_Struct"* %24, null
  br i1 %25, label %26, label %36

; <label>:26:                                     ; preds = %2
  %27 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %11, align 8
  %28 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %27, i32 0, i32 3
  %29 = getelementptr inbounds [3 x double], [3 x double]* %28, i64 0, i64 0
  %30 = load double, double* %29, align 8
  %31 = load double*, double** %3, align 8
  %32 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %11, align 8
  %33 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %34 = call double @_ZN3pov10TurbulenceEPdPNS_11Turb_StructEPNS_14Pattern_StructE(double* %31, %"struct.pov::Turb_Struct"* %32, %"struct.pov::Pattern_Struct"* %33)
  %35 = fmul double %30, %34
  store double %35, double* %7, align 8
  br label %37

; <label>:36:                                     ; preds = %2
  store double 0.000000e+00, double* %7, align 8
  br label %37

; <label>:37:                                     ; preds = %36, %26
  %38 = load double, double* %8, align 8
  %39 = load double, double* %8, align 8
  %40 = fmul double %38, %39
  %41 = load double, double* %9, align 8
  %42 = load double, double* %9, align 8
  %43 = fmul double %41, %42
  %44 = fadd double %40, %43
  %45 = call double @sqrt(double %44) #7
  store double %45, double* %5, align 8
  %46 = load double, double* %5, align 8
  %47 = fcmp oeq double %46, 0.000000e+00
  br i1 %47, label %48, label %49

; <label>:48:                                     ; preds = %37
  store double 0.000000e+00, double* %6, align 8
  br label %81

; <label>:49:                                     ; preds = %37
  %50 = load double, double* %8, align 8
  %51 = fcmp olt double %50, 0.000000e+00
  br i1 %51, label %52, label %58

; <label>:52:                                     ; preds = %49
  %53 = load double, double* %9, align 8
  %54 = load double, double* %5, align 8
  %55 = fdiv double %53, %54
  %56 = call double @asin(double %55) #7
  %57 = fsub double 0x4012D97C7F3321D2, %56
  store double %57, double* %6, align 8
  br label %80

; <label>:58:                                     ; preds = %49
  %59 = load i32, i32* @x.51
  %60 = load i32, i32* @y.52
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %58
  %67 = load double, double* %9, align 8
  %68 = load double, double* %5, align 8
  %69 = fdiv double %67, %68
  %70 = call double @asin(double %69) #7
  %71 = fadd double 0x3FF921FB54442D18, %70
  store double %71, double* %6, align 8
  %72 = load i32, i32* @x.51
  %73 = load i32, i32* @y.52
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %80

; <label>:80:                                     ; preds = %originalBBpart2, %52
  br label %81

; <label>:81:                                     ; preds = %80, %48
  %82 = load i32, i32* @x.51
  %83 = load i32, i32* @y.52
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %originalBB7alteredBB, %81
  %90 = load double, double* %10, align 8
  %91 = load double, double* %5, align 8
  %92 = fadd double %90, %91
  %93 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %94 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %93, i32 0, i32 10
  %95 = bitcast %union.anon.25* %94 to i16*
  %96 = load i16, i16* %95, align 8
  %97 = sitofp i16 %96 to double
  %98 = load double, double* %6, align 8
  %99 = fmul double %97, %98
  %100 = fdiv double %99, 0x401921FB54442D18
  %101 = fadd double %92, %100
  %102 = load double, double* %7, align 8
  %103 = fadd double %101, %102
  %104 = call double @_ZN3pov13Triangle_WaveEd(double %103)
  store double %104, double* %7, align 8
  %105 = load double, double* %5, align 8
  %106 = call double @_ZN3pov13Triangle_WaveEd(double %105)
  %107 = load double, double* %7, align 8
  %108 = fadd double %106, %107
  %109 = load i32, i32* @x.51
  %110 = load i32, i32* @y.52
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart227, label %originalBB7alteredBB

originalBBpart227:                                ; preds = %originalBB7
  ret double %108

originalBBalteredBB:                              ; preds = %originalBB, %58
  %117 = load double, double* %9, align 8
  %118 = load double, double* %5, align 8
  %_ = fsub double %117, %118
  %gen = fmul double %_, %118
  %_1 = fsub double %117, %118
  %gen2 = fmul double %_1, %118
  %_3 = fsub double %117, %118
  %gen4 = fmul double %_3, %118
  %119 = fdiv double %117, %118
  %120 = call double @asin(double %119) #7
  %_5 = fsub double -0.000000e+00, 0x3FF921FB54442D18
  %gen6 = fadd double %_5, %120
  %121 = fadd double 0x3FF921FB54442D18, %120
  store double %121, double* %6, align 8
  br label %originalBB

originalBB7alteredBB:                             ; preds = %originalBB7, %81
  %122 = load double, double* %10, align 8
  %123 = load double, double* %5, align 8
  %_8 = fsub double %122, %123
  %gen9 = fmul double %_8, %123
  %124 = fadd double %122, %123
  %125 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %126 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %125, i32 0, i32 10
  %127 = bitcast %union.anon.25* %126 to i16*
  %128 = load i16, i16* %127, align 8
  %129 = sitofp i16 %128 to double
  %130 = load double, double* %6, align 8
  %_10 = fsub double %129, %130
  %gen11 = fmul double %_10, %130
  %_12 = fsub double %129, %130
  %gen13 = fmul double %_12, %130
  %_14 = fsub double %129, %130
  %gen15 = fmul double %_14, %130
  %_16 = fsub double %129, %130
  %gen17 = fmul double %_16, %130
  %131 = fmul double %129, %130
  %_18 = fsub double -0.000000e+00, %131
  %gen19 = fadd double %_18, 0x401921FB54442D18
  %_20 = fsub double -0.000000e+00, %131
  %gen21 = fadd double %_20, 0x401921FB54442D18
  %132 = fdiv double %131, 0x401921FB54442D18
  %_22 = fsub double %124, %132
  %gen23 = fmul double %_22, %132
  %133 = fadd double %124, %132
  %134 = load double, double* %7, align 8
  %_24 = fsub double -0.000000e+00, %133
  %gen25 = fadd double %_24, %134
  %135 = fadd double %133, %134
  %136 = call double @_ZN3pov13Triangle_WaveEd(double %135)
  store double %136, double* %7, align 8
  %137 = load double, double* %5, align 8
  %138 = call double @_ZN3pov13Triangle_WaveEd(double %137)
  %139 = load double, double* %7, align 8
  %140 = fadd double %138, %139
  br label %originalBB7
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL12wood_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = load i32, i32* @x.53
  %4 = load i32, i32* @y.54
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca double*, align 8
  %12 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %13 = alloca double, align 8
  %14 = alloca [3 x double], align 16
  %15 = alloca [3 x double], align 16
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca %"struct.pov::Turb_Struct"*, align 8
  store double* %0, double** %11, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %12, align 8
  %19 = load double*, double** %11, align 8
  %20 = getelementptr inbounds double, double* %19, i64 0
  %21 = load double, double* %20, align 8
  store double %21, double* %16, align 8
  %22 = load double*, double** %11, align 8
  %23 = getelementptr inbounds double, double* %22, i64 1
  %24 = load double, double* %23, align 8
  store double %24, double* %17, align 8
  %25 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %26 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %25, i32 0, i32 7
  %27 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %26, align 8
  %28 = call %"struct.pov::Turb_Struct"* @_ZN3povL15Search_For_TurbEPNS_12Warps_StructE(%"struct.pov::Warps_Struct"* %27)
  store %"struct.pov::Turb_Struct"* %28, %"struct.pov::Turb_Struct"** %18, align 8
  %29 = icmp ne %"struct.pov::Turb_Struct"* %28, null
  %30 = load i32, i32* @x.53
  %31 = load i32, i32* @y.54
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %64

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = getelementptr inbounds [3 x double], [3 x double]* %14, i32 0, i32 0
  %40 = load double*, double** %11, align 8
  %41 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %18, align 8
  call void @_ZN3pov11DTurbulenceEPdS0_PNS_11Turb_StructE(double* %39, double* %40, %"struct.pov::Turb_Struct"* %41)
  %42 = load double, double* %16, align 8
  %43 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0
  %44 = load double, double* %43, align 16
  %45 = fadd double %42, %44
  %46 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %18, align 8
  %47 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %46, i32 0, i32 3
  %48 = getelementptr inbounds [3 x double], [3 x double]* %47, i64 0, i64 0
  %49 = load double, double* %48, align 8
  %50 = fmul double %45, %49
  %51 = call double @_ZN3pov9cycloidalEd(double %50)
  %52 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 0
  store double %51, double* %52, align 16
  %53 = load double, double* %17, align 8
  %54 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 1
  %55 = load double, double* %54, align 8
  %56 = fadd double %53, %55
  %57 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %18, align 8
  %58 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %57, i32 0, i32 3
  %59 = getelementptr inbounds [3 x double], [3 x double]* %58, i64 0, i64 1
  %60 = load double, double* %59, align 8
  %61 = fmul double %56, %60
  %62 = call double @_ZN3pov9cycloidalEd(double %61)
  %63 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 1
  store double %62, double* %63, align 8
  br label %67

; <label>:64:                                     ; preds = %originalBBpart2
  %65 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 0
  store double 0.000000e+00, double* %65, align 16
  %66 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 1
  store double 0.000000e+00, double* %66, align 8
  br label %67

; <label>:67:                                     ; preds = %64, %38
  %68 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 2
  store double 0.000000e+00, double* %68, align 16
  %69 = load double, double* %16, align 8
  %70 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 0
  %71 = load double, double* %70, align 16
  %72 = fadd double %71, %69
  store double %72, double* %70, align 16
  %73 = load double, double* %17, align 8
  %74 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 1
  %75 = load double, double* %74, align 8
  %76 = fadd double %75, %73
  store double %76, double* %74, align 8
  %77 = getelementptr inbounds [3 x double], [3 x double]* %15, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %13, double* %77)
  %78 = load double, double* %13, align 8
  ret double %78

originalBBalteredBB:                              ; preds = %originalBB, %2
  %79 = alloca double*, align 8
  %80 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %81 = alloca double, align 8
  %82 = alloca [3 x double], align 16
  %83 = alloca [3 x double], align 16
  %84 = alloca double, align 8
  %85 = alloca double, align 8
  %86 = alloca %"struct.pov::Turb_Struct"*, align 8
  store double* %0, double** %79, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %80, align 8
  %87 = load double*, double** %79, align 8
  %88 = getelementptr inbounds double, double* %87, i64 0
  %89 = load double, double* %88, align 8
  store double %89, double* %84, align 8
  %90 = load double*, double** %79, align 8
  %91 = getelementptr inbounds double, double* %90, i64 1
  %92 = load double, double* %91, align 8
  store double %92, double* %85, align 8
  %93 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %80, align 8
  %94 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %93, i32 0, i32 7
  %95 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %94, align 8
  %96 = call %"struct.pov::Turb_Struct"* @_ZN3povL15Search_For_TurbEPNS_12Warps_StructE(%"struct.pov::Warps_Struct"* %95)
  store %"struct.pov::Turb_Struct"* %96, %"struct.pov::Turb_Struct"** %86, align 8
  %97 = icmp ne %"struct.pov::Turb_Struct"* %96, null
  br label %originalBB
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL13waves_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca [3 x double], align 16
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  store double 0.000000e+00, double* %8, align 8
  store i32 0, i32* %5, align 4
  br label %10

; <label>:10:                                     ; preds = %70, %2
  %11 = load i32, i32* %5, align 4
  %12 = load i32, i32* @_ZN3pov15Number_Of_WavesE, align 4
  %13 = icmp ult i32 %11, %12
  br i1 %13, label %14, label %73

; <label>:14:                                     ; preds = %10
  %15 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  %16 = load double*, double** %3, align 8
  %17 = load [3 x double]*, [3 x double]** @_ZN3pov12Wave_SourcesE, align 8
  %18 = load i32, i32* %5, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [3 x double], [3 x double]* %17, i64 %19
  %21 = getelementptr inbounds [3 x double], [3 x double]* %20, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %15, double* %16, double* %21)
  %22 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %6, double* %22)
  %23 = load double, double* %6, align 8
  %24 = fcmp oeq double %23, 0.000000e+00
  br i1 %24, label %25, label %26

; <label>:25:                                     ; preds = %14
  store double 1.000000e+00, double* %6, align 8
  br label %26

; <label>:26:                                     ; preds = %25, %14
  %27 = load i32, i32* @x.55
  %28 = load i32, i32* @y.56
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %26
  %35 = load double, double* %6, align 8
  %36 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %37 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %36, i32 0, i32 4
  %38 = load float, float* %37, align 4
  %39 = fpext float %38 to double
  %40 = fmul double %35, %39
  %41 = load double*, double** @_ZN3pov9frequencyE, align 8
  %42 = load i32, i32* %5, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds double, double* %41, i64 %43
  %45 = load double, double* %44, align 8
  %46 = fmul double %40, %45
  %47 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %48 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %47, i32 0, i32 5
  %49 = load float, float* %48, align 8
  %50 = fpext float %49 to double
  %51 = fadd double %46, %50
  store double %51, double* %7, align 8
  %52 = load double, double* %7, align 8
  %53 = call double @_ZN3pov9cycloidalEd(double %52)
  %54 = load double*, double** @_ZN3pov9frequencyE, align 8
  %55 = load i32, i32* %5, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds double, double* %54, i64 %56
  %58 = load double, double* %57, align 8
  %59 = fdiv double %53, %58
  %60 = load double, double* %8, align 8
  %61 = fadd double %60, %59
  store double %61, double* %8, align 8
  %62 = load i32, i32* @x.55
  %63 = load i32, i32* @y.56
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %70

; <label>:70:                                     ; preds = %originalBBpart2
  %71 = load i32, i32* %5, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %5, align 4
  br label %10

; <label>:73:                                     ; preds = %10
  %74 = load double, double* %8, align 8
  %75 = load i32, i32* @_ZN3pov15Number_Of_WavesE, align 4
  %76 = uitofp i32 %75 to double
  %77 = fdiv double %74, %76
  %78 = fadd double 2.500000e+00, %77
  %79 = fmul double 2.000000e-01, %78
  store double %79, double* %8, align 8
  %80 = load double, double* %8, align 8
  ret double %80

originalBBalteredBB:                              ; preds = %originalBB, %26
  %81 = load double, double* %6, align 8
  %82 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %83 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %82, i32 0, i32 4
  %84 = load float, float* %83, align 4
  %85 = fpext float %84 to double
  %_ = fsub double -0.000000e+00, %81
  %gen = fadd double %_, %85
  %_1 = fsub double -0.000000e+00, %81
  %gen2 = fadd double %_1, %85
  %_3 = fsub double %81, %85
  %gen4 = fmul double %_3, %85
  %_5 = fsub double %81, %85
  %gen6 = fmul double %_5, %85
  %_7 = fsub double -0.000000e+00, %81
  %gen8 = fadd double %_7, %85
  %_9 = fsub double %81, %85
  %gen10 = fmul double %_9, %85
  %_11 = fsub double %81, %85
  %gen12 = fmul double %_11, %85
  %86 = fmul double %81, %85
  %87 = load double*, double** @_ZN3pov9frequencyE, align 8
  %88 = load i32, i32* %5, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds double, double* %87, i64 %89
  %91 = load double, double* %90, align 8
  %_13 = fsub double -0.000000e+00, %86
  %gen14 = fadd double %_13, %91
  %_15 = fsub double %86, %91
  %gen16 = fmul double %_15, %91
  %_17 = fsub double %86, %91
  %gen18 = fmul double %_17, %91
  %_19 = fsub double %86, %91
  %gen20 = fmul double %_19, %91
  %92 = fmul double %86, %91
  %93 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %94 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %93, i32 0, i32 5
  %95 = load float, float* %94, align 8
  %96 = fpext float %95 to double
  %_21 = fsub double -0.000000e+00, %92
  %gen22 = fadd double %_21, %96
  %_23 = fsub double %92, %96
  %gen24 = fmul double %_23, %96
  %_25 = fsub double -0.000000e+00, %92
  %gen26 = fadd double %_25, %96
  %_27 = fsub double %92, %96
  %gen28 = fmul double %_27, %96
  %97 = fadd double %92, %96
  store double %97, double* %7, align 8
  %98 = load double, double* %7, align 8
  %99 = call double @_ZN3pov9cycloidalEd(double %98)
  %100 = load double*, double** @_ZN3pov9frequencyE, align 8
  %101 = load i32, i32* %5, align 4
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds double, double* %100, i64 %102
  %104 = load double, double* %103, align 8
  %_29 = fsub double -0.000000e+00, %99
  %gen30 = fadd double %_29, %104
  %_31 = fsub double %99, %104
  %gen32 = fmul double %_31, %104
  %105 = fdiv double %99, %104
  %106 = load double, double* %8, align 8
  %_33 = fsub double -0.000000e+00, %106
  %gen34 = fadd double %_33, %105
  %107 = fadd double %106, %105
  store double %107, double* %8, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL15ripples_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca [3 x double], align 16
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  store double 0.000000e+00, double* %8, align 8
  store i32 0, i32* %5, align 4
  br label %10

; <label>:10:                                     ; preds = %originalBBpart241, %2
  %11 = load i32, i32* %5, align 4
  %12 = load i32, i32* @_ZN3pov15Number_Of_WavesE, align 4
  %13 = icmp ult i32 %11, %12
  br i1 %13, label %14, label %93

; <label>:14:                                     ; preds = %10
  %15 = load i32, i32* @x.57
  %16 = load i32, i32* @y.58
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %14
  %23 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  %24 = load double*, double** %3, align 8
  %25 = load [3 x double]*, [3 x double]** @_ZN3pov12Wave_SourcesE, align 8
  %26 = load i32, i32* %5, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [3 x double], [3 x double]* %25, i64 %27
  %29 = getelementptr inbounds [3 x double], [3 x double]* %28, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %23, double* %24, double* %29)
  %30 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %6, double* %30)
  %31 = load double, double* %6, align 8
  %32 = fcmp oeq double %31, 0.000000e+00
  %33 = load i32, i32* @x.57
  %34 = load i32, i32* @y.58
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %32, label %41, label %42

; <label>:41:                                     ; preds = %originalBBpart2
  store double 1.000000e+00, double* %6, align 8
  br label %42

; <label>:42:                                     ; preds = %41, %originalBBpart2
  %43 = load i32, i32* @x.57
  %44 = load i32, i32* @y.58
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %42
  %51 = load double, double* %6, align 8
  %52 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %53 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %52, i32 0, i32 4
  %54 = load float, float* %53, align 4
  %55 = fpext float %54 to double
  %56 = fmul double %51, %55
  %57 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %58 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %57, i32 0, i32 5
  %59 = load float, float* %58, align 8
  %60 = fpext float %59 to double
  %61 = fadd double %56, %60
  store double %61, double* %7, align 8
  %62 = load double, double* %7, align 8
  %63 = call double @_ZN3pov9cycloidalEd(double %62)
  %64 = load double, double* %8, align 8
  %65 = fadd double %64, %63
  store double %65, double* %8, align 8
  %66 = load i32, i32* @x.57
  %67 = load i32, i32* @y.58
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart235, label %originalBB1alteredBB

originalBBpart235:                                ; preds = %originalBB1
  br label %74

; <label>:74:                                     ; preds = %originalBBpart235
  %75 = load i32, i32* @x.57
  %76 = load i32, i32* @y.58
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %originalBB37alteredBB, %74
  %83 = load i32, i32* %5, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %5, align 4
  %85 = load i32, i32* @x.57
  %86 = load i32, i32* @y.58
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart241, label %originalBB37alteredBB

originalBBpart241:                                ; preds = %originalBB37
  br label %10

; <label>:93:                                     ; preds = %10
  %94 = load double, double* %8, align 8
  %95 = load i32, i32* @_ZN3pov15Number_Of_WavesE, align 4
  %96 = uitofp i32 %95 to double
  %97 = fdiv double %94, %96
  %98 = fadd double 1.000000e+00, %97
  %99 = fmul double 5.000000e-01, %98
  store double %99, double* %8, align 8
  %100 = load double, double* %8, align 8
  ret double %100

originalBBalteredBB:                              ; preds = %originalBB, %14
  %101 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  %102 = load double*, double** %3, align 8
  %103 = load [3 x double]*, [3 x double]** @_ZN3pov12Wave_SourcesE, align 8
  %104 = load i32, i32* %5, align 4
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds [3 x double], [3 x double]* %103, i64 %105
  %107 = getelementptr inbounds [3 x double], [3 x double]* %106, i32 0, i32 0
  call void @_ZN3pov4VSubEPdPKdS2_(double* %101, double* %102, double* %107)
  %108 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %6, double* %108)
  %109 = load double, double* %6, align 8
  %110 = fcmp oeq double %109, 0.000000e+00
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %111 = load double, double* %6, align 8
  %112 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %113 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %112, i32 0, i32 4
  %114 = load float, float* %113, align 4
  %115 = fpext float %114 to double
  %_ = fsub double -0.000000e+00, %111
  %gen = fadd double %_, %115
  %_2 = fsub double -0.000000e+00, %111
  %gen3 = fadd double %_2, %115
  %_4 = fsub double -0.000000e+00, %111
  %gen5 = fadd double %_4, %115
  %_6 = fsub double %111, %115
  %gen7 = fmul double %_6, %115
  %_8 = fsub double %111, %115
  %gen9 = fmul double %_8, %115
  %_10 = fsub double %111, %115
  %gen11 = fmul double %_10, %115
  %_12 = fsub double -0.000000e+00, %111
  %gen13 = fadd double %_12, %115
  %116 = fmul double %111, %115
  %117 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %118 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %117, i32 0, i32 5
  %119 = load float, float* %118, align 8
  %120 = fpext float %119 to double
  %_14 = fsub double -0.000000e+00, %116
  %gen15 = fadd double %_14, %120
  %_16 = fsub double -0.000000e+00, %116
  %gen17 = fadd double %_16, %120
  %_18 = fsub double %116, %120
  %gen19 = fmul double %_18, %120
  %121 = fadd double %116, %120
  store double %121, double* %7, align 8
  %122 = load double, double* %7, align 8
  %123 = call double @_ZN3pov9cycloidalEd(double %122)
  %124 = load double, double* %8, align 8
  %_20 = fsub double %124, %123
  %gen21 = fmul double %_20, %123
  %_22 = fsub double %124, %123
  %gen23 = fmul double %_22, %123
  %_24 = fsub double -0.000000e+00, %124
  %gen25 = fadd double %_24, %123
  %_26 = fsub double %124, %123
  %gen27 = fmul double %_26, %123
  %_28 = fsub double -0.000000e+00, %124
  %gen29 = fadd double %_28, %123
  %_30 = fsub double %124, %123
  %gen31 = fmul double %_30, %123
  %_32 = fsub double %124, %123
  %gen33 = fmul double %_32, %123
  %125 = fadd double %124, %123
  store double %125, double* %8, align 8
  br label %originalBB1

originalBB37alteredBB:                            ; preds = %originalBB37, %74
  %126 = load i32, i32* %5, align 4
  %_38 = shl i32 %126, 1
  %_39 = shl i32 %126, 1
  %127 = add i32 %126, 1
  store i32 %127, i32* %5, align 4
  br label %originalBB37
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL16wrinkles_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca [3 x double], align 16
  %10 = alloca double, align 8
  %11 = alloca i32, align 4
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  store double 2.000000e+00, double* %6, align 8
  store double 5.000000e-01, double* %7, align 8
  store i32 0, i32* %11, align 4
  %16 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %17 = icmp ne %"struct.pov::Pattern_Struct"* %16, null
  br i1 %17, label %18, label %25

; <label>:18:                                     ; preds = %2
  %19 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %20 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %19, i32 0, i32 2
  %21 = load i16, i16* %20, align 4
  %22 = zext i16 %21 to i32
  %23 = and i32 %22, 48
  %24 = ashr i32 %23, 4
  store i32 %24, i32* %11, align 4
  br label %25

; <label>:25:                                     ; preds = %18, %2
  %26 = load i32, i32* @x.59
  %27 = load i32, i32* @y.60
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %25
  %34 = load i32, i32* %11, align 4
  %35 = icmp eq i32 %34, 0
  %36 = load i32, i32* @x.59
  %37 = load i32, i32* @y.60
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %35, label %44, label %62

; <label>:44:                                     ; preds = %originalBBpart2
  %45 = load i32, i32* @x.59
  %46 = load i32, i32* @y.60
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %44
  %53 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 76), align 8
  store i32 %53, i32* %11, align 4
  %54 = load i32, i32* @x.59
  %55 = load i32, i32* @y.60
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %62

; <label>:62:                                     ; preds = %originalBBpart24, %originalBBpart2
  %63 = load i32, i32* @x.59
  %64 = load i32, i32* @y.60
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %62
  %71 = load i32, i32* %11, align 4
  %72 = icmp sgt i32 %71, 1
  %73 = load i32, i32* @x.59
  %74 = load i32, i32* @y.60
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %72, label %81, label %90

; <label>:81:                                     ; preds = %originalBBpart28
  %82 = load double*, double** %3, align 8
  %83 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %84 = call double @_ZN3pov5NoiseEPdPNS_14Pattern_StructE(double* %82, %"struct.pov::Pattern_Struct"* %83)
  %85 = fmul double %84, 2.000000e+00
  %86 = fsub double %85, 5.000000e-01
  store double %86, double* %10, align 8
  store double 0.000000e+00, double* %12, align 8
  %87 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %10, double* dereferenceable(8) %12)
  store double 1.000000e+00, double* %13, align 8
  %88 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %87, double* dereferenceable(8) %13)
  %89 = load double, double* %88, align 8
  store double %89, double* %8, align 8
  br label %94

; <label>:90:                                     ; preds = %originalBBpart28
  %91 = load double*, double** %3, align 8
  %92 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %93 = call double @_ZN3pov5NoiseEPdPNS_14Pattern_StructE(double* %91, %"struct.pov::Pattern_Struct"* %92)
  store double %93, double* %8, align 8
  br label %94

; <label>:94:                                     ; preds = %90, %81
  store i32 1, i32* %5, align 4
  br label %95

; <label>:95:                                     ; preds = %162, %94
  %96 = load i32, i32* %5, align 4
  %97 = icmp slt i32 %96, 10
  br i1 %97, label %98, label %165

; <label>:98:                                     ; preds = %95
  %99 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  %100 = load double*, double** %3, align 8
  %101 = load double, double* %6, align 8
  call void @_ZN3pov6VScaleEPdPKdd(double* %99, double* %100, double %101)
  %102 = load i32, i32* %11, align 4
  %103 = icmp sgt i32 %102, 1
  br i1 %103, label %104, label %133

; <label>:104:                                    ; preds = %98
  %105 = load i32, i32* @x.59
  %106 = load i32, i32* @y.60
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %104
  %113 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  %114 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %115 = call double @_ZN3pov5NoiseEPdPNS_14Pattern_StructE(double* %113, %"struct.pov::Pattern_Struct"* %114)
  %116 = fmul double %115, 2.000000e+00
  %117 = fsub double %116, 5.000000e-01
  store double %117, double* %10, align 8
  %118 = load double, double* %7, align 8
  store double 0.000000e+00, double* %14, align 8
  %119 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %10, double* dereferenceable(8) %14)
  store double 1.000000e+00, double* %15, align 8
  %120 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %119, double* dereferenceable(8) %15)
  %121 = load double, double* %120, align 8
  %122 = fmul double %118, %121
  %123 = load double, double* %8, align 8
  %124 = fadd double %123, %122
  store double %124, double* %8, align 8
  %125 = load i32, i32* @x.59
  %126 = load i32, i32* @y.60
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart254, label %originalBB10alteredBB

originalBBpart254:                                ; preds = %originalBB10
  br label %141

; <label>:133:                                    ; preds = %98
  %134 = load double, double* %7, align 8
  %135 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  %136 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %137 = call double @_ZN3pov5NoiseEPdPNS_14Pattern_StructE(double* %135, %"struct.pov::Pattern_Struct"* %136)
  %138 = fmul double %134, %137
  %139 = load double, double* %8, align 8
  %140 = fadd double %139, %138
  store double %140, double* %8, align 8
  br label %141

; <label>:141:                                    ; preds = %133, %originalBBpart254
  %142 = load i32, i32* @x.59
  %143 = load i32, i32* @y.60
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %originalBB56alteredBB, %141
  %150 = load double, double* %6, align 8
  %151 = fmul double %150, 2.000000e+00
  store double %151, double* %6, align 8
  %152 = load double, double* %7, align 8
  %153 = fmul double %152, 5.000000e-01
  store double %153, double* %7, align 8
  %154 = load i32, i32* @x.59
  %155 = load i32, i32* @y.60
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart270, label %originalBB56alteredBB

originalBBpart270:                                ; preds = %originalBB56
  br label %162

; <label>:162:                                    ; preds = %originalBBpart270
  %163 = load i32, i32* %5, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %5, align 4
  br label %95

; <label>:165:                                    ; preds = %95
  %166 = load double, double* %8, align 8
  %167 = fdiv double %166, 2.000000e+00
  ret double %167

originalBBalteredBB:                              ; preds = %originalBB, %25
  %168 = load i32, i32* %11, align 4
  %169 = icmp eq i32 %168, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  %170 = load i32, i32* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT", %"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i32 0, i32 76), align 8
  store i32 %170, i32* %11, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %62
  %171 = load i32, i32* %11, align 4
  %172 = icmp sgt i32 %171, 1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %104
  %173 = getelementptr inbounds [3 x double], [3 x double]* %9, i32 0, i32 0
  %174 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %175 = call double @_ZN3pov5NoiseEPdPNS_14Pattern_StructE(double* %173, %"struct.pov::Pattern_Struct"* %174)
  %_ = fsub double -0.000000e+00, %175
  %gen = fadd double %_, 2.000000e+00
  %_11 = fsub double %175, 2.000000e+00
  %gen12 = fmul double %_11, 2.000000e+00
  %_13 = fsub double -0.000000e+00, %175
  %gen14 = fadd double %_13, 2.000000e+00
  %_15 = fsub double -0.000000e+00, %175
  %gen16 = fadd double %_15, 2.000000e+00
  %_17 = fsub double -0.000000e+00, %175
  %gen18 = fadd double %_17, 2.000000e+00
  %_19 = fsub double %175, 2.000000e+00
  %gen20 = fmul double %_19, 2.000000e+00
  %_21 = fsub double -0.000000e+00, %175
  %gen22 = fadd double %_21, 2.000000e+00
  %_23 = fsub double %175, 2.000000e+00
  %gen24 = fmul double %_23, 2.000000e+00
  %176 = fmul double %175, 2.000000e+00
  %_25 = fsub double %176, 5.000000e-01
  %gen26 = fmul double %_25, 5.000000e-01
  %_27 = fsub double %176, 5.000000e-01
  %gen28 = fmul double %_27, 5.000000e-01
  %_29 = fsub double -0.000000e+00, %176
  %gen30 = fadd double %_29, 5.000000e-01
  %_31 = fsub double -0.000000e+00, %176
  %gen32 = fadd double %_31, 5.000000e-01
  %_33 = fsub double %176, 5.000000e-01
  %gen34 = fmul double %_33, 5.000000e-01
  %177 = fsub double %176, 5.000000e-01
  store double %177, double* %10, align 8
  %178 = load double, double* %7, align 8
  store double 0.000000e+00, double* %14, align 8
  %179 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %10, double* dereferenceable(8) %14)
  store double 1.000000e+00, double* %15, align 8
  %180 = call dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8) %179, double* dereferenceable(8) %15)
  %181 = load double, double* %180, align 8
  %_35 = fsub double -0.000000e+00, %178
  %gen36 = fadd double %_35, %181
  %_37 = fsub double -0.000000e+00, %178
  %gen38 = fadd double %_37, %181
  %_39 = fsub double -0.000000e+00, %178
  %gen40 = fadd double %_39, %181
  %_41 = fsub double %178, %181
  %gen42 = fmul double %_41, %181
  %_43 = fsub double %178, %181
  %gen44 = fmul double %_43, %181
  %_45 = fsub double -0.000000e+00, %178
  %gen46 = fadd double %_45, %181
  %182 = fmul double %178, %181
  %183 = load double, double* %8, align 8
  %_47 = fsub double -0.000000e+00, %183
  %gen48 = fadd double %_47, %182
  %_49 = fsub double %183, %182
  %gen50 = fmul double %_49, %182
  %_51 = fsub double -0.000000e+00, %183
  %gen52 = fadd double %_51, %182
  %184 = fadd double %183, %182
  store double %184, double* %8, align 8
  br label %originalBB10

originalBB56alteredBB:                            ; preds = %originalBB56, %141
  %185 = load double, double* %6, align 8
  %_57 = fsub double -0.000000e+00, %185
  %gen58 = fadd double %_57, 2.000000e+00
  %_59 = fsub double -0.000000e+00, %185
  %gen60 = fadd double %_59, 2.000000e+00
  %_61 = fsub double %185, 2.000000e+00
  %gen62 = fmul double %_61, 2.000000e+00
  %_63 = fsub double %185, 2.000000e+00
  %gen64 = fmul double %_63, 2.000000e+00
  %186 = fmul double %185, 2.000000e+00
  store double %186, double* %6, align 8
  %187 = load double, double* %7, align 8
  %_65 = fsub double %187, 5.000000e-01
  %gen66 = fmul double %_65, 5.000000e-01
  %_67 = fsub double -0.000000e+00, %187
  %gen68 = fadd double %_67, 5.000000e-01
  %188 = fmul double %187, 5.000000e-01
  store double %188, double* %7, align 8
  br label %originalBB56
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL13dents_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = load i32, i32* @x.61
  %4 = load i32, i32* @y.62
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca double*, align 8
  %12 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %13 = alloca double, align 8
  store double* %0, double** %11, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %12, align 8
  %14 = load double*, double** %11, align 8
  %15 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %16 = call double @_ZN3pov5NoiseEPdPNS_14Pattern_StructE(double* %14, %"struct.pov::Pattern_Struct"* %15)
  store double %16, double* %13, align 8
  %17 = load double, double* %13, align 8
  %18 = load double, double* %13, align 8
  %19 = fmul double %17, %18
  %20 = load double, double* %13, align 8
  %21 = fmul double %19, %20
  %22 = load i32, i32* @x.61
  %23 = load i32, i32* @y.62
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double %21

originalBBalteredBB:                              ; preds = %originalBB, %2
  %30 = alloca double*, align 8
  %31 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %32 = alloca double, align 8
  store double* %0, double** %30, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %31, align 8
  %33 = load double*, double** %30, align 8
  %34 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %31, align 8
  %35 = call double @_ZN3pov5NoiseEPdPNS_14Pattern_StructE(double* %33, %"struct.pov::Pattern_Struct"* %34)
  store double %35, double* %32, align 8
  %36 = load double, double* %32, align 8
  %37 = load double, double* %32, align 8
  %_ = fsub double -0.000000e+00, %36
  %gen = fadd double %_, %37
  %38 = fmul double %36, %37
  %39 = load double, double* %32, align 8
  %_1 = fsub double %38, %39
  %gen2 = fmul double %_1, %39
  %_3 = fsub double -0.000000e+00, %38
  %gen4 = fadd double %_3, %39
  %_5 = fsub double %38, %39
  %gen6 = fmul double %_5, %39
  %_7 = fsub double -0.000000e+00, %38
  %gen8 = fadd double %_7, %39
  %_9 = fsub double -0.000000e+00, %38
  %gen10 = fadd double %_9, %39
  %_11 = fsub double -0.000000e+00, %38
  %gen12 = fadd double %_11, %39
  %40 = fmul double %38, %39
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL15quilted_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #2 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca [3 x double], align 16
  %6 = alloca double, align 8
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %7 = load double*, double** %3, align 8
  %8 = getelementptr inbounds double, double* %7, i64 0
  %9 = load double, double* %8, align 8
  %10 = load double*, double** %3, align 8
  %11 = getelementptr inbounds double, double* %10, i64 0
  %12 = load double, double* %11, align 8
  %13 = fcmp oge double %12, 0.000000e+00
  br i1 %13, label %14, label %35

; <label>:14:                                     ; preds = %2
  %15 = load i32, i32* @x.63
  %16 = load i32, i32* @y.64
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %14
  %23 = load double*, double** %3, align 8
  %24 = getelementptr inbounds double, double* %23, i64 0
  %25 = load double, double* %24, align 8
  %26 = call double @floor(double %25) #6
  %27 = load i32, i32* @x.63
  %28 = load i32, i32* @y.64
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %59

; <label>:35:                                     ; preds = %2
  %36 = load i32, i32* @x.63
  %37 = load i32, i32* @y.64
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %35
  %44 = load double*, double** %3, align 8
  %45 = getelementptr inbounds double, double* %44, i64 0
  %46 = load double, double* %45, align 8
  %47 = fsub double 0.000000e+00, %46
  %48 = call double @floor(double %47) #6
  %49 = fsub double 0.000000e+00, %48
  %50 = fsub double %49, 1.000000e+00
  %51 = load i32, i32* @x.63
  %52 = load i32, i32* @y.64
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart241, label %originalBB1alteredBB

originalBBpart241:                                ; preds = %originalBB1
  br label %59

; <label>:59:                                     ; preds = %originalBBpart241, %originalBBpart2
  %60 = phi double [ %26, %originalBBpart2 ], [ %50, %originalBBpart241 ]
  %61 = load i32, i32* @x.63
  %62 = load i32, i32* @y.64
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %originalBB43alteredBB, %59
  %69 = fsub double %9, %60
  %70 = fsub double %69, 5.000000e-01
  %71 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 0
  store double %70, double* %71, align 16
  %72 = load double*, double** %3, align 8
  %73 = getelementptr inbounds double, double* %72, i64 1
  %74 = load double, double* %73, align 8
  %75 = load double*, double** %3, align 8
  %76 = getelementptr inbounds double, double* %75, i64 1
  %77 = load double, double* %76, align 8
  %78 = fcmp oge double %77, 0.000000e+00
  %79 = load i32, i32* @x.63
  %80 = load i32, i32* @y.64
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart267, label %originalBB43alteredBB

originalBBpart267:                                ; preds = %originalBB43
  br i1 %78, label %87, label %92

; <label>:87:                                     ; preds = %originalBBpart267
  %88 = load double*, double** %3, align 8
  %89 = getelementptr inbounds double, double* %88, i64 1
  %90 = load double, double* %89, align 8
  %91 = call double @floor(double %90) #6
  br label %100

; <label>:92:                                     ; preds = %originalBBpart267
  %93 = load double*, double** %3, align 8
  %94 = getelementptr inbounds double, double* %93, i64 1
  %95 = load double, double* %94, align 8
  %96 = fsub double 0.000000e+00, %95
  %97 = call double @floor(double %96) #6
  %98 = fsub double 0.000000e+00, %97
  %99 = fsub double %98, 1.000000e+00
  br label %100

; <label>:100:                                    ; preds = %92, %87
  %101 = phi double [ %91, %87 ], [ %99, %92 ]
  %102 = fsub double %74, %101
  %103 = fsub double %102, 5.000000e-01
  %104 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 1
  store double %103, double* %104, align 8
  %105 = load double*, double** %3, align 8
  %106 = getelementptr inbounds double, double* %105, i64 2
  %107 = load double, double* %106, align 8
  %108 = load double*, double** %3, align 8
  %109 = getelementptr inbounds double, double* %108, i64 2
  %110 = load double, double* %109, align 8
  %111 = fcmp oge double %110, 0.000000e+00
  br i1 %111, label %112, label %117

; <label>:112:                                    ; preds = %100
  %113 = load double*, double** %3, align 8
  %114 = getelementptr inbounds double, double* %113, i64 2
  %115 = load double, double* %114, align 8
  %116 = call double @floor(double %115) #6
  br label %141

; <label>:117:                                    ; preds = %100
  %118 = load i32, i32* @x.63
  %119 = load i32, i32* @y.64
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %originalBB69alteredBB, %117
  %126 = load double*, double** %3, align 8
  %127 = getelementptr inbounds double, double* %126, i64 2
  %128 = load double, double* %127, align 8
  %129 = fsub double 0.000000e+00, %128
  %130 = call double @floor(double %129) #6
  %131 = fsub double 0.000000e+00, %130
  %132 = fsub double %131, 1.000000e+00
  %133 = load i32, i32* @x.63
  %134 = load i32, i32* @y.64
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart279, label %originalBB69alteredBB

originalBBpart279:                                ; preds = %originalBB69
  br label %141

; <label>:141:                                    ; preds = %originalBBpart279, %112
  %142 = phi double [ %116, %112 ], [ %132, %originalBBpart279 ]
  %143 = load i32, i32* @x.63
  %144 = load i32, i32* @y.64
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %originalBB81alteredBB, %141
  %151 = fsub double %107, %142
  %152 = fsub double %151, 5.000000e-01
  %153 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 2
  store double %152, double* %153, align 16
  %154 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 0
  %155 = load double, double* %154, align 16
  %156 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 0
  %157 = load double, double* %156, align 16
  %158 = fmul double %155, %157
  %159 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 1
  %160 = load double, double* %159, align 8
  %161 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 1
  %162 = load double, double* %161, align 8
  %163 = fmul double %160, %162
  %164 = fadd double %158, %163
  %165 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 2
  %166 = load double, double* %165, align 16
  %167 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 2
  %168 = load double, double* %167, align 16
  %169 = fmul double %166, %168
  %170 = fadd double %164, %169
  %171 = call double @sqrt(double %170) #7
  store double %171, double* %6, align 8
  %172 = load double, double* %6, align 8
  %173 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %174 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %173, i32 0, i32 10
  %175 = bitcast %union.anon.25* %174 to %struct.anon.27*
  %176 = getelementptr inbounds %struct.anon.27, %struct.anon.27* %175, i32 0, i32 0
  %177 = load float, float* %176, align 8
  %178 = fpext float %177 to double
  %179 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %180 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %179, i32 0, i32 10
  %181 = bitcast %union.anon.25* %180 to %struct.anon.27*
  %182 = getelementptr inbounds %struct.anon.27, %struct.anon.27* %181, i32 0, i32 1
  %183 = load float, float* %182, align 4
  %184 = fpext float %183 to double
  %185 = call double @_ZN3pov11quilt_cubicEddd(double %172, double %178, double %184)
  store double %185, double* %6, align 8
  %186 = load double, double* %6, align 8
  %187 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 0
  %188 = load double, double* %187, align 16
  %189 = fmul double %188, %186
  store double %189, double* %187, align 16
  %190 = load double, double* %6, align 8
  %191 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 1
  %192 = load double, double* %191, align 8
  %193 = fmul double %192, %190
  store double %193, double* %191, align 8
  %194 = load double, double* %6, align 8
  %195 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 2
  %196 = load double, double* %195, align 16
  %197 = fmul double %196, %194
  store double %197, double* %195, align 16
  %198 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 0
  %199 = load double, double* %198, align 16
  %200 = call double @fabs(double %199) #6
  %201 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 1
  %202 = load double, double* %201, align 8
  %203 = call double @fabs(double %202) #6
  %204 = fadd double %200, %203
  %205 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 2
  %206 = load double, double* %205, align 16
  %207 = call double @fabs(double %206) #6
  %208 = fadd double %204, %207
  %209 = fdiv double %208, 3.000000e+00
  %210 = load i32, i32* @x.63
  %211 = load i32, i32* @y.64
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart2155, label %originalBB81alteredBB

originalBBpart2155:                               ; preds = %originalBB81
  ret double %209

originalBBalteredBB:                              ; preds = %originalBB, %14
  %218 = load double*, double** %3, align 8
  %219 = getelementptr inbounds double, double* %218, i64 0
  %220 = load double, double* %219, align 8
  %221 = call double @floor(double %220) #6
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %222 = load double*, double** %3, align 8
  %223 = getelementptr inbounds double, double* %222, i64 0
  %224 = load double, double* %223, align 8
  %_ = fsub double -0.000000e+00, 0.000000e+00
  %gen = fadd double %_, %224
  %_2 = fsub double 0.000000e+00, %224
  %gen3 = fmul double %_2, %224
  %_4 = fsub double -0.000000e+00, 0.000000e+00
  %gen5 = fadd double %_4, %224
  %_6 = fsub double 0.000000e+00, %224
  %gen7 = fmul double %_6, %224
  %_8 = fsub double -0.000000e+00, 0.000000e+00
  %gen9 = fadd double %_8, %224
  %225 = fsub double 0.000000e+00, %224
  %226 = call double @floor(double %225) #6
  %_10 = fsub double -0.000000e+00, 0.000000e+00
  %gen11 = fadd double %_10, %226
  %_12 = fsub double -0.000000e+00, 0.000000e+00
  %gen13 = fadd double %_12, %226
  %_14 = fsub double -0.000000e+00, 0.000000e+00
  %gen15 = fadd double %_14, %226
  %_16 = fsub double 0.000000e+00, %226
  %gen17 = fmul double %_16, %226
  %_18 = fsub double 0.000000e+00, %226
  %gen19 = fmul double %_18, %226
  %_20 = fsub double -0.000000e+00, 0.000000e+00
  %gen21 = fadd double %_20, %226
  %_22 = fsub double -0.000000e+00, 0.000000e+00
  %gen23 = fadd double %_22, %226
  %_24 = fsub double -0.000000e+00, 0.000000e+00
  %gen25 = fadd double %_24, %226
  %227 = fsub double 0.000000e+00, %226
  %_26 = fsub double %227, 1.000000e+00
  %gen27 = fmul double %_26, 1.000000e+00
  %_28 = fsub double %227, 1.000000e+00
  %gen29 = fmul double %_28, 1.000000e+00
  %_30 = fsub double %227, 1.000000e+00
  %gen31 = fmul double %_30, 1.000000e+00
  %_32 = fsub double %227, 1.000000e+00
  %gen33 = fmul double %_32, 1.000000e+00
  %_34 = fsub double %227, 1.000000e+00
  %gen35 = fmul double %_34, 1.000000e+00
  %_36 = fsub double %227, 1.000000e+00
  %gen37 = fmul double %_36, 1.000000e+00
  %_38 = fsub double -0.000000e+00, %227
  %gen39 = fadd double %_38, 1.000000e+00
  %228 = fsub double %227, 1.000000e+00
  br label %originalBB1

originalBB43alteredBB:                            ; preds = %originalBB43, %59
  %_44 = fsub double -0.000000e+00, %9
  %gen45 = fadd double %_44, %60
  %_46 = fsub double -0.000000e+00, %9
  %gen47 = fadd double %_46, %60
  %_48 = fsub double -0.000000e+00, %9
  %gen49 = fadd double %_48, %60
  %_50 = fsub double %9, %60
  %gen51 = fmul double %_50, %60
  %_52 = fsub double -0.000000e+00, %9
  %gen53 = fadd double %_52, %60
  %_54 = fsub double -0.000000e+00, %9
  %gen55 = fadd double %_54, %60
  %229 = fsub double %9, %60
  %_56 = fsub double -0.000000e+00, %229
  %gen57 = fadd double %_56, 5.000000e-01
  %_58 = fsub double %229, 5.000000e-01
  %gen59 = fmul double %_58, 5.000000e-01
  %_60 = fsub double %229, 5.000000e-01
  %gen61 = fmul double %_60, 5.000000e-01
  %_62 = fsub double %229, 5.000000e-01
  %gen63 = fmul double %_62, 5.000000e-01
  %_64 = fsub double %229, 5.000000e-01
  %gen65 = fmul double %_64, 5.000000e-01
  %230 = fsub double %229, 5.000000e-01
  %231 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 0
  store double %230, double* %231, align 16
  %232 = load double*, double** %3, align 8
  %233 = getelementptr inbounds double, double* %232, i64 1
  %234 = load double, double* %233, align 8
  %235 = load double*, double** %3, align 8
  %236 = getelementptr inbounds double, double* %235, i64 1
  %237 = load double, double* %236, align 8
  %238 = fcmp oge double %237, 0.000000e+00
  br label %originalBB43

originalBB69alteredBB:                            ; preds = %originalBB69, %117
  %239 = load double*, double** %3, align 8
  %240 = getelementptr inbounds double, double* %239, i64 2
  %241 = load double, double* %240, align 8
  %_70 = fsub double 0.000000e+00, %241
  %gen71 = fmul double %_70, %241
  %242 = fsub double 0.000000e+00, %241
  %243 = call double @floor(double %242) #6
  %_72 = fsub double -0.000000e+00, 0.000000e+00
  %gen73 = fadd double %_72, %243
  %_74 = fsub double 0.000000e+00, %243
  %gen75 = fmul double %_74, %243
  %244 = fsub double 0.000000e+00, %243
  %_76 = fsub double %244, 1.000000e+00
  %gen77 = fmul double %_76, 1.000000e+00
  %245 = fsub double %244, 1.000000e+00
  br label %originalBB69

originalBB81alteredBB:                            ; preds = %originalBB81, %141
  %_82 = fsub double -0.000000e+00, %107
  %gen83 = fadd double %_82, %142
  %_84 = fsub double -0.000000e+00, %107
  %gen85 = fadd double %_84, %142
  %246 = fsub double %107, %142
  %_86 = fsub double -0.000000e+00, %246
  %gen87 = fadd double %_86, 5.000000e-01
  %_88 = fsub double %246, 5.000000e-01
  %gen89 = fmul double %_88, 5.000000e-01
  %_90 = fsub double -0.000000e+00, %246
  %gen91 = fadd double %_90, 5.000000e-01
  %_92 = fsub double %246, 5.000000e-01
  %gen93 = fmul double %_92, 5.000000e-01
  %_94 = fsub double -0.000000e+00, %246
  %gen95 = fadd double %_94, 5.000000e-01
  %247 = fsub double %246, 5.000000e-01
  %248 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 2
  store double %247, double* %248, align 16
  %249 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 0
  %250 = load double, double* %249, align 16
  %251 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 0
  %252 = load double, double* %251, align 16
  %_96 = fsub double %250, %252
  %gen97 = fmul double %_96, %252
  %253 = fmul double %250, %252
  %254 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 1
  %255 = load double, double* %254, align 8
  %256 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 1
  %257 = load double, double* %256, align 8
  %_98 = fsub double -0.000000e+00, %255
  %gen99 = fadd double %_98, %257
  %_100 = fsub double -0.000000e+00, %255
  %gen101 = fadd double %_100, %257
  %_102 = fsub double -0.000000e+00, %255
  %gen103 = fadd double %_102, %257
  %_104 = fsub double -0.000000e+00, %255
  %gen105 = fadd double %_104, %257
  %258 = fmul double %255, %257
  %_106 = fsub double -0.000000e+00, %253
  %gen107 = fadd double %_106, %258
  %_108 = fsub double -0.000000e+00, %253
  %gen109 = fadd double %_108, %258
  %_110 = fsub double -0.000000e+00, %253
  %gen111 = fadd double %_110, %258
  %_112 = fsub double %253, %258
  %gen113 = fmul double %_112, %258
  %_114 = fsub double -0.000000e+00, %253
  %gen115 = fadd double %_114, %258
  %_116 = fsub double %253, %258
  %gen117 = fmul double %_116, %258
  %259 = fadd double %253, %258
  %260 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 2
  %261 = load double, double* %260, align 16
  %262 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 2
  %263 = load double, double* %262, align 16
  %264 = fmul double %261, %263
  %_118 = fsub double -0.000000e+00, %259
  %gen119 = fadd double %_118, %264
  %_120 = fsub double %259, %264
  %gen121 = fmul double %_120, %264
  %265 = fadd double %259, %264
  %266 = call double @sqrt(double %265) #7
  store double %266, double* %6, align 8
  %267 = load double, double* %6, align 8
  %268 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %269 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %268, i32 0, i32 10
  %270 = bitcast %union.anon.25* %269 to %struct.anon.27*
  %271 = getelementptr inbounds %struct.anon.27, %struct.anon.27* %270, i32 0, i32 0
  %272 = load float, float* %271, align 8
  %273 = fpext float %272 to double
  %274 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %275 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %274, i32 0, i32 10
  %276 = bitcast %union.anon.25* %275 to %struct.anon.27*
  %277 = getelementptr inbounds %struct.anon.27, %struct.anon.27* %276, i32 0, i32 1
  %278 = load float, float* %277, align 4
  %279 = fpext float %278 to double
  %280 = call double @_ZN3pov11quilt_cubicEddd(double %267, double %273, double %279)
  store double %280, double* %6, align 8
  %281 = load double, double* %6, align 8
  %282 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 0
  %283 = load double, double* %282, align 16
  %_122 = fsub double %283, %281
  %gen123 = fmul double %_122, %281
  %_124 = fsub double -0.000000e+00, %283
  %gen125 = fadd double %_124, %281
  %_126 = fsub double -0.000000e+00, %283
  %gen127 = fadd double %_126, %281
  %_128 = fsub double %283, %281
  %gen129 = fmul double %_128, %281
  %_130 = fsub double -0.000000e+00, %283
  %gen131 = fadd double %_130, %281
  %_132 = fsub double %283, %281
  %gen133 = fmul double %_132, %281
  %284 = fmul double %283, %281
  store double %284, double* %282, align 16
  %285 = load double, double* %6, align 8
  %286 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 1
  %287 = load double, double* %286, align 8
  %_134 = fsub double %287, %285
  %gen135 = fmul double %_134, %285
  %_136 = fsub double %287, %285
  %gen137 = fmul double %_136, %285
  %288 = fmul double %287, %285
  store double %288, double* %286, align 8
  %289 = load double, double* %6, align 8
  %290 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 2
  %291 = load double, double* %290, align 16
  %292 = fmul double %291, %289
  store double %292, double* %290, align 16
  %293 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 0
  %294 = load double, double* %293, align 16
  %295 = call double @fabs(double %294) #6
  %296 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 1
  %297 = load double, double* %296, align 8
  %298 = call double @fabs(double %297) #6
  %_138 = fsub double %295, %298
  %gen139 = fmul double %_138, %298
  %_140 = fsub double -0.000000e+00, %295
  %gen141 = fadd double %_140, %298
  %_142 = fsub double %295, %298
  %gen143 = fmul double %_142, %298
  %_144 = fsub double -0.000000e+00, %295
  %gen145 = fadd double %_144, %298
  %299 = fadd double %295, %298
  %300 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 2
  %301 = load double, double* %300, align 16
  %302 = call double @fabs(double %301) #6
  %_146 = fsub double %299, %302
  %gen147 = fmul double %_146, %302
  %_148 = fsub double %299, %302
  %gen149 = fmul double %_148, %302
  %303 = fadd double %299, %302
  %_150 = fsub double %303, 3.000000e+00
  %gen151 = fmul double %_150, 3.000000e+00
  %_152 = fsub double -0.000000e+00, %303
  %gen153 = fadd double %_152, 3.000000e+00
  %304 = fdiv double %303, 3.000000e+00
  br label %originalBB81
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL16function_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = load i32, i32* @x.65
  %4 = load i32, i32* @y.66
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca double*, align 8
  %12 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %13 = alloca double, align 8
  %14 = alloca %"struct.pov::FPUContext_Struct"*, align 8
  store double* %0, double** %11, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %12, align 8
  %15 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %16 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %15, i32 0, i32 10
  %17 = bitcast %union.anon.25* %16 to %struct.anon.32*
  %18 = getelementptr inbounds %struct.anon.32, %struct.anon.32* %17, i32 0, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  %21 = load i32, i32* @x.65
  %22 = load i32, i32* @y.66
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %36

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = call %"struct.pov::FPUContext_Struct"* @_ZN3pov17POVFPU_NewContextEv()
  %31 = bitcast %"struct.pov::FPUContext_Struct"* %30 to i8*
  %32 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %33 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %32, i32 0, i32 10
  %34 = bitcast %union.anon.25* %33 to %struct.anon.32*
  %35 = getelementptr inbounds %struct.anon.32, %struct.anon.32* %34, i32 0, i32 1
  store i8* %31, i8** %35, align 8
  br label %36

; <label>:36:                                     ; preds = %29, %originalBBpart2
  %37 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %38 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %37, i32 0, i32 10
  %39 = bitcast %union.anon.25* %38 to %struct.anon.32*
  %40 = getelementptr inbounds %struct.anon.32, %struct.anon.32* %39, i32 0, i32 1
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast i8* %41 to %"struct.pov::FPUContext_Struct"*
  %43 = call %"struct.pov::FPUContext_Struct"* @_ZN3pov20POVFPU_SwitchContextEPNS_17FPUContext_StructE(%"struct.pov::FPUContext_Struct"* %42)
  store %"struct.pov::FPUContext_Struct"* %43, %"struct.pov::FPUContext_Struct"** %14, align 8
  %44 = load double*, double** %11, align 8
  %45 = getelementptr inbounds double, double* %44, i64 0
  %46 = load double, double* %45, align 8
  call void @_ZN3pov15POVFPU_SetLocalEjd(i32 0, double %46)
  %47 = load double*, double** %11, align 8
  %48 = getelementptr inbounds double, double* %47, i64 1
  %49 = load double, double* %48, align 8
  call void @_ZN3pov15POVFPU_SetLocalEjd(i32 1, double %49)
  %50 = load double*, double** %11, align 8
  %51 = getelementptr inbounds double, double* %50, i64 2
  %52 = load double, double* %51, align 8
  call void @_ZN3pov15POVFPU_SetLocalEjd(i32 2, double %52)
  %53 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %12, align 8
  %54 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %53, i32 0, i32 10
  %55 = bitcast %union.anon.25* %54 to %struct.anon.32*
  %56 = getelementptr inbounds %struct.anon.32, %struct.anon.32* %55, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast i8* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = call double @_ZN3pov17POVFPU_RunDefaultEj(i32 %59)
  store double %60, double* %13, align 8
  %61 = load %"struct.pov::FPUContext_Struct"*, %"struct.pov::FPUContext_Struct"** %14, align 8
  %62 = call %"struct.pov::FPUContext_Struct"* @_ZN3pov20POVFPU_SwitchContextEPNS_17FPUContext_StructE(%"struct.pov::FPUContext_Struct"* %61)
  %63 = load double, double* %13, align 8
  %64 = fcmp ogt double %63, 1.000000e+00
  br i1 %64, label %65, label %68

; <label>:65:                                     ; preds = %36
  %66 = load double, double* %13, align 8
  %67 = call double @fmod(double %66, double 1.000000e+00) #7
  br label %86

; <label>:68:                                     ; preds = %36
  %69 = load i32, i32* @x.65
  %70 = load i32, i32* @y.66
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %68
  %77 = load double, double* %13, align 8
  %78 = load i32, i32* @x.65
  %79 = load i32, i32* @y.66
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %86

; <label>:86:                                     ; preds = %originalBBpart24, %65
  %87 = phi double [ %67, %65 ], [ %77, %originalBBpart24 ]
  %88 = load i32, i32* @x.65
  %89 = load i32, i32* @y.66
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %86
  %96 = load i32, i32* @x.65
  %97 = load i32, i32* @y.66
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret double %87

originalBBalteredBB:                              ; preds = %originalBB, %2
  %104 = alloca double*, align 8
  %105 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %106 = alloca double, align 8
  %107 = alloca %"struct.pov::FPUContext_Struct"*, align 8
  store double* %0, double** %104, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %105, align 8
  %108 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %105, align 8
  %109 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %108, i32 0, i32 10
  %110 = bitcast %union.anon.25* %109 to %struct.anon.32*
  %111 = getelementptr inbounds %struct.anon.32, %struct.anon.32* %110, i32 0, i32 1
  %112 = load i8*, i8** %111, align 8
  %113 = icmp eq i8* %112, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %68
  %114 = load double, double* %13, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %86
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL14planar_patternEPd(double*) #2 {
  %2 = alloca double*, align 8
  %3 = alloca double, align 8
  store double* %0, double** %2, align 8
  %4 = load double*, double** %2, align 8
  %5 = getelementptr inbounds double, double* %4, i64 1
  %6 = load double, double* %5, align 8
  %7 = call double @fabs(double %6) #6
  store double %7, double* %3, align 8
  %8 = load double, double* %3, align 8
  %9 = fcmp olt double %8, 0.000000e+00
  br i1 %9, label %10, label %27

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @x.67
  %12 = load i32, i32* @y.68
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %10
  store double 1.000000e+00, double* %3, align 8
  %19 = load i32, i32* @x.67
  %20 = load i32, i32* @y.68
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %35

; <label>:27:                                     ; preds = %1
  %28 = load double, double* %3, align 8
  %29 = fcmp ogt double %28, 1.000000e+00
  br i1 %29, label %30, label %31

; <label>:30:                                     ; preds = %27
  store double 0.000000e+00, double* %3, align 8
  br label %34

; <label>:31:                                     ; preds = %27
  %32 = load double, double* %3, align 8
  %33 = fsub double 1.000000e+00, %32
  store double %33, double* %3, align 8
  br label %34

; <label>:34:                                     ; preds = %31, %30
  br label %35

; <label>:35:                                     ; preds = %34, %originalBBpart2
  %36 = load double, double* %3, align 8
  ret double %36

originalBBalteredBB:                              ; preds = %originalBB, %10
  store double 1.000000e+00, double* %3, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL13boxed_patternEPd(double*) #0 {
  %2 = load i32, i32* @x.69
  %3 = load i32, i32* @y.70
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca double*, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  store double* %0, double** %10, align 8
  %15 = load double*, double** %10, align 8
  %16 = getelementptr inbounds double, double* %15, i64 0
  %17 = load double, double* %16, align 8
  %18 = call double @fabs(double %17) #6
  store double %18, double* %12, align 8
  %19 = load double*, double** %10, align 8
  %20 = getelementptr inbounds double, double* %19, i64 1
  %21 = load double, double* %20, align 8
  %22 = call double @fabs(double %21) #6
  store double %22, double* %13, align 8
  %23 = load double*, double** %10, align 8
  %24 = getelementptr inbounds double, double* %23, i64 2
  %25 = load double, double* %24, align 8
  %26 = call double @fabs(double %25) #6
  store double %26, double* %14, align 8
  %27 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %13, double* dereferenceable(8) %14)
  %28 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %12, double* dereferenceable(8) %27)
  %29 = load double, double* %28, align 8
  store double %29, double* %11, align 8
  %30 = load double, double* %11, align 8
  %31 = fcmp olt double %30, 0.000000e+00
  %32 = load i32, i32* @x.69
  %33 = load i32, i32* @y.70
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %41

; <label>:40:                                     ; preds = %originalBBpart2
  store double 1.000000e+00, double* %11, align 8
  br label %65

; <label>:41:                                     ; preds = %originalBBpart2
  %42 = load i32, i32* @x.69
  %43 = load i32, i32* @y.70
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %41
  %50 = load double, double* %11, align 8
  %51 = fcmp ogt double %50, 1.000000e+00
  %52 = load i32, i32* @x.69
  %53 = load i32, i32* @y.70
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %51, label %60, label %61

; <label>:60:                                     ; preds = %originalBBpart24
  store double 0.000000e+00, double* %11, align 8
  br label %64

; <label>:61:                                     ; preds = %originalBBpart24
  %62 = load double, double* %11, align 8
  %63 = fsub double 1.000000e+00, %62
  store double %63, double* %11, align 8
  br label %64

; <label>:64:                                     ; preds = %61, %60
  br label %65

; <label>:65:                                     ; preds = %64, %40
  %66 = load i32, i32* @x.69
  %67 = load i32, i32* @y.70
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %65
  %74 = load double, double* %11, align 8
  %75 = load i32, i32* @x.69
  %76 = load i32, i32* @y.70
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret double %74

originalBBalteredBB:                              ; preds = %originalBB, %1
  %83 = alloca double*, align 8
  %84 = alloca double, align 8
  %85 = alloca double, align 8
  %86 = alloca double, align 8
  %87 = alloca double, align 8
  store double* %0, double** %83, align 8
  %88 = load double*, double** %83, align 8
  %89 = getelementptr inbounds double, double* %88, i64 0
  %90 = load double, double* %89, align 8
  %91 = call double @fabs(double %90) #6
  store double %91, double* %85, align 8
  %92 = load double*, double** %83, align 8
  %93 = getelementptr inbounds double, double* %92, i64 1
  %94 = load double, double* %93, align 8
  %95 = call double @fabs(double %94) #6
  store double %95, double* %86, align 8
  %96 = load double*, double** %83, align 8
  %97 = getelementptr inbounds double, double* %96, i64 2
  %98 = load double, double* %97, align 8
  %99 = call double @fabs(double %98) #6
  store double %99, double* %87, align 8
  %100 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %86, double* dereferenceable(8) %87)
  %101 = call dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8) %85, double* dereferenceable(8) %100)
  %102 = load double, double* %101, align 8
  store double %102, double* %84, align 8
  %103 = load double, double* %84, align 8
  %104 = fcmp olt double %103, 0.000000e+00
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %105 = load double, double* %11, align 8
  %106 = fcmp ogt double %105, 1.000000e+00
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  %107 = load double, double* %11, align 8
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL17spherical_patternEPd(double*) #2 {
  %2 = alloca double*, align 8
  %3 = alloca double, align 8
  store double* %0, double** %2, align 8
  %4 = load double*, double** %2, align 8
  call void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8) %3, double* %4)
  %5 = load double, double* %3, align 8
  %6 = fcmp olt double %5, 0.000000e+00
  br i1 %6, label %7, label %24

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.71
  %9 = load i32, i32* @y.72
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %7
  store double 1.000000e+00, double* %3, align 8
  %16 = load i32, i32* @x.71
  %17 = load i32, i32* @y.72
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %32

; <label>:24:                                     ; preds = %1
  %25 = load double, double* %3, align 8
  %26 = fcmp ogt double %25, 1.000000e+00
  br i1 %26, label %27, label %28

; <label>:27:                                     ; preds = %24
  store double 0.000000e+00, double* %3, align 8
  br label %31

; <label>:28:                                     ; preds = %24
  %29 = load double, double* %3, align 8
  %30 = fsub double 1.000000e+00, %29
  store double %30, double* %3, align 8
  br label %31

; <label>:31:                                     ; preds = %28, %27
  br label %32

; <label>:32:                                     ; preds = %31, %originalBBpart2
  %33 = load double, double* %3, align 8
  ret double %33

originalBBalteredBB:                              ; preds = %originalBB, %7
  store double 1.000000e+00, double* %3, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL19cylindrical_patternEPd(double*) #2 {
  %2 = alloca double*, align 8
  %3 = alloca double, align 8
  store double* %0, double** %2, align 8
  %4 = load double*, double** %2, align 8
  %5 = getelementptr inbounds double, double* %4, i64 0
  %6 = load double, double* %5, align 8
  %7 = call double @_ZN3pov3SqrEd(double %6)
  %8 = load double*, double** %2, align 8
  %9 = getelementptr inbounds double, double* %8, i64 2
  %10 = load double, double* %9, align 8
  %11 = call double @_ZN3pov3SqrEd(double %10)
  %12 = fadd double %7, %11
  %13 = call double @sqrt(double %12) #7
  store double %13, double* %3, align 8
  %14 = load double, double* %3, align 8
  %15 = fcmp olt double %14, 0.000000e+00
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %1
  store double 1.000000e+00, double* %3, align 8
  br label %41

; <label>:17:                                     ; preds = %1
  %18 = load double, double* %3, align 8
  %19 = fcmp ogt double %18, 1.000000e+00
  br i1 %19, label %20, label %37

; <label>:20:                                     ; preds = %17
  %21 = load i32, i32* @x.73
  %22 = load i32, i32* @y.74
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %20
  store double 0.000000e+00, double* %3, align 8
  %29 = load i32, i32* @x.73
  %30 = load i32, i32* @y.74
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %40

; <label>:37:                                     ; preds = %17
  %38 = load double, double* %3, align 8
  %39 = fsub double 1.000000e+00, %38
  store double %39, double* %3, align 8
  br label %40

; <label>:40:                                     ; preds = %37, %originalBBpart2
  br label %41

; <label>:41:                                     ; preds = %40, %16
  %42 = load i32, i32* @x.73
  %43 = load i32, i32* @y.74
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %41
  %50 = load double, double* %3, align 8
  %51 = load i32, i32* @x.73
  %52 = load i32, i32* @y.74
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret double %50

originalBBalteredBB:                              ; preds = %originalBB, %20
  store double 0.000000e+00, double* %3, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %59 = load double, double* %3, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL15density_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = alloca double*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca double, align 8
  %23 = alloca double, align 8
  %24 = alloca double, align 8
  %25 = alloca double, align 8
  %26 = alloca double, align 8
  %27 = alloca double, align 8
  %28 = alloca double, align 8
  %29 = alloca double, align 8
  %30 = alloca [4 x [4 x float]], align 16
  %31 = alloca double, align 8
  %32 = alloca %"struct.pov::Density_file_Data_Struct"*, align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  store double* %0, double** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  store double 0.000000e+00, double* %31, align 8
  %41 = load double*, double** %3, align 8
  %42 = getelementptr inbounds double, double* %41, i64 0
  %43 = load double, double* %42, align 8
  store double %43, double* %14, align 8
  %44 = load double*, double** %3, align 8
  %45 = getelementptr inbounds double, double* %44, i64 1
  %46 = load double, double* %45, align 8
  store double %46, double* %15, align 8
  %47 = load double*, double** %3, align 8
  %48 = getelementptr inbounds double, double* %47, i64 2
  %49 = load double, double* %48, align 8
  store double %49, double* %16, align 8
  %50 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %51 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %50, i32 0, i32 10
  %52 = bitcast %union.anon.25* %51 to %"struct.pov::Density_file_Struct"**
  %53 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %52, align 8
  %54 = icmp ne %"struct.pov::Density_file_Struct"* %53, null
  br i1 %54, label %55, label %2192

; <label>:55:                                     ; preds = %2
  %56 = load i32, i32* @x.75
  %57 = load i32, i32* @y.76
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %55
  %64 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %65 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %64, i32 0, i32 10
  %66 = bitcast %union.anon.25* %65 to %"struct.pov::Density_file_Struct"**
  %67 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %66, align 8
  %68 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %67, i32 0, i32 1
  %69 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %68, align 8
  store %"struct.pov::Density_file_Data_Struct"* %69, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %70 = icmp ne %"struct.pov::Density_file_Data_Struct"* %69, null
  %71 = load i32, i32* @x.75
  %72 = load i32, i32* @y.76
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %70, label %79, label %2192

; <label>:79:                                     ; preds = %originalBBpart2
  %80 = load double, double* %14, align 8
  %81 = fcmp oge double %80, 0.000000e+00
  br i1 %81, label %82, label %2190

; <label>:82:                                     ; preds = %79
  %83 = load double, double* %14, align 8
  %84 = fcmp olt double %83, 1.000000e+00
  br i1 %84, label %85, label %2190

; <label>:85:                                     ; preds = %82
  %86 = load i32, i32* @x.75
  %87 = load i32, i32* @y.76
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %85
  %94 = load double, double* %15, align 8
  %95 = fcmp oge double %94, 0.000000e+00
  %96 = load i32, i32* @x.75
  %97 = load i32, i32* @y.76
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %95, label %104, label %2190

; <label>:104:                                    ; preds = %originalBBpart24
  %105 = load i32, i32* @x.75
  %106 = load i32, i32* @y.76
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %104
  %113 = load double, double* %15, align 8
  %114 = fcmp olt double %113, 1.000000e+00
  %115 = load i32, i32* @x.75
  %116 = load i32, i32* @y.76
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %114, label %123, label %2190

; <label>:123:                                    ; preds = %originalBBpart28
  %124 = load double, double* %16, align 8
  %125 = fcmp oge double %124, 0.000000e+00
  br i1 %125, label %126, label %2190

; <label>:126:                                    ; preds = %123
  %127 = load double, double* %16, align 8
  %128 = fcmp olt double %127, 1.000000e+00
  br i1 %128, label %129, label %2190

; <label>:129:                                    ; preds = %126
  %130 = load i32, i32* @x.75
  %131 = load i32, i32* @y.76
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %129
  %138 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %139 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %138, i32 0, i32 10
  %140 = bitcast %union.anon.25* %139 to %"struct.pov::Density_file_Struct"**
  %141 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %140, align 8
  %142 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %141, i32 0, i32 0
  %143 = load i32, i32* %142, align 8
  %144 = srem i32 %143, 10
  %145 = load i32, i32* @x.75
  %146 = load i32, i32* @y.76
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBBpart215, label %originalBB10alteredBB

originalBBpart215:                                ; preds = %originalBB10
  switch i32 %144, label %1226 [
    i32 0, label %153
    i32 1, label %462
    i32 2, label %1225
  ]

; <label>:153:                                    ; preds = %originalBBpart215
  %154 = load i32, i32* @x.75
  %155 = load i32, i32* @y.76
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %originalBB17alteredBB, %153
  %162 = load double, double* %14, align 8
  %163 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %164 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %163, i32 0, i32 2
  %165 = load i32, i32* %164, align 8
  %166 = sitofp i32 %165 to double
  %167 = fmul double %162, %166
  %168 = fptosi double %167 to i32
  store i32 %168, i32* %5, align 4
  %169 = load double, double* %15, align 8
  %170 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %171 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %170, i32 0, i32 3
  %172 = load i32, i32* %171, align 4
  %173 = sitofp i32 %172 to double
  %174 = fmul double %169, %173
  %175 = fptosi double %174 to i32
  store i32 %175, i32* %6, align 4
  %176 = load double, double* %16, align 8
  %177 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %178 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %177, i32 0, i32 4
  %179 = load i32, i32* %178, align 8
  %180 = sitofp i32 %179 to double
  %181 = fmul double %176, %180
  %182 = fptosi double %181 to i32
  store i32 %182, i32* %7, align 4
  %183 = load i32, i32* %5, align 4
  %184 = icmp slt i32 %183, 0
  %185 = load i32, i32* @x.75
  %186 = load i32, i32* @y.76
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBBpart233, label %originalBB17alteredBB

originalBBpart233:                                ; preds = %originalBB17
  br i1 %184, label %249, label %193

; <label>:193:                                    ; preds = %originalBBpart233
  %194 = load i32, i32* %5, align 4
  %195 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %196 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %195, i32 0, i32 2
  %197 = load i32, i32* %196, align 8
  %198 = icmp sge i32 %194, %197
  br i1 %198, label %249, label %199

; <label>:199:                                    ; preds = %193
  %200 = load i32, i32* @x.75
  %201 = load i32, i32* @y.76
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %199
  %208 = load i32, i32* %6, align 4
  %209 = icmp slt i32 %208, 0
  %210 = load i32, i32* @x.75
  %211 = load i32, i32* @y.76
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br i1 %209, label %249, label %218

; <label>:218:                                    ; preds = %originalBBpart237
  %219 = load i32, i32* @x.75
  %220 = load i32, i32* @y.76
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %originalBB39alteredBB, %218
  %227 = load i32, i32* %6, align 4
  %228 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %229 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %228, i32 0, i32 3
  %230 = load i32, i32* %229, align 4
  %231 = icmp sge i32 %227, %230
  %232 = load i32, i32* @x.75
  %233 = load i32, i32* @y.76
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br i1 %231, label %249, label %240

; <label>:240:                                    ; preds = %originalBBpart241
  %241 = load i32, i32* %7, align 4
  %242 = icmp slt i32 %241, 0
  br i1 %242, label %249, label %243

; <label>:243:                                    ; preds = %240
  %244 = load i32, i32* %7, align 4
  %245 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %246 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %245, i32 0, i32 4
  %247 = load i32, i32* %246, align 8
  %248 = icmp sge i32 %244, %247
  br i1 %248, label %249, label %266

; <label>:249:                                    ; preds = %243, %240, %originalBBpart241, %originalBBpart237, %193, %originalBBpart233
  %250 = load i32, i32* @x.75
  %251 = load i32, i32* @y.76
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %originalBB43alteredBB, %249
  store double 0.000000e+00, double* %31, align 8
  %258 = load i32, i32* @x.75
  %259 = load i32, i32* @y.76
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %445

; <label>:266:                                    ; preds = %243
  %267 = load i32, i32* @x.75
  %268 = load i32, i32* @y.76
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %originalBB47alteredBB, %266
  %275 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %276 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %275, i32 0, i32 5
  %277 = load i32, i32* %276, align 4
  %278 = icmp eq i32 %277, 4
  %279 = load i32, i32* @x.75
  %280 = load i32, i32* @y.76
  %281 = sub i32 %279, 1
  %282 = mul i32 %279, %281
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %284, %285
  br i1 %286, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br i1 %278, label %287, label %314

; <label>:287:                                    ; preds = %originalBBpart249
  %288 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %289 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %288, i32 0, i32 6
  %290 = bitcast %union.anon.1* %289 to i32**
  %291 = load i32*, i32** %290, align 8
  %292 = load i32, i32* %7, align 4
  %293 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %294 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %293, i32 0, i32 3
  %295 = load i32, i32* %294, align 4
  %296 = mul nsw i32 %292, %295
  %297 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %298 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %297, i32 0, i32 2
  %299 = load i32, i32* %298, align 8
  %300 = mul nsw i32 %296, %299
  %301 = load i32, i32* %6, align 4
  %302 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %303 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %302, i32 0, i32 2
  %304 = load i32, i32* %303, align 8
  %305 = mul nsw i32 %301, %304
  %306 = add nsw i32 %300, %305
  %307 = load i32, i32* %5, align 4
  %308 = add nsw i32 %306, %307
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i32, i32* %291, i64 %309
  %311 = load i32, i32* %310, align 4
  %312 = uitofp i32 %311 to double
  %313 = fdiv double %312, 0x41EFFFFFFFE00000
  store double %313, double* %31, align 8
  br label %444

; <label>:314:                                    ; preds = %originalBBpart249
  %315 = load i32, i32* @x.75
  %316 = load i32, i32* @y.76
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %originalBB51alteredBB, %314
  %323 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %324 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %323, i32 0, i32 5
  %325 = load i32, i32* %324, align 4
  %326 = icmp eq i32 %325, 2
  %327 = load i32, i32* @x.75
  %328 = load i32, i32* @y.76
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br i1 %326, label %335, label %378

; <label>:335:                                    ; preds = %originalBBpart253
  %336 = load i32, i32* @x.75
  %337 = load i32, i32* @y.76
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %originalBB55alteredBB, %335
  %344 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %345 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %344, i32 0, i32 6
  %346 = bitcast %union.anon.1* %345 to i16**
  %347 = load i16*, i16** %346, align 8
  %348 = load i32, i32* %7, align 4
  %349 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %350 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %349, i32 0, i32 3
  %351 = load i32, i32* %350, align 4
  %352 = mul nsw i32 %348, %351
  %353 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %354 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %353, i32 0, i32 2
  %355 = load i32, i32* %354, align 8
  %356 = mul nsw i32 %352, %355
  %357 = load i32, i32* %6, align 4
  %358 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %359 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %358, i32 0, i32 2
  %360 = load i32, i32* %359, align 8
  %361 = mul nsw i32 %357, %360
  %362 = add nsw i32 %356, %361
  %363 = load i32, i32* %5, align 4
  %364 = add nsw i32 %362, %363
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds i16, i16* %347, i64 %365
  %367 = load i16, i16* %366, align 2
  %368 = uitofp i16 %367 to double
  %369 = fdiv double %368, 6.553500e+04
  store double %369, double* %31, align 8
  %370 = load i32, i32* @x.75
  %371 = load i32, i32* @y.76
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBBpart290, label %originalBB55alteredBB

originalBBpart290:                                ; preds = %originalBB55
  br label %427

; <label>:378:                                    ; preds = %originalBBpart253
  %379 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %380 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %379, i32 0, i32 5
  %381 = load i32, i32* %380, align 4
  %382 = icmp eq i32 %381, 1
  br i1 %382, label %383, label %426

; <label>:383:                                    ; preds = %378
  %384 = load i32, i32* @x.75
  %385 = load i32, i32* @y.76
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %originalBB92alteredBB, %383
  %392 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %393 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %392, i32 0, i32 6
  %394 = bitcast %union.anon.1* %393 to i8**
  %395 = load i8*, i8** %394, align 8
  %396 = load i32, i32* %7, align 4
  %397 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %398 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %397, i32 0, i32 3
  %399 = load i32, i32* %398, align 4
  %400 = mul nsw i32 %396, %399
  %401 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %402 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %401, i32 0, i32 2
  %403 = load i32, i32* %402, align 8
  %404 = mul nsw i32 %400, %403
  %405 = load i32, i32* %6, align 4
  %406 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %407 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %406, i32 0, i32 2
  %408 = load i32, i32* %407, align 8
  %409 = mul nsw i32 %405, %408
  %410 = add nsw i32 %404, %409
  %411 = load i32, i32* %5, align 4
  %412 = add nsw i32 %410, %411
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds i8, i8* %395, i64 %413
  %415 = load i8, i8* %414, align 1
  %416 = uitofp i8 %415 to double
  %417 = fdiv double %416, 2.550000e+02
  store double %417, double* %31, align 8
  %418 = load i32, i32* @x.75
  %419 = load i32, i32* @y.76
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %originalBBpart2151, label %originalBB92alteredBB

originalBBpart2151:                               ; preds = %originalBB92
  br label %426

; <label>:426:                                    ; preds = %originalBBpart2151, %378
  br label %427

; <label>:427:                                    ; preds = %426, %originalBBpart290
  %428 = load i32, i32* @x.75
  %429 = load i32, i32* @y.76
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %originalBB153alteredBB, %427
  %436 = load i32, i32* @x.75
  %437 = load i32, i32* @y.76
  %438 = sub i32 %436, 1
  %439 = mul i32 %436, %438
  %440 = urem i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %437, 10
  %443 = or i1 %441, %442
  br i1 %443, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br label %444

; <label>:444:                                    ; preds = %originalBBpart2155, %287
  br label %445

; <label>:445:                                    ; preds = %444, %originalBBpart245
  %446 = load i32, i32* @x.75
  %447 = load i32, i32* @y.76
  %448 = sub i32 %446, 1
  %449 = mul i32 %446, %448
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %451, %452
  br i1 %453, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %originalBB157alteredBB, %445
  %454 = load i32, i32* @x.75
  %455 = load i32, i32* @y.76
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br label %2189

; <label>:462:                                    ; preds = %originalBBpart215
  %463 = load i32, i32* @x.75
  %464 = load i32, i32* @y.76
  %465 = sub i32 %463, 1
  %466 = mul i32 %463, %465
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %468, %469
  br i1 %470, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %originalBB161alteredBB, %462
  %471 = load double, double* %14, align 8
  %472 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %473 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %472, i32 0, i32 2
  %474 = load i32, i32* %473, align 8
  %475 = sitofp i32 %474 to double
  %476 = fmul double %471, %475
  store double %476, double* %17, align 8
  %477 = load double, double* %15, align 8
  %478 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %479 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %478, i32 0, i32 3
  %480 = load i32, i32* %479, align 4
  %481 = sitofp i32 %480 to double
  %482 = fmul double %477, %481
  store double %482, double* %18, align 8
  %483 = load double, double* %16, align 8
  %484 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %485 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %484, i32 0, i32 4
  %486 = load i32, i32* %485, align 8
  %487 = sitofp i32 %486 to double
  %488 = fmul double %483, %487
  store double %488, double* %19, align 8
  %489 = load double, double* %17, align 8
  %490 = fptosi double %489 to i32
  store i32 %490, i32* %8, align 4
  %491 = load double, double* %18, align 8
  %492 = fptosi double %491 to i32
  store i32 %492, i32* %9, align 4
  %493 = load double, double* %19, align 8
  %494 = fptosi double %493 to i32
  store i32 %494, i32* %10, align 4
  %495 = load i32, i32* %8, align 4
  %496 = add nsw i32 %495, 1
  %497 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %498 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %497, i32 0, i32 2
  %499 = load i32, i32* %498, align 8
  %500 = srem i32 %496, %499
  store i32 %500, i32* %11, align 4
  %501 = load i32, i32* %9, align 4
  %502 = add nsw i32 %501, 1
  %503 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %504 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %503, i32 0, i32 3
  %505 = load i32, i32* %504, align 4
  %506 = srem i32 %502, %505
  store i32 %506, i32* %12, align 4
  %507 = load i32, i32* %10, align 4
  %508 = add nsw i32 %507, 1
  %509 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %510 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %509, i32 0, i32 4
  %511 = load i32, i32* %510, align 8
  %512 = srem i32 %508, %511
  store i32 %512, i32* %13, align 4
  %513 = load double, double* %17, align 8
  %514 = call double @floor(double %513) #6
  %515 = load double, double* %17, align 8
  %516 = fsub double %515, %514
  store double %516, double* %17, align 8
  %517 = load double, double* %18, align 8
  %518 = call double @floor(double %517) #6
  %519 = load double, double* %18, align 8
  %520 = fsub double %519, %518
  store double %520, double* %18, align 8
  %521 = load double, double* %19, align 8
  %522 = call double @floor(double %521) #6
  %523 = load double, double* %19, align 8
  %524 = fsub double %523, %522
  store double %524, double* %19, align 8
  %525 = load double, double* %17, align 8
  %526 = fsub double 1.000000e+00, %525
  store double %526, double* %20, align 8
  %527 = load double, double* %18, align 8
  %528 = fsub double 1.000000e+00, %527
  store double %528, double* %21, align 8
  %529 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %530 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %529, i32 0, i32 5
  %531 = load i32, i32* %530, align 4
  %532 = icmp eq i32 %531, 4
  %533 = load i32, i32* @x.75
  %534 = load i32, i32* @y.76
  %535 = sub i32 %533, 1
  %536 = mul i32 %533, %535
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %534, 10
  %540 = or i1 %538, %539
  br i1 %540, label %originalBBpart2275, label %originalBB161alteredBB

originalBBpart2275:                               ; preds = %originalBB161
  br i1 %532, label %541, label %750

; <label>:541:                                    ; preds = %originalBBpart2275
  %542 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %543 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %542, i32 0, i32 6
  %544 = bitcast %union.anon.1* %543 to i32**
  %545 = load i32*, i32** %544, align 8
  %546 = load i32, i32* %10, align 4
  %547 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %548 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %547, i32 0, i32 3
  %549 = load i32, i32* %548, align 4
  %550 = mul nsw i32 %546, %549
  %551 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %552 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %551, i32 0, i32 2
  %553 = load i32, i32* %552, align 8
  %554 = mul nsw i32 %550, %553
  %555 = load i32, i32* %9, align 4
  %556 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %557 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %556, i32 0, i32 2
  %558 = load i32, i32* %557, align 8
  %559 = mul nsw i32 %555, %558
  %560 = add nsw i32 %554, %559
  %561 = load i32, i32* %8, align 4
  %562 = add nsw i32 %560, %561
  %563 = sext i32 %562 to i64
  %564 = getelementptr inbounds i32, i32* %545, i64 %563
  %565 = load i32, i32* %564, align 4
  %566 = uitofp i32 %565 to double
  %567 = fdiv double %566, 0x41EFFFFFFFE00000
  store double %567, double* %22, align 8
  %568 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %569 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %568, i32 0, i32 6
  %570 = bitcast %union.anon.1* %569 to i32**
  %571 = load i32*, i32** %570, align 8
  %572 = load i32, i32* %10, align 4
  %573 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %574 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %573, i32 0, i32 3
  %575 = load i32, i32* %574, align 4
  %576 = mul nsw i32 %572, %575
  %577 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %578 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %577, i32 0, i32 2
  %579 = load i32, i32* %578, align 8
  %580 = mul nsw i32 %576, %579
  %581 = load i32, i32* %9, align 4
  %582 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %583 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %582, i32 0, i32 2
  %584 = load i32, i32* %583, align 8
  %585 = mul nsw i32 %581, %584
  %586 = add nsw i32 %580, %585
  %587 = load i32, i32* %11, align 4
  %588 = add nsw i32 %586, %587
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds i32, i32* %571, i64 %589
  %591 = load i32, i32* %590, align 4
  %592 = uitofp i32 %591 to double
  %593 = fdiv double %592, 0x41EFFFFFFFE00000
  store double %593, double* %23, align 8
  %594 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %595 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %594, i32 0, i32 6
  %596 = bitcast %union.anon.1* %595 to i32**
  %597 = load i32*, i32** %596, align 8
  %598 = load i32, i32* %10, align 4
  %599 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %600 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %599, i32 0, i32 3
  %601 = load i32, i32* %600, align 4
  %602 = mul nsw i32 %598, %601
  %603 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %604 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %603, i32 0, i32 2
  %605 = load i32, i32* %604, align 8
  %606 = mul nsw i32 %602, %605
  %607 = load i32, i32* %12, align 4
  %608 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %609 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %608, i32 0, i32 2
  %610 = load i32, i32* %609, align 8
  %611 = mul nsw i32 %607, %610
  %612 = add nsw i32 %606, %611
  %613 = load i32, i32* %8, align 4
  %614 = add nsw i32 %612, %613
  %615 = sext i32 %614 to i64
  %616 = getelementptr inbounds i32, i32* %597, i64 %615
  %617 = load i32, i32* %616, align 4
  %618 = uitofp i32 %617 to double
  %619 = fdiv double %618, 0x41EFFFFFFFE00000
  store double %619, double* %24, align 8
  %620 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %621 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %620, i32 0, i32 6
  %622 = bitcast %union.anon.1* %621 to i32**
  %623 = load i32*, i32** %622, align 8
  %624 = load i32, i32* %10, align 4
  %625 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %626 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %625, i32 0, i32 3
  %627 = load i32, i32* %626, align 4
  %628 = mul nsw i32 %624, %627
  %629 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %630 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %629, i32 0, i32 2
  %631 = load i32, i32* %630, align 8
  %632 = mul nsw i32 %628, %631
  %633 = load i32, i32* %12, align 4
  %634 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %635 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %634, i32 0, i32 2
  %636 = load i32, i32* %635, align 8
  %637 = mul nsw i32 %633, %636
  %638 = add nsw i32 %632, %637
  %639 = load i32, i32* %11, align 4
  %640 = add nsw i32 %638, %639
  %641 = sext i32 %640 to i64
  %642 = getelementptr inbounds i32, i32* %623, i64 %641
  %643 = load i32, i32* %642, align 4
  %644 = uitofp i32 %643 to double
  %645 = fdiv double %644, 0x41EFFFFFFFE00000
  store double %645, double* %25, align 8
  %646 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %647 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %646, i32 0, i32 6
  %648 = bitcast %union.anon.1* %647 to i32**
  %649 = load i32*, i32** %648, align 8
  %650 = load i32, i32* %13, align 4
  %651 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %652 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %651, i32 0, i32 3
  %653 = load i32, i32* %652, align 4
  %654 = mul nsw i32 %650, %653
  %655 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %656 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %655, i32 0, i32 2
  %657 = load i32, i32* %656, align 8
  %658 = mul nsw i32 %654, %657
  %659 = load i32, i32* %9, align 4
  %660 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %661 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %660, i32 0, i32 2
  %662 = load i32, i32* %661, align 8
  %663 = mul nsw i32 %659, %662
  %664 = add nsw i32 %658, %663
  %665 = load i32, i32* %8, align 4
  %666 = add nsw i32 %664, %665
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds i32, i32* %649, i64 %667
  %669 = load i32, i32* %668, align 4
  %670 = uitofp i32 %669 to double
  %671 = fdiv double %670, 0x41EFFFFFFFE00000
  store double %671, double* %26, align 8
  %672 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %673 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %672, i32 0, i32 6
  %674 = bitcast %union.anon.1* %673 to i32**
  %675 = load i32*, i32** %674, align 8
  %676 = load i32, i32* %13, align 4
  %677 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %678 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %677, i32 0, i32 3
  %679 = load i32, i32* %678, align 4
  %680 = mul nsw i32 %676, %679
  %681 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %682 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %681, i32 0, i32 2
  %683 = load i32, i32* %682, align 8
  %684 = mul nsw i32 %680, %683
  %685 = load i32, i32* %9, align 4
  %686 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %687 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %686, i32 0, i32 2
  %688 = load i32, i32* %687, align 8
  %689 = mul nsw i32 %685, %688
  %690 = add nsw i32 %684, %689
  %691 = load i32, i32* %11, align 4
  %692 = add nsw i32 %690, %691
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds i32, i32* %675, i64 %693
  %695 = load i32, i32* %694, align 4
  %696 = uitofp i32 %695 to double
  %697 = fdiv double %696, 0x41EFFFFFFFE00000
  store double %697, double* %27, align 8
  %698 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %699 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %698, i32 0, i32 6
  %700 = bitcast %union.anon.1* %699 to i32**
  %701 = load i32*, i32** %700, align 8
  %702 = load i32, i32* %13, align 4
  %703 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %704 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %703, i32 0, i32 3
  %705 = load i32, i32* %704, align 4
  %706 = mul nsw i32 %702, %705
  %707 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %708 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %707, i32 0, i32 2
  %709 = load i32, i32* %708, align 8
  %710 = mul nsw i32 %706, %709
  %711 = load i32, i32* %12, align 4
  %712 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %713 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %712, i32 0, i32 2
  %714 = load i32, i32* %713, align 8
  %715 = mul nsw i32 %711, %714
  %716 = add nsw i32 %710, %715
  %717 = load i32, i32* %8, align 4
  %718 = add nsw i32 %716, %717
  %719 = sext i32 %718 to i64
  %720 = getelementptr inbounds i32, i32* %701, i64 %719
  %721 = load i32, i32* %720, align 4
  %722 = uitofp i32 %721 to double
  %723 = fdiv double %722, 0x41EFFFFFFFE00000
  store double %723, double* %28, align 8
  %724 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %725 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %724, i32 0, i32 6
  %726 = bitcast %union.anon.1* %725 to i32**
  %727 = load i32*, i32** %726, align 8
  %728 = load i32, i32* %13, align 4
  %729 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %730 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %729, i32 0, i32 3
  %731 = load i32, i32* %730, align 4
  %732 = mul nsw i32 %728, %731
  %733 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %734 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %733, i32 0, i32 2
  %735 = load i32, i32* %734, align 8
  %736 = mul nsw i32 %732, %735
  %737 = load i32, i32* %12, align 4
  %738 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %739 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %738, i32 0, i32 2
  %740 = load i32, i32* %739, align 8
  %741 = mul nsw i32 %737, %740
  %742 = add nsw i32 %736, %741
  %743 = load i32, i32* %11, align 4
  %744 = add nsw i32 %742, %743
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds i32, i32* %727, i64 %745
  %747 = load i32, i32* %746, align 4
  %748 = uitofp i32 %747 to double
  %749 = fdiv double %748, 0x41EFFFFFFFE00000
  store double %749, double* %29, align 8
  br label %1180

; <label>:750:                                    ; preds = %originalBBpart2275
  %751 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %752 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %751, i32 0, i32 5
  %753 = load i32, i32* %752, align 4
  %754 = icmp eq i32 %753, 2
  br i1 %754, label %755, label %964

; <label>:755:                                    ; preds = %750
  %756 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %757 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %756, i32 0, i32 6
  %758 = bitcast %union.anon.1* %757 to i16**
  %759 = load i16*, i16** %758, align 8
  %760 = load i32, i32* %10, align 4
  %761 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %762 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %761, i32 0, i32 3
  %763 = load i32, i32* %762, align 4
  %764 = mul nsw i32 %760, %763
  %765 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %766 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %765, i32 0, i32 2
  %767 = load i32, i32* %766, align 8
  %768 = mul nsw i32 %764, %767
  %769 = load i32, i32* %9, align 4
  %770 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %771 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %770, i32 0, i32 2
  %772 = load i32, i32* %771, align 8
  %773 = mul nsw i32 %769, %772
  %774 = add nsw i32 %768, %773
  %775 = load i32, i32* %8, align 4
  %776 = add nsw i32 %774, %775
  %777 = sext i32 %776 to i64
  %778 = getelementptr inbounds i16, i16* %759, i64 %777
  %779 = load i16, i16* %778, align 2
  %780 = uitofp i16 %779 to double
  %781 = fdiv double %780, 6.553500e+04
  store double %781, double* %22, align 8
  %782 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %783 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %782, i32 0, i32 6
  %784 = bitcast %union.anon.1* %783 to i16**
  %785 = load i16*, i16** %784, align 8
  %786 = load i32, i32* %10, align 4
  %787 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %788 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %787, i32 0, i32 3
  %789 = load i32, i32* %788, align 4
  %790 = mul nsw i32 %786, %789
  %791 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %792 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %791, i32 0, i32 2
  %793 = load i32, i32* %792, align 8
  %794 = mul nsw i32 %790, %793
  %795 = load i32, i32* %9, align 4
  %796 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %797 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %796, i32 0, i32 2
  %798 = load i32, i32* %797, align 8
  %799 = mul nsw i32 %795, %798
  %800 = add nsw i32 %794, %799
  %801 = load i32, i32* %11, align 4
  %802 = add nsw i32 %800, %801
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds i16, i16* %785, i64 %803
  %805 = load i16, i16* %804, align 2
  %806 = uitofp i16 %805 to double
  %807 = fdiv double %806, 6.553500e+04
  store double %807, double* %23, align 8
  %808 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %809 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %808, i32 0, i32 6
  %810 = bitcast %union.anon.1* %809 to i16**
  %811 = load i16*, i16** %810, align 8
  %812 = load i32, i32* %10, align 4
  %813 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %814 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %813, i32 0, i32 3
  %815 = load i32, i32* %814, align 4
  %816 = mul nsw i32 %812, %815
  %817 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %818 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %817, i32 0, i32 2
  %819 = load i32, i32* %818, align 8
  %820 = mul nsw i32 %816, %819
  %821 = load i32, i32* %12, align 4
  %822 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %823 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %822, i32 0, i32 2
  %824 = load i32, i32* %823, align 8
  %825 = mul nsw i32 %821, %824
  %826 = add nsw i32 %820, %825
  %827 = load i32, i32* %8, align 4
  %828 = add nsw i32 %826, %827
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds i16, i16* %811, i64 %829
  %831 = load i16, i16* %830, align 2
  %832 = uitofp i16 %831 to double
  %833 = fdiv double %832, 6.553500e+04
  store double %833, double* %24, align 8
  %834 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %835 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %834, i32 0, i32 6
  %836 = bitcast %union.anon.1* %835 to i16**
  %837 = load i16*, i16** %836, align 8
  %838 = load i32, i32* %10, align 4
  %839 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %840 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %839, i32 0, i32 3
  %841 = load i32, i32* %840, align 4
  %842 = mul nsw i32 %838, %841
  %843 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %844 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %843, i32 0, i32 2
  %845 = load i32, i32* %844, align 8
  %846 = mul nsw i32 %842, %845
  %847 = load i32, i32* %12, align 4
  %848 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %849 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %848, i32 0, i32 2
  %850 = load i32, i32* %849, align 8
  %851 = mul nsw i32 %847, %850
  %852 = add nsw i32 %846, %851
  %853 = load i32, i32* %11, align 4
  %854 = add nsw i32 %852, %853
  %855 = sext i32 %854 to i64
  %856 = getelementptr inbounds i16, i16* %837, i64 %855
  %857 = load i16, i16* %856, align 2
  %858 = uitofp i16 %857 to double
  %859 = fdiv double %858, 6.553500e+04
  store double %859, double* %25, align 8
  %860 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %861 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %860, i32 0, i32 6
  %862 = bitcast %union.anon.1* %861 to i16**
  %863 = load i16*, i16** %862, align 8
  %864 = load i32, i32* %13, align 4
  %865 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %866 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %865, i32 0, i32 3
  %867 = load i32, i32* %866, align 4
  %868 = mul nsw i32 %864, %867
  %869 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %870 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %869, i32 0, i32 2
  %871 = load i32, i32* %870, align 8
  %872 = mul nsw i32 %868, %871
  %873 = load i32, i32* %9, align 4
  %874 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %875 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %874, i32 0, i32 2
  %876 = load i32, i32* %875, align 8
  %877 = mul nsw i32 %873, %876
  %878 = add nsw i32 %872, %877
  %879 = load i32, i32* %8, align 4
  %880 = add nsw i32 %878, %879
  %881 = sext i32 %880 to i64
  %882 = getelementptr inbounds i16, i16* %863, i64 %881
  %883 = load i16, i16* %882, align 2
  %884 = uitofp i16 %883 to double
  %885 = fdiv double %884, 6.553500e+04
  store double %885, double* %26, align 8
  %886 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %887 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %886, i32 0, i32 6
  %888 = bitcast %union.anon.1* %887 to i16**
  %889 = load i16*, i16** %888, align 8
  %890 = load i32, i32* %13, align 4
  %891 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %892 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %891, i32 0, i32 3
  %893 = load i32, i32* %892, align 4
  %894 = mul nsw i32 %890, %893
  %895 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %896 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %895, i32 0, i32 2
  %897 = load i32, i32* %896, align 8
  %898 = mul nsw i32 %894, %897
  %899 = load i32, i32* %9, align 4
  %900 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %901 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %900, i32 0, i32 2
  %902 = load i32, i32* %901, align 8
  %903 = mul nsw i32 %899, %902
  %904 = add nsw i32 %898, %903
  %905 = load i32, i32* %11, align 4
  %906 = add nsw i32 %904, %905
  %907 = sext i32 %906 to i64
  %908 = getelementptr inbounds i16, i16* %889, i64 %907
  %909 = load i16, i16* %908, align 2
  %910 = uitofp i16 %909 to double
  %911 = fdiv double %910, 6.553500e+04
  store double %911, double* %27, align 8
  %912 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %913 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %912, i32 0, i32 6
  %914 = bitcast %union.anon.1* %913 to i16**
  %915 = load i16*, i16** %914, align 8
  %916 = load i32, i32* %13, align 4
  %917 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %918 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %917, i32 0, i32 3
  %919 = load i32, i32* %918, align 4
  %920 = mul nsw i32 %916, %919
  %921 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %922 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %921, i32 0, i32 2
  %923 = load i32, i32* %922, align 8
  %924 = mul nsw i32 %920, %923
  %925 = load i32, i32* %12, align 4
  %926 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %927 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %926, i32 0, i32 2
  %928 = load i32, i32* %927, align 8
  %929 = mul nsw i32 %925, %928
  %930 = add nsw i32 %924, %929
  %931 = load i32, i32* %8, align 4
  %932 = add nsw i32 %930, %931
  %933 = sext i32 %932 to i64
  %934 = getelementptr inbounds i16, i16* %915, i64 %933
  %935 = load i16, i16* %934, align 2
  %936 = uitofp i16 %935 to double
  %937 = fdiv double %936, 6.553500e+04
  store double %937, double* %28, align 8
  %938 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %939 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %938, i32 0, i32 6
  %940 = bitcast %union.anon.1* %939 to i16**
  %941 = load i16*, i16** %940, align 8
  %942 = load i32, i32* %13, align 4
  %943 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %944 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %943, i32 0, i32 3
  %945 = load i32, i32* %944, align 4
  %946 = mul nsw i32 %942, %945
  %947 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %948 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %947, i32 0, i32 2
  %949 = load i32, i32* %948, align 8
  %950 = mul nsw i32 %946, %949
  %951 = load i32, i32* %12, align 4
  %952 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %953 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %952, i32 0, i32 2
  %954 = load i32, i32* %953, align 8
  %955 = mul nsw i32 %951, %954
  %956 = add nsw i32 %950, %955
  %957 = load i32, i32* %11, align 4
  %958 = add nsw i32 %956, %957
  %959 = sext i32 %958 to i64
  %960 = getelementptr inbounds i16, i16* %941, i64 %959
  %961 = load i16, i16* %960, align 2
  %962 = uitofp i16 %961 to double
  %963 = fdiv double %962, 6.553500e+04
  store double %963, double* %29, align 8
  br label %1179

; <label>:964:                                    ; preds = %750
  %965 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %966 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %965, i32 0, i32 5
  %967 = load i32, i32* %966, align 4
  %968 = icmp eq i32 %967, 1
  br i1 %968, label %969, label %1178

; <label>:969:                                    ; preds = %964
  %970 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %971 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %970, i32 0, i32 6
  %972 = bitcast %union.anon.1* %971 to i8**
  %973 = load i8*, i8** %972, align 8
  %974 = load i32, i32* %10, align 4
  %975 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %976 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %975, i32 0, i32 3
  %977 = load i32, i32* %976, align 4
  %978 = mul nsw i32 %974, %977
  %979 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %980 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %979, i32 0, i32 2
  %981 = load i32, i32* %980, align 8
  %982 = mul nsw i32 %978, %981
  %983 = load i32, i32* %9, align 4
  %984 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %985 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %984, i32 0, i32 2
  %986 = load i32, i32* %985, align 8
  %987 = mul nsw i32 %983, %986
  %988 = add nsw i32 %982, %987
  %989 = load i32, i32* %8, align 4
  %990 = add nsw i32 %988, %989
  %991 = sext i32 %990 to i64
  %992 = getelementptr inbounds i8, i8* %973, i64 %991
  %993 = load i8, i8* %992, align 1
  %994 = uitofp i8 %993 to double
  %995 = fdiv double %994, 2.550000e+02
  store double %995, double* %22, align 8
  %996 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %997 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %996, i32 0, i32 6
  %998 = bitcast %union.anon.1* %997 to i8**
  %999 = load i8*, i8** %998, align 8
  %1000 = load i32, i32* %10, align 4
  %1001 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1002 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1001, i32 0, i32 3
  %1003 = load i32, i32* %1002, align 4
  %1004 = mul nsw i32 %1000, %1003
  %1005 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1006 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1005, i32 0, i32 2
  %1007 = load i32, i32* %1006, align 8
  %1008 = mul nsw i32 %1004, %1007
  %1009 = load i32, i32* %9, align 4
  %1010 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1011 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1010, i32 0, i32 2
  %1012 = load i32, i32* %1011, align 8
  %1013 = mul nsw i32 %1009, %1012
  %1014 = add nsw i32 %1008, %1013
  %1015 = load i32, i32* %11, align 4
  %1016 = add nsw i32 %1014, %1015
  %1017 = sext i32 %1016 to i64
  %1018 = getelementptr inbounds i8, i8* %999, i64 %1017
  %1019 = load i8, i8* %1018, align 1
  %1020 = uitofp i8 %1019 to double
  %1021 = fdiv double %1020, 2.550000e+02
  store double %1021, double* %23, align 8
  %1022 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1023 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1022, i32 0, i32 6
  %1024 = bitcast %union.anon.1* %1023 to i8**
  %1025 = load i8*, i8** %1024, align 8
  %1026 = load i32, i32* %10, align 4
  %1027 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1028 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1027, i32 0, i32 3
  %1029 = load i32, i32* %1028, align 4
  %1030 = mul nsw i32 %1026, %1029
  %1031 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1032 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1031, i32 0, i32 2
  %1033 = load i32, i32* %1032, align 8
  %1034 = mul nsw i32 %1030, %1033
  %1035 = load i32, i32* %12, align 4
  %1036 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1037 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1036, i32 0, i32 2
  %1038 = load i32, i32* %1037, align 8
  %1039 = mul nsw i32 %1035, %1038
  %1040 = add nsw i32 %1034, %1039
  %1041 = load i32, i32* %8, align 4
  %1042 = add nsw i32 %1040, %1041
  %1043 = sext i32 %1042 to i64
  %1044 = getelementptr inbounds i8, i8* %1025, i64 %1043
  %1045 = load i8, i8* %1044, align 1
  %1046 = uitofp i8 %1045 to double
  %1047 = fdiv double %1046, 2.550000e+02
  store double %1047, double* %24, align 8
  %1048 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1049 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1048, i32 0, i32 6
  %1050 = bitcast %union.anon.1* %1049 to i8**
  %1051 = load i8*, i8** %1050, align 8
  %1052 = load i32, i32* %10, align 4
  %1053 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1054 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1053, i32 0, i32 3
  %1055 = load i32, i32* %1054, align 4
  %1056 = mul nsw i32 %1052, %1055
  %1057 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1058 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1057, i32 0, i32 2
  %1059 = load i32, i32* %1058, align 8
  %1060 = mul nsw i32 %1056, %1059
  %1061 = load i32, i32* %12, align 4
  %1062 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1063 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1062, i32 0, i32 2
  %1064 = load i32, i32* %1063, align 8
  %1065 = mul nsw i32 %1061, %1064
  %1066 = add nsw i32 %1060, %1065
  %1067 = load i32, i32* %11, align 4
  %1068 = add nsw i32 %1066, %1067
  %1069 = sext i32 %1068 to i64
  %1070 = getelementptr inbounds i8, i8* %1051, i64 %1069
  %1071 = load i8, i8* %1070, align 1
  %1072 = uitofp i8 %1071 to double
  %1073 = fdiv double %1072, 2.550000e+02
  store double %1073, double* %25, align 8
  %1074 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1075 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1074, i32 0, i32 6
  %1076 = bitcast %union.anon.1* %1075 to i8**
  %1077 = load i8*, i8** %1076, align 8
  %1078 = load i32, i32* %13, align 4
  %1079 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1080 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1079, i32 0, i32 3
  %1081 = load i32, i32* %1080, align 4
  %1082 = mul nsw i32 %1078, %1081
  %1083 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1084 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1083, i32 0, i32 2
  %1085 = load i32, i32* %1084, align 8
  %1086 = mul nsw i32 %1082, %1085
  %1087 = load i32, i32* %9, align 4
  %1088 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1089 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1088, i32 0, i32 2
  %1090 = load i32, i32* %1089, align 8
  %1091 = mul nsw i32 %1087, %1090
  %1092 = add nsw i32 %1086, %1091
  %1093 = load i32, i32* %8, align 4
  %1094 = add nsw i32 %1092, %1093
  %1095 = sext i32 %1094 to i64
  %1096 = getelementptr inbounds i8, i8* %1077, i64 %1095
  %1097 = load i8, i8* %1096, align 1
  %1098 = uitofp i8 %1097 to double
  %1099 = fdiv double %1098, 2.550000e+02
  store double %1099, double* %26, align 8
  %1100 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1101 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1100, i32 0, i32 6
  %1102 = bitcast %union.anon.1* %1101 to i8**
  %1103 = load i8*, i8** %1102, align 8
  %1104 = load i32, i32* %13, align 4
  %1105 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1106 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1105, i32 0, i32 3
  %1107 = load i32, i32* %1106, align 4
  %1108 = mul nsw i32 %1104, %1107
  %1109 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1110 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1109, i32 0, i32 2
  %1111 = load i32, i32* %1110, align 8
  %1112 = mul nsw i32 %1108, %1111
  %1113 = load i32, i32* %9, align 4
  %1114 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1115 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1114, i32 0, i32 2
  %1116 = load i32, i32* %1115, align 8
  %1117 = mul nsw i32 %1113, %1116
  %1118 = add nsw i32 %1112, %1117
  %1119 = load i32, i32* %11, align 4
  %1120 = add nsw i32 %1118, %1119
  %1121 = sext i32 %1120 to i64
  %1122 = getelementptr inbounds i8, i8* %1103, i64 %1121
  %1123 = load i8, i8* %1122, align 1
  %1124 = uitofp i8 %1123 to double
  %1125 = fdiv double %1124, 2.550000e+02
  store double %1125, double* %27, align 8
  %1126 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1127 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1126, i32 0, i32 6
  %1128 = bitcast %union.anon.1* %1127 to i8**
  %1129 = load i8*, i8** %1128, align 8
  %1130 = load i32, i32* %13, align 4
  %1131 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1132 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1131, i32 0, i32 3
  %1133 = load i32, i32* %1132, align 4
  %1134 = mul nsw i32 %1130, %1133
  %1135 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1136 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1135, i32 0, i32 2
  %1137 = load i32, i32* %1136, align 8
  %1138 = mul nsw i32 %1134, %1137
  %1139 = load i32, i32* %12, align 4
  %1140 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1141 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1140, i32 0, i32 2
  %1142 = load i32, i32* %1141, align 8
  %1143 = mul nsw i32 %1139, %1142
  %1144 = add nsw i32 %1138, %1143
  %1145 = load i32, i32* %8, align 4
  %1146 = add nsw i32 %1144, %1145
  %1147 = sext i32 %1146 to i64
  %1148 = getelementptr inbounds i8, i8* %1129, i64 %1147
  %1149 = load i8, i8* %1148, align 1
  %1150 = uitofp i8 %1149 to double
  %1151 = fdiv double %1150, 2.550000e+02
  store double %1151, double* %28, align 8
  %1152 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1153 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1152, i32 0, i32 6
  %1154 = bitcast %union.anon.1* %1153 to i8**
  %1155 = load i8*, i8** %1154, align 8
  %1156 = load i32, i32* %13, align 4
  %1157 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1158 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1157, i32 0, i32 3
  %1159 = load i32, i32* %1158, align 4
  %1160 = mul nsw i32 %1156, %1159
  %1161 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1162 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1161, i32 0, i32 2
  %1163 = load i32, i32* %1162, align 8
  %1164 = mul nsw i32 %1160, %1163
  %1165 = load i32, i32* %12, align 4
  %1166 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1167 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1166, i32 0, i32 2
  %1168 = load i32, i32* %1167, align 8
  %1169 = mul nsw i32 %1165, %1168
  %1170 = add nsw i32 %1164, %1169
  %1171 = load i32, i32* %11, align 4
  %1172 = add nsw i32 %1170, %1171
  %1173 = sext i32 %1172 to i64
  %1174 = getelementptr inbounds i8, i8* %1155, i64 %1173
  %1175 = load i8, i8* %1174, align 1
  %1176 = uitofp i8 %1175 to double
  %1177 = fdiv double %1176, 2.550000e+02
  store double %1177, double* %29, align 8
  br label %1178

; <label>:1178:                                   ; preds = %969, %964
  br label %1179

; <label>:1179:                                   ; preds = %1178, %755
  br label %1180

; <label>:1180:                                   ; preds = %1179, %541
  %1181 = load double, double* %22, align 8
  %1182 = load double, double* %20, align 8
  %1183 = fmul double %1181, %1182
  %1184 = load double, double* %23, align 8
  %1185 = load double, double* %17, align 8
  %1186 = fmul double %1184, %1185
  %1187 = fadd double %1183, %1186
  %1188 = load double, double* %21, align 8
  %1189 = fmul double %1187, %1188
  %1190 = load double, double* %24, align 8
  %1191 = load double, double* %20, align 8
  %1192 = fmul double %1190, %1191
  %1193 = load double, double* %25, align 8
  %1194 = load double, double* %17, align 8
  %1195 = fmul double %1193, %1194
  %1196 = fadd double %1192, %1195
  %1197 = load double, double* %18, align 8
  %1198 = fmul double %1196, %1197
  %1199 = fadd double %1189, %1198
  %1200 = load double, double* %19, align 8
  %1201 = fsub double 1.000000e+00, %1200
  %1202 = fmul double %1199, %1201
  %1203 = load double, double* %26, align 8
  %1204 = load double, double* %20, align 8
  %1205 = fmul double %1203, %1204
  %1206 = load double, double* %27, align 8
  %1207 = load double, double* %17, align 8
  %1208 = fmul double %1206, %1207
  %1209 = fadd double %1205, %1208
  %1210 = load double, double* %21, align 8
  %1211 = fmul double %1209, %1210
  %1212 = load double, double* %28, align 8
  %1213 = load double, double* %20, align 8
  %1214 = fmul double %1212, %1213
  %1215 = load double, double* %29, align 8
  %1216 = load double, double* %17, align 8
  %1217 = fmul double %1215, %1216
  %1218 = fadd double %1214, %1217
  %1219 = load double, double* %18, align 8
  %1220 = fmul double %1218, %1219
  %1221 = fadd double %1211, %1220
  %1222 = load double, double* %19, align 8
  %1223 = fmul double %1221, %1222
  %1224 = fadd double %1202, %1223
  store double %1224, double* %31, align 8
  br label %2189

; <label>:1225:                                   ; preds = %originalBBpart215
  br label %1226

; <label>:1226:                                   ; preds = %1225, %originalBBpart215
  %1227 = load i32, i32* @x.75
  %1228 = load i32, i32* @y.76
  %1229 = sub i32 %1227, 1
  %1230 = mul i32 %1227, %1229
  %1231 = urem i32 %1230, 2
  %1232 = icmp eq i32 %1231, 0
  %1233 = icmp slt i32 %1228, 10
  %1234 = or i1 %1232, %1233
  br i1 %1234, label %originalBB277, label %originalBB277alteredBB

originalBB277:                                    ; preds = %originalBB277alteredBB, %1226
  %1235 = load double, double* %14, align 8
  %1236 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1237 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1236, i32 0, i32 2
  %1238 = load i32, i32* %1237, align 8
  %1239 = sitofp i32 %1238 to double
  %1240 = fmul double %1235, %1239
  store double %1240, double* %17, align 8
  %1241 = load double, double* %15, align 8
  %1242 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1243 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1242, i32 0, i32 3
  %1244 = load i32, i32* %1243, align 4
  %1245 = sitofp i32 %1244 to double
  %1246 = fmul double %1241, %1245
  store double %1246, double* %18, align 8
  %1247 = load double, double* %16, align 8
  %1248 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1249 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1248, i32 0, i32 4
  %1250 = load i32, i32* %1249, align 8
  %1251 = sitofp i32 %1250 to double
  %1252 = fmul double %1247, %1251
  store double %1252, double* %19, align 8
  %1253 = load double, double* %17, align 8
  %1254 = fptosi double %1253 to i32
  store i32 %1254, i32* %8, align 4
  %1255 = load double, double* %18, align 8
  %1256 = fptosi double %1255 to i32
  store i32 %1256, i32* %9, align 4
  %1257 = load double, double* %19, align 8
  %1258 = fptosi double %1257 to i32
  store i32 %1258, i32* %10, align 4
  %1259 = load double, double* %17, align 8
  %1260 = call double @floor(double %1259) #6
  %1261 = load double, double* %17, align 8
  %1262 = fsub double %1261, %1260
  store double %1262, double* %17, align 8
  %1263 = load double, double* %18, align 8
  %1264 = call double @floor(double %1263) #6
  %1265 = load double, double* %18, align 8
  %1266 = fsub double %1265, %1264
  store double %1266, double* %18, align 8
  %1267 = load double, double* %19, align 8
  %1268 = call double @floor(double %1267) #6
  %1269 = load double, double* %19, align 8
  %1270 = fsub double %1269, %1268
  store double %1270, double* %19, align 8
  %1271 = load i32, i32* %10, align 4
  %1272 = add nsw i32 -1, %1271
  %1273 = icmp slt i32 %1272, 0
  %1274 = load i32, i32* @x.75
  %1275 = load i32, i32* @y.76
  %1276 = sub i32 %1274, 1
  %1277 = mul i32 %1274, %1276
  %1278 = urem i32 %1277, 2
  %1279 = icmp eq i32 %1278, 0
  %1280 = icmp slt i32 %1275, 10
  %1281 = or i1 %1279, %1280
  br i1 %1281, label %originalBBpart2332, label %originalBB277alteredBB

originalBBpart2332:                               ; preds = %originalBB277
  br i1 %1273, label %1282, label %1287

; <label>:1282:                                   ; preds = %originalBBpart2332
  %1283 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1284 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1283, i32 0, i32 4
  %1285 = load i32, i32* %1284, align 8
  %1286 = sub nsw i32 %1285, 1
  br label %1294

; <label>:1287:                                   ; preds = %originalBBpart2332
  %1288 = load i32, i32* %10, align 4
  %1289 = add nsw i32 -1, %1288
  %1290 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1291 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1290, i32 0, i32 4
  %1292 = load i32, i32* %1291, align 8
  %1293 = srem i32 %1289, %1292
  br label %1294

; <label>:1294:                                   ; preds = %1287, %1282
  %1295 = phi i32 [ %1286, %1282 ], [ %1293, %1287 ]
  store i32 %1295, i32* %33, align 4
  %1296 = load i32, i32* %10, align 4
  %1297 = icmp slt i32 %1296, 0
  br i1 %1297, label %1298, label %1303

; <label>:1298:                                   ; preds = %1294
  %1299 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1300 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1299, i32 0, i32 4
  %1301 = load i32, i32* %1300, align 8
  %1302 = sub nsw i32 %1301, 1
  br label %1309

; <label>:1303:                                   ; preds = %1294
  %1304 = load i32, i32* %10, align 4
  %1305 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1306 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1305, i32 0, i32 4
  %1307 = load i32, i32* %1306, align 8
  %1308 = srem i32 %1304, %1307
  br label %1309

; <label>:1309:                                   ; preds = %1303, %1298
  %1310 = phi i32 [ %1302, %1298 ], [ %1308, %1303 ]
  store i32 %1310, i32* %34, align 4
  %1311 = load i32, i32* %10, align 4
  %1312 = add nsw i32 1, %1311
  %1313 = icmp slt i32 %1312, 0
  br i1 %1313, label %1314, label %1319

; <label>:1314:                                   ; preds = %1309
  %1315 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1316 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1315, i32 0, i32 4
  %1317 = load i32, i32* %1316, align 8
  %1318 = sub nsw i32 %1317, 1
  br label %1326

; <label>:1319:                                   ; preds = %1309
  %1320 = load i32, i32* %10, align 4
  %1321 = add nsw i32 1, %1320
  %1322 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1323 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1322, i32 0, i32 4
  %1324 = load i32, i32* %1323, align 8
  %1325 = srem i32 %1321, %1324
  br label %1326

; <label>:1326:                                   ; preds = %1319, %1314
  %1327 = phi i32 [ %1318, %1314 ], [ %1325, %1319 ]
  store i32 %1327, i32* %35, align 4
  %1328 = load i32, i32* %10, align 4
  %1329 = add nsw i32 2, %1328
  %1330 = icmp slt i32 %1329, 0
  br i1 %1330, label %1331, label %1352

; <label>:1331:                                   ; preds = %1326
  %1332 = load i32, i32* @x.75
  %1333 = load i32, i32* @y.76
  %1334 = sub i32 %1332, 1
  %1335 = mul i32 %1332, %1334
  %1336 = urem i32 %1335, 2
  %1337 = icmp eq i32 %1336, 0
  %1338 = icmp slt i32 %1333, 10
  %1339 = or i1 %1337, %1338
  br i1 %1339, label %originalBB334, label %originalBB334alteredBB

originalBB334:                                    ; preds = %originalBB334alteredBB, %1331
  %1340 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1341 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1340, i32 0, i32 4
  %1342 = load i32, i32* %1341, align 8
  %1343 = sub nsw i32 %1342, 1
  %1344 = load i32, i32* @x.75
  %1345 = load i32, i32* @y.76
  %1346 = sub i32 %1344, 1
  %1347 = mul i32 %1344, %1346
  %1348 = urem i32 %1347, 2
  %1349 = icmp eq i32 %1348, 0
  %1350 = icmp slt i32 %1345, 10
  %1351 = or i1 %1349, %1350
  br i1 %1351, label %originalBBpart2340, label %originalBB334alteredBB

originalBBpart2340:                               ; preds = %originalBB334
  br label %1359

; <label>:1352:                                   ; preds = %1326
  %1353 = load i32, i32* %10, align 4
  %1354 = add nsw i32 2, %1353
  %1355 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1356 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1355, i32 0, i32 4
  %1357 = load i32, i32* %1356, align 8
  %1358 = srem i32 %1354, %1357
  br label %1359

; <label>:1359:                                   ; preds = %1352, %originalBBpart2340
  %1360 = phi i32 [ %1343, %originalBBpart2340 ], [ %1358, %1352 ]
  store i32 %1360, i32* %36, align 4
  %1361 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1362 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1361, i32 0, i32 5
  %1363 = load i32, i32* %1362, align 4
  %1364 = icmp eq i32 %1363, 4
  br i1 %1364, label %1365, label %1589

; <label>:1365:                                   ; preds = %1359
  store i32 0, i32* %37, align 4
  br label %1366

; <label>:1366:                                   ; preds = %originalBBpart2366, %1365
  %1367 = load i32, i32* %37, align 4
  %1368 = icmp slt i32 %1367, 4
  br i1 %1368, label %1369, label %1588

; <label>:1369:                                   ; preds = %1366
  %1370 = load i32, i32* %37, align 4
  %1371 = load i32, i32* %8, align 4
  %1372 = add nsw i32 %1370, %1371
  %1373 = sub nsw i32 %1372, 1
  %1374 = icmp slt i32 %1373, 0
  br i1 %1374, label %1375, label %1380

; <label>:1375:                                   ; preds = %1369
  %1376 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1377 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1376, i32 0, i32 2
  %1378 = load i32, i32* %1377, align 8
  %1379 = sub nsw i32 %1378, 1
  br label %1389

; <label>:1380:                                   ; preds = %1369
  %1381 = load i32, i32* %37, align 4
  %1382 = load i32, i32* %8, align 4
  %1383 = add nsw i32 %1381, %1382
  %1384 = sub nsw i32 %1383, 1
  %1385 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1386 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1385, i32 0, i32 2
  %1387 = load i32, i32* %1386, align 8
  %1388 = srem i32 %1384, %1387
  br label %1389

; <label>:1389:                                   ; preds = %1380, %1375
  %1390 = phi i32 [ %1379, %1375 ], [ %1388, %1380 ]
  store i32 %1390, i32* %39, align 4
  store i32 0, i32* %38, align 4
  br label %1391

; <label>:1391:                                   ; preds = %1549, %1389
  %1392 = load i32, i32* %38, align 4
  %1393 = icmp slt i32 %1392, 4
  br i1 %1393, label %1394, label %1552

; <label>:1394:                                   ; preds = %1391
  %1395 = load i32, i32* @x.75
  %1396 = load i32, i32* @y.76
  %1397 = sub i32 %1395, 1
  %1398 = mul i32 %1395, %1397
  %1399 = urem i32 %1398, 2
  %1400 = icmp eq i32 %1399, 0
  %1401 = icmp slt i32 %1396, 10
  %1402 = or i1 %1400, %1401
  br i1 %1402, label %originalBB342, label %originalBB342alteredBB

originalBB342:                                    ; preds = %originalBB342alteredBB, %1394
  %1403 = load i32, i32* %38, align 4
  %1404 = load i32, i32* %9, align 4
  %1405 = add nsw i32 %1403, %1404
  %1406 = sub nsw i32 %1405, 1
  %1407 = icmp slt i32 %1406, 0
  %1408 = load i32, i32* @x.75
  %1409 = load i32, i32* @y.76
  %1410 = sub i32 %1408, 1
  %1411 = mul i32 %1408, %1410
  %1412 = urem i32 %1411, 2
  %1413 = icmp eq i32 %1412, 0
  %1414 = icmp slt i32 %1409, 10
  %1415 = or i1 %1413, %1414
  br i1 %1415, label %originalBBpart2350, label %originalBB342alteredBB

originalBBpart2350:                               ; preds = %originalBB342
  br i1 %1407, label %1416, label %1421

; <label>:1416:                                   ; preds = %originalBBpart2350
  %1417 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1418 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1417, i32 0, i32 3
  %1419 = load i32, i32* %1418, align 4
  %1420 = sub nsw i32 %1419, 1
  br label %1430

; <label>:1421:                                   ; preds = %originalBBpart2350
  %1422 = load i32, i32* %38, align 4
  %1423 = load i32, i32* %9, align 4
  %1424 = add nsw i32 %1422, %1423
  %1425 = sub nsw i32 %1424, 1
  %1426 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1427 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1426, i32 0, i32 3
  %1428 = load i32, i32* %1427, align 4
  %1429 = srem i32 %1425, %1428
  br label %1430

; <label>:1430:                                   ; preds = %1421, %1416
  %1431 = phi i32 [ %1420, %1416 ], [ %1429, %1421 ]
  store i32 %1431, i32* %40, align 4
  %1432 = load double, double* %19, align 8
  %1433 = fptrunc double %1432 to float
  %1434 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1435 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1434, i32 0, i32 6
  %1436 = bitcast %union.anon.1* %1435 to i32**
  %1437 = load i32*, i32** %1436, align 8
  %1438 = load i32, i32* %33, align 4
  %1439 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1440 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1439, i32 0, i32 3
  %1441 = load i32, i32* %1440, align 4
  %1442 = mul nsw i32 %1438, %1441
  %1443 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1444 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1443, i32 0, i32 2
  %1445 = load i32, i32* %1444, align 8
  %1446 = mul nsw i32 %1442, %1445
  %1447 = load i32, i32* %40, align 4
  %1448 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1449 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1448, i32 0, i32 2
  %1450 = load i32, i32* %1449, align 8
  %1451 = mul nsw i32 %1447, %1450
  %1452 = add nsw i32 %1446, %1451
  %1453 = load i32, i32* %39, align 4
  %1454 = add nsw i32 %1452, %1453
  %1455 = sext i32 %1454 to i64
  %1456 = getelementptr inbounds i32, i32* %1437, i64 %1455
  %1457 = load i32, i32* %1456, align 4
  %1458 = uitofp i32 %1457 to double
  %1459 = fdiv double %1458, 0x41EFFFFFFFE00000
  %1460 = fptrunc double %1459 to float
  %1461 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1462 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1461, i32 0, i32 6
  %1463 = bitcast %union.anon.1* %1462 to i32**
  %1464 = load i32*, i32** %1463, align 8
  %1465 = load i32, i32* %34, align 4
  %1466 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1467 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1466, i32 0, i32 3
  %1468 = load i32, i32* %1467, align 4
  %1469 = mul nsw i32 %1465, %1468
  %1470 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1471 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1470, i32 0, i32 2
  %1472 = load i32, i32* %1471, align 8
  %1473 = mul nsw i32 %1469, %1472
  %1474 = load i32, i32* %40, align 4
  %1475 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1476 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1475, i32 0, i32 2
  %1477 = load i32, i32* %1476, align 8
  %1478 = mul nsw i32 %1474, %1477
  %1479 = add nsw i32 %1473, %1478
  %1480 = load i32, i32* %39, align 4
  %1481 = add nsw i32 %1479, %1480
  %1482 = sext i32 %1481 to i64
  %1483 = getelementptr inbounds i32, i32* %1464, i64 %1482
  %1484 = load i32, i32* %1483, align 4
  %1485 = uitofp i32 %1484 to double
  %1486 = fdiv double %1485, 0x41EFFFFFFFE00000
  %1487 = fptrunc double %1486 to float
  %1488 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1489 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1488, i32 0, i32 6
  %1490 = bitcast %union.anon.1* %1489 to i32**
  %1491 = load i32*, i32** %1490, align 8
  %1492 = load i32, i32* %35, align 4
  %1493 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1494 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1493, i32 0, i32 3
  %1495 = load i32, i32* %1494, align 4
  %1496 = mul nsw i32 %1492, %1495
  %1497 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1498 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1497, i32 0, i32 2
  %1499 = load i32, i32* %1498, align 8
  %1500 = mul nsw i32 %1496, %1499
  %1501 = load i32, i32* %40, align 4
  %1502 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1503 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1502, i32 0, i32 2
  %1504 = load i32, i32* %1503, align 8
  %1505 = mul nsw i32 %1501, %1504
  %1506 = add nsw i32 %1500, %1505
  %1507 = load i32, i32* %39, align 4
  %1508 = add nsw i32 %1506, %1507
  %1509 = sext i32 %1508 to i64
  %1510 = getelementptr inbounds i32, i32* %1491, i64 %1509
  %1511 = load i32, i32* %1510, align 4
  %1512 = uitofp i32 %1511 to double
  %1513 = fdiv double %1512, 0x41EFFFFFFFE00000
  %1514 = fptrunc double %1513 to float
  %1515 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1516 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1515, i32 0, i32 6
  %1517 = bitcast %union.anon.1* %1516 to i32**
  %1518 = load i32*, i32** %1517, align 8
  %1519 = load i32, i32* %36, align 4
  %1520 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1521 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1520, i32 0, i32 3
  %1522 = load i32, i32* %1521, align 4
  %1523 = mul nsw i32 %1519, %1522
  %1524 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1525 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1524, i32 0, i32 2
  %1526 = load i32, i32* %1525, align 8
  %1527 = mul nsw i32 %1523, %1526
  %1528 = load i32, i32* %40, align 4
  %1529 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1530 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1529, i32 0, i32 2
  %1531 = load i32, i32* %1530, align 8
  %1532 = mul nsw i32 %1528, %1531
  %1533 = add nsw i32 %1527, %1532
  %1534 = load i32, i32* %39, align 4
  %1535 = add nsw i32 %1533, %1534
  %1536 = sext i32 %1535 to i64
  %1537 = getelementptr inbounds i32, i32* %1518, i64 %1536
  %1538 = load i32, i32* %1537, align 4
  %1539 = uitofp i32 %1538 to double
  %1540 = fdiv double %1539, 0x41EFFFFFFFE00000
  %1541 = fptrunc double %1540 to float
  %1542 = call float @_ZN3pov5intp3Efffff(float %1433, float %1460, float %1487, float %1514, float %1541)
  %1543 = load i32, i32* %37, align 4
  %1544 = sext i32 %1543 to i64
  %1545 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %30, i64 0, i64 %1544
  %1546 = load i32, i32* %38, align 4
  %1547 = sext i32 %1546 to i64
  %1548 = getelementptr inbounds [4 x float], [4 x float]* %1545, i64 0, i64 %1547
  store float %1542, float* %1548, align 4
  br label %1549

; <label>:1549:                                   ; preds = %1430
  %1550 = load i32, i32* %38, align 4
  %1551 = add nsw i32 %1550, 1
  store i32 %1551, i32* %38, align 4
  br label %1391

; <label>:1552:                                   ; preds = %1391
  %1553 = load i32, i32* @x.75
  %1554 = load i32, i32* @y.76
  %1555 = sub i32 %1553, 1
  %1556 = mul i32 %1553, %1555
  %1557 = urem i32 %1556, 2
  %1558 = icmp eq i32 %1557, 0
  %1559 = icmp slt i32 %1554, 10
  %1560 = or i1 %1558, %1559
  br i1 %1560, label %originalBB352, label %originalBB352alteredBB

originalBB352:                                    ; preds = %originalBB352alteredBB, %1552
  %1561 = load i32, i32* @x.75
  %1562 = load i32, i32* @y.76
  %1563 = sub i32 %1561, 1
  %1564 = mul i32 %1561, %1563
  %1565 = urem i32 %1564, 2
  %1566 = icmp eq i32 %1565, 0
  %1567 = icmp slt i32 %1562, 10
  %1568 = or i1 %1566, %1567
  br i1 %1568, label %originalBBpart2354, label %originalBB352alteredBB

originalBBpart2354:                               ; preds = %originalBB352
  br label %1569

; <label>:1569:                                   ; preds = %originalBBpart2354
  %1570 = load i32, i32* @x.75
  %1571 = load i32, i32* @y.76
  %1572 = sub i32 %1570, 1
  %1573 = mul i32 %1570, %1572
  %1574 = urem i32 %1573, 2
  %1575 = icmp eq i32 %1574, 0
  %1576 = icmp slt i32 %1571, 10
  %1577 = or i1 %1575, %1576
  br i1 %1577, label %originalBB356, label %originalBB356alteredBB

originalBB356:                                    ; preds = %originalBB356alteredBB, %1569
  %1578 = load i32, i32* %37, align 4
  %1579 = add nsw i32 %1578, 1
  store i32 %1579, i32* %37, align 4
  %1580 = load i32, i32* @x.75
  %1581 = load i32, i32* @y.76
  %1582 = sub i32 %1580, 1
  %1583 = mul i32 %1580, %1582
  %1584 = urem i32 %1583, 2
  %1585 = icmp eq i32 %1584, 0
  %1586 = icmp slt i32 %1581, 10
  %1587 = or i1 %1585, %1586
  br i1 %1587, label %originalBBpart2366, label %originalBB356alteredBB

originalBBpart2366:                               ; preds = %originalBB356
  br label %1366

; <label>:1588:                                   ; preds = %1366
  br label %2105

; <label>:1589:                                   ; preds = %1359
  %1590 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1591 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1590, i32 0, i32 5
  %1592 = load i32, i32* %1591, align 4
  %1593 = icmp eq i32 %1592, 2
  br i1 %1593, label %1594, label %1854

; <label>:1594:                                   ; preds = %1589
  store i32 0, i32* %37, align 4
  br label %1595

; <label>:1595:                                   ; preds = %originalBBpart2585, %1594
  %1596 = load i32, i32* %37, align 4
  %1597 = icmp slt i32 %1596, 4
  br i1 %1597, label %1598, label %1853

; <label>:1598:                                   ; preds = %1595
  %1599 = load i32, i32* %37, align 4
  %1600 = load i32, i32* %8, align 4
  %1601 = add nsw i32 %1599, %1600
  %1602 = sub nsw i32 %1601, 1
  %1603 = icmp slt i32 %1602, 0
  br i1 %1603, label %1604, label %1625

; <label>:1604:                                   ; preds = %1598
  %1605 = load i32, i32* @x.75
  %1606 = load i32, i32* @y.76
  %1607 = sub i32 %1605, 1
  %1608 = mul i32 %1605, %1607
  %1609 = urem i32 %1608, 2
  %1610 = icmp eq i32 %1609, 0
  %1611 = icmp slt i32 %1606, 10
  %1612 = or i1 %1610, %1611
  br i1 %1612, label %originalBB368, label %originalBB368alteredBB

originalBB368:                                    ; preds = %originalBB368alteredBB, %1604
  %1613 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1614 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1613, i32 0, i32 2
  %1615 = load i32, i32* %1614, align 8
  %1616 = sub nsw i32 %1615, 1
  %1617 = load i32, i32* @x.75
  %1618 = load i32, i32* @y.76
  %1619 = sub i32 %1617, 1
  %1620 = mul i32 %1617, %1619
  %1621 = urem i32 %1620, 2
  %1622 = icmp eq i32 %1621, 0
  %1623 = icmp slt i32 %1618, 10
  %1624 = or i1 %1622, %1623
  br i1 %1624, label %originalBBpart2374, label %originalBB368alteredBB

originalBBpart2374:                               ; preds = %originalBB368
  br label %1650

; <label>:1625:                                   ; preds = %1598
  %1626 = load i32, i32* @x.75
  %1627 = load i32, i32* @y.76
  %1628 = sub i32 %1626, 1
  %1629 = mul i32 %1626, %1628
  %1630 = urem i32 %1629, 2
  %1631 = icmp eq i32 %1630, 0
  %1632 = icmp slt i32 %1627, 10
  %1633 = or i1 %1631, %1632
  br i1 %1633, label %originalBB376, label %originalBB376alteredBB

originalBB376:                                    ; preds = %originalBB376alteredBB, %1625
  %1634 = load i32, i32* %37, align 4
  %1635 = load i32, i32* %8, align 4
  %1636 = add nsw i32 %1634, %1635
  %1637 = sub nsw i32 %1636, 1
  %1638 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1639 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1638, i32 0, i32 2
  %1640 = load i32, i32* %1639, align 8
  %1641 = srem i32 %1637, %1640
  %1642 = load i32, i32* @x.75
  %1643 = load i32, i32* @y.76
  %1644 = sub i32 %1642, 1
  %1645 = mul i32 %1642, %1644
  %1646 = urem i32 %1645, 2
  %1647 = icmp eq i32 %1646, 0
  %1648 = icmp slt i32 %1643, 10
  %1649 = or i1 %1647, %1648
  br i1 %1649, label %originalBBpart2388, label %originalBB376alteredBB

originalBBpart2388:                               ; preds = %originalBB376
  br label %1650

; <label>:1650:                                   ; preds = %originalBBpart2388, %originalBBpart2374
  %1651 = phi i32 [ %1616, %originalBBpart2374 ], [ %1641, %originalBBpart2388 ]
  store i32 %1651, i32* %39, align 4
  store i32 0, i32* %38, align 4
  br label %1652

; <label>:1652:                                   ; preds = %1830, %1650
  %1653 = load i32, i32* %38, align 4
  %1654 = icmp slt i32 %1653, 4
  br i1 %1654, label %1655, label %1833

; <label>:1655:                                   ; preds = %1652
  %1656 = load i32, i32* @x.75
  %1657 = load i32, i32* @y.76
  %1658 = sub i32 %1656, 1
  %1659 = mul i32 %1656, %1658
  %1660 = urem i32 %1659, 2
  %1661 = icmp eq i32 %1660, 0
  %1662 = icmp slt i32 %1657, 10
  %1663 = or i1 %1661, %1662
  br i1 %1663, label %originalBB390, label %originalBB390alteredBB

originalBB390:                                    ; preds = %originalBB390alteredBB, %1655
  %1664 = load i32, i32* %38, align 4
  %1665 = load i32, i32* %9, align 4
  %1666 = add nsw i32 %1664, %1665
  %1667 = sub nsw i32 %1666, 1
  %1668 = icmp slt i32 %1667, 0
  %1669 = load i32, i32* @x.75
  %1670 = load i32, i32* @y.76
  %1671 = sub i32 %1669, 1
  %1672 = mul i32 %1669, %1671
  %1673 = urem i32 %1672, 2
  %1674 = icmp eq i32 %1673, 0
  %1675 = icmp slt i32 %1670, 10
  %1676 = or i1 %1674, %1675
  br i1 %1676, label %originalBBpart2401, label %originalBB390alteredBB

originalBBpart2401:                               ; preds = %originalBB390
  br i1 %1668, label %1677, label %1682

; <label>:1677:                                   ; preds = %originalBBpart2401
  %1678 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1679 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1678, i32 0, i32 3
  %1680 = load i32, i32* %1679, align 4
  %1681 = sub nsw i32 %1680, 1
  br label %1691

; <label>:1682:                                   ; preds = %originalBBpart2401
  %1683 = load i32, i32* %38, align 4
  %1684 = load i32, i32* %9, align 4
  %1685 = add nsw i32 %1683, %1684
  %1686 = sub nsw i32 %1685, 1
  %1687 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1688 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1687, i32 0, i32 3
  %1689 = load i32, i32* %1688, align 4
  %1690 = srem i32 %1686, %1689
  br label %1691

; <label>:1691:                                   ; preds = %1682, %1677
  %1692 = phi i32 [ %1681, %1677 ], [ %1690, %1682 ]
  %1693 = load i32, i32* @x.75
  %1694 = load i32, i32* @y.76
  %1695 = sub i32 %1693, 1
  %1696 = mul i32 %1693, %1695
  %1697 = urem i32 %1696, 2
  %1698 = icmp eq i32 %1697, 0
  %1699 = icmp slt i32 %1694, 10
  %1700 = or i1 %1698, %1699
  br i1 %1700, label %originalBB403, label %originalBB403alteredBB

originalBB403:                                    ; preds = %originalBB403alteredBB, %1691
  store i32 %1692, i32* %40, align 4
  %1701 = load double, double* %19, align 8
  %1702 = fptrunc double %1701 to float
  %1703 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1704 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1703, i32 0, i32 6
  %1705 = bitcast %union.anon.1* %1704 to i16**
  %1706 = load i16*, i16** %1705, align 8
  %1707 = load i32, i32* %33, align 4
  %1708 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1709 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1708, i32 0, i32 3
  %1710 = load i32, i32* %1709, align 4
  %1711 = mul nsw i32 %1707, %1710
  %1712 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1713 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1712, i32 0, i32 2
  %1714 = load i32, i32* %1713, align 8
  %1715 = mul nsw i32 %1711, %1714
  %1716 = load i32, i32* %40, align 4
  %1717 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1718 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1717, i32 0, i32 2
  %1719 = load i32, i32* %1718, align 8
  %1720 = mul nsw i32 %1716, %1719
  %1721 = add nsw i32 %1715, %1720
  %1722 = load i32, i32* %39, align 4
  %1723 = add nsw i32 %1721, %1722
  %1724 = sext i32 %1723 to i64
  %1725 = getelementptr inbounds i16, i16* %1706, i64 %1724
  %1726 = load i16, i16* %1725, align 2
  %1727 = zext i16 %1726 to i32
  %1728 = sitofp i32 %1727 to double
  %1729 = fdiv double %1728, 6.553500e+04
  %1730 = fptrunc double %1729 to float
  %1731 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1732 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1731, i32 0, i32 6
  %1733 = bitcast %union.anon.1* %1732 to i16**
  %1734 = load i16*, i16** %1733, align 8
  %1735 = load i32, i32* %34, align 4
  %1736 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1737 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1736, i32 0, i32 3
  %1738 = load i32, i32* %1737, align 4
  %1739 = mul nsw i32 %1735, %1738
  %1740 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1741 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1740, i32 0, i32 2
  %1742 = load i32, i32* %1741, align 8
  %1743 = mul nsw i32 %1739, %1742
  %1744 = load i32, i32* %40, align 4
  %1745 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1746 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1745, i32 0, i32 2
  %1747 = load i32, i32* %1746, align 8
  %1748 = mul nsw i32 %1744, %1747
  %1749 = add nsw i32 %1743, %1748
  %1750 = load i32, i32* %39, align 4
  %1751 = add nsw i32 %1749, %1750
  %1752 = sext i32 %1751 to i64
  %1753 = getelementptr inbounds i16, i16* %1734, i64 %1752
  %1754 = load i16, i16* %1753, align 2
  %1755 = zext i16 %1754 to i32
  %1756 = sitofp i32 %1755 to double
  %1757 = fdiv double %1756, 6.553500e+04
  %1758 = fptrunc double %1757 to float
  %1759 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1760 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1759, i32 0, i32 6
  %1761 = bitcast %union.anon.1* %1760 to i16**
  %1762 = load i16*, i16** %1761, align 8
  %1763 = load i32, i32* %35, align 4
  %1764 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1765 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1764, i32 0, i32 3
  %1766 = load i32, i32* %1765, align 4
  %1767 = mul nsw i32 %1763, %1766
  %1768 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1769 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1768, i32 0, i32 2
  %1770 = load i32, i32* %1769, align 8
  %1771 = mul nsw i32 %1767, %1770
  %1772 = load i32, i32* %40, align 4
  %1773 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1774 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1773, i32 0, i32 2
  %1775 = load i32, i32* %1774, align 8
  %1776 = mul nsw i32 %1772, %1775
  %1777 = add nsw i32 %1771, %1776
  %1778 = load i32, i32* %39, align 4
  %1779 = add nsw i32 %1777, %1778
  %1780 = sext i32 %1779 to i64
  %1781 = getelementptr inbounds i16, i16* %1762, i64 %1780
  %1782 = load i16, i16* %1781, align 2
  %1783 = zext i16 %1782 to i32
  %1784 = sitofp i32 %1783 to double
  %1785 = fdiv double %1784, 6.553500e+04
  %1786 = fptrunc double %1785 to float
  %1787 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1788 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1787, i32 0, i32 6
  %1789 = bitcast %union.anon.1* %1788 to i16**
  %1790 = load i16*, i16** %1789, align 8
  %1791 = load i32, i32* %36, align 4
  %1792 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1793 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1792, i32 0, i32 3
  %1794 = load i32, i32* %1793, align 4
  %1795 = mul nsw i32 %1791, %1794
  %1796 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1797 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1796, i32 0, i32 2
  %1798 = load i32, i32* %1797, align 8
  %1799 = mul nsw i32 %1795, %1798
  %1800 = load i32, i32* %40, align 4
  %1801 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1802 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1801, i32 0, i32 2
  %1803 = load i32, i32* %1802, align 8
  %1804 = mul nsw i32 %1800, %1803
  %1805 = add nsw i32 %1799, %1804
  %1806 = load i32, i32* %39, align 4
  %1807 = add nsw i32 %1805, %1806
  %1808 = sext i32 %1807 to i64
  %1809 = getelementptr inbounds i16, i16* %1790, i64 %1808
  %1810 = load i16, i16* %1809, align 2
  %1811 = zext i16 %1810 to i32
  %1812 = sitofp i32 %1811 to double
  %1813 = fdiv double %1812, 6.553500e+04
  %1814 = fptrunc double %1813 to float
  %1815 = call float @_ZN3pov5intp3Efffff(float %1702, float %1730, float %1758, float %1786, float %1814)
  %1816 = load i32, i32* %37, align 4
  %1817 = sext i32 %1816 to i64
  %1818 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %30, i64 0, i64 %1817
  %1819 = load i32, i32* %38, align 4
  %1820 = sext i32 %1819 to i64
  %1821 = getelementptr inbounds [4 x float], [4 x float]* %1818, i64 0, i64 %1820
  store float %1815, float* %1821, align 4
  %1822 = load i32, i32* @x.75
  %1823 = load i32, i32* @y.76
  %1824 = sub i32 %1822, 1
  %1825 = mul i32 %1822, %1824
  %1826 = urem i32 %1825, 2
  %1827 = icmp eq i32 %1826, 0
  %1828 = icmp slt i32 %1823, 10
  %1829 = or i1 %1827, %1828
  br i1 %1829, label %originalBBpart2573, label %originalBB403alteredBB

originalBBpart2573:                               ; preds = %originalBB403
  br label %1830

; <label>:1830:                                   ; preds = %originalBBpart2573
  %1831 = load i32, i32* %38, align 4
  %1832 = add nsw i32 %1831, 1
  store i32 %1832, i32* %38, align 4
  br label %1652

; <label>:1833:                                   ; preds = %1652
  br label %1834

; <label>:1834:                                   ; preds = %1833
  %1835 = load i32, i32* @x.75
  %1836 = load i32, i32* @y.76
  %1837 = sub i32 %1835, 1
  %1838 = mul i32 %1835, %1837
  %1839 = urem i32 %1838, 2
  %1840 = icmp eq i32 %1839, 0
  %1841 = icmp slt i32 %1836, 10
  %1842 = or i1 %1840, %1841
  br i1 %1842, label %originalBB575, label %originalBB575alteredBB

originalBB575:                                    ; preds = %originalBB575alteredBB, %1834
  %1843 = load i32, i32* %37, align 4
  %1844 = add nsw i32 %1843, 1
  store i32 %1844, i32* %37, align 4
  %1845 = load i32, i32* @x.75
  %1846 = load i32, i32* @y.76
  %1847 = sub i32 %1845, 1
  %1848 = mul i32 %1845, %1847
  %1849 = urem i32 %1848, 2
  %1850 = icmp eq i32 %1849, 0
  %1851 = icmp slt i32 %1846, 10
  %1852 = or i1 %1850, %1851
  br i1 %1852, label %originalBBpart2585, label %originalBB575alteredBB

originalBBpart2585:                               ; preds = %originalBB575
  br label %1595

; <label>:1853:                                   ; preds = %1595
  br label %2088

; <label>:1854:                                   ; preds = %1589
  %1855 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1856 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1855, i32 0, i32 5
  %1857 = load i32, i32* %1856, align 4
  %1858 = icmp eq i32 %1857, 1
  br i1 %1858, label %1859, label %2087

; <label>:1859:                                   ; preds = %1854
  store i32 0, i32* %37, align 4
  br label %1860

; <label>:1860:                                   ; preds = %2083, %1859
  %1861 = load i32, i32* %37, align 4
  %1862 = icmp slt i32 %1861, 4
  br i1 %1862, label %1863, label %2086

; <label>:1863:                                   ; preds = %1860
  %1864 = load i32, i32* %37, align 4
  %1865 = load i32, i32* %8, align 4
  %1866 = add nsw i32 %1864, %1865
  %1867 = sub nsw i32 %1866, 1
  %1868 = icmp slt i32 %1867, 0
  br i1 %1868, label %1869, label %1874

; <label>:1869:                                   ; preds = %1863
  %1870 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1871 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1870, i32 0, i32 2
  %1872 = load i32, i32* %1871, align 8
  %1873 = sub nsw i32 %1872, 1
  br label %1883

; <label>:1874:                                   ; preds = %1863
  %1875 = load i32, i32* %37, align 4
  %1876 = load i32, i32* %8, align 4
  %1877 = add nsw i32 %1875, %1876
  %1878 = sub nsw i32 %1877, 1
  %1879 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1880 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1879, i32 0, i32 2
  %1881 = load i32, i32* %1880, align 8
  %1882 = srem i32 %1878, %1881
  br label %1883

; <label>:1883:                                   ; preds = %1874, %1869
  %1884 = phi i32 [ %1873, %1869 ], [ %1882, %1874 ]
  store i32 %1884, i32* %39, align 4
  store i32 0, i32* %38, align 4
  br label %1885

; <label>:1885:                                   ; preds = %originalBBpart2598, %1883
  %1886 = load i32, i32* %38, align 4
  %1887 = icmp slt i32 %1886, 4
  br i1 %1887, label %1888, label %2066

; <label>:1888:                                   ; preds = %1885
  %1889 = load i32, i32* %38, align 4
  %1890 = load i32, i32* %9, align 4
  %1891 = add nsw i32 %1889, %1890
  %1892 = sub nsw i32 %1891, 1
  %1893 = icmp slt i32 %1892, 0
  br i1 %1893, label %1894, label %1915

; <label>:1894:                                   ; preds = %1888
  %1895 = load i32, i32* @x.75
  %1896 = load i32, i32* @y.76
  %1897 = sub i32 %1895, 1
  %1898 = mul i32 %1895, %1897
  %1899 = urem i32 %1898, 2
  %1900 = icmp eq i32 %1899, 0
  %1901 = icmp slt i32 %1896, 10
  %1902 = or i1 %1900, %1901
  br i1 %1902, label %originalBB587, label %originalBB587alteredBB

originalBB587:                                    ; preds = %originalBB587alteredBB, %1894
  %1903 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1904 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1903, i32 0, i32 3
  %1905 = load i32, i32* %1904, align 4
  %1906 = sub nsw i32 %1905, 1
  %1907 = load i32, i32* @x.75
  %1908 = load i32, i32* @y.76
  %1909 = sub i32 %1907, 1
  %1910 = mul i32 %1907, %1909
  %1911 = urem i32 %1910, 2
  %1912 = icmp eq i32 %1911, 0
  %1913 = icmp slt i32 %1908, 10
  %1914 = or i1 %1912, %1913
  br i1 %1914, label %originalBBpart2593, label %originalBB587alteredBB

originalBBpart2593:                               ; preds = %originalBB587
  br label %1924

; <label>:1915:                                   ; preds = %1888
  %1916 = load i32, i32* %38, align 4
  %1917 = load i32, i32* %9, align 4
  %1918 = add nsw i32 %1916, %1917
  %1919 = sub nsw i32 %1918, 1
  %1920 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1921 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1920, i32 0, i32 3
  %1922 = load i32, i32* %1921, align 4
  %1923 = srem i32 %1919, %1922
  br label %1924

; <label>:1924:                                   ; preds = %1915, %originalBBpart2593
  %1925 = phi i32 [ %1906, %originalBBpart2593 ], [ %1923, %1915 ]
  store i32 %1925, i32* %40, align 4
  %1926 = load double, double* %19, align 8
  %1927 = fptrunc double %1926 to float
  %1928 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1929 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1928, i32 0, i32 6
  %1930 = bitcast %union.anon.1* %1929 to i8**
  %1931 = load i8*, i8** %1930, align 8
  %1932 = load i32, i32* %33, align 4
  %1933 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1934 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1933, i32 0, i32 3
  %1935 = load i32, i32* %1934, align 4
  %1936 = mul nsw i32 %1932, %1935
  %1937 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1938 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1937, i32 0, i32 2
  %1939 = load i32, i32* %1938, align 8
  %1940 = mul nsw i32 %1936, %1939
  %1941 = load i32, i32* %40, align 4
  %1942 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1943 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1942, i32 0, i32 2
  %1944 = load i32, i32* %1943, align 8
  %1945 = mul nsw i32 %1941, %1944
  %1946 = add nsw i32 %1940, %1945
  %1947 = load i32, i32* %39, align 4
  %1948 = add nsw i32 %1946, %1947
  %1949 = sext i32 %1948 to i64
  %1950 = getelementptr inbounds i8, i8* %1931, i64 %1949
  %1951 = load i8, i8* %1950, align 1
  %1952 = zext i8 %1951 to i32
  %1953 = sitofp i32 %1952 to double
  %1954 = fdiv double %1953, 2.550000e+02
  %1955 = fptrunc double %1954 to float
  %1956 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1957 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1956, i32 0, i32 6
  %1958 = bitcast %union.anon.1* %1957 to i8**
  %1959 = load i8*, i8** %1958, align 8
  %1960 = load i32, i32* %34, align 4
  %1961 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1962 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1961, i32 0, i32 3
  %1963 = load i32, i32* %1962, align 4
  %1964 = mul nsw i32 %1960, %1963
  %1965 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1966 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1965, i32 0, i32 2
  %1967 = load i32, i32* %1966, align 8
  %1968 = mul nsw i32 %1964, %1967
  %1969 = load i32, i32* %40, align 4
  %1970 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1971 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1970, i32 0, i32 2
  %1972 = load i32, i32* %1971, align 8
  %1973 = mul nsw i32 %1969, %1972
  %1974 = add nsw i32 %1968, %1973
  %1975 = load i32, i32* %39, align 4
  %1976 = add nsw i32 %1974, %1975
  %1977 = sext i32 %1976 to i64
  %1978 = getelementptr inbounds i8, i8* %1959, i64 %1977
  %1979 = load i8, i8* %1978, align 1
  %1980 = zext i8 %1979 to i32
  %1981 = sitofp i32 %1980 to double
  %1982 = fdiv double %1981, 2.550000e+02
  %1983 = fptrunc double %1982 to float
  %1984 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1985 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1984, i32 0, i32 6
  %1986 = bitcast %union.anon.1* %1985 to i8**
  %1987 = load i8*, i8** %1986, align 8
  %1988 = load i32, i32* %35, align 4
  %1989 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1990 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1989, i32 0, i32 3
  %1991 = load i32, i32* %1990, align 4
  %1992 = mul nsw i32 %1988, %1991
  %1993 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1994 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1993, i32 0, i32 2
  %1995 = load i32, i32* %1994, align 8
  %1996 = mul nsw i32 %1992, %1995
  %1997 = load i32, i32* %40, align 4
  %1998 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %1999 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %1998, i32 0, i32 2
  %2000 = load i32, i32* %1999, align 8
  %2001 = mul nsw i32 %1997, %2000
  %2002 = add nsw i32 %1996, %2001
  %2003 = load i32, i32* %39, align 4
  %2004 = add nsw i32 %2002, %2003
  %2005 = sext i32 %2004 to i64
  %2006 = getelementptr inbounds i8, i8* %1987, i64 %2005
  %2007 = load i8, i8* %2006, align 1
  %2008 = zext i8 %2007 to i32
  %2009 = sitofp i32 %2008 to double
  %2010 = fdiv double %2009, 2.550000e+02
  %2011 = fptrunc double %2010 to float
  %2012 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2013 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2012, i32 0, i32 6
  %2014 = bitcast %union.anon.1* %2013 to i8**
  %2015 = load i8*, i8** %2014, align 8
  %2016 = load i32, i32* %36, align 4
  %2017 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2018 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2017, i32 0, i32 3
  %2019 = load i32, i32* %2018, align 4
  %2020 = mul nsw i32 %2016, %2019
  %2021 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2022 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2021, i32 0, i32 2
  %2023 = load i32, i32* %2022, align 8
  %2024 = mul nsw i32 %2020, %2023
  %2025 = load i32, i32* %40, align 4
  %2026 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2027 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2026, i32 0, i32 2
  %2028 = load i32, i32* %2027, align 8
  %2029 = mul nsw i32 %2025, %2028
  %2030 = add nsw i32 %2024, %2029
  %2031 = load i32, i32* %39, align 4
  %2032 = add nsw i32 %2030, %2031
  %2033 = sext i32 %2032 to i64
  %2034 = getelementptr inbounds i8, i8* %2015, i64 %2033
  %2035 = load i8, i8* %2034, align 1
  %2036 = zext i8 %2035 to i32
  %2037 = sitofp i32 %2036 to double
  %2038 = fdiv double %2037, 2.550000e+02
  %2039 = fptrunc double %2038 to float
  %2040 = call float @_ZN3pov5intp3Efffff(float %1927, float %1955, float %1983, float %2011, float %2039)
  %2041 = load i32, i32* %37, align 4
  %2042 = sext i32 %2041 to i64
  %2043 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %30, i64 0, i64 %2042
  %2044 = load i32, i32* %38, align 4
  %2045 = sext i32 %2044 to i64
  %2046 = getelementptr inbounds [4 x float], [4 x float]* %2043, i64 0, i64 %2045
  store float %2040, float* %2046, align 4
  br label %2047

; <label>:2047:                                   ; preds = %1924
  %2048 = load i32, i32* @x.75
  %2049 = load i32, i32* @y.76
  %2050 = sub i32 %2048, 1
  %2051 = mul i32 %2048, %2050
  %2052 = urem i32 %2051, 2
  %2053 = icmp eq i32 %2052, 0
  %2054 = icmp slt i32 %2049, 10
  %2055 = or i1 %2053, %2054
  br i1 %2055, label %originalBB595, label %originalBB595alteredBB

originalBB595:                                    ; preds = %originalBB595alteredBB, %2047
  %2056 = load i32, i32* %38, align 4
  %2057 = add nsw i32 %2056, 1
  store i32 %2057, i32* %38, align 4
  %2058 = load i32, i32* @x.75
  %2059 = load i32, i32* @y.76
  %2060 = sub i32 %2058, 1
  %2061 = mul i32 %2058, %2060
  %2062 = urem i32 %2061, 2
  %2063 = icmp eq i32 %2062, 0
  %2064 = icmp slt i32 %2059, 10
  %2065 = or i1 %2063, %2064
  br i1 %2065, label %originalBBpart2598, label %originalBB595alteredBB

originalBBpart2598:                               ; preds = %originalBB595
  br label %1885

; <label>:2066:                                   ; preds = %1885
  %2067 = load i32, i32* @x.75
  %2068 = load i32, i32* @y.76
  %2069 = sub i32 %2067, 1
  %2070 = mul i32 %2067, %2069
  %2071 = urem i32 %2070, 2
  %2072 = icmp eq i32 %2071, 0
  %2073 = icmp slt i32 %2068, 10
  %2074 = or i1 %2072, %2073
  br i1 %2074, label %originalBB600, label %originalBB600alteredBB

originalBB600:                                    ; preds = %originalBB600alteredBB, %2066
  %2075 = load i32, i32* @x.75
  %2076 = load i32, i32* @y.76
  %2077 = sub i32 %2075, 1
  %2078 = mul i32 %2075, %2077
  %2079 = urem i32 %2078, 2
  %2080 = icmp eq i32 %2079, 0
  %2081 = icmp slt i32 %2076, 10
  %2082 = or i1 %2080, %2081
  br i1 %2082, label %originalBBpart2602, label %originalBB600alteredBB

originalBBpart2602:                               ; preds = %originalBB600
  br label %2083

; <label>:2083:                                   ; preds = %originalBBpart2602
  %2084 = load i32, i32* %37, align 4
  %2085 = add nsw i32 %2084, 1
  store i32 %2085, i32* %37, align 4
  br label %1860

; <label>:2086:                                   ; preds = %1860
  br label %2087

; <label>:2087:                                   ; preds = %2086, %1854
  br label %2088

; <label>:2088:                                   ; preds = %2087, %1853
  %2089 = load i32, i32* @x.75
  %2090 = load i32, i32* @y.76
  %2091 = sub i32 %2089, 1
  %2092 = mul i32 %2089, %2091
  %2093 = urem i32 %2092, 2
  %2094 = icmp eq i32 %2093, 0
  %2095 = icmp slt i32 %2090, 10
  %2096 = or i1 %2094, %2095
  br i1 %2096, label %originalBB604, label %originalBB604alteredBB

originalBB604:                                    ; preds = %originalBB604alteredBB, %2088
  %2097 = load i32, i32* @x.75
  %2098 = load i32, i32* @y.76
  %2099 = sub i32 %2097, 1
  %2100 = mul i32 %2097, %2099
  %2101 = urem i32 %2100, 2
  %2102 = icmp eq i32 %2101, 0
  %2103 = icmp slt i32 %2098, 10
  %2104 = or i1 %2102, %2103
  br i1 %2104, label %originalBBpart2606, label %originalBB604alteredBB

originalBBpart2606:                               ; preds = %originalBB604
  br label %2105

; <label>:2105:                                   ; preds = %originalBBpart2606, %1588
  %2106 = load i32, i32* @x.75
  %2107 = load i32, i32* @y.76
  %2108 = sub i32 %2106, 1
  %2109 = mul i32 %2106, %2108
  %2110 = urem i32 %2109, 2
  %2111 = icmp eq i32 %2110, 0
  %2112 = icmp slt i32 %2107, 10
  %2113 = or i1 %2111, %2112
  br i1 %2113, label %originalBB608, label %originalBB608alteredBB

originalBB608:                                    ; preds = %originalBB608alteredBB, %2105
  store i32 0, i32* %37, align 4
  %2114 = load i32, i32* @x.75
  %2115 = load i32, i32* @y.76
  %2116 = sub i32 %2114, 1
  %2117 = mul i32 %2114, %2116
  %2118 = urem i32 %2117, 2
  %2119 = icmp eq i32 %2118, 0
  %2120 = icmp slt i32 %2115, 10
  %2121 = or i1 %2119, %2120
  br i1 %2121, label %originalBBpart2610, label %originalBB608alteredBB

originalBBpart2610:                               ; preds = %originalBB608
  br label %2122

; <label>:2122:                                   ; preds = %2169, %originalBBpart2610
  %2123 = load i32, i32* @x.75
  %2124 = load i32, i32* @y.76
  %2125 = sub i32 %2123, 1
  %2126 = mul i32 %2123, %2125
  %2127 = urem i32 %2126, 2
  %2128 = icmp eq i32 %2127, 0
  %2129 = icmp slt i32 %2124, 10
  %2130 = or i1 %2128, %2129
  br i1 %2130, label %originalBB612, label %originalBB612alteredBB

originalBB612:                                    ; preds = %originalBB612alteredBB, %2122
  %2131 = load i32, i32* %37, align 4
  %2132 = icmp slt i32 %2131, 4
  %2133 = load i32, i32* @x.75
  %2134 = load i32, i32* @y.76
  %2135 = sub i32 %2133, 1
  %2136 = mul i32 %2133, %2135
  %2137 = urem i32 %2136, 2
  %2138 = icmp eq i32 %2137, 0
  %2139 = icmp slt i32 %2134, 10
  %2140 = or i1 %2138, %2139
  br i1 %2140, label %originalBBpart2614, label %originalBB612alteredBB

originalBBpart2614:                               ; preds = %originalBB612
  br i1 %2132, label %2141, label %2172

; <label>:2141:                                   ; preds = %originalBBpart2614
  %2142 = load double, double* %18, align 8
  %2143 = fptrunc double %2142 to float
  %2144 = load i32, i32* %37, align 4
  %2145 = sext i32 %2144 to i64
  %2146 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %30, i64 0, i64 %2145
  %2147 = getelementptr inbounds [4 x float], [4 x float]* %2146, i64 0, i64 0
  %2148 = load float, float* %2147, align 16
  %2149 = load i32, i32* %37, align 4
  %2150 = sext i32 %2149 to i64
  %2151 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %30, i64 0, i64 %2150
  %2152 = getelementptr inbounds [4 x float], [4 x float]* %2151, i64 0, i64 1
  %2153 = load float, float* %2152, align 4
  %2154 = load i32, i32* %37, align 4
  %2155 = sext i32 %2154 to i64
  %2156 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %30, i64 0, i64 %2155
  %2157 = getelementptr inbounds [4 x float], [4 x float]* %2156, i64 0, i64 2
  %2158 = load float, float* %2157, align 8
  %2159 = load i32, i32* %37, align 4
  %2160 = sext i32 %2159 to i64
  %2161 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %30, i64 0, i64 %2160
  %2162 = getelementptr inbounds [4 x float], [4 x float]* %2161, i64 0, i64 3
  %2163 = load float, float* %2162, align 4
  %2164 = call float @_ZN3pov5intp3Efffff(float %2143, float %2148, float %2153, float %2158, float %2163)
  %2165 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %30, i64 0, i64 0
  %2166 = load i32, i32* %37, align 4
  %2167 = sext i32 %2166 to i64
  %2168 = getelementptr inbounds [4 x float], [4 x float]* %2165, i64 0, i64 %2167
  store float %2164, float* %2168, align 4
  br label %2169

; <label>:2169:                                   ; preds = %2141
  %2170 = load i32, i32* %37, align 4
  %2171 = add nsw i32 %2170, 1
  store i32 %2171, i32* %37, align 4
  br label %2122

; <label>:2172:                                   ; preds = %originalBBpart2614
  %2173 = load double, double* %17, align 8
  %2174 = fptrunc double %2173 to float
  %2175 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %30, i64 0, i64 0
  %2176 = getelementptr inbounds [4 x float], [4 x float]* %2175, i64 0, i64 0
  %2177 = load float, float* %2176, align 16
  %2178 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %30, i64 0, i64 0
  %2179 = getelementptr inbounds [4 x float], [4 x float]* %2178, i64 0, i64 1
  %2180 = load float, float* %2179, align 4
  %2181 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %30, i64 0, i64 0
  %2182 = getelementptr inbounds [4 x float], [4 x float]* %2181, i64 0, i64 2
  %2183 = load float, float* %2182, align 8
  %2184 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %30, i64 0, i64 0
  %2185 = getelementptr inbounds [4 x float], [4 x float]* %2184, i64 0, i64 3
  %2186 = load float, float* %2185, align 4
  %2187 = call float @_ZN3pov5intp3Efffff(float %2174, float %2177, float %2180, float %2183, float %2186)
  %2188 = fpext float %2187 to double
  store double %2188, double* %31, align 8
  br label %2189

; <label>:2189:                                   ; preds = %2172, %1180, %originalBBpart2159
  br label %2191

; <label>:2190:                                   ; preds = %126, %123, %originalBBpart28, %originalBBpart24, %82, %79
  store double 0.000000e+00, double* %31, align 8
  br label %2191

; <label>:2191:                                   ; preds = %2190, %2189
  br label %2192

; <label>:2192:                                   ; preds = %2191, %originalBBpart2, %2
  %2193 = load double, double* %31, align 8
  ret double %2193

originalBBalteredBB:                              ; preds = %originalBB, %55
  %2194 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %2195 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %2194, i32 0, i32 10
  %2196 = bitcast %union.anon.25* %2195 to %"struct.pov::Density_file_Struct"**
  %2197 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2196, align 8
  %2198 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %2197, i32 0, i32 1
  %2199 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %2198, align 8
  store %"struct.pov::Density_file_Data_Struct"* %2199, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2200 = icmp ne %"struct.pov::Density_file_Data_Struct"* %2199, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %85
  %2201 = load double, double* %15, align 8
  %2202 = fcmp oge double %2201, 0.000000e+00
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %104
  %2203 = load double, double* %15, align 8
  %2204 = fcmp olt double %2203, 1.000000e+00
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %129
  %2205 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %2206 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %2205, i32 0, i32 10
  %2207 = bitcast %union.anon.25* %2206 to %"struct.pov::Density_file_Struct"**
  %2208 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2207, align 8
  %2209 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %2208, i32 0, i32 0
  %2210 = load i32, i32* %2209, align 8
  %_ = sub i32 %2210, 10
  %gen = mul i32 %_, 10
  %_11 = sub i32 0, %2210
  %gen12 = add i32 %_11, 10
  %_13 = shl i32 %2210, 10
  %2211 = srem i32 %2210, 10
  br label %originalBB10

originalBB17alteredBB:                            ; preds = %originalBB17, %153
  %2212 = load double, double* %14, align 8
  %2213 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2214 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2213, i32 0, i32 2
  %2215 = load i32, i32* %2214, align 8
  %2216 = sitofp i32 %2215 to double
  %_18 = fsub double %2212, %2216
  %gen19 = fmul double %_18, %2216
  %_20 = fsub double %2212, %2216
  %gen21 = fmul double %_20, %2216
  %2217 = fmul double %2212, %2216
  %2218 = fptosi double %2217 to i32
  store i32 %2218, i32* %5, align 4
  %2219 = load double, double* %15, align 8
  %2220 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2221 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2220, i32 0, i32 3
  %2222 = load i32, i32* %2221, align 4
  %2223 = sitofp i32 %2222 to double
  %_22 = fsub double -0.000000e+00, %2219
  %gen23 = fadd double %_22, %2223
  %2224 = fmul double %2219, %2223
  %2225 = fptosi double %2224 to i32
  store i32 %2225, i32* %6, align 4
  %2226 = load double, double* %16, align 8
  %2227 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2228 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2227, i32 0, i32 4
  %2229 = load i32, i32* %2228, align 8
  %2230 = sitofp i32 %2229 to double
  %_24 = fsub double %2226, %2230
  %gen25 = fmul double %_24, %2230
  %_26 = fsub double -0.000000e+00, %2226
  %gen27 = fadd double %_26, %2230
  %_28 = fsub double %2226, %2230
  %gen29 = fmul double %_28, %2230
  %_30 = fsub double -0.000000e+00, %2226
  %gen31 = fadd double %_30, %2230
  %2231 = fmul double %2226, %2230
  %2232 = fptosi double %2231 to i32
  store i32 %2232, i32* %7, align 4
  %2233 = load i32, i32* %5, align 4
  %2234 = icmp slt i32 %2233, 0
  br label %originalBB17

originalBB35alteredBB:                            ; preds = %originalBB35, %199
  %2235 = load i32, i32* %6, align 4
  %2236 = icmp slt i32 %2235, 0
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %218
  %2237 = load i32, i32* %6, align 4
  %2238 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2239 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2238, i32 0, i32 3
  %2240 = load i32, i32* %2239, align 4
  %2241 = icmp sge i32 %2237, %2240
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %249
  store double 0.000000e+00, double* %31, align 8
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %266
  %2242 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2243 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2242, i32 0, i32 5
  %2244 = load i32, i32* %2243, align 4
  %2245 = icmp eq i32 %2244, 4
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %314
  %2246 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2247 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2246, i32 0, i32 5
  %2248 = load i32, i32* %2247, align 4
  %2249 = icmp eq i32 %2248, 2
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %335
  %2250 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2251 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2250, i32 0, i32 6
  %2252 = bitcast %union.anon.1* %2251 to i16**
  %2253 = load i16*, i16** %2252, align 8
  %2254 = load i32, i32* %7, align 4
  %2255 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2256 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2255, i32 0, i32 3
  %2257 = load i32, i32* %2256, align 4
  %_56 = shl i32 %2254, %2257
  %_57 = sub i32 0, %2254
  %gen58 = add i32 %_57, %2257
  %2258 = mul nsw i32 %2254, %2257
  %2259 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2260 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2259, i32 0, i32 2
  %2261 = load i32, i32* %2260, align 8
  %_59 = sub i32 0, %2258
  %gen60 = add i32 %_59, %2261
  %_61 = sub i32 %2258, %2261
  %gen62 = mul i32 %_61, %2261
  %_63 = sub i32 %2258, %2261
  %gen64 = mul i32 %_63, %2261
  %2262 = mul nsw i32 %2258, %2261
  %2263 = load i32, i32* %6, align 4
  %2264 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2265 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2264, i32 0, i32 2
  %2266 = load i32, i32* %2265, align 8
  %_65 = shl i32 %2263, %2266
  %2267 = mul nsw i32 %2263, %2266
  %_66 = sub i32 %2262, %2267
  %gen67 = mul i32 %_66, %2267
  %_68 = sub i32 %2262, %2267
  %gen69 = mul i32 %_68, %2267
  %_70 = sub i32 0, %2262
  %gen71 = add i32 %_70, %2267
  %_72 = sub i32 0, %2262
  %gen73 = add i32 %_72, %2267
  %_74 = shl i32 %2262, %2267
  %2268 = add nsw i32 %2262, %2267
  %2269 = load i32, i32* %5, align 4
  %_75 = shl i32 %2268, %2269
  %_76 = sub i32 0, %2268
  %gen77 = add i32 %_76, %2269
  %_78 = sub i32 %2268, %2269
  %gen79 = mul i32 %_78, %2269
  %_80 = sub i32 %2268, %2269
  %gen81 = mul i32 %_80, %2269
  %_82 = shl i32 %2268, %2269
  %2270 = add nsw i32 %2268, %2269
  %2271 = sext i32 %2270 to i64
  %2272 = getelementptr inbounds i16, i16* %2253, i64 %2271
  %2273 = load i16, i16* %2272, align 2
  %2274 = uitofp i16 %2273 to double
  %_83 = fsub double %2274, 6.553500e+04
  %gen84 = fmul double %_83, 6.553500e+04
  %_85 = fsub double %2274, 6.553500e+04
  %gen86 = fmul double %_85, 6.553500e+04
  %_87 = fsub double %2274, 6.553500e+04
  %gen88 = fmul double %_87, 6.553500e+04
  %2275 = fdiv double %2274, 6.553500e+04
  store double %2275, double* %31, align 8
  br label %originalBB55

originalBB92alteredBB:                            ; preds = %originalBB92, %383
  %2276 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2277 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2276, i32 0, i32 6
  %2278 = bitcast %union.anon.1* %2277 to i8**
  %2279 = load i8*, i8** %2278, align 8
  %2280 = load i32, i32* %7, align 4
  %2281 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2282 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2281, i32 0, i32 3
  %2283 = load i32, i32* %2282, align 4
  %_93 = shl i32 %2280, %2283
  %_94 = sub i32 %2280, %2283
  %gen95 = mul i32 %_94, %2283
  %_96 = shl i32 %2280, %2283
  %_97 = sub i32 0, %2280
  %gen98 = add i32 %_97, %2283
  %2284 = mul nsw i32 %2280, %2283
  %2285 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2286 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2285, i32 0, i32 2
  %2287 = load i32, i32* %2286, align 8
  %_99 = shl i32 %2284, %2287
  %_100 = shl i32 %2284, %2287
  %_101 = sub i32 0, %2284
  %gen102 = add i32 %_101, %2287
  %_103 = sub i32 %2284, %2287
  %gen104 = mul i32 %_103, %2287
  %_105 = sub i32 %2284, %2287
  %gen106 = mul i32 %_105, %2287
  %_107 = sub i32 0, %2284
  %gen108 = add i32 %_107, %2287
  %2288 = mul nsw i32 %2284, %2287
  %2289 = load i32, i32* %6, align 4
  %2290 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2291 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2290, i32 0, i32 2
  %2292 = load i32, i32* %2291, align 8
  %_109 = sub i32 0, %2289
  %gen110 = add i32 %_109, %2292
  %_111 = shl i32 %2289, %2292
  %_112 = sub i32 %2289, %2292
  %gen113 = mul i32 %_112, %2292
  %_114 = shl i32 %2289, %2292
  %2293 = mul nsw i32 %2289, %2292
  %_115 = shl i32 %2288, %2293
  %_116 = sub i32 %2288, %2293
  %gen117 = mul i32 %_116, %2293
  %_118 = shl i32 %2288, %2293
  %_119 = sub i32 0, %2288
  %gen120 = add i32 %_119, %2293
  %_121 = shl i32 %2288, %2293
  %_122 = sub i32 %2288, %2293
  %gen123 = mul i32 %_122, %2293
  %_124 = sub i32 0, %2288
  %gen125 = add i32 %_124, %2293
  %_126 = sub i32 %2288, %2293
  %gen127 = mul i32 %_126, %2293
  %2294 = add nsw i32 %2288, %2293
  %2295 = load i32, i32* %5, align 4
  %_128 = sub i32 %2294, %2295
  %gen129 = mul i32 %_128, %2295
  %_130 = shl i32 %2294, %2295
  %_131 = shl i32 %2294, %2295
  %_132 = sub i32 0, %2294
  %gen133 = add i32 %_132, %2295
  %_134 = sub i32 0, %2294
  %gen135 = add i32 %_134, %2295
  %2296 = add nsw i32 %2294, %2295
  %2297 = sext i32 %2296 to i64
  %2298 = getelementptr inbounds i8, i8* %2279, i64 %2297
  %2299 = load i8, i8* %2298, align 1
  %2300 = uitofp i8 %2299 to double
  %_136 = fsub double %2300, 2.550000e+02
  %gen137 = fmul double %_136, 2.550000e+02
  %_138 = fsub double -0.000000e+00, %2300
  %gen139 = fadd double %_138, 2.550000e+02
  %_140 = fsub double -0.000000e+00, %2300
  %gen141 = fadd double %_140, 2.550000e+02
  %_142 = fsub double %2300, 2.550000e+02
  %gen143 = fmul double %_142, 2.550000e+02
  %_144 = fsub double %2300, 2.550000e+02
  %gen145 = fmul double %_144, 2.550000e+02
  %_146 = fsub double %2300, 2.550000e+02
  %gen147 = fmul double %_146, 2.550000e+02
  %_148 = fsub double -0.000000e+00, %2300
  %gen149 = fadd double %_148, 2.550000e+02
  %2301 = fdiv double %2300, 2.550000e+02
  store double %2301, double* %31, align 8
  br label %originalBB92

originalBB153alteredBB:                           ; preds = %originalBB153, %427
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %445
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %462
  %2302 = load double, double* %14, align 8
  %2303 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2304 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2303, i32 0, i32 2
  %2305 = load i32, i32* %2304, align 8
  %2306 = sitofp i32 %2305 to double
  %2307 = fmul double %2302, %2306
  store double %2307, double* %17, align 8
  %2308 = load double, double* %15, align 8
  %2309 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2310 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2309, i32 0, i32 3
  %2311 = load i32, i32* %2310, align 4
  %2312 = sitofp i32 %2311 to double
  %_162 = fsub double %2308, %2312
  %gen163 = fmul double %_162, %2312
  %_164 = fsub double %2308, %2312
  %gen165 = fmul double %_164, %2312
  %_166 = fsub double -0.000000e+00, %2308
  %gen167 = fadd double %_166, %2312
  %_168 = fsub double -0.000000e+00, %2308
  %gen169 = fadd double %_168, %2312
  %_170 = fsub double %2308, %2312
  %gen171 = fmul double %_170, %2312
  %_172 = fsub double -0.000000e+00, %2308
  %gen173 = fadd double %_172, %2312
  %2313 = fmul double %2308, %2312
  store double %2313, double* %18, align 8
  %2314 = load double, double* %16, align 8
  %2315 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2316 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2315, i32 0, i32 4
  %2317 = load i32, i32* %2316, align 8
  %2318 = sitofp i32 %2317 to double
  %_174 = fsub double -0.000000e+00, %2314
  %gen175 = fadd double %_174, %2318
  %_176 = fsub double %2314, %2318
  %gen177 = fmul double %_176, %2318
  %_178 = fsub double %2314, %2318
  %gen179 = fmul double %_178, %2318
  %_180 = fsub double %2314, %2318
  %gen181 = fmul double %_180, %2318
  %_182 = fsub double %2314, %2318
  %gen183 = fmul double %_182, %2318
  %_184 = fsub double -0.000000e+00, %2314
  %gen185 = fadd double %_184, %2318
  %_186 = fsub double -0.000000e+00, %2314
  %gen187 = fadd double %_186, %2318
  %2319 = fmul double %2314, %2318
  store double %2319, double* %19, align 8
  %2320 = load double, double* %17, align 8
  %2321 = fptosi double %2320 to i32
  store i32 %2321, i32* %8, align 4
  %2322 = load double, double* %18, align 8
  %2323 = fptosi double %2322 to i32
  store i32 %2323, i32* %9, align 4
  %2324 = load double, double* %19, align 8
  %2325 = fptosi double %2324 to i32
  store i32 %2325, i32* %10, align 4
  %2326 = load i32, i32* %8, align 4
  %_188 = sub i32 %2326, 1
  %gen189 = mul i32 %_188, 1
  %_190 = shl i32 %2326, 1
  %2327 = add nsw i32 %2326, 1
  %2328 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2329 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2328, i32 0, i32 2
  %2330 = load i32, i32* %2329, align 8
  %_191 = sub i32 %2327, %2330
  %gen192 = mul i32 %_191, %2330
  %_193 = sub i32 %2327, %2330
  %gen194 = mul i32 %_193, %2330
  %_195 = sub i32 %2327, %2330
  %gen196 = mul i32 %_195, %2330
  %2331 = srem i32 %2327, %2330
  store i32 %2331, i32* %11, align 4
  %2332 = load i32, i32* %9, align 4
  %_197 = sub i32 %2332, 1
  %gen198 = mul i32 %_197, 1
  %_199 = sub i32 0, %2332
  %gen200 = add i32 %_199, 1
  %_201 = sub i32 %2332, 1
  %gen202 = mul i32 %_201, 1
  %_203 = shl i32 %2332, 1
  %_204 = sub i32 %2332, 1
  %gen205 = mul i32 %_204, 1
  %_206 = sub i32 %2332, 1
  %gen207 = mul i32 %_206, 1
  %_208 = shl i32 %2332, 1
  %_209 = shl i32 %2332, 1
  %2333 = add nsw i32 %2332, 1
  %2334 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2335 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2334, i32 0, i32 3
  %2336 = load i32, i32* %2335, align 4
  %_210 = sub i32 %2333, %2336
  %gen211 = mul i32 %_210, %2336
  %_212 = shl i32 %2333, %2336
  %_213 = shl i32 %2333, %2336
  %_214 = sub i32 %2333, %2336
  %gen215 = mul i32 %_214, %2336
  %_216 = sub i32 0, %2333
  %gen217 = add i32 %_216, %2336
  %2337 = srem i32 %2333, %2336
  store i32 %2337, i32* %12, align 4
  %2338 = load i32, i32* %10, align 4
  %_218 = sub i32 %2338, 1
  %gen219 = mul i32 %_218, 1
  %_220 = sub i32 %2338, 1
  %gen221 = mul i32 %_220, 1
  %_222 = sub i32 0, %2338
  %gen223 = add i32 %_222, 1
  %_224 = sub i32 %2338, 1
  %gen225 = mul i32 %_224, 1
  %_226 = sub i32 0, %2338
  %gen227 = add i32 %_226, 1
  %_228 = shl i32 %2338, 1
  %2339 = add nsw i32 %2338, 1
  %2340 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2341 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2340, i32 0, i32 4
  %2342 = load i32, i32* %2341, align 8
  %_229 = sub i32 0, %2339
  %gen230 = add i32 %_229, %2342
  %_231 = sub i32 0, %2339
  %gen232 = add i32 %_231, %2342
  %_233 = sub i32 0, %2339
  %gen234 = add i32 %_233, %2342
  %_235 = sub i32 0, %2339
  %gen236 = add i32 %_235, %2342
  %_237 = shl i32 %2339, %2342
  %_238 = shl i32 %2339, %2342
  %_239 = shl i32 %2339, %2342
  %_240 = sub i32 0, %2339
  %gen241 = add i32 %_240, %2342
  %2343 = srem i32 %2339, %2342
  store i32 %2343, i32* %13, align 4
  %2344 = load double, double* %17, align 8
  %2345 = call double @floor(double %2344) #6
  %2346 = load double, double* %17, align 8
  %_242 = fsub double -0.000000e+00, %2346
  %gen243 = fadd double %_242, %2345
  %_244 = fsub double -0.000000e+00, %2346
  %gen245 = fadd double %_244, %2345
  %_246 = fsub double -0.000000e+00, %2346
  %gen247 = fadd double %_246, %2345
  %_248 = fsub double %2346, %2345
  %gen249 = fmul double %_248, %2345
  %_250 = fsub double -0.000000e+00, %2346
  %gen251 = fadd double %_250, %2345
  %_252 = fsub double -0.000000e+00, %2346
  %gen253 = fadd double %_252, %2345
  %_254 = fsub double -0.000000e+00, %2346
  %gen255 = fadd double %_254, %2345
  %_256 = fsub double -0.000000e+00, %2346
  %gen257 = fadd double %_256, %2345
  %_258 = fsub double -0.000000e+00, %2346
  %gen259 = fadd double %_258, %2345
  %2347 = fsub double %2346, %2345
  store double %2347, double* %17, align 8
  %2348 = load double, double* %18, align 8
  %2349 = call double @floor(double %2348) #6
  %2350 = load double, double* %18, align 8
  %2351 = fsub double %2350, %2349
  store double %2351, double* %18, align 8
  %2352 = load double, double* %19, align 8
  %2353 = call double @floor(double %2352) #6
  %2354 = load double, double* %19, align 8
  %_260 = fsub double -0.000000e+00, %2354
  %gen261 = fadd double %_260, %2353
  %_262 = fsub double %2354, %2353
  %gen263 = fmul double %_262, %2353
  %_264 = fsub double %2354, %2353
  %gen265 = fmul double %_264, %2353
  %_266 = fsub double %2354, %2353
  %gen267 = fmul double %_266, %2353
  %2355 = fsub double %2354, %2353
  store double %2355, double* %19, align 8
  %2356 = load double, double* %17, align 8
  %_268 = fsub double 1.000000e+00, %2356
  %gen269 = fmul double %_268, %2356
  %_270 = fsub double -0.000000e+00, 1.000000e+00
  %gen271 = fadd double %_270, %2356
  %2357 = fsub double 1.000000e+00, %2356
  store double %2357, double* %20, align 8
  %2358 = load double, double* %18, align 8
  %_272 = fsub double 1.000000e+00, %2358
  %gen273 = fmul double %_272, %2358
  %2359 = fsub double 1.000000e+00, %2358
  store double %2359, double* %21, align 8
  %2360 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2361 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2360, i32 0, i32 5
  %2362 = load i32, i32* %2361, align 4
  %2363 = icmp eq i32 %2362, 4
  br label %originalBB161

originalBB277alteredBB:                           ; preds = %originalBB277, %1226
  %2364 = load double, double* %14, align 8
  %2365 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2366 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2365, i32 0, i32 2
  %2367 = load i32, i32* %2366, align 8
  %2368 = sitofp i32 %2367 to double
  %_278 = fsub double -0.000000e+00, %2364
  %gen279 = fadd double %_278, %2368
  %_280 = fsub double -0.000000e+00, %2364
  %gen281 = fadd double %_280, %2368
  %_282 = fsub double %2364, %2368
  %gen283 = fmul double %_282, %2368
  %_284 = fsub double -0.000000e+00, %2364
  %gen285 = fadd double %_284, %2368
  %2369 = fmul double %2364, %2368
  store double %2369, double* %17, align 8
  %2370 = load double, double* %15, align 8
  %2371 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2372 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2371, i32 0, i32 3
  %2373 = load i32, i32* %2372, align 4
  %2374 = sitofp i32 %2373 to double
  %_286 = fsub double %2370, %2374
  %gen287 = fmul double %_286, %2374
  %_288 = fsub double -0.000000e+00, %2370
  %gen289 = fadd double %_288, %2374
  %_290 = fsub double %2370, %2374
  %gen291 = fmul double %_290, %2374
  %_292 = fsub double %2370, %2374
  %gen293 = fmul double %_292, %2374
  %2375 = fmul double %2370, %2374
  store double %2375, double* %18, align 8
  %2376 = load double, double* %16, align 8
  %2377 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2378 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2377, i32 0, i32 4
  %2379 = load i32, i32* %2378, align 8
  %2380 = sitofp i32 %2379 to double
  %_294 = fsub double -0.000000e+00, %2376
  %gen295 = fadd double %_294, %2380
  %_296 = fsub double %2376, %2380
  %gen297 = fmul double %_296, %2380
  %_298 = fsub double %2376, %2380
  %gen299 = fmul double %_298, %2380
  %2381 = fmul double %2376, %2380
  store double %2381, double* %19, align 8
  %2382 = load double, double* %17, align 8
  %2383 = fptosi double %2382 to i32
  store i32 %2383, i32* %8, align 4
  %2384 = load double, double* %18, align 8
  %2385 = fptosi double %2384 to i32
  store i32 %2385, i32* %9, align 4
  %2386 = load double, double* %19, align 8
  %2387 = fptosi double %2386 to i32
  store i32 %2387, i32* %10, align 4
  %2388 = load double, double* %17, align 8
  %2389 = call double @floor(double %2388) #6
  %2390 = load double, double* %17, align 8
  %_300 = fsub double %2390, %2389
  %gen301 = fmul double %_300, %2389
  %_302 = fsub double -0.000000e+00, %2390
  %gen303 = fadd double %_302, %2389
  %_304 = fsub double %2390, %2389
  %gen305 = fmul double %_304, %2389
  %2391 = fsub double %2390, %2389
  store double %2391, double* %17, align 8
  %2392 = load double, double* %18, align 8
  %2393 = call double @floor(double %2392) #6
  %2394 = load double, double* %18, align 8
  %_306 = fsub double %2394, %2393
  %gen307 = fmul double %_306, %2393
  %_308 = fsub double %2394, %2393
  %gen309 = fmul double %_308, %2393
  %_310 = fsub double -0.000000e+00, %2394
  %gen311 = fadd double %_310, %2393
  %2395 = fsub double %2394, %2393
  store double %2395, double* %18, align 8
  %2396 = load double, double* %19, align 8
  %2397 = call double @floor(double %2396) #6
  %2398 = load double, double* %19, align 8
  %_312 = fsub double -0.000000e+00, %2398
  %gen313 = fadd double %_312, %2397
  %_314 = fsub double -0.000000e+00, %2398
  %gen315 = fadd double %_314, %2397
  %_316 = fsub double -0.000000e+00, %2398
  %gen317 = fadd double %_316, %2397
  %_318 = fsub double %2398, %2397
  %gen319 = fmul double %_318, %2397
  %_320 = fsub double %2398, %2397
  %gen321 = fmul double %_320, %2397
  %2399 = fsub double %2398, %2397
  store double %2399, double* %19, align 8
  %2400 = load i32, i32* %10, align 4
  %_322 = sub i32 -1, %2400
  %gen323 = mul i32 %_322, %2400
  %_324 = shl i32 -1, %2400
  %_325 = sub i32 -1, %2400
  %gen326 = mul i32 %_325, %2400
  %_327 = shl i32 -1, %2400
  %_328 = shl i32 -1, %2400
  %_329 = sub i32 -1, %2400
  %gen330 = mul i32 %_329, %2400
  %2401 = add nsw i32 -1, %2400
  %2402 = icmp slt i32 %2401, 0
  br label %originalBB277

originalBB334alteredBB:                           ; preds = %originalBB334, %1331
  %2403 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2404 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2403, i32 0, i32 4
  %2405 = load i32, i32* %2404, align 8
  %_335 = sub i32 %2405, 1
  %gen336 = mul i32 %_335, 1
  %_337 = sub i32 %2405, 1
  %gen338 = mul i32 %_337, 1
  %2406 = sub nsw i32 %2405, 1
  br label %originalBB334

originalBB342alteredBB:                           ; preds = %originalBB342, %1394
  %2407 = load i32, i32* %38, align 4
  %2408 = load i32, i32* %9, align 4
  %_343 = sub i32 %2407, %2408
  %gen344 = mul i32 %_343, %2408
  %2409 = add nsw i32 %2407, %2408
  %_345 = sub i32 %2409, 1
  %gen346 = mul i32 %_345, 1
  %_347 = sub i32 %2409, 1
  %gen348 = mul i32 %_347, 1
  %2410 = sub nsw i32 %2409, 1
  %2411 = icmp slt i32 %2410, 0
  br label %originalBB342

originalBB352alteredBB:                           ; preds = %originalBB352, %1552
  br label %originalBB352

originalBB356alteredBB:                           ; preds = %originalBB356, %1569
  %2412 = load i32, i32* %37, align 4
  %_357 = sub i32 %2412, 1
  %gen358 = mul i32 %_357, 1
  %_359 = shl i32 %2412, 1
  %_360 = shl i32 %2412, 1
  %_361 = sub i32 %2412, 1
  %gen362 = mul i32 %_361, 1
  %_363 = sub i32 0, %2412
  %gen364 = add i32 %_363, 1
  %2413 = add nsw i32 %2412, 1
  store i32 %2413, i32* %37, align 4
  br label %originalBB356

originalBB368alteredBB:                           ; preds = %originalBB368, %1604
  %2414 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2415 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2414, i32 0, i32 2
  %2416 = load i32, i32* %2415, align 8
  %_369 = sub i32 0, %2416
  %gen370 = add i32 %_369, 1
  %_371 = shl i32 %2416, 1
  %_372 = shl i32 %2416, 1
  %2417 = sub nsw i32 %2416, 1
  br label %originalBB368

originalBB376alteredBB:                           ; preds = %originalBB376, %1625
  %2418 = load i32, i32* %37, align 4
  %2419 = load i32, i32* %8, align 4
  %_377 = sub i32 0, %2418
  %gen378 = add i32 %_377, %2419
  %_379 = sub i32 0, %2418
  %gen380 = add i32 %_379, %2419
  %_381 = shl i32 %2418, %2419
  %2420 = add nsw i32 %2418, %2419
  %_382 = sub i32 %2420, 1
  %gen383 = mul i32 %_382, 1
  %_384 = shl i32 %2420, 1
  %2421 = sub nsw i32 %2420, 1
  %2422 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2423 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2422, i32 0, i32 2
  %2424 = load i32, i32* %2423, align 8
  %_385 = shl i32 %2421, %2424
  %_386 = shl i32 %2421, %2424
  %2425 = srem i32 %2421, %2424
  br label %originalBB376

originalBB390alteredBB:                           ; preds = %originalBB390, %1655
  %2426 = load i32, i32* %38, align 4
  %2427 = load i32, i32* %9, align 4
  %_391 = shl i32 %2426, %2427
  %_392 = shl i32 %2426, %2427
  %_393 = sub i32 %2426, %2427
  %gen394 = mul i32 %_393, %2427
  %_395 = sub i32 %2426, %2427
  %gen396 = mul i32 %_395, %2427
  %2428 = add nsw i32 %2426, %2427
  %_397 = sub i32 0, %2428
  %gen398 = add i32 %_397, 1
  %_399 = shl i32 %2428, 1
  %2429 = sub nsw i32 %2428, 1
  %2430 = icmp slt i32 %2429, 0
  br label %originalBB390

originalBB403alteredBB:                           ; preds = %originalBB403, %1691
  store i32 %1692, i32* %40, align 4
  %2431 = load double, double* %19, align 8
  %2432 = fptrunc double %2431 to float
  %2433 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2434 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2433, i32 0, i32 6
  %2435 = bitcast %union.anon.1* %2434 to i16**
  %2436 = load i16*, i16** %2435, align 8
  %2437 = load i32, i32* %33, align 4
  %2438 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2439 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2438, i32 0, i32 3
  %2440 = load i32, i32* %2439, align 4
  %_404 = sub i32 0, %2437
  %gen405 = add i32 %_404, %2440
  %_406 = shl i32 %2437, %2440
  %_407 = sub i32 0, %2437
  %gen408 = add i32 %_407, %2440
  %_409 = sub i32 %2437, %2440
  %gen410 = mul i32 %_409, %2440
  %_411 = sub i32 0, %2437
  %gen412 = add i32 %_411, %2440
  %_413 = sub i32 0, %2437
  %gen414 = add i32 %_413, %2440
  %2441 = mul nsw i32 %2437, %2440
  %2442 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2443 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2442, i32 0, i32 2
  %2444 = load i32, i32* %2443, align 8
  %_415 = sub i32 %2441, %2444
  %gen416 = mul i32 %_415, %2444
  %_417 = sub i32 %2441, %2444
  %gen418 = mul i32 %_417, %2444
  %_419 = sub i32 %2441, %2444
  %gen420 = mul i32 %_419, %2444
  %_421 = sub i32 0, %2441
  %gen422 = add i32 %_421, %2444
  %2445 = mul nsw i32 %2441, %2444
  %2446 = load i32, i32* %40, align 4
  %2447 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2448 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2447, i32 0, i32 2
  %2449 = load i32, i32* %2448, align 8
  %_423 = sub i32 %2446, %2449
  %gen424 = mul i32 %_423, %2449
  %_425 = sub i32 0, %2446
  %gen426 = add i32 %_425, %2449
  %_427 = sub i32 %2446, %2449
  %gen428 = mul i32 %_427, %2449
  %2450 = mul nsw i32 %2446, %2449
  %_429 = shl i32 %2445, %2450
  %_430 = sub i32 0, %2445
  %gen431 = add i32 %_430, %2450
  %_432 = sub i32 %2445, %2450
  %gen433 = mul i32 %_432, %2450
  %_434 = sub i32 0, %2445
  %gen435 = add i32 %_434, %2450
  %_436 = sub i32 %2445, %2450
  %gen437 = mul i32 %_436, %2450
  %_438 = sub i32 %2445, %2450
  %gen439 = mul i32 %_438, %2450
  %2451 = add nsw i32 %2445, %2450
  %2452 = load i32, i32* %39, align 4
  %_440 = sub i32 %2451, %2452
  %gen441 = mul i32 %_440, %2452
  %_442 = shl i32 %2451, %2452
  %_443 = sub i32 0, %2451
  %gen444 = add i32 %_443, %2452
  %2453 = add nsw i32 %2451, %2452
  %2454 = sext i32 %2453 to i64
  %2455 = getelementptr inbounds i16, i16* %2436, i64 %2454
  %2456 = load i16, i16* %2455, align 2
  %2457 = zext i16 %2456 to i32
  %2458 = sitofp i32 %2457 to double
  %_445 = fsub double -0.000000e+00, %2458
  %gen446 = fadd double %_445, 6.553500e+04
  %_447 = fsub double %2458, 6.553500e+04
  %gen448 = fmul double %_447, 6.553500e+04
  %_449 = fsub double -0.000000e+00, %2458
  %gen450 = fadd double %_449, 6.553500e+04
  %2459 = fdiv double %2458, 6.553500e+04
  %2460 = fptrunc double %2459 to float
  %2461 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2462 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2461, i32 0, i32 6
  %2463 = bitcast %union.anon.1* %2462 to i16**
  %2464 = load i16*, i16** %2463, align 8
  %2465 = load i32, i32* %34, align 4
  %2466 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2467 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2466, i32 0, i32 3
  %2468 = load i32, i32* %2467, align 4
  %_451 = sub i32 %2465, %2468
  %gen452 = mul i32 %_451, %2468
  %_453 = sub i32 0, %2465
  %gen454 = add i32 %_453, %2468
  %2469 = mul nsw i32 %2465, %2468
  %2470 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2471 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2470, i32 0, i32 2
  %2472 = load i32, i32* %2471, align 8
  %_455 = sub i32 %2469, %2472
  %gen456 = mul i32 %_455, %2472
  %_457 = sub i32 0, %2469
  %gen458 = add i32 %_457, %2472
  %2473 = mul nsw i32 %2469, %2472
  %2474 = load i32, i32* %40, align 4
  %2475 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2476 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2475, i32 0, i32 2
  %2477 = load i32, i32* %2476, align 8
  %_459 = shl i32 %2474, %2477
  %_460 = sub i32 %2474, %2477
  %gen461 = mul i32 %_460, %2477
  %_462 = shl i32 %2474, %2477
  %_463 = shl i32 %2474, %2477
  %_464 = shl i32 %2474, %2477
  %_465 = shl i32 %2474, %2477
  %_466 = sub i32 %2474, %2477
  %gen467 = mul i32 %_466, %2477
  %_468 = sub i32 0, %2474
  %gen469 = add i32 %_468, %2477
  %2478 = mul nsw i32 %2474, %2477
  %_470 = shl i32 %2473, %2478
  %_471 = sub i32 0, %2473
  %gen472 = add i32 %_471, %2478
  %_473 = sub i32 %2473, %2478
  %gen474 = mul i32 %_473, %2478
  %_475 = sub i32 0, %2473
  %gen476 = add i32 %_475, %2478
  %_477 = sub i32 %2473, %2478
  %gen478 = mul i32 %_477, %2478
  %_479 = sub i32 %2473, %2478
  %gen480 = mul i32 %_479, %2478
  %2479 = add nsw i32 %2473, %2478
  %2480 = load i32, i32* %39, align 4
  %_481 = sub i32 %2479, %2480
  %gen482 = mul i32 %_481, %2480
  %2481 = add nsw i32 %2479, %2480
  %2482 = sext i32 %2481 to i64
  %2483 = getelementptr inbounds i16, i16* %2464, i64 %2482
  %2484 = load i16, i16* %2483, align 2
  %2485 = zext i16 %2484 to i32
  %2486 = sitofp i32 %2485 to double
  %_483 = fsub double -0.000000e+00, %2486
  %gen484 = fadd double %_483, 6.553500e+04
  %_485 = fsub double -0.000000e+00, %2486
  %gen486 = fadd double %_485, 6.553500e+04
  %2487 = fdiv double %2486, 6.553500e+04
  %2488 = fptrunc double %2487 to float
  %2489 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2490 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2489, i32 0, i32 6
  %2491 = bitcast %union.anon.1* %2490 to i16**
  %2492 = load i16*, i16** %2491, align 8
  %2493 = load i32, i32* %35, align 4
  %2494 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2495 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2494, i32 0, i32 3
  %2496 = load i32, i32* %2495, align 4
  %_487 = shl i32 %2493, %2496
  %_488 = sub i32 0, %2493
  %gen489 = add i32 %_488, %2496
  %2497 = mul nsw i32 %2493, %2496
  %2498 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2499 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2498, i32 0, i32 2
  %2500 = load i32, i32* %2499, align 8
  %_490 = sub i32 %2497, %2500
  %gen491 = mul i32 %_490, %2500
  %_492 = sub i32 0, %2497
  %gen493 = add i32 %_492, %2500
  %_494 = sub i32 0, %2497
  %gen495 = add i32 %_494, %2500
  %_496 = sub i32 %2497, %2500
  %gen497 = mul i32 %_496, %2500
  %2501 = mul nsw i32 %2497, %2500
  %2502 = load i32, i32* %40, align 4
  %2503 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2504 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2503, i32 0, i32 2
  %2505 = load i32, i32* %2504, align 8
  %_498 = sub i32 0, %2502
  %gen499 = add i32 %_498, %2505
  %_500 = sub i32 %2502, %2505
  %gen501 = mul i32 %_500, %2505
  %_502 = sub i32 %2502, %2505
  %gen503 = mul i32 %_502, %2505
  %_504 = sub i32 %2502, %2505
  %gen505 = mul i32 %_504, %2505
  %2506 = mul nsw i32 %2502, %2505
  %_506 = shl i32 %2501, %2506
  %_507 = shl i32 %2501, %2506
  %_508 = sub i32 %2501, %2506
  %gen509 = mul i32 %_508, %2506
  %_510 = shl i32 %2501, %2506
  %2507 = add nsw i32 %2501, %2506
  %2508 = load i32, i32* %39, align 4
  %_511 = sub i32 %2507, %2508
  %gen512 = mul i32 %_511, %2508
  %_513 = shl i32 %2507, %2508
  %_514 = sub i32 0, %2507
  %gen515 = add i32 %_514, %2508
  %_516 = sub i32 %2507, %2508
  %gen517 = mul i32 %_516, %2508
  %_518 = sub i32 0, %2507
  %gen519 = add i32 %_518, %2508
  %_520 = shl i32 %2507, %2508
  %2509 = add nsw i32 %2507, %2508
  %2510 = sext i32 %2509 to i64
  %2511 = getelementptr inbounds i16, i16* %2492, i64 %2510
  %2512 = load i16, i16* %2511, align 2
  %2513 = zext i16 %2512 to i32
  %2514 = sitofp i32 %2513 to double
  %_521 = fsub double %2514, 6.553500e+04
  %gen522 = fmul double %_521, 6.553500e+04
  %_523 = fsub double -0.000000e+00, %2514
  %gen524 = fadd double %_523, 6.553500e+04
  %_525 = fsub double %2514, 6.553500e+04
  %gen526 = fmul double %_525, 6.553500e+04
  %_527 = fsub double %2514, 6.553500e+04
  %gen528 = fmul double %_527, 6.553500e+04
  %_529 = fsub double -0.000000e+00, %2514
  %gen530 = fadd double %_529, 6.553500e+04
  %2515 = fdiv double %2514, 6.553500e+04
  %2516 = fptrunc double %2515 to float
  %2517 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2518 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2517, i32 0, i32 6
  %2519 = bitcast %union.anon.1* %2518 to i16**
  %2520 = load i16*, i16** %2519, align 8
  %2521 = load i32, i32* %36, align 4
  %2522 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2523 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2522, i32 0, i32 3
  %2524 = load i32, i32* %2523, align 4
  %_531 = sub i32 0, %2521
  %gen532 = add i32 %_531, %2524
  %2525 = mul nsw i32 %2521, %2524
  %2526 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2527 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2526, i32 0, i32 2
  %2528 = load i32, i32* %2527, align 8
  %_533 = sub i32 0, %2525
  %gen534 = add i32 %_533, %2528
  %_535 = sub i32 %2525, %2528
  %gen536 = mul i32 %_535, %2528
  %_537 = sub i32 0, %2525
  %gen538 = add i32 %_537, %2528
  %2529 = mul nsw i32 %2525, %2528
  %2530 = load i32, i32* %40, align 4
  %2531 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2532 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2531, i32 0, i32 2
  %2533 = load i32, i32* %2532, align 8
  %_539 = shl i32 %2530, %2533
  %_540 = sub i32 0, %2530
  %gen541 = add i32 %_540, %2533
  %_542 = shl i32 %2530, %2533
  %_543 = sub i32 %2530, %2533
  %gen544 = mul i32 %_543, %2533
  %2534 = mul nsw i32 %2530, %2533
  %_545 = sub i32 0, %2529
  %gen546 = add i32 %_545, %2534
  %_547 = shl i32 %2529, %2534
  %_548 = sub i32 %2529, %2534
  %gen549 = mul i32 %_548, %2534
  %_550 = sub i32 0, %2529
  %gen551 = add i32 %_550, %2534
  %_552 = shl i32 %2529, %2534
  %_553 = sub i32 %2529, %2534
  %gen554 = mul i32 %_553, %2534
  %2535 = add nsw i32 %2529, %2534
  %2536 = load i32, i32* %39, align 4
  %_555 = sub i32 %2535, %2536
  %gen556 = mul i32 %_555, %2536
  %_557 = shl i32 %2535, %2536
  %_558 = shl i32 %2535, %2536
  %_559 = sub i32 %2535, %2536
  %gen560 = mul i32 %_559, %2536
  %_561 = shl i32 %2535, %2536
  %2537 = add nsw i32 %2535, %2536
  %2538 = sext i32 %2537 to i64
  %2539 = getelementptr inbounds i16, i16* %2520, i64 %2538
  %2540 = load i16, i16* %2539, align 2
  %2541 = zext i16 %2540 to i32
  %2542 = sitofp i32 %2541 to double
  %_562 = fsub double %2542, 6.553500e+04
  %gen563 = fmul double %_562, 6.553500e+04
  %_564 = fsub double -0.000000e+00, %2542
  %gen565 = fadd double %_564, 6.553500e+04
  %_566 = fsub double %2542, 6.553500e+04
  %gen567 = fmul double %_566, 6.553500e+04
  %_568 = fsub double -0.000000e+00, %2542
  %gen569 = fadd double %_568, 6.553500e+04
  %_570 = fsub double %2542, 6.553500e+04
  %gen571 = fmul double %_570, 6.553500e+04
  %2543 = fdiv double %2542, 6.553500e+04
  %2544 = fptrunc double %2543 to float
  %2545 = call float @_ZN3pov5intp3Efffff(float %2432, float %2460, float %2488, float %2516, float %2544)
  %2546 = load i32, i32* %37, align 4
  %2547 = sext i32 %2546 to i64
  %2548 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %30, i64 0, i64 %2547
  %2549 = load i32, i32* %38, align 4
  %2550 = sext i32 %2549 to i64
  %2551 = getelementptr inbounds [4 x float], [4 x float]* %2548, i64 0, i64 %2550
  store float %2545, float* %2551, align 4
  br label %originalBB403

originalBB575alteredBB:                           ; preds = %originalBB575, %1834
  %2552 = load i32, i32* %37, align 4
  %_576 = sub i32 %2552, 1
  %gen577 = mul i32 %_576, 1
  %_578 = sub i32 0, %2552
  %gen579 = add i32 %_578, 1
  %_580 = sub i32 0, %2552
  %gen581 = add i32 %_580, 1
  %_582 = sub i32 0, %2552
  %gen583 = add i32 %_582, 1
  %2553 = add nsw i32 %2552, 1
  store i32 %2553, i32* %37, align 4
  br label %originalBB575

originalBB587alteredBB:                           ; preds = %originalBB587, %1894
  %2554 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %32, align 8
  %2555 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %2554, i32 0, i32 3
  %2556 = load i32, i32* %2555, align 4
  %_588 = shl i32 %2556, 1
  %_589 = shl i32 %2556, 1
  %_590 = sub i32 %2556, 1
  %gen591 = mul i32 %_590, 1
  %2557 = sub nsw i32 %2556, 1
  br label %originalBB587

originalBB595alteredBB:                           ; preds = %originalBB595, %2047
  %2558 = load i32, i32* %38, align 4
  %_596 = shl i32 %2558, 1
  %2559 = add nsw i32 %2558, 1
  store i32 %2559, i32* %38, align 4
  br label %originalBB595

originalBB600alteredBB:                           ; preds = %originalBB600, %2066
  br label %originalBB600

originalBB604alteredBB:                           ; preds = %originalBB604, %2088
  br label %originalBB604

originalBB608alteredBB:                           ; preds = %originalBB608, %2105
  store i32 0, i32* %37, align 4
  br label %originalBB608

originalBB612alteredBB:                           ; preds = %originalBB612, %2122
  %2560 = load i32, i32* %37, align 4
  %2561 = icmp slt i32 %2560, 4
  br label %originalBB612
}

declare double @_ZN3pov13image_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #1

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL13slope_patternEPdPNS_14Pattern_StructEPNS_10istk_entryE(double*, %"struct.pov::Pattern_Struct"*, %"struct.pov::istk_entry"*) #2 {
  %4 = alloca double, align 8
  %5 = alloca double*, align 8
  %6 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %7 = alloca %"struct.pov::istk_entry"*, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  store double* %0, double** %5, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %6, align 8
  store %"struct.pov::istk_entry"* %2, %"struct.pov::istk_entry"** %7, align 8
  %11 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %7, align 8
  %12 = icmp eq %"struct.pov::istk_entry"* %11, null
  br i1 %12, label %13, label %14

; <label>:13:                                     ; preds = %3
  store double 0.000000e+00, double* %4, align 8
  br label %456

; <label>:14:                                     ; preds = %3
  %15 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %16 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %15, i32 0, i32 10
  %17 = bitcast %union.anon.25* %16 to %struct.anon.30*
  %18 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %17, i32 0, i32 2
  %19 = load i16, i16* %18, align 8
  %20 = sext i16 %19 to i32
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %35

; <label>:22:                                     ; preds = %14
  %23 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %7, align 8
  %24 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %23, i32 0, i32 3
  %25 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %26 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %25, i32 0, i32 10
  %27 = bitcast %union.anon.25* %26 to %struct.anon.30*
  %28 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %27, i32 0, i32 2
  %29 = load i16, i16* %28, align 8
  %30 = sext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [3 x double], [3 x double]* %24, i64 0, i64 %32
  %34 = load double, double* %33, align 8
  store double %34, double* %9, align 8
  br label %84

; <label>:35:                                     ; preds = %14
  %36 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %37 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %36, i32 0, i32 10
  %38 = bitcast %union.anon.25* %37 to %struct.anon.30*
  %39 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %38, i32 0, i32 2
  %40 = load i16, i16* %39, align 8
  %41 = sext i16 %40 to i32
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %43, label %58

; <label>:43:                                     ; preds = %35
  %44 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %7, align 8
  %45 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %44, i32 0, i32 3
  %46 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %47 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %46, i32 0, i32 10
  %48 = bitcast %union.anon.25* %47 to %struct.anon.30*
  %49 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %48, i32 0, i32 2
  %50 = load i16, i16* %49, align 8
  %51 = sext i16 %50 to i32
  %52 = sub nsw i32 0, %51
  %53 = sub nsw i32 %52, 1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [3 x double], [3 x double]* %45, i64 0, i64 %54
  %56 = load double, double* %55, align 8
  %57 = fsub double -0.000000e+00, %56
  store double %57, double* %9, align 8
  br label %83

; <label>:58:                                     ; preds = %35
  %59 = load i32, i32* @x.77
  %60 = load i32, i32* @y.78
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %58
  %67 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %7, align 8
  %68 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %67, i32 0, i32 3
  %69 = getelementptr inbounds [3 x double], [3 x double]* %68, i32 0, i32 0
  %70 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %71 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %70, i32 0, i32 10
  %72 = bitcast %union.anon.25* %71 to %struct.anon.30*
  %73 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %72, i32 0, i32 0
  %74 = getelementptr inbounds [3 x double], [3 x double]* %73, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %9, double* %69, double* %74)
  %75 = load i32, i32* @x.77
  %76 = load i32, i32* @y.78
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %83

; <label>:83:                                     ; preds = %originalBBpart2, %43
  br label %84

; <label>:84:                                     ; preds = %83, %22
  %85 = load double, double* %9, align 8
  %86 = fcmp ogt double %85, 1.000000e+00
  br i1 %86, label %87, label %88

; <label>:87:                                     ; preds = %84
  store double 1.000000e+00, double* %9, align 8
  br label %109

; <label>:88:                                     ; preds = %84
  %89 = load i32, i32* @x.77
  %90 = load i32, i32* @y.78
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %88
  %97 = load double, double* %9, align 8
  %98 = fcmp olt double %97, -1.000000e+00
  %99 = load i32, i32* @x.77
  %100 = load i32, i32* @y.78
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %98, label %107, label %108

; <label>:107:                                    ; preds = %originalBBpart24
  store double -1.000000e+00, double* %9, align 8
  br label %108

; <label>:108:                                    ; preds = %107, %originalBBpart24
  br label %109

; <label>:109:                                    ; preds = %108, %87
  %110 = load i32, i32* @x.77
  %111 = load i32, i32* @y.78
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %109
  %118 = load double, double* %9, align 8
  %119 = call double @asin(double %118) #7
  %120 = fdiv double %119, 0x400921FB54442D18
  %121 = fmul double %120, 2.000000e+00
  store double %121, double* %9, align 8
  %122 = load double, double* %9, align 8
  %123 = fadd double %122, 1.000000e+00
  %124 = fmul double %123, 5.000000e-01
  store double %124, double* %9, align 8
  %125 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %126 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %125, i32 0, i32 10
  %127 = bitcast %union.anon.25* %126 to %struct.anon.30*
  %128 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %127, i32 0, i32 6
  %129 = getelementptr inbounds [2 x double], [2 x double]* %128, i64 0, i64 1
  %130 = load double, double* %129, align 8
  %131 = fcmp une double 0.000000e+00, %130
  %132 = load i32, i32* @x.77
  %133 = load i32, i32* @y.78
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart256, label %originalBB6alteredBB

originalBBpart256:                                ; preds = %originalBB6
  br i1 %131, label %140, label %156

; <label>:140:                                    ; preds = %originalBBpart256
  %141 = load double, double* %9, align 8
  %142 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %143 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %142, i32 0, i32 10
  %144 = bitcast %union.anon.25* %143 to %struct.anon.30*
  %145 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %144, i32 0, i32 6
  %146 = getelementptr inbounds [2 x double], [2 x double]* %145, i64 0, i64 0
  %147 = load double, double* %146, align 8
  %148 = fsub double %141, %147
  %149 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %150 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %149, i32 0, i32 10
  %151 = bitcast %union.anon.25* %150 to %struct.anon.30*
  %152 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %151, i32 0, i32 6
  %153 = getelementptr inbounds [2 x double], [2 x double]* %152, i64 0, i64 1
  %154 = load double, double* %153, align 8
  %155 = fdiv double %148, %154
  store double %155, double* %9, align 8
  br label %156

; <label>:156:                                    ; preds = %140, %originalBBpart256
  %157 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %158 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %157, i32 0, i32 10
  %159 = bitcast %union.anon.25* %158 to %struct.anon.30*
  %160 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %159, i32 0, i32 5
  %161 = load double, double* %160, align 8
  %162 = fcmp une double %161, 0.000000e+00
  br i1 %162, label %247, label %163

; <label>:163:                                    ; preds = %156
  %164 = load i32, i32* @x.77
  %165 = load i32, i32* @y.78
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %163
  %172 = load double, double* %9, align 8
  %173 = fcmp oeq double %172, 1.000000e+00
  %174 = load i32, i32* @x.77
  %175 = load i32, i32* @y.78
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %173, label %182, label %185

; <label>:182:                                    ; preds = %originalBBpart260
  %183 = load double, double* %9, align 8
  %184 = fsub double %183, 1.000000e-07
  store double %184, double* %9, align 8
  br label %229

; <label>:185:                                    ; preds = %originalBBpart260
  %186 = load double, double* %9, align 8
  %187 = fcmp olt double %186, 0.000000e+00
  br i1 %187, label %188, label %208

; <label>:188:                                    ; preds = %185
  %189 = load i32, i32* @x.77
  %190 = load i32, i32* @y.78
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %originalBB62alteredBB, %188
  %197 = load double, double* %9, align 8
  %198 = call double @fmod(double %197, double 1.000000e+00) #7
  %199 = fadd double 1.000000e+00, %198
  %200 = load i32, i32* @x.77
  %201 = load i32, i32* @y.78
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %211

; <label>:208:                                    ; preds = %185
  %209 = load double, double* %9, align 8
  %210 = call double @fmod(double %209, double 1.000000e+00) #7
  br label %211

; <label>:211:                                    ; preds = %208, %originalBBpart264
  %212 = phi double [ %199, %originalBBpart264 ], [ %210, %208 ]
  %213 = load i32, i32* @x.77
  %214 = load i32, i32* @y.78
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %originalBB66alteredBB, %211
  store double %212, double* %9, align 8
  %221 = load i32, i32* @x.77
  %222 = load i32, i32* @y.78
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %229

; <label>:229:                                    ; preds = %originalBBpart268, %182
  %230 = load i32, i32* @x.77
  %231 = load i32, i32* @y.78
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %originalBB70alteredBB, %229
  %238 = load double, double* %9, align 8
  store double %238, double* %4, align 8
  %239 = load i32, i32* @x.77
  %240 = load i32, i32* @y.78
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %456

; <label>:247:                                    ; preds = %156
  %248 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %249 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %248, i32 0, i32 10
  %250 = bitcast %union.anon.25* %249 to %struct.anon.30*
  %251 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %250, i32 0, i32 3
  %252 = load i16, i16* %251, align 2
  %253 = sext i16 %252 to i32
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %255, label %283

; <label>:255:                                    ; preds = %247
  %256 = load i32, i32* @x.77
  %257 = load i32, i32* @y.78
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %originalBB74alteredBB, %255
  %264 = load double*, double** %5, align 8
  %265 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %266 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %265, i32 0, i32 10
  %267 = bitcast %union.anon.25* %266 to %struct.anon.30*
  %268 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %267, i32 0, i32 3
  %269 = load i16, i16* %268, align 2
  %270 = sext i16 %269 to i32
  %271 = sub nsw i32 %270, 1
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds double, double* %264, i64 %272
  %274 = load double, double* %273, align 8
  store double %274, double* %10, align 8
  %275 = load i32, i32* @x.77
  %276 = load i32, i32* @y.78
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBBpart283, label %originalBB74alteredBB

originalBBpart283:                                ; preds = %originalBB74
  br label %345

; <label>:283:                                    ; preds = %247
  %284 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %285 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %284, i32 0, i32 10
  %286 = bitcast %union.anon.25* %285 to %struct.anon.30*
  %287 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %286, i32 0, i32 3
  %288 = load i16, i16* %287, align 2
  %289 = sext i16 %288 to i32
  %290 = icmp slt i32 %289, 0
  br i1 %290, label %291, label %321

; <label>:291:                                    ; preds = %283
  %292 = load i32, i32* @x.77
  %293 = load i32, i32* @y.78
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %originalBB85alteredBB, %291
  %300 = load double*, double** %5, align 8
  %301 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %302 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %301, i32 0, i32 10
  %303 = bitcast %union.anon.25* %302 to %struct.anon.30*
  %304 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %303, i32 0, i32 3
  %305 = load i16, i16* %304, align 2
  %306 = sext i16 %305 to i32
  %307 = sub nsw i32 0, %306
  %308 = sub nsw i32 %307, 1
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds double, double* %300, i64 %309
  %311 = load double, double* %310, align 8
  %312 = fsub double -0.000000e+00, %311
  store double %312, double* %10, align 8
  %313 = load i32, i32* @x.77
  %314 = load i32, i32* @y.78
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBBpart2108, label %originalBB85alteredBB

originalBBpart2108:                               ; preds = %originalBB85
  br label %328

; <label>:321:                                    ; preds = %283
  %322 = load double*, double** %5, align 8
  %323 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %324 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %323, i32 0, i32 10
  %325 = bitcast %union.anon.25* %324 to %struct.anon.30*
  %326 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %325, i32 0, i32 1
  %327 = getelementptr inbounds [3 x double], [3 x double]* %326, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %10, double* %322, double* %327)
  br label %328

; <label>:328:                                    ; preds = %321, %originalBBpart2108
  %329 = load i32, i32* @x.77
  %330 = load i32, i32* @y.78
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %originalBB110alteredBB, %328
  %337 = load i32, i32* @x.77
  %338 = load i32, i32* @y.78
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br label %345

; <label>:345:                                    ; preds = %originalBBpart2112, %originalBBpart283
  %346 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %347 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %346, i32 0, i32 10
  %348 = bitcast %union.anon.25* %347 to %struct.anon.30*
  %349 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %348, i32 0, i32 7
  %350 = getelementptr inbounds [2 x double], [2 x double]* %349, i64 0, i64 1
  %351 = load double, double* %350, align 8
  %352 = fcmp une double 0.000000e+00, %351
  br i1 %352, label %353, label %369

; <label>:353:                                    ; preds = %345
  %354 = load double, double* %10, align 8
  %355 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %356 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %355, i32 0, i32 10
  %357 = bitcast %union.anon.25* %356 to %struct.anon.30*
  %358 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %357, i32 0, i32 7
  %359 = getelementptr inbounds [2 x double], [2 x double]* %358, i64 0, i64 0
  %360 = load double, double* %359, align 8
  %361 = fsub double %354, %360
  %362 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %363 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %362, i32 0, i32 10
  %364 = bitcast %union.anon.25* %363 to %struct.anon.30*
  %365 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %364, i32 0, i32 7
  %366 = getelementptr inbounds [2 x double], [2 x double]* %365, i64 0, i64 1
  %367 = load double, double* %366, align 8
  %368 = fdiv double %361, %367
  store double %368, double* %10, align 8
  br label %369

; <label>:369:                                    ; preds = %353, %345
  %370 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %371 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %370, i32 0, i32 10
  %372 = bitcast %union.anon.25* %371 to %struct.anon.30*
  %373 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %372, i32 0, i32 4
  %374 = load double, double* %373, align 8
  %375 = load double, double* %9, align 8
  %376 = fmul double %374, %375
  %377 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %378 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %377, i32 0, i32 10
  %379 = bitcast %union.anon.25* %378 to %struct.anon.30*
  %380 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %379, i32 0, i32 5
  %381 = load double, double* %380, align 8
  %382 = load double, double* %10, align 8
  %383 = fmul double %381, %382
  %384 = fadd double %376, %383
  store double %384, double* %8, align 8
  %385 = load double, double* %8, align 8
  %386 = fsub double %385, 1.000000e+00
  %387 = fcmp olt double %386, 1.000000e-07
  br i1 %387, label %388, label %410

; <label>:388:                                    ; preds = %369
  %389 = load double, double* %8, align 8
  %390 = fcmp oge double %389, 1.000000e+00
  br i1 %390, label %391, label %410

; <label>:391:                                    ; preds = %388
  %392 = load i32, i32* @x.77
  %393 = load i32, i32* @y.78
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %originalBB114alteredBB, %391
  %400 = load double, double* %8, align 8
  %401 = fsub double %400, 1.000000e-07
  store double %401, double* %8, align 8
  %402 = load i32, i32* @x.77
  %403 = load i32, i32* @y.78
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBBpart2124, label %originalBB114alteredBB

originalBBpart2124:                               ; preds = %originalBB114
  br label %438

; <label>:410:                                    ; preds = %388, %369
  %411 = load double, double* %8, align 8
  %412 = fcmp olt double %411, 0.000000e+00
  br i1 %412, label %413, label %417

; <label>:413:                                    ; preds = %410
  %414 = load double, double* %8, align 8
  %415 = call double @fmod(double %414, double 1.000000e+00) #7
  %416 = fadd double 1.000000e+00, %415
  br label %436

; <label>:417:                                    ; preds = %410
  %418 = load i32, i32* @x.77
  %419 = load i32, i32* @y.78
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %originalBB126alteredBB, %417
  %426 = load double, double* %8, align 8
  %427 = call double @fmod(double %426, double 1.000000e+00) #7
  %428 = load i32, i32* @x.77
  %429 = load i32, i32* @y.78
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br label %436

; <label>:436:                                    ; preds = %originalBBpart2128, %413
  %437 = phi double [ %416, %413 ], [ %427, %originalBBpart2128 ]
  store double %437, double* %8, align 8
  br label %438

; <label>:438:                                    ; preds = %436, %originalBBpart2124
  %439 = load i32, i32* @x.77
  %440 = load i32, i32* @y.78
  %441 = sub i32 %439, 1
  %442 = mul i32 %439, %441
  %443 = urem i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = icmp slt i32 %440, 10
  %446 = or i1 %444, %445
  br i1 %446, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %originalBB130alteredBB, %438
  %447 = load double, double* %8, align 8
  store double %447, double* %4, align 8
  %448 = load i32, i32* @x.77
  %449 = load i32, i32* @y.78
  %450 = sub i32 %448, 1
  %451 = mul i32 %448, %450
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %453, %454
  br i1 %455, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %456

; <label>:456:                                    ; preds = %originalBBpart2132, %originalBBpart272, %13
  %457 = load i32, i32* @x.77
  %458 = load i32, i32* @y.78
  %459 = sub i32 %457, 1
  %460 = mul i32 %457, %459
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %462, %463
  br i1 %464, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %originalBB134alteredBB, %456
  %465 = load double, double* %4, align 8
  %466 = load i32, i32* @x.77
  %467 = load i32, i32* @y.78
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  ret double %465

originalBBalteredBB:                              ; preds = %originalBB, %58
  %474 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %7, align 8
  %475 = getelementptr inbounds %"struct.pov::istk_entry", %"struct.pov::istk_entry"* %474, i32 0, i32 3
  %476 = getelementptr inbounds [3 x double], [3 x double]* %475, i32 0, i32 0
  %477 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %478 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %477, i32 0, i32 10
  %479 = bitcast %union.anon.25* %478 to %struct.anon.30*
  %480 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %479, i32 0, i32 0
  %481 = getelementptr inbounds [3 x double], [3 x double]* %480, i32 0, i32 0
  call void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8) %9, double* %476, double* %481)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %88
  %482 = load double, double* %9, align 8
  %483 = fcmp olt double %482, -1.000000e+00
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %109
  %484 = load double, double* %9, align 8
  %485 = call double @asin(double %484) #7
  %_ = fsub double -0.000000e+00, %485
  %gen = fadd double %_, 0x400921FB54442D18
  %_7 = fsub double -0.000000e+00, %485
  %gen8 = fadd double %_7, 0x400921FB54442D18
  %_9 = fsub double %485, 0x400921FB54442D18
  %gen10 = fmul double %_9, 0x400921FB54442D18
  %_11 = fsub double %485, 0x400921FB54442D18
  %gen12 = fmul double %_11, 0x400921FB54442D18
  %_13 = fsub double -0.000000e+00, %485
  %gen14 = fadd double %_13, 0x400921FB54442D18
  %_15 = fsub double %485, 0x400921FB54442D18
  %gen16 = fmul double %_15, 0x400921FB54442D18
  %_17 = fsub double -0.000000e+00, %485
  %gen18 = fadd double %_17, 0x400921FB54442D18
  %486 = fdiv double %485, 0x400921FB54442D18
  %_19 = fsub double %486, 2.000000e+00
  %gen20 = fmul double %_19, 2.000000e+00
  %_21 = fsub double %486, 2.000000e+00
  %gen22 = fmul double %_21, 2.000000e+00
  %_23 = fsub double -0.000000e+00, %486
  %gen24 = fadd double %_23, 2.000000e+00
  %_25 = fsub double %486, 2.000000e+00
  %gen26 = fmul double %_25, 2.000000e+00
  %_27 = fsub double -0.000000e+00, %486
  %gen28 = fadd double %_27, 2.000000e+00
  %_29 = fsub double %486, 2.000000e+00
  %gen30 = fmul double %_29, 2.000000e+00
  %_31 = fsub double %486, 2.000000e+00
  %gen32 = fmul double %_31, 2.000000e+00
  %_33 = fsub double -0.000000e+00, %486
  %gen34 = fadd double %_33, 2.000000e+00
  %487 = fmul double %486, 2.000000e+00
  store double %487, double* %9, align 8
  %488 = load double, double* %9, align 8
  %_35 = fsub double %488, 1.000000e+00
  %gen36 = fmul double %_35, 1.000000e+00
  %_37 = fsub double -0.000000e+00, %488
  %gen38 = fadd double %_37, 1.000000e+00
  %_39 = fsub double %488, 1.000000e+00
  %gen40 = fmul double %_39, 1.000000e+00
  %_41 = fsub double %488, 1.000000e+00
  %gen42 = fmul double %_41, 1.000000e+00
  %489 = fadd double %488, 1.000000e+00
  %_43 = fsub double -0.000000e+00, %489
  %gen44 = fadd double %_43, 5.000000e-01
  %_45 = fsub double -0.000000e+00, %489
  %gen46 = fadd double %_45, 5.000000e-01
  %_47 = fsub double %489, 5.000000e-01
  %gen48 = fmul double %_47, 5.000000e-01
  %_49 = fsub double -0.000000e+00, %489
  %gen50 = fadd double %_49, 5.000000e-01
  %_51 = fsub double -0.000000e+00, %489
  %gen52 = fadd double %_51, 5.000000e-01
  %_53 = fsub double -0.000000e+00, %489
  %gen54 = fadd double %_53, 5.000000e-01
  %490 = fmul double %489, 5.000000e-01
  store double %490, double* %9, align 8
  %491 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %492 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %491, i32 0, i32 10
  %493 = bitcast %union.anon.25* %492 to %struct.anon.30*
  %494 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %493, i32 0, i32 6
  %495 = getelementptr inbounds [2 x double], [2 x double]* %494, i64 0, i64 1
  %496 = load double, double* %495, align 8
  %497 = fcmp une double 0.000000e+00, %496
  br label %originalBB6

originalBB58alteredBB:                            ; preds = %originalBB58, %163
  %498 = load double, double* %9, align 8
  %499 = fcmp oeq double %498, 1.000000e+00
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %188
  %500 = load double, double* %9, align 8
  %501 = call double @fmod(double %500, double 1.000000e+00) #7
  %502 = fadd double 1.000000e+00, %501
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %211
  store double %212, double* %9, align 8
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %229
  %503 = load double, double* %9, align 8
  store double %503, double* %4, align 8
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %255
  %504 = load double*, double** %5, align 8
  %505 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %506 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %505, i32 0, i32 10
  %507 = bitcast %union.anon.25* %506 to %struct.anon.30*
  %508 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %507, i32 0, i32 3
  %509 = load i16, i16* %508, align 2
  %510 = sext i16 %509 to i32
  %_75 = sub i32 %510, 1
  %gen76 = mul i32 %_75, 1
  %_77 = sub i32 %510, 1
  %gen78 = mul i32 %_77, 1
  %_79 = sub i32 %510, 1
  %gen80 = mul i32 %_79, 1
  %_81 = shl i32 %510, 1
  %511 = sub nsw i32 %510, 1
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds double, double* %504, i64 %512
  %514 = load double, double* %513, align 8
  store double %514, double* %10, align 8
  br label %originalBB74

originalBB85alteredBB:                            ; preds = %originalBB85, %291
  %515 = load double*, double** %5, align 8
  %516 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %6, align 8
  %517 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %516, i32 0, i32 10
  %518 = bitcast %union.anon.25* %517 to %struct.anon.30*
  %519 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %518, i32 0, i32 3
  %520 = load i16, i16* %519, align 2
  %521 = sext i16 %520 to i32
  %_86 = shl i32 0, %521
  %522 = sub nsw i32 0, %521
  %_87 = shl i32 %522, 1
  %_88 = sub i32 0, %522
  %gen89 = add i32 %_88, 1
  %_90 = sub i32 %522, 1
  %gen91 = mul i32 %_90, 1
  %_92 = shl i32 %522, 1
  %_93 = sub i32 %522, 1
  %gen94 = mul i32 %_93, 1
  %523 = sub nsw i32 %522, 1
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds double, double* %515, i64 %524
  %526 = load double, double* %525, align 8
  %_95 = fsub double -0.000000e+00, %526
  %gen96 = fmul double %_95, %526
  %_97 = fsub double -0.000000e+00, -0.000000e+00
  %gen98 = fadd double %_97, %526
  %_99 = fsub double -0.000000e+00, -0.000000e+00
  %gen100 = fadd double %_99, %526
  %_101 = fsub double -0.000000e+00, -0.000000e+00
  %gen102 = fadd double %_101, %526
  %_103 = fsub double -0.000000e+00, -0.000000e+00
  %gen104 = fadd double %_103, %526
  %_105 = fsub double -0.000000e+00, %526
  %gen106 = fmul double %_105, %526
  %527 = fsub double -0.000000e+00, %526
  store double %527, double* %10, align 8
  br label %originalBB85

originalBB110alteredBB:                           ; preds = %originalBB110, %328
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %391
  %528 = load double, double* %8, align 8
  %_115 = fsub double %528, 1.000000e-07
  %gen116 = fmul double %_115, 1.000000e-07
  %_117 = fsub double %528, 1.000000e-07
  %gen118 = fmul double %_117, 1.000000e-07
  %_119 = fsub double -0.000000e+00, %528
  %gen120 = fadd double %_119, 1.000000e-07
  %_121 = fsub double -0.000000e+00, %528
  %gen122 = fadd double %_121, 1.000000e-07
  %529 = fsub double %528, 1.000000e-07
  store double %529, double* %8, align 8
  br label %originalBB114

originalBB126alteredBB:                           ; preds = %originalBB126, %417
  %530 = load double, double* %8, align 8
  %531 = call double @fmod(double %530, double 1.000000e+00) #7
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %438
  %532 = load double, double* %8, align 8
  store double %532, double* %4, align 8
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %456
  %533 = load double, double* %4, align 8
  br label %originalBB134
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL15pigment_patternEPdPNS_14Pattern_StructEPNS_10istk_entryE(double*, %"struct.pov::Pattern_Struct"*, %"struct.pov::istk_entry"*) #0 {
  %4 = alloca double*, align 8
  %5 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %6 = alloca %"struct.pov::istk_entry"*, align 8
  %7 = alloca double, align 8
  %8 = alloca [5 x float], align 16
  %9 = alloca i32, align 4
  store double* %0, double** %4, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %5, align 8
  store %"struct.pov::istk_entry"* %2, %"struct.pov::istk_entry"** %6, align 8
  store i32 0, i32* %9, align 4
  %10 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %5, align 8
  %11 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %10, i32 0, i32 10
  %12 = bitcast %union.anon.25* %11 to %"struct.pov::Pigment_Struct"**
  %13 = load %"struct.pov::Pigment_Struct"*, %"struct.pov::Pigment_Struct"** %12, align 8
  %14 = icmp ne %"struct.pov::Pigment_Struct"* %13, null
  br i1 %14, label %15, label %24

; <label>:15:                                     ; preds = %3
  %16 = getelementptr inbounds [5 x float], [5 x float]* %8, i32 0, i32 0
  %17 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %5, align 8
  %18 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %17, i32 0, i32 10
  %19 = bitcast %union.anon.25* %18 to %"struct.pov::Pigment_Struct"**
  %20 = load %"struct.pov::Pigment_Struct"*, %"struct.pov::Pigment_Struct"** %19, align 8
  %21 = load double*, double** %4, align 8
  %22 = load %"struct.pov::istk_entry"*, %"struct.pov::istk_entry"** %6, align 8
  %23 = call i32 @_ZN3pov15Compute_PigmentEPfPNS_14Pigment_StructEPdPNS_10istk_entryE(float* %16, %"struct.pov::Pigment_Struct"* %20, double* %21, %"struct.pov::istk_entry"* %22)
  store i32 %23, i32* %9, align 4
  br label %24

; <label>:24:                                     ; preds = %15, %3
  %25 = load i32, i32* %9, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %28, label %27

; <label>:27:                                     ; preds = %24
  store double 0.000000e+00, double* %7, align 8
  br label %43

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds [5 x float], [5 x float]* %8, i64 0, i64 0
  %30 = load float, float* %29, align 16
  %31 = fpext float %30 to double
  %32 = fmul double 2.970000e-01, %31
  %33 = getelementptr inbounds [5 x float], [5 x float]* %8, i64 0, i64 1
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  %36 = fmul double 5.890000e-01, %35
  %37 = fadd double %32, %36
  %38 = getelementptr inbounds [5 x float], [5 x float]* %8, i64 0, i64 2
  %39 = load float, float* %38, align 8
  %40 = fpext float %39 to double
  %41 = fmul double 1.140000e-01, %40
  %42 = fadd double %37, %41
  store double %42, double* %7, align 8
  br label %43

; <label>:43:                                     ; preds = %28, %27
  %44 = load double, double* %7, align 8
  ret double %44
}

; Function Attrs: noinline uwtable
define internal double @_ZN3povL14object_patternEPdPNS_14Pattern_StructE(double*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = alloca double, align 8
  %4 = alloca double*, align 8
  %5 = alloca %"struct.pov::Pattern_Struct"*, align 8
  store double* %0, double** %4, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %5, align 8
  %6 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %5, align 8
  %7 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %6, i32 0, i32 10
  %8 = bitcast %union.anon.25* %7 to %"struct.pov::Object_Struct"**
  %9 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %8, align 8
  %10 = icmp ne %"struct.pov::Object_Struct"* %9, null
  br i1 %10, label %11, label %20

; <label>:11:                                     ; preds = %2
  %12 = load double*, double** %4, align 8
  %13 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %5, align 8
  %14 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %13, i32 0, i32 10
  %15 = bitcast %union.anon.25* %14 to %"struct.pov::Object_Struct"**
  %16 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %15, align 8
  %17 = call zeroext i1 @_ZN3pov13Inside_ObjectEPdPNS_13Object_StructE(double* %12, %"struct.pov::Object_Struct"* %16)
  br i1 %17, label %18, label %19

; <label>:18:                                     ; preds = %11
  store double 1.000000e+00, double* %3, align 8
  br label %21

; <label>:19:                                     ; preds = %11
  store double 0.000000e+00, double* %3, align 8
  br label %21

; <label>:20:                                     ; preds = %2
  store double 0.000000e+00, double* %3, align 8
  br label %21

; <label>:21:                                     ; preds = %20, %19, %18
  %22 = load double, double* %3, align 8
  ret double %22
}

declare i32 @_ZN3pov5ErrorEPKcz(i8*, ...) #1

; Function Attrs: nounwind
declare double @fmod(double, double) #3

; Function Attrs: nounwind readnone
declare double @floor(double) #4

declare double @_ZN3pov9cycloidalEd(double) #1

declare double @_ZN3pov13Triangle_WaveEd(double) #1

; Function Attrs: nounwind readnone
declare double @fabs(double) #4

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZN3pov3SqrEd(double) #2 comdat {
  %2 = alloca double, align 8
  store double %0, double* %2, align 8
  %3 = load double, double* %2, align 8
  %4 = load double, double* %2, align 8
  %5 = fmul double %3, %4
  ret double %5
}

; Function Attrs: nounwind
declare double @pow(double, double) #3

; Function Attrs: noinline nounwind uwtable
define void @_ZN3pov16Init_TPat_FieldsEPNS_14Pattern_StructE(%"struct.pov::Pattern_Struct"*) #2 {
  %2 = load i32, i32* @x.85
  %3 = load i32, i32* @y.86
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %"struct.pov::Pattern_Struct"*, align 8
  store %"struct.pov::Pattern_Struct"* %0, %"struct.pov::Pattern_Struct"** %10, align 8
  %11 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %10, align 8
  %12 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %11, i32 0, i32 0
  store i16 0, i16* %12, align 8
  %13 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %10, align 8
  %14 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %13, i32 0, i32 1
  store i16 0, i16* %14, align 2
  %15 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %10, align 8
  %16 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %15, i32 0, i32 2
  store i16 0, i16* %16, align 4
  %17 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %10, align 8
  %18 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %17, i32 0, i32 3
  store i32 1, i32* %18, align 8
  %19 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %10, align 8
  %20 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %19, i32 0, i32 6
  store float 1.000000e+00, float* %20, align 4
  %21 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %10, align 8
  %22 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %21, i32 0, i32 4
  store float 1.000000e+00, float* %22, align 4
  %23 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %10, align 8
  %24 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %23, i32 0, i32 5
  store float 0.000000e+00, float* %24, align 8
  %25 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %10, align 8
  %26 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %25, i32 0, i32 7
  store %"struct.pov::Warps_Struct"* null, %"struct.pov::Warps_Struct"** %26, align 8
  %27 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %10, align 8
  %28 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %27, i32 0, i32 8
  store %"struct.pov::Pattern_Struct"* null, %"struct.pov::Pattern_Struct"** %28, align 8
  %29 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %10, align 8
  %30 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %29, i32 0, i32 9
  store %"struct.pov::Blend_Map_Struct"* null, %"struct.pov::Blend_Map_Struct"** %30, align 8
  %31 = load i32, i32* @x.85
  %32 = load i32, i32* @y.86
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %39 = alloca %"struct.pov::Pattern_Struct"*, align 8
  store %"struct.pov::Pattern_Struct"* %0, %"struct.pov::Pattern_Struct"** %39, align 8
  %40 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %39, align 8
  %41 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %40, i32 0, i32 0
  store i16 0, i16* %41, align 8
  %42 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %39, align 8
  %43 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %42, i32 0, i32 1
  store i16 0, i16* %43, align 2
  %44 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %39, align 8
  %45 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %44, i32 0, i32 2
  store i16 0, i16* %45, align 4
  %46 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %39, align 8
  %47 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %46, i32 0, i32 3
  store i32 1, i32* %47, align 8
  %48 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %39, align 8
  %49 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %48, i32 0, i32 6
  store float 1.000000e+00, float* %49, align 4
  %50 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %39, align 8
  %51 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %50, i32 0, i32 4
  store float 1.000000e+00, float* %51, align 4
  %52 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %39, align 8
  %53 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %52, i32 0, i32 5
  store float 0.000000e+00, float* %53, align 8
  %54 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %39, align 8
  %55 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %54, i32 0, i32 7
  store %"struct.pov::Warps_Struct"* null, %"struct.pov::Warps_Struct"** %55, align 8
  %56 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %39, align 8
  %57 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %56, i32 0, i32 8
  store %"struct.pov::Pattern_Struct"* null, %"struct.pov::Pattern_Struct"** %57, align 8
  %58 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %39, align 8
  %59 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %58, i32 0, i32 9
  store %"struct.pov::Blend_Map_Struct"* null, %"struct.pov::Blend_Map_Struct"** %59, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define void @_ZN3pov16Copy_TPat_FieldsEPNS_14Pattern_StructES1_(%"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"*) #0 {
  %3 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %4 = alloca %"struct.pov::Pattern_Struct"*, align 8
  store %"struct.pov::Pattern_Struct"* %0, %"struct.pov::Pattern_Struct"** %3, align 8
  store %"struct.pov::Pattern_Struct"* %1, %"struct.pov::Pattern_Struct"** %4, align 8
  %5 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %6 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %7 = bitcast %"struct.pov::Pattern_Struct"* %6 to i8*
  %8 = bitcast %"struct.pov::Pattern_Struct"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 160, i32 8, i1 false)
  %9 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %10 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %9, i32 0, i32 7
  %11 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %10, align 8
  %12 = call %"struct.pov::Warps_Struct"* @_ZN3pov10Copy_WarpsEPNS_12Warps_StructE(%"struct.pov::Warps_Struct"* %11)
  %13 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %14 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %13, i32 0, i32 7
  store %"struct.pov::Warps_Struct"* %12, %"struct.pov::Warps_Struct"** %14, align 8
  %15 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %16 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %15, i32 0, i32 9
  %17 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %16, align 8
  %18 = call %"struct.pov::Blend_Map_Struct"* @_ZN3pov14Copy_Blend_MapEPNS_16Blend_Map_StructE(%"struct.pov::Blend_Map_Struct"* %17)
  %19 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %20 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %19, i32 0, i32 9
  store %"struct.pov::Blend_Map_Struct"* %18, %"struct.pov::Blend_Map_Struct"** %20, align 8
  %21 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %22 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %21, i32 0, i32 0
  %23 = load i16, i16* %22, align 8
  %24 = zext i16 %23 to i32
  %25 = icmp eq i32 %24, 4
  br i1 %25, label %32, label %26

; <label>:26:                                     ; preds = %2
  %27 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %28 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %27, i32 0, i32 0
  %29 = load i16, i16* %28, align 8
  %30 = zext i16 %29 to i32
  %31 = icmp eq i32 %30, 50
  br i1 %31, label %32, label %57

; <label>:32:                                     ; preds = %26, %2
  %33 = load i32, i32* @x.87
  %34 = load i32, i32* @y.88
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %32
  %41 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %42 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %41, i32 0, i32 10
  %43 = bitcast %union.anon.25* %42 to %"struct.pov::Image_Struct"**
  %44 = load %"struct.pov::Image_Struct"*, %"struct.pov::Image_Struct"** %43, align 8
  %45 = call %"struct.pov::Image_Struct"* @_ZN3pov10Copy_ImageEPNS_12Image_StructE(%"struct.pov::Image_Struct"* %44)
  %46 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %47 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %46, i32 0, i32 10
  %48 = bitcast %union.anon.25* %47 to %"struct.pov::Image_Struct"**
  store %"struct.pov::Image_Struct"* %45, %"struct.pov::Image_Struct"** %48, align 8
  %49 = load i32, i32* @x.87
  %50 = load i32, i32* @y.88
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %57

; <label>:57:                                     ; preds = %originalBBpart2, %26
  %58 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %59 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %58, i32 0, i32 0
  %60 = load i16, i16* %59, align 8
  %61 = zext i16 %60 to i32
  %62 = icmp eq i32 %61, 46
  br i1 %62, label %63, label %72

; <label>:63:                                     ; preds = %57
  %64 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %65 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %64, i32 0, i32 10
  %66 = bitcast %union.anon.25* %65 to %"struct.pov::Density_file_Struct"**
  %67 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %66, align 8
  %68 = call %"struct.pov::Density_file_Struct"* @_ZN3pov17Copy_Density_FileEPNS_19Density_file_StructE(%"struct.pov::Density_file_Struct"* %67)
  %69 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %70 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %69, i32 0, i32 10
  %71 = bitcast %union.anon.25* %70 to %"struct.pov::Density_file_Struct"**
  store %"struct.pov::Density_file_Struct"* %68, %"struct.pov::Density_file_Struct"** %71, align 8
  br label %72

; <label>:72:                                     ; preds = %63, %57
  %73 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %74 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %73, i32 0, i32 0
  %75 = load i16, i16* %74, align 8
  %76 = zext i16 %75 to i32
  %77 = icmp eq i32 %76, 49
  br i1 %77, label %78, label %87

; <label>:78:                                     ; preds = %72
  %79 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %80 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %79, i32 0, i32 10
  %81 = bitcast %union.anon.25* %80 to %"struct.pov::Pigment_Struct"**
  %82 = load %"struct.pov::Pigment_Struct"*, %"struct.pov::Pigment_Struct"** %81, align 8
  %83 = call %"struct.pov::Pigment_Struct"* @_ZN3pov12Copy_PigmentEPNS_14Pigment_StructE(%"struct.pov::Pigment_Struct"* %82)
  %84 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %85 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %84, i32 0, i32 10
  %86 = bitcast %union.anon.25* %85 to %"struct.pov::Pigment_Struct"**
  store %"struct.pov::Pigment_Struct"* %83, %"struct.pov::Pigment_Struct"** %86, align 8
  br label %87

; <label>:87:                                     ; preds = %78, %72
  %88 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %89 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %88, i32 0, i32 0
  %90 = load i16, i16* %89, align 8
  %91 = zext i16 %90 to i32
  %92 = icmp eq i32 %91, 13
  br i1 %92, label %93, label %125

; <label>:93:                                     ; preds = %87
  %94 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %95 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %94, i32 0, i32 10
  %96 = bitcast %union.anon.25* %95 to %"struct.pov::Object_Struct"**
  %97 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %96, align 8
  %98 = icmp ne %"struct.pov::Object_Struct"* %97, null
  br i1 %98, label %99, label %124

; <label>:99:                                     ; preds = %93
  %100 = load i32, i32* @x.87
  %101 = load i32, i32* @y.88
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %99
  %108 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %109 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %108, i32 0, i32 10
  %110 = bitcast %union.anon.25* %109 to %"struct.pov::Object_Struct"**
  %111 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %110, align 8
  %112 = call %"struct.pov::Object_Struct"* @_ZN3pov11Copy_ObjectEPNS_13Object_StructE(%"struct.pov::Object_Struct"* %111)
  %113 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %114 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %113, i32 0, i32 10
  %115 = bitcast %union.anon.25* %114 to %"struct.pov::Object_Struct"**
  store %"struct.pov::Object_Struct"* %112, %"struct.pov::Object_Struct"** %115, align 8
  %116 = load i32, i32* @x.87
  %117 = load i32, i32* @y.88
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %124

; <label>:124:                                    ; preds = %originalBBpart24, %93
  br label %125

; <label>:125:                                    ; preds = %124, %87
  %126 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %127 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %126, i32 0, i32 0
  %128 = load i16, i16* %127, align 8
  %129 = zext i16 %128 to i32
  %130 = icmp eq i32 %129, 39
  br i1 %130, label %131, label %166

; <label>:131:                                    ; preds = %125
  %132 = load i32, i32* @x.87
  %133 = load i32, i32* @y.88
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %131
  %140 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %141 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %140, i32 0, i32 10
  %142 = bitcast %union.anon.25* %141 to %struct.anon.29*
  %143 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %142, i32 0, i32 5
  %144 = load [3 x double]*, [3 x double]** %143, align 8
  %145 = icmp ne [3 x double]* %144, null
  %146 = load i32, i32* @x.87
  %147 = load i32, i32* @y.88
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %145, label %154, label %165

; <label>:154:                                    ; preds = %originalBBpart28
  %155 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 3000, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 343, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0))
  %156 = bitcast i8* %155 to [3 x double]*
  %157 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %158 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %157, i32 0, i32 10
  %159 = bitcast %union.anon.25* %158 to %struct.anon.29*
  %160 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %159, i32 0, i32 5
  store [3 x double]* %156, [3 x double]** %160, align 8
  %161 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %162 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %161, i32 0, i32 10
  %163 = bitcast %union.anon.25* %162 to %struct.anon.29*
  %164 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %163, i32 0, i32 6
  store i32 134217728, i32* %164, align 8
  br label %165

; <label>:165:                                    ; preds = %154, %originalBBpart28
  br label %166

; <label>:166:                                    ; preds = %165, %125
  %167 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %168 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %167, i32 0, i32 0
  %169 = load i16, i16* %168, align 8
  %170 = zext i16 %169 to i32
  %171 = icmp eq i32 %170, 47
  br i1 %171, label %172, label %209

; <label>:172:                                    ; preds = %166
  %173 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %174 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %173, i32 0, i32 10
  %175 = bitcast %union.anon.25* %174 to %struct.anon.32*
  %176 = getelementptr inbounds %struct.anon.32, %struct.anon.32* %175, i32 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = icmp ne i8* %177, null
  br i1 %178, label %179, label %208

; <label>:179:                                    ; preds = %172
  %180 = load i32, i32* @x.87
  %181 = load i32, i32* @y.88
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %179
  %188 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %189 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %188, i32 0, i32 10
  %190 = bitcast %union.anon.25* %189 to %struct.anon.32*
  %191 = getelementptr inbounds %struct.anon.32, %struct.anon.32* %190, i32 0, i32 0
  %192 = load i8*, i8** %191, align 8
  %193 = bitcast i8* %192 to i32*
  %194 = call i32* @_ZN3pov13Copy_FunctionEPj(i32* %193)
  %195 = bitcast i32* %194 to i8*
  %196 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %197 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %196, i32 0, i32 10
  %198 = bitcast %union.anon.25* %197 to %struct.anon.32*
  %199 = getelementptr inbounds %struct.anon.32, %struct.anon.32* %198, i32 0, i32 0
  store i8* %195, i8** %199, align 8
  %200 = load i32, i32* @x.87
  %201 = load i32, i32* @y.88
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %208

; <label>:208:                                    ; preds = %originalBBpart212, %172
  br label %209

; <label>:209:                                    ; preds = %208, %166
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %32
  %210 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %211 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %210, i32 0, i32 10
  %212 = bitcast %union.anon.25* %211 to %"struct.pov::Image_Struct"**
  %213 = load %"struct.pov::Image_Struct"*, %"struct.pov::Image_Struct"** %212, align 8
  %214 = call %"struct.pov::Image_Struct"* @_ZN3pov10Copy_ImageEPNS_12Image_StructE(%"struct.pov::Image_Struct"* %213)
  %215 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %216 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %215, i32 0, i32 10
  %217 = bitcast %union.anon.25* %216 to %"struct.pov::Image_Struct"**
  store %"struct.pov::Image_Struct"* %214, %"struct.pov::Image_Struct"** %217, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %99
  %218 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %219 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %218, i32 0, i32 10
  %220 = bitcast %union.anon.25* %219 to %"struct.pov::Object_Struct"**
  %221 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %220, align 8
  %222 = call %"struct.pov::Object_Struct"* @_ZN3pov11Copy_ObjectEPNS_13Object_StructE(%"struct.pov::Object_Struct"* %221)
  %223 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %224 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %223, i32 0, i32 10
  %225 = bitcast %union.anon.25* %224 to %"struct.pov::Object_Struct"**
  store %"struct.pov::Object_Struct"* %222, %"struct.pov::Object_Struct"** %225, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %131
  %226 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %227 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %226, i32 0, i32 10
  %228 = bitcast %union.anon.25* %227 to %struct.anon.29*
  %229 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %228, i32 0, i32 5
  %230 = load [3 x double]*, [3 x double]** %229, align 8
  %231 = icmp ne [3 x double]* %230, null
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %179
  %232 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %4, align 8
  %233 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %232, i32 0, i32 10
  %234 = bitcast %union.anon.25* %233 to %struct.anon.32*
  %235 = getelementptr inbounds %struct.anon.32, %struct.anon.32* %234, i32 0, i32 0
  %236 = load i8*, i8** %235, align 8
  %237 = bitcast i8* %236 to i32*
  %238 = call i32* @_ZN3pov13Copy_FunctionEPj(i32* %237)
  %239 = bitcast i32* %238 to i8*
  %240 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %241 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %240, i32 0, i32 10
  %242 = bitcast %union.anon.25* %241 to %struct.anon.32*
  %243 = getelementptr inbounds %struct.anon.32, %struct.anon.32* %242, i32 0, i32 0
  store i8* %239, i8** %243, align 8
  br label %originalBB10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

declare %"struct.pov::Warps_Struct"* @_ZN3pov10Copy_WarpsEPNS_12Warps_StructE(%"struct.pov::Warps_Struct"*) #1

declare %"struct.pov::Blend_Map_Struct"* @_ZN3pov14Copy_Blend_MapEPNS_16Blend_Map_StructE(%"struct.pov::Blend_Map_Struct"*) #1

declare %"struct.pov::Image_Struct"* @_ZN3pov10Copy_ImageEPNS_12Image_StructE(%"struct.pov::Image_Struct"*) #1

; Function Attrs: noinline uwtable
define %"struct.pov::Density_file_Struct"* @_ZN3pov17Copy_Density_FileEPNS_19Density_file_StructE(%"struct.pov::Density_file_Struct"*) #0 {
  %2 = alloca %"struct.pov::Density_file_Struct"*, align 8
  %3 = alloca %"struct.pov::Density_file_Struct"*, align 8
  store %"struct.pov::Density_file_Struct"* %0, %"struct.pov::Density_file_Struct"** %2, align 8
  %4 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %5 = icmp ne %"struct.pov::Density_file_Struct"* %4, null
  br i1 %5, label %6, label %35

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.89
  %8 = load i32, i32* @y.90
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %6
  %15 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4219, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0))
  %16 = bitcast i8* %15 to %"struct.pov::Density_file_Struct"*
  store %"struct.pov::Density_file_Struct"* %16, %"struct.pov::Density_file_Struct"** %3, align 8
  %17 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %18 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %3, align 8
  %19 = bitcast %"struct.pov::Density_file_Struct"* %18 to i8*
  %20 = bitcast %"struct.pov::Density_file_Struct"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 16, i32 8, i1 false)
  %21 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %3, align 8
  %22 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %21, i32 0, i32 1
  %23 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %22, align 8
  %24 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 8
  %27 = load i32, i32* @x.89
  %28 = load i32, i32* @y.90
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %36

; <label>:35:                                     ; preds = %1
  store %"struct.pov::Density_file_Struct"* null, %"struct.pov::Density_file_Struct"** %3, align 8
  br label %36

; <label>:36:                                     ; preds = %35, %originalBBpart2
  %37 = load i32, i32* @x.89
  %38 = load i32, i32* @y.90
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %originalBB3alteredBB, %36
  %45 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %3, align 8
  %46 = load i32, i32* @x.89
  %47 = load i32, i32* @y.90
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart25, label %originalBB3alteredBB

originalBBpart25:                                 ; preds = %originalBB3
  ret %"struct.pov::Density_file_Struct"* %45

originalBBalteredBB:                              ; preds = %originalBB, %6
  %54 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4219, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0))
  %55 = bitcast i8* %54 to %"struct.pov::Density_file_Struct"*
  store %"struct.pov::Density_file_Struct"* %55, %"struct.pov::Density_file_Struct"** %3, align 8
  %56 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %57 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %3, align 8
  %58 = bitcast %"struct.pov::Density_file_Struct"* %57 to i8*
  %59 = bitcast %"struct.pov::Density_file_Struct"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 16, i32 8, i1 false)
  %60 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %3, align 8
  %61 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %60, i32 0, i32 1
  %62 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %61, align 8
  %63 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %62, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %_ = sub i32 %64, 1
  %gen = mul i32 %_, 1
  %_1 = sub i32 0, %64
  %gen2 = add i32 %_1, 1
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %63, align 8
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %36
  %66 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %3, align 8
  br label %originalBB3
}

declare %"struct.pov::Pigment_Struct"* @_ZN3pov12Copy_PigmentEPNS_14Pigment_StructE(%"struct.pov::Pigment_Struct"*) #1

declare %"struct.pov::Object_Struct"* @_ZN3pov11Copy_ObjectEPNS_13Object_StructE(%"struct.pov::Object_Struct"*) #1

declare i8* @_ZN3pov10pov_mallocEmPKciS1_(i64, i8*, i32, i8*) #1

declare i32* @_ZN3pov13Copy_FunctionEPj(i32*) #1

; Function Attrs: noinline uwtable
define void @_ZN3pov19Destroy_TPat_FieldsEPNS_14Pattern_StructE(%"struct.pov::Pattern_Struct"*) #0 {
  %2 = alloca %"struct.pov::Pattern_Struct"*, align 8
  store %"struct.pov::Pattern_Struct"* %0, %"struct.pov::Pattern_Struct"** %2, align 8
  %3 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %4 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %3, i32 0, i32 7
  %5 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %4, align 8
  call void @_ZN3pov13Destroy_WarpsEPNS_12Warps_StructE(%"struct.pov::Warps_Struct"* %5)
  %6 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %7 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %6, i32 0, i32 9
  %8 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %7, align 8
  call void @_ZN3pov17Destroy_Blend_MapEPNS_16Blend_Map_StructE(%"struct.pov::Blend_Map_Struct"* %8)
  %9 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %10 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %9, i32 0, i32 0
  %11 = load i16, i16* %10, align 8
  %12 = zext i16 %11 to i32
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %20, label %14

; <label>:14:                                     ; preds = %1
  %15 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %16 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %15, i32 0, i32 0
  %17 = load i16, i16* %16, align 8
  %18 = zext i16 %17 to i32
  %19 = icmp eq i32 %18, 50
  br i1 %19, label %20, label %41

; <label>:20:                                     ; preds = %14, %1
  %21 = load i32, i32* @x.91
  %22 = load i32, i32* @y.92
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %20
  %29 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %30 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %29, i32 0, i32 10
  %31 = bitcast %union.anon.25* %30 to %"struct.pov::Image_Struct"**
  %32 = load %"struct.pov::Image_Struct"*, %"struct.pov::Image_Struct"** %31, align 8
  call void @_ZN3pov13Destroy_ImageEPNS_12Image_StructE(%"struct.pov::Image_Struct"* %32)
  %33 = load i32, i32* @x.91
  %34 = load i32, i32* @y.92
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %41

; <label>:41:                                     ; preds = %originalBBpart2, %14
  %42 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %43 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %42, i32 0, i32 0
  %44 = load i16, i16* %43, align 8
  %45 = zext i16 %44 to i32
  %46 = icmp eq i32 %45, 46
  br i1 %46, label %47, label %52

; <label>:47:                                     ; preds = %41
  %48 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %49 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %48, i32 0, i32 10
  %50 = bitcast %union.anon.25* %49 to %"struct.pov::Density_file_Struct"**
  %51 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %50, align 8
  call void @_ZN3pov20Destroy_Density_FileEPNS_19Density_file_StructE(%"struct.pov::Density_file_Struct"* %51)
  br label %52

; <label>:52:                                     ; preds = %47, %41
  %53 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %54 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %53, i32 0, i32 0
  %55 = load i16, i16* %54, align 8
  %56 = zext i16 %55 to i32
  %57 = icmp eq i32 %56, 13
  br i1 %57, label %58, label %86

; <label>:58:                                     ; preds = %52
  %59 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %60 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %59, i32 0, i32 10
  %61 = bitcast %union.anon.25* %60 to %"struct.pov::Object_Struct"**
  %62 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %61, align 8
  %63 = icmp ne %"struct.pov::Object_Struct"* %62, null
  br i1 %63, label %64, label %69

; <label>:64:                                     ; preds = %58
  %65 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %66 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %65, i32 0, i32 10
  %67 = bitcast %union.anon.25* %66 to %"struct.pov::Object_Struct"**
  %68 = load %"struct.pov::Object_Struct"*, %"struct.pov::Object_Struct"** %67, align 8
  call void @_ZN3pov14Destroy_ObjectEPNS_13Object_StructE(%"struct.pov::Object_Struct"* %68)
  br label %69

; <label>:69:                                     ; preds = %64, %58
  %70 = load i32, i32* @x.91
  %71 = load i32, i32* @y.92
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %69
  %78 = load i32, i32* @x.91
  %79 = load i32, i32* @y.92
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %86

; <label>:86:                                     ; preds = %originalBBpart24, %52
  %87 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %88 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %87, i32 0, i32 0
  %89 = load i16, i16* %88, align 8
  %90 = zext i16 %89 to i32
  %91 = icmp eq i32 %90, 39
  br i1 %91, label %92, label %127

; <label>:92:                                     ; preds = %86
  %93 = load i32, i32* @x.91
  %94 = load i32, i32* @y.92
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %92
  %101 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %102 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %101, i32 0, i32 10
  %103 = bitcast %union.anon.25* %102 to %struct.anon.29*
  %104 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %103, i32 0, i32 5
  %105 = load [3 x double]*, [3 x double]** %104, align 8
  %106 = icmp ne [3 x double]* %105, null
  %107 = load i32, i32* @x.91
  %108 = load i32, i32* @y.92
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %106, label %115, label %126

; <label>:115:                                    ; preds = %originalBBpart28
  %116 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %117 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %116, i32 0, i32 10
  %118 = bitcast %union.anon.25* %117 to %struct.anon.29*
  %119 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %118, i32 0, i32 5
  %120 = load [3 x double]*, [3 x double]** %119, align 8
  %121 = bitcast [3 x double]* %120 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %121, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 406)
  %122 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %123 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %122, i32 0, i32 10
  %124 = bitcast %union.anon.25* %123 to %struct.anon.29*
  %125 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %124, i32 0, i32 5
  store [3 x double]* null, [3 x double]** %125, align 8
  br label %126

; <label>:126:                                    ; preds = %115, %originalBBpart28
  br label %127

; <label>:127:                                    ; preds = %126, %86
  %128 = load i32, i32* @x.91
  %129 = load i32, i32* @y.92
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %127
  %136 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %137 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %136, i32 0, i32 0
  %138 = load i16, i16* %137, align 8
  %139 = zext i16 %138 to i32
  %140 = icmp eq i32 %139, 49
  %141 = load i32, i32* @x.91
  %142 = load i32, i32* @y.92
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %140, label %149, label %161

; <label>:149:                                    ; preds = %originalBBpart212
  %150 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %151 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %150, i32 0, i32 10
  %152 = bitcast %union.anon.25* %151 to %"struct.pov::Pigment_Struct"**
  %153 = load %"struct.pov::Pigment_Struct"*, %"struct.pov::Pigment_Struct"** %152, align 8
  %154 = icmp ne %"struct.pov::Pigment_Struct"* %153, null
  br i1 %154, label %155, label %160

; <label>:155:                                    ; preds = %149
  %156 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %157 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %156, i32 0, i32 10
  %158 = bitcast %union.anon.25* %157 to %"struct.pov::Pigment_Struct"**
  %159 = load %"struct.pov::Pigment_Struct"*, %"struct.pov::Pigment_Struct"** %158, align 8
  call void @_ZN3pov15Destroy_PigmentEPNS_14Pigment_StructE(%"struct.pov::Pigment_Struct"* %159)
  br label %160

; <label>:160:                                    ; preds = %155, %149
  br label %161

; <label>:161:                                    ; preds = %160, %originalBBpart212
  %162 = load i32, i32* @x.91
  %163 = load i32, i32* @y.92
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %originalBB14alteredBB, %161
  %170 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %171 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %170, i32 0, i32 0
  %172 = load i16, i16* %171, align 8
  %173 = zext i16 %172 to i32
  %174 = icmp eq i32 %173, 47
  %175 = load i32, i32* @x.91
  %176 = load i32, i32* @y.92
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %174, label %183, label %214

; <label>:183:                                    ; preds = %originalBBpart216
  %184 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %185 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %184, i32 0, i32 10
  %186 = bitcast %union.anon.25* %185 to %struct.anon.32*
  %187 = getelementptr inbounds %struct.anon.32, %struct.anon.32* %186, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = icmp ne i8* %188, null
  br i1 %189, label %190, label %197

; <label>:190:                                    ; preds = %183
  %191 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %192 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %191, i32 0, i32 10
  %193 = bitcast %union.anon.25* %192 to %struct.anon.32*
  %194 = getelementptr inbounds %struct.anon.32, %struct.anon.32* %193, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  %196 = bitcast i8* %195 to i32*
  call void @_ZN3pov16Destroy_FunctionEPj(i32* %196)
  br label %197

; <label>:197:                                    ; preds = %190, %183
  %198 = load i32, i32* @x.91
  %199 = load i32, i32* @y.92
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %originalBB18alteredBB, %197
  %206 = load i32, i32* @x.91
  %207 = load i32, i32* @y.92
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %214

; <label>:214:                                    ; preds = %originalBBpart220, %originalBBpart216
  %215 = load i32, i32* @x.91
  %216 = load i32, i32* @y.92
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %originalBB22alteredBB, %214
  %223 = load i32, i32* @x.91
  %224 = load i32, i32* @y.92
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %20
  %231 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %232 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %231, i32 0, i32 10
  %233 = bitcast %union.anon.25* %232 to %"struct.pov::Image_Struct"**
  %234 = load %"struct.pov::Image_Struct"*, %"struct.pov::Image_Struct"** %233, align 8
  call void @_ZN3pov13Destroy_ImageEPNS_12Image_StructE(%"struct.pov::Image_Struct"* %234)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %69
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %92
  %235 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %236 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %235, i32 0, i32 10
  %237 = bitcast %union.anon.25* %236 to %struct.anon.29*
  %238 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %237, i32 0, i32 5
  %239 = load [3 x double]*, [3 x double]** %238, align 8
  %240 = icmp ne [3 x double]* %239, null
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %127
  %241 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %242 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %241, i32 0, i32 0
  %243 = load i16, i16* %242, align 8
  %244 = zext i16 %243 to i32
  %245 = icmp eq i32 %244, 49
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %161
  %246 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %2, align 8
  %247 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %246, i32 0, i32 0
  %248 = load i16, i16* %247, align 8
  %249 = zext i16 %248 to i32
  %250 = icmp eq i32 %249, 47
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %197
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %214
  br label %originalBB22
}

declare void @_ZN3pov13Destroy_WarpsEPNS_12Warps_StructE(%"struct.pov::Warps_Struct"*) #1

declare void @_ZN3pov17Destroy_Blend_MapEPNS_16Blend_Map_StructE(%"struct.pov::Blend_Map_Struct"*) #1

declare void @_ZN3pov13Destroy_ImageEPNS_12Image_StructE(%"struct.pov::Image_Struct"*) #1

; Function Attrs: noinline uwtable
define void @_ZN3pov20Destroy_Density_FileEPNS_19Density_file_StructE(%"struct.pov::Density_file_Struct"*) #0 {
  %2 = load i32, i32* @x.93
  %3 = load i32, i32* @y.94
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %"struct.pov::Density_file_Struct"*, align 8
  store %"struct.pov::Density_file_Struct"* %0, %"struct.pov::Density_file_Struct"** %10, align 8
  %11 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %12 = icmp ne %"struct.pov::Density_file_Struct"* %11, null
  %13 = load i32, i32* @x.93
  %14 = load i32, i32* @y.94
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %125

; <label>:21:                                     ; preds = %originalBBpart2
  %22 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %23 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %22, i32 0, i32 1
  %24 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %23, align 8
  %25 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, -1
  store i32 %27, i32* %25, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %122

; <label>:29:                                     ; preds = %21
  %30 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %31 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %30, i32 0, i32 1
  %32 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %31, align 8
  %33 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %32, i32 0, i32 1
  %34 = load i8*, i8** %33, align 8
  call void @_ZN3pov8pov_freeEPvPKci(i8* %34, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4266)
  %35 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %36 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %35, i32 0, i32 1
  %37 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %36, align 8
  %38 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %37, i32 0, i32 1
  store i8* null, i8** %38, align 8
  %39 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %40 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %39, i32 0, i32 1
  %41 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %40, align 8
  %42 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %41, i32 0, i32 5
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 4
  br i1 %44, label %45, label %58

; <label>:45:                                     ; preds = %29
  %46 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %47 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %46, i32 0, i32 1
  %48 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %47, align 8
  %49 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %48, i32 0, i32 6
  %50 = bitcast %union.anon.1* %49 to i32**
  %51 = load i32*, i32** %50, align 8
  %52 = bitcast i32* %51 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %52, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4270)
  %53 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %54 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %53, i32 0, i32 1
  %55 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %54, align 8
  %56 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %55, i32 0, i32 6
  %57 = bitcast %union.anon.1* %56 to i32**
  store i32* null, i32** %57, align 8
  br label %115

; <label>:58:                                     ; preds = %29
  %59 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %60 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %59, i32 0, i32 1
  %61 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %60, align 8
  %62 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %61, i32 0, i32 5
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 2
  br i1 %64, label %65, label %94

; <label>:65:                                     ; preds = %58
  %66 = load i32, i32* @x.93
  %67 = load i32, i32* @y.94
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %65
  %74 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %75 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %74, i32 0, i32 1
  %76 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %75, align 8
  %77 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %76, i32 0, i32 6
  %78 = bitcast %union.anon.1* %77 to i16**
  %79 = load i16*, i16** %78, align 8
  %80 = bitcast i16* %79 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %80, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4274)
  %81 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %82 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %81, i32 0, i32 1
  %83 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %82, align 8
  %84 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %83, i32 0, i32 6
  %85 = bitcast %union.anon.1* %84 to i16**
  store i16* null, i16** %85, align 8
  %86 = load i32, i32* @x.93
  %87 = load i32, i32* @y.94
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %114

; <label>:94:                                     ; preds = %58
  %95 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %96 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %95, i32 0, i32 1
  %97 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %96, align 8
  %98 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %97, i32 0, i32 5
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %113

; <label>:101:                                    ; preds = %94
  %102 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %103 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %102, i32 0, i32 1
  %104 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %103, align 8
  %105 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %104, i32 0, i32 6
  %106 = bitcast %union.anon.1* %105 to i8**
  %107 = load i8*, i8** %106, align 8
  call void @_ZN3pov8pov_freeEPvPKci(i8* %107, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4278)
  %108 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %109 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %108, i32 0, i32 1
  %110 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %109, align 8
  %111 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %110, i32 0, i32 6
  %112 = bitcast %union.anon.1* %111 to i8**
  store i8* null, i8** %112, align 8
  br label %113

; <label>:113:                                    ; preds = %101, %94
  br label %114

; <label>:114:                                    ; preds = %113, %originalBBpart24
  br label %115

; <label>:115:                                    ; preds = %114, %45
  %116 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %117 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %116, i32 0, i32 1
  %118 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %117, align 8
  %119 = bitcast %"struct.pov::Density_file_Data_Struct"* %118 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %119, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4281)
  %120 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %121 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %120, i32 0, i32 1
  store %"struct.pov::Density_file_Data_Struct"* null, %"struct.pov::Density_file_Data_Struct"** %121, align 8
  br label %122

; <label>:122:                                    ; preds = %115, %21
  %123 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %124 = bitcast %"struct.pov::Density_file_Struct"* %123 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %124, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4284)
  store %"struct.pov::Density_file_Struct"* null, %"struct.pov::Density_file_Struct"** %10, align 8
  br label %125

; <label>:125:                                    ; preds = %122, %originalBBpart2
  %126 = load i32, i32* @x.93
  %127 = load i32, i32* @y.94
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %125
  %134 = load i32, i32* @x.93
  %135 = load i32, i32* @y.94
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %142 = alloca %"struct.pov::Density_file_Struct"*, align 8
  store %"struct.pov::Density_file_Struct"* %0, %"struct.pov::Density_file_Struct"** %142, align 8
  %143 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %142, align 8
  %144 = icmp ne %"struct.pov::Density_file_Struct"* %143, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %65
  %145 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %146 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %145, i32 0, i32 1
  %147 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %146, align 8
  %148 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %147, i32 0, i32 6
  %149 = bitcast %union.anon.1* %148 to i16**
  %150 = load i16*, i16** %149, align 8
  %151 = bitcast i16* %150 to i8*
  call void @_ZN3pov8pov_freeEPvPKci(i8* %151, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4274)
  %152 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %10, align 8
  %153 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %152, i32 0, i32 1
  %154 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %153, align 8
  %155 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %154, i32 0, i32 6
  %156 = bitcast %union.anon.1* %155 to i16**
  store i16* null, i16** %156, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %125
  br label %originalBB6
}

declare void @_ZN3pov14Destroy_ObjectEPNS_13Object_StructE(%"struct.pov::Object_Struct"*) #1

declare void @_ZN3pov8pov_freeEPvPKci(i8*, i8*, i32) #1

declare void @_ZN3pov15Destroy_PigmentEPNS_14Pigment_StructE(%"struct.pov::Pigment_Struct"*) #1

declare void @_ZN3pov16Destroy_FunctionEPj(i32*) #1

; Function Attrs: noinline uwtable
define %"struct.pov::Turb_Struct"* @_ZN3pov11Create_TurbEv() #0 {
  %1 = alloca %"struct.pov::Turb_Struct"*, align 8
  %2 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 64, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 450, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i32 0, i32 0))
  %3 = bitcast i8* %2 to %"struct.pov::Turb_Struct"*
  store %"struct.pov::Turb_Struct"* %3, %"struct.pov::Turb_Struct"** %1, align 8
  %4 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %1, align 8
  %5 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %4, i32 0, i32 3
  %6 = getelementptr inbounds [3 x double], [3 x double]* %5, i32 0, i32 0
  call void @_ZN3pov11Make_VectorEPdddd(double* %6, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00)
  %7 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %1, align 8
  %8 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %7, i32 0, i32 4
  store i32 6, i32* %8, align 8
  %9 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %1, align 8
  %10 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %9, i32 0, i32 6
  store float 5.000000e-01, float* %10, align 8
  %11 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %1, align 8
  %12 = getelementptr inbounds %"struct.pov::Turb_Struct", %"struct.pov::Turb_Struct"* %11, i32 0, i32 5
  store float 2.000000e+00, float* %12, align 4
  %13 = load %"struct.pov::Turb_Struct"*, %"struct.pov::Turb_Struct"** %1, align 8
  ret %"struct.pov::Turb_Struct"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov11Make_VectorEPdddd(double*, double, double, double) #2 comdat {
  %5 = alloca double*, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  store double* %0, double** %5, align 8
  store double %1, double* %6, align 8
  store double %2, double* %7, align 8
  store double %3, double* %8, align 8
  %9 = load double, double* %6, align 8
  %10 = load double*, double** %5, align 8
  %11 = getelementptr inbounds double, double* %10, i64 0
  store double %9, double* %11, align 8
  %12 = load double, double* %7, align 8
  %13 = load double*, double** %5, align 8
  %14 = getelementptr inbounds double, double* %13, i64 1
  store double %12, double* %14, align 8
  %15 = load double, double* %8, align 8
  %16 = load double*, double** %5, align 8
  %17 = getelementptr inbounds double, double* %16, i64 2
  store double %15, double* %17, align 8
  ret void
}

; Function Attrs: noinline uwtable
define void @_ZN3pov18Translate_TpatternEPNS_14Pattern_StructEPd(%"struct.pov::Pattern_Struct"*, double*) #0 {
  %3 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %4 = alloca double*, align 8
  %5 = alloca %"struct.pov::Transform_Struct", align 8
  store %"struct.pov::Pattern_Struct"* %0, %"struct.pov::Pattern_Struct"** %3, align 8
  store double* %1, double** %4, align 8
  %6 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %7 = icmp ne %"struct.pov::Pattern_Struct"* %6, null
  br i1 %7, label %8, label %27

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.99
  %10 = load i32, i32* @y.100
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %8
  %17 = load double*, double** %4, align 8
  call void @_ZN3pov29Compute_Translation_TransformEPNS_16Transform_StructEPd(%"struct.pov::Transform_Struct"* %5, double* %17)
  %18 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  call void @_ZN3pov18Transform_TpatternEPNS_14Pattern_StructEPNS_16Transform_StructE(%"struct.pov::Pattern_Struct"* %18, %"struct.pov::Transform_Struct"* %5)
  %19 = load i32, i32* @x.99
  %20 = load i32, i32* @y.100
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %originalBBpart2, %2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %8
  %28 = load double*, double** %4, align 8
  call void @_ZN3pov29Compute_Translation_TransformEPNS_16Transform_StructEPd(%"struct.pov::Transform_Struct"* %5, double* %28)
  %29 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  call void @_ZN3pov18Transform_TpatternEPNS_14Pattern_StructEPNS_16Transform_StructE(%"struct.pov::Pattern_Struct"* %29, %"struct.pov::Transform_Struct"* %5)
  br label %originalBB
}

declare void @_ZN3pov29Compute_Translation_TransformEPNS_16Transform_StructEPd(%"struct.pov::Transform_Struct"*, double*) #1

; Function Attrs: noinline uwtable
define void @_ZN3pov18Transform_TpatternEPNS_14Pattern_StructEPNS_16Transform_StructE(%"struct.pov::Pattern_Struct"*, %"struct.pov::Transform_Struct"*) #0 {
  %3 = load i32, i32* @x.101
  %4 = load i32, i32* @y.102
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %12 = alloca %"struct.pov::Transform_Struct"*, align 8
  %13 = alloca %"struct.pov::Warps_Struct"*, align 8
  store %"struct.pov::Pattern_Struct"* %0, %"struct.pov::Pattern_Struct"** %11, align 8
  store %"struct.pov::Transform_Struct"* %1, %"struct.pov::Transform_Struct"** %12, align 8
  %14 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %11, align 8
  %15 = icmp ne %"struct.pov::Pattern_Struct"* %14, null
  %16 = load i32, i32* @x.101
  %17 = load i32, i32* @y.102
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %94

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %11, align 8
  %26 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %25, i32 0, i32 7
  %27 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %26, align 8
  %28 = icmp eq %"struct.pov::Warps_Struct"* %27, null
  br i1 %28, label %29, label %33

; <label>:29:                                     ; preds = %24
  %30 = call %"struct.pov::Warps_Struct"* @_ZN3pov11Create_WarpEi(i32 5)
  %31 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %11, align 8
  %32 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %31, i32 0, i32 7
  store %"struct.pov::Warps_Struct"* %30, %"struct.pov::Warps_Struct"** %32, align 8
  br label %87

; <label>:33:                                     ; preds = %24
  %34 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %11, align 8
  %35 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %34, i32 0, i32 7
  %36 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %35, align 8
  %37 = getelementptr inbounds %"struct.pov::Warps_Struct", %"struct.pov::Warps_Struct"* %36, i32 0, i32 0
  %38 = load i16, i16* %37, align 8
  %39 = zext i16 %38 to i32
  %40 = icmp ne i32 %39, 5
  br i1 %40, label %41, label %86

; <label>:41:                                     ; preds = %33
  %42 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %11, align 8
  %43 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %42, i32 0, i32 7
  %44 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %43, align 8
  store %"struct.pov::Warps_Struct"* %44, %"struct.pov::Warps_Struct"** %13, align 8
  %45 = call %"struct.pov::Warps_Struct"* @_ZN3pov11Create_WarpEi(i32 5)
  %46 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %11, align 8
  %47 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %46, i32 0, i32 7
  store %"struct.pov::Warps_Struct"* %45, %"struct.pov::Warps_Struct"** %47, align 8
  %48 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %13, align 8
  %49 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %11, align 8
  %50 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %49, i32 0, i32 7
  %51 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %50, align 8
  %52 = getelementptr inbounds %"struct.pov::Warps_Struct", %"struct.pov::Warps_Struct"* %51, i32 0, i32 2
  store %"struct.pov::Warps_Struct"* %48, %"struct.pov::Warps_Struct"** %52, align 8
  %53 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %11, align 8
  %54 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %53, i32 0, i32 7
  %55 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %54, align 8
  %56 = getelementptr inbounds %"struct.pov::Warps_Struct", %"struct.pov::Warps_Struct"* %55, i32 0, i32 2
  %57 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %56, align 8
  %58 = icmp ne %"struct.pov::Warps_Struct"* %57, null
  br i1 %58, label %59, label %85

; <label>:59:                                     ; preds = %41
  %60 = load i32, i32* @x.101
  %61 = load i32, i32* @y.102
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %59
  %68 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %11, align 8
  %69 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %68, i32 0, i32 7
  %70 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %69, align 8
  %71 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %11, align 8
  %72 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %71, i32 0, i32 7
  %73 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %72, align 8
  %74 = getelementptr inbounds %"struct.pov::Warps_Struct", %"struct.pov::Warps_Struct"* %73, i32 0, i32 2
  %75 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %74, align 8
  %76 = getelementptr inbounds %"struct.pov::Warps_Struct", %"struct.pov::Warps_Struct"* %75, i32 0, i32 1
  store %"struct.pov::Warps_Struct"* %70, %"struct.pov::Warps_Struct"** %76, align 8
  %77 = load i32, i32* @x.101
  %78 = load i32, i32* @y.102
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %85

; <label>:85:                                     ; preds = %originalBBpart24, %41
  br label %86

; <label>:86:                                     ; preds = %85, %33
  br label %87

; <label>:87:                                     ; preds = %86, %29
  %88 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %11, align 8
  %89 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %88, i32 0, i32 7
  %90 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %89, align 8
  %91 = bitcast %"struct.pov::Warps_Struct"* %90 to %"struct.pov::Trans_Warp"*
  %92 = getelementptr inbounds %"struct.pov::Trans_Warp", %"struct.pov::Trans_Warp"* %91, i32 0, i32 3
  %93 = load %"struct.pov::Transform_Struct"*, %"struct.pov::Transform_Struct"** %12, align 8
  call void @_ZN3pov18Compose_TransformsEPNS_16Transform_StructES1_(%"struct.pov::Transform_Struct"* %92, %"struct.pov::Transform_Struct"* %93)
  br label %94

; <label>:94:                                     ; preds = %87, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %95 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %96 = alloca %"struct.pov::Transform_Struct"*, align 8
  %97 = alloca %"struct.pov::Warps_Struct"*, align 8
  store %"struct.pov::Pattern_Struct"* %0, %"struct.pov::Pattern_Struct"** %95, align 8
  store %"struct.pov::Transform_Struct"* %1, %"struct.pov::Transform_Struct"** %96, align 8
  %98 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %95, align 8
  %99 = icmp ne %"struct.pov::Pattern_Struct"* %98, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %59
  %100 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %11, align 8
  %101 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %100, i32 0, i32 7
  %102 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %101, align 8
  %103 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %11, align 8
  %104 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %103, i32 0, i32 7
  %105 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %104, align 8
  %106 = getelementptr inbounds %"struct.pov::Warps_Struct", %"struct.pov::Warps_Struct"* %105, i32 0, i32 2
  %107 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %106, align 8
  %108 = getelementptr inbounds %"struct.pov::Warps_Struct", %"struct.pov::Warps_Struct"* %107, i32 0, i32 1
  store %"struct.pov::Warps_Struct"* %102, %"struct.pov::Warps_Struct"** %108, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define void @_ZN3pov15Rotate_TpatternEPNS_14Pattern_StructEPd(%"struct.pov::Pattern_Struct"*, double*) #0 {
  %3 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %4 = alloca double*, align 8
  %5 = alloca %"struct.pov::Transform_Struct", align 8
  store %"struct.pov::Pattern_Struct"* %0, %"struct.pov::Pattern_Struct"** %3, align 8
  store double* %1, double** %4, align 8
  %6 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %7 = icmp ne %"struct.pov::Pattern_Struct"* %6, null
  br i1 %7, label %8, label %27

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.103
  %10 = load i32, i32* @y.104
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %8
  %17 = load double*, double** %4, align 8
  call void @_ZN3pov26Compute_Rotation_TransformEPNS_16Transform_StructEPd(%"struct.pov::Transform_Struct"* %5, double* %17)
  %18 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  call void @_ZN3pov18Transform_TpatternEPNS_14Pattern_StructEPNS_16Transform_StructE(%"struct.pov::Pattern_Struct"* %18, %"struct.pov::Transform_Struct"* %5)
  %19 = load i32, i32* @x.103
  %20 = load i32, i32* @y.104
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %originalBBpart2, %2
  %28 = load i32, i32* @x.103
  %29 = load i32, i32* @y.104
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %27
  %36 = load i32, i32* @x.103
  %37 = load i32, i32* @y.104
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %8
  %44 = load double*, double** %4, align 8
  call void @_ZN3pov26Compute_Rotation_TransformEPNS_16Transform_StructEPd(%"struct.pov::Transform_Struct"* %5, double* %44)
  %45 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  call void @_ZN3pov18Transform_TpatternEPNS_14Pattern_StructEPNS_16Transform_StructE(%"struct.pov::Pattern_Struct"* %45, %"struct.pov::Transform_Struct"* %5)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  br label %originalBB1
}

declare void @_ZN3pov26Compute_Rotation_TransformEPNS_16Transform_StructEPd(%"struct.pov::Transform_Struct"*, double*) #1

; Function Attrs: noinline uwtable
define void @_ZN3pov14Scale_TpatternEPNS_14Pattern_StructEPd(%"struct.pov::Pattern_Struct"*, double*) #0 {
  %3 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %4 = alloca double*, align 8
  %5 = alloca %"struct.pov::Transform_Struct", align 8
  store %"struct.pov::Pattern_Struct"* %0, %"struct.pov::Pattern_Struct"** %3, align 8
  store double* %1, double** %4, align 8
  %6 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  %7 = icmp ne %"struct.pov::Pattern_Struct"* %6, null
  br i1 %7, label %8, label %27

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.105
  %10 = load i32, i32* @y.106
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %8
  %17 = load double*, double** %4, align 8
  call void @_ZN3pov25Compute_Scaling_TransformEPNS_16Transform_StructEPd(%"struct.pov::Transform_Struct"* %5, double* %17)
  %18 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  call void @_ZN3pov18Transform_TpatternEPNS_14Pattern_StructEPNS_16Transform_StructE(%"struct.pov::Pattern_Struct"* %18, %"struct.pov::Transform_Struct"* %5)
  %19 = load i32, i32* @x.105
  %20 = load i32, i32* @y.106
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %originalBBpart2, %2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %8
  %28 = load double*, double** %4, align 8
  call void @_ZN3pov25Compute_Scaling_TransformEPNS_16Transform_StructEPd(%"struct.pov::Transform_Struct"* %5, double* %28)
  %29 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %3, align 8
  call void @_ZN3pov18Transform_TpatternEPNS_14Pattern_StructEPNS_16Transform_StructE(%"struct.pov::Pattern_Struct"* %29, %"struct.pov::Transform_Struct"* %5)
  br label %originalBB
}

declare void @_ZN3pov25Compute_Scaling_TransformEPNS_16Transform_StructEPd(%"struct.pov::Transform_Struct"*, double*) #1

declare %"struct.pov::Warps_Struct"* @_ZN3pov11Create_WarpEi(i32) #1

declare void @_ZN3pov18Compose_TransformsEPNS_16Transform_StructES1_(%"struct.pov::Transform_Struct"*, %"struct.pov::Transform_Struct"*) #1

; Function Attrs: noinline nounwind uwtable
define void @_ZN3pov16Search_Blend_MapEdPNS_16Blend_Map_StructEPPNS_15Blend_Map_EntryES4_(double, %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Entry"**, %"struct.pov::Blend_Map_Entry"**) #2 {
  %5 = alloca double, align 8
  %6 = alloca %"struct.pov::Blend_Map_Struct"*, align 8
  %7 = alloca %"struct.pov::Blend_Map_Entry"**, align 8
  %8 = alloca %"struct.pov::Blend_Map_Entry"**, align 8
  %9 = alloca %"struct.pov::Blend_Map_Entry"*, align 8
  %10 = alloca %"struct.pov::Blend_Map_Entry"*, align 8
  %11 = alloca i32, align 4
  store double %0, double* %5, align 8
  store %"struct.pov::Blend_Map_Struct"* %1, %"struct.pov::Blend_Map_Struct"** %6, align 8
  store %"struct.pov::Blend_Map_Entry"** %2, %"struct.pov::Blend_Map_Entry"*** %7, align 8
  store %"struct.pov::Blend_Map_Entry"** %3, %"struct.pov::Blend_Map_Entry"*** %8, align 8
  %12 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %6, align 8
  %13 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %12, i32 0, i32 1
  %14 = load i16, i16* %13, align 4
  %15 = sext i16 %14 to i32
  %16 = sub nsw i32 %15, 1
  store i32 %16, i32* %11, align 4
  %17 = load double, double* %5, align 8
  %18 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %6, align 8
  %19 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %18, i32 0, i32 4
  %20 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %19, align 8
  %21 = load i32, i32* %11, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %20, i64 %22
  %24 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %23, i32 0, i32 0
  %25 = load float, float* %24, align 8
  %26 = fpext float %25 to double
  %27 = fcmp oge double %17, %26
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %4
  %29 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %6, align 8
  %30 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %29, i32 0, i32 4
  %31 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %30, align 8
  %32 = load i32, i32* %11, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %31, i64 %33
  store %"struct.pov::Blend_Map_Entry"* %34, %"struct.pov::Blend_Map_Entry"** %10, align 8
  store %"struct.pov::Blend_Map_Entry"* %34, %"struct.pov::Blend_Map_Entry"** %9, align 8
  br label %67

; <label>:35:                                     ; preds = %4
  %36 = load i32, i32* @x.107
  %37 = load i32, i32* @y.108
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %35
  %44 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %6, align 8
  %45 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %44, i32 0, i32 4
  %46 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %45, align 8
  %47 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %46, i64 0
  store %"struct.pov::Blend_Map_Entry"* %47, %"struct.pov::Blend_Map_Entry"** %10, align 8
  store %"struct.pov::Blend_Map_Entry"* %47, %"struct.pov::Blend_Map_Entry"** %9, align 8
  %48 = load i32, i32* @x.107
  %49 = load i32, i32* @y.108
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %56

; <label>:56:                                     ; preds = %63, %originalBBpart2
  %57 = load double, double* %5, align 8
  %58 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %10, align 8
  %59 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %58, i32 0, i32 0
  %60 = load float, float* %59, align 8
  %61 = fpext float %60 to double
  %62 = fcmp ogt double %57, %61
  br i1 %62, label %63, label %66

; <label>:63:                                     ; preds = %56
  %64 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %10, align 8
  %65 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %64, i32 1
  store %"struct.pov::Blend_Map_Entry"* %65, %"struct.pov::Blend_Map_Entry"** %10, align 8
  store %"struct.pov::Blend_Map_Entry"* %64, %"struct.pov::Blend_Map_Entry"** %9, align 8
  br label %56

; <label>:66:                                     ; preds = %56
  br label %67

; <label>:67:                                     ; preds = %66, %28
  %68 = load double, double* %5, align 8
  %69 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %10, align 8
  %70 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %69, i32 0, i32 0
  %71 = load float, float* %70, align 8
  %72 = fpext float %71 to double
  %73 = fcmp oeq double %68, %72
  br i1 %73, label %74, label %92

; <label>:74:                                     ; preds = %67
  %75 = load i32, i32* @x.107
  %76 = load i32, i32* @y.108
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %74
  %83 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %10, align 8
  store %"struct.pov::Blend_Map_Entry"* %83, %"struct.pov::Blend_Map_Entry"** %9, align 8
  %84 = load i32, i32* @x.107
  %85 = load i32, i32* @y.108
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %92

; <label>:92:                                     ; preds = %originalBBpart24, %67
  %93 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %9, align 8
  %94 = load %"struct.pov::Blend_Map_Entry"**, %"struct.pov::Blend_Map_Entry"*** %7, align 8
  store %"struct.pov::Blend_Map_Entry"* %93, %"struct.pov::Blend_Map_Entry"** %94, align 8
  %95 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %10, align 8
  %96 = load %"struct.pov::Blend_Map_Entry"**, %"struct.pov::Blend_Map_Entry"*** %8, align 8
  store %"struct.pov::Blend_Map_Entry"* %95, %"struct.pov::Blend_Map_Entry"** %96, align 8
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %35
  %97 = load %"struct.pov::Blend_Map_Struct"*, %"struct.pov::Blend_Map_Struct"** %6, align 8
  %98 = getelementptr inbounds %"struct.pov::Blend_Map_Struct", %"struct.pov::Blend_Map_Struct"* %97, i32 0, i32 4
  %99 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %98, align 8
  %100 = getelementptr inbounds %"struct.pov::Blend_Map_Entry", %"struct.pov::Blend_Map_Entry"* %99, i64 0
  store %"struct.pov::Blend_Map_Entry"* %100, %"struct.pov::Blend_Map_Entry"** %10, align 8
  store %"struct.pov::Blend_Map_Entry"* %100, %"struct.pov::Blend_Map_Entry"** %9, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %74
  %101 = load %"struct.pov::Blend_Map_Entry"*, %"struct.pov::Blend_Map_Entry"** %10, align 8
  store %"struct.pov::Blend_Map_Entry"* %101, %"struct.pov::Blend_Map_Entry"** %9, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define i32 @_ZN3pov10PickInCubeEPdS0_(double*, double*) #0 {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [3 x double], align 16
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  %8 = load double*, double** %3, align 8
  %9 = getelementptr inbounds double, double* %8, i64 0
  %10 = load double, double* %9, align 8
  %11 = fsub double %10, 1.000000e-07
  %12 = call double @floor(double %11) #6
  %13 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 0
  store double %12, double* %13, align 16
  %14 = load double*, double** %3, align 8
  %15 = getelementptr inbounds double, double* %14, i64 1
  %16 = load double, double* %15, align 8
  %17 = fsub double %16, 1.000000e-07
  %18 = call double @floor(double %17) #6
  %19 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 1
  store double %18, double* %19, align 8
  %20 = load double*, double** %3, align 8
  %21 = getelementptr inbounds double, double* %20, i64 2
  %22 = load double, double* %21, align 8
  %23 = fsub double %22, 1.000000e-07
  %24 = call double @floor(double %23) #6
  %25 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 2
  store double %24, double* %25, align 16
  %26 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 0
  %27 = load double, double* %26, align 16
  %28 = fptosi double %27 to i32
  %29 = and i32 %28, 4095
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 1
  %35 = load double, double* %34, align 8
  %36 = fptosi double %35 to i32
  %37 = and i32 %36, 4095
  %38 = xor i32 %33, %37
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %39
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 2
  %44 = load double, double* %43, align 16
  %45 = fptosi double %44 to i32
  %46 = and i32 %45, 4095
  %47 = xor i32 %42, %46
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i32
  store i32 %51, i32* %5, align 4
  %52 = call i32 @_ZN3pov16POV_GET_OLD_RANDEv()
  store i32 %52, i32* %6, align 4
  %53 = load i32, i32* %5, align 4
  call void @_ZN3pov9POV_SRANDEi(i32 %53)
  %54 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 0
  %55 = load double, double* %54, align 16
  %56 = call i32 @_ZN3pov8POV_RANDEv()
  %57 = sitofp i32 %56 to double
  %58 = fmul double %57, 0x3F0000200040021E
  %59 = fadd double %55, %58
  %60 = load double*, double** %4, align 8
  %61 = getelementptr inbounds double, double* %60, i64 0
  store double %59, double* %61, align 8
  %62 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 1
  %63 = load double, double* %62, align 8
  %64 = call i32 @_ZN3pov8POV_RANDEv()
  %65 = sitofp i32 %64 to double
  %66 = fmul double %65, 0x3F0000200040021E
  %67 = fadd double %63, %66
  %68 = load double*, double** %4, align 8
  %69 = getelementptr inbounds double, double* %68, i64 1
  store double %67, double* %69, align 8
  %70 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 2
  %71 = load double, double* %70, align 16
  %72 = call i32 @_ZN3pov8POV_RANDEv()
  %73 = sitofp i32 %72 to double
  %74 = fmul double %73, 0x3F0000200040021E
  %75 = fadd double %71, %74
  %76 = load double*, double** %4, align 8
  %77 = getelementptr inbounds double, double* %76, i64 2
  store double %75, double* %77, align 8
  %78 = load i32, i32* %6, align 4
  call void @_ZN3pov9POV_SRANDEi(i32 %78)
  %79 = load i32, i32* %5, align 4
  ret i32 %79
}

declare i32 @_ZN3pov16POV_GET_OLD_RANDEv() #1

declare void @_ZN3pov9POV_SRANDEi(i32) #1

declare i32 @_ZN3pov8POV_RANDEv() #1

; Function Attrs: noinline nounwind uwtable
define double @_ZN3pov11quilt_cubicEddd(double, double, double) #2 {
  %4 = load i32, i32* @x.111
  %5 = load i32, i32* @y.112
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  store double %0, double* %12, align 8
  store double %1, double* %13, align 8
  store double %2, double* %14, align 8
  %20 = load double, double* %12, align 8
  %21 = fsub double 1.000000e+00, %20
  store double %21, double* %15, align 8
  %22 = load double, double* %15, align 8
  %23 = load double, double* %15, align 8
  %24 = fmul double %22, %23
  store double %24, double* %16, align 8
  %25 = load double, double* %12, align 8
  %26 = load double, double* %12, align 8
  %27 = fmul double %25, %26
  store double %27, double* %17, align 8
  %28 = load double, double* %12, align 8
  %29 = load double, double* %17, align 8
  %30 = fmul double %28, %29
  store double %30, double* %18, align 8
  %31 = load double, double* %18, align 8
  %32 = load double, double* %12, align 8
  %33 = fmul double 3.000000e+00, %32
  %34 = load double, double* %16, align 8
  %35 = fmul double %33, %34
  %36 = load double, double* %13, align 8
  %37 = fmul double %35, %36
  %38 = fadd double %31, %37
  %39 = load double, double* %17, align 8
  %40 = fmul double 3.000000e+00, %39
  %41 = load double, double* %15, align 8
  %42 = fmul double %40, %41
  %43 = load double, double* %14, align 8
  %44 = fmul double %42, %43
  %45 = fadd double %38, %44
  %46 = fmul double %45, 0x3FF279A74576233F
  store double %46, double* %19, align 8
  %47 = load double, double* %19, align 8
  %48 = load i32, i32* @x.111
  %49 = load i32, i32* @y.112
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double %47

originalBBalteredBB:                              ; preds = %originalBB, %3
  %56 = alloca double, align 8
  %57 = alloca double, align 8
  %58 = alloca double, align 8
  %59 = alloca double, align 8
  %60 = alloca double, align 8
  %61 = alloca double, align 8
  %62 = alloca double, align 8
  %63 = alloca double, align 8
  store double %0, double* %56, align 8
  store double %1, double* %57, align 8
  store double %2, double* %58, align 8
  %64 = load double, double* %56, align 8
  %_ = fsub double -0.000000e+00, 1.000000e+00
  %gen = fadd double %_, %64
  %_1 = fsub double -0.000000e+00, 1.000000e+00
  %gen2 = fadd double %_1, %64
  %_3 = fsub double 1.000000e+00, %64
  %gen4 = fmul double %_3, %64
  %_5 = fsub double 1.000000e+00, %64
  %gen6 = fmul double %_5, %64
  %65 = fsub double 1.000000e+00, %64
  store double %65, double* %59, align 8
  %66 = load double, double* %59, align 8
  %67 = load double, double* %59, align 8
  %_7 = fsub double %66, %67
  %gen8 = fmul double %_7, %67
  %_9 = fsub double %66, %67
  %gen10 = fmul double %_9, %67
  %_11 = fsub double -0.000000e+00, %66
  %gen12 = fadd double %_11, %67
  %_13 = fsub double -0.000000e+00, %66
  %gen14 = fadd double %_13, %67
  %_15 = fsub double %66, %67
  %gen16 = fmul double %_15, %67
  %_17 = fsub double %66, %67
  %gen18 = fmul double %_17, %67
  %_19 = fsub double %66, %67
  %gen20 = fmul double %_19, %67
  %68 = fmul double %66, %67
  store double %68, double* %60, align 8
  %69 = load double, double* %56, align 8
  %70 = load double, double* %56, align 8
  %_21 = fsub double %69, %70
  %gen22 = fmul double %_21, %70
  %_23 = fsub double -0.000000e+00, %69
  %gen24 = fadd double %_23, %70
  %_25 = fsub double -0.000000e+00, %69
  %gen26 = fadd double %_25, %70
  %_27 = fsub double -0.000000e+00, %69
  %gen28 = fadd double %_27, %70
  %_29 = fsub double %69, %70
  %gen30 = fmul double %_29, %70
  %_31 = fsub double -0.000000e+00, %69
  %gen32 = fadd double %_31, %70
  %_33 = fsub double -0.000000e+00, %69
  %gen34 = fadd double %_33, %70
  %71 = fmul double %69, %70
  store double %71, double* %61, align 8
  %72 = load double, double* %56, align 8
  %73 = load double, double* %61, align 8
  %_35 = fsub double %72, %73
  %gen36 = fmul double %_35, %73
  %_37 = fsub double -0.000000e+00, %72
  %gen38 = fadd double %_37, %73
  %_39 = fsub double -0.000000e+00, %72
  %gen40 = fadd double %_39, %73
  %_41 = fsub double %72, %73
  %gen42 = fmul double %_41, %73
  %_43 = fsub double -0.000000e+00, %72
  %gen44 = fadd double %_43, %73
  %_45 = fsub double %72, %73
  %gen46 = fmul double %_45, %73
  %_47 = fsub double -0.000000e+00, %72
  %gen48 = fadd double %_47, %73
  %74 = fmul double %72, %73
  store double %74, double* %62, align 8
  %75 = load double, double* %62, align 8
  %76 = load double, double* %56, align 8
  %_49 = fsub double 3.000000e+00, %76
  %gen50 = fmul double %_49, %76
  %77 = fmul double 3.000000e+00, %76
  %78 = load double, double* %60, align 8
  %79 = fmul double %77, %78
  %80 = load double, double* %57, align 8
  %_51 = fsub double -0.000000e+00, %79
  %gen52 = fadd double %_51, %80
  %_53 = fsub double %79, %80
  %gen54 = fmul double %_53, %80
  %_55 = fsub double %79, %80
  %gen56 = fmul double %_55, %80
  %_57 = fsub double %79, %80
  %gen58 = fmul double %_57, %80
  %_59 = fsub double %79, %80
  %gen60 = fmul double %_59, %80
  %_61 = fsub double %79, %80
  %gen62 = fmul double %_61, %80
  %81 = fmul double %79, %80
  %_63 = fsub double -0.000000e+00, %75
  %gen64 = fadd double %_63, %81
  %_65 = fsub double -0.000000e+00, %75
  %gen66 = fadd double %_65, %81
  %_67 = fsub double -0.000000e+00, %75
  %gen68 = fadd double %_67, %81
  %_69 = fsub double %75, %81
  %gen70 = fmul double %_69, %81
  %_71 = fsub double -0.000000e+00, %75
  %gen72 = fadd double %_71, %81
  %_73 = fsub double %75, %81
  %gen74 = fmul double %_73, %81
  %82 = fadd double %75, %81
  %83 = load double, double* %61, align 8
  %_75 = fsub double 3.000000e+00, %83
  %gen76 = fmul double %_75, %83
  %_77 = fsub double 3.000000e+00, %83
  %gen78 = fmul double %_77, %83
  %_79 = fsub double 3.000000e+00, %83
  %gen80 = fmul double %_79, %83
  %_81 = fsub double -0.000000e+00, 3.000000e+00
  %gen82 = fadd double %_81, %83
  %_83 = fsub double 3.000000e+00, %83
  %gen84 = fmul double %_83, %83
  %_85 = fsub double -0.000000e+00, 3.000000e+00
  %gen86 = fadd double %_85, %83
  %84 = fmul double 3.000000e+00, %83
  %85 = load double, double* %59, align 8
  %86 = fmul double %84, %85
  %87 = load double, double* %58, align 8
  %_87 = fsub double -0.000000e+00, %86
  %gen88 = fadd double %_87, %87
  %_89 = fsub double -0.000000e+00, %86
  %gen90 = fadd double %_89, %87
  %_91 = fsub double -0.000000e+00, %86
  %gen92 = fadd double %_91, %87
  %_93 = fsub double -0.000000e+00, %86
  %gen94 = fadd double %_93, %87
  %_95 = fsub double -0.000000e+00, %86
  %gen96 = fadd double %_95, %87
  %_97 = fsub double -0.000000e+00, %86
  %gen98 = fadd double %_97, %87
  %88 = fmul double %86, %87
  %_99 = fsub double %82, %88
  %gen100 = fmul double %_99, %88
  %_101 = fsub double -0.000000e+00, %82
  %gen102 = fadd double %_101, %88
  %89 = fadd double %82, %88
  %_103 = fsub double -0.000000e+00, %89
  %gen104 = fadd double %_103, 0x3FF279A74576233F
  %_105 = fsub double %89, 0x3FF279A74576233F
  %gen106 = fmul double %_105, 0x3FF279A74576233F
  %_107 = fsub double %89, 0x3FF279A74576233F
  %gen108 = fmul double %_107, 0x3FF279A74576233F
  %_109 = fsub double -0.000000e+00, %89
  %gen110 = fadd double %_109, 0x3FF279A74576233F
  %90 = fmul double %89, 0x3FF279A74576233F
  store double %90, double* %63, align 8
  %91 = load double, double* %63, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define %"struct.pov::Density_file_Struct"* @_ZN3pov19Create_Density_FileEv() #0 {
  %1 = alloca %"struct.pov::Density_file_Struct"*, align 8
  %2 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4163, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0))
  %3 = bitcast i8* %2 to %"struct.pov::Density_file_Struct"*
  store %"struct.pov::Density_file_Struct"* %3, %"struct.pov::Density_file_Struct"** %1, align 8
  %4 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %1, align 8
  %5 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4167, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i32 0, i32 0))
  %7 = bitcast i8* %6 to %"struct.pov::Density_file_Data_Struct"*
  %8 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %1, align 8
  %9 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %8, i32 0, i32 1
  store %"struct.pov::Density_file_Data_Struct"* %7, %"struct.pov::Density_file_Data_Struct"** %9, align 8
  %10 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %1, align 8
  %11 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %10, i32 0, i32 1
  %12 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %11, align 8
  %13 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %12, i32 0, i32 0
  store i32 1, i32* %13, align 8
  %14 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %1, align 8
  %15 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %14, i32 0, i32 1
  %16 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %15, align 8
  %17 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %16, i32 0, i32 1
  store i8* null, i8** %17, align 8
  %18 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %1, align 8
  %19 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %18, i32 0, i32 1
  %20 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %19, align 8
  %21 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %20, i32 0, i32 4
  store i32 0, i32* %21, align 8
  %22 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %1, align 8
  %23 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %22, i32 0, i32 1
  %24 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %23, align 8
  %25 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %24, i32 0, i32 3
  store i32 0, i32* %25, align 4
  %26 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %1, align 8
  %27 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %26, i32 0, i32 1
  %28 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %27, align 8
  %29 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %28, i32 0, i32 2
  store i32 0, i32* %29, align 8
  %30 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %1, align 8
  %31 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %30, i32 0, i32 1
  %32 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %31, align 8
  %33 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %32, i32 0, i32 5
  store i32 0, i32* %33, align 4
  %34 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %1, align 8
  %35 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %34, i32 0, i32 1
  %36 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %35, align 8
  %37 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %36, i32 0, i32 6
  %38 = bitcast %union.anon.1* %37 to i32**
  store i32* null, i32** %38, align 8
  %39 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %1, align 8
  %40 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %39, i32 0, i32 1
  %41 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %40, align 8
  %42 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %41, i32 0, i32 6
  %43 = bitcast %union.anon.1* %42 to i16**
  store i16* null, i16** %43, align 8
  %44 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %1, align 8
  %45 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %44, i32 0, i32 1
  %46 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %45, align 8
  %47 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %46, i32 0, i32 6
  %48 = bitcast %union.anon.1* %47 to i8**
  store i8* null, i8** %48, align 8
  %49 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %1, align 8
  ret %"struct.pov::Density_file_Struct"* %49
}

; Function Attrs: noinline uwtable
define void @_ZN3pov17Read_Density_FileEPNS_19Density_file_StructE(%"struct.pov::Density_file_Struct"*) #0 {
  %2 = alloca %"struct.pov::Density_file_Struct"*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.pov_base::IStream"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i16*, align 8
  %13 = alloca i8*, align 8
  store %"struct.pov::Density_file_Struct"* %0, %"struct.pov::Density_file_Struct"** %2, align 8
  %14 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %15 = icmp eq %"struct.pov::Density_file_Struct"* %14, null
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %1
  br label %551

; <label>:17:                                     ; preds = %1
  %18 = load i32, i32* @x.115
  %19 = load i32, i32* @y.116
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %17
  %26 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %27 = icmp ne %"struct.pov::Density_file_Struct"* %26, null
  %28 = load i32, i32* @x.115
  %29 = load i32, i32* @y.116
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %27, label %36, label %551

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %38 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %37, i32 0, i32 1
  %39 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %38, align 8
  %40 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %39, i32 0, i32 1
  %41 = load i8*, i8** %40, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %43, label %551

; <label>:43:                                     ; preds = %36
  %44 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %45 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %44, i32 0, i32 1
  %46 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %45, align 8
  %47 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %46, i32 0, i32 1
  %48 = load i8*, i8** %47, align 8
  %49 = call %"class.pov_base::IStream"* @_ZN3pov11Locate_FileEPcjS0_b(i8* %48, i32 16, i8* null, i1 zeroext true)
  store %"class.pov_base::IStream"* %49, %"class.pov_base::IStream"** %9, align 8
  %50 = icmp eq %"class.pov_base::IStream"* %49, null
  br i1 %50, label %51, label %53

; <label>:51:                                     ; preds = %43
  %52 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0))
  br label %53

; <label>:53:                                     ; preds = %51, %43
  %54 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %9, align 8
  %55 = call zeroext i16 @_ZN3povL10readushortEPN8pov_base7IStreamE(%"class.pov_base::IStream"* %54)
  %56 = zext i16 %55 to i32
  %57 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %58 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %57, i32 0, i32 1
  %59 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %58, align 8
  %60 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %59, i32 0, i32 2
  store i32 %56, i32* %60, align 8
  store i32 %56, i32* %6, align 4
  %61 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %9, align 8
  %62 = call zeroext i16 @_ZN3povL10readushortEPN8pov_base7IStreamE(%"class.pov_base::IStream"* %61)
  %63 = zext i16 %62 to i32
  %64 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %65 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %64, i32 0, i32 1
  %66 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %65, align 8
  %67 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %66, i32 0, i32 3
  store i32 %63, i32* %67, align 4
  store i32 %63, i32* %7, align 4
  %68 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %9, align 8
  %69 = call zeroext i16 @_ZN3povL10readushortEPN8pov_base7IStreamE(%"class.pov_base::IStream"* %68)
  %70 = zext i16 %69 to i32
  %71 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %72 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %71, i32 0, i32 1
  %73 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %72, align 8
  %74 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %73, i32 0, i32 4
  store i32 %70, i32* %74, align 8
  store i32 %70, i32* %8, align 4
  %75 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %9, align 8
  %76 = bitcast %"class.pov_base::IStream"* %75 to %"class.pov_base::IOBase"*
  %77 = call dereferenceable(40) %"class.pov_base::IOBase"* @_ZN8pov_base6IOBase5seekgEmj(%"class.pov_base::IOBase"* %76, i64 0, i32 2)
  %78 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %9, align 8
  %79 = bitcast %"class.pov_base::IStream"* %78 to %"class.pov_base::IOBase"*
  %80 = call i64 @_ZN8pov_base6IOBase5tellgEv(%"class.pov_base::IOBase"* %79)
  %81 = sub i64 %80, 6
  store i64 %81, i64* %10, align 8
  %82 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %9, align 8
  %83 = bitcast %"class.pov_base::IStream"* %82 to %"class.pov_base::IOBase"*
  %84 = call dereferenceable(40) %"class.pov_base::IOBase"* @_ZN8pov_base6IOBase5seekgEmj(%"class.pov_base::IOBase"* %83, i64 6, i32 0)
  %85 = load i32, i32* %6, align 4
  %86 = load i32, i32* %7, align 4
  %87 = mul nsw i32 %85, %86
  %88 = load i32, i32* %8, align 4
  %89 = mul nsw i32 %87, %88
  %90 = mul nsw i32 %89, 4
  %91 = sext i32 %90 to i64
  %92 = load i64, i64* %10, align 8
  %93 = icmp eq i64 %91, %92
  br i1 %93, label %94, label %237

; <label>:94:                                     ; preds = %53
  %95 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %96 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %95, i32 0, i32 1
  %97 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %96, align 8
  %98 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %97, i32 0, i32 5
  store i32 4, i32* %98, align 4
  %99 = load i32, i32* %6, align 4
  %100 = load i32, i32* %7, align 4
  %101 = mul nsw i32 %99, %100
  %102 = load i32, i32* %8, align 4
  %103 = mul nsw i32 %101, %102
  %104 = sext i32 %103 to i64
  %105 = mul i64 %104, 4
  %106 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %105, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4317, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0))
  %107 = bitcast i8* %106 to i32*
  store i32* %107, i32** %11, align 8
  store i32 0, i32* %5, align 4
  br label %108

; <label>:108:                                    ; preds = %originalBBpart252, %94
  %109 = load i32, i32* @x.115
  %110 = load i32, i32* @y.116
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %108
  %117 = load i32, i32* %5, align 4
  %118 = load i32, i32* %8, align 4
  %119 = icmp slt i32 %117, %118
  %120 = load i32, i32* @x.115
  %121 = load i32, i32* @y.116
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %119, label %128, label %230

; <label>:128:                                    ; preds = %originalBBpart24
  store i32 0, i32* %4, align 4
  br label %129

; <label>:129:                                    ; preds = %207, %128
  %130 = load i32, i32* %4, align 4
  %131 = load i32, i32* %7, align 4
  %132 = icmp slt i32 %130, %131
  br i1 %132, label %133, label %210

; <label>:133:                                    ; preds = %129
  %134 = load i32, i32* @x.115
  %135 = load i32, i32* @y.116
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %133
  store i32 0, i32* %3, align 4
  %142 = load i32, i32* @x.115
  %143 = load i32, i32* @y.116
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %150

; <label>:150:                                    ; preds = %originalBBpart244, %originalBBpart28
  %151 = load i32, i32* %3, align 4
  %152 = load i32, i32* %6, align 4
  %153 = icmp slt i32 %151, %152
  br i1 %153, label %154, label %206

; <label>:154:                                    ; preds = %150
  %155 = load i32, i32* @x.115
  %156 = load i32, i32* @y.116
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %154
  %163 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %9, align 8
  %164 = call i32 @_ZN3povL8readuintEPN8pov_base7IStreamE(%"class.pov_base::IStream"* %163)
  %165 = load i32*, i32** %11, align 8
  %166 = load i32, i32* %5, align 4
  %167 = load i32, i32* %7, align 4
  %168 = mul nsw i32 %166, %167
  %169 = load i32, i32* %6, align 4
  %170 = mul nsw i32 %168, %169
  %171 = load i32, i32* %4, align 4
  %172 = load i32, i32* %6, align 4
  %173 = mul nsw i32 %171, %172
  %174 = add nsw i32 %170, %173
  %175 = load i32, i32* %3, align 4
  %176 = add nsw i32 %174, %175
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i32, i32* %165, i64 %177
  store i32 %164, i32* %178, align 4
  %179 = load i32, i32* @x.115
  %180 = load i32, i32* @y.116
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBBpart238, label %originalBB10alteredBB

originalBBpart238:                                ; preds = %originalBB10
  br label %187

; <label>:187:                                    ; preds = %originalBBpart238
  %188 = load i32, i32* @x.115
  %189 = load i32, i32* @y.116
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %originalBB40alteredBB, %187
  %196 = load i32, i32* %3, align 4
  %197 = add nsw i32 %196, 1
  store i32 %197, i32* %3, align 4
  %198 = load i32, i32* @x.115
  %199 = load i32, i32* @y.116
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart244, label %originalBB40alteredBB

originalBBpart244:                                ; preds = %originalBB40
  br label %150

; <label>:206:                                    ; preds = %150
  br label %207

; <label>:207:                                    ; preds = %206
  %208 = load i32, i32* %4, align 4
  %209 = add nsw i32 %208, 1
  store i32 %209, i32* %4, align 4
  br label %129

; <label>:210:                                    ; preds = %129
  br label %211

; <label>:211:                                    ; preds = %210
  %212 = load i32, i32* @x.115
  %213 = load i32, i32* @y.116
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %originalBB46alteredBB, %211
  %220 = load i32, i32* %5, align 4
  %221 = add nsw i32 %220, 1
  store i32 %221, i32* %5, align 4
  %222 = load i32, i32* @x.115
  %223 = load i32, i32* @y.116
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBBpart252, label %originalBB46alteredBB

originalBBpart252:                                ; preds = %originalBB46
  br label %108

; <label>:230:                                    ; preds = %originalBBpart24
  %231 = load i32*, i32** %11, align 8
  %232 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %233 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %232, i32 0, i32 1
  %234 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %233, align 8
  %235 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %234, i32 0, i32 6
  %236 = bitcast %union.anon.1* %235 to i32**
  store i32* %231, i32** %236, align 8
  br label %522

; <label>:237:                                    ; preds = %53
  %238 = load i32, i32* %6, align 4
  %239 = load i32, i32* %7, align 4
  %240 = mul nsw i32 %238, %239
  %241 = load i32, i32* %8, align 4
  %242 = mul nsw i32 %240, %241
  %243 = mul nsw i32 %242, 2
  %244 = sext i32 %243 to i64
  %245 = load i64, i64* %10, align 8
  %246 = icmp eq i64 %244, %245
  br i1 %246, label %247, label %342

; <label>:247:                                    ; preds = %237
  %248 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %249 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %248, i32 0, i32 1
  %250 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %249, align 8
  %251 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %250, i32 0, i32 5
  store i32 2, i32* %251, align 4
  %252 = load i32, i32* %6, align 4
  %253 = load i32, i32* %7, align 4
  %254 = mul nsw i32 %252, %253
  %255 = load i32, i32* %8, align 4
  %256 = mul nsw i32 %254, %255
  %257 = sext i32 %256 to i64
  %258 = mul i64 %257, 2
  %259 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %258, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4334, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i32 0, i32 0))
  %260 = bitcast i8* %259 to i16*
  store i16* %260, i16** %12, align 8
  store i32 0, i32* %5, align 4
  br label %261

; <label>:261:                                    ; preds = %332, %247
  %262 = load i32, i32* %5, align 4
  %263 = load i32, i32* %8, align 4
  %264 = icmp slt i32 %262, %263
  br i1 %264, label %265, label %335

; <label>:265:                                    ; preds = %261
  store i32 0, i32* %4, align 4
  br label %266

; <label>:266:                                    ; preds = %originalBBpart262, %265
  %267 = load i32, i32* %4, align 4
  %268 = load i32, i32* %7, align 4
  %269 = icmp slt i32 %267, %268
  br i1 %269, label %270, label %331

; <label>:270:                                    ; preds = %266
  store i32 0, i32* %3, align 4
  br label %271

; <label>:271:                                    ; preds = %292, %270
  %272 = load i32, i32* %3, align 4
  %273 = load i32, i32* %6, align 4
  %274 = icmp slt i32 %272, %273
  br i1 %274, label %275, label %295

; <label>:275:                                    ; preds = %271
  %276 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %9, align 8
  %277 = call zeroext i16 @_ZN3povL10readushortEPN8pov_base7IStreamE(%"class.pov_base::IStream"* %276)
  %278 = load i16*, i16** %12, align 8
  %279 = load i32, i32* %5, align 4
  %280 = load i32, i32* %7, align 4
  %281 = mul nsw i32 %279, %280
  %282 = load i32, i32* %6, align 4
  %283 = mul nsw i32 %281, %282
  %284 = load i32, i32* %4, align 4
  %285 = load i32, i32* %6, align 4
  %286 = mul nsw i32 %284, %285
  %287 = add nsw i32 %283, %286
  %288 = load i32, i32* %3, align 4
  %289 = add nsw i32 %287, %288
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i16, i16* %278, i64 %290
  store i16 %277, i16* %291, align 2
  br label %292

; <label>:292:                                    ; preds = %275
  %293 = load i32, i32* %3, align 4
  %294 = add nsw i32 %293, 1
  store i32 %294, i32* %3, align 4
  br label %271

; <label>:295:                                    ; preds = %271
  %296 = load i32, i32* @x.115
  %297 = load i32, i32* @y.116
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %originalBB54alteredBB, %295
  %304 = load i32, i32* @x.115
  %305 = load i32, i32* @y.116
  %306 = sub i32 %304, 1
  %307 = mul i32 %304, %306
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %309, %310
  br i1 %311, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %312

; <label>:312:                                    ; preds = %originalBBpart256
  %313 = load i32, i32* @x.115
  %314 = load i32, i32* @y.116
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %originalBB58alteredBB, %312
  %321 = load i32, i32* %4, align 4
  %322 = add nsw i32 %321, 1
  store i32 %322, i32* %4, align 4
  %323 = load i32, i32* @x.115
  %324 = load i32, i32* @y.116
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBBpart262, label %originalBB58alteredBB

originalBBpart262:                                ; preds = %originalBB58
  br label %266

; <label>:331:                                    ; preds = %266
  br label %332

; <label>:332:                                    ; preds = %331
  %333 = load i32, i32* %5, align 4
  %334 = add nsw i32 %333, 1
  store i32 %334, i32* %5, align 4
  br label %261

; <label>:335:                                    ; preds = %261
  %336 = load i16*, i16** %12, align 8
  %337 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %338 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %337, i32 0, i32 1
  %339 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %338, align 8
  %340 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %339, i32 0, i32 6
  %341 = bitcast %union.anon.1* %340 to i16**
  store i16* %336, i16** %341, align 8
  br label %505

; <label>:342:                                    ; preds = %237
  %343 = load i32, i32* %6, align 4
  %344 = load i32, i32* %7, align 4
  %345 = mul nsw i32 %343, %344
  %346 = load i32, i32* %8, align 4
  %347 = mul nsw i32 %345, %346
  %348 = sext i32 %347 to i64
  %349 = load i64, i64* %10, align 8
  %350 = icmp eq i64 %348, %349
  br i1 %350, label %351, label %470

; <label>:351:                                    ; preds = %342
  %352 = load i32, i32* @x.115
  %353 = load i32, i32* @y.116
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %originalBB64alteredBB, %351
  %360 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %361 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %360, i32 0, i32 1
  %362 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %361, align 8
  %363 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %362, i32 0, i32 5
  store i32 1, i32* %363, align 4
  %364 = load i32, i32* %6, align 4
  %365 = load i32, i32* %7, align 4
  %366 = mul nsw i32 %364, %365
  %367 = load i32, i32* %8, align 4
  %368 = mul nsw i32 %366, %367
  %369 = sext i32 %368 to i64
  %370 = mul i64 %369, 1
  %371 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %370, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4351, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i32 0, i32 0))
  store i8* %371, i8** %13, align 8
  store i32 0, i32* %5, align 4
  %372 = load i32, i32* @x.115
  %373 = load i32, i32* @y.116
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBBpart276, label %originalBB64alteredBB

originalBBpart276:                                ; preds = %originalBB64
  br label %380

; <label>:380:                                    ; preds = %444, %originalBBpart276
  %381 = load i32, i32* %5, align 4
  %382 = load i32, i32* %8, align 4
  %383 = icmp slt i32 %381, %382
  br i1 %383, label %384, label %447

; <label>:384:                                    ; preds = %380
  store i32 0, i32* %4, align 4
  br label %385

; <label>:385:                                    ; preds = %440, %384
  %386 = load i32, i32* @x.115
  %387 = load i32, i32* @y.116
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %originalBB78alteredBB, %385
  %394 = load i32, i32* %4, align 4
  %395 = load i32, i32* %7, align 4
  %396 = icmp slt i32 %394, %395
  %397 = load i32, i32* @x.115
  %398 = load i32, i32* @y.116
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br i1 %396, label %405, label %443

; <label>:405:                                    ; preds = %originalBBpart280
  %406 = load i32, i32* @x.115
  %407 = load i32, i32* @y.116
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %originalBB82alteredBB, %405
  %414 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %9, align 8
  %415 = bitcast %"class.pov_base::IStream"* %414 to %"class.pov_base::IOBase"*
  %416 = load i8*, i8** %13, align 8
  %417 = load i32, i32* %5, align 4
  %418 = load i32, i32* %7, align 4
  %419 = mul nsw i32 %417, %418
  %420 = load i32, i32* %6, align 4
  %421 = mul nsw i32 %419, %420
  %422 = load i32, i32* %4, align 4
  %423 = load i32, i32* %6, align 4
  %424 = mul nsw i32 %422, %423
  %425 = add nsw i32 %421, %424
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds i8, i8* %416, i64 %426
  %428 = load i32, i32* %6, align 4
  %429 = sext i32 %428 to i64
  %430 = mul i64 1, %429
  %431 = call dereferenceable(40) %"class.pov_base::IOBase"* @_ZN8pov_base6IOBase4readEPvm(%"class.pov_base::IOBase"* %415, i8* %427, i64 %430)
  %432 = load i32, i32* @x.115
  %433 = load i32, i32* @y.116
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBBpart2113, label %originalBB82alteredBB

originalBBpart2113:                               ; preds = %originalBB82
  br label %440

; <label>:440:                                    ; preds = %originalBBpart2113
  %441 = load i32, i32* %4, align 4
  %442 = add nsw i32 %441, 1
  store i32 %442, i32* %4, align 4
  br label %385

; <label>:443:                                    ; preds = %originalBBpart280
  br label %444

; <label>:444:                                    ; preds = %443
  %445 = load i32, i32* %5, align 4
  %446 = add nsw i32 %445, 1
  store i32 %446, i32* %5, align 4
  br label %380

; <label>:447:                                    ; preds = %380
  %448 = load i32, i32* @x.115
  %449 = load i32, i32* @y.116
  %450 = sub i32 %448, 1
  %451 = mul i32 %448, %450
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %453, %454
  br i1 %455, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %originalBB115alteredBB, %447
  %456 = load i8*, i8** %13, align 8
  %457 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %458 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %457, i32 0, i32 1
  %459 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %458, align 8
  %460 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %459, i32 0, i32 6
  %461 = bitcast %union.anon.1* %460 to i8**
  store i8* %456, i8** %461, align 8
  %462 = load i32, i32* @x.115
  %463 = load i32, i32* @y.116
  %464 = sub i32 %462, 1
  %465 = mul i32 %462, %464
  %466 = urem i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %463, 10
  %469 = or i1 %467, %468
  br i1 %469, label %originalBBpart2117, label %originalBB115alteredBB

originalBBpart2117:                               ; preds = %originalBB115
  br label %488

; <label>:470:                                    ; preds = %342
  %471 = load i32, i32* @x.115
  %472 = load i32, i32* @y.116
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %originalBB119alteredBB, %470
  %479 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i32 0, i32 0))
  %480 = load i32, i32* @x.115
  %481 = load i32, i32* @y.116
  %482 = sub i32 %480, 1
  %483 = mul i32 %480, %482
  %484 = urem i32 %483, 2
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %485, %486
  br i1 %487, label %originalBBpart2121, label %originalBB119alteredBB

originalBBpart2121:                               ; preds = %originalBB119
  br label %488

; <label>:488:                                    ; preds = %originalBBpart2121, %originalBBpart2117
  %489 = load i32, i32* @x.115
  %490 = load i32, i32* @y.116
  %491 = sub i32 %489, 1
  %492 = mul i32 %489, %491
  %493 = urem i32 %492, 2
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %494, %495
  br i1 %496, label %originalBB123, label %originalBB123alteredBB

originalBB123:                                    ; preds = %originalBB123alteredBB, %488
  %497 = load i32, i32* @x.115
  %498 = load i32, i32* @y.116
  %499 = sub i32 %497, 1
  %500 = mul i32 %497, %499
  %501 = urem i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %498, 10
  %504 = or i1 %502, %503
  br i1 %504, label %originalBBpart2125, label %originalBB123alteredBB

originalBBpart2125:                               ; preds = %originalBB123
  br label %505

; <label>:505:                                    ; preds = %originalBBpart2125, %335
  %506 = load i32, i32* @x.115
  %507 = load i32, i32* @y.116
  %508 = sub i32 %506, 1
  %509 = mul i32 %506, %508
  %510 = urem i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = icmp slt i32 %507, 10
  %513 = or i1 %511, %512
  br i1 %513, label %originalBB127, label %originalBB127alteredBB

originalBB127:                                    ; preds = %originalBB127alteredBB, %505
  %514 = load i32, i32* @x.115
  %515 = load i32, i32* @y.116
  %516 = sub i32 %514, 1
  %517 = mul i32 %514, %516
  %518 = urem i32 %517, 2
  %519 = icmp eq i32 %518, 0
  %520 = icmp slt i32 %515, 10
  %521 = or i1 %519, %520
  br i1 %521, label %originalBBpart2129, label %originalBB127alteredBB

originalBBpart2129:                               ; preds = %originalBB127
  br label %522

; <label>:522:                                    ; preds = %originalBBpart2129, %230
  %523 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %9, align 8
  %524 = icmp ne %"class.pov_base::IStream"* %523, null
  br i1 %524, label %525, label %534

; <label>:525:                                    ; preds = %522
  %526 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %9, align 8
  %527 = icmp eq %"class.pov_base::IStream"* %526, null
  br i1 %527, label %533, label %528

; <label>:528:                                    ; preds = %525
  %529 = bitcast %"class.pov_base::IStream"* %526 to void (%"class.pov_base::IStream"*)***
  %530 = load void (%"class.pov_base::IStream"*)**, void (%"class.pov_base::IStream"*)*** %529, align 8
  %531 = getelementptr inbounds void (%"class.pov_base::IStream"*)*, void (%"class.pov_base::IStream"*)** %530, i64 1
  %532 = load void (%"class.pov_base::IStream"*)*, void (%"class.pov_base::IStream"*)** %531, align 8
  call void %532(%"class.pov_base::IStream"* %526)
  br label %533

; <label>:533:                                    ; preds = %528, %525
  br label %534

; <label>:534:                                    ; preds = %533, %522
  %535 = load i32, i32* @x.115
  %536 = load i32, i32* @y.116
  %537 = sub i32 %535, 1
  %538 = mul i32 %535, %537
  %539 = urem i32 %538, 2
  %540 = icmp eq i32 %539, 0
  %541 = icmp slt i32 %536, 10
  %542 = or i1 %540, %541
  br i1 %542, label %originalBB131, label %originalBB131alteredBB

originalBB131:                                    ; preds = %originalBB131alteredBB, %534
  %543 = load i32, i32* @x.115
  %544 = load i32, i32* @y.116
  %545 = sub i32 %543, 1
  %546 = mul i32 %543, %545
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %548, %549
  br i1 %550, label %originalBBpart2133, label %originalBB131alteredBB

originalBBpart2133:                               ; preds = %originalBB131
  br label %551

; <label>:551:                                    ; preds = %originalBBpart2133, %36, %originalBBpart2, %16
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %17
  %552 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %553 = icmp ne %"struct.pov::Density_file_Struct"* %552, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %108
  %554 = load i32, i32* %5, align 4
  %555 = load i32, i32* %8, align 4
  %556 = icmp slt i32 %554, %555
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %133
  store i32 0, i32* %3, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %154
  %557 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %9, align 8
  %558 = call i32 @_ZN3povL8readuintEPN8pov_base7IStreamE(%"class.pov_base::IStream"* %557)
  %559 = load i32*, i32** %11, align 8
  %560 = load i32, i32* %5, align 4
  %561 = load i32, i32* %7, align 4
  %_ = sub i32 %560, %561
  %gen = mul i32 %_, %561
  %_11 = shl i32 %560, %561
  %_12 = sub i32 %560, %561
  %gen13 = mul i32 %_12, %561
  %_14 = sub i32 %560, %561
  %gen15 = mul i32 %_14, %561
  %562 = mul nsw i32 %560, %561
  %563 = load i32, i32* %6, align 4
  %_16 = sub i32 %562, %563
  %gen17 = mul i32 %_16, %563
  %_18 = shl i32 %562, %563
  %_19 = shl i32 %562, %563
  %_20 = sub i32 0, %562
  %gen21 = add i32 %_20, %563
  %564 = mul nsw i32 %562, %563
  %565 = load i32, i32* %4, align 4
  %566 = load i32, i32* %6, align 4
  %_22 = shl i32 %565, %566
  %_23 = shl i32 %565, %566
  %_24 = sub i32 0, %565
  %gen25 = add i32 %_24, %566
  %567 = mul nsw i32 %565, %566
  %_26 = shl i32 %564, %567
  %_27 = sub i32 %564, %567
  %gen28 = mul i32 %_27, %567
  %_29 = sub i32 %564, %567
  %gen30 = mul i32 %_29, %567
  %_31 = sub i32 0, %564
  %gen32 = add i32 %_31, %567
  %_33 = sub i32 %564, %567
  %gen34 = mul i32 %_33, %567
  %_35 = sub i32 %564, %567
  %gen36 = mul i32 %_35, %567
  %568 = add nsw i32 %564, %567
  %569 = load i32, i32* %3, align 4
  %570 = add nsw i32 %568, %569
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds i32, i32* %559, i64 %571
  store i32 %558, i32* %572, align 4
  br label %originalBB10

originalBB40alteredBB:                            ; preds = %originalBB40, %187
  %573 = load i32, i32* %3, align 4
  %_41 = sub i32 %573, 1
  %gen42 = mul i32 %_41, 1
  %574 = add nsw i32 %573, 1
  store i32 %574, i32* %3, align 4
  br label %originalBB40

originalBB46alteredBB:                            ; preds = %originalBB46, %211
  %575 = load i32, i32* %5, align 4
  %_47 = shl i32 %575, 1
  %_48 = sub i32 %575, 1
  %gen49 = mul i32 %_48, 1
  %_50 = shl i32 %575, 1
  %576 = add nsw i32 %575, 1
  store i32 %576, i32* %5, align 4
  br label %originalBB46

originalBB54alteredBB:                            ; preds = %originalBB54, %295
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %312
  %577 = load i32, i32* %4, align 4
  %_59 = shl i32 %577, 1
  %_60 = shl i32 %577, 1
  %578 = add nsw i32 %577, 1
  store i32 %578, i32* %4, align 4
  br label %originalBB58

originalBB64alteredBB:                            ; preds = %originalBB64, %351
  %579 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %580 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %579, i32 0, i32 1
  %581 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %580, align 8
  %582 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %581, i32 0, i32 5
  store i32 1, i32* %582, align 4
  %583 = load i32, i32* %6, align 4
  %584 = load i32, i32* %7, align 4
  %_65 = sub i32 0, %583
  %gen66 = add i32 %_65, %584
  %585 = mul nsw i32 %583, %584
  %586 = load i32, i32* %8, align 4
  %_67 = sub i32 %585, %586
  %gen68 = mul i32 %_67, %586
  %_69 = sub i32 0, %585
  %gen70 = add i32 %_69, %586
  %587 = mul nsw i32 %585, %586
  %588 = sext i32 %587 to i64
  %_71 = sub i64 %588, 1
  %gen72 = mul i64 %_71, 1
  %_73 = shl i64 %588, 1
  %_74 = shl i64 %588, 1
  %589 = mul i64 %588, 1
  %590 = call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 %589, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 4351, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i32 0, i32 0))
  store i8* %590, i8** %13, align 8
  store i32 0, i32* %5, align 4
  br label %originalBB64

originalBB78alteredBB:                            ; preds = %originalBB78, %385
  %591 = load i32, i32* %4, align 4
  %592 = load i32, i32* %7, align 4
  %593 = icmp slt i32 %591, %592
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %405
  %594 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %9, align 8
  %595 = bitcast %"class.pov_base::IStream"* %594 to %"class.pov_base::IOBase"*
  %596 = load i8*, i8** %13, align 8
  %597 = load i32, i32* %5, align 4
  %598 = load i32, i32* %7, align 4
  %_83 = sub i32 %597, %598
  %gen84 = mul i32 %_83, %598
  %_85 = sub i32 %597, %598
  %gen86 = mul i32 %_85, %598
  %_87 = sub i32 0, %597
  %gen88 = add i32 %_87, %598
  %_89 = shl i32 %597, %598
  %599 = mul nsw i32 %597, %598
  %600 = load i32, i32* %6, align 4
  %_90 = sub i32 %599, %600
  %gen91 = mul i32 %_90, %600
  %_92 = sub i32 %599, %600
  %gen93 = mul i32 %_92, %600
  %_94 = sub i32 %599, %600
  %gen95 = mul i32 %_94, %600
  %_96 = shl i32 %599, %600
  %_97 = shl i32 %599, %600
  %_98 = shl i32 %599, %600
  %_99 = shl i32 %599, %600
  %_100 = shl i32 %599, %600
  %601 = mul nsw i32 %599, %600
  %602 = load i32, i32* %4, align 4
  %603 = load i32, i32* %6, align 4
  %_101 = sub i32 %602, %603
  %gen102 = mul i32 %_101, %603
  %604 = mul nsw i32 %602, %603
  %605 = add nsw i32 %601, %604
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds i8, i8* %596, i64 %606
  %608 = load i32, i32* %6, align 4
  %609 = sext i32 %608 to i64
  %_103 = sub i64 1, %609
  %gen104 = mul i64 %_103, %609
  %_105 = shl i64 1, %609
  %_106 = sub i64 1, %609
  %gen107 = mul i64 %_106, %609
  %_108 = sub i64 0, 1
  %gen109 = add i64 %_108, %609
  %_110 = sub i64 1, %609
  %gen111 = mul i64 %_110, %609
  %610 = mul i64 1, %609
  %611 = call dereferenceable(40) %"class.pov_base::IOBase"* @_ZN8pov_base6IOBase4readEPvm(%"class.pov_base::IOBase"* %595, i8* %607, i64 %610)
  br label %originalBB82

originalBB115alteredBB:                           ; preds = %originalBB115, %447
  %612 = load i8*, i8** %13, align 8
  %613 = load %"struct.pov::Density_file_Struct"*, %"struct.pov::Density_file_Struct"** %2, align 8
  %614 = getelementptr inbounds %"struct.pov::Density_file_Struct", %"struct.pov::Density_file_Struct"* %613, i32 0, i32 1
  %615 = load %"struct.pov::Density_file_Data_Struct"*, %"struct.pov::Density_file_Data_Struct"** %614, align 8
  %616 = getelementptr inbounds %"struct.pov::Density_file_Data_Struct", %"struct.pov::Density_file_Data_Struct"* %615, i32 0, i32 6
  %617 = bitcast %union.anon.1* %616 to i8**
  store i8* %612, i8** %617, align 8
  br label %originalBB115

originalBB119alteredBB:                           ; preds = %originalBB119, %470
  %618 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i32 0, i32 0))
  br label %originalBB119

originalBB123alteredBB:                           ; preds = %originalBB123, %488
  br label %originalBB123

originalBB127alteredBB:                           ; preds = %originalBB127, %505
  br label %originalBB127

originalBB131alteredBB:                           ; preds = %originalBB131, %534
  br label %originalBB131
}

declare %"class.pov_base::IStream"* @_ZN3pov11Locate_FileEPcjS0_b(i8*, i32, i8*, i1 zeroext) #1

; Function Attrs: noinline uwtable
define internal zeroext i16 @_ZN3povL10readushortEPN8pov_base7IStreamE(%"class.pov_base::IStream"*) #0 {
  %2 = load i32, i32* @x.117
  %3 = load i32, i32* @y.118
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %"class.pov_base::IStream"*, align 8
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  store %"class.pov_base::IStream"* %0, %"class.pov_base::IStream"** %10, align 8
  store i16 0, i16* %11, align 2
  store i16 0, i16* %12, align 2
  %13 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %10, align 8
  %14 = call i32 @_ZN8pov_base7IStream9Read_ByteEv(%"class.pov_base::IStream"* %13)
  %15 = trunc i32 %14 to i16
  store i16 %15, i16* %11, align 2
  %16 = sext i16 %15 to i32
  %17 = icmp eq i32 %16, -1
  %18 = load i32, i32* @x.117
  %19 = load i32, i32* @y.118
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %32, label %26

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %10, align 8
  %28 = call i32 @_ZN8pov_base7IStream9Read_ByteEv(%"class.pov_base::IStream"* %27)
  %29 = trunc i32 %28 to i16
  store i16 %29, i16* %12, align 2
  %30 = sext i16 %29 to i32
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %50

; <label>:32:                                     ; preds = %26, %originalBBpart2
  %33 = load i32, i32* @x.117
  %34 = load i32, i32* @y.118
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %32
  %41 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i32 0, i32 0))
  %42 = load i32, i32* @x.117
  %43 = load i32, i32* @y.118
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %50

; <label>:50:                                     ; preds = %originalBBpart24, %26
  %51 = load i16, i16* %11, align 2
  %52 = zext i16 %51 to i32
  %53 = shl i32 %52, 8
  %54 = load i16, i16* %12, align 2
  %55 = zext i16 %54 to i32
  %56 = or i32 %53, %55
  %57 = trunc i32 %56 to i16
  ret i16 %57

originalBBalteredBB:                              ; preds = %originalBB, %1
  %58 = alloca %"class.pov_base::IStream"*, align 8
  %59 = alloca i16, align 2
  %60 = alloca i16, align 2
  store %"class.pov_base::IStream"* %0, %"class.pov_base::IStream"** %58, align 8
  store i16 0, i16* %59, align 2
  store i16 0, i16* %60, align 2
  %61 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %58, align 8
  %62 = call i32 @_ZN8pov_base7IStream9Read_ByteEv(%"class.pov_base::IStream"* %61)
  %63 = trunc i32 %62 to i16
  store i16 %63, i16* %59, align 2
  %64 = sext i16 %63 to i32
  %65 = icmp eq i32 %64, -1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %66 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i32 0, i32 0))
  br label %originalBB1
}

declare dereferenceable(40) %"class.pov_base::IOBase"* @_ZN8pov_base6IOBase5seekgEmj(%"class.pov_base::IOBase"*, i64, i32) #1

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN8pov_base6IOBase5tellgEv(%"class.pov_base::IOBase"*) #0 comdat align 2 {
  %2 = alloca %"class.pov_base::IOBase"*, align 8
  store %"class.pov_base::IOBase"* %0, %"class.pov_base::IOBase"** %2, align 8
  %3 = load %"class.pov_base::IOBase"*, %"class.pov_base::IOBase"** %2, align 8
  %4 = getelementptr inbounds %"class.pov_base::IOBase", %"class.pov_base::IOBase"* %3, i32 0, i32 2
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %6 = icmp eq %struct._IO_FILE* %5, null
  br i1 %6, label %7, label %8

; <label>:7:                                      ; preds = %1
  br label %12

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %"class.pov_base::IOBase", %"class.pov_base::IOBase"* %3, i32 0, i32 2
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %11 = call i64 @ftell(%struct._IO_FILE* %10)
  br label %12

; <label>:12:                                     ; preds = %8, %7
  %13 = phi i64 [ -1, %7 ], [ %11, %8 ]
  %14 = load i32, i32* @x.119
  %15 = load i32, i32* @y.120
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %12
  %22 = load i32, i32* @x.119
  %23 = load i32, i32* @y.120
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %13

originalBBalteredBB:                              ; preds = %originalBB, %12
  br label %originalBB
}

; Function Attrs: noinline uwtable
define internal i32 @_ZN3povL8readuintEPN8pov_base7IStreamE(%"class.pov_base::IStream"*) #0 {
  %2 = alloca %"class.pov_base::IStream"*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %"class.pov_base::IStream"* %0, %"class.pov_base::IStream"** %2, align 8
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  %7 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %2, align 8
  %8 = call i32 @_ZN8pov_base7IStream9Read_ByteEv(%"class.pov_base::IStream"* %7)
  store i32 %8, i32* %3, align 4
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %22, label %10

; <label>:10:                                     ; preds = %1
  %11 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %2, align 8
  %12 = call i32 @_ZN8pov_base7IStream9Read_ByteEv(%"class.pov_base::IStream"* %11)
  store i32 %12, i32* %4, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %22, label %14

; <label>:14:                                     ; preds = %10
  %15 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %2, align 8
  %16 = call i32 @_ZN8pov_base7IStream9Read_ByteEv(%"class.pov_base::IStream"* %15)
  store i32 %16, i32* %5, align 4
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %22, label %18

; <label>:18:                                     ; preds = %14
  %19 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %2, align 8
  %20 = call i32 @_ZN8pov_base7IStream9Read_ByteEv(%"class.pov_base::IStream"* %19)
  store i32 %20, i32* %6, align 4
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %24

; <label>:22:                                     ; preds = %18, %14, %10, %1
  %23 = call i32 (i8*, ...) @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i32 0, i32 0))
  br label %24

; <label>:24:                                     ; preds = %22, %18
  %25 = load i32, i32* %3, align 4
  %26 = shl i32 %25, 24
  %27 = load i32, i32* %4, align 4
  %28 = shl i32 %27, 16
  %29 = or i32 %26, %28
  %30 = load i32, i32* %5, align 4
  %31 = shl i32 %30, 8
  %32 = or i32 %29, %31
  %33 = load i32, i32* %6, align 4
  %34 = or i32 %32, %33
  ret i32 %34
}

declare dereferenceable(40) %"class.pov_base::IOBase"* @_ZN8pov_base6IOBase4readEPvm(%"class.pov_base::IOBase"*, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define internal %"struct.pov::Turb_Struct"* @_ZN3povL15Search_For_TurbEPNS_12Warps_StructE(%"struct.pov::Warps_Struct"*) #2 {
  %2 = alloca %"struct.pov::Warps_Struct"*, align 8
  %3 = alloca %"struct.pov::Warps_Struct"*, align 8
  store %"struct.pov::Warps_Struct"* %0, %"struct.pov::Warps_Struct"** %2, align 8
  %4 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %2, align 8
  store %"struct.pov::Warps_Struct"* %4, %"struct.pov::Warps_Struct"** %3, align 8
  %5 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %3, align 8
  %6 = icmp ne %"struct.pov::Warps_Struct"* %5, null
  br i1 %6, label %7, label %73

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.123
  %9 = load i32, i32* @y.124
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %7
  %16 = load i32, i32* @x.123
  %17 = load i32, i32* @y.124
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %24

; <label>:24:                                     ; preds = %29, %originalBBpart2
  %25 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %3, align 8
  %26 = getelementptr inbounds %"struct.pov::Warps_Struct", %"struct.pov::Warps_Struct"* %25, i32 0, i32 2
  %27 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %26, align 8
  %28 = icmp ne %"struct.pov::Warps_Struct"* %27, null
  br i1 %28, label %29, label %33

; <label>:29:                                     ; preds = %24
  %30 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %3, align 8
  %31 = getelementptr inbounds %"struct.pov::Warps_Struct", %"struct.pov::Warps_Struct"* %30, i32 0, i32 2
  %32 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %31, align 8
  store %"struct.pov::Warps_Struct"* %32, %"struct.pov::Warps_Struct"** %3, align 8
  br label %24

; <label>:33:                                     ; preds = %24
  %34 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %3, align 8
  %35 = getelementptr inbounds %"struct.pov::Warps_Struct", %"struct.pov::Warps_Struct"* %34, i32 0, i32 0
  %36 = load i16, i16* %35, align 8
  %37 = zext i16 %36 to i32
  %38 = icmp ne i32 %37, 1
  br i1 %38, label %39, label %56

; <label>:39:                                     ; preds = %33
  %40 = load i32, i32* @x.123
  %41 = load i32, i32* @y.124
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %39
  store %"struct.pov::Warps_Struct"* null, %"struct.pov::Warps_Struct"** %3, align 8
  %48 = load i32, i32* @x.123
  %49 = load i32, i32* @y.124
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %56

; <label>:56:                                     ; preds = %originalBBpart24, %33
  %57 = load i32, i32* @x.123
  %58 = load i32, i32* @y.124
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %56
  %65 = load i32, i32* @x.123
  %66 = load i32, i32* @y.124
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %73

; <label>:73:                                     ; preds = %originalBBpart28, %1
  %74 = load i32, i32* @x.123
  %75 = load i32, i32* @y.124
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %originalBB10alteredBB, %73
  %82 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %3, align 8
  %83 = bitcast %"struct.pov::Warps_Struct"* %82 to %"struct.pov::Turb_Struct"*
  %84 = load i32, i32* @x.123
  %85 = load i32, i32* @y.124
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret %"struct.pov::Turb_Struct"* %83

originalBBalteredBB:                              ; preds = %originalBB, %7
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  store %"struct.pov::Warps_Struct"* null, %"struct.pov::Warps_Struct"** %3, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %73
  %92 = load %"struct.pov::Warps_Struct"*, %"struct.pov::Warps_Struct"** %3, align 8
  %93 = bitcast %"struct.pov::Warps_Struct"* %92 to %"struct.pov::Turb_Struct"*
  br label %originalBB10
}

declare double @_ZN3pov10TurbulenceEPdPNS_11Turb_StructEPNS_14Pattern_StructE(double*, %"struct.pov::Turb_Struct"*, %"struct.pov::Pattern_Struct"*) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZSt3minIdERKT_S2_S2_(double* dereferenceable(8), double* dereferenceable(8)) #2 comdat {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  %6 = load double*, double** %5, align 8
  %7 = load double, double* %6, align 8
  %8 = load double*, double** %4, align 8
  %9 = load double, double* %8, align 8
  %10 = fcmp olt double %7, %9
  br i1 %10, label %11, label %29

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.125
  %13 = load i32, i32* @y.126
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %11
  %20 = load double*, double** %5, align 8
  store double* %20, double** %3, align 8
  %21 = load i32, i32* @x.125
  %22 = load i32, i32* @y.126
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:29:                                     ; preds = %2
  %30 = load double*, double** %4, align 8
  store double* %30, double** %3, align 8
  br label %31

; <label>:31:                                     ; preds = %29, %originalBBpart2
  %32 = load double*, double** %3, align 8
  ret double* %32

originalBBalteredBB:                              ; preds = %originalBB, %11
  %33 = load double*, double** %5, align 8
  store double* %33, double** %3, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZSt3maxIdERKT_S2_S2_(double* dereferenceable(8), double* dereferenceable(8)) #2 comdat {
  %3 = load i32, i32* @x.127
  %4 = load i32, i32* @y.128
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca double*, align 8
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  %14 = load double*, double** %12, align 8
  %15 = load double, double* %14, align 8
  %16 = load double*, double** %13, align 8
  %17 = load double, double* %16, align 8
  %18 = fcmp olt double %15, %17
  %19 = load i32, i32* @x.127
  %20 = load i32, i32* @y.128
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %45

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.127
  %29 = load i32, i32* @y.128
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %27
  %36 = load double*, double** %13, align 8
  store double* %36, double** %11, align 8
  %37 = load i32, i32* @x.127
  %38 = load i32, i32* @y.128
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %47

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load double*, double** %12, align 8
  store double* %46, double** %11, align 8
  br label %47

; <label>:47:                                     ; preds = %45, %originalBBpart24
  %48 = load double*, double** %11, align 8
  ret double* %48

originalBBalteredBB:                              ; preds = %originalBB, %2
  %49 = alloca double*, align 8
  %50 = alloca double*, align 8
  %51 = alloca double*, align 8
  store double* %0, double** %50, align 8
  store double* %1, double** %51, align 8
  %52 = load double*, double** %50, align 8
  %53 = load double, double* %52, align 8
  %54 = load double*, double** %51, align 8
  %55 = load double, double* %54, align 8
  %56 = fcmp olt double %53, %55
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %57 = load double*, double** %13, align 8
  store double* %57, double** %11, align 8
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov13Assign_VectorEPdS0_(double*, double*) #2 comdat {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load double*, double** %4, align 8
  %6 = getelementptr inbounds double, double* %5, i64 0
  %7 = load double, double* %6, align 8
  %8 = load double*, double** %3, align 8
  %9 = getelementptr inbounds double, double* %8, i64 0
  store double %7, double* %9, align 8
  %10 = load double*, double** %4, align 8
  %11 = getelementptr inbounds double, double* %10, i64 1
  %12 = load double, double* %11, align 8
  %13 = load double*, double** %3, align 8
  %14 = getelementptr inbounds double, double* %13, i64 1
  store double %12, double* %14, align 8
  %15 = load double*, double** %4, align 8
  %16 = getelementptr inbounds double, double* %15, i64 2
  %17 = load double, double* %16, align 8
  %18 = load double*, double** %3, align 8
  %19 = getelementptr inbounds double, double* %18, i64 2
  store double %17, double* %19, align 8
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @abs(i32) #4

; Function Attrs: noinline uwtable
define internal i32 @_ZN3povL13IntPickInCubeEiiiPd(i32, i32, i32, double*) #0 {
  %5 = load i32, i32* @x.131
  %6 = load i32, i32* @y.132
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca double*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i32 %0, i32* %13, align 4
  store i32 %1, i32* %14, align 4
  store i32 %2, i32* %15, align 4
  store double* %3, double** %16, align 8
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %19, 4095
  %21 = and i32 %20, 4095
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = load i32, i32* %14, align 4
  %27 = and i32 %26, 4095
  %28 = and i32 %27, 4095
  %29 = xor i32 %25, %28
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = load i32, i32* %15, align 4
  %35 = and i32 %34, 4095
  %36 = and i32 %35, 4095
  %37 = xor i32 %33, %36
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %38
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  store i32 %41, i32* %17, align 4
  %42 = call i32 @_ZN3pov16POV_GET_OLD_RANDEv()
  store i32 %42, i32* %18, align 4
  %43 = load i32, i32* %17, align 4
  call void @_ZN3pov9POV_SRANDEi(i32 %43)
  %44 = load i32, i32* %13, align 4
  %45 = sitofp i32 %44 to double
  %46 = call i32 @_ZN3pov8POV_RANDEv()
  %47 = sitofp i32 %46 to double
  %48 = fmul double %47, 0x3F0000200040021E
  %49 = fadd double %45, %48
  %50 = load double*, double** %16, align 8
  %51 = getelementptr inbounds double, double* %50, i64 0
  store double %49, double* %51, align 8
  %52 = load i32, i32* %14, align 4
  %53 = sitofp i32 %52 to double
  %54 = call i32 @_ZN3pov8POV_RANDEv()
  %55 = sitofp i32 %54 to double
  %56 = fmul double %55, 0x3F0000200040021E
  %57 = fadd double %53, %56
  %58 = load double*, double** %16, align 8
  %59 = getelementptr inbounds double, double* %58, i64 1
  store double %57, double* %59, align 8
  %60 = load i32, i32* %15, align 4
  %61 = sitofp i32 %60 to double
  %62 = call i32 @_ZN3pov8POV_RANDEv()
  %63 = sitofp i32 %62 to double
  %64 = fmul double %63, 0x3F0000200040021E
  %65 = fadd double %61, %64
  %66 = load double*, double** %16, align 8
  %67 = getelementptr inbounds double, double* %66, i64 2
  store double %65, double* %67, align 8
  %68 = load i32, i32* %18, align 4
  call void @_ZN3pov9POV_SRANDEi(i32 %68)
  %69 = load i32, i32* %17, align 4
  %70 = load i32, i32* @x.131
  %71 = load i32, i32* @y.132
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %69

originalBBalteredBB:                              ; preds = %originalBB, %4
  %78 = alloca i32, align 4
  %79 = alloca i32, align 4
  %80 = alloca i32, align 4
  %81 = alloca double*, align 8
  %82 = alloca i32, align 4
  %83 = alloca i32, align 4
  store i32 %0, i32* %78, align 4
  store i32 %1, i32* %79, align 4
  store i32 %2, i32* %80, align 4
  store double* %3, double** %81, align 8
  %84 = load i32, i32* %78, align 4
  %_ = sub i32 0, %84
  %gen = add i32 %_, 4095
  %_1 = shl i32 %84, 4095
  %_2 = shl i32 %84, 4095
  %85 = and i32 %84, 4095
  %_3 = sub i32 %85, 4095
  %gen4 = mul i32 %_3, 4095
  %_5 = shl i32 %85, 4095
  %_6 = sub i32 0, %85
  %gen7 = add i32 %_6, 4095
  %_8 = shl i32 %85, 4095
  %_9 = sub i32 0, %85
  %gen10 = add i32 %_9, 4095
  %_11 = shl i32 %85, 4095
  %_12 = sub i32 0, %85
  %gen13 = add i32 %_12, 4095
  %_14 = sub i32 0, %85
  %gen15 = add i32 %_14, 4095
  %86 = and i32 %85, 4095
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %87
  %89 = load i16, i16* %88, align 2
  %90 = zext i16 %89 to i32
  %91 = load i32, i32* %79, align 4
  %_16 = shl i32 %91, 4095
  %_17 = shl i32 %91, 4095
  %_18 = sub i32 %91, 4095
  %gen19 = mul i32 %_18, 4095
  %_20 = sub i32 %91, 4095
  %gen21 = mul i32 %_20, 4095
  %92 = and i32 %91, 4095
  %_22 = sub i32 0, %92
  %gen23 = add i32 %_22, 4095
  %_24 = sub i32 %92, 4095
  %gen25 = mul i32 %_24, 4095
  %_26 = sub i32 0, %92
  %gen27 = add i32 %_26, 4095
  %_28 = sub i32 %92, 4095
  %gen29 = mul i32 %_28, 4095
  %_30 = sub i32 %92, 4095
  %gen31 = mul i32 %_30, 4095
  %_32 = sub i32 0, %92
  %gen33 = add i32 %_32, 4095
  %_34 = sub i32 0, %92
  %gen35 = add i32 %_34, 4095
  %93 = and i32 %92, 4095
  %_36 = sub i32 %90, %93
  %gen37 = mul i32 %_36, %93
  %_38 = sub i32 %90, %93
  %gen39 = mul i32 %_38, %93
  %94 = xor i32 %90, %93
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  %99 = load i32, i32* %80, align 4
  %_40 = shl i32 %99, 4095
  %100 = and i32 %99, 4095
  %_41 = shl i32 %100, 4095
  %_42 = shl i32 %100, 4095
  %101 = and i32 %100, 4095
  %_43 = sub i32 %98, %101
  %gen44 = mul i32 %_43, %101
  %_45 = sub i32 0, %98
  %gen46 = add i32 %_45, %101
  %_47 = sub i32 %98, %101
  %gen48 = mul i32 %_47, %101
  %_49 = sub i32 0, %98
  %gen50 = add i32 %_49, %101
  %102 = xor i32 %98, %101
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [8192 x i16], [8192 x i16]* @_ZN3pov9hashTableE, i64 0, i64 %103
  %105 = load i16, i16* %104, align 2
  %106 = zext i16 %105 to i32
  store i32 %106, i32* %82, align 4
  %107 = call i32 @_ZN3pov16POV_GET_OLD_RANDEv()
  store i32 %107, i32* %83, align 4
  %108 = load i32, i32* %82, align 4
  call void @_ZN3pov9POV_SRANDEi(i32 %108)
  %109 = load i32, i32* %78, align 4
  %110 = sitofp i32 %109 to double
  %111 = call i32 @_ZN3pov8POV_RANDEv()
  %112 = sitofp i32 %111 to double
  %_51 = fsub double %112, 0x3F0000200040021E
  %gen52 = fmul double %_51, 0x3F0000200040021E
  %113 = fmul double %112, 0x3F0000200040021E
  %_53 = fsub double %110, %113
  %gen54 = fmul double %_53, %113
  %_55 = fsub double %110, %113
  %gen56 = fmul double %_55, %113
  %_57 = fsub double %110, %113
  %gen58 = fmul double %_57, %113
  %_59 = fsub double -0.000000e+00, %110
  %gen60 = fadd double %_59, %113
  %114 = fadd double %110, %113
  %115 = load double*, double** %81, align 8
  %116 = getelementptr inbounds double, double* %115, i64 0
  store double %114, double* %116, align 8
  %117 = load i32, i32* %79, align 4
  %118 = sitofp i32 %117 to double
  %119 = call i32 @_ZN3pov8POV_RANDEv()
  %120 = sitofp i32 %119 to double
  %_61 = fsub double %120, 0x3F0000200040021E
  %gen62 = fmul double %_61, 0x3F0000200040021E
  %_63 = fsub double %120, 0x3F0000200040021E
  %gen64 = fmul double %_63, 0x3F0000200040021E
  %_65 = fsub double -0.000000e+00, %120
  %gen66 = fadd double %_65, 0x3F0000200040021E
  %_67 = fsub double %120, 0x3F0000200040021E
  %gen68 = fmul double %_67, 0x3F0000200040021E
  %_69 = fsub double -0.000000e+00, %120
  %gen70 = fadd double %_69, 0x3F0000200040021E
  %_71 = fsub double %120, 0x3F0000200040021E
  %gen72 = fmul double %_71, 0x3F0000200040021E
  %_73 = fsub double -0.000000e+00, %120
  %gen74 = fadd double %_73, 0x3F0000200040021E
  %121 = fmul double %120, 0x3F0000200040021E
  %_75 = fsub double %118, %121
  %gen76 = fmul double %_75, %121
  %_77 = fsub double -0.000000e+00, %118
  %gen78 = fadd double %_77, %121
  %_79 = fsub double %118, %121
  %gen80 = fmul double %_79, %121
  %122 = fadd double %118, %121
  %123 = load double*, double** %81, align 8
  %124 = getelementptr inbounds double, double* %123, i64 1
  store double %122, double* %124, align 8
  %125 = load i32, i32* %80, align 4
  %126 = sitofp i32 %125 to double
  %127 = call i32 @_ZN3pov8POV_RANDEv()
  %128 = sitofp i32 %127 to double
  %_81 = fsub double %128, 0x3F0000200040021E
  %gen82 = fmul double %_81, 0x3F0000200040021E
  %_83 = fsub double -0.000000e+00, %128
  %gen84 = fadd double %_83, 0x3F0000200040021E
  %_85 = fsub double %128, 0x3F0000200040021E
  %gen86 = fmul double %_85, 0x3F0000200040021E
  %_87 = fsub double %128, 0x3F0000200040021E
  %gen88 = fmul double %_87, 0x3F0000200040021E
  %_89 = fsub double -0.000000e+00, %128
  %gen90 = fadd double %_89, 0x3F0000200040021E
  %_91 = fsub double -0.000000e+00, %128
  %gen92 = fadd double %_91, 0x3F0000200040021E
  %_93 = fsub double %128, 0x3F0000200040021E
  %gen94 = fmul double %_93, 0x3F0000200040021E
  %_95 = fsub double %128, 0x3F0000200040021E
  %gen96 = fmul double %_95, 0x3F0000200040021E
  %129 = fmul double %128, 0x3F0000200040021E
  %_97 = fsub double %126, %129
  %gen98 = fmul double %_97, %129
  %130 = fadd double %126, %129
  %131 = load double*, double** %81, align 8
  %132 = getelementptr inbounds double, double* %131, i64 2
  store double %130, double* %132, align 8
  %133 = load i32, i32* %83, align 4
  call void @_ZN3pov9POV_SRANDEi(i32 %133)
  %134 = load i32, i32* %82, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov4VSubEPdPKdS2_(double*, double*, double*) #2 comdat {
  %4 = load i32, i32* @x.133
  %5 = load i32, i32* @y.134
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %3
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %15 = load double*, double** %13, align 8
  %16 = getelementptr inbounds double, double* %15, i64 0
  %17 = load double, double* %16, align 8
  %18 = load double*, double** %14, align 8
  %19 = getelementptr inbounds double, double* %18, i64 0
  %20 = load double, double* %19, align 8
  %21 = fsub double %17, %20
  %22 = load double*, double** %12, align 8
  %23 = getelementptr inbounds double, double* %22, i64 0
  store double %21, double* %23, align 8
  %24 = load double*, double** %13, align 8
  %25 = getelementptr inbounds double, double* %24, i64 1
  %26 = load double, double* %25, align 8
  %27 = load double*, double** %14, align 8
  %28 = getelementptr inbounds double, double* %27, i64 1
  %29 = load double, double* %28, align 8
  %30 = fsub double %26, %29
  %31 = load double*, double** %12, align 8
  %32 = getelementptr inbounds double, double* %31, i64 1
  store double %30, double* %32, align 8
  %33 = load double*, double** %13, align 8
  %34 = getelementptr inbounds double, double* %33, i64 2
  %35 = load double, double* %34, align 8
  %36 = load double*, double** %14, align 8
  %37 = getelementptr inbounds double, double* %36, i64 2
  %38 = load double, double* %37, align 8
  %39 = fsub double %35, %38
  %40 = load double*, double** %12, align 8
  %41 = getelementptr inbounds double, double* %40, i64 2
  store double %39, double* %41, align 8
  %42 = load i32, i32* @x.133
  %43 = load i32, i32* @y.134
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %50 = alloca double*, align 8
  %51 = alloca double*, align 8
  %52 = alloca double*, align 8
  store double* %0, double** %50, align 8
  store double* %1, double** %51, align 8
  store double* %2, double** %52, align 8
  %53 = load double*, double** %51, align 8
  %54 = getelementptr inbounds double, double* %53, i64 0
  %55 = load double, double* %54, align 8
  %56 = load double*, double** %52, align 8
  %57 = getelementptr inbounds double, double* %56, i64 0
  %58 = load double, double* %57, align 8
  %_ = fsub double %55, %58
  %gen = fmul double %_, %58
  %59 = fsub double %55, %58
  %60 = load double*, double** %50, align 8
  %61 = getelementptr inbounds double, double* %60, i64 0
  store double %59, double* %61, align 8
  %62 = load double*, double** %51, align 8
  %63 = getelementptr inbounds double, double* %62, i64 1
  %64 = load double, double* %63, align 8
  %65 = load double*, double** %52, align 8
  %66 = getelementptr inbounds double, double* %65, i64 1
  %67 = load double, double* %66, align 8
  %_1 = fsub double %64, %67
  %gen2 = fmul double %_1, %67
  %_3 = fsub double %64, %67
  %gen4 = fmul double %_3, %67
  %_5 = fsub double -0.000000e+00, %64
  %gen6 = fadd double %_5, %67
  %_7 = fsub double -0.000000e+00, %64
  %gen8 = fadd double %_7, %67
  %_9 = fsub double -0.000000e+00, %64
  %gen10 = fadd double %_9, %67
  %_11 = fsub double -0.000000e+00, %64
  %gen12 = fadd double %_11, %67
  %68 = fsub double %64, %67
  %69 = load double*, double** %50, align 8
  %70 = getelementptr inbounds double, double* %69, i64 1
  store double %68, double* %70, align 8
  %71 = load double*, double** %51, align 8
  %72 = getelementptr inbounds double, double* %71, i64 2
  %73 = load double, double* %72, align 8
  %74 = load double*, double** %52, align 8
  %75 = getelementptr inbounds double, double* %74, i64 2
  %76 = load double, double* %75, align 8
  %_13 = fsub double -0.000000e+00, %73
  %gen14 = fadd double %_13, %76
  %_15 = fsub double -0.000000e+00, %73
  %gen16 = fadd double %_15, %76
  %_17 = fsub double %73, %76
  %gen18 = fmul double %_17, %76
  %_19 = fsub double %73, %76
  %gen20 = fmul double %_19, %76
  %_21 = fsub double %73, %76
  %gen22 = fmul double %_21, %76
  %_23 = fsub double %73, %76
  %gen24 = fmul double %_23, %76
  %_25 = fsub double %73, %76
  %gen26 = fmul double %_25, %76
  %_27 = fsub double %73, %76
  %gen28 = fmul double %_27, %76
  %77 = fsub double %73, %76
  %78 = load double*, double** %50, align 8
  %79 = getelementptr inbounds double, double* %78, i64 2
  store double %77, double* %79, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZN3pov7VSumSqrEPd(double*) #2 comdat {
  %2 = load i32, i32* @x.135
  %3 = load i32, i32* @y.136
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca double*, align 8
  store double* %0, double** %10, align 8
  %11 = load double*, double** %10, align 8
  %12 = getelementptr inbounds double, double* %11, i64 0
  %13 = load double, double* %12, align 8
  %14 = load double*, double** %10, align 8
  %15 = getelementptr inbounds double, double* %14, i64 0
  %16 = load double, double* %15, align 8
  %17 = fmul double %13, %16
  %18 = load double*, double** %10, align 8
  %19 = getelementptr inbounds double, double* %18, i64 1
  %20 = load double, double* %19, align 8
  %21 = load double*, double** %10, align 8
  %22 = getelementptr inbounds double, double* %21, i64 1
  %23 = load double, double* %22, align 8
  %24 = fmul double %20, %23
  %25 = fadd double %17, %24
  %26 = load double*, double** %10, align 8
  %27 = getelementptr inbounds double, double* %26, i64 2
  %28 = load double, double* %27, align 8
  %29 = load double*, double** %10, align 8
  %30 = getelementptr inbounds double, double* %29, i64 2
  %31 = load double, double* %30, align 8
  %32 = fmul double %28, %31
  %33 = fadd double %25, %32
  %34 = load i32, i32* @x.135
  %35 = load i32, i32* @y.136
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double %33

originalBBalteredBB:                              ; preds = %originalBB, %1
  %42 = alloca double*, align 8
  store double* %0, double** %42, align 8
  %43 = load double*, double** %42, align 8
  %44 = getelementptr inbounds double, double* %43, i64 0
  %45 = load double, double* %44, align 8
  %46 = load double*, double** %42, align 8
  %47 = getelementptr inbounds double, double* %46, i64 0
  %48 = load double, double* %47, align 8
  %_ = fsub double %45, %48
  %gen = fmul double %_, %48
  %_1 = fsub double -0.000000e+00, %45
  %gen2 = fadd double %_1, %48
  %_3 = fsub double %45, %48
  %gen4 = fmul double %_3, %48
  %_5 = fsub double %45, %48
  %gen6 = fmul double %_5, %48
  %_7 = fsub double -0.000000e+00, %45
  %gen8 = fadd double %_7, %48
  %49 = fmul double %45, %48
  %50 = load double*, double** %42, align 8
  %51 = getelementptr inbounds double, double* %50, i64 1
  %52 = load double, double* %51, align 8
  %53 = load double*, double** %42, align 8
  %54 = getelementptr inbounds double, double* %53, i64 1
  %55 = load double, double* %54, align 8
  %_9 = fsub double %52, %55
  %gen10 = fmul double %_9, %55
  %_11 = fsub double -0.000000e+00, %52
  %gen12 = fadd double %_11, %55
  %56 = fmul double %52, %55
  %_13 = fsub double %49, %56
  %gen14 = fmul double %_13, %56
  %_15 = fsub double -0.000000e+00, %49
  %gen16 = fadd double %_15, %56
  %_17 = fsub double %49, %56
  %gen18 = fmul double %_17, %56
  %_19 = fsub double -0.000000e+00, %49
  %gen20 = fadd double %_19, %56
  %57 = fadd double %49, %56
  %58 = load double*, double** %42, align 8
  %59 = getelementptr inbounds double, double* %58, i64 2
  %60 = load double, double* %59, align 8
  %61 = load double*, double** %42, align 8
  %62 = getelementptr inbounds double, double* %61, i64 2
  %63 = load double, double* %62, align 8
  %_21 = fsub double %60, %63
  %gen22 = fmul double %_21, %63
  %_23 = fsub double -0.000000e+00, %60
  %gen24 = fadd double %_23, %63
  %_25 = fsub double %60, %63
  %gen26 = fmul double %_25, %63
  %_27 = fsub double %60, %63
  %gen28 = fmul double %_27, %63
  %_29 = fsub double %60, %63
  %gen30 = fmul double %_29, %63
  %64 = fmul double %60, %63
  %_31 = fsub double -0.000000e+00, %57
  %gen32 = fadd double %_31, %64
  %_33 = fsub double -0.000000e+00, %57
  %gen34 = fadd double %_33, %64
  %_35 = fsub double -0.000000e+00, %57
  %gen36 = fadd double %_35, %64
  %_37 = fsub double -0.000000e+00, %57
  %gen38 = fadd double %_37, %64
  %_39 = fsub double %57, %64
  %gen40 = fmul double %_39, %64
  %_41 = fsub double -0.000000e+00, %57
  %gen42 = fadd double %_41, %64
  %_43 = fsub double -0.000000e+00, %57
  %gen44 = fadd double %_43, %64
  %65 = fadd double %57, %64
  br label %originalBB
}

; Function Attrs: nounwind
declare double @sqrt(double) #3

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float @_ZN3pov5intp3Efffff(float, float, float, float, float) #2 comdat {
  %6 = load i32, i32* @x.137
  %7 = load i32, i32* @y.138
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %5
  %14 = alloca float, align 4
  %15 = alloca float, align 4
  %16 = alloca float, align 4
  %17 = alloca float, align 4
  %18 = alloca float, align 4
  %19 = alloca float, align 4
  %20 = alloca float, align 4
  %21 = alloca float, align 4
  %22 = alloca float, align 4
  store float %0, float* %14, align 4
  store float %1, float* %15, align 4
  store float %2, float* %16, align 4
  store float %3, float* %17, align 4
  store float %4, float* %18, align 4
  %23 = load float, float* %17, align 4
  %24 = load float, float* %15, align 4
  %25 = fsub float %23, %24
  %26 = fpext float %25 to double
  %27 = fmul double %26, 5.000000e-01
  %28 = fptrunc double %27 to float
  store float %28, float* %19, align 4
  %29 = load float, float* %18, align 4
  %30 = load float, float* %16, align 4
  %31 = fsub float %29, %30
  %32 = fpext float %31 to double
  %33 = fmul double %32, 5.000000e-01
  %34 = fptrunc double %33 to float
  store float %34, float* %20, align 4
  %35 = load float, float* %16, align 4
  %36 = load float, float* %17, align 4
  %37 = fsub float %35, %36
  %38 = fpext float %37 to double
  %39 = fmul double 2.000000e+00, %38
  %40 = load float, float* %19, align 4
  %41 = fpext float %40 to double
  %42 = fadd double %39, %41
  %43 = load float, float* %20, align 4
  %44 = fpext float %43 to double
  %45 = fadd double %42, %44
  %46 = fptrunc double %45 to float
  store float %46, float* %21, align 4
  %47 = load float, float* %16, align 4
  %48 = load float, float* %17, align 4
  %49 = fsub float %47, %48
  %50 = fpext float %49 to double
  %51 = fmul double -3.000000e+00, %50
  %52 = load float, float* %19, align 4
  %53 = fpext float %52 to double
  %54 = fmul double 2.000000e+00, %53
  %55 = fsub double %51, %54
  %56 = load float, float* %20, align 4
  %57 = fpext float %56 to double
  %58 = fsub double %55, %57
  %59 = fptrunc double %58 to float
  store float %59, float* %22, align 4
  %60 = load float, float* %21, align 4
  %61 = load float, float* %14, align 4
  %62 = fmul float %60, %61
  %63 = load float, float* %22, align 4
  %64 = fadd float %62, %63
  %65 = load float, float* %14, align 4
  %66 = fmul float %64, %65
  %67 = load float, float* %19, align 4
  %68 = fadd float %66, %67
  %69 = load float, float* %14, align 4
  %70 = fmul float %68, %69
  %71 = load float, float* %16, align 4
  %72 = fadd float %70, %71
  %73 = load i32, i32* @x.137
  %74 = load i32, i32* @y.138
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret float %72

originalBBalteredBB:                              ; preds = %originalBB, %5
  %81 = alloca float, align 4
  %82 = alloca float, align 4
  %83 = alloca float, align 4
  %84 = alloca float, align 4
  %85 = alloca float, align 4
  %86 = alloca float, align 4
  %87 = alloca float, align 4
  %88 = alloca float, align 4
  %89 = alloca float, align 4
  store float %0, float* %81, align 4
  store float %1, float* %82, align 4
  store float %2, float* %83, align 4
  store float %3, float* %84, align 4
  store float %4, float* %85, align 4
  %90 = load float, float* %84, align 4
  %91 = load float, float* %82, align 4
  %_ = fsub float -0.000000e+00, %90
  %gen = fadd float %_, %91
  %_1 = fsub float -0.000000e+00, %90
  %gen2 = fadd float %_1, %91
  %_3 = fsub float %90, %91
  %gen4 = fmul float %_3, %91
  %92 = fsub float %90, %91
  %93 = fpext float %92 to double
  %_5 = fsub double -0.000000e+00, %93
  %gen6 = fadd double %_5, 5.000000e-01
  %_7 = fsub double -0.000000e+00, %93
  %gen8 = fadd double %_7, 5.000000e-01
  %94 = fmul double %93, 5.000000e-01
  %95 = fptrunc double %94 to float
  store float %95, float* %86, align 4
  %96 = load float, float* %85, align 4
  %97 = load float, float* %83, align 4
  %_9 = fsub float %96, %97
  %gen10 = fmul float %_9, %97
  %_11 = fsub float %96, %97
  %gen12 = fmul float %_11, %97
  %_13 = fsub float -0.000000e+00, %96
  %gen14 = fadd float %_13, %97
  %98 = fsub float %96, %97
  %99 = fpext float %98 to double
  %_15 = fsub double -0.000000e+00, %99
  %gen16 = fadd double %_15, 5.000000e-01
  %_17 = fsub double -0.000000e+00, %99
  %gen18 = fadd double %_17, 5.000000e-01
  %_19 = fsub double -0.000000e+00, %99
  %gen20 = fadd double %_19, 5.000000e-01
  %100 = fmul double %99, 5.000000e-01
  %101 = fptrunc double %100 to float
  store float %101, float* %87, align 4
  %102 = load float, float* %83, align 4
  %103 = load float, float* %84, align 4
  %_21 = fsub float -0.000000e+00, %102
  %gen22 = fadd float %_21, %103
  %104 = fsub float %102, %103
  %105 = fpext float %104 to double
  %_23 = fsub double -0.000000e+00, 2.000000e+00
  %gen24 = fadd double %_23, %105
  %_25 = fsub double 2.000000e+00, %105
  %gen26 = fmul double %_25, %105
  %_27 = fsub double 2.000000e+00, %105
  %gen28 = fmul double %_27, %105
  %_29 = fsub double 2.000000e+00, %105
  %gen30 = fmul double %_29, %105
  %_31 = fsub double -0.000000e+00, 2.000000e+00
  %gen32 = fadd double %_31, %105
  %_33 = fsub double 2.000000e+00, %105
  %gen34 = fmul double %_33, %105
  %106 = fmul double 2.000000e+00, %105
  %107 = load float, float* %86, align 4
  %108 = fpext float %107 to double
  %_35 = fsub double -0.000000e+00, %106
  %gen36 = fadd double %_35, %108
  %_37 = fsub double -0.000000e+00, %106
  %gen38 = fadd double %_37, %108
  %_39 = fsub double %106, %108
  %gen40 = fmul double %_39, %108
  %_41 = fsub double %106, %108
  %gen42 = fmul double %_41, %108
  %_43 = fsub double %106, %108
  %gen44 = fmul double %_43, %108
  %_45 = fsub double %106, %108
  %gen46 = fmul double %_45, %108
  %_47 = fsub double -0.000000e+00, %106
  %gen48 = fadd double %_47, %108
  %_49 = fsub double -0.000000e+00, %106
  %gen50 = fadd double %_49, %108
  %_51 = fsub double %106, %108
  %gen52 = fmul double %_51, %108
  %109 = fadd double %106, %108
  %110 = load float, float* %87, align 4
  %111 = fpext float %110 to double
  %_53 = fsub double -0.000000e+00, %109
  %gen54 = fadd double %_53, %111
  %112 = fadd double %109, %111
  %113 = fptrunc double %112 to float
  store float %113, float* %88, align 4
  %114 = load float, float* %83, align 4
  %115 = load float, float* %84, align 4
  %116 = fsub float %114, %115
  %117 = fpext float %116 to double
  %_55 = fsub double -0.000000e+00, -3.000000e+00
  %gen56 = fadd double %_55, %117
  %_57 = fsub double -0.000000e+00, -3.000000e+00
  %gen58 = fadd double %_57, %117
  %_59 = fsub double -3.000000e+00, %117
  %gen60 = fmul double %_59, %117
  %_61 = fsub double -0.000000e+00, -3.000000e+00
  %gen62 = fadd double %_61, %117
  %118 = fmul double -3.000000e+00, %117
  %119 = load float, float* %86, align 4
  %120 = fpext float %119 to double
  %_63 = fsub double 2.000000e+00, %120
  %gen64 = fmul double %_63, %120
  %_65 = fsub double -0.000000e+00, 2.000000e+00
  %gen66 = fadd double %_65, %120
  %_67 = fsub double -0.000000e+00, 2.000000e+00
  %gen68 = fadd double %_67, %120
  %121 = fmul double 2.000000e+00, %120
  %_69 = fsub double -0.000000e+00, %118
  %gen70 = fadd double %_69, %121
  %_71 = fsub double %118, %121
  %gen72 = fmul double %_71, %121
  %_73 = fsub double %118, %121
  %gen74 = fmul double %_73, %121
  %122 = fsub double %118, %121
  %123 = load float, float* %87, align 4
  %124 = fpext float %123 to double
  %_75 = fsub double -0.000000e+00, %122
  %gen76 = fadd double %_75, %124
  %_77 = fsub double -0.000000e+00, %122
  %gen78 = fadd double %_77, %124
  %_79 = fsub double %122, %124
  %gen80 = fmul double %_79, %124
  %125 = fsub double %122, %124
  %126 = fptrunc double %125 to float
  store float %126, float* %89, align 4
  %127 = load float, float* %88, align 4
  %128 = load float, float* %81, align 4
  %_81 = fsub float %127, %128
  %gen82 = fmul float %_81, %128
  %_83 = fsub float -0.000000e+00, %127
  %gen84 = fadd float %_83, %128
  %_85 = fsub float %127, %128
  %gen86 = fmul float %_85, %128
  %_87 = fsub float -0.000000e+00, %127
  %gen88 = fadd float %_87, %128
  %_89 = fsub float -0.000000e+00, %127
  %gen90 = fadd float %_89, %128
  %_91 = fsub float %127, %128
  %gen92 = fmul float %_91, %128
  %_93 = fsub float %127, %128
  %gen94 = fmul float %_93, %128
  %_95 = fsub float -0.000000e+00, %127
  %gen96 = fadd float %_95, %128
  %_97 = fsub float %127, %128
  %gen98 = fmul float %_97, %128
  %129 = fmul float %127, %128
  %130 = load float, float* %89, align 4
  %_99 = fsub float %129, %130
  %gen100 = fmul float %_99, %130
  %_101 = fsub float %129, %130
  %gen102 = fmul float %_101, %130
  %_103 = fsub float %129, %130
  %gen104 = fmul float %_103, %130
  %_105 = fsub float %129, %130
  %gen106 = fmul float %_105, %130
  %131 = fadd float %129, %130
  %132 = load float, float* %81, align 4
  %_107 = fsub float %131, %132
  %gen108 = fmul float %_107, %132
  %_109 = fsub float -0.000000e+00, %131
  %gen110 = fadd float %_109, %132
  %_111 = fsub float %131, %132
  %gen112 = fmul float %_111, %132
  %_113 = fsub float %131, %132
  %gen114 = fmul float %_113, %132
  %133 = fmul float %131, %132
  %134 = load float, float* %86, align 4
  %_115 = fsub float -0.000000e+00, %133
  %gen116 = fadd float %_115, %134
  %135 = fadd float %133, %134
  %136 = load float, float* %81, align 4
  %_117 = fsub float -0.000000e+00, %135
  %gen118 = fadd float %_117, %136
  %_119 = fsub float -0.000000e+00, %135
  %gen120 = fadd float %_119, %136
  %137 = fmul float %135, %136
  %138 = load float, float* %83, align 4
  %_121 = fsub float %137, %138
  %gen122 = fmul float %_121, %138
  %_123 = fsub float -0.000000e+00, %137
  %gen124 = fadd float %_123, %138
  %139 = fadd float %137, %138
  br label %originalBB
}

declare %"struct.pov::FPUContext_Struct"* @_ZN3pov17POVFPU_NewContextEv() #1

declare %"struct.pov::FPUContext_Struct"* @_ZN3pov20POVFPU_SwitchContextEPNS_17FPUContext_StructE(%"struct.pov::FPUContext_Struct"*) #1

declare void @_ZN3pov15POVFPU_SetLocalEjd(i32, double) #1

declare double @_ZN3pov17POVFPU_RunDefaultEj(i32) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov4VDotERdPKdS2_(double* dereferenceable(8), double*, double*) #2 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %5, align 8
  %8 = getelementptr inbounds double, double* %7, i64 0
  %9 = load double, double* %8, align 8
  %10 = load double*, double** %6, align 8
  %11 = getelementptr inbounds double, double* %10, i64 0
  %12 = load double, double* %11, align 8
  %13 = fmul double %9, %12
  %14 = load double*, double** %5, align 8
  %15 = getelementptr inbounds double, double* %14, i64 1
  %16 = load double, double* %15, align 8
  %17 = load double*, double** %6, align 8
  %18 = getelementptr inbounds double, double* %17, i64 1
  %19 = load double, double* %18, align 8
  %20 = fmul double %16, %19
  %21 = fadd double %13, %20
  %22 = load double*, double** %5, align 8
  %23 = getelementptr inbounds double, double* %22, i64 2
  %24 = load double, double* %23, align 8
  %25 = load double*, double** %6, align 8
  %26 = getelementptr inbounds double, double* %25, i64 2
  %27 = load double, double* %26, align 8
  %28 = fmul double %24, %27
  %29 = fadd double %21, %28
  %30 = load double*, double** %4, align 8
  store double %29, double* %30, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov6VScaleEPdPKdd(double*, double*, double) #2 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double %2, double* %6, align 8
  %7 = load double*, double** %5, align 8
  %8 = getelementptr inbounds double, double* %7, i64 0
  %9 = load double, double* %8, align 8
  %10 = load double, double* %6, align 8
  %11 = fmul double %9, %10
  %12 = load double*, double** %4, align 8
  %13 = getelementptr inbounds double, double* %12, i64 0
  store double %11, double* %13, align 8
  %14 = load double*, double** %5, align 8
  %15 = getelementptr inbounds double, double* %14, i64 1
  %16 = load double, double* %15, align 8
  %17 = load double, double* %6, align 8
  %18 = fmul double %16, %17
  %19 = load double*, double** %4, align 8
  %20 = getelementptr inbounds double, double* %19, i64 1
  store double %18, double* %20, align 8
  %21 = load double*, double** %5, align 8
  %22 = getelementptr inbounds double, double* %21, i64 2
  %23 = load double, double* %22, align 8
  %24 = load double, double* %6, align 8
  %25 = fmul double %23, %24
  %26 = load double*, double** %4, align 8
  %27 = getelementptr inbounds double, double* %26, i64 2
  store double %25, double* %27, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL22fractal_exterior_colorEPNS_14Pattern_StructEidd(%"struct.pov::Pattern_Struct"*, i32, double, double) #2 {
  %5 = load i32, i32* @x.143
  %6 = load i32, i32* @y.144
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %4
  %13 = alloca double, align 8
  %14 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %15 = alloca i32, align 4
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  store %"struct.pov::Pattern_Struct"* %0, %"struct.pov::Pattern_Struct"** %14, align 8
  store i32 %1, i32* %15, align 4
  store double %2, double* %16, align 8
  store double %3, double* %17, align 8
  %18 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %14, align 8
  %19 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %18, i32 0, i32 10
  %20 = bitcast %union.anon.25* %19 to %struct.anon.31*
  %21 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %20, i32 0, i32 3
  %22 = load i16, i16* %21, align 4
  %23 = sext i16 %22 to i32
  %24 = load i32, i32* @x.143
  %25 = load i32, i32* @y.144
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %23, label %115 [
    i32 0, label %32
    i32 1, label %38
    i32 2, label %48
    i32 3, label %56
    i32 4, label %64
    i32 5, label %74
    i32 6, label %100
  ]

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %14, align 8
  %34 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %33, i32 0, i32 10
  %35 = bitcast %union.anon.25* %34 to %struct.anon.31*
  %36 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %35, i32 0, i32 4
  %37 = load double, double* %36, align 8
  store double %37, double* %13, align 8
  br label %116

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = load i32, i32* %15, align 4
  %40 = sitofp i32 %39 to double
  %41 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %14, align 8
  %42 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %41, i32 0, i32 10
  %43 = bitcast %union.anon.25* %42 to %struct.anon.31*
  %44 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %43, i32 0, i32 1
  %45 = load i16, i16* %44, align 8
  %46 = sitofp i16 %45 to double
  %47 = fdiv double %40, %46
  store double %47, double* %13, align 8
  br label %116

; <label>:48:                                     ; preds = %originalBBpart2
  %49 = load double, double* %16, align 8
  %50 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %14, align 8
  %51 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %50, i32 0, i32 10
  %52 = bitcast %union.anon.25* %51 to %struct.anon.31*
  %53 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %52, i32 0, i32 4
  %54 = load double, double* %53, align 8
  %55 = fmul double %49, %54
  store double %55, double* %13, align 8
  br label %116

; <label>:56:                                     ; preds = %originalBBpart2
  %57 = load double, double* %17, align 8
  %58 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %14, align 8
  %59 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %58, i32 0, i32 10
  %60 = bitcast %union.anon.25* %59 to %struct.anon.31*
  %61 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %60, i32 0, i32 4
  %62 = load double, double* %61, align 8
  %63 = fmul double %57, %62
  store double %63, double* %13, align 8
  br label %116

; <label>:64:                                     ; preds = %originalBBpart2
  %65 = load double, double* %16, align 8
  %66 = load double, double* %16, align 8
  %67 = fmul double %65, %66
  %68 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %14, align 8
  %69 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %68, i32 0, i32 10
  %70 = bitcast %union.anon.25* %69 to %struct.anon.31*
  %71 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %70, i32 0, i32 4
  %72 = load double, double* %71, align 8
  %73 = fmul double %67, %72
  store double %73, double* %13, align 8
  br label %116

; <label>:74:                                     ; preds = %originalBBpart2
  %75 = load i32, i32* @x.143
  %76 = load i32, i32* @y.144
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %74
  %83 = load double, double* %17, align 8
  %84 = load double, double* %17, align 8
  %85 = fmul double %83, %84
  %86 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %14, align 8
  %87 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %86, i32 0, i32 10
  %88 = bitcast %union.anon.25* %87 to %struct.anon.31*
  %89 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %88, i32 0, i32 4
  %90 = load double, double* %89, align 8
  %91 = fmul double %85, %90
  store double %91, double* %13, align 8
  %92 = load i32, i32* @x.143
  %93 = load i32, i32* @y.144
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  br label %116

; <label>:100:                                    ; preds = %originalBBpart2
  %101 = load double, double* %16, align 8
  %102 = load double, double* %16, align 8
  %103 = fmul double %101, %102
  %104 = load double, double* %17, align 8
  %105 = load double, double* %17, align 8
  %106 = fmul double %104, %105
  %107 = fadd double %103, %106
  %108 = call double @sqrt(double %107) #7
  %109 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %14, align 8
  %110 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %109, i32 0, i32 10
  %111 = bitcast %union.anon.25* %110 to %struct.anon.31*
  %112 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %111, i32 0, i32 4
  %113 = load double, double* %112, align 8
  %114 = fmul double %108, %113
  store double %114, double* %13, align 8
  br label %116

; <label>:115:                                    ; preds = %originalBBpart2
  store double 0.000000e+00, double* %13, align 8
  br label %116

; <label>:116:                                    ; preds = %115, %100, %originalBBpart29, %64, %56, %48, %38, %32
  %117 = load i32, i32* @x.143
  %118 = load i32, i32* @y.144
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %originalBB11alteredBB, %116
  %125 = load double, double* %13, align 8
  %126 = load i32, i32* @x.143
  %127 = load i32, i32* @y.144
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  ret double %125

originalBBalteredBB:                              ; preds = %originalBB, %4
  %134 = alloca double, align 8
  %135 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %136 = alloca i32, align 4
  %137 = alloca double, align 8
  %138 = alloca double, align 8
  store %"struct.pov::Pattern_Struct"* %0, %"struct.pov::Pattern_Struct"** %135, align 8
  store i32 %1, i32* %136, align 4
  store double %2, double* %137, align 8
  store double %3, double* %138, align 8
  %139 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %135, align 8
  %140 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %139, i32 0, i32 10
  %141 = bitcast %union.anon.25* %140 to %struct.anon.31*
  %142 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %141, i32 0, i32 3
  %143 = load i16, i16* %142, align 4
  %144 = sext i16 %143 to i32
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %74
  %145 = load double, double* %17, align 8
  %146 = load double, double* %17, align 8
  %147 = fmul double %145, %146
  %148 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %14, align 8
  %149 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %148, i32 0, i32 10
  %150 = bitcast %union.anon.25* %149 to %struct.anon.31*
  %151 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %150, i32 0, i32 4
  %152 = load double, double* %151, align 8
  %_ = fsub double %147, %152
  %gen = fmul double %_, %152
  %_2 = fsub double -0.000000e+00, %147
  %gen3 = fadd double %_2, %152
  %_4 = fsub double %147, %152
  %gen5 = fmul double %_4, %152
  %_6 = fsub double -0.000000e+00, %147
  %gen7 = fadd double %_6, %152
  %153 = fmul double %147, %152
  store double %153, double* %13, align 8
  br label %originalBB1

originalBB11alteredBB:                            ; preds = %originalBB11, %116
  %154 = load double, double* %13, align 8
  br label %originalBB11
}

; Function Attrs: noinline nounwind uwtable
define internal double @_ZN3povL22fractal_interior_colorEPNS_14Pattern_StructEiddd(%"struct.pov::Pattern_Struct"*, i32, double, double, double) #2 {
  %6 = alloca double, align 8
  %7 = alloca %"struct.pov::Pattern_Struct"*, align 8
  %8 = alloca i32, align 4
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  store %"struct.pov::Pattern_Struct"* %0, %"struct.pov::Pattern_Struct"** %7, align 8
  store i32 %1, i32* %8, align 4
  store double %2, double* %9, align 8
  store double %3, double* %10, align 8
  store double %4, double* %11, align 8
  %12 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %7, align 8
  %13 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %12, i32 0, i32 10
  %14 = bitcast %union.anon.25* %13 to %struct.anon.31*
  %15 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %14, i32 0, i32 2
  %16 = load i16, i16* %15, align 2
  %17 = sext i16 %16 to i32
  switch i32 %17, label %147 [
    i32 0, label %18
    i32 1, label %24
    i32 2, label %49
    i32 3, label %73
    i32 4, label %97
    i32 5, label %107
    i32 6, label %133
  ]

; <label>:18:                                     ; preds = %5
  %19 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %7, align 8
  %20 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %19, i32 0, i32 10
  %21 = bitcast %union.anon.25* %20 to %struct.anon.31*
  %22 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %21, i32 0, i32 5
  %23 = load double, double* %22, align 8
  store double %23, double* %6, align 8
  br label %164

; <label>:24:                                     ; preds = %5
  %25 = load i32, i32* @x.145
  %26 = load i32, i32* @y.146
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %24
  %33 = load double, double* %11, align 8
  %34 = call double @sqrt(double %33) #7
  %35 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %7, align 8
  %36 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %35, i32 0, i32 10
  %37 = bitcast %union.anon.25* %36 to %struct.anon.31*
  %38 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %37, i32 0, i32 5
  %39 = load double, double* %38, align 8
  %40 = fmul double %34, %39
  store double %40, double* %6, align 8
  %41 = load i32, i32* @x.145
  %42 = load i32, i32* @y.146
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %164

; <label>:49:                                     ; preds = %5
  %50 = load i32, i32* @x.145
  %51 = load i32, i32* @y.146
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %originalBB5alteredBB, %49
  %58 = load double, double* %9, align 8
  %59 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %7, align 8
  %60 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %59, i32 0, i32 10
  %61 = bitcast %union.anon.25* %60 to %struct.anon.31*
  %62 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %61, i32 0, i32 5
  %63 = load double, double* %62, align 8
  %64 = fmul double %58, %63
  store double %64, double* %6, align 8
  %65 = load i32, i32* @x.145
  %66 = load i32, i32* @y.146
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart217, label %originalBB5alteredBB

originalBBpart217:                                ; preds = %originalBB5
  br label %164

; <label>:73:                                     ; preds = %5
  %74 = load i32, i32* @x.145
  %75 = load i32, i32* @y.146
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %originalBB19alteredBB, %73
  %82 = load double, double* %10, align 8
  %83 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %7, align 8
  %84 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %83, i32 0, i32 10
  %85 = bitcast %union.anon.25* %84 to %struct.anon.31*
  %86 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %85, i32 0, i32 5
  %87 = load double, double* %86, align 8
  %88 = fmul double %82, %87
  store double %88, double* %6, align 8
  %89 = load i32, i32* @x.145
  %90 = load i32, i32* @y.146
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart233, label %originalBB19alteredBB

originalBBpart233:                                ; preds = %originalBB19
  br label %164

; <label>:97:                                     ; preds = %5
  %98 = load double, double* %9, align 8
  %99 = load double, double* %9, align 8
  %100 = fmul double %98, %99
  %101 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %7, align 8
  %102 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %101, i32 0, i32 10
  %103 = bitcast %union.anon.25* %102 to %struct.anon.31*
  %104 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %103, i32 0, i32 5
  %105 = load double, double* %104, align 8
  %106 = fmul double %100, %105
  store double %106, double* %6, align 8
  br label %164

; <label>:107:                                    ; preds = %5
  %108 = load i32, i32* @x.145
  %109 = load i32, i32* @y.146
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %originalBB35alteredBB, %107
  %116 = load double, double* %10, align 8
  %117 = load double, double* %10, align 8
  %118 = fmul double %116, %117
  %119 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %7, align 8
  %120 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %119, i32 0, i32 10
  %121 = bitcast %union.anon.25* %120 to %struct.anon.31*
  %122 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %121, i32 0, i32 5
  %123 = load double, double* %122, align 8
  %124 = fmul double %118, %123
  store double %124, double* %6, align 8
  %125 = load i32, i32* @x.145
  %126 = load i32, i32* @y.146
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart257, label %originalBB35alteredBB

originalBBpart257:                                ; preds = %originalBB35
  br label %164

; <label>:133:                                    ; preds = %5
  %134 = load double, double* %9, align 8
  %135 = load double, double* %9, align 8
  %136 = fmul double %134, %135
  %137 = load double, double* %10, align 8
  %138 = load double, double* %10, align 8
  %139 = fmul double %137, %138
  %140 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %7, align 8
  %141 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %140, i32 0, i32 10
  %142 = bitcast %union.anon.25* %141 to %struct.anon.31*
  %143 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %142, i32 0, i32 5
  %144 = load double, double* %143, align 8
  %145 = fmul double %139, %144
  %146 = fadd double %136, %145
  store double %146, double* %6, align 8
  br label %164

; <label>:147:                                    ; preds = %5
  %148 = load i32, i32* @x.145
  %149 = load i32, i32* @y.146
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %originalBB59alteredBB, %147
  store double 0.000000e+00, double* %6, align 8
  %156 = load i32, i32* @x.145
  %157 = load i32, i32* @y.146
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %164

; <label>:164:                                    ; preds = %originalBBpart261, %133, %originalBBpart257, %97, %originalBBpart233, %originalBBpart217, %originalBBpart2, %18
  %165 = load double, double* %6, align 8
  ret double %165

originalBBalteredBB:                              ; preds = %originalBB, %24
  %166 = load double, double* %11, align 8
  %167 = call double @sqrt(double %166) #7
  %168 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %7, align 8
  %169 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %168, i32 0, i32 10
  %170 = bitcast %union.anon.25* %169 to %struct.anon.31*
  %171 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %170, i32 0, i32 5
  %172 = load double, double* %171, align 8
  %_ = fsub double %167, %172
  %gen = fmul double %_, %172
  %_1 = fsub double -0.000000e+00, %167
  %gen2 = fadd double %_1, %172
  %_3 = fsub double %167, %172
  %gen4 = fmul double %_3, %172
  %173 = fmul double %167, %172
  store double %173, double* %6, align 8
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %49
  %174 = load double, double* %9, align 8
  %175 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %7, align 8
  %176 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %175, i32 0, i32 10
  %177 = bitcast %union.anon.25* %176 to %struct.anon.31*
  %178 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %177, i32 0, i32 5
  %179 = load double, double* %178, align 8
  %_6 = fsub double %174, %179
  %gen7 = fmul double %_6, %179
  %_8 = fsub double -0.000000e+00, %174
  %gen9 = fadd double %_8, %179
  %_10 = fsub double %174, %179
  %gen11 = fmul double %_10, %179
  %_12 = fsub double -0.000000e+00, %174
  %gen13 = fadd double %_12, %179
  %_14 = fsub double -0.000000e+00, %174
  %gen15 = fadd double %_14, %179
  %180 = fmul double %174, %179
  store double %180, double* %6, align 8
  br label %originalBB5

originalBB19alteredBB:                            ; preds = %originalBB19, %73
  %181 = load double, double* %10, align 8
  %182 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %7, align 8
  %183 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %182, i32 0, i32 10
  %184 = bitcast %union.anon.25* %183 to %struct.anon.31*
  %185 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %184, i32 0, i32 5
  %186 = load double, double* %185, align 8
  %_20 = fsub double %181, %186
  %gen21 = fmul double %_20, %186
  %_22 = fsub double -0.000000e+00, %181
  %gen23 = fadd double %_22, %186
  %_24 = fsub double -0.000000e+00, %181
  %gen25 = fadd double %_24, %186
  %_26 = fsub double %181, %186
  %gen27 = fmul double %_26, %186
  %_28 = fsub double %181, %186
  %gen29 = fmul double %_28, %186
  %_30 = fsub double -0.000000e+00, %181
  %gen31 = fadd double %_30, %186
  %187 = fmul double %181, %186
  store double %187, double* %6, align 8
  br label %originalBB19

originalBB35alteredBB:                            ; preds = %originalBB35, %107
  %188 = load double, double* %10, align 8
  %189 = load double, double* %10, align 8
  %_36 = fsub double -0.000000e+00, %188
  %gen37 = fadd double %_36, %189
  %_38 = fsub double %188, %189
  %gen39 = fmul double %_38, %189
  %_40 = fsub double -0.000000e+00, %188
  %gen41 = fadd double %_40, %189
  %_42 = fsub double -0.000000e+00, %188
  %gen43 = fadd double %_42, %189
  %_44 = fsub double %188, %189
  %gen45 = fmul double %_44, %189
  %_46 = fsub double %188, %189
  %gen47 = fmul double %_46, %189
  %_48 = fsub double -0.000000e+00, %188
  %gen49 = fadd double %_48, %189
  %190 = fmul double %188, %189
  %191 = load %"struct.pov::Pattern_Struct"*, %"struct.pov::Pattern_Struct"** %7, align 8
  %192 = getelementptr inbounds %"struct.pov::Pattern_Struct", %"struct.pov::Pattern_Struct"* %191, i32 0, i32 10
  %193 = bitcast %union.anon.25* %192 to %struct.anon.31*
  %194 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %193, i32 0, i32 5
  %195 = load double, double* %194, align 8
  %_50 = fsub double %190, %195
  %gen51 = fmul double %_50, %195
  %_52 = fsub double -0.000000e+00, %190
  %gen53 = fadd double %_52, %195
  %_54 = fsub double %190, %195
  %gen55 = fmul double %_54, %195
  %196 = fmul double %190, %195
  store double %196, double* %6, align 8
  br label %originalBB35

originalBB59alteredBB:                            ; preds = %originalBB59, %147
  store double 0.000000e+00, double* %6, align 8
  br label %originalBB59
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN3povL30InitializeBinomialCoefficientsEv() #2 {
  %1 = load i32, i32* @x.147
  %2 = load i32, i32* @y.148
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %0
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32* getelementptr inbounds ([595 x i32], [595 x i32]* @_ZN3pov20BinomialCoefficientsE, i32 0, i32 0), i32** %9, align 8
  %14 = load i32*, i32** %9, align 8
  store i32 1, i32* %14, align 4
  %15 = load i32*, i32** %9, align 8
  %16 = getelementptr inbounds i32, i32* %15, i32 1
  store i32* %16, i32** %9, align 8
  store i32 1, i32* %10, align 4
  %17 = load i32, i32* @x.147
  %18 = load i32, i32* @y.148
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %25

; <label>:25:                                     ; preds = %93, %originalBBpart2
  %26 = load i32, i32* @x.147
  %27 = load i32, i32* @y.148
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %25
  %34 = load i32, i32* %10, align 4
  %35 = icmp ule i32 %34, 33
  %36 = load i32, i32* @x.147
  %37 = load i32, i32* @y.148
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %35, label %44, label %96

; <label>:44:                                     ; preds = %originalBBpart24
  %45 = load i32*, i32** %9, align 8
  store i32 1, i32* %45, align 4
  %46 = load i32*, i32** %9, align 8
  %47 = getelementptr inbounds i32, i32* %46, i32 1
  store i32* %47, i32** %9, align 8
  store i32 1, i32* %11, align 4
  br label %48

; <label>:48:                                     ; preds = %originalBBpart214, %44
  %49 = load i32, i32* %11, align 4
  %50 = load i32, i32* %10, align 4
  %51 = icmp ult i32 %49, %50
  br i1 %51, label %52, label %89

; <label>:52:                                     ; preds = %48
  %53 = load i32*, i32** %9, align 8
  %54 = load i32, i32* %10, align 4
  %55 = add i32 %54, 1
  %56 = zext i32 %55 to i64
  %57 = sub i64 0, %56
  %58 = getelementptr inbounds i32, i32* %53, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = load i32*, i32** %9, align 8
  %61 = load i32, i32* %10, align 4
  %62 = zext i32 %61 to i64
  %63 = sub i64 0, %62
  %64 = getelementptr inbounds i32, i32* %60, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = add nsw i32 %59, %65
  %67 = load i32*, i32** %9, align 8
  store i32 %66, i32* %67, align 4
  %68 = load i32*, i32** %9, align 8
  %69 = getelementptr inbounds i32, i32* %68, i32 1
  store i32* %69, i32** %9, align 8
  br label %70

; <label>:70:                                     ; preds = %52
  %71 = load i32, i32* @x.147
  %72 = load i32, i32* @y.148
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %originalBB6alteredBB, %70
  %79 = load i32, i32* %11, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %11, align 4
  %81 = load i32, i32* @x.147
  %82 = load i32, i32* @y.148
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart214, label %originalBB6alteredBB

originalBBpart214:                                ; preds = %originalBB6
  br label %48

; <label>:89:                                     ; preds = %48
  %90 = load i32*, i32** %9, align 8
  store i32 1, i32* %90, align 4
  %91 = load i32*, i32** %9, align 8
  %92 = getelementptr inbounds i32, i32* %91, i32 1
  store i32* %92, i32** %9, align 8
  br label %93

; <label>:93:                                     ; preds = %89
  %94 = load i32, i32* %10, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %10, align 4
  br label %25

; <label>:96:                                     ; preds = %originalBBpart24
  store i32* getelementptr inbounds ([595 x i32], [595 x i32]* @_ZN3pov20BinomialCoefficientsE, i32 0, i64 1), i32** %9, align 8
  store i32 1, i32* %12, align 4
  br label %97

; <label>:97:                                     ; preds = %166, %96
  %98 = load i32, i32* @x.147
  %99 = load i32, i32* @y.148
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %originalBB16alteredBB, %97
  %106 = load i32, i32* %12, align 4
  %107 = icmp ule i32 %106, 33
  %108 = load i32, i32* @x.147
  %109 = load i32, i32* @y.148
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br i1 %107, label %116, label %169

; <label>:116:                                    ; preds = %originalBBpart218
  %117 = load i32*, i32** %9, align 8
  %118 = getelementptr inbounds i32, i32* %117, i32 1
  store i32* %118, i32** %9, align 8
  store i32 1, i32* %13, align 4
  br label %119

; <label>:119:                                    ; preds = %135, %116
  %120 = load i32, i32* %13, align 4
  %121 = load i32, i32* %12, align 4
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %123, label %138

; <label>:123:                                    ; preds = %119
  %124 = load i32, i32* %13, align 4
  %125 = and i32 %124, 2
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %127, label %132

; <label>:127:                                    ; preds = %123
  %128 = load i32*, i32** %9, align 8
  %129 = load i32, i32* %128, align 4
  %130 = sub nsw i32 0, %129
  %131 = load i32*, i32** %9, align 8
  store i32 %130, i32* %131, align 4
  br label %132

; <label>:132:                                    ; preds = %127, %123
  %133 = load i32*, i32** %9, align 8
  %134 = getelementptr inbounds i32, i32* %133, i32 1
  store i32* %134, i32** %9, align 8
  br label %135

; <label>:135:                                    ; preds = %132
  %136 = load i32, i32* %13, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %13, align 4
  br label %119

; <label>:138:                                    ; preds = %119
  %139 = load i32, i32* %12, align 4
  %140 = and i32 %139, 2
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %142, label %163

; <label>:142:                                    ; preds = %138
  %143 = load i32, i32* @x.147
  %144 = load i32, i32* @y.148
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %originalBB20alteredBB, %142
  %151 = load i32*, i32** %9, align 8
  %152 = load i32, i32* %151, align 4
  %153 = sub nsw i32 0, %152
  %154 = load i32*, i32** %9, align 8
  store i32 %153, i32* %154, align 4
  %155 = load i32, i32* @x.147
  %156 = load i32, i32* @y.148
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart232, label %originalBB20alteredBB

originalBBpart232:                                ; preds = %originalBB20
  br label %163

; <label>:163:                                    ; preds = %originalBBpart232, %138
  %164 = load i32*, i32** %9, align 8
  %165 = getelementptr inbounds i32, i32* %164, i32 1
  store i32* %165, i32** %9, align 8
  br label %166

; <label>:166:                                    ; preds = %163
  %167 = load i32, i32* %12, align 4
  %168 = add i32 %167, 1
  store i32 %168, i32* %12, align 4
  br label %97

; <label>:169:                                    ; preds = %originalBBpart218
  store i8 1, i8* @_ZN3pov26BinomialCoefficientsInitedE, align 1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %0
  %170 = alloca i32*, align 8
  %171 = alloca i32, align 4
  %172 = alloca i32, align 4
  %173 = alloca i32, align 4
  %174 = alloca i32, align 4
  store i32* getelementptr inbounds ([595 x i32], [595 x i32]* @_ZN3pov20BinomialCoefficientsE, i32 0, i32 0), i32** %170, align 8
  %175 = load i32*, i32** %170, align 8
  store i32 1, i32* %175, align 4
  %176 = load i32*, i32** %170, align 8
  %177 = getelementptr inbounds i32, i32* %176, i32 1
  store i32* %177, i32** %170, align 8
  store i32 1, i32* %171, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %178 = load i32, i32* %10, align 4
  %179 = icmp ule i32 %178, 33
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %70
  %180 = load i32, i32* %11, align 4
  %_ = shl i32 %180, 1
  %_7 = shl i32 %180, 1
  %_8 = sub i32 %180, 1
  %gen = mul i32 %_8, 1
  %_9 = sub i32 0, %180
  %gen10 = add i32 %_9, 1
  %_11 = sub i32 %180, 1
  %gen12 = mul i32 %_11, 1
  %181 = add i32 %180, 1
  store i32 %181, i32* %11, align 4
  br label %originalBB6

originalBB16alteredBB:                            ; preds = %originalBB16, %97
  %182 = load i32, i32* %12, align 4
  %183 = icmp ule i32 %182, 33
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %142
  %184 = load i32*, i32** %9, align 8
  %185 = load i32, i32* %184, align 4
  %_21 = sub i32 0, %185
  %gen22 = mul i32 %_21, %185
  %_23 = sub i32 0, %185
  %gen24 = mul i32 %_23, %185
  %_25 = shl i32 0, %185
  %_26 = sub i32 0, %185
  %gen27 = mul i32 %_26, %185
  %_28 = sub i32 0, 0
  %gen29 = add i32 %_28, %185
  %_30 = shl i32 0, %185
  %186 = sub nsw i32 0, %185
  %187 = load i32*, i32** %9, align 8
  store i32 %186, i32* %187, align 4
  br label %originalBB20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZSt3powdi(double, i32) #2 comdat {
  %3 = alloca double, align 8
  %4 = alloca i32, align 4
  store double %0, double* %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load double, double* %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = call double @llvm.powi.f64(double %5, i32 %6)
  ret double %7
}

; Function Attrs: nounwind readnone
declare double @llvm.powi.f64(double, i32) #6

; Function Attrs: nounwind
declare double @sin(double) #3

declare zeroext i1 @_ZN3pov13Inside_ObjectEPdPNS_13Object_StructE(double*, %"struct.pov::Object_Struct"*) #1

declare i32 @_ZN3pov15Compute_PigmentEPfPNS_14Pigment_StructEPdPNS_10istk_entryE(float*, %"struct.pov::Pigment_Struct"*, double*, %"struct.pov::istk_entry"*) #1

; Function Attrs: nounwind
declare double @atan2(double, double) #3

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3pov7VLengthERdPKd(double* dereferenceable(8), double*) #2 comdat {
  %3 = load i32, i32* @x.151
  %4 = load i32, i32* @y.152
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %2
  %11 = alloca double*, align 8
  %12 = alloca double*, align 8
  store double* %0, double** %11, align 8
  store double* %1, double** %12, align 8
  %13 = load double*, double** %12, align 8
  %14 = getelementptr inbounds double, double* %13, i64 0
  %15 = load double, double* %14, align 8
  %16 = load double*, double** %12, align 8
  %17 = getelementptr inbounds double, double* %16, i64 0
  %18 = load double, double* %17, align 8
  %19 = fmul double %15, %18
  %20 = load double*, double** %12, align 8
  %21 = getelementptr inbounds double, double* %20, i64 1
  %22 = load double, double* %21, align 8
  %23 = load double*, double** %12, align 8
  %24 = getelementptr inbounds double, double* %23, i64 1
  %25 = load double, double* %24, align 8
  %26 = fmul double %22, %25
  %27 = fadd double %19, %26
  %28 = load double*, double** %12, align 8
  %29 = getelementptr inbounds double, double* %28, i64 2
  %30 = load double, double* %29, align 8
  %31 = load double*, double** %12, align 8
  %32 = getelementptr inbounds double, double* %31, i64 2
  %33 = load double, double* %32, align 8
  %34 = fmul double %30, %33
  %35 = fadd double %27, %34
  %36 = call double @sqrt(double %35) #7
  %37 = load double*, double** %11, align 8
  store double %36, double* %37, align 8
  %38 = load i32, i32* @x.151
  %39 = load i32, i32* @y.152
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %46 = alloca double*, align 8
  %47 = alloca double*, align 8
  store double* %0, double** %46, align 8
  store double* %1, double** %47, align 8
  %48 = load double*, double** %47, align 8
  %49 = getelementptr inbounds double, double* %48, i64 0
  %50 = load double, double* %49, align 8
  %51 = load double*, double** %47, align 8
  %52 = getelementptr inbounds double, double* %51, i64 0
  %53 = load double, double* %52, align 8
  %54 = fmul double %50, %53
  %55 = load double*, double** %47, align 8
  %56 = getelementptr inbounds double, double* %55, i64 1
  %57 = load double, double* %56, align 8
  %58 = load double*, double** %47, align 8
  %59 = getelementptr inbounds double, double* %58, i64 1
  %60 = load double, double* %59, align 8
  %_ = fsub double %57, %60
  %gen = fmul double %_, %60
  %_1 = fsub double -0.000000e+00, %57
  %gen2 = fadd double %_1, %60
  %61 = fmul double %57, %60
  %_3 = fsub double -0.000000e+00, %54
  %gen4 = fadd double %_3, %61
  %_5 = fsub double %54, %61
  %gen6 = fmul double %_5, %61
  %_7 = fsub double -0.000000e+00, %54
  %gen8 = fadd double %_7, %61
  %_9 = fsub double %54, %61
  %gen10 = fmul double %_9, %61
  %_11 = fsub double %54, %61
  %gen12 = fmul double %_11, %61
  %62 = fadd double %54, %61
  %63 = load double*, double** %47, align 8
  %64 = getelementptr inbounds double, double* %63, i64 2
  %65 = load double, double* %64, align 8
  %66 = load double*, double** %47, align 8
  %67 = getelementptr inbounds double, double* %66, i64 2
  %68 = load double, double* %67, align 8
  %_13 = fsub double %65, %68
  %gen14 = fmul double %_13, %68
  %_15 = fsub double %65, %68
  %gen16 = fmul double %_15, %68
  %_17 = fsub double -0.000000e+00, %65
  %gen18 = fadd double %_17, %68
  %_19 = fsub double %65, %68
  %gen20 = fmul double %_19, %68
  %_21 = fsub double -0.000000e+00, %65
  %gen22 = fadd double %_21, %68
  %69 = fmul double %65, %68
  %_23 = fsub double %62, %69
  %gen24 = fmul double %_23, %69
  %_25 = fsub double %62, %69
  %gen26 = fmul double %_25, %69
  %70 = fadd double %62, %69
  %71 = call double @sqrt(double %70) #7
  %72 = load double*, double** %46, align 8
  store double %71, double* %72, align 8
  br label %originalBB
}

; Function Attrs: nounwind
declare double @asin(double) #3

declare void @_ZN3pov11DTurbulenceEPdS0_PNS_11Turb_StructE(double*, double*, %"struct.pov::Turb_Struct"*) #1

declare i64 @ftell(%struct._IO_FILE*) #1

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZN8pov_base7IStream9Read_ByteEv(%"class.pov_base::IStream"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.153
  %3 = load i32, i32* @y.154
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %originalBBalteredBB, %1
  %10 = alloca %"class.pov_base::IStream"*, align 8
  store %"class.pov_base::IStream"* %0, %"class.pov_base::IStream"** %10, align 8
  %11 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %10, align 8
  %12 = bitcast %"class.pov_base::IStream"* %11 to %"class.pov_base::IOBase"*
  %13 = getelementptr inbounds %"class.pov_base::IOBase", %"class.pov_base::IOBase"* %12, i32 0, i32 1
  %14 = load i8, i8* %13, align 8
  %15 = trunc i8 %14 to i1
  %16 = load i32, i32* @x.153
  %17 = load i32, i32* @y.154
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %25

; <label>:24:                                     ; preds = %originalBBpart2
  br label %46

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load i32, i32* @x.153
  %27 = load i32, i32* @y.154
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %originalBB1alteredBB, %25
  %34 = bitcast %"class.pov_base::IStream"* %11 to %"class.pov_base::IOBase"*
  %35 = getelementptr inbounds %"class.pov_base::IOBase", %"class.pov_base::IOBase"* %34, i32 0, i32 2
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %35, align 8
  %37 = call i32 @fgetc(%struct._IO_FILE* %36)
  %38 = load i32, i32* @x.153
  %39 = load i32, i32* @y.154
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:46:                                     ; preds = %originalBBpart24, %24
  %47 = phi i32 [ -1, %24 ], [ %37, %originalBBpart24 ]
  ret i32 %47

originalBBalteredBB:                              ; preds = %originalBB, %1
  %48 = alloca %"class.pov_base::IStream"*, align 8
  store %"class.pov_base::IStream"* %0, %"class.pov_base::IStream"** %48, align 8
  %49 = load %"class.pov_base::IStream"*, %"class.pov_base::IStream"** %48, align 8
  %50 = bitcast %"class.pov_base::IStream"* %49 to %"class.pov_base::IOBase"*
  %51 = getelementptr inbounds %"class.pov_base::IOBase", %"class.pov_base::IOBase"* %50, i32 0, i32 1
  %52 = load i8, i8* %51, align 8
  %53 = trunc i8 %52 to i1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %54 = bitcast %"class.pov_base::IStream"* %11 to %"class.pov_base::IOBase"*
  %55 = getelementptr inbounds %"class.pov_base::IOBase", %"class.pov_base::IOBase"* %54, i32 0, i32 2
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %55, align 8
  %57 = call i32 @fgetc(%struct._IO_FILE* %56)
  br label %originalBB1
}

declare i32 @fgetc(%struct._IO_FILE*) #1

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
